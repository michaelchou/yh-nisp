(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
module.exports=﻿[{
		"CLD_MENU" : [{
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "030001",
				"ID_MENU_SUP" : "030000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B03_01TRANSFERACCOUNT",
				"NAM_ICON" : "B03_01TRANSFERACCOUNT.png",
				"NAM_MENU" : "我要转账",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "01",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "我要转账",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "040001",
				"ID_MENU_SUP" : "040000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B04_01REGLOSSURGENT",
				"NAM_ICON" : "B04_01REGLOSSURGENT.png",
				"NAM_MENU" : "紧急挂失",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "01",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "紧急挂失",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "010002",
				"ID_MENU_SUP" : "010000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B01_02MODIFYINFO",
				"NAM_ICON" : "B01_02MODIFYINFO.png",
				"NAM_MENU" : "资料修改",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "02",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "资料修改",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "020002",
				"ID_MENU_SUP" : "020000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B02_02REAPPLYCERT",
				"NAM_ICON" : "B02_02REAPPLYCERT.png",
				"NAM_MENU" : "补办网银证书",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "02",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "补办网银证书",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "030002",
				"ID_MENU_SUP" : "030000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B03_02CCLDELAYTRANS",
				"NAM_ICON" : "B03_02CCLDELAYTRANS.png",
				"NAM_MENU" : "延时转账撤销",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "02",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "延时转账撤销",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "040002",
				"ID_MENU_SUP" : "040000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B04_02REGLOSSFORCARD",
				"NAM_ICON" : "B04_02REGLOSSFORCARD.png",
				"NAM_MENU" : "挂失补卡",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "02",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "挂失补卡",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "010003",
				"ID_MENU_SUP" : "010000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B01_03CHANGECARD",
				"NAM_ICON" : "B01_03CHANGECARD.png",
				"NAM_MENU" : "我要换卡",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "03",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "我要换卡",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "040003",
				"ID_MENU_SUP" : "040000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B04_03CLOSECARD",
				"NAM_ICON" : "B04_03CLOSECARD.png",
				"NAM_MENU" : "我要销卡",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "03",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "我要销卡",
				"TXT_MOD_VIS" : "1110000000"
			}
		],
		"COD_MENU_LVL" : "1",
		"ID_MENU" : "990000",
		"ID_MENU_SUP" : "000000",
		"IND_MENU" : "1",
		"NAM_ACTION" : "STA_B00_00COMMENU",
		"NAM_ICON" : "B00_00COMMENU.png",
		"NAM_MENU" : "常用菜单",
		"NUM_ORG" : "99H999",
		"NUM_SEQ" : "00",
		"TXT_BUS_CTL" : "1110000000",
		"TXT_INTRO" : "常用菜单",
		"TXT_MOD_VIS" : "1110000000"
	}, {
		"CLD_MENU" : [{
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "010001",
				"ID_MENU_SUP" : "010000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B01_01OPENCARD",
				"NAM_ICON" : "B01_01OPENCARD.png",
				"NAM_MENU" : "我要开卡",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "01",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "我要开卡",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "010002",
				"ID_MENU_SUP" : "010000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B01_02MODIFYINFO",
				"NAM_ICON" : "B01_02MODIFYINFO.png",
				"NAM_MENU" : "资料修改",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "02",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "资料修改",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "010003",
				"ID_MENU_SUP" : "010000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B01_03CHANGECARD",
				"NAM_ICON" : "B01_03CHANGECARD.png",
				"NAM_MENU" : "我要换卡",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "03",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "我要换卡",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "010004",
				"ID_MENU_SUP" : "010000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B01_04ACTIVATECARD",
				"NAM_ICON" : "B01_04ACTIVATECARD.png",
				"NAM_MENU" : "借记卡激活",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "04",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "借记卡激活",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "010005",
				"ID_MENU_SUP" : "010000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B01_05FEERELIEFREG",
				"NAM_ICON" : "B01_05FEERELIEFREG.png",
				"NAM_MENU" : "双费减免登记/删除",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "05",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "双费减免登记/删除",
				"TXT_MOD_VIS" : "1110000000"
			}
		],
		"COD_MENU_LVL" : "1",
		"ID_MENU" : "010000",
		"ID_MENU_SUP" : "000000",
		"IND_MENU" : "1",
		"NAM_ACTION" : "STA_B01_00CARD",
		"NAM_ICON" : "B01_00CARD.png",
		"NAM_MENU" : "银行卡业务",
		"NUM_ORG" : "99H999",
		"NUM_SEQ" : "01",
		"TXT_BUS_CTL" : "1110000000",
		"TXT_INTRO" : "银行卡业务",
		"TXT_MOD_VIS" : "1110000000"
	}, {
		"CLD_MENU" : [{
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "020001",
				"ID_MENU_SUP" : "020000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B02_01SIGNEBANK",
				"NAM_ICON" : "B02_01SIGNEBANK.png",
				"NAM_MENU" : "电子银行签约",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "01",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "电子银行签约",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "020002",
				"ID_MENU_SUP" : "020000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B02_02REAPPLYCERT",
				"NAM_ICON" : "B02_02REAPPLYCERT.png",
				"NAM_MENU" : "补办网银证书",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "02",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "补办网银证书",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "020003",
				"ID_MENU_SUP" : "020000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B02_03REPRTKCODE",
				"NAM_ICON" : "B02_03REPRTKCODE.png",
				"NAM_MENU" : "补打K令激活码",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "03",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "补打K令激活码",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "020004",
				"ID_MENU_SUP" : "020000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B02_04LOADECASH",
				"NAM_ICON" : "B02_04LOADECASH.png",
				"NAM_MENU" : "电子现金圈存",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "04",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "电子现金圈存",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "020005",
				"ID_MENU_SUP" : "020000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B02_05UNLOADECASH",
				"NAM_ICON" : "B02_05UNLOADECASH.png",
				"NAM_MENU" : "电子现金圈提",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "05",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "电子现金圈提",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "020006",
				"ID_MENU_SUP" : "020000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B02_06DELPHONE",
				"NAM_ICON" : "B02_06DELPHONE.png",
				"NAM_MENU" : "手机号删除",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "06",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "手机号删除",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "020007",
				"ID_MENU_SUP" : "020000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B02_07UNSIGNEBANK",
				"NAM_ICON" : "B02_07UNSIGNEBANK.png",
				"NAM_MENU" : "电子银行注销",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "07",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "电子银行注销",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "020008",
				"ID_MENU_SUP" : "020000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B02_08UNSIGNEBANKCARD",
				"NAM_ICON" : "B02_08UNSIGNEBANKCARD.png",
				"NAM_MENU" : "注销本卡电子银行",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "08",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "注销本卡电子银行",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "020009",
				"ID_MENU_SUP" : "020000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B02_09RESETLOGPWD",
				"NAM_ICON" : "B02_09RESETLOGPWD.png",
				"NAM_MENU" : "重置电子银行登录密码",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "09",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "重置电子银行登录密码",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "020010",
				"ID_MENU_SUP" : "020000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B02_10CHANGEKEYDEV",
				"NAM_ICON" : "B02_10CHANGEKEYDEV.png",
				"NAM_MENU" : "更换动态密码设备",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "10",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "更换动态密码设备",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "020011",
				"ID_MENU_SUP" : "020000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B02_11OPENECASH",
				"NAM_ICON" : "B02_11OPENECASH.png",
				"NAM_MENU" : "开立电子现金",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "11",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "开立电子现金",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "020012",
				"ID_MENU_SUP" : "020000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B02_12CLOSEECASH",
				"NAM_ICON" : "B02_12CLOSEECASH.png",
				"NAM_MENU" : "注销电子现金",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "12",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "注销电子现金",
				"TXT_MOD_VIS" : "1110000000"
			}
		],
		"COD_MENU_LVL" : "1",
		"ID_MENU" : "020000",
		"ID_MENU_SUP" : "000000",
		"IND_MENU" : "1",
		"NAM_ACTION" : "STA_B02_00EBANK",
		"NAM_ICON" : "B02_00EBANK.png",
		"NAM_MENU" : "电子银行业务",
		"NUM_ORG" : "99H999",
		"NUM_SEQ" : "02",
		"TXT_BUS_CTL" : "1110000000",
		"TXT_INTRO" : "电子银行业务",
		"TXT_MOD_VIS" : "1110000000"
	}, {
		"CLD_MENU" : [{
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "030001",
				"ID_MENU_SUP" : "030000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B03_01TRANSFERACCOUNT",
				"NAM_ICON" : "B03_01TRANSFERACCOUNT.png",
				"NAM_MENU" : "我要转账",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "01",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "我要转账",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "030002",
				"ID_MENU_SUP" : "030000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B03_02CCLDELAYTRANS",
				"NAM_ICON" : "B03_02CCLDELAYTRANS.png",
				"NAM_MENU" : "延时转账撤销",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "02",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "延时转账撤销",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "030003",
				"ID_MENU_SUP" : "030000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B03_03CORPCARD",
				"NAM_ICON" : "B03_03CORPCARD.png",
				"NAM_MENU" : "单位结算卡业务",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "03",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "单位结算卡业务",
				"TXT_MOD_VIS" : "1110000000"
			}
		],
		"COD_MENU_LVL" : "1",
		"ID_MENU" : "030000",
		"ID_MENU_SUP" : "000000",
		"IND_MENU" : "1",
		"NAM_ACTION" : "STA_B03_00TRANSFER",
		"NAM_ICON" : "B03_00TRANSFER.png",
		"NAM_MENU" : "转账业务",
		"NUM_ORG" : "99H999",
		"NUM_SEQ" : "03",
		"TXT_BUS_CTL" : "1110000000",
		"TXT_INTRO" : "转账业务",
		"TXT_MOD_VIS" : "1110000000"
	}, {
		"CLD_MENU" : [{
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "040001",
				"ID_MENU_SUP" : "040000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B04_01REGLOSSURGENT",
				"NAM_ICON" : "B04_01REGLOSSURGENT.png",
				"NAM_MENU" : "紧急挂失",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "01",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "紧急挂失",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "040002",
				"ID_MENU_SUP" : "040000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B04_02REGLOSSFORCARD",
				"NAM_ICON" : "B04_02REGLOSSFORCARD.png",
				"NAM_MENU" : "挂失补卡",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "02",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "挂失补卡",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "040003",
				"ID_MENU_SUP" : "040000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B04_03CLOSECARD",
				"NAM_ICON" : "B04_03CLOSECARD.png",
				"NAM_MENU" : "我要销卡",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "03",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "我要销卡",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "040004",
				"ID_MENU_SUP" : "040000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B04_04REGLOSSCLOSECARD",
				"NAM_ICON" : "B04_04REGLOSSCLOSECARD.png",
				"NAM_MENU" : "挂失销卡",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "04",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "挂失销卡",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "040005",
				"ID_MENU_SUP" : "040000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B04_05UPDATEID",
				"NAM_ICON" : "B04_05UPDATEID.png",
				"NAM_MENU" : "15位身份证升18位",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "05",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "15位身份证升18位",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "040006",
				"ID_MENU_SUP" : "040000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B04_06RESETPWD",
				"NAM_ICON" : "B04_06RESETPWD.png",
				"NAM_MENU" : "密码重置",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "06",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "密码重置",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "040007",
				"ID_MENU_SUP" : "040000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B04_07UNLOCKPWD",
				"NAM_ICON" : "B04_07UNLOCKPWD.png",
				"NAM_MENU" : "密码解锁",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "07",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "密码解锁",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "040008",
				"ID_MENU_SUP" : "040000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B04_08MODIFYPWD",
				"NAM_ICON" : "B04_08MODIFYPWD.png",
				"NAM_MENU" : "密码修改",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "08",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "密码解锁",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "040009",
				"ID_MENU_SUP" : "040000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B04_09UNREGLOSS",
				"NAM_ICON" : "B04_09UNREGLOSS.png",
				"NAM_MENU" : "解除挂失",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "09",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "解除挂失",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "040010",
				"ID_MENU_SUP" : "040000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B04_10QPASSNOPWD",
				"NAM_ICON" : "B04_10QPASSNOPWD.png",
				"NAM_MENU" : "小额闪付免密管理",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "10",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "小额闪付免密管理",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "040011",
				"ID_MENU_SUP" : "040000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B04_11EACCOUNTBIND",
				"NAM_ICON" : "B04_11EACCOUNTBIND.png",
				"NAM_MENU" : "Ⅱ类户绑定Ⅰ类户管理",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "11",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "Ⅱ类户绑定Ⅰ类户管理",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "040012",
				"ID_MENU_SUP" : "040000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B04_12ADJCARDGRADE",
				"NAM_ICON" : "B04_12ADJCARDGRADE.png",
				"NAM_MENU" : "借记卡升降级",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "12",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "借记卡升降级",
				"TXT_MOD_VIS" : "1110000000"
			}
		],
		"COD_MENU_LVL" : "1",
		"ID_MENU" : "040000",
		"ID_MENU_SUP" : "000000",
		"IND_MENU" : "1",
		"NAM_ACTION" : "STA_B04_00ACCOUNT",
		"NAM_ICON" : "B04_00ACCOUNT.png",
		"NAM_MENU" : "账户管理",
		"NUM_ORG" : "99H999",
		"NUM_SEQ" : "04",
		"TXT_BUS_CTL" : "1110000000",
		"TXT_INTRO" : "账户管理",
		"TXT_MOD_VIS" : "1110000000"
	}, {
		"CLD_MENU" : [{
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "050001",
				"ID_MENU_SUP" : "050000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B05_01SIGNFINANCE",
				"NAM_ICON" : "B05_01SIGNFINANCE.png",
				"NAM_MENU" : "理财签约",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "01",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "理财签约",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "050002",
				"ID_MENU_SUP" : "050000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B05_02EVALRISKLVL",
				"NAM_ICON" : "B05_02EVALRISKLVL.png",
				"NAM_MENU" : "客户风险评估",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "02",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "客户风险评估",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "050003",
				"ID_MENU_SUP" : "050000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B05_03LIVETODEAD",
				"NAM_ICON" : "B05_03LIVETODEAD.png",
				"NAM_MENU" : "活期转定期",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "03",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "活期转定期",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "050004",
				"ID_MENU_SUP" : "050000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B05_04DEADTOLIVE",
				"NAM_ICON" : "B05_04DEADTOLIVE.png",
				"NAM_MENU" : "定期转活期",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "04",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "定期转活期",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "050005",
				"ID_MENU_SUP" : "050000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B05_05SIGNDJT",
				"NAM_ICON" : "B05_05SIGNDJT.png",
				"NAM_MENU" : "存金通签约",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "05",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "存金通签约",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "050006",
				"ID_MENU_SUP" : "050000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B05_06BUYFINANCE",
				"NAM_ICON" : "B05_06BUYFINANCE.png",
				"NAM_MENU" : "购买理财",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "06",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "购买理财",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "050007",
				"ID_MENU_SUP" : "050000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B05_07WITHDRAWFINANCE",
				"NAM_ICON" : "B05_07WITHDRAWFINANCE.png",
				"NAM_MENU" : "理财赎回",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "07",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "理财赎回",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "050008",
				"ID_MENU_SUP" : "050000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B05_08CCLDELEGATEF",
				"NAM_ICON" : "B05_08CCLDELEGATEF.png",
				"NAM_MENU" : "理财委托撤销",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "08",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "理财委托撤销",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "050009",
				"ID_MENU_SUP" : "050000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B05_09SIGNSHLF",
				"NAM_ICON" : "B05_09SIGNSHLF.png",
				"NAM_MENU" : "双利丰签约",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "09",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "双利丰签约",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "050010",
				"ID_MENU_SUP" : "050000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B05_10SHLFTOLIVE",
				"NAM_ICON" : "B05_10SHLFTOLIVE.png",
				"NAM_MENU" : "双利丰转活期",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "10",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "双利丰转活期",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "050011",
				"ID_MENU_SUP" : "050000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B05_11SIGNCMZH",
				"NAM_ICON" : "B05_11SIGNCMZH.png",
				"NAM_MENU" : "聪明账签约",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "11",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "聪明账签约",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "050012",
				"ID_MENU_SUP" : "050000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B05_12SHSHPAY",
				"NAM_ICON" : "B05_12SHSHPAY.png",
				"NAM_MENU" : "时时付",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "12",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "时时付",
				"TXT_MOD_VIS" : "1110000000"
			}
		],
		"COD_MENU_LVL" : "1",
		"ID_MENU" : "050000",
		"ID_MENU_SUP" : "000000",
		"IND_MENU" : "1",
		"NAM_ACTION" : "STA_B05_00FINANCE",
		"NAM_ICON" : "B05_00FINANCE.png",
		"NAM_MENU" : "理财业务",
		"NUM_ORG" : "99H999",
		"NUM_SEQ" : "05",
		"TXT_BUS_CTL" : "1110000000",
		"TXT_INTRO" : "理财业务",
		"TXT_MOD_VIS" : "1110000000"
	}, {
		"CLD_MENU" : [{
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "060001",
				"ID_MENU_SUP" : "060000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B06_01SIGNFUND",
				"NAM_ICON" : "B06_01SIGNFUND.png",
				"NAM_MENU" : "基金签约",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "01",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "基金签约",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "060002",
				"ID_MENU_SUP" : "060000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B06_02SIGNFUNDTA",
				"NAM_ICON" : "B06_02SIGNFUNDTA.png",
				"NAM_MENU" : "基金TA账户签约",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "02",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "基金TA账户签约",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "060003",
				"ID_MENU_SUP" : "060000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B06_03BUYFUND",
				"NAM_ICON" : "B06_03BUYFUND.png",
				"NAM_MENU" : "基金购买",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "03",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "基金购买",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "060004",
				"ID_MENU_SUP" : "060000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B06_04WITHDRAWFUND",
				"NAM_ICON" : "B06_04WITHDRAWFUND.png",
				"NAM_MENU" : "基金赎回",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "04",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "基金赎回",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "060005",
				"ID_MENU_SUP" : "060000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B06_05CCLDELEGATED",
				"NAM_ICON" : "B06_05CCLDELEGATED.png",
				"NAM_MENU" : "基金委托撤销",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "05",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "基金委托撤销",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "060006",
				"ID_MENU_SUP" : "060000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B06_06SIGNPLANFUND",
				"NAM_ICON" : "B06_06SIGNPLANFUND.png",
				"NAM_MENU" : "基金定投签约",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "06",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "基金定投签约",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "060007",
				"ID_MENU_SUP" : "060000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B06_07UNSIGNPLANFUND",
				"NAM_ICON" : "B06_07UNSIGNPLANFUND.png",
				"NAM_MENU" : "基金定投解约",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "07",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "基金定投解约",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "060008",
				"ID_MENU_SUP" : "060000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B06_08MODIFYPLANFUND",
				"NAM_ICON" : "B06_08MODIFYPLANFUND.png",
				"NAM_MENU" : "基金定投修改",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "08",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "基金定投修改",
				"TXT_MOD_VIS" : "1110000000"
			}
		],
		"COD_MENU_LVL" : "1",
		"ID_MENU" : "060000",
		"ID_MENU_SUP" : "000000",
		"IND_MENU" : "1",
		"NAM_ACTION" : "STA_B06_00FUND",
		"NAM_ICON" : "B06_00FUND.png",
		"NAM_MENU" : "基金业务",
		"NUM_ORG" : "99H999",
		"NUM_SEQ" : "06",
		"TXT_BUS_CTL" : "1110000000",
		"TXT_INTRO" : "基金业务",
		"TXT_MOD_VIS" : "1110000000"
	}, {
		"CLD_MENU" : [{
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "070001",
				"ID_MENU_SUP" : "070000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B07_01ACCOUNTBAL",
				"NAM_ICON" : "B07_01ACCOUNTBAL.png",
				"NAM_MENU" : "账户余额",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "01",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "账户余额",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "070002",
				"ID_MENU_SUP" : "070000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B07_02ACCOUNTDETAIL",
				"NAM_ICON" : "B07_02ACCOUNTDETAIL.png",
				"NAM_MENU" : "基账户明细",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "02",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "账户明细",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "070003",
				"ID_MENU_SUP" : "070000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B07_03MYEBANK",
				"NAM_ICON" : "B07_03MYEBANK.png",
				"NAM_MENU" : "我的电子银行",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "03",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "我的电子银行",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "070004",
				"ID_MENU_SUP" : "070000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B07_04QRYFEERELIEF",
				"NAM_ICON" : "B07_04QRYFEERELIEF.png",
				"NAM_MENU" : "双费减免查询",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "04",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "双费减免查询",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "070005",
				"ID_MENU_SUP" : "070000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B07_05REPRTRECEIPT",
				"NAM_ICON" : "B07_05REPRTRECEIPT.png",
				"NAM_MENU" : "回单补打",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "05",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "回单补打",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "070006",
				"ID_MENU_SUP" : "070000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B07_06ONSALEFINANCE",
				"NAM_ICON" : "B07_06ONSALEFINANCE.png",
				"NAM_MENU" : "在售理财",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "06",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "在售理财",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "070007",
				"ID_MENU_SUP" : "070000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B07_07MYFINANCE",
				"NAM_ICON" : "B07_07MYFINANCE.png",
				"NAM_MENU" : "我的理财",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "07",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "我的理财",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "070008",
				"ID_MENU_SUP" : "070000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B07_08ONSALEFUND",
				"NAM_ICON" : "B07_08ONSALEFUND.png",
				"NAM_MENU" : "在售基金",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "08",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "在售基金",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "070009",
				"ID_MENU_SUP" : "070000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B07_09MYFUND",
				"NAM_ICON" : "B07_09MYFUND.png",
				"NAM_MENU" : "我的基金",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "09",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "我的基金",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "070010",
				"ID_MENU_SUP" : "070000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B07_10CORPACCDETAILPRT",
				"NAM_ICON" : "B07_10CORPACCDETAILPRT.png",
				"NAM_MENU" : "对公账户明细回单打印",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "10",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "对公账户明细回单打印",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "070011",
				"ID_MENU_SUP" : "070000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B07_11MYECASH",
				"NAM_ICON" : "B07_11MYECASH.png",
				"NAM_MENU" : "我的电子现金",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "11",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "我的电子现金",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "070012",
				"ID_MENU_SUP" : "070000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B07_12EACCOUNTBINDQRY",
				"NAM_ICON" : "B07_12EACCOUNTBINDQRY.png",
				"NAM_MENU" : "ⅠⅡ类户绑定查询",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "12",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "ⅠⅡ类户绑定查询",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "070013",
				"ID_MENU_SUP" : "070000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B07_13REGPASSBOOK",
				"NAM_ICON" : "B07_13REGPASSBOOK.png",
				"NAM_MENU" : "补登折",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "13",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "补登折",
				"TXT_MOD_VIS" : "1110000000"
			}
		],
		"COD_MENU_LVL" : "1",
		"ID_MENU" : "070000",
		"ID_MENU_SUP" : "000000",
		"IND_MENU" : "1",
		"NAM_ACTION" : "STA_B07_00QUERY",
		"NAM_ICON" : "B07_00QUERY.png",
		"NAM_MENU" : "查询业务",
		"NUM_ORG" : "99H999",
		"NUM_SEQ" : "07",
		"TXT_BUS_CTL" : "1110000000",
		"TXT_INTRO" : "查询业务",
		"TXT_MOD_VIS" : "1110000000"
	}, {
		"CLD_MENU" : [{
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "080001",
				"ID_MENU_SUP" : "080000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B08_01BUYFOREXC",
				"NAM_ICON" : "B08_01BUYFOREXC.png",
				"NAM_MENU" : "我要购汇",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "01",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "我要购汇",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "080002",
				"ID_MENU_SUP" : "080000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B08_02SELLFOREXC",
				"NAM_ICON" : "B08_02SELLFOREXC.png",
				"NAM_MENU" : "我要结汇",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "02",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "我要结汇",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "080003",
				"ID_MENU_SUP" : "080000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B08_03TRANSFERFOREXC",
				"NAM_ICON" : "B08_03TRANSFERFOREXC.png",
				"NAM_MENU" : "外汇汇出汇款",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "03",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "外汇汇出汇款",
				"TXT_MOD_VIS" : "1110000000"
			}
		],
		"COD_MENU_LVL" : "1",
		"ID_MENU" : "080000",
		"ID_MENU_SUP" : "000000",
		"IND_MENU" : "1",
		"NAM_ACTION" : "STA_B08_00FOREXC",
		"NAM_ICON" : "B08_00FOREXC.png",
		"NAM_MENU" : "外汇业务",
		"NUM_ORG" : "99H999",
		"NUM_SEQ" : "08",
		"TXT_BUS_CTL" : "1110000000",
		"TXT_INTRO" : "外汇业务",
		"TXT_MOD_VIS" : "1110000000"
	}, {
		"CLD_MENU" : [{
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "090001",
				"ID_MENU_SUP" : "090000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B09_01APLCREDITCARD",
				"NAM_ICON" : "B09_01APLCREDITCARD.png",
				"NAM_MENU" : "信用卡申请",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "01",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "信用卡申请",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "090002",
				"ID_MENU_SUP" : "090000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B09_02CASHDIVIDE",
				"NAM_ICON" : "B09_02CASHDIVIDE.png",
				"NAM_MENU" : "现金分期",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "02",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "现金分期",
				"TXT_MOD_VIS" : "1110000000"
			}
		],
		"COD_MENU_LVL" : "1",
		"ID_MENU" : "090000",
		"ID_MENU_SUP" : "000000",
		"IND_MENU" : "1",
		"NAM_ACTION" : "STA_B09_00CREDITCARD",
		"NAM_ICON" : "B09_00CREDITCARD.png",
		"NAM_MENU" : "信用卡业务",
		"NUM_ORG" : "99H999",
		"NUM_SEQ" : "09",
		"TXT_BUS_CTL" : "1110000000",
		"TXT_INTRO" : "信用卡业务",
		"TXT_MOD_VIS" : "1110000000"
	}, {
		"CLD_MENU" : [{
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "100001",
				"ID_MENU_SUP" : "100000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B10_01BUYINSURANCE",
				"NAM_ICON" : "B10_01BUYINSURANCE.png",
				"NAM_MENU" : "保险购买",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "01",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "保险购买",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "100002",
				"ID_MENU_SUP" : "100000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B10_02MYINSURANCE",
				"NAM_ICON" : "B10_02MYINSURANCE.png",
				"NAM_MENU" : "我的保险",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "02",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "我的保险",
				"TXT_MOD_VIS" : "1110000000"
			}
		],
		"COD_MENU_LVL" : "1",
		"ID_MENU" : "100000",
		"ID_MENU_SUP" : "000000",
		"IND_MENU" : "1",
		"NAM_ACTION" : "STA_B10_00INSURANCE",
		"NAM_ICON" : "B10_00INSURANCE.png",
		"NAM_MENU" : "保险业务",
		"NUM_ORG" : "99H999",
		"NUM_SEQ" : "10",
		"TXT_BUS_CTL" : "1110000000",
		"TXT_INTRO" : "保险业务",
		"TXT_MOD_VIS" : "1110000000"
	}, {
		"CLD_MENU" : [{
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "110001",
				"ID_MENU_SUP" : "110000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B11_01ORDERCOMCOIN",
				"NAM_ICON" : "B11_01ORDERCOMCOIN.png",
				"NAM_MENU" : "纪念币预约",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "01",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "纪念币预约",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "110002",
				"ID_MENU_SUP" : "110000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B11_02MYCOMCOIN",
				"NAM_ICON" : "B11_02MYCOMCOIN.png",
				"NAM_MENU" : "我的纪念币",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "02",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "我的纪念币",
				"TXT_MOD_VIS" : "1110000000"
			}, {
				"COD_MENU_LVL" : "2",
				"ID_MENU" : "110003",
				"ID_MENU_SUP" : "110000",
				"IND_MENU" : "1",
				"NAM_ACTION" : "STA_B11_03COMCOINNOTICE",
				"NAM_ICON" : "B11_03COMCOINNOTICE.png",
				"NAM_MENU" : "纪念币公告",
				"NUM_ORG" : "99H999",
				"NUM_SEQ" : "03",
				"TXT_BUS_CTL" : "1110000000",
				"TXT_INTRO" : "纪念币公告",
				"TXT_MOD_VIS" : "1110000000"
			}
		],
		"COD_MENU_LVL" : "1",
		"ID_MENU" : "110000",
		"ID_MENU_SUP" : "000000",
		"IND_MENU" : "1",
		"NAM_ACTION" : "STA_B11_00COMCOIN",
		"NAM_ICON" : "B11_00COMCOIN.png",
		"NAM_MENU" : "纪念币业务",
		"NUM_ORG" : "99H999",
		"NUM_SEQ" : "11",
		"TXT_BUS_CTL" : "1110000000",
		"TXT_INTRO" : "纪念币业务",
		"TXT_MOD_VIS" : "1110000000"
	}
]

},{}],2:[function(require,module,exports){
(function (global){
"use strict";

require("core-js/shim");

require("regenerator-runtime/runtime");

require("core-js/fn/regexp/escape");

if (global._babelPolyfill) {
  throw new Error("only one instance of babel-polyfill is allowed");
}
global._babelPolyfill = true;

var DEFINE_PROPERTY = "defineProperty";
function define(O, key, value) {
  O[key] || Object[DEFINE_PROPERTY](O, key, {
    writable: true,
    configurable: true,
    value: value
  });
}

define(String.prototype, "padLeft", "".padStart);
define(String.prototype, "padRight", "".padEnd);

"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
  [][key] && define(Array, key, Function.call.bind([][key]));
});
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"core-js/fn/regexp/escape":3,"core-js/shim":296,"regenerator-runtime/runtime":298}],3:[function(require,module,exports){
require('../../modules/core.regexp.escape');
module.exports = require('../../modules/_core').RegExp.escape;
},{"../../modules/_core":24,"../../modules/core.regexp.escape":120}],4:[function(require,module,exports){
module.exports = function(it){
  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
  return it;
};
},{}],5:[function(require,module,exports){
var cof = require('./_cof');
module.exports = function(it, msg){
  if(typeof it != 'number' && cof(it) != 'Number')throw TypeError(msg);
  return +it;
};
},{"./_cof":19}],6:[function(require,module,exports){
// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = require('./_wks')('unscopables')
  , ArrayProto  = Array.prototype;
if(ArrayProto[UNSCOPABLES] == undefined)require('./_hide')(ArrayProto, UNSCOPABLES, {});
module.exports = function(key){
  ArrayProto[UNSCOPABLES][key] = true;
};
},{"./_hide":41,"./_wks":118}],7:[function(require,module,exports){
module.exports = function(it, Constructor, name, forbiddenField){
  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};
},{}],8:[function(require,module,exports){
var isObject = require('./_is-object');
module.exports = function(it){
  if(!isObject(it))throw TypeError(it + ' is not an object!');
  return it;
};
},{"./_is-object":50}],9:[function(require,module,exports){
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
'use strict';
var toObject = require('./_to-object')
  , toIndex  = require('./_to-index')
  , toLength = require('./_to-length');

module.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){
  var O     = toObject(this)
    , len   = toLength(O.length)
    , to    = toIndex(target, len)
    , from  = toIndex(start, len)
    , end   = arguments.length > 2 ? arguments[2] : undefined
    , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)
    , inc   = 1;
  if(from < to && to < from + count){
    inc  = -1;
    from += count - 1;
    to   += count - 1;
  }
  while(count-- > 0){
    if(from in O)O[to] = O[from];
    else delete O[to];
    to   += inc;
    from += inc;
  } return O;
};
},{"./_to-index":106,"./_to-length":109,"./_to-object":110}],10:[function(require,module,exports){
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
'use strict';
var toObject = require('./_to-object')
  , toIndex  = require('./_to-index')
  , toLength = require('./_to-length');
module.exports = function fill(value /*, start = 0, end = @length */){
  var O      = toObject(this)
    , length = toLength(O.length)
    , aLen   = arguments.length
    , index  = toIndex(aLen > 1 ? arguments[1] : undefined, length)
    , end    = aLen > 2 ? arguments[2] : undefined
    , endPos = end === undefined ? length : toIndex(end, length);
  while(endPos > index)O[index++] = value;
  return O;
};
},{"./_to-index":106,"./_to-length":109,"./_to-object":110}],11:[function(require,module,exports){
var forOf = require('./_for-of');

module.exports = function(iter, ITERATOR){
  var result = [];
  forOf(iter, false, result.push, result, ITERATOR);
  return result;
};

},{"./_for-of":38}],12:[function(require,module,exports){
// false -> Array#indexOf
// true  -> Array#includes
var toIObject = require('./_to-iobject')
  , toLength  = require('./_to-length')
  , toIndex   = require('./_to-index');
module.exports = function(IS_INCLUDES){
  return function($this, el, fromIndex){
    var O      = toIObject($this)
      , length = toLength(O.length)
      , index  = toIndex(fromIndex, length)
      , value;
    // Array#includes uses SameValueZero equality algorithm
    if(IS_INCLUDES && el != el)while(length > index){
      value = O[index++];
      if(value != value)return true;
    // Array#toIndex ignores holes, Array#includes - not
    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
      if(O[index] === el)return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};
},{"./_to-index":106,"./_to-iobject":108,"./_to-length":109}],13:[function(require,module,exports){
// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx      = require('./_ctx')
  , IObject  = require('./_iobject')
  , toObject = require('./_to-object')
  , toLength = require('./_to-length')
  , asc      = require('./_array-species-create');
module.exports = function(TYPE, $create){
  var IS_MAP        = TYPE == 1
    , IS_FILTER     = TYPE == 2
    , IS_SOME       = TYPE == 3
    , IS_EVERY      = TYPE == 4
    , IS_FIND_INDEX = TYPE == 6
    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
    , create        = $create || asc;
  return function($this, callbackfn, that){
    var O      = toObject($this)
      , self   = IObject(O)
      , f      = ctx(callbackfn, that, 3)
      , length = toLength(self.length)
      , index  = 0
      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
      , val, res;
    for(;length > index; index++)if(NO_HOLES || index in self){
      val = self[index];
      res = f(val, index, O);
      if(TYPE){
        if(IS_MAP)result[index] = res;            // map
        else if(res)switch(TYPE){
          case 3: return true;                    // some
          case 5: return val;                     // find
          case 6: return index;                   // findIndex
          case 2: result.push(val);               // filter
        } else if(IS_EVERY)return false;          // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};
},{"./_array-species-create":16,"./_ctx":26,"./_iobject":46,"./_to-length":109,"./_to-object":110}],14:[function(require,module,exports){
var aFunction = require('./_a-function')
  , toObject  = require('./_to-object')
  , IObject   = require('./_iobject')
  , toLength  = require('./_to-length');

module.exports = function(that, callbackfn, aLen, memo, isRight){
  aFunction(callbackfn);
  var O      = toObject(that)
    , self   = IObject(O)
    , length = toLength(O.length)
    , index  = isRight ? length - 1 : 0
    , i      = isRight ? -1 : 1;
  if(aLen < 2)for(;;){
    if(index in self){
      memo = self[index];
      index += i;
      break;
    }
    index += i;
    if(isRight ? index < 0 : length <= index){
      throw TypeError('Reduce of empty array with no initial value');
    }
  }
  for(;isRight ? index >= 0 : length > index; index += i)if(index in self){
    memo = callbackfn(memo, self[index], index, O);
  }
  return memo;
};
},{"./_a-function":4,"./_iobject":46,"./_to-length":109,"./_to-object":110}],15:[function(require,module,exports){
var isObject = require('./_is-object')
  , isArray  = require('./_is-array')
  , SPECIES  = require('./_wks')('species');

module.exports = function(original){
  var C;
  if(isArray(original)){
    C = original.constructor;
    // cross-realm fallback
    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
    if(isObject(C)){
      C = C[SPECIES];
      if(C === null)C = undefined;
    }
  } return C === undefined ? Array : C;
};
},{"./_is-array":48,"./_is-object":50,"./_wks":118}],16:[function(require,module,exports){
// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = require('./_array-species-constructor');

module.exports = function(original, length){
  return new (speciesConstructor(original))(length);
};
},{"./_array-species-constructor":15}],17:[function(require,module,exports){
'use strict';
var aFunction  = require('./_a-function')
  , isObject   = require('./_is-object')
  , invoke     = require('./_invoke')
  , arraySlice = [].slice
  , factories  = {};

var construct = function(F, len, args){
  if(!(len in factories)){
    for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';
    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
  } return factories[len](F, args);
};

module.exports = Function.bind || function bind(that /*, args... */){
  var fn       = aFunction(this)
    , partArgs = arraySlice.call(arguments, 1);
  var bound = function(/* args... */){
    var args = partArgs.concat(arraySlice.call(arguments));
    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
  };
  if(isObject(fn.prototype))bound.prototype = fn.prototype;
  return bound;
};
},{"./_a-function":4,"./_invoke":45,"./_is-object":50}],18:[function(require,module,exports){
// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = require('./_cof')
  , TAG = require('./_wks')('toStringTag')
  // ES3 wrong here
  , ARG = cof(function(){ return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function(it, key){
  try {
    return it[key];
  } catch(e){ /* empty */ }
};

module.exports = function(it){
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};
},{"./_cof":19,"./_wks":118}],19:[function(require,module,exports){
var toString = {}.toString;

module.exports = function(it){
  return toString.call(it).slice(8, -1);
};
},{}],20:[function(require,module,exports){
'use strict';
var dP          = require('./_object-dp').f
  , create      = require('./_object-create')
  , redefineAll = require('./_redefine-all')
  , ctx         = require('./_ctx')
  , anInstance  = require('./_an-instance')
  , defined     = require('./_defined')
  , forOf       = require('./_for-of')
  , $iterDefine = require('./_iter-define')
  , step        = require('./_iter-step')
  , setSpecies  = require('./_set-species')
  , DESCRIPTORS = require('./_descriptors')
  , fastKey     = require('./_meta').fastKey
  , SIZE        = DESCRIPTORS ? '_s' : 'size';

var getEntry = function(that, key){
  // fast case
  var index = fastKey(key), entry;
  if(index !== 'F')return that._i[index];
  // frozen object case
  for(entry = that._f; entry; entry = entry.n){
    if(entry.k == key)return entry;
  }
};

module.exports = {
  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
    var C = wrapper(function(that, iterable){
      anInstance(that, C, NAME, '_i');
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear(){
        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
          entry.r = true;
          if(entry.p)entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function(key){
        var that  = this
          , entry = getEntry(that, key);
        if(entry){
          var next = entry.n
            , prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if(prev)prev.n = next;
          if(next)next.p = prev;
          if(that._f == entry)that._f = next;
          if(that._l == entry)that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /*, that = undefined */){
        anInstance(this, C, 'forEach');
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
          , entry;
        while(entry = entry ? entry.n : this._f){
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while(entry && entry.r)entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key){
        return !!getEntry(this, key);
      }
    });
    if(DESCRIPTORS)dP(C.prototype, 'size', {
      get: function(){
        return defined(this[SIZE]);
      }
    });
    return C;
  },
  def: function(that, key, value){
    var entry = getEntry(that, key)
      , prev, index;
    // change existing entry
    if(entry){
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if(!that._f)that._f = entry;
      if(prev)prev.n = entry;
      that[SIZE]++;
      // add to index
      if(index !== 'F')that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function(C, NAME, IS_MAP){
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function(iterated, kind){
      this._t = iterated;  // target
      this._k = kind;      // kind
      this._l = undefined; // previous
    }, function(){
      var that  = this
        , kind  = that._k
        , entry = that._l;
      // revert to the last existing entry
      while(entry && entry.r)entry = entry.p;
      // get next entry
      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if(kind == 'keys'  )return step(0, entry.k);
      if(kind == 'values')return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};
},{"./_an-instance":7,"./_ctx":26,"./_defined":28,"./_descriptors":29,"./_for-of":38,"./_iter-define":54,"./_iter-step":56,"./_meta":63,"./_object-create":67,"./_object-dp":68,"./_redefine-all":87,"./_set-species":92}],21:[function(require,module,exports){
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var classof = require('./_classof')
  , from    = require('./_array-from-iterable');
module.exports = function(NAME){
  return function toJSON(){
    if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
    return from(this);
  };
};
},{"./_array-from-iterable":11,"./_classof":18}],22:[function(require,module,exports){
'use strict';
var redefineAll       = require('./_redefine-all')
  , getWeak           = require('./_meta').getWeak
  , anObject          = require('./_an-object')
  , isObject          = require('./_is-object')
  , anInstance        = require('./_an-instance')
  , forOf             = require('./_for-of')
  , createArrayMethod = require('./_array-methods')
  , $has              = require('./_has')
  , arrayFind         = createArrayMethod(5)
  , arrayFindIndex    = createArrayMethod(6)
  , id                = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function(that){
  return that._l || (that._l = new UncaughtFrozenStore);
};
var UncaughtFrozenStore = function(){
  this.a = [];
};
var findUncaughtFrozen = function(store, key){
  return arrayFind(store.a, function(it){
    return it[0] === key;
  });
};
UncaughtFrozenStore.prototype = {
  get: function(key){
    var entry = findUncaughtFrozen(this, key);
    if(entry)return entry[1];
  },
  has: function(key){
    return !!findUncaughtFrozen(this, key);
  },
  set: function(key, value){
    var entry = findUncaughtFrozen(this, key);
    if(entry)entry[1] = value;
    else this.a.push([key, value]);
  },
  'delete': function(key){
    var index = arrayFindIndex(this.a, function(it){
      return it[0] === key;
    });
    if(~index)this.a.splice(index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
    var C = wrapper(function(that, iterable){
      anInstance(that, C, NAME, '_i');
      that._i = id++;      // collection id
      that._l = undefined; // leak store for uncaught frozen objects
      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.3.3.2 WeakMap.prototype.delete(key)
      // 23.4.3.3 WeakSet.prototype.delete(value)
      'delete': function(key){
        if(!isObject(key))return false;
        var data = getWeak(key);
        if(data === true)return uncaughtFrozenStore(this)['delete'](key);
        return data && $has(data, this._i) && delete data[this._i];
      },
      // 23.3.3.4 WeakMap.prototype.has(key)
      // 23.4.3.4 WeakSet.prototype.has(value)
      has: function has(key){
        if(!isObject(key))return false;
        var data = getWeak(key);
        if(data === true)return uncaughtFrozenStore(this).has(key);
        return data && $has(data, this._i);
      }
    });
    return C;
  },
  def: function(that, key, value){
    var data = getWeak(anObject(key), true);
    if(data === true)uncaughtFrozenStore(that).set(key, value);
    else data[that._i] = value;
    return that;
  },
  ufstore: uncaughtFrozenStore
};
},{"./_an-instance":7,"./_an-object":8,"./_array-methods":13,"./_for-of":38,"./_has":40,"./_is-object":50,"./_meta":63,"./_redefine-all":87}],23:[function(require,module,exports){
'use strict';
var global            = require('./_global')
  , $export           = require('./_export')
  , redefine          = require('./_redefine')
  , redefineAll       = require('./_redefine-all')
  , meta              = require('./_meta')
  , forOf             = require('./_for-of')
  , anInstance        = require('./_an-instance')
  , isObject          = require('./_is-object')
  , fails             = require('./_fails')
  , $iterDetect       = require('./_iter-detect')
  , setToStringTag    = require('./_set-to-string-tag')
  , inheritIfRequired = require('./_inherit-if-required');

module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
  var Base  = global[NAME]
    , C     = Base
    , ADDER = IS_MAP ? 'set' : 'add'
    , proto = C && C.prototype
    , O     = {};
  var fixMethod = function(KEY){
    var fn = proto[KEY];
    redefine(proto, KEY,
      KEY == 'delete' ? function(a){
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a){
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a){
        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }
        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }
    );
  };
  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
    new C().entries().next();
  }))){
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    var instance             = new C
      // early implementations not supports chaining
      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })
      // most early implementations doesn't supports iterables, most modern - not close it correctly
      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new
      // for early implementations -0 and +0 not the same
      , BUGGY_ZERO = !IS_WEAK && fails(function(){
        // V8 ~ Chromium 42- fails only with 5+ elements
        var $instance = new C()
          , index     = 5;
        while(index--)$instance[ADDER](index, index);
        return !$instance.has(-0);
      });
    if(!ACCEPT_ITERABLES){ 
      C = wrapper(function(target, iterable){
        anInstance(target, C, NAME);
        var that = inheritIfRequired(new Base, target, C);
        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
        return that;
      });
      C.prototype = proto;
      proto.constructor = C;
    }
    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }
    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);
    // weak collections should not contains .clear method
    if(IS_WEAK && proto.clear)delete proto.clear;
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F * (C != Base), O);

  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);

  return C;
};
},{"./_an-instance":7,"./_export":33,"./_fails":35,"./_for-of":38,"./_global":39,"./_inherit-if-required":44,"./_is-object":50,"./_iter-detect":55,"./_meta":63,"./_redefine":88,"./_redefine-all":87,"./_set-to-string-tag":93}],24:[function(require,module,exports){
var core = module.exports = {version: '2.4.0'};
if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef
},{}],25:[function(require,module,exports){
'use strict';
var $defineProperty = require('./_object-dp')
  , createDesc      = require('./_property-desc');

module.exports = function(object, index, value){
  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};
},{"./_object-dp":68,"./_property-desc":86}],26:[function(require,module,exports){
// optional / simple context binding
var aFunction = require('./_a-function');
module.exports = function(fn, that, length){
  aFunction(fn);
  if(that === undefined)return fn;
  switch(length){
    case 1: return function(a){
      return fn.call(that, a);
    };
    case 2: return function(a, b){
      return fn.call(that, a, b);
    };
    case 3: return function(a, b, c){
      return fn.call(that, a, b, c);
    };
  }
  return function(/* ...args */){
    return fn.apply(that, arguments);
  };
};
},{"./_a-function":4}],27:[function(require,module,exports){
'use strict';
var anObject    = require('./_an-object')
  , toPrimitive = require('./_to-primitive')
  , NUMBER      = 'number';

module.exports = function(hint){
  if(hint !== 'string' && hint !== NUMBER && hint !== 'default')throw TypeError('Incorrect hint');
  return toPrimitive(anObject(this), hint != NUMBER);
};
},{"./_an-object":8,"./_to-primitive":111}],28:[function(require,module,exports){
// 7.2.1 RequireObjectCoercible(argument)
module.exports = function(it){
  if(it == undefined)throw TypeError("Can't call method on  " + it);
  return it;
};
},{}],29:[function(require,module,exports){
// Thank's IE8 for his funny defineProperty
module.exports = !require('./_fails')(function(){
  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
});
},{"./_fails":35}],30:[function(require,module,exports){
var isObject = require('./_is-object')
  , document = require('./_global').document
  // in old IE typeof document.createElement is 'object'
  , is = isObject(document) && isObject(document.createElement);
module.exports = function(it){
  return is ? document.createElement(it) : {};
};
},{"./_global":39,"./_is-object":50}],31:[function(require,module,exports){
// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');
},{}],32:[function(require,module,exports){
// all enumerable object keys, includes symbols
var getKeys = require('./_object-keys')
  , gOPS    = require('./_object-gops')
  , pIE     = require('./_object-pie');
module.exports = function(it){
  var result     = getKeys(it)
    , getSymbols = gOPS.f;
  if(getSymbols){
    var symbols = getSymbols(it)
      , isEnum  = pIE.f
      , i       = 0
      , key;
    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
  } return result;
};
},{"./_object-gops":74,"./_object-keys":77,"./_object-pie":78}],33:[function(require,module,exports){
var global    = require('./_global')
  , core      = require('./_core')
  , hide      = require('./_hide')
  , redefine  = require('./_redefine')
  , ctx       = require('./_ctx')
  , PROTOTYPE = 'prototype';

var $export = function(type, name, source){
  var IS_FORCED = type & $export.F
    , IS_GLOBAL = type & $export.G
    , IS_STATIC = type & $export.S
    , IS_PROTO  = type & $export.P
    , IS_BIND   = type & $export.B
    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
    , key, own, out, exp;
  if(IS_GLOBAL)source = name;
  for(key in source){
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if(target)redefine(target, key, out, type & $export.U);
    // export
    if(exports[key] != out)hide(exports, key, exp);
    if(IS_PROTO && expProto[key] != out)expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library` 
module.exports = $export;
},{"./_core":24,"./_ctx":26,"./_global":39,"./_hide":41,"./_redefine":88}],34:[function(require,module,exports){
var MATCH = require('./_wks')('match');
module.exports = function(KEY){
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch(e){
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch(f){ /* empty */ }
  } return true;
};
},{"./_wks":118}],35:[function(require,module,exports){
module.exports = function(exec){
  try {
    return !!exec();
  } catch(e){
    return true;
  }
};
},{}],36:[function(require,module,exports){
'use strict';
var hide     = require('./_hide')
  , redefine = require('./_redefine')
  , fails    = require('./_fails')
  , defined  = require('./_defined')
  , wks      = require('./_wks');

module.exports = function(KEY, length, exec){
  var SYMBOL   = wks(KEY)
    , fns      = exec(defined, SYMBOL, ''[KEY])
    , strfn    = fns[0]
    , rxfn     = fns[1];
  if(fails(function(){
    var O = {};
    O[SYMBOL] = function(){ return 7; };
    return ''[KEY](O) != 7;
  })){
    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function(string, arg){ return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function(string){ return rxfn.call(string, this); }
    );
  }
};
},{"./_defined":28,"./_fails":35,"./_hide":41,"./_redefine":88,"./_wks":118}],37:[function(require,module,exports){
'use strict';
// 21.2.5.3 get RegExp.prototype.flags
var anObject = require('./_an-object');
module.exports = function(){
  var that   = anObject(this)
    , result = '';
  if(that.global)     result += 'g';
  if(that.ignoreCase) result += 'i';
  if(that.multiline)  result += 'm';
  if(that.unicode)    result += 'u';
  if(that.sticky)     result += 'y';
  return result;
};
},{"./_an-object":8}],38:[function(require,module,exports){
var ctx         = require('./_ctx')
  , call        = require('./_iter-call')
  , isArrayIter = require('./_is-array-iter')
  , anObject    = require('./_an-object')
  , toLength    = require('./_to-length')
  , getIterFn   = require('./core.get-iterator-method')
  , BREAK       = {}
  , RETURN      = {};
var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
    , f      = ctx(fn, that, entries ? 2 : 1)
    , index  = 0
    , length, step, iterator, result;
  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if(result === BREAK || result === RETURN)return result;
  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
    result = call(iterator, f, step.value, entries);
    if(result === BREAK || result === RETURN)return result;
  }
};
exports.BREAK  = BREAK;
exports.RETURN = RETURN;
},{"./_an-object":8,"./_ctx":26,"./_is-array-iter":47,"./_iter-call":52,"./_to-length":109,"./core.get-iterator-method":119}],39:[function(require,module,exports){
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef
},{}],40:[function(require,module,exports){
var hasOwnProperty = {}.hasOwnProperty;
module.exports = function(it, key){
  return hasOwnProperty.call(it, key);
};
},{}],41:[function(require,module,exports){
var dP         = require('./_object-dp')
  , createDesc = require('./_property-desc');
module.exports = require('./_descriptors') ? function(object, key, value){
  return dP.f(object, key, createDesc(1, value));
} : function(object, key, value){
  object[key] = value;
  return object;
};
},{"./_descriptors":29,"./_object-dp":68,"./_property-desc":86}],42:[function(require,module,exports){
module.exports = require('./_global').document && document.documentElement;
},{"./_global":39}],43:[function(require,module,exports){
module.exports = !require('./_descriptors') && !require('./_fails')(function(){
  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;
});
},{"./_descriptors":29,"./_dom-create":30,"./_fails":35}],44:[function(require,module,exports){
var isObject       = require('./_is-object')
  , setPrototypeOf = require('./_set-proto').set;
module.exports = function(that, target, C){
  var P, S = target.constructor;
  if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){
    setPrototypeOf(that, P);
  } return that;
};
},{"./_is-object":50,"./_set-proto":91}],45:[function(require,module,exports){
// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function(fn, args, that){
  var un = that === undefined;
  switch(args.length){
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return              fn.apply(that, args);
};
},{}],46:[function(require,module,exports){
// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = require('./_cof');
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
  return cof(it) == 'String' ? it.split('') : Object(it);
};
},{"./_cof":19}],47:[function(require,module,exports){
// check on default Array iterator
var Iterators  = require('./_iterators')
  , ITERATOR   = require('./_wks')('iterator')
  , ArrayProto = Array.prototype;

module.exports = function(it){
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};
},{"./_iterators":57,"./_wks":118}],48:[function(require,module,exports){
// 7.2.2 IsArray(argument)
var cof = require('./_cof');
module.exports = Array.isArray || function isArray(arg){
  return cof(arg) == 'Array';
};
},{"./_cof":19}],49:[function(require,module,exports){
// 20.1.2.3 Number.isInteger(number)
var isObject = require('./_is-object')
  , floor    = Math.floor;
module.exports = function isInteger(it){
  return !isObject(it) && isFinite(it) && floor(it) === it;
};
},{"./_is-object":50}],50:[function(require,module,exports){
module.exports = function(it){
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};
},{}],51:[function(require,module,exports){
// 7.2.8 IsRegExp(argument)
var isObject = require('./_is-object')
  , cof      = require('./_cof')
  , MATCH    = require('./_wks')('match');
module.exports = function(it){
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};
},{"./_cof":19,"./_is-object":50,"./_wks":118}],52:[function(require,module,exports){
// call something on iterator step with safe closing on error
var anObject = require('./_an-object');
module.exports = function(iterator, fn, value, entries){
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch(e){
    var ret = iterator['return'];
    if(ret !== undefined)anObject(ret.call(iterator));
    throw e;
  }
};
},{"./_an-object":8}],53:[function(require,module,exports){
'use strict';
var create         = require('./_object-create')
  , descriptor     = require('./_property-desc')
  , setToStringTag = require('./_set-to-string-tag')
  , IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
require('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });

module.exports = function(Constructor, NAME, next){
  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
  setToStringTag(Constructor, NAME + ' Iterator');
};
},{"./_hide":41,"./_object-create":67,"./_property-desc":86,"./_set-to-string-tag":93,"./_wks":118}],54:[function(require,module,exports){
'use strict';
var LIBRARY        = require('./_library')
  , $export        = require('./_export')
  , redefine       = require('./_redefine')
  , hide           = require('./_hide')
  , has            = require('./_has')
  , Iterators      = require('./_iterators')
  , $iterCreate    = require('./_iter-create')
  , setToStringTag = require('./_set-to-string-tag')
  , getPrototypeOf = require('./_object-gpo')
  , ITERATOR       = require('./_wks')('iterator')
  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
  , FF_ITERATOR    = '@@iterator'
  , KEYS           = 'keys'
  , VALUES         = 'values';

var returnThis = function(){ return this; };

module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
  $iterCreate(Constructor, NAME, next);
  var getMethod = function(kind){
    if(!BUGGY && kind in proto)return proto[kind];
    switch(kind){
      case KEYS: return function keys(){ return new Constructor(this, kind); };
      case VALUES: return function values(){ return new Constructor(this, kind); };
    } return function entries(){ return new Constructor(this, kind); };
  };
  var TAG        = NAME + ' Iterator'
    , DEF_VALUES = DEFAULT == VALUES
    , VALUES_BUG = false
    , proto      = Base.prototype
    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
    , $default   = $native || getMethod(DEFAULT)
    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
    , methods, key, IteratorPrototype;
  // Fix native
  if($anyNative){
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
    if(IteratorPrototype !== Object.prototype){
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if(DEF_VALUES && $native && $native.name !== VALUES){
    VALUES_BUG = true;
    $default = function values(){ return $native.call(this); };
  }
  // Define iterator
  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG]  = returnThis;
  if(DEFAULT){
    methods = {
      values:  DEF_VALUES ? $default : getMethod(VALUES),
      keys:    IS_SET     ? $default : getMethod(KEYS),
      entries: $entries
    };
    if(FORCED)for(key in methods){
      if(!(key in proto))redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};
},{"./_export":33,"./_has":40,"./_hide":41,"./_iter-create":53,"./_iterators":57,"./_library":59,"./_object-gpo":75,"./_redefine":88,"./_set-to-string-tag":93,"./_wks":118}],55:[function(require,module,exports){
var ITERATOR     = require('./_wks')('iterator')
  , SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function(){ SAFE_CLOSING = true; };
  Array.from(riter, function(){ throw 2; });
} catch(e){ /* empty */ }

module.exports = function(exec, skipClosing){
  if(!skipClosing && !SAFE_CLOSING)return false;
  var safe = false;
  try {
    var arr  = [7]
      , iter = arr[ITERATOR]();
    iter.next = function(){ return {done: safe = true}; };
    arr[ITERATOR] = function(){ return iter; };
    exec(arr);
  } catch(e){ /* empty */ }
  return safe;
};
},{"./_wks":118}],56:[function(require,module,exports){
module.exports = function(done, value){
  return {value: value, done: !!done};
};
},{}],57:[function(require,module,exports){
module.exports = {};
},{}],58:[function(require,module,exports){
var getKeys   = require('./_object-keys')
  , toIObject = require('./_to-iobject');
module.exports = function(object, el){
  var O      = toIObject(object)
    , keys   = getKeys(O)
    , length = keys.length
    , index  = 0
    , key;
  while(length > index)if(O[key = keys[index++]] === el)return key;
};
},{"./_object-keys":77,"./_to-iobject":108}],59:[function(require,module,exports){
module.exports = false;
},{}],60:[function(require,module,exports){
// 20.2.2.14 Math.expm1(x)
var $expm1 = Math.expm1;
module.exports = (!$expm1
  // Old FF bug
  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
  // Tor Browser bug
  || $expm1(-2e-17) != -2e-17
) ? function expm1(x){
  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
} : $expm1;
},{}],61:[function(require,module,exports){
// 20.2.2.20 Math.log1p(x)
module.exports = Math.log1p || function log1p(x){
  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
};
},{}],62:[function(require,module,exports){
// 20.2.2.28 Math.sign(x)
module.exports = Math.sign || function sign(x){
  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
};
},{}],63:[function(require,module,exports){
var META     = require('./_uid')('meta')
  , isObject = require('./_is-object')
  , has      = require('./_has')
  , setDesc  = require('./_object-dp').f
  , id       = 0;
var isExtensible = Object.isExtensible || function(){
  return true;
};
var FREEZE = !require('./_fails')(function(){
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function(it){
  setDesc(it, META, {value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  }});
};
var fastKey = function(it, create){
  // return primitive with prefix
  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if(!has(it, META)){
    // can't set metadata to uncaught frozen object
    if(!isExtensible(it))return 'F';
    // not necessary to add metadata
    if(!create)return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function(it, create){
  if(!has(it, META)){
    // can't set metadata to uncaught frozen object
    if(!isExtensible(it))return true;
    // not necessary to add metadata
    if(!create)return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function(it){
  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY:      META,
  NEED:     false,
  fastKey:  fastKey,
  getWeak:  getWeak,
  onFreeze: onFreeze
};
},{"./_fails":35,"./_has":40,"./_is-object":50,"./_object-dp":68,"./_uid":115}],64:[function(require,module,exports){
var Map     = require('./es6.map')
  , $export = require('./_export')
  , shared  = require('./_shared')('metadata')
  , store   = shared.store || (shared.store = new (require('./es6.weak-map')));

var getOrCreateMetadataMap = function(target, targetKey, create){
  var targetMetadata = store.get(target);
  if(!targetMetadata){
    if(!create)return undefined;
    store.set(target, targetMetadata = new Map);
  }
  var keyMetadata = targetMetadata.get(targetKey);
  if(!keyMetadata){
    if(!create)return undefined;
    targetMetadata.set(targetKey, keyMetadata = new Map);
  } return keyMetadata;
};
var ordinaryHasOwnMetadata = function(MetadataKey, O, P){
  var metadataMap = getOrCreateMetadataMap(O, P, false);
  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
};
var ordinaryGetOwnMetadata = function(MetadataKey, O, P){
  var metadataMap = getOrCreateMetadataMap(O, P, false);
  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
};
var ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){
  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
};
var ordinaryOwnMetadataKeys = function(target, targetKey){
  var metadataMap = getOrCreateMetadataMap(target, targetKey, false)
    , keys        = [];
  if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });
  return keys;
};
var toMetaKey = function(it){
  return it === undefined || typeof it == 'symbol' ? it : String(it);
};
var exp = function(O){
  $export($export.S, 'Reflect', O);
};

module.exports = {
  store: store,
  map: getOrCreateMetadataMap,
  has: ordinaryHasOwnMetadata,
  get: ordinaryGetOwnMetadata,
  set: ordinaryDefineOwnMetadata,
  keys: ordinaryOwnMetadataKeys,
  key: toMetaKey,
  exp: exp
};
},{"./_export":33,"./_shared":95,"./es6.map":150,"./es6.weak-map":256}],65:[function(require,module,exports){
var global    = require('./_global')
  , macrotask = require('./_task').set
  , Observer  = global.MutationObserver || global.WebKitMutationObserver
  , process   = global.process
  , Promise   = global.Promise
  , isNode    = require('./_cof')(process) == 'process';

module.exports = function(){
  var head, last, notify;

  var flush = function(){
    var parent, fn;
    if(isNode && (parent = process.domain))parent.exit();
    while(head){
      fn   = head.fn;
      head = head.next;
      try {
        fn();
      } catch(e){
        if(head)notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if(parent)parent.enter();
  };

  // Node.js
  if(isNode){
    notify = function(){
      process.nextTick(flush);
    };
  // browsers with MutationObserver
  } else if(Observer){
    var toggle = true
      , node   = document.createTextNode('');
    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
    notify = function(){
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if(Promise && Promise.resolve){
    var promise = Promise.resolve();
    notify = function(){
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function(){
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function(fn){
    var task = {fn: fn, next: undefined};
    if(last)last.next = task;
    if(!head){
      head = task;
      notify();
    } last = task;
  };
};
},{"./_cof":19,"./_global":39,"./_task":105}],66:[function(require,module,exports){
'use strict';
// 19.1.2.1 Object.assign(target, source, ...)
var getKeys  = require('./_object-keys')
  , gOPS     = require('./_object-gops')
  , pIE      = require('./_object-pie')
  , toObject = require('./_to-object')
  , IObject  = require('./_iobject')
  , $assign  = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || require('./_fails')(function(){
  var A = {}
    , B = {}
    , S = Symbol()
    , K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function(k){ B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
  var T     = toObject(target)
    , aLen  = arguments.length
    , index = 1
    , getSymbols = gOPS.f
    , isEnum     = pIE.f;
  while(aLen > index){
    var S      = IObject(arguments[index++])
      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
      , length = keys.length
      , j      = 0
      , key;
    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
  } return T;
} : $assign;
},{"./_fails":35,"./_iobject":46,"./_object-gops":74,"./_object-keys":77,"./_object-pie":78,"./_to-object":110}],67:[function(require,module,exports){
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject    = require('./_an-object')
  , dPs         = require('./_object-dps')
  , enumBugKeys = require('./_enum-bug-keys')
  , IE_PROTO    = require('./_shared-key')('IE_PROTO')
  , Empty       = function(){ /* empty */ }
  , PROTOTYPE   = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function(){
  // Thrash, waste and sodomy: IE GC bug
  var iframe = require('./_dom-create')('iframe')
    , i      = enumBugKeys.length
    , lt     = '<'
    , gt     = '>'
    , iframeDocument;
  iframe.style.display = 'none';
  require('./_html').appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties){
  var result;
  if(O !== null){
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty;
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};

},{"./_an-object":8,"./_dom-create":30,"./_enum-bug-keys":31,"./_html":42,"./_object-dps":69,"./_shared-key":94}],68:[function(require,module,exports){
var anObject       = require('./_an-object')
  , IE8_DOM_DEFINE = require('./_ie8-dom-define')
  , toPrimitive    = require('./_to-primitive')
  , dP             = Object.defineProperty;

exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if(IE8_DOM_DEFINE)try {
    return dP(O, P, Attributes);
  } catch(e){ /* empty */ }
  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
  if('value' in Attributes)O[P] = Attributes.value;
  return O;
};
},{"./_an-object":8,"./_descriptors":29,"./_ie8-dom-define":43,"./_to-primitive":111}],69:[function(require,module,exports){
var dP       = require('./_object-dp')
  , anObject = require('./_an-object')
  , getKeys  = require('./_object-keys');

module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties){
  anObject(O);
  var keys   = getKeys(Properties)
    , length = keys.length
    , i = 0
    , P;
  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
  return O;
};
},{"./_an-object":8,"./_descriptors":29,"./_object-dp":68,"./_object-keys":77}],70:[function(require,module,exports){
// Forced replacement prototype accessors methods
module.exports = require('./_library')|| !require('./_fails')(function(){
  var K = Math.random();
  // In FF throws only define methods
  __defineSetter__.call(null, K, function(){ /* empty */});
  delete require('./_global')[K];
});
},{"./_fails":35,"./_global":39,"./_library":59}],71:[function(require,module,exports){
var pIE            = require('./_object-pie')
  , createDesc     = require('./_property-desc')
  , toIObject      = require('./_to-iobject')
  , toPrimitive    = require('./_to-primitive')
  , has            = require('./_has')
  , IE8_DOM_DEFINE = require('./_ie8-dom-define')
  , gOPD           = Object.getOwnPropertyDescriptor;

exports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P){
  O = toIObject(O);
  P = toPrimitive(P, true);
  if(IE8_DOM_DEFINE)try {
    return gOPD(O, P);
  } catch(e){ /* empty */ }
  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
};
},{"./_descriptors":29,"./_has":40,"./_ie8-dom-define":43,"./_object-pie":78,"./_property-desc":86,"./_to-iobject":108,"./_to-primitive":111}],72:[function(require,module,exports){
// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = require('./_to-iobject')
  , gOPN      = require('./_object-gopn').f
  , toString  = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function(it){
  try {
    return gOPN(it);
  } catch(e){
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it){
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};

},{"./_object-gopn":73,"./_to-iobject":108}],73:[function(require,module,exports){
// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys      = require('./_object-keys-internal')
  , hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
  return $keys(O, hiddenKeys);
};
},{"./_enum-bug-keys":31,"./_object-keys-internal":76}],74:[function(require,module,exports){
exports.f = Object.getOwnPropertySymbols;
},{}],75:[function(require,module,exports){
// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has         = require('./_has')
  , toObject    = require('./_to-object')
  , IE_PROTO    = require('./_shared-key')('IE_PROTO')
  , ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function(O){
  O = toObject(O);
  if(has(O, IE_PROTO))return O[IE_PROTO];
  if(typeof O.constructor == 'function' && O instanceof O.constructor){
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};
},{"./_has":40,"./_shared-key":94,"./_to-object":110}],76:[function(require,module,exports){
var has          = require('./_has')
  , toIObject    = require('./_to-iobject')
  , arrayIndexOf = require('./_array-includes')(false)
  , IE_PROTO     = require('./_shared-key')('IE_PROTO');

module.exports = function(object, names){
  var O      = toIObject(object)
    , i      = 0
    , result = []
    , key;
  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while(names.length > i)if(has(O, key = names[i++])){
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};
},{"./_array-includes":12,"./_has":40,"./_shared-key":94,"./_to-iobject":108}],77:[function(require,module,exports){
// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys       = require('./_object-keys-internal')
  , enumBugKeys = require('./_enum-bug-keys');

module.exports = Object.keys || function keys(O){
  return $keys(O, enumBugKeys);
};
},{"./_enum-bug-keys":31,"./_object-keys-internal":76}],78:[function(require,module,exports){
exports.f = {}.propertyIsEnumerable;
},{}],79:[function(require,module,exports){
// most Object methods by ES6 should accept primitives
var $export = require('./_export')
  , core    = require('./_core')
  , fails   = require('./_fails');
module.exports = function(KEY, exec){
  var fn  = (core.Object || {})[KEY] || Object[KEY]
    , exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
};
},{"./_core":24,"./_export":33,"./_fails":35}],80:[function(require,module,exports){
var getKeys   = require('./_object-keys')
  , toIObject = require('./_to-iobject')
  , isEnum    = require('./_object-pie').f;
module.exports = function(isEntries){
  return function(it){
    var O      = toIObject(it)
      , keys   = getKeys(O)
      , length = keys.length
      , i      = 0
      , result = []
      , key;
    while(length > i)if(isEnum.call(O, key = keys[i++])){
      result.push(isEntries ? [key, O[key]] : O[key]);
    } return result;
  };
};
},{"./_object-keys":77,"./_object-pie":78,"./_to-iobject":108}],81:[function(require,module,exports){
// all object keys, includes non-enumerable and symbols
var gOPN     = require('./_object-gopn')
  , gOPS     = require('./_object-gops')
  , anObject = require('./_an-object')
  , Reflect  = require('./_global').Reflect;
module.exports = Reflect && Reflect.ownKeys || function ownKeys(it){
  var keys       = gOPN.f(anObject(it))
    , getSymbols = gOPS.f;
  return getSymbols ? keys.concat(getSymbols(it)) : keys;
};
},{"./_an-object":8,"./_global":39,"./_object-gopn":73,"./_object-gops":74}],82:[function(require,module,exports){
var $parseFloat = require('./_global').parseFloat
  , $trim       = require('./_string-trim').trim;

module.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str){
  var string = $trim(String(str), 3)
    , result = $parseFloat(string);
  return result === 0 && string.charAt(0) == '-' ? -0 : result;
} : $parseFloat;
},{"./_global":39,"./_string-trim":103,"./_string-ws":104}],83:[function(require,module,exports){
var $parseInt = require('./_global').parseInt
  , $trim     = require('./_string-trim').trim
  , ws        = require('./_string-ws')
  , hex       = /^[\-+]?0[xX]/;

module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix){
  var string = $trim(String(str), 3);
  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
} : $parseInt;
},{"./_global":39,"./_string-trim":103,"./_string-ws":104}],84:[function(require,module,exports){
'use strict';
var path      = require('./_path')
  , invoke    = require('./_invoke')
  , aFunction = require('./_a-function');
module.exports = function(/* ...pargs */){
  var fn     = aFunction(this)
    , length = arguments.length
    , pargs  = Array(length)
    , i      = 0
    , _      = path._
    , holder = false;
  while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;
  return function(/* ...args */){
    var that = this
      , aLen = arguments.length
      , j = 0, k = 0, args;
    if(!holder && !aLen)return invoke(fn, pargs, that);
    args = pargs.slice();
    if(holder)for(;length > j; j++)if(args[j] === _)args[j] = arguments[k++];
    while(aLen > k)args.push(arguments[k++]);
    return invoke(fn, args, that);
  };
};
},{"./_a-function":4,"./_invoke":45,"./_path":85}],85:[function(require,module,exports){
module.exports = require('./_global');
},{"./_global":39}],86:[function(require,module,exports){
module.exports = function(bitmap, value){
  return {
    enumerable  : !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable    : !(bitmap & 4),
    value       : value
  };
};
},{}],87:[function(require,module,exports){
var redefine = require('./_redefine');
module.exports = function(target, src, safe){
  for(var key in src)redefine(target, key, src[key], safe);
  return target;
};
},{"./_redefine":88}],88:[function(require,module,exports){
var global    = require('./_global')
  , hide      = require('./_hide')
  , has       = require('./_has')
  , SRC       = require('./_uid')('src')
  , TO_STRING = 'toString'
  , $toString = Function[TO_STRING]
  , TPL       = ('' + $toString).split(TO_STRING);

require('./_core').inspectSource = function(it){
  return $toString.call(it);
};

(module.exports = function(O, key, val, safe){
  var isFunction = typeof val == 'function';
  if(isFunction)has(val, 'name') || hide(val, 'name', key);
  if(O[key] === val)return;
  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if(O === global){
    O[key] = val;
  } else {
    if(!safe){
      delete O[key];
      hide(O, key, val);
    } else {
      if(O[key])O[key] = val;
      else hide(O, key, val);
    }
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString(){
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});
},{"./_core":24,"./_global":39,"./_has":40,"./_hide":41,"./_uid":115}],89:[function(require,module,exports){
module.exports = function(regExp, replace){
  var replacer = replace === Object(replace) ? function(part){
    return replace[part];
  } : replace;
  return function(it){
    return String(it).replace(regExp, replacer);
  };
};
},{}],90:[function(require,module,exports){
// 7.2.9 SameValue(x, y)
module.exports = Object.is || function is(x, y){
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};
},{}],91:[function(require,module,exports){
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = require('./_is-object')
  , anObject = require('./_an-object');
var check = function(O, proto){
  anObject(O);
  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function(test, buggy, set){
      try {
        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch(e){ buggy = true; }
      return function setPrototypeOf(O, proto){
        check(O, proto);
        if(buggy)O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};
},{"./_an-object":8,"./_ctx":26,"./_is-object":50,"./_object-gopd":71}],92:[function(require,module,exports){
'use strict';
var global      = require('./_global')
  , dP          = require('./_object-dp')
  , DESCRIPTORS = require('./_descriptors')
  , SPECIES     = require('./_wks')('species');

module.exports = function(KEY){
  var C = global[KEY];
  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
    configurable: true,
    get: function(){ return this; }
  });
};
},{"./_descriptors":29,"./_global":39,"./_object-dp":68,"./_wks":118}],93:[function(require,module,exports){
var def = require('./_object-dp').f
  , has = require('./_has')
  , TAG = require('./_wks')('toStringTag');

module.exports = function(it, tag, stat){
  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
};
},{"./_has":40,"./_object-dp":68,"./_wks":118}],94:[function(require,module,exports){
var shared = require('./_shared')('keys')
  , uid    = require('./_uid');
module.exports = function(key){
  return shared[key] || (shared[key] = uid(key));
};
},{"./_shared":95,"./_uid":115}],95:[function(require,module,exports){
var global = require('./_global')
  , SHARED = '__core-js_shared__'
  , store  = global[SHARED] || (global[SHARED] = {});
module.exports = function(key){
  return store[key] || (store[key] = {});
};
},{"./_global":39}],96:[function(require,module,exports){
// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject  = require('./_an-object')
  , aFunction = require('./_a-function')
  , SPECIES   = require('./_wks')('species');
module.exports = function(O, D){
  var C = anObject(O).constructor, S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};
},{"./_a-function":4,"./_an-object":8,"./_wks":118}],97:[function(require,module,exports){
var fails = require('./_fails');

module.exports = function(method, arg){
  return !!method && fails(function(){
    arg ? method.call(null, function(){}, 1) : method.call(null);
  });
};
},{"./_fails":35}],98:[function(require,module,exports){
var toInteger = require('./_to-integer')
  , defined   = require('./_defined');
// true  -> String#at
// false -> String#codePointAt
module.exports = function(TO_STRING){
  return function(that, pos){
    var s = String(defined(that))
      , i = toInteger(pos)
      , l = s.length
      , a, b;
    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};
},{"./_defined":28,"./_to-integer":107}],99:[function(require,module,exports){
// helper for String#{startsWith, endsWith, includes}
var isRegExp = require('./_is-regexp')
  , defined  = require('./_defined');

module.exports = function(that, searchString, NAME){
  if(isRegExp(searchString))throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};
},{"./_defined":28,"./_is-regexp":51}],100:[function(require,module,exports){
var $export = require('./_export')
  , fails   = require('./_fails')
  , defined = require('./_defined')
  , quot    = /"/g;
// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
var createHTML = function(string, tag, attribute, value) {
  var S  = String(defined(string))
    , p1 = '<' + tag;
  if(attribute !== '')p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};
module.exports = function(NAME, exec){
  var O = {};
  O[NAME] = exec(createHTML);
  $export($export.P + $export.F * fails(function(){
    var test = ''[NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  }), 'String', O);
};
},{"./_defined":28,"./_export":33,"./_fails":35}],101:[function(require,module,exports){
// https://github.com/tc39/proposal-string-pad-start-end
var toLength = require('./_to-length')
  , repeat   = require('./_string-repeat')
  , defined  = require('./_defined');

module.exports = function(that, maxLength, fillString, left){
  var S            = String(defined(that))
    , stringLength = S.length
    , fillStr      = fillString === undefined ? ' ' : String(fillString)
    , intMaxLength = toLength(maxLength);
  if(intMaxLength <= stringLength || fillStr == '')return S;
  var fillLen = intMaxLength - stringLength
    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);
  return left ? stringFiller + S : S + stringFiller;
};

},{"./_defined":28,"./_string-repeat":102,"./_to-length":109}],102:[function(require,module,exports){
'use strict';
var toInteger = require('./_to-integer')
  , defined   = require('./_defined');

module.exports = function repeat(count){
  var str = String(defined(this))
    , res = ''
    , n   = toInteger(count);
  if(n < 0 || n == Infinity)throw RangeError("Count can't be negative");
  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;
  return res;
};
},{"./_defined":28,"./_to-integer":107}],103:[function(require,module,exports){
var $export = require('./_export')
  , defined = require('./_defined')
  , fails   = require('./_fails')
  , spaces  = require('./_string-ws')
  , space   = '[' + spaces + ']'
  , non     = '\u200b\u0085'
  , ltrim   = RegExp('^' + space + space + '*')
  , rtrim   = RegExp(space + space + '*$');

var exporter = function(KEY, exec, ALIAS){
  var exp   = {};
  var FORCE = fails(function(){
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if(ALIAS)exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function(string, TYPE){
  string = String(defined(string));
  if(TYPE & 1)string = string.replace(ltrim, '');
  if(TYPE & 2)string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;
},{"./_defined":28,"./_export":33,"./_fails":35,"./_string-ws":104}],104:[function(require,module,exports){
module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';
},{}],105:[function(require,module,exports){
var ctx                = require('./_ctx')
  , invoke             = require('./_invoke')
  , html               = require('./_html')
  , cel                = require('./_dom-create')
  , global             = require('./_global')
  , process            = global.process
  , setTask            = global.setImmediate
  , clearTask          = global.clearImmediate
  , MessageChannel     = global.MessageChannel
  , counter            = 0
  , queue              = {}
  , ONREADYSTATECHANGE = 'onreadystatechange'
  , defer, channel, port;
var run = function(){
  var id = +this;
  if(queue.hasOwnProperty(id)){
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function(event){
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if(!setTask || !clearTask){
  setTask = function setImmediate(fn){
    var args = [], i = 1;
    while(arguments.length > i)args.push(arguments[i++]);
    queue[++counter] = function(){
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id){
    delete queue[id];
  };
  // Node.js 0.8-
  if(require('./_cof')(process) == 'process'){
    defer = function(id){
      process.nextTick(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if(MessageChannel){
    channel = new MessageChannel;
    port    = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
    defer = function(id){
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if(ONREADYSTATECHANGE in cel('script')){
    defer = function(id){
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function(id){
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set:   setTask,
  clear: clearTask
};
},{"./_cof":19,"./_ctx":26,"./_dom-create":30,"./_global":39,"./_html":42,"./_invoke":45}],106:[function(require,module,exports){
var toInteger = require('./_to-integer')
  , max       = Math.max
  , min       = Math.min;
module.exports = function(index, length){
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};
},{"./_to-integer":107}],107:[function(require,module,exports){
// 7.1.4 ToInteger
var ceil  = Math.ceil
  , floor = Math.floor;
module.exports = function(it){
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};
},{}],108:[function(require,module,exports){
// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = require('./_iobject')
  , defined = require('./_defined');
module.exports = function(it){
  return IObject(defined(it));
};
},{"./_defined":28,"./_iobject":46}],109:[function(require,module,exports){
// 7.1.15 ToLength
var toInteger = require('./_to-integer')
  , min       = Math.min;
module.exports = function(it){
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};
},{"./_to-integer":107}],110:[function(require,module,exports){
// 7.1.13 ToObject(argument)
var defined = require('./_defined');
module.exports = function(it){
  return Object(defined(it));
};
},{"./_defined":28}],111:[function(require,module,exports){
// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = require('./_is-object');
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function(it, S){
  if(!isObject(it))return it;
  var fn, val;
  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
  throw TypeError("Can't convert object to primitive value");
};
},{"./_is-object":50}],112:[function(require,module,exports){
'use strict';
if(require('./_descriptors')){
  var LIBRARY             = require('./_library')
    , global              = require('./_global')
    , fails               = require('./_fails')
    , $export             = require('./_export')
    , $typed              = require('./_typed')
    , $buffer             = require('./_typed-buffer')
    , ctx                 = require('./_ctx')
    , anInstance          = require('./_an-instance')
    , propertyDesc        = require('./_property-desc')
    , hide                = require('./_hide')
    , redefineAll         = require('./_redefine-all')
    , toInteger           = require('./_to-integer')
    , toLength            = require('./_to-length')
    , toIndex             = require('./_to-index')
    , toPrimitive         = require('./_to-primitive')
    , has                 = require('./_has')
    , same                = require('./_same-value')
    , classof             = require('./_classof')
    , isObject            = require('./_is-object')
    , toObject            = require('./_to-object')
    , isArrayIter         = require('./_is-array-iter')
    , create              = require('./_object-create')
    , getPrototypeOf      = require('./_object-gpo')
    , gOPN                = require('./_object-gopn').f
    , getIterFn           = require('./core.get-iterator-method')
    , uid                 = require('./_uid')
    , wks                 = require('./_wks')
    , createArrayMethod   = require('./_array-methods')
    , createArrayIncludes = require('./_array-includes')
    , speciesConstructor  = require('./_species-constructor')
    , ArrayIterators      = require('./es6.array.iterator')
    , Iterators           = require('./_iterators')
    , $iterDetect         = require('./_iter-detect')
    , setSpecies          = require('./_set-species')
    , arrayFill           = require('./_array-fill')
    , arrayCopyWithin     = require('./_array-copy-within')
    , $DP                 = require('./_object-dp')
    , $GOPD               = require('./_object-gopd')
    , dP                  = $DP.f
    , gOPD                = $GOPD.f
    , RangeError          = global.RangeError
    , TypeError           = global.TypeError
    , Uint8Array          = global.Uint8Array
    , ARRAY_BUFFER        = 'ArrayBuffer'
    , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER
    , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'
    , PROTOTYPE           = 'prototype'
    , ArrayProto          = Array[PROTOTYPE]
    , $ArrayBuffer        = $buffer.ArrayBuffer
    , $DataView           = $buffer.DataView
    , arrayForEach        = createArrayMethod(0)
    , arrayFilter         = createArrayMethod(2)
    , arraySome           = createArrayMethod(3)
    , arrayEvery          = createArrayMethod(4)
    , arrayFind           = createArrayMethod(5)
    , arrayFindIndex      = createArrayMethod(6)
    , arrayIncludes       = createArrayIncludes(true)
    , arrayIndexOf        = createArrayIncludes(false)
    , arrayValues         = ArrayIterators.values
    , arrayKeys           = ArrayIterators.keys
    , arrayEntries        = ArrayIterators.entries
    , arrayLastIndexOf    = ArrayProto.lastIndexOf
    , arrayReduce         = ArrayProto.reduce
    , arrayReduceRight    = ArrayProto.reduceRight
    , arrayJoin           = ArrayProto.join
    , arraySort           = ArrayProto.sort
    , arraySlice          = ArrayProto.slice
    , arrayToString       = ArrayProto.toString
    , arrayToLocaleString = ArrayProto.toLocaleString
    , ITERATOR            = wks('iterator')
    , TAG                 = wks('toStringTag')
    , TYPED_CONSTRUCTOR   = uid('typed_constructor')
    , DEF_CONSTRUCTOR     = uid('def_constructor')
    , ALL_CONSTRUCTORS    = $typed.CONSTR
    , TYPED_ARRAY         = $typed.TYPED
    , VIEW                = $typed.VIEW
    , WRONG_LENGTH        = 'Wrong length!';

  var $map = createArrayMethod(1, function(O, length){
    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
  });

  var LITTLE_ENDIAN = fails(function(){
    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
  });

  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){
    new Uint8Array(1).set({});
  });

  var strictToLength = function(it, SAME){
    if(it === undefined)throw TypeError(WRONG_LENGTH);
    var number = +it
      , length = toLength(it);
    if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);
    return length;
  };

  var toOffset = function(it, BYTES){
    var offset = toInteger(it);
    if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');
    return offset;
  };

  var validate = function(it){
    if(isObject(it) && TYPED_ARRAY in it)return it;
    throw TypeError(it + ' is not a typed array!');
  };

  var allocate = function(C, length){
    if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){
      throw TypeError('It is not a typed array constructor!');
    } return new C(length);
  };

  var speciesFromList = function(O, list){
    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
  };

  var fromList = function(C, list){
    var index  = 0
      , length = list.length
      , result = allocate(C, length);
    while(length > index)result[index] = list[index++];
    return result;
  };

  var addGetter = function(it, key, internal){
    dP(it, key, {get: function(){ return this._d[internal]; }});
  };

  var $from = function from(source /*, mapfn, thisArg */){
    var O       = toObject(source)
      , aLen    = arguments.length
      , mapfn   = aLen > 1 ? arguments[1] : undefined
      , mapping = mapfn !== undefined
      , iterFn  = getIterFn(O)
      , i, length, values, result, step, iterator;
    if(iterFn != undefined && !isArrayIter(iterFn)){
      for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){
        values.push(step.value);
      } O = values;
    }
    if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);
    for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){
      result[i] = mapping ? mapfn(O[i], i) : O[i];
    }
    return result;
  };

  var $of = function of(/*...items*/){
    var index  = 0
      , length = arguments.length
      , result = allocate(this, length);
    while(length > index)result[index] = arguments[index++];
    return result;
  };

  // iOS Safari 6.x fails here
  var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });

  var $toLocaleString = function toLocaleString(){
    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
  };

  var proto = {
    copyWithin: function copyWithin(target, start /*, end */){
      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
    },
    every: function every(callbackfn /*, thisArg */){
      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars
      return arrayFill.apply(validate(this), arguments);
    },
    filter: function filter(callbackfn /*, thisArg */){
      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
        arguments.length > 1 ? arguments[1] : undefined));
    },
    find: function find(predicate /*, thisArg */){
      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    findIndex: function findIndex(predicate /*, thisArg */){
      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    forEach: function forEach(callbackfn /*, thisArg */){
      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    indexOf: function indexOf(searchElement /*, fromIndex */){
      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    includes: function includes(searchElement /*, fromIndex */){
      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    join: function join(separator){ // eslint-disable-line no-unused-vars
      return arrayJoin.apply(validate(this), arguments);
    },
    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars
      return arrayLastIndexOf.apply(validate(this), arguments);
    },
    map: function map(mapfn /*, thisArg */){
      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
      return arrayReduce.apply(validate(this), arguments);
    },
    reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
      return arrayReduceRight.apply(validate(this), arguments);
    },
    reverse: function reverse(){
      var that   = this
        , length = validate(that).length
        , middle = Math.floor(length / 2)
        , index  = 0
        , value;
      while(index < middle){
        value         = that[index];
        that[index++] = that[--length];
        that[length]  = value;
      } return that;
    },
    some: function some(callbackfn /*, thisArg */){
      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    sort: function sort(comparefn){
      return arraySort.call(validate(this), comparefn);
    },
    subarray: function subarray(begin, end){
      var O      = validate(this)
        , length = O.length
        , $begin = toIndex(begin, length);
      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
        O.buffer,
        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
        toLength((end === undefined ? length : toIndex(end, length)) - $begin)
      );
    }
  };

  var $slice = function slice(start, end){
    return speciesFromList(this, arraySlice.call(validate(this), start, end));
  };

  var $set = function set(arrayLike /*, offset */){
    validate(this);
    var offset = toOffset(arguments[1], 1)
      , length = this.length
      , src    = toObject(arrayLike)
      , len    = toLength(src.length)
      , index  = 0;
    if(len + offset > length)throw RangeError(WRONG_LENGTH);
    while(index < len)this[offset + index] = src[index++];
  };

  var $iterators = {
    entries: function entries(){
      return arrayEntries.call(validate(this));
    },
    keys: function keys(){
      return arrayKeys.call(validate(this));
    },
    values: function values(){
      return arrayValues.call(validate(this));
    }
  };

  var isTAIndex = function(target, key){
    return isObject(target)
      && target[TYPED_ARRAY]
      && typeof key != 'symbol'
      && key in target
      && String(+key) == String(key);
  };
  var $getDesc = function getOwnPropertyDescriptor(target, key){
    return isTAIndex(target, key = toPrimitive(key, true))
      ? propertyDesc(2, target[key])
      : gOPD(target, key);
  };
  var $setDesc = function defineProperty(target, key, desc){
    if(isTAIndex(target, key = toPrimitive(key, true))
      && isObject(desc)
      && has(desc, 'value')
      && !has(desc, 'get')
      && !has(desc, 'set')
      // TODO: add validation descriptor w/o calling accessors
      && !desc.configurable
      && (!has(desc, 'writable') || desc.writable)
      && (!has(desc, 'enumerable') || desc.enumerable)
    ){
      target[key] = desc.value;
      return target;
    } else return dP(target, key, desc);
  };

  if(!ALL_CONSTRUCTORS){
    $GOPD.f = $getDesc;
    $DP.f   = $setDesc;
  }

  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
    getOwnPropertyDescriptor: $getDesc,
    defineProperty:           $setDesc
  });

  if(fails(function(){ arrayToString.call({}); })){
    arrayToString = arrayToLocaleString = function toString(){
      return arrayJoin.call(this);
    }
  }

  var $TypedArrayPrototype$ = redefineAll({}, proto);
  redefineAll($TypedArrayPrototype$, $iterators);
  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
  redefineAll($TypedArrayPrototype$, {
    slice:          $slice,
    set:            $set,
    constructor:    function(){ /* noop */ },
    toString:       arrayToString,
    toLocaleString: $toLocaleString
  });
  addGetter($TypedArrayPrototype$, 'buffer', 'b');
  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
  addGetter($TypedArrayPrototype$, 'length', 'e');
  dP($TypedArrayPrototype$, TAG, {
    get: function(){ return this[TYPED_ARRAY]; }
  });

  module.exports = function(KEY, BYTES, wrapper, CLAMPED){
    CLAMPED = !!CLAMPED;
    var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'
      , ISNT_UINT8 = NAME != 'Uint8Array'
      , GETTER     = 'get' + KEY
      , SETTER     = 'set' + KEY
      , TypedArray = global[NAME]
      , Base       = TypedArray || {}
      , TAC        = TypedArray && getPrototypeOf(TypedArray)
      , FORCED     = !TypedArray || !$typed.ABV
      , O          = {}
      , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
    var getter = function(that, index){
      var data = that._d;
      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
    };
    var setter = function(that, index, value){
      var data = that._d;
      if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
    };
    var addElement = function(that, index){
      dP(that, index, {
        get: function(){
          return getter(this, index);
        },
        set: function(value){
          return setter(this, index, value);
        },
        enumerable: true
      });
    };
    if(FORCED){
      TypedArray = wrapper(function(that, data, $offset, $length){
        anInstance(that, TypedArray, NAME, '_d');
        var index  = 0
          , offset = 0
          , buffer, byteLength, length, klass;
        if(!isObject(data)){
          length     = strictToLength(data, true)
          byteLength = length * BYTES;
          buffer     = new $ArrayBuffer(byteLength);
        } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
          buffer = data;
          offset = toOffset($offset, BYTES);
          var $len = data.byteLength;
          if($length === undefined){
            if($len % BYTES)throw RangeError(WRONG_LENGTH);
            byteLength = $len - offset;
            if(byteLength < 0)throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if(TYPED_ARRAY in data){
          return fromList(TypedArray, data);
        } else {
          return $from.call(TypedArray, data);
        }
        hide(that, '_d', {
          b: buffer,
          o: offset,
          l: byteLength,
          e: length,
          v: new $DataView(buffer)
        });
        while(index < length)addElement(that, index++);
      });
      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
      hide(TypedArrayPrototype, 'constructor', TypedArray);
    } else if(!$iterDetect(function(iter){
      // V8 works with iterators, but fails in many other cases
      // https://code.google.com/p/v8/issues/detail?id=4552
      new TypedArray(null); // eslint-disable-line no-new
      new TypedArray(iter); // eslint-disable-line no-new
    }, true)){
      TypedArray = wrapper(function(that, data, $offset, $length){
        anInstance(that, TypedArray, NAME);
        var klass;
        // `ws` module bug, temporarily remove validation length for Uint8Array
        // https://github.com/websockets/ws/pull/645
        if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));
        if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
          return $length !== undefined
            ? new Base(data, toOffset($offset, BYTES), $length)
            : $offset !== undefined
              ? new Base(data, toOffset($offset, BYTES))
              : new Base(data);
        }
        if(TYPED_ARRAY in data)return fromList(TypedArray, data);
        return $from.call(TypedArray, data);
      });
      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){
        if(!(key in TypedArray))hide(TypedArray, key, Base[key]);
      });
      TypedArray[PROTOTYPE] = TypedArrayPrototype;
      if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;
    }
    var $nativeIterator   = TypedArrayPrototype[ITERATOR]
      , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)
      , $iterator         = $iterators.values;
    hide(TypedArray, TYPED_CONSTRUCTOR, true);
    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
    hide(TypedArrayPrototype, VIEW, true);
    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

    if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){
      dP(TypedArrayPrototype, TAG, {
        get: function(){ return NAME; }
      });
    }

    O[NAME] = TypedArray;

    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

    $export($export.S, NAME, {
      BYTES_PER_ELEMENT: BYTES,
      from: $from,
      of: $of
    });

    if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

    $export($export.P, NAME, proto);

    setSpecies(NAME);

    $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});

    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

    $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});

    $export($export.P + $export.F * fails(function(){
      new TypedArray(1).slice();
    }), NAME, {slice: $slice});

    $export($export.P + $export.F * (fails(function(){
      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()
    }) || !fails(function(){
      TypedArrayPrototype.toLocaleString.call([1, 2]);
    })), NAME, {toLocaleString: $toLocaleString});

    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
    if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);
  };
} else module.exports = function(){ /* empty */ };
},{"./_an-instance":7,"./_array-copy-within":9,"./_array-fill":10,"./_array-includes":12,"./_array-methods":13,"./_classof":18,"./_ctx":26,"./_descriptors":29,"./_export":33,"./_fails":35,"./_global":39,"./_has":40,"./_hide":41,"./_is-array-iter":47,"./_is-object":50,"./_iter-detect":55,"./_iterators":57,"./_library":59,"./_object-create":67,"./_object-dp":68,"./_object-gopd":71,"./_object-gopn":73,"./_object-gpo":75,"./_property-desc":86,"./_redefine-all":87,"./_same-value":90,"./_set-species":92,"./_species-constructor":96,"./_to-index":106,"./_to-integer":107,"./_to-length":109,"./_to-object":110,"./_to-primitive":111,"./_typed":114,"./_typed-buffer":113,"./_uid":115,"./_wks":118,"./core.get-iterator-method":119,"./es6.array.iterator":131}],113:[function(require,module,exports){
'use strict';
var global         = require('./_global')
  , DESCRIPTORS    = require('./_descriptors')
  , LIBRARY        = require('./_library')
  , $typed         = require('./_typed')
  , hide           = require('./_hide')
  , redefineAll    = require('./_redefine-all')
  , fails          = require('./_fails')
  , anInstance     = require('./_an-instance')
  , toInteger      = require('./_to-integer')
  , toLength       = require('./_to-length')
  , gOPN           = require('./_object-gopn').f
  , dP             = require('./_object-dp').f
  , arrayFill      = require('./_array-fill')
  , setToStringTag = require('./_set-to-string-tag')
  , ARRAY_BUFFER   = 'ArrayBuffer'
  , DATA_VIEW      = 'DataView'
  , PROTOTYPE      = 'prototype'
  , WRONG_LENGTH   = 'Wrong length!'
  , WRONG_INDEX    = 'Wrong index!'
  , $ArrayBuffer   = global[ARRAY_BUFFER]
  , $DataView      = global[DATA_VIEW]
  , Math           = global.Math
  , RangeError     = global.RangeError
  , Infinity       = global.Infinity
  , BaseBuffer     = $ArrayBuffer
  , abs            = Math.abs
  , pow            = Math.pow
  , floor          = Math.floor
  , log            = Math.log
  , LN2            = Math.LN2
  , BUFFER         = 'buffer'
  , BYTE_LENGTH    = 'byteLength'
  , BYTE_OFFSET    = 'byteOffset'
  , $BUFFER        = DESCRIPTORS ? '_b' : BUFFER
  , $LENGTH        = DESCRIPTORS ? '_l' : BYTE_LENGTH
  , $OFFSET        = DESCRIPTORS ? '_o' : BYTE_OFFSET;

// IEEE754 conversions based on https://github.com/feross/ieee754
var packIEEE754 = function(value, mLen, nBytes){
  var buffer = Array(nBytes)
    , eLen   = nBytes * 8 - mLen - 1
    , eMax   = (1 << eLen) - 1
    , eBias  = eMax >> 1
    , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0
    , i      = 0
    , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0
    , e, m, c;
  value = abs(value)
  if(value != value || value === Infinity){
    m = value != value ? 1 : 0;
    e = eMax;
  } else {
    e = floor(log(value) / LN2);
    if(value * (c = pow(2, -e)) < 1){
      e--;
      c *= 2;
    }
    if(e + eBias >= 1){
      value += rt / c;
    } else {
      value += rt * pow(2, 1 - eBias);
    }
    if(value * c >= 2){
      e++;
      c /= 2;
    }
    if(e + eBias >= eMax){
      m = 0;
      e = eMax;
    } else if(e + eBias >= 1){
      m = (value * c - 1) * pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * pow(2, eBias - 1) * pow(2, mLen);
      e = 0;
    }
  }
  for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
  e = e << mLen | m;
  eLen += mLen;
  for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
  buffer[--i] |= s * 128;
  return buffer;
};
var unpackIEEE754 = function(buffer, mLen, nBytes){
  var eLen  = nBytes * 8 - mLen - 1
    , eMax  = (1 << eLen) - 1
    , eBias = eMax >> 1
    , nBits = eLen - 7
    , i     = nBytes - 1
    , s     = buffer[i--]
    , e     = s & 127
    , m;
  s >>= 7;
  for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;
  for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
  if(e === 0){
    e = 1 - eBias;
  } else if(e === eMax){
    return m ? NaN : s ? -Infinity : Infinity;
  } else {
    m = m + pow(2, mLen);
    e = e - eBias;
  } return (s ? -1 : 1) * m * pow(2, e - mLen);
};

var unpackI32 = function(bytes){
  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
};
var packI8 = function(it){
  return [it & 0xff];
};
var packI16 = function(it){
  return [it & 0xff, it >> 8 & 0xff];
};
var packI32 = function(it){
  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
};
var packF64 = function(it){
  return packIEEE754(it, 52, 8);
};
var packF32 = function(it){
  return packIEEE754(it, 23, 4);
};

var addGetter = function(C, key, internal){
  dP(C[PROTOTYPE], key, {get: function(){ return this[internal]; }});
};

var get = function(view, bytes, index, isLittleEndian){
  var numIndex = +index
    , intIndex = toInteger(numIndex);
  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b
    , start = intIndex + view[$OFFSET]
    , pack  = store.slice(start, start + bytes);
  return isLittleEndian ? pack : pack.reverse();
};
var set = function(view, bytes, index, conversion, value, isLittleEndian){
  var numIndex = +index
    , intIndex = toInteger(numIndex);
  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b
    , start = intIndex + view[$OFFSET]
    , pack  = conversion(+value);
  for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
};

var validateArrayBufferArguments = function(that, length){
  anInstance(that, $ArrayBuffer, ARRAY_BUFFER);
  var numberLength = +length
    , byteLength   = toLength(numberLength);
  if(numberLength != byteLength)throw RangeError(WRONG_LENGTH);
  return byteLength;
};

if(!$typed.ABV){
  $ArrayBuffer = function ArrayBuffer(length){
    var byteLength = validateArrayBufferArguments(this, length);
    this._b       = arrayFill.call(Array(byteLength), 0);
    this[$LENGTH] = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength){
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = buffer[$LENGTH]
      , offset       = toInteger(byteOffset);
    if(offset < 0 || offset > bufferLength)throw RangeError('Wrong offset!');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if(offset + byteLength > bufferLength)throw RangeError(WRONG_LENGTH);
    this[$BUFFER] = buffer;
    this[$OFFSET] = offset;
    this[$LENGTH] = byteLength;
  };

  if(DESCRIPTORS){
    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
    addGetter($DataView, BUFFER, '_b');
    addGetter($DataView, BYTE_LENGTH, '_l');
    addGetter($DataView, BYTE_OFFSET, '_o');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset){
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset){
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /*, littleEndian */){
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /*, littleEndian */){
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /*, littleEndian */){
      return unpackI32(get(this, 4, byteOffset, arguments[1]));
    },
    getUint32: function getUint32(byteOffset /*, littleEndian */){
      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /*, littleEndian */){
      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
    },
    getFloat64: function getFloat64(byteOffset /*, littleEndian */){
      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
    },
    setInt8: function setInt8(byteOffset, value){
      set(this, 1, byteOffset, packI8, value);
    },
    setUint8: function setUint8(byteOffset, value){
      set(this, 1, byteOffset, packI8, value);
    },
    setInt16: function setInt16(byteOffset, value /*, littleEndian */){
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setUint16: function setUint16(byteOffset, value /*, littleEndian */){
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setInt32: function setInt32(byteOffset, value /*, littleEndian */){
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setUint32: function setUint32(byteOffset, value /*, littleEndian */){
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setFloat32: function setFloat32(byteOffset, value /*, littleEndian */){
      set(this, 4, byteOffset, packF32, value, arguments[2]);
    },
    setFloat64: function setFloat64(byteOffset, value /*, littleEndian */){
      set(this, 8, byteOffset, packF64, value, arguments[2]);
    }
  });
} else {
  if(!fails(function(){
    new $ArrayBuffer;     // eslint-disable-line no-new
  }) || !fails(function(){
    new $ArrayBuffer(.5); // eslint-disable-line no-new
  })){
    $ArrayBuffer = function ArrayBuffer(length){
      return new BaseBuffer(validateArrayBufferArguments(this, length));
    };
    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
    for(var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ){
      if(!((key = keys[j++]) in $ArrayBuffer))hide($ArrayBuffer, key, BaseBuffer[key]);
    };
    if(!LIBRARY)ArrayBufferProto.constructor = $ArrayBuffer;
  }
  // iOS Safari 7.x bug
  var view = new $DataView(new $ArrayBuffer(2))
    , $setInt8 = $DataView[PROTOTYPE].setInt8;
  view.setInt8(0, 2147483648);
  view.setInt8(1, 2147483649);
  if(view.getInt8(0) || !view.getInt8(1))redefineAll($DataView[PROTOTYPE], {
    setInt8: function setInt8(byteOffset, value){
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value){
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, true);
}
setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
hide($DataView[PROTOTYPE], $typed.VIEW, true);
exports[ARRAY_BUFFER] = $ArrayBuffer;
exports[DATA_VIEW] = $DataView;
},{"./_an-instance":7,"./_array-fill":10,"./_descriptors":29,"./_fails":35,"./_global":39,"./_hide":41,"./_library":59,"./_object-dp":68,"./_object-gopn":73,"./_redefine-all":87,"./_set-to-string-tag":93,"./_to-integer":107,"./_to-length":109,"./_typed":114}],114:[function(require,module,exports){
var global = require('./_global')
  , hide   = require('./_hide')
  , uid    = require('./_uid')
  , TYPED  = uid('typed_array')
  , VIEW   = uid('view')
  , ABV    = !!(global.ArrayBuffer && global.DataView)
  , CONSTR = ABV
  , i = 0, l = 9, Typed;

var TypedArrayConstructors = (
  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
).split(',');

while(i < l){
  if(Typed = global[TypedArrayConstructors[i++]]){
    hide(Typed.prototype, TYPED, true);
    hide(Typed.prototype, VIEW, true);
  } else CONSTR = false;
}

module.exports = {
  ABV:    ABV,
  CONSTR: CONSTR,
  TYPED:  TYPED,
  VIEW:   VIEW
};
},{"./_global":39,"./_hide":41,"./_uid":115}],115:[function(require,module,exports){
var id = 0
  , px = Math.random();
module.exports = function(key){
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};
},{}],116:[function(require,module,exports){
var global         = require('./_global')
  , core           = require('./_core')
  , LIBRARY        = require('./_library')
  , wksExt         = require('./_wks-ext')
  , defineProperty = require('./_object-dp').f;
module.exports = function(name){
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
};
},{"./_core":24,"./_global":39,"./_library":59,"./_object-dp":68,"./_wks-ext":117}],117:[function(require,module,exports){
exports.f = require('./_wks');
},{"./_wks":118}],118:[function(require,module,exports){
var store      = require('./_shared')('wks')
  , uid        = require('./_uid')
  , Symbol     = require('./_global').Symbol
  , USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function(name){
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;
},{"./_global":39,"./_shared":95,"./_uid":115}],119:[function(require,module,exports){
var classof   = require('./_classof')
  , ITERATOR  = require('./_wks')('iterator')
  , Iterators = require('./_iterators');
module.exports = require('./_core').getIteratorMethod = function(it){
  if(it != undefined)return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};
},{"./_classof":18,"./_core":24,"./_iterators":57,"./_wks":118}],120:[function(require,module,exports){
// https://github.com/benjamingr/RexExp.escape
var $export = require('./_export')
  , $re     = require('./_replacer')(/[\\^$*+?.()|[\]{}]/g, '\\$&');

$export($export.S, 'RegExp', {escape: function escape(it){ return $re(it); }});

},{"./_export":33,"./_replacer":89}],121:[function(require,module,exports){
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
var $export = require('./_export');

$export($export.P, 'Array', {copyWithin: require('./_array-copy-within')});

require('./_add-to-unscopables')('copyWithin');
},{"./_add-to-unscopables":6,"./_array-copy-within":9,"./_export":33}],122:[function(require,module,exports){
'use strict';
var $export = require('./_export')
  , $every  = require('./_array-methods')(4);

$export($export.P + $export.F * !require('./_strict-method')([].every, true), 'Array', {
  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
  every: function every(callbackfn /* , thisArg */){
    return $every(this, callbackfn, arguments[1]);
  }
});
},{"./_array-methods":13,"./_export":33,"./_strict-method":97}],123:[function(require,module,exports){
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
var $export = require('./_export');

$export($export.P, 'Array', {fill: require('./_array-fill')});

require('./_add-to-unscopables')('fill');
},{"./_add-to-unscopables":6,"./_array-fill":10,"./_export":33}],124:[function(require,module,exports){
'use strict';
var $export = require('./_export')
  , $filter = require('./_array-methods')(2);

$export($export.P + $export.F * !require('./_strict-method')([].filter, true), 'Array', {
  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
  filter: function filter(callbackfn /* , thisArg */){
    return $filter(this, callbackfn, arguments[1]);
  }
});
},{"./_array-methods":13,"./_export":33,"./_strict-method":97}],125:[function(require,module,exports){
'use strict';
// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
var $export = require('./_export')
  , $find   = require('./_array-methods')(6)
  , KEY     = 'findIndex'
  , forced  = true;
// Shouldn't skip holes
if(KEY in [])Array(1)[KEY](function(){ forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  findIndex: function findIndex(callbackfn/*, that = undefined */){
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
require('./_add-to-unscopables')(KEY);
},{"./_add-to-unscopables":6,"./_array-methods":13,"./_export":33}],126:[function(require,module,exports){
'use strict';
// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
var $export = require('./_export')
  , $find   = require('./_array-methods')(5)
  , KEY     = 'find'
  , forced  = true;
// Shouldn't skip holes
if(KEY in [])Array(1)[KEY](function(){ forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn/*, that = undefined */){
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
require('./_add-to-unscopables')(KEY);
},{"./_add-to-unscopables":6,"./_array-methods":13,"./_export":33}],127:[function(require,module,exports){
'use strict';
var $export  = require('./_export')
  , $forEach = require('./_array-methods')(0)
  , STRICT   = require('./_strict-method')([].forEach, true);

$export($export.P + $export.F * !STRICT, 'Array', {
  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
  forEach: function forEach(callbackfn /* , thisArg */){
    return $forEach(this, callbackfn, arguments[1]);
  }
});
},{"./_array-methods":13,"./_export":33,"./_strict-method":97}],128:[function(require,module,exports){
'use strict';
var ctx            = require('./_ctx')
  , $export        = require('./_export')
  , toObject       = require('./_to-object')
  , call           = require('./_iter-call')
  , isArrayIter    = require('./_is-array-iter')
  , toLength       = require('./_to-length')
  , createProperty = require('./_create-property')
  , getIterFn      = require('./core.get-iterator-method');

$export($export.S + $export.F * !require('./_iter-detect')(function(iter){ Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
    var O       = toObject(arrayLike)
      , C       = typeof this == 'function' ? this : Array
      , aLen    = arguments.length
      , mapfn   = aLen > 1 ? arguments[1] : undefined
      , mapping = mapfn !== undefined
      , index   = 0
      , iterFn  = getIterFn(O)
      , length, result, step, iterator;
    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for(result = new C(length); length > index; index++){
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});

},{"./_create-property":25,"./_ctx":26,"./_export":33,"./_is-array-iter":47,"./_iter-call":52,"./_iter-detect":55,"./_to-length":109,"./_to-object":110,"./core.get-iterator-method":119}],129:[function(require,module,exports){
'use strict';
var $export       = require('./_export')
  , $indexOf      = require('./_array-includes')(false)
  , $native       = [].indexOf
  , NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {
  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
  indexOf: function indexOf(searchElement /*, fromIndex = 0 */){
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? $native.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments[1]);
  }
});
},{"./_array-includes":12,"./_export":33,"./_strict-method":97}],130:[function(require,module,exports){
// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
var $export = require('./_export');

$export($export.S, 'Array', {isArray: require('./_is-array')});
},{"./_export":33,"./_is-array":48}],131:[function(require,module,exports){
'use strict';
var addToUnscopables = require('./_add-to-unscopables')
  , step             = require('./_iter-step')
  , Iterators        = require('./_iterators')
  , toIObject        = require('./_to-iobject');

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function(){
  var O     = this._t
    , kind  = this._k
    , index = this._i++;
  if(!O || index >= O.length){
    this._t = undefined;
    return step(1);
  }
  if(kind == 'keys'  )return step(0, index);
  if(kind == 'values')return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');
},{"./_add-to-unscopables":6,"./_iter-define":54,"./_iter-step":56,"./_iterators":57,"./_to-iobject":108}],132:[function(require,module,exports){
'use strict';
// 22.1.3.13 Array.prototype.join(separator)
var $export   = require('./_export')
  , toIObject = require('./_to-iobject')
  , arrayJoin = [].join;

// fallback for not array-like strings
$export($export.P + $export.F * (require('./_iobject') != Object || !require('./_strict-method')(arrayJoin)), 'Array', {
  join: function join(separator){
    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
  }
});
},{"./_export":33,"./_iobject":46,"./_strict-method":97,"./_to-iobject":108}],133:[function(require,module,exports){
'use strict';
var $export       = require('./_export')
  , toIObject     = require('./_to-iobject')
  , toInteger     = require('./_to-integer')
  , toLength      = require('./_to-length')
  , $native       = [].lastIndexOf
  , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {
  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
  lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){
    // convert -0 to +0
    if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;
    var O      = toIObject(this)
      , length = toLength(O.length)
      , index  = length - 1;
    if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));
    if(index < 0)index = length + index;
    for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;
    return -1;
  }
});
},{"./_export":33,"./_strict-method":97,"./_to-integer":107,"./_to-iobject":108,"./_to-length":109}],134:[function(require,module,exports){
'use strict';
var $export = require('./_export')
  , $map    = require('./_array-methods')(1);

$export($export.P + $export.F * !require('./_strict-method')([].map, true), 'Array', {
  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
  map: function map(callbackfn /* , thisArg */){
    return $map(this, callbackfn, arguments[1]);
  }
});
},{"./_array-methods":13,"./_export":33,"./_strict-method":97}],135:[function(require,module,exports){
'use strict';
var $export        = require('./_export')
  , createProperty = require('./_create-property');

// WebKit Array.of isn't generic
$export($export.S + $export.F * require('./_fails')(function(){
  function F(){}
  return !(Array.of.call(F) instanceof F);
}), 'Array', {
  // 22.1.2.3 Array.of( ...items)
  of: function of(/* ...args */){
    var index  = 0
      , aLen   = arguments.length
      , result = new (typeof this == 'function' ? this : Array)(aLen);
    while(aLen > index)createProperty(result, index, arguments[index++]);
    result.length = aLen;
    return result;
  }
});
},{"./_create-property":25,"./_export":33,"./_fails":35}],136:[function(require,module,exports){
'use strict';
var $export = require('./_export')
  , $reduce = require('./_array-reduce');

$export($export.P + $export.F * !require('./_strict-method')([].reduceRight, true), 'Array', {
  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
  reduceRight: function reduceRight(callbackfn /* , initialValue */){
    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
  }
});
},{"./_array-reduce":14,"./_export":33,"./_strict-method":97}],137:[function(require,module,exports){
'use strict';
var $export = require('./_export')
  , $reduce = require('./_array-reduce');

$export($export.P + $export.F * !require('./_strict-method')([].reduce, true), 'Array', {
  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
  reduce: function reduce(callbackfn /* , initialValue */){
    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
  }
});
},{"./_array-reduce":14,"./_export":33,"./_strict-method":97}],138:[function(require,module,exports){
'use strict';
var $export    = require('./_export')
  , html       = require('./_html')
  , cof        = require('./_cof')
  , toIndex    = require('./_to-index')
  , toLength   = require('./_to-length')
  , arraySlice = [].slice;

// fallback for not array-like ES3 strings and DOM objects
$export($export.P + $export.F * require('./_fails')(function(){
  if(html)arraySlice.call(html);
}), 'Array', {
  slice: function slice(begin, end){
    var len   = toLength(this.length)
      , klass = cof(this);
    end = end === undefined ? len : end;
    if(klass == 'Array')return arraySlice.call(this, begin, end);
    var start  = toIndex(begin, len)
      , upTo   = toIndex(end, len)
      , size   = toLength(upTo - start)
      , cloned = Array(size)
      , i      = 0;
    for(; i < size; i++)cloned[i] = klass == 'String'
      ? this.charAt(start + i)
      : this[start + i];
    return cloned;
  }
});
},{"./_cof":19,"./_export":33,"./_fails":35,"./_html":42,"./_to-index":106,"./_to-length":109}],139:[function(require,module,exports){
'use strict';
var $export = require('./_export')
  , $some   = require('./_array-methods')(3);

$export($export.P + $export.F * !require('./_strict-method')([].some, true), 'Array', {
  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
  some: function some(callbackfn /* , thisArg */){
    return $some(this, callbackfn, arguments[1]);
  }
});
},{"./_array-methods":13,"./_export":33,"./_strict-method":97}],140:[function(require,module,exports){
'use strict';
var $export   = require('./_export')
  , aFunction = require('./_a-function')
  , toObject  = require('./_to-object')
  , fails     = require('./_fails')
  , $sort     = [].sort
  , test      = [1, 2, 3];

$export($export.P + $export.F * (fails(function(){
  // IE8-
  test.sort(undefined);
}) || !fails(function(){
  // V8 bug
  test.sort(null);
  // Old WebKit
}) || !require('./_strict-method')($sort)), 'Array', {
  // 22.1.3.25 Array.prototype.sort(comparefn)
  sort: function sort(comparefn){
    return comparefn === undefined
      ? $sort.call(toObject(this))
      : $sort.call(toObject(this), aFunction(comparefn));
  }
});
},{"./_a-function":4,"./_export":33,"./_fails":35,"./_strict-method":97,"./_to-object":110}],141:[function(require,module,exports){
require('./_set-species')('Array');
},{"./_set-species":92}],142:[function(require,module,exports){
// 20.3.3.1 / 15.9.4.4 Date.now()
var $export = require('./_export');

$export($export.S, 'Date', {now: function(){ return new Date().getTime(); }});
},{"./_export":33}],143:[function(require,module,exports){
'use strict';
// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
var $export = require('./_export')
  , fails   = require('./_fails')
  , getTime = Date.prototype.getTime;

var lz = function(num){
  return num > 9 ? num : '0' + num;
};

// PhantomJS / old WebKit has a broken implementations
$export($export.P + $export.F * (fails(function(){
  return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
}) || !fails(function(){
  new Date(NaN).toISOString();
})), 'Date', {
  toISOString: function toISOString(){
    if(!isFinite(getTime.call(this)))throw RangeError('Invalid time value');
    var d = this
      , y = d.getUTCFullYear()
      , m = d.getUTCMilliseconds()
      , s = y < 0 ? '-' : y > 9999 ? '+' : '';
    return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
      '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
      'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
      ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
  }
});
},{"./_export":33,"./_fails":35}],144:[function(require,module,exports){
'use strict';
var $export     = require('./_export')
  , toObject    = require('./_to-object')
  , toPrimitive = require('./_to-primitive');

$export($export.P + $export.F * require('./_fails')(function(){
  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({toISOString: function(){ return 1; }}) !== 1;
}), 'Date', {
  toJSON: function toJSON(key){
    var O  = toObject(this)
      , pv = toPrimitive(O);
    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
  }
});
},{"./_export":33,"./_fails":35,"./_to-object":110,"./_to-primitive":111}],145:[function(require,module,exports){
var TO_PRIMITIVE = require('./_wks')('toPrimitive')
  , proto        = Date.prototype;

if(!(TO_PRIMITIVE in proto))require('./_hide')(proto, TO_PRIMITIVE, require('./_date-to-primitive'));
},{"./_date-to-primitive":27,"./_hide":41,"./_wks":118}],146:[function(require,module,exports){
var DateProto    = Date.prototype
  , INVALID_DATE = 'Invalid Date'
  , TO_STRING    = 'toString'
  , $toString    = DateProto[TO_STRING]
  , getTime      = DateProto.getTime;
if(new Date(NaN) + '' != INVALID_DATE){
  require('./_redefine')(DateProto, TO_STRING, function toString(){
    var value = getTime.call(this);
    return value === value ? $toString.call(this) : INVALID_DATE;
  });
}
},{"./_redefine":88}],147:[function(require,module,exports){
// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
var $export = require('./_export');

$export($export.P, 'Function', {bind: require('./_bind')});
},{"./_bind":17,"./_export":33}],148:[function(require,module,exports){
'use strict';
var isObject       = require('./_is-object')
  , getPrototypeOf = require('./_object-gpo')
  , HAS_INSTANCE   = require('./_wks')('hasInstance')
  , FunctionProto  = Function.prototype;
// 19.2.3.6 Function.prototype[@@hasInstance](V)
if(!(HAS_INSTANCE in FunctionProto))require('./_object-dp').f(FunctionProto, HAS_INSTANCE, {value: function(O){
  if(typeof this != 'function' || !isObject(O))return false;
  if(!isObject(this.prototype))return O instanceof this;
  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
  while(O = getPrototypeOf(O))if(this.prototype === O)return true;
  return false;
}});
},{"./_is-object":50,"./_object-dp":68,"./_object-gpo":75,"./_wks":118}],149:[function(require,module,exports){
var dP         = require('./_object-dp').f
  , createDesc = require('./_property-desc')
  , has        = require('./_has')
  , FProto     = Function.prototype
  , nameRE     = /^\s*function ([^ (]*)/
  , NAME       = 'name';

var isExtensible = Object.isExtensible || function(){
  return true;
};

// 19.2.4.2 name
NAME in FProto || require('./_descriptors') && dP(FProto, NAME, {
  configurable: true,
  get: function(){
    try {
      var that = this
        , name = ('' + that).match(nameRE)[1];
      has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));
      return name;
    } catch(e){
      return '';
    }
  }
});
},{"./_descriptors":29,"./_has":40,"./_object-dp":68,"./_property-desc":86}],150:[function(require,module,exports){
'use strict';
var strong = require('./_collection-strong');

// 23.1 Map Objects
module.exports = require('./_collection')('Map', function(get){
  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key){
    var entry = strong.getEntry(this, key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value){
    return strong.def(this, key === 0 ? 0 : key, value);
  }
}, strong, true);
},{"./_collection":23,"./_collection-strong":20}],151:[function(require,module,exports){
// 20.2.2.3 Math.acosh(x)
var $export = require('./_export')
  , log1p   = require('./_math-log1p')
  , sqrt    = Math.sqrt
  , $acosh  = Math.acosh;

$export($export.S + $export.F * !($acosh
  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
  && Math.floor($acosh(Number.MAX_VALUE)) == 710
  // Tor Browser bug: Math.acosh(Infinity) -> NaN 
  && $acosh(Infinity) == Infinity
), 'Math', {
  acosh: function acosh(x){
    return (x = +x) < 1 ? NaN : x > 94906265.62425156
      ? Math.log(x) + Math.LN2
      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
  }
});
},{"./_export":33,"./_math-log1p":61}],152:[function(require,module,exports){
// 20.2.2.5 Math.asinh(x)
var $export = require('./_export')
  , $asinh  = Math.asinh;

function asinh(x){
  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
}

// Tor Browser bug: Math.asinh(0) -> -0 
$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});
},{"./_export":33}],153:[function(require,module,exports){
// 20.2.2.7 Math.atanh(x)
var $export = require('./_export')
  , $atanh  = Math.atanh;

// Tor Browser bug: Math.atanh(-0) -> 0 
$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
  atanh: function atanh(x){
    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
  }
});
},{"./_export":33}],154:[function(require,module,exports){
// 20.2.2.9 Math.cbrt(x)
var $export = require('./_export')
  , sign    = require('./_math-sign');

$export($export.S, 'Math', {
  cbrt: function cbrt(x){
    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
  }
});
},{"./_export":33,"./_math-sign":62}],155:[function(require,module,exports){
// 20.2.2.11 Math.clz32(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  clz32: function clz32(x){
    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
  }
});
},{"./_export":33}],156:[function(require,module,exports){
// 20.2.2.12 Math.cosh(x)
var $export = require('./_export')
  , exp     = Math.exp;

$export($export.S, 'Math', {
  cosh: function cosh(x){
    return (exp(x = +x) + exp(-x)) / 2;
  }
});
},{"./_export":33}],157:[function(require,module,exports){
// 20.2.2.14 Math.expm1(x)
var $export = require('./_export')
  , $expm1  = require('./_math-expm1');

$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});
},{"./_export":33,"./_math-expm1":60}],158:[function(require,module,exports){
// 20.2.2.16 Math.fround(x)
var $export   = require('./_export')
  , sign      = require('./_math-sign')
  , pow       = Math.pow
  , EPSILON   = pow(2, -52)
  , EPSILON32 = pow(2, -23)
  , MAX32     = pow(2, 127) * (2 - EPSILON32)
  , MIN32     = pow(2, -126);

var roundTiesToEven = function(n){
  return n + 1 / EPSILON - 1 / EPSILON;
};


$export($export.S, 'Math', {
  fround: function fround(x){
    var $abs  = Math.abs(x)
      , $sign = sign(x)
      , a, result;
    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
    a = (1 + EPSILON32 / EPSILON) * $abs;
    result = a - (a - $abs);
    if(result > MAX32 || result != result)return $sign * Infinity;
    return $sign * result;
  }
});
},{"./_export":33,"./_math-sign":62}],159:[function(require,module,exports){
// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
var $export = require('./_export')
  , abs     = Math.abs;

$export($export.S, 'Math', {
  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars
    var sum  = 0
      , i    = 0
      , aLen = arguments.length
      , larg = 0
      , arg, div;
    while(i < aLen){
      arg = abs(arguments[i++]);
      if(larg < arg){
        div  = larg / arg;
        sum  = sum * div * div + 1;
        larg = arg;
      } else if(arg > 0){
        div  = arg / larg;
        sum += div * div;
      } else sum += arg;
    }
    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
  }
});
},{"./_export":33}],160:[function(require,module,exports){
// 20.2.2.18 Math.imul(x, y)
var $export = require('./_export')
  , $imul   = Math.imul;

// some WebKit versions fails with big numbers, some has wrong arity
$export($export.S + $export.F * require('./_fails')(function(){
  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
}), 'Math', {
  imul: function imul(x, y){
    var UINT16 = 0xffff
      , xn = +x
      , yn = +y
      , xl = UINT16 & xn
      , yl = UINT16 & yn;
    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
  }
});
},{"./_export":33,"./_fails":35}],161:[function(require,module,exports){
// 20.2.2.21 Math.log10(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  log10: function log10(x){
    return Math.log(x) / Math.LN10;
  }
});
},{"./_export":33}],162:[function(require,module,exports){
// 20.2.2.20 Math.log1p(x)
var $export = require('./_export');

$export($export.S, 'Math', {log1p: require('./_math-log1p')});
},{"./_export":33,"./_math-log1p":61}],163:[function(require,module,exports){
// 20.2.2.22 Math.log2(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  log2: function log2(x){
    return Math.log(x) / Math.LN2;
  }
});
},{"./_export":33}],164:[function(require,module,exports){
// 20.2.2.28 Math.sign(x)
var $export = require('./_export');

$export($export.S, 'Math', {sign: require('./_math-sign')});
},{"./_export":33,"./_math-sign":62}],165:[function(require,module,exports){
// 20.2.2.30 Math.sinh(x)
var $export = require('./_export')
  , expm1   = require('./_math-expm1')
  , exp     = Math.exp;

// V8 near Chromium 38 has a problem with very small numbers
$export($export.S + $export.F * require('./_fails')(function(){
  return !Math.sinh(-2e-17) != -2e-17;
}), 'Math', {
  sinh: function sinh(x){
    return Math.abs(x = +x) < 1
      ? (expm1(x) - expm1(-x)) / 2
      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
  }
});
},{"./_export":33,"./_fails":35,"./_math-expm1":60}],166:[function(require,module,exports){
// 20.2.2.33 Math.tanh(x)
var $export = require('./_export')
  , expm1   = require('./_math-expm1')
  , exp     = Math.exp;

$export($export.S, 'Math', {
  tanh: function tanh(x){
    var a = expm1(x = +x)
      , b = expm1(-x);
    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
  }
});
},{"./_export":33,"./_math-expm1":60}],167:[function(require,module,exports){
// 20.2.2.34 Math.trunc(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  trunc: function trunc(it){
    return (it > 0 ? Math.floor : Math.ceil)(it);
  }
});
},{"./_export":33}],168:[function(require,module,exports){
'use strict';
var global            = require('./_global')
  , has               = require('./_has')
  , cof               = require('./_cof')
  , inheritIfRequired = require('./_inherit-if-required')
  , toPrimitive       = require('./_to-primitive')
  , fails             = require('./_fails')
  , gOPN              = require('./_object-gopn').f
  , gOPD              = require('./_object-gopd').f
  , dP                = require('./_object-dp').f
  , $trim             = require('./_string-trim').trim
  , NUMBER            = 'Number'
  , $Number           = global[NUMBER]
  , Base              = $Number
  , proto             = $Number.prototype
  // Opera ~12 has broken Object#toString
  , BROKEN_COF        = cof(require('./_object-create')(proto)) == NUMBER
  , TRIM              = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
var toNumber = function(argument){
  var it = toPrimitive(argument, false);
  if(typeof it == 'string' && it.length > 2){
    it = TRIM ? it.trim() : $trim(it, 3);
    var first = it.charCodeAt(0)
      , third, radix, maxCode;
    if(first === 43 || first === 45){
      third = it.charCodeAt(2);
      if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if(first === 48){
      switch(it.charCodeAt(1)){
        case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
        case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
        default : return +it;
      }
      for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){
        code = digits.charCodeAt(i);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if(code < 48 || code > maxCode)return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

if(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){
  $Number = function Number(value){
    var it = arguments.length < 1 ? 0 : value
      , that = this;
    return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)
        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
  };
  for(var keys = require('./_descriptors') ? gOPN(Base) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES6 (in case, if modules with ES6 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++){
    if(has(Base, key = keys[j]) && !has($Number, key)){
      dP($Number, key, gOPD(Base, key));
    }
  }
  $Number.prototype = proto;
  proto.constructor = $Number;
  require('./_redefine')(global, NUMBER, $Number);
}
},{"./_cof":19,"./_descriptors":29,"./_fails":35,"./_global":39,"./_has":40,"./_inherit-if-required":44,"./_object-create":67,"./_object-dp":68,"./_object-gopd":71,"./_object-gopn":73,"./_redefine":88,"./_string-trim":103,"./_to-primitive":111}],169:[function(require,module,exports){
// 20.1.2.1 Number.EPSILON
var $export = require('./_export');

$export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});
},{"./_export":33}],170:[function(require,module,exports){
// 20.1.2.2 Number.isFinite(number)
var $export   = require('./_export')
  , _isFinite = require('./_global').isFinite;

$export($export.S, 'Number', {
  isFinite: function isFinite(it){
    return typeof it == 'number' && _isFinite(it);
  }
});
},{"./_export":33,"./_global":39}],171:[function(require,module,exports){
// 20.1.2.3 Number.isInteger(number)
var $export = require('./_export');

$export($export.S, 'Number', {isInteger: require('./_is-integer')});
},{"./_export":33,"./_is-integer":49}],172:[function(require,module,exports){
// 20.1.2.4 Number.isNaN(number)
var $export = require('./_export');

$export($export.S, 'Number', {
  isNaN: function isNaN(number){
    return number != number;
  }
});
},{"./_export":33}],173:[function(require,module,exports){
// 20.1.2.5 Number.isSafeInteger(number)
var $export   = require('./_export')
  , isInteger = require('./_is-integer')
  , abs       = Math.abs;

$export($export.S, 'Number', {
  isSafeInteger: function isSafeInteger(number){
    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
  }
});
},{"./_export":33,"./_is-integer":49}],174:[function(require,module,exports){
// 20.1.2.6 Number.MAX_SAFE_INTEGER
var $export = require('./_export');

$export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});
},{"./_export":33}],175:[function(require,module,exports){
// 20.1.2.10 Number.MIN_SAFE_INTEGER
var $export = require('./_export');

$export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});
},{"./_export":33}],176:[function(require,module,exports){
var $export     = require('./_export')
  , $parseFloat = require('./_parse-float');
// 20.1.2.12 Number.parseFloat(string)
$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});
},{"./_export":33,"./_parse-float":82}],177:[function(require,module,exports){
var $export   = require('./_export')
  , $parseInt = require('./_parse-int');
// 20.1.2.13 Number.parseInt(string, radix)
$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});
},{"./_export":33,"./_parse-int":83}],178:[function(require,module,exports){
'use strict';
var $export      = require('./_export')
  , toInteger    = require('./_to-integer')
  , aNumberValue = require('./_a-number-value')
  , repeat       = require('./_string-repeat')
  , $toFixed     = 1..toFixed
  , floor        = Math.floor
  , data         = [0, 0, 0, 0, 0, 0]
  , ERROR        = 'Number.toFixed: incorrect invocation!'
  , ZERO         = '0';

var multiply = function(n, c){
  var i  = -1
    , c2 = c;
  while(++i < 6){
    c2 += n * data[i];
    data[i] = c2 % 1e7;
    c2 = floor(c2 / 1e7);
  }
};
var divide = function(n){
  var i = 6
    , c = 0;
  while(--i >= 0){
    c += data[i];
    data[i] = floor(c / n);
    c = (c % n) * 1e7;
  }
};
var numToString = function(){
  var i = 6
    , s = '';
  while(--i >= 0){
    if(s !== '' || i === 0 || data[i] !== 0){
      var t = String(data[i]);
      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
    }
  } return s;
};
var pow = function(x, n, acc){
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};
var log = function(x){
  var n  = 0
    , x2 = x;
  while(x2 >= 4096){
    n += 12;
    x2 /= 4096;
  }
  while(x2 >= 2){
    n  += 1;
    x2 /= 2;
  } return n;
};

$export($export.P + $export.F * (!!$toFixed && (
  0.00008.toFixed(3) !== '0.000' ||
  0.9.toFixed(0) !== '1' ||
  1.255.toFixed(2) !== '1.25' ||
  1000000000000000128..toFixed(0) !== '1000000000000000128'
) || !require('./_fails')(function(){
  // V8 ~ Android 4.3-
  $toFixed.call({});
})), 'Number', {
  toFixed: function toFixed(fractionDigits){
    var x = aNumberValue(this, ERROR)
      , f = toInteger(fractionDigits)
      , s = ''
      , m = ZERO
      , e, z, j, k;
    if(f < 0 || f > 20)throw RangeError(ERROR);
    if(x != x)return 'NaN';
    if(x <= -1e21 || x >= 1e21)return String(x);
    if(x < 0){
      s = '-';
      x = -x;
    }
    if(x > 1e-21){
      e = log(x * pow(2, 69, 1)) - 69;
      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;
      if(e > 0){
        multiply(0, z);
        j = f;
        while(j >= 7){
          multiply(1e7, 0);
          j -= 7;
        }
        multiply(pow(10, j, 1), 0);
        j = e - 1;
        while(j >= 23){
          divide(1 << 23);
          j -= 23;
        }
        divide(1 << j);
        multiply(1, 1);
        divide(2);
        m = numToString();
      } else {
        multiply(0, z);
        multiply(1 << -e, 0);
        m = numToString() + repeat.call(ZERO, f);
      }
    }
    if(f > 0){
      k = m.length;
      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
    } else {
      m = s + m;
    } return m;
  }
});
},{"./_a-number-value":5,"./_export":33,"./_fails":35,"./_string-repeat":102,"./_to-integer":107}],179:[function(require,module,exports){
'use strict';
var $export      = require('./_export')
  , $fails       = require('./_fails')
  , aNumberValue = require('./_a-number-value')
  , $toPrecision = 1..toPrecision;

$export($export.P + $export.F * ($fails(function(){
  // IE7-
  return $toPrecision.call(1, undefined) !== '1';
}) || !$fails(function(){
  // V8 ~ Android 4.3-
  $toPrecision.call({});
})), 'Number', {
  toPrecision: function toPrecision(precision){
    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision); 
  }
});
},{"./_a-number-value":5,"./_export":33,"./_fails":35}],180:[function(require,module,exports){
// 19.1.3.1 Object.assign(target, source)
var $export = require('./_export');

$export($export.S + $export.F, 'Object', {assign: require('./_object-assign')});
},{"./_export":33,"./_object-assign":66}],181:[function(require,module,exports){
var $export = require('./_export')
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', {create: require('./_object-create')});
},{"./_export":33,"./_object-create":67}],182:[function(require,module,exports){
var $export = require('./_export');
// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperties: require('./_object-dps')});
},{"./_descriptors":29,"./_export":33,"./_object-dps":69}],183:[function(require,module,exports){
var $export = require('./_export');
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});
},{"./_descriptors":29,"./_export":33,"./_object-dp":68}],184:[function(require,module,exports){
// 19.1.2.5 Object.freeze(O)
var isObject = require('./_is-object')
  , meta     = require('./_meta').onFreeze;

require('./_object-sap')('freeze', function($freeze){
  return function freeze(it){
    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
  };
});
},{"./_is-object":50,"./_meta":63,"./_object-sap":79}],185:[function(require,module,exports){
// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject                 = require('./_to-iobject')
  , $getOwnPropertyDescriptor = require('./_object-gopd').f;

require('./_object-sap')('getOwnPropertyDescriptor', function(){
  return function getOwnPropertyDescriptor(it, key){
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});
},{"./_object-gopd":71,"./_object-sap":79,"./_to-iobject":108}],186:[function(require,module,exports){
// 19.1.2.7 Object.getOwnPropertyNames(O)
require('./_object-sap')('getOwnPropertyNames', function(){
  return require('./_object-gopn-ext').f;
});
},{"./_object-gopn-ext":72,"./_object-sap":79}],187:[function(require,module,exports){
// 19.1.2.9 Object.getPrototypeOf(O)
var toObject        = require('./_to-object')
  , $getPrototypeOf = require('./_object-gpo');

require('./_object-sap')('getPrototypeOf', function(){
  return function getPrototypeOf(it){
    return $getPrototypeOf(toObject(it));
  };
});
},{"./_object-gpo":75,"./_object-sap":79,"./_to-object":110}],188:[function(require,module,exports){
// 19.1.2.11 Object.isExtensible(O)
var isObject = require('./_is-object');

require('./_object-sap')('isExtensible', function($isExtensible){
  return function isExtensible(it){
    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
  };
});
},{"./_is-object":50,"./_object-sap":79}],189:[function(require,module,exports){
// 19.1.2.12 Object.isFrozen(O)
var isObject = require('./_is-object');

require('./_object-sap')('isFrozen', function($isFrozen){
  return function isFrozen(it){
    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
  };
});
},{"./_is-object":50,"./_object-sap":79}],190:[function(require,module,exports){
// 19.1.2.13 Object.isSealed(O)
var isObject = require('./_is-object');

require('./_object-sap')('isSealed', function($isSealed){
  return function isSealed(it){
    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
  };
});
},{"./_is-object":50,"./_object-sap":79}],191:[function(require,module,exports){
// 19.1.3.10 Object.is(value1, value2)
var $export = require('./_export');
$export($export.S, 'Object', {is: require('./_same-value')});
},{"./_export":33,"./_same-value":90}],192:[function(require,module,exports){
// 19.1.2.14 Object.keys(O)
var toObject = require('./_to-object')
  , $keys    = require('./_object-keys');

require('./_object-sap')('keys', function(){
  return function keys(it){
    return $keys(toObject(it));
  };
});
},{"./_object-keys":77,"./_object-sap":79,"./_to-object":110}],193:[function(require,module,exports){
// 19.1.2.15 Object.preventExtensions(O)
var isObject = require('./_is-object')
  , meta     = require('./_meta').onFreeze;

require('./_object-sap')('preventExtensions', function($preventExtensions){
  return function preventExtensions(it){
    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
  };
});
},{"./_is-object":50,"./_meta":63,"./_object-sap":79}],194:[function(require,module,exports){
// 19.1.2.17 Object.seal(O)
var isObject = require('./_is-object')
  , meta     = require('./_meta').onFreeze;

require('./_object-sap')('seal', function($seal){
  return function seal(it){
    return $seal && isObject(it) ? $seal(meta(it)) : it;
  };
});
},{"./_is-object":50,"./_meta":63,"./_object-sap":79}],195:[function(require,module,exports){
// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = require('./_export');
$export($export.S, 'Object', {setPrototypeOf: require('./_set-proto').set});
},{"./_export":33,"./_set-proto":91}],196:[function(require,module,exports){
'use strict';
// 19.1.3.6 Object.prototype.toString()
var classof = require('./_classof')
  , test    = {};
test[require('./_wks')('toStringTag')] = 'z';
if(test + '' != '[object z]'){
  require('./_redefine')(Object.prototype, 'toString', function toString(){
    return '[object ' + classof(this) + ']';
  }, true);
}
},{"./_classof":18,"./_redefine":88,"./_wks":118}],197:[function(require,module,exports){
var $export     = require('./_export')
  , $parseFloat = require('./_parse-float');
// 18.2.4 parseFloat(string)
$export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});
},{"./_export":33,"./_parse-float":82}],198:[function(require,module,exports){
var $export   = require('./_export')
  , $parseInt = require('./_parse-int');
// 18.2.5 parseInt(string, radix)
$export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});
},{"./_export":33,"./_parse-int":83}],199:[function(require,module,exports){
'use strict';
var LIBRARY            = require('./_library')
  , global             = require('./_global')
  , ctx                = require('./_ctx')
  , classof            = require('./_classof')
  , $export            = require('./_export')
  , isObject           = require('./_is-object')
  , aFunction          = require('./_a-function')
  , anInstance         = require('./_an-instance')
  , forOf              = require('./_for-of')
  , speciesConstructor = require('./_species-constructor')
  , task               = require('./_task').set
  , microtask          = require('./_microtask')()
  , PROMISE            = 'Promise'
  , TypeError          = global.TypeError
  , process            = global.process
  , $Promise           = global[PROMISE]
  , process            = global.process
  , isNode             = classof(process) == 'process'
  , empty              = function(){ /* empty */ }
  , Internal, GenericPromiseCapability, Wrapper;

var USE_NATIVE = !!function(){
  try {
    // correct subclassing with @@species support
    var promise     = $Promise.resolve(1)
      , FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function(exec){ exec(empty, empty); };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
  } catch(e){ /* empty */ }
}();

// helpers
var sameConstructor = function(a, b){
  // with library wrapper special case
  return a === b || a === $Promise && b === Wrapper;
};
var isThenable = function(it){
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var newPromiseCapability = function(C){
  return sameConstructor($Promise, C)
    ? new PromiseCapability(C)
    : new GenericPromiseCapability(C);
};
var PromiseCapability = GenericPromiseCapability = function(C){
  var resolve, reject;
  this.promise = new C(function($$resolve, $$reject){
    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject  = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject  = aFunction(reject);
};
var perform = function(exec){
  try {
    exec();
  } catch(e){
    return {error: e};
  }
};
var notify = function(promise, isReject){
  if(promise._n)return;
  promise._n = true;
  var chain = promise._c;
  microtask(function(){
    var value = promise._v
      , ok    = promise._s == 1
      , i     = 0;
    var run = function(reaction){
      var handler = ok ? reaction.ok : reaction.fail
        , resolve = reaction.resolve
        , reject  = reaction.reject
        , domain  = reaction.domain
        , result, then;
      try {
        if(handler){
          if(!ok){
            if(promise._h == 2)onHandleUnhandled(promise);
            promise._h = 1;
          }
          if(handler === true)result = value;
          else {
            if(domain)domain.enter();
            result = handler(value);
            if(domain)domain.exit();
          }
          if(result === reaction.promise){
            reject(TypeError('Promise-chain cycle'));
          } else if(then = isThenable(result)){
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch(e){
        reject(e);
      }
    };
    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if(isReject && !promise._h)onUnhandled(promise);
  });
};
var onUnhandled = function(promise){
  task.call(global, function(){
    var value = promise._v
      , abrupt, handler, console;
    if(isUnhandled(promise)){
      abrupt = perform(function(){
        if(isNode){
          process.emit('unhandledRejection', value, promise);
        } else if(handler = global.onunhandledrejection){
          handler({promise: promise, reason: value});
        } else if((console = global.console) && console.error){
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if(abrupt)throw abrupt.error;
  });
};
var isUnhandled = function(promise){
  if(promise._h == 1)return false;
  var chain = promise._a || promise._c
    , i     = 0
    , reaction;
  while(chain.length > i){
    reaction = chain[i++];
    if(reaction.fail || !isUnhandled(reaction.promise))return false;
  } return true;
};
var onHandleUnhandled = function(promise){
  task.call(global, function(){
    var handler;
    if(isNode){
      process.emit('rejectionHandled', promise);
    } else if(handler = global.onrejectionhandled){
      handler({promise: promise, reason: promise._v});
    }
  });
};
var $reject = function(value){
  var promise = this;
  if(promise._d)return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if(!promise._a)promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function(value){
  var promise = this
    , then;
  if(promise._d)return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if(promise === value)throw TypeError("Promise can't be resolved itself");
    if(then = isThenable(value)){
      microtask(function(){
        var wrapper = {_w: promise, _d: false}; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch(e){
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch(e){
    $reject.call({_w: promise, _d: false}, e); // wrap
  }
};

// constructor polyfill
if(!USE_NATIVE){
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor){
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch(err){
      $reject.call(this, err);
    }
  };
  Internal = function Promise(executor){
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = require('./_redefine-all')($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected){
      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail   = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if(this._a)this._a.push(reaction);
      if(this._s)notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function(onRejected){
      return this.then(undefined, onRejected);
    }
  });
  PromiseCapability = function(){
    var promise  = new Internal;
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject  = ctx($reject, promise, 1);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
require('./_set-to-string-tag')($Promise, PROMISE);
require('./_set-species')(PROMISE);
Wrapper = require('./_core')[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r){
    var capability = newPromiseCapability(this)
      , $$reject   = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x){
    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
    var capability = newPromiseCapability(this)
      , $$resolve  = capability.resolve;
    $$resolve(x);
    return capability.promise;
  }
});
$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function(iter){
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable){
    var C          = this
      , capability = newPromiseCapability(C)
      , resolve    = capability.resolve
      , reject     = capability.reject;
    var abrupt = perform(function(){
      var values    = []
        , index     = 0
        , remaining = 1;
      forOf(iterable, false, function(promise){
        var $index        = index++
          , alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function(value){
          if(alreadyCalled)return;
          alreadyCalled  = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if(abrupt)reject(abrupt.error);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable){
    var C          = this
      , capability = newPromiseCapability(C)
      , reject     = capability.reject;
    var abrupt = perform(function(){
      forOf(iterable, false, function(promise){
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if(abrupt)reject(abrupt.error);
    return capability.promise;
  }
});
},{"./_a-function":4,"./_an-instance":7,"./_classof":18,"./_core":24,"./_ctx":26,"./_export":33,"./_for-of":38,"./_global":39,"./_is-object":50,"./_iter-detect":55,"./_library":59,"./_microtask":65,"./_redefine-all":87,"./_set-species":92,"./_set-to-string-tag":93,"./_species-constructor":96,"./_task":105,"./_wks":118}],200:[function(require,module,exports){
// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
var $export   = require('./_export')
  , aFunction = require('./_a-function')
  , anObject  = require('./_an-object')
  , rApply    = (require('./_global').Reflect || {}).apply
  , fApply    = Function.apply;
// MS Edge argumentsList argument is optional
$export($export.S + $export.F * !require('./_fails')(function(){
  rApply(function(){});
}), 'Reflect', {
  apply: function apply(target, thisArgument, argumentsList){
    var T = aFunction(target)
      , L = anObject(argumentsList);
    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
  }
});
},{"./_a-function":4,"./_an-object":8,"./_export":33,"./_fails":35,"./_global":39}],201:[function(require,module,exports){
// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
var $export    = require('./_export')
  , create     = require('./_object-create')
  , aFunction  = require('./_a-function')
  , anObject   = require('./_an-object')
  , isObject   = require('./_is-object')
  , fails      = require('./_fails')
  , bind       = require('./_bind')
  , rConstruct = (require('./_global').Reflect || {}).construct;

// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function(){
  function F(){}
  return !(rConstruct(function(){}, [], F) instanceof F);
});
var ARGS_BUG = !fails(function(){
  rConstruct(function(){});
});

$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
  construct: function construct(Target, args /*, newTarget*/){
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if(ARGS_BUG && !NEW_TARGET_BUG)return rConstruct(Target, args, newTarget);
    if(Target == newTarget){
      // w/o altered newTarget, optimization for 0-4 arguments
      switch(args.length){
        case 0: return new Target;
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args));
    }
    // with altered newTarget, not support built-in constructors
    var proto    = newTarget.prototype
      , instance = create(isObject(proto) ? proto : Object.prototype)
      , result   = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});
},{"./_a-function":4,"./_an-object":8,"./_bind":17,"./_export":33,"./_fails":35,"./_global":39,"./_is-object":50,"./_object-create":67}],202:[function(require,module,exports){
// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
var dP          = require('./_object-dp')
  , $export     = require('./_export')
  , anObject    = require('./_an-object')
  , toPrimitive = require('./_to-primitive');

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
$export($export.S + $export.F * require('./_fails')(function(){
  Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});
}), 'Reflect', {
  defineProperty: function defineProperty(target, propertyKey, attributes){
    anObject(target);
    propertyKey = toPrimitive(propertyKey, true);
    anObject(attributes);
    try {
      dP.f(target, propertyKey, attributes);
      return true;
    } catch(e){
      return false;
    }
  }
});
},{"./_an-object":8,"./_export":33,"./_fails":35,"./_object-dp":68,"./_to-primitive":111}],203:[function(require,module,exports){
// 26.1.4 Reflect.deleteProperty(target, propertyKey)
var $export  = require('./_export')
  , gOPD     = require('./_object-gopd').f
  , anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  deleteProperty: function deleteProperty(target, propertyKey){
    var desc = gOPD(anObject(target), propertyKey);
    return desc && !desc.configurable ? false : delete target[propertyKey];
  }
});
},{"./_an-object":8,"./_export":33,"./_object-gopd":71}],204:[function(require,module,exports){
'use strict';
// 26.1.5 Reflect.enumerate(target)
var $export  = require('./_export')
  , anObject = require('./_an-object');
var Enumerate = function(iterated){
  this._t = anObject(iterated); // target
  this._i = 0;                  // next index
  var keys = this._k = []       // keys
    , key;
  for(key in iterated)keys.push(key);
};
require('./_iter-create')(Enumerate, 'Object', function(){
  var that = this
    , keys = that._k
    , key;
  do {
    if(that._i >= keys.length)return {value: undefined, done: true};
  } while(!((key = keys[that._i++]) in that._t));
  return {value: key, done: false};
});

$export($export.S, 'Reflect', {
  enumerate: function enumerate(target){
    return new Enumerate(target);
  }
});
},{"./_an-object":8,"./_export":33,"./_iter-create":53}],205:[function(require,module,exports){
// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
var gOPD     = require('./_object-gopd')
  , $export  = require('./_export')
  , anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){
    return gOPD.f(anObject(target), propertyKey);
  }
});
},{"./_an-object":8,"./_export":33,"./_object-gopd":71}],206:[function(require,module,exports){
// 26.1.8 Reflect.getPrototypeOf(target)
var $export  = require('./_export')
  , getProto = require('./_object-gpo')
  , anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  getPrototypeOf: function getPrototypeOf(target){
    return getProto(anObject(target));
  }
});
},{"./_an-object":8,"./_export":33,"./_object-gpo":75}],207:[function(require,module,exports){
// 26.1.6 Reflect.get(target, propertyKey [, receiver])
var gOPD           = require('./_object-gopd')
  , getPrototypeOf = require('./_object-gpo')
  , has            = require('./_has')
  , $export        = require('./_export')
  , isObject       = require('./_is-object')
  , anObject       = require('./_an-object');

function get(target, propertyKey/*, receiver*/){
  var receiver = arguments.length < 3 ? target : arguments[2]
    , desc, proto;
  if(anObject(target) === receiver)return target[propertyKey];
  if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')
    ? desc.value
    : desc.get !== undefined
      ? desc.get.call(receiver)
      : undefined;
  if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);
}

$export($export.S, 'Reflect', {get: get});
},{"./_an-object":8,"./_export":33,"./_has":40,"./_is-object":50,"./_object-gopd":71,"./_object-gpo":75}],208:[function(require,module,exports){
// 26.1.9 Reflect.has(target, propertyKey)
var $export = require('./_export');

$export($export.S, 'Reflect', {
  has: function has(target, propertyKey){
    return propertyKey in target;
  }
});
},{"./_export":33}],209:[function(require,module,exports){
// 26.1.10 Reflect.isExtensible(target)
var $export       = require('./_export')
  , anObject      = require('./_an-object')
  , $isExtensible = Object.isExtensible;

$export($export.S, 'Reflect', {
  isExtensible: function isExtensible(target){
    anObject(target);
    return $isExtensible ? $isExtensible(target) : true;
  }
});
},{"./_an-object":8,"./_export":33}],210:[function(require,module,exports){
// 26.1.11 Reflect.ownKeys(target)
var $export = require('./_export');

$export($export.S, 'Reflect', {ownKeys: require('./_own-keys')});
},{"./_export":33,"./_own-keys":81}],211:[function(require,module,exports){
// 26.1.12 Reflect.preventExtensions(target)
var $export            = require('./_export')
  , anObject           = require('./_an-object')
  , $preventExtensions = Object.preventExtensions;

$export($export.S, 'Reflect', {
  preventExtensions: function preventExtensions(target){
    anObject(target);
    try {
      if($preventExtensions)$preventExtensions(target);
      return true;
    } catch(e){
      return false;
    }
  }
});
},{"./_an-object":8,"./_export":33}],212:[function(require,module,exports){
// 26.1.14 Reflect.setPrototypeOf(target, proto)
var $export  = require('./_export')
  , setProto = require('./_set-proto');

if(setProto)$export($export.S, 'Reflect', {
  setPrototypeOf: function setPrototypeOf(target, proto){
    setProto.check(target, proto);
    try {
      setProto.set(target, proto);
      return true;
    } catch(e){
      return false;
    }
  }
});
},{"./_export":33,"./_set-proto":91}],213:[function(require,module,exports){
// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
var dP             = require('./_object-dp')
  , gOPD           = require('./_object-gopd')
  , getPrototypeOf = require('./_object-gpo')
  , has            = require('./_has')
  , $export        = require('./_export')
  , createDesc     = require('./_property-desc')
  , anObject       = require('./_an-object')
  , isObject       = require('./_is-object');

function set(target, propertyKey, V/*, receiver*/){
  var receiver = arguments.length < 4 ? target : arguments[3]
    , ownDesc  = gOPD.f(anObject(target), propertyKey)
    , existingDescriptor, proto;
  if(!ownDesc){
    if(isObject(proto = getPrototypeOf(target))){
      return set(proto, propertyKey, V, receiver);
    }
    ownDesc = createDesc(0);
  }
  if(has(ownDesc, 'value')){
    if(ownDesc.writable === false || !isObject(receiver))return false;
    existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);
    existingDescriptor.value = V;
    dP.f(receiver, propertyKey, existingDescriptor);
    return true;
  }
  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
}

$export($export.S, 'Reflect', {set: set});
},{"./_an-object":8,"./_export":33,"./_has":40,"./_is-object":50,"./_object-dp":68,"./_object-gopd":71,"./_object-gpo":75,"./_property-desc":86}],214:[function(require,module,exports){
var global            = require('./_global')
  , inheritIfRequired = require('./_inherit-if-required')
  , dP                = require('./_object-dp').f
  , gOPN              = require('./_object-gopn').f
  , isRegExp          = require('./_is-regexp')
  , $flags            = require('./_flags')
  , $RegExp           = global.RegExp
  , Base              = $RegExp
  , proto             = $RegExp.prototype
  , re1               = /a/g
  , re2               = /a/g
  // "new" creates a new object, old webkit buggy here
  , CORRECT_NEW       = new $RegExp(re1) !== re1;

if(require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function(){
  re2[require('./_wks')('match')] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
}))){
  $RegExp = function RegExp(p, f){
    var tiRE = this instanceof $RegExp
      , piRE = isRegExp(p)
      , fiU  = f === undefined;
    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
      : inheritIfRequired(CORRECT_NEW
        ? new Base(piRE && !fiU ? p.source : p, f)
        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
      , tiRE ? this : proto, $RegExp);
  };
  var proxy = function(key){
    key in $RegExp || dP($RegExp, key, {
      configurable: true,
      get: function(){ return Base[key]; },
      set: function(it){ Base[key] = it; }
    });
  };
  for(var keys = gOPN(Base), i = 0; keys.length > i; )proxy(keys[i++]);
  proto.constructor = $RegExp;
  $RegExp.prototype = proto;
  require('./_redefine')(global, 'RegExp', $RegExp);
}

require('./_set-species')('RegExp');
},{"./_descriptors":29,"./_fails":35,"./_flags":37,"./_global":39,"./_inherit-if-required":44,"./_is-regexp":51,"./_object-dp":68,"./_object-gopn":73,"./_redefine":88,"./_set-species":92,"./_wks":118}],215:[function(require,module,exports){
// 21.2.5.3 get RegExp.prototype.flags()
if(require('./_descriptors') && /./g.flags != 'g')require('./_object-dp').f(RegExp.prototype, 'flags', {
  configurable: true,
  get: require('./_flags')
});
},{"./_descriptors":29,"./_flags":37,"./_object-dp":68}],216:[function(require,module,exports){
// @@match logic
require('./_fix-re-wks')('match', 1, function(defined, MATCH, $match){
  // 21.1.3.11 String.prototype.match(regexp)
  return [function match(regexp){
    'use strict';
    var O  = defined(this)
      , fn = regexp == undefined ? undefined : regexp[MATCH];
    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
  }, $match];
});
},{"./_fix-re-wks":36}],217:[function(require,module,exports){
// @@replace logic
require('./_fix-re-wks')('replace', 2, function(defined, REPLACE, $replace){
  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
  return [function replace(searchValue, replaceValue){
    'use strict';
    var O  = defined(this)
      , fn = searchValue == undefined ? undefined : searchValue[REPLACE];
    return fn !== undefined
      ? fn.call(searchValue, O, replaceValue)
      : $replace.call(String(O), searchValue, replaceValue);
  }, $replace];
});
},{"./_fix-re-wks":36}],218:[function(require,module,exports){
// @@search logic
require('./_fix-re-wks')('search', 1, function(defined, SEARCH, $search){
  // 21.1.3.15 String.prototype.search(regexp)
  return [function search(regexp){
    'use strict';
    var O  = defined(this)
      , fn = regexp == undefined ? undefined : regexp[SEARCH];
    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
  }, $search];
});
},{"./_fix-re-wks":36}],219:[function(require,module,exports){
// @@split logic
require('./_fix-re-wks')('split', 2, function(defined, SPLIT, $split){
  'use strict';
  var isRegExp   = require('./_is-regexp')
    , _split     = $split
    , $push      = [].push
    , $SPLIT     = 'split'
    , LENGTH     = 'length'
    , LAST_INDEX = 'lastIndex';
  if(
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ){
    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
    // based on es5-shim implementation, need to rework it
    $split = function(separator, limit){
      var string = String(this);
      if(separator === undefined && limit === 0)return [];
      // If `separator` is not a regex, use native split
      if(!isRegExp(separator))return _split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var separator2, match, lastIndex, lastLength, i;
      // Doesn't need flags gy, but they don't hurt
      if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
      while(match = separatorCopy.exec(string)){
        // `separatorCopy.lastIndex` is not reliable cross-browser
        lastIndex = match.index + match[0][LENGTH];
        if(lastIndex > lastLastIndex){
          output.push(string.slice(lastLastIndex, match.index));
          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
          if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){
            for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;
          });
          if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if(output[LENGTH] >= splitLimit)break;
        }
        if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if(lastLastIndex === string[LENGTH]){
        if(lastLength || !separatorCopy.test(''))output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if('0'[$SPLIT](undefined, 0)[LENGTH]){
    $split = function(separator, limit){
      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
    };
  }
  // 21.1.3.17 String.prototype.split(separator, limit)
  return [function split(separator, limit){
    var O  = defined(this)
      , fn = separator == undefined ? undefined : separator[SPLIT];
    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
  }, $split];
});
},{"./_fix-re-wks":36,"./_is-regexp":51}],220:[function(require,module,exports){
'use strict';
require('./es6.regexp.flags');
var anObject    = require('./_an-object')
  , $flags      = require('./_flags')
  , DESCRIPTORS = require('./_descriptors')
  , TO_STRING   = 'toString'
  , $toString   = /./[TO_STRING];

var define = function(fn){
  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if(require('./_fails')(function(){ return $toString.call({source: 'a', flags: 'b'}) != '/a/b'; })){
  define(function toString(){
    var R = anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
  });
// FF44- RegExp#toString has a wrong name
} else if($toString.name != TO_STRING){
  define(function toString(){
    return $toString.call(this);
  });
}
},{"./_an-object":8,"./_descriptors":29,"./_fails":35,"./_flags":37,"./_redefine":88,"./es6.regexp.flags":215}],221:[function(require,module,exports){
'use strict';
var strong = require('./_collection-strong');

// 23.2 Set Objects
module.exports = require('./_collection')('Set', function(get){
  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value){
    return strong.def(this, value = value === 0 ? 0 : value, value);
  }
}, strong);
},{"./_collection":23,"./_collection-strong":20}],222:[function(require,module,exports){
'use strict';
// B.2.3.2 String.prototype.anchor(name)
require('./_string-html')('anchor', function(createHTML){
  return function anchor(name){
    return createHTML(this, 'a', 'name', name);
  }
});
},{"./_string-html":100}],223:[function(require,module,exports){
'use strict';
// B.2.3.3 String.prototype.big()
require('./_string-html')('big', function(createHTML){
  return function big(){
    return createHTML(this, 'big', '', '');
  }
});
},{"./_string-html":100}],224:[function(require,module,exports){
'use strict';
// B.2.3.4 String.prototype.blink()
require('./_string-html')('blink', function(createHTML){
  return function blink(){
    return createHTML(this, 'blink', '', '');
  }
});
},{"./_string-html":100}],225:[function(require,module,exports){
'use strict';
// B.2.3.5 String.prototype.bold()
require('./_string-html')('bold', function(createHTML){
  return function bold(){
    return createHTML(this, 'b', '', '');
  }
});
},{"./_string-html":100}],226:[function(require,module,exports){
'use strict';
var $export = require('./_export')
  , $at     = require('./_string-at')(false);
$export($export.P, 'String', {
  // 21.1.3.3 String.prototype.codePointAt(pos)
  codePointAt: function codePointAt(pos){
    return $at(this, pos);
  }
});
},{"./_export":33,"./_string-at":98}],227:[function(require,module,exports){
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
'use strict';
var $export   = require('./_export')
  , toLength  = require('./_to-length')
  , context   = require('./_string-context')
  , ENDS_WITH = 'endsWith'
  , $endsWith = ''[ENDS_WITH];

$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {
  endsWith: function endsWith(searchString /*, endPosition = @length */){
    var that = context(this, searchString, ENDS_WITH)
      , endPosition = arguments.length > 1 ? arguments[1] : undefined
      , len    = toLength(that.length)
      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)
      , search = String(searchString);
    return $endsWith
      ? $endsWith.call(that, search, end)
      : that.slice(end - search.length, end) === search;
  }
});
},{"./_export":33,"./_fails-is-regexp":34,"./_string-context":99,"./_to-length":109}],228:[function(require,module,exports){
'use strict';
// B.2.3.6 String.prototype.fixed()
require('./_string-html')('fixed', function(createHTML){
  return function fixed(){
    return createHTML(this, 'tt', '', '');
  }
});
},{"./_string-html":100}],229:[function(require,module,exports){
'use strict';
// B.2.3.7 String.prototype.fontcolor(color)
require('./_string-html')('fontcolor', function(createHTML){
  return function fontcolor(color){
    return createHTML(this, 'font', 'color', color);
  }
});
},{"./_string-html":100}],230:[function(require,module,exports){
'use strict';
// B.2.3.8 String.prototype.fontsize(size)
require('./_string-html')('fontsize', function(createHTML){
  return function fontsize(size){
    return createHTML(this, 'font', 'size', size);
  }
});
},{"./_string-html":100}],231:[function(require,module,exports){
var $export        = require('./_export')
  , toIndex        = require('./_to-index')
  , fromCharCode   = String.fromCharCode
  , $fromCodePoint = String.fromCodePoint;

// length should be 1, old FF problem
$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
  // 21.1.2.2 String.fromCodePoint(...codePoints)
  fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars
    var res  = []
      , aLen = arguments.length
      , i    = 0
      , code;
    while(aLen > i){
      code = +arguments[i++];
      if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');
      res.push(code < 0x10000
        ? fromCharCode(code)
        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
      );
    } return res.join('');
  }
});
},{"./_export":33,"./_to-index":106}],232:[function(require,module,exports){
// 21.1.3.7 String.prototype.includes(searchString, position = 0)
'use strict';
var $export  = require('./_export')
  , context  = require('./_string-context')
  , INCLUDES = 'includes';

$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {
  includes: function includes(searchString /*, position = 0 */){
    return !!~context(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});
},{"./_export":33,"./_fails-is-regexp":34,"./_string-context":99}],233:[function(require,module,exports){
'use strict';
// B.2.3.9 String.prototype.italics()
require('./_string-html')('italics', function(createHTML){
  return function italics(){
    return createHTML(this, 'i', '', '');
  }
});
},{"./_string-html":100}],234:[function(require,module,exports){
'use strict';
var $at  = require('./_string-at')(true);

// 21.1.3.27 String.prototype[@@iterator]()
require('./_iter-define')(String, 'String', function(iterated){
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function(){
  var O     = this._t
    , index = this._i
    , point;
  if(index >= O.length)return {value: undefined, done: true};
  point = $at(O, index);
  this._i += point.length;
  return {value: point, done: false};
});
},{"./_iter-define":54,"./_string-at":98}],235:[function(require,module,exports){
'use strict';
// B.2.3.10 String.prototype.link(url)
require('./_string-html')('link', function(createHTML){
  return function link(url){
    return createHTML(this, 'a', 'href', url);
  }
});
},{"./_string-html":100}],236:[function(require,module,exports){
var $export   = require('./_export')
  , toIObject = require('./_to-iobject')
  , toLength  = require('./_to-length');

$export($export.S, 'String', {
  // 21.1.2.4 String.raw(callSite, ...substitutions)
  raw: function raw(callSite){
    var tpl  = toIObject(callSite.raw)
      , len  = toLength(tpl.length)
      , aLen = arguments.length
      , res  = []
      , i    = 0;
    while(len > i){
      res.push(String(tpl[i++]));
      if(i < aLen)res.push(String(arguments[i]));
    } return res.join('');
  }
});
},{"./_export":33,"./_to-iobject":108,"./_to-length":109}],237:[function(require,module,exports){
var $export = require('./_export');

$export($export.P, 'String', {
  // 21.1.3.13 String.prototype.repeat(count)
  repeat: require('./_string-repeat')
});
},{"./_export":33,"./_string-repeat":102}],238:[function(require,module,exports){
'use strict';
// B.2.3.11 String.prototype.small()
require('./_string-html')('small', function(createHTML){
  return function small(){
    return createHTML(this, 'small', '', '');
  }
});
},{"./_string-html":100}],239:[function(require,module,exports){
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
'use strict';
var $export     = require('./_export')
  , toLength    = require('./_to-length')
  , context     = require('./_string-context')
  , STARTS_WITH = 'startsWith'
  , $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /*, position = 0 */){
    var that   = context(this, searchString, STARTS_WITH)
      , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))
      , search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});
},{"./_export":33,"./_fails-is-regexp":34,"./_string-context":99,"./_to-length":109}],240:[function(require,module,exports){
'use strict';
// B.2.3.12 String.prototype.strike()
require('./_string-html')('strike', function(createHTML){
  return function strike(){
    return createHTML(this, 'strike', '', '');
  }
});
},{"./_string-html":100}],241:[function(require,module,exports){
'use strict';
// B.2.3.13 String.prototype.sub()
require('./_string-html')('sub', function(createHTML){
  return function sub(){
    return createHTML(this, 'sub', '', '');
  }
});
},{"./_string-html":100}],242:[function(require,module,exports){
'use strict';
// B.2.3.14 String.prototype.sup()
require('./_string-html')('sup', function(createHTML){
  return function sup(){
    return createHTML(this, 'sup', '', '');
  }
});
},{"./_string-html":100}],243:[function(require,module,exports){
'use strict';
// 21.1.3.25 String.prototype.trim()
require('./_string-trim')('trim', function($trim){
  return function trim(){
    return $trim(this, 3);
  };
});
},{"./_string-trim":103}],244:[function(require,module,exports){
'use strict';
// ECMAScript 6 symbols shim
var global         = require('./_global')
  , has            = require('./_has')
  , DESCRIPTORS    = require('./_descriptors')
  , $export        = require('./_export')
  , redefine       = require('./_redefine')
  , META           = require('./_meta').KEY
  , $fails         = require('./_fails')
  , shared         = require('./_shared')
  , setToStringTag = require('./_set-to-string-tag')
  , uid            = require('./_uid')
  , wks            = require('./_wks')
  , wksExt         = require('./_wks-ext')
  , wksDefine      = require('./_wks-define')
  , keyOf          = require('./_keyof')
  , enumKeys       = require('./_enum-keys')
  , isArray        = require('./_is-array')
  , anObject       = require('./_an-object')
  , toIObject      = require('./_to-iobject')
  , toPrimitive    = require('./_to-primitive')
  , createDesc     = require('./_property-desc')
  , _create        = require('./_object-create')
  , gOPNExt        = require('./_object-gopn-ext')
  , $GOPD          = require('./_object-gopd')
  , $DP            = require('./_object-dp')
  , $keys          = require('./_object-keys')
  , gOPD           = $GOPD.f
  , dP             = $DP.f
  , gOPN           = gOPNExt.f
  , $Symbol        = global.Symbol
  , $JSON          = global.JSON
  , _stringify     = $JSON && $JSON.stringify
  , PROTOTYPE      = 'prototype'
  , HIDDEN         = wks('_hidden')
  , TO_PRIMITIVE   = wks('toPrimitive')
  , isEnum         = {}.propertyIsEnumerable
  , SymbolRegistry = shared('symbol-registry')
  , AllSymbols     = shared('symbols')
  , OPSymbols      = shared('op-symbols')
  , ObjectProto    = Object[PROTOTYPE]
  , USE_NATIVE     = typeof $Symbol == 'function'
  , QObject        = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function(){
  return _create(dP({}, 'a', {
    get: function(){ return dP(this, 'a', {value: 7}).a; }
  })).a != 7;
}) ? function(it, key, D){
  var protoDesc = gOPD(ObjectProto, key);
  if(protoDesc)delete ObjectProto[key];
  dP(it, key, D);
  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function(tag){
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
  return typeof it == 'symbol';
} : function(it){
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D){
  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if(has(AllSymbols, key)){
    if(!D.enumerable){
      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
      D = _create(D, {enumerable: createDesc(0, false)});
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P){
  anObject(it);
  var keys = enumKeys(P = toIObject(P))
    , i    = 0
    , l = keys.length
    , key;
  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P){
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key){
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
  it  = toIObject(it);
  key = toPrimitive(key, true);
  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
  var D = gOPD(it, key);
  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it){
  var names  = gOPN(toIObject(it))
    , result = []
    , i      = 0
    , key;
  while(names.length > i){
    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
  var IS_OP  = it === ObjectProto
    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
    , result = []
    , i      = 0
    , key;
  while(names.length > i){
    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if(!USE_NATIVE){
  $Symbol = function Symbol(){
    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function(value){
      if(this === ObjectProto)$set.call(OPSymbols, value);
      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f   = $defineProperty;
  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
  require('./_object-pie').f  = $propertyIsEnumerable;
  require('./_object-gops').f = $getOwnPropertySymbols;

  if(DESCRIPTORS && !require('./_library')){
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function(name){
    return wrap(wks(name));
  }
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

for(var symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);

for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function(key){
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(key){
    if(isSymbol(key))return keyOf(SymbolRegistry, key);
    throw TypeError(key + ' is not a symbol!');
  },
  useSetter: function(){ setter = true; },
  useSimple: function(){ setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it){
    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
    var args = [it]
      , i    = 1
      , replacer, $replacer;
    while(arguments.length > i)args.push(arguments[i++]);
    replacer = args[1];
    if(typeof replacer == 'function')$replacer = replacer;
    if($replacer || !isArray(replacer))replacer = function(key, value){
      if($replacer)value = $replacer.call(this, key, value);
      if(!isSymbol(value))return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);
},{"./_an-object":8,"./_descriptors":29,"./_enum-keys":32,"./_export":33,"./_fails":35,"./_global":39,"./_has":40,"./_hide":41,"./_is-array":48,"./_keyof":58,"./_library":59,"./_meta":63,"./_object-create":67,"./_object-dp":68,"./_object-gopd":71,"./_object-gopn":73,"./_object-gopn-ext":72,"./_object-gops":74,"./_object-keys":77,"./_object-pie":78,"./_property-desc":86,"./_redefine":88,"./_set-to-string-tag":93,"./_shared":95,"./_to-iobject":108,"./_to-primitive":111,"./_uid":115,"./_wks":118,"./_wks-define":116,"./_wks-ext":117}],245:[function(require,module,exports){
'use strict';
var $export      = require('./_export')
  , $typed       = require('./_typed')
  , buffer       = require('./_typed-buffer')
  , anObject     = require('./_an-object')
  , toIndex      = require('./_to-index')
  , toLength     = require('./_to-length')
  , isObject     = require('./_is-object')
  , ArrayBuffer  = require('./_global').ArrayBuffer
  , speciesConstructor = require('./_species-constructor')
  , $ArrayBuffer = buffer.ArrayBuffer
  , $DataView    = buffer.DataView
  , $isView      = $typed.ABV && ArrayBuffer.isView
  , $slice       = $ArrayBuffer.prototype.slice
  , VIEW         = $typed.VIEW
  , ARRAY_BUFFER = 'ArrayBuffer';

$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});

$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
  // 24.1.3.1 ArrayBuffer.isView(arg)
  isView: function isView(it){
    return $isView && $isView(it) || isObject(it) && VIEW in it;
  }
});

$export($export.P + $export.U + $export.F * require('./_fails')(function(){
  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
}), ARRAY_BUFFER, {
  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
  slice: function slice(start, end){
    if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix
    var len    = anObject(this).byteLength
      , first  = toIndex(start, len)
      , final  = toIndex(end === undefined ? len : end, len)
      , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))
      , viewS  = new $DataView(this)
      , viewT  = new $DataView(result)
      , index  = 0;
    while(first < final){
      viewT.setUint8(index++, viewS.getUint8(first++));
    } return result;
  }
});

require('./_set-species')(ARRAY_BUFFER);
},{"./_an-object":8,"./_export":33,"./_fails":35,"./_global":39,"./_is-object":50,"./_set-species":92,"./_species-constructor":96,"./_to-index":106,"./_to-length":109,"./_typed":114,"./_typed-buffer":113}],246:[function(require,module,exports){
var $export = require('./_export');
$export($export.G + $export.W + $export.F * !require('./_typed').ABV, {
  DataView: require('./_typed-buffer').DataView
});
},{"./_export":33,"./_typed":114,"./_typed-buffer":113}],247:[function(require,module,exports){
require('./_typed-array')('Float32', 4, function(init){
  return function Float32Array(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
});
},{"./_typed-array":112}],248:[function(require,module,exports){
require('./_typed-array')('Float64', 8, function(init){
  return function Float64Array(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
});
},{"./_typed-array":112}],249:[function(require,module,exports){
require('./_typed-array')('Int16', 2, function(init){
  return function Int16Array(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
});
},{"./_typed-array":112}],250:[function(require,module,exports){
require('./_typed-array')('Int32', 4, function(init){
  return function Int32Array(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
});
},{"./_typed-array":112}],251:[function(require,module,exports){
require('./_typed-array')('Int8', 1, function(init){
  return function Int8Array(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
});
},{"./_typed-array":112}],252:[function(require,module,exports){
require('./_typed-array')('Uint16', 2, function(init){
  return function Uint16Array(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
});
},{"./_typed-array":112}],253:[function(require,module,exports){
require('./_typed-array')('Uint32', 4, function(init){
  return function Uint32Array(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
});
},{"./_typed-array":112}],254:[function(require,module,exports){
require('./_typed-array')('Uint8', 1, function(init){
  return function Uint8Array(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
});
},{"./_typed-array":112}],255:[function(require,module,exports){
require('./_typed-array')('Uint8', 1, function(init){
  return function Uint8ClampedArray(data, byteOffset, length){
    return init(this, data, byteOffset, length);
  };
}, true);
},{"./_typed-array":112}],256:[function(require,module,exports){
'use strict';
var each         = require('./_array-methods')(0)
  , redefine     = require('./_redefine')
  , meta         = require('./_meta')
  , assign       = require('./_object-assign')
  , weak         = require('./_collection-weak')
  , isObject     = require('./_is-object')
  , getWeak      = meta.getWeak
  , isExtensible = Object.isExtensible
  , uncaughtFrozenStore = weak.ufstore
  , tmp          = {}
  , InternalMap;

var wrapper = function(get){
  return function WeakMap(){
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
};

var methods = {
  // 23.3.3.3 WeakMap.prototype.get(key)
  get: function get(key){
    if(isObject(key)){
      var data = getWeak(key);
      if(data === true)return uncaughtFrozenStore(this).get(key);
      return data ? data[this._i] : undefined;
    }
  },
  // 23.3.3.5 WeakMap.prototype.set(key, value)
  set: function set(key, value){
    return weak.def(this, key, value);
  }
};

// 23.3 WeakMap Objects
var $WeakMap = module.exports = require('./_collection')('WeakMap', wrapper, methods, weak, true, true);

// IE11 WeakMap frozen keys fix
if(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){
  InternalMap = weak.getConstructor(wrapper);
  assign(InternalMap.prototype, methods);
  meta.NEED = true;
  each(['delete', 'has', 'get', 'set'], function(key){
    var proto  = $WeakMap.prototype
      , method = proto[key];
    redefine(proto, key, function(a, b){
      // store frozen objects on internal weakmap shim
      if(isObject(a) && !isExtensible(a)){
        if(!this._f)this._f = new InternalMap;
        var result = this._f[key](a, b);
        return key == 'set' ? this : result;
      // store all the rest on native weakmap
      } return method.call(this, a, b);
    });
  });
}
},{"./_array-methods":13,"./_collection":23,"./_collection-weak":22,"./_is-object":50,"./_meta":63,"./_object-assign":66,"./_redefine":88}],257:[function(require,module,exports){
'use strict';
var weak = require('./_collection-weak');

// 23.4 WeakSet Objects
require('./_collection')('WeakSet', function(get){
  return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.4.3.1 WeakSet.prototype.add(value)
  add: function add(value){
    return weak.def(this, value, true);
  }
}, weak, false, true);
},{"./_collection":23,"./_collection-weak":22}],258:[function(require,module,exports){
'use strict';
// https://github.com/tc39/Array.prototype.includes
var $export   = require('./_export')
  , $includes = require('./_array-includes')(true);

$export($export.P, 'Array', {
  includes: function includes(el /*, fromIndex = 0 */){
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

require('./_add-to-unscopables')('includes');
},{"./_add-to-unscopables":6,"./_array-includes":12,"./_export":33}],259:[function(require,module,exports){
// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
var $export   = require('./_export')
  , microtask = require('./_microtask')()
  , process   = require('./_global').process
  , isNode    = require('./_cof')(process) == 'process';

$export($export.G, {
  asap: function asap(fn){
    var domain = isNode && process.domain;
    microtask(domain ? domain.bind(fn) : fn);
  }
});
},{"./_cof":19,"./_export":33,"./_global":39,"./_microtask":65}],260:[function(require,module,exports){
// https://github.com/ljharb/proposal-is-error
var $export = require('./_export')
  , cof     = require('./_cof');

$export($export.S, 'Error', {
  isError: function isError(it){
    return cof(it) === 'Error';
  }
});
},{"./_cof":19,"./_export":33}],261:[function(require,module,exports){
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export  = require('./_export');

$export($export.P + $export.R, 'Map', {toJSON: require('./_collection-to-json')('Map')});
},{"./_collection-to-json":21,"./_export":33}],262:[function(require,module,exports){
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = require('./_export');

$export($export.S, 'Math', {
  iaddh: function iaddh(x0, x1, y0, y1){
    var $x0 = x0 >>> 0
      , $x1 = x1 >>> 0
      , $y0 = y0 >>> 0;
    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
  }
});
},{"./_export":33}],263:[function(require,module,exports){
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = require('./_export');

$export($export.S, 'Math', {
  imulh: function imulh(u, v){
    var UINT16 = 0xffff
      , $u = +u
      , $v = +v
      , u0 = $u & UINT16
      , v0 = $v & UINT16
      , u1 = $u >> 16
      , v1 = $v >> 16
      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
  }
});
},{"./_export":33}],264:[function(require,module,exports){
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = require('./_export');

$export($export.S, 'Math', {
  isubh: function isubh(x0, x1, y0, y1){
    var $x0 = x0 >>> 0
      , $x1 = x1 >>> 0
      , $y0 = y0 >>> 0;
    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
  }
});
},{"./_export":33}],265:[function(require,module,exports){
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = require('./_export');

$export($export.S, 'Math', {
  umulh: function umulh(u, v){
    var UINT16 = 0xffff
      , $u = +u
      , $v = +v
      , u0 = $u & UINT16
      , v0 = $v & UINT16
      , u1 = $u >>> 16
      , v1 = $v >>> 16
      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
  }
});
},{"./_export":33}],266:[function(require,module,exports){
'use strict';
var $export         = require('./_export')
  , toObject        = require('./_to-object')
  , aFunction       = require('./_a-function')
  , $defineProperty = require('./_object-dp');

// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __defineGetter__: function __defineGetter__(P, getter){
    $defineProperty.f(toObject(this), P, {get: aFunction(getter), enumerable: true, configurable: true});
  }
});
},{"./_a-function":4,"./_descriptors":29,"./_export":33,"./_object-dp":68,"./_object-forced-pam":70,"./_to-object":110}],267:[function(require,module,exports){
'use strict';
var $export         = require('./_export')
  , toObject        = require('./_to-object')
  , aFunction       = require('./_a-function')
  , $defineProperty = require('./_object-dp');

// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __defineSetter__: function __defineSetter__(P, setter){
    $defineProperty.f(toObject(this), P, {set: aFunction(setter), enumerable: true, configurable: true});
  }
});
},{"./_a-function":4,"./_descriptors":29,"./_export":33,"./_object-dp":68,"./_object-forced-pam":70,"./_to-object":110}],268:[function(require,module,exports){
// https://github.com/tc39/proposal-object-values-entries
var $export  = require('./_export')
  , $entries = require('./_object-to-array')(true);

$export($export.S, 'Object', {
  entries: function entries(it){
    return $entries(it);
  }
});
},{"./_export":33,"./_object-to-array":80}],269:[function(require,module,exports){
// https://github.com/tc39/proposal-object-getownpropertydescriptors
var $export        = require('./_export')
  , ownKeys        = require('./_own-keys')
  , toIObject      = require('./_to-iobject')
  , gOPD           = require('./_object-gopd')
  , createProperty = require('./_create-property');

$export($export.S, 'Object', {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){
    var O       = toIObject(object)
      , getDesc = gOPD.f
      , keys    = ownKeys(O)
      , result  = {}
      , i       = 0
      , key;
    while(keys.length > i)createProperty(result, key = keys[i++], getDesc(O, key));
    return result;
  }
});
},{"./_create-property":25,"./_export":33,"./_object-gopd":71,"./_own-keys":81,"./_to-iobject":108}],270:[function(require,module,exports){
'use strict';
var $export                  = require('./_export')
  , toObject                 = require('./_to-object')
  , toPrimitive              = require('./_to-primitive')
  , getPrototypeOf           = require('./_object-gpo')
  , getOwnPropertyDescriptor = require('./_object-gopd').f;

// B.2.2.4 Object.prototype.__lookupGetter__(P)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __lookupGetter__: function __lookupGetter__(P){
    var O = toObject(this)
      , K = toPrimitive(P, true)
      , D;
    do {
      if(D = getOwnPropertyDescriptor(O, K))return D.get;
    } while(O = getPrototypeOf(O));
  }
});
},{"./_descriptors":29,"./_export":33,"./_object-forced-pam":70,"./_object-gopd":71,"./_object-gpo":75,"./_to-object":110,"./_to-primitive":111}],271:[function(require,module,exports){
'use strict';
var $export                  = require('./_export')
  , toObject                 = require('./_to-object')
  , toPrimitive              = require('./_to-primitive')
  , getPrototypeOf           = require('./_object-gpo')
  , getOwnPropertyDescriptor = require('./_object-gopd').f;

// B.2.2.5 Object.prototype.__lookupSetter__(P)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __lookupSetter__: function __lookupSetter__(P){
    var O = toObject(this)
      , K = toPrimitive(P, true)
      , D;
    do {
      if(D = getOwnPropertyDescriptor(O, K))return D.set;
    } while(O = getPrototypeOf(O));
  }
});
},{"./_descriptors":29,"./_export":33,"./_object-forced-pam":70,"./_object-gopd":71,"./_object-gpo":75,"./_to-object":110,"./_to-primitive":111}],272:[function(require,module,exports){
// https://github.com/tc39/proposal-object-values-entries
var $export = require('./_export')
  , $values = require('./_object-to-array')(false);

$export($export.S, 'Object', {
  values: function values(it){
    return $values(it);
  }
});
},{"./_export":33,"./_object-to-array":80}],273:[function(require,module,exports){
'use strict';
// https://github.com/zenparsing/es-observable
var $export     = require('./_export')
  , global      = require('./_global')
  , core        = require('./_core')
  , microtask   = require('./_microtask')()
  , OBSERVABLE  = require('./_wks')('observable')
  , aFunction   = require('./_a-function')
  , anObject    = require('./_an-object')
  , anInstance  = require('./_an-instance')
  , redefineAll = require('./_redefine-all')
  , hide        = require('./_hide')
  , forOf       = require('./_for-of')
  , RETURN      = forOf.RETURN;

var getMethod = function(fn){
  return fn == null ? undefined : aFunction(fn);
};

var cleanupSubscription = function(subscription){
  var cleanup = subscription._c;
  if(cleanup){
    subscription._c = undefined;
    cleanup();
  }
};

var subscriptionClosed = function(subscription){
  return subscription._o === undefined;
};

var closeSubscription = function(subscription){
  if(!subscriptionClosed(subscription)){
    subscription._o = undefined;
    cleanupSubscription(subscription);
  }
};

var Subscription = function(observer, subscriber){
  anObject(observer);
  this._c = undefined;
  this._o = observer;
  observer = new SubscriptionObserver(this);
  try {
    var cleanup      = subscriber(observer)
      , subscription = cleanup;
    if(cleanup != null){
      if(typeof cleanup.unsubscribe === 'function')cleanup = function(){ subscription.unsubscribe(); };
      else aFunction(cleanup);
      this._c = cleanup;
    }
  } catch(e){
    observer.error(e);
    return;
  } if(subscriptionClosed(this))cleanupSubscription(this);
};

Subscription.prototype = redefineAll({}, {
  unsubscribe: function unsubscribe(){ closeSubscription(this); }
});

var SubscriptionObserver = function(subscription){
  this._s = subscription;
};

SubscriptionObserver.prototype = redefineAll({}, {
  next: function next(value){
    var subscription = this._s;
    if(!subscriptionClosed(subscription)){
      var observer = subscription._o;
      try {
        var m = getMethod(observer.next);
        if(m)return m.call(observer, value);
      } catch(e){
        try {
          closeSubscription(subscription);
        } finally {
          throw e;
        }
      }
    }
  },
  error: function error(value){
    var subscription = this._s;
    if(subscriptionClosed(subscription))throw value;
    var observer = subscription._o;
    subscription._o = undefined;
    try {
      var m = getMethod(observer.error);
      if(!m)throw value;
      value = m.call(observer, value);
    } catch(e){
      try {
        cleanupSubscription(subscription);
      } finally {
        throw e;
      }
    } cleanupSubscription(subscription);
    return value;
  },
  complete: function complete(value){
    var subscription = this._s;
    if(!subscriptionClosed(subscription)){
      var observer = subscription._o;
      subscription._o = undefined;
      try {
        var m = getMethod(observer.complete);
        value = m ? m.call(observer, value) : undefined;
      } catch(e){
        try {
          cleanupSubscription(subscription);
        } finally {
          throw e;
        }
      } cleanupSubscription(subscription);
      return value;
    }
  }
});

var $Observable = function Observable(subscriber){
  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
};

redefineAll($Observable.prototype, {
  subscribe: function subscribe(observer){
    return new Subscription(observer, this._f);
  },
  forEach: function forEach(fn){
    var that = this;
    return new (core.Promise || global.Promise)(function(resolve, reject){
      aFunction(fn);
      var subscription = that.subscribe({
        next : function(value){
          try {
            return fn(value);
          } catch(e){
            reject(e);
            subscription.unsubscribe();
          }
        },
        error: reject,
        complete: resolve
      });
    });
  }
});

redefineAll($Observable, {
  from: function from(x){
    var C = typeof this === 'function' ? this : $Observable;
    var method = getMethod(anObject(x)[OBSERVABLE]);
    if(method){
      var observable = anObject(method.call(x));
      return observable.constructor === C ? observable : new C(function(observer){
        return observable.subscribe(observer);
      });
    }
    return new C(function(observer){
      var done = false;
      microtask(function(){
        if(!done){
          try {
            if(forOf(x, false, function(it){
              observer.next(it);
              if(done)return RETURN;
            }) === RETURN)return;
          } catch(e){
            if(done)throw e;
            observer.error(e);
            return;
          } observer.complete();
        }
      });
      return function(){ done = true; };
    });
  },
  of: function of(){
    for(var i = 0, l = arguments.length, items = Array(l); i < l;)items[i] = arguments[i++];
    return new (typeof this === 'function' ? this : $Observable)(function(observer){
      var done = false;
      microtask(function(){
        if(!done){
          for(var i = 0; i < items.length; ++i){
            observer.next(items[i]);
            if(done)return;
          } observer.complete();
        }
      });
      return function(){ done = true; };
    });
  }
});

hide($Observable.prototype, OBSERVABLE, function(){ return this; });

$export($export.G, {Observable: $Observable});

require('./_set-species')('Observable');
},{"./_a-function":4,"./_an-instance":7,"./_an-object":8,"./_core":24,"./_export":33,"./_for-of":38,"./_global":39,"./_hide":41,"./_microtask":65,"./_redefine-all":87,"./_set-species":92,"./_wks":118}],274:[function(require,module,exports){
var metadata                  = require('./_metadata')
  , anObject                  = require('./_an-object')
  , toMetaKey                 = metadata.key
  , ordinaryDefineOwnMetadata = metadata.set;

metadata.exp({defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey){
  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
}});
},{"./_an-object":8,"./_metadata":64}],275:[function(require,module,exports){
var metadata               = require('./_metadata')
  , anObject               = require('./_an-object')
  , toMetaKey              = metadata.key
  , getOrCreateMetadataMap = metadata.map
  , store                  = metadata.store;

metadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){
  var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])
    , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
  if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;
  if(metadataMap.size)return true;
  var targetMetadata = store.get(target);
  targetMetadata['delete'](targetKey);
  return !!targetMetadata.size || store['delete'](target);
}});
},{"./_an-object":8,"./_metadata":64}],276:[function(require,module,exports){
var Set                     = require('./es6.set')
  , from                    = require('./_array-from-iterable')
  , metadata                = require('./_metadata')
  , anObject                = require('./_an-object')
  , getPrototypeOf          = require('./_object-gpo')
  , ordinaryOwnMetadataKeys = metadata.keys
  , toMetaKey               = metadata.key;

var ordinaryMetadataKeys = function(O, P){
  var oKeys  = ordinaryOwnMetadataKeys(O, P)
    , parent = getPrototypeOf(O);
  if(parent === null)return oKeys;
  var pKeys  = ordinaryMetadataKeys(parent, P);
  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
};

metadata.exp({getMetadataKeys: function getMetadataKeys(target /*, targetKey */){
  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
}});
},{"./_an-object":8,"./_array-from-iterable":11,"./_metadata":64,"./_object-gpo":75,"./es6.set":221}],277:[function(require,module,exports){
var metadata               = require('./_metadata')
  , anObject               = require('./_an-object')
  , getPrototypeOf         = require('./_object-gpo')
  , ordinaryHasOwnMetadata = metadata.has
  , ordinaryGetOwnMetadata = metadata.get
  , toMetaKey              = metadata.key;

var ordinaryGetMetadata = function(MetadataKey, O, P){
  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
  if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey, O, P);
  var parent = getPrototypeOf(O);
  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
};

metadata.exp({getMetadata: function getMetadata(metadataKey, target /*, targetKey */){
  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
}});
},{"./_an-object":8,"./_metadata":64,"./_object-gpo":75}],278:[function(require,module,exports){
var metadata                = require('./_metadata')
  , anObject                = require('./_an-object')
  , ordinaryOwnMetadataKeys = metadata.keys
  , toMetaKey               = metadata.key;

metadata.exp({getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */){
  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
}});
},{"./_an-object":8,"./_metadata":64}],279:[function(require,module,exports){
var metadata               = require('./_metadata')
  , anObject               = require('./_an-object')
  , ordinaryGetOwnMetadata = metadata.get
  , toMetaKey              = metadata.key;

metadata.exp({getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */){
  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
}});
},{"./_an-object":8,"./_metadata":64}],280:[function(require,module,exports){
var metadata               = require('./_metadata')
  , anObject               = require('./_an-object')
  , getPrototypeOf         = require('./_object-gpo')
  , ordinaryHasOwnMetadata = metadata.has
  , toMetaKey              = metadata.key;

var ordinaryHasMetadata = function(MetadataKey, O, P){
  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
  if(hasOwn)return true;
  var parent = getPrototypeOf(O);
  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
};

metadata.exp({hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */){
  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
}});
},{"./_an-object":8,"./_metadata":64,"./_object-gpo":75}],281:[function(require,module,exports){
var metadata               = require('./_metadata')
  , anObject               = require('./_an-object')
  , ordinaryHasOwnMetadata = metadata.has
  , toMetaKey              = metadata.key;

metadata.exp({hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */){
  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
}});
},{"./_an-object":8,"./_metadata":64}],282:[function(require,module,exports){
var metadata                  = require('./_metadata')
  , anObject                  = require('./_an-object')
  , aFunction                 = require('./_a-function')
  , toMetaKey                 = metadata.key
  , ordinaryDefineOwnMetadata = metadata.set;

metadata.exp({metadata: function metadata(metadataKey, metadataValue){
  return function decorator(target, targetKey){
    ordinaryDefineOwnMetadata(
      metadataKey, metadataValue,
      (targetKey !== undefined ? anObject : aFunction)(target),
      toMetaKey(targetKey)
    );
  };
}});
},{"./_a-function":4,"./_an-object":8,"./_metadata":64}],283:[function(require,module,exports){
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export  = require('./_export');

$export($export.P + $export.R, 'Set', {toJSON: require('./_collection-to-json')('Set')});
},{"./_collection-to-json":21,"./_export":33}],284:[function(require,module,exports){
'use strict';
// https://github.com/mathiasbynens/String.prototype.at
var $export = require('./_export')
  , $at     = require('./_string-at')(true);

$export($export.P, 'String', {
  at: function at(pos){
    return $at(this, pos);
  }
});
},{"./_export":33,"./_string-at":98}],285:[function(require,module,exports){
'use strict';
// https://tc39.github.io/String.prototype.matchAll/
var $export     = require('./_export')
  , defined     = require('./_defined')
  , toLength    = require('./_to-length')
  , isRegExp    = require('./_is-regexp')
  , getFlags    = require('./_flags')
  , RegExpProto = RegExp.prototype;

var $RegExpStringIterator = function(regexp, string){
  this._r = regexp;
  this._s = string;
};

require('./_iter-create')($RegExpStringIterator, 'RegExp String', function next(){
  var match = this._r.exec(this._s);
  return {value: match, done: match === null};
});

$export($export.P, 'String', {
  matchAll: function matchAll(regexp){
    defined(this);
    if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');
    var S     = String(this)
      , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)
      , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
    rx.lastIndex = toLength(regexp.lastIndex);
    return new $RegExpStringIterator(rx, S);
  }
});
},{"./_defined":28,"./_export":33,"./_flags":37,"./_is-regexp":51,"./_iter-create":53,"./_to-length":109}],286:[function(require,module,exports){
'use strict';
// https://github.com/tc39/proposal-string-pad-start-end
var $export = require('./_export')
  , $pad    = require('./_string-pad');

$export($export.P, 'String', {
  padEnd: function padEnd(maxLength /*, fillString = ' ' */){
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
  }
});
},{"./_export":33,"./_string-pad":101}],287:[function(require,module,exports){
'use strict';
// https://github.com/tc39/proposal-string-pad-start-end
var $export = require('./_export')
  , $pad    = require('./_string-pad');

$export($export.P, 'String', {
  padStart: function padStart(maxLength /*, fillString = ' ' */){
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
  }
});
},{"./_export":33,"./_string-pad":101}],288:[function(require,module,exports){
'use strict';
// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
require('./_string-trim')('trimLeft', function($trim){
  return function trimLeft(){
    return $trim(this, 1);
  };
}, 'trimStart');
},{"./_string-trim":103}],289:[function(require,module,exports){
'use strict';
// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
require('./_string-trim')('trimRight', function($trim){
  return function trimRight(){
    return $trim(this, 2);
  };
}, 'trimEnd');
},{"./_string-trim":103}],290:[function(require,module,exports){
require('./_wks-define')('asyncIterator');
},{"./_wks-define":116}],291:[function(require,module,exports){
require('./_wks-define')('observable');
},{"./_wks-define":116}],292:[function(require,module,exports){
// https://github.com/ljharb/proposal-global
var $export = require('./_export');

$export($export.S, 'System', {global: require('./_global')});
},{"./_export":33,"./_global":39}],293:[function(require,module,exports){
var $iterators    = require('./es6.array.iterator')
  , redefine      = require('./_redefine')
  , global        = require('./_global')
  , hide          = require('./_hide')
  , Iterators     = require('./_iterators')
  , wks           = require('./_wks')
  , ITERATOR      = wks('iterator')
  , TO_STRING_TAG = wks('toStringTag')
  , ArrayValues   = Iterators.Array;

for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
  var NAME       = collections[i]
    , Collection = global[NAME]
    , proto      = Collection && Collection.prototype
    , key;
  if(proto){
    if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);
    if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);
  }
}
},{"./_global":39,"./_hide":41,"./_iterators":57,"./_redefine":88,"./_wks":118,"./es6.array.iterator":131}],294:[function(require,module,exports){
var $export = require('./_export')
  , $task   = require('./_task');
$export($export.G + $export.B, {
  setImmediate:   $task.set,
  clearImmediate: $task.clear
});
},{"./_export":33,"./_task":105}],295:[function(require,module,exports){
// ie9- setTimeout & setInterval additional parameters fix
var global     = require('./_global')
  , $export    = require('./_export')
  , invoke     = require('./_invoke')
  , partial    = require('./_partial')
  , navigator  = global.navigator
  , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
var wrap = function(set){
  return MSIE ? function(fn, time /*, ...args */){
    return set(invoke(
      partial,
      [].slice.call(arguments, 2),
      typeof fn == 'function' ? fn : Function(fn)
    ), time);
  } : set;
};
$export($export.G + $export.B + $export.F * MSIE, {
  setTimeout:  wrap(global.setTimeout),
  setInterval: wrap(global.setInterval)
});
},{"./_export":33,"./_global":39,"./_invoke":45,"./_partial":84}],296:[function(require,module,exports){
require('./modules/es6.symbol');
require('./modules/es6.object.create');
require('./modules/es6.object.define-property');
require('./modules/es6.object.define-properties');
require('./modules/es6.object.get-own-property-descriptor');
require('./modules/es6.object.get-prototype-of');
require('./modules/es6.object.keys');
require('./modules/es6.object.get-own-property-names');
require('./modules/es6.object.freeze');
require('./modules/es6.object.seal');
require('./modules/es6.object.prevent-extensions');
require('./modules/es6.object.is-frozen');
require('./modules/es6.object.is-sealed');
require('./modules/es6.object.is-extensible');
require('./modules/es6.object.assign');
require('./modules/es6.object.is');
require('./modules/es6.object.set-prototype-of');
require('./modules/es6.object.to-string');
require('./modules/es6.function.bind');
require('./modules/es6.function.name');
require('./modules/es6.function.has-instance');
require('./modules/es6.parse-int');
require('./modules/es6.parse-float');
require('./modules/es6.number.constructor');
require('./modules/es6.number.to-fixed');
require('./modules/es6.number.to-precision');
require('./modules/es6.number.epsilon');
require('./modules/es6.number.is-finite');
require('./modules/es6.number.is-integer');
require('./modules/es6.number.is-nan');
require('./modules/es6.number.is-safe-integer');
require('./modules/es6.number.max-safe-integer');
require('./modules/es6.number.min-safe-integer');
require('./modules/es6.number.parse-float');
require('./modules/es6.number.parse-int');
require('./modules/es6.math.acosh');
require('./modules/es6.math.asinh');
require('./modules/es6.math.atanh');
require('./modules/es6.math.cbrt');
require('./modules/es6.math.clz32');
require('./modules/es6.math.cosh');
require('./modules/es6.math.expm1');
require('./modules/es6.math.fround');
require('./modules/es6.math.hypot');
require('./modules/es6.math.imul');
require('./modules/es6.math.log10');
require('./modules/es6.math.log1p');
require('./modules/es6.math.log2');
require('./modules/es6.math.sign');
require('./modules/es6.math.sinh');
require('./modules/es6.math.tanh');
require('./modules/es6.math.trunc');
require('./modules/es6.string.from-code-point');
require('./modules/es6.string.raw');
require('./modules/es6.string.trim');
require('./modules/es6.string.iterator');
require('./modules/es6.string.code-point-at');
require('./modules/es6.string.ends-with');
require('./modules/es6.string.includes');
require('./modules/es6.string.repeat');
require('./modules/es6.string.starts-with');
require('./modules/es6.string.anchor');
require('./modules/es6.string.big');
require('./modules/es6.string.blink');
require('./modules/es6.string.bold');
require('./modules/es6.string.fixed');
require('./modules/es6.string.fontcolor');
require('./modules/es6.string.fontsize');
require('./modules/es6.string.italics');
require('./modules/es6.string.link');
require('./modules/es6.string.small');
require('./modules/es6.string.strike');
require('./modules/es6.string.sub');
require('./modules/es6.string.sup');
require('./modules/es6.date.now');
require('./modules/es6.date.to-json');
require('./modules/es6.date.to-iso-string');
require('./modules/es6.date.to-string');
require('./modules/es6.date.to-primitive');
require('./modules/es6.array.is-array');
require('./modules/es6.array.from');
require('./modules/es6.array.of');
require('./modules/es6.array.join');
require('./modules/es6.array.slice');
require('./modules/es6.array.sort');
require('./modules/es6.array.for-each');
require('./modules/es6.array.map');
require('./modules/es6.array.filter');
require('./modules/es6.array.some');
require('./modules/es6.array.every');
require('./modules/es6.array.reduce');
require('./modules/es6.array.reduce-right');
require('./modules/es6.array.index-of');
require('./modules/es6.array.last-index-of');
require('./modules/es6.array.copy-within');
require('./modules/es6.array.fill');
require('./modules/es6.array.find');
require('./modules/es6.array.find-index');
require('./modules/es6.array.species');
require('./modules/es6.array.iterator');
require('./modules/es6.regexp.constructor');
require('./modules/es6.regexp.to-string');
require('./modules/es6.regexp.flags');
require('./modules/es6.regexp.match');
require('./modules/es6.regexp.replace');
require('./modules/es6.regexp.search');
require('./modules/es6.regexp.split');
require('./modules/es6.promise');
require('./modules/es6.map');
require('./modules/es6.set');
require('./modules/es6.weak-map');
require('./modules/es6.weak-set');
require('./modules/es6.typed.array-buffer');
require('./modules/es6.typed.data-view');
require('./modules/es6.typed.int8-array');
require('./modules/es6.typed.uint8-array');
require('./modules/es6.typed.uint8-clamped-array');
require('./modules/es6.typed.int16-array');
require('./modules/es6.typed.uint16-array');
require('./modules/es6.typed.int32-array');
require('./modules/es6.typed.uint32-array');
require('./modules/es6.typed.float32-array');
require('./modules/es6.typed.float64-array');
require('./modules/es6.reflect.apply');
require('./modules/es6.reflect.construct');
require('./modules/es6.reflect.define-property');
require('./modules/es6.reflect.delete-property');
require('./modules/es6.reflect.enumerate');
require('./modules/es6.reflect.get');
require('./modules/es6.reflect.get-own-property-descriptor');
require('./modules/es6.reflect.get-prototype-of');
require('./modules/es6.reflect.has');
require('./modules/es6.reflect.is-extensible');
require('./modules/es6.reflect.own-keys');
require('./modules/es6.reflect.prevent-extensions');
require('./modules/es6.reflect.set');
require('./modules/es6.reflect.set-prototype-of');
require('./modules/es7.array.includes');
require('./modules/es7.string.at');
require('./modules/es7.string.pad-start');
require('./modules/es7.string.pad-end');
require('./modules/es7.string.trim-left');
require('./modules/es7.string.trim-right');
require('./modules/es7.string.match-all');
require('./modules/es7.symbol.async-iterator');
require('./modules/es7.symbol.observable');
require('./modules/es7.object.get-own-property-descriptors');
require('./modules/es7.object.values');
require('./modules/es7.object.entries');
require('./modules/es7.object.define-getter');
require('./modules/es7.object.define-setter');
require('./modules/es7.object.lookup-getter');
require('./modules/es7.object.lookup-setter');
require('./modules/es7.map.to-json');
require('./modules/es7.set.to-json');
require('./modules/es7.system.global');
require('./modules/es7.error.is-error');
require('./modules/es7.math.iaddh');
require('./modules/es7.math.isubh');
require('./modules/es7.math.imulh');
require('./modules/es7.math.umulh');
require('./modules/es7.reflect.define-metadata');
require('./modules/es7.reflect.delete-metadata');
require('./modules/es7.reflect.get-metadata');
require('./modules/es7.reflect.get-metadata-keys');
require('./modules/es7.reflect.get-own-metadata');
require('./modules/es7.reflect.get-own-metadata-keys');
require('./modules/es7.reflect.has-metadata');
require('./modules/es7.reflect.has-own-metadata');
require('./modules/es7.reflect.metadata');
require('./modules/es7.asap');
require('./modules/es7.observable');
require('./modules/web.timers');
require('./modules/web.immediate');
require('./modules/web.dom.iterable');
module.exports = require('./modules/_core');
},{"./modules/_core":24,"./modules/es6.array.copy-within":121,"./modules/es6.array.every":122,"./modules/es6.array.fill":123,"./modules/es6.array.filter":124,"./modules/es6.array.find":126,"./modules/es6.array.find-index":125,"./modules/es6.array.for-each":127,"./modules/es6.array.from":128,"./modules/es6.array.index-of":129,"./modules/es6.array.is-array":130,"./modules/es6.array.iterator":131,"./modules/es6.array.join":132,"./modules/es6.array.last-index-of":133,"./modules/es6.array.map":134,"./modules/es6.array.of":135,"./modules/es6.array.reduce":137,"./modules/es6.array.reduce-right":136,"./modules/es6.array.slice":138,"./modules/es6.array.some":139,"./modules/es6.array.sort":140,"./modules/es6.array.species":141,"./modules/es6.date.now":142,"./modules/es6.date.to-iso-string":143,"./modules/es6.date.to-json":144,"./modules/es6.date.to-primitive":145,"./modules/es6.date.to-string":146,"./modules/es6.function.bind":147,"./modules/es6.function.has-instance":148,"./modules/es6.function.name":149,"./modules/es6.map":150,"./modules/es6.math.acosh":151,"./modules/es6.math.asinh":152,"./modules/es6.math.atanh":153,"./modules/es6.math.cbrt":154,"./modules/es6.math.clz32":155,"./modules/es6.math.cosh":156,"./modules/es6.math.expm1":157,"./modules/es6.math.fround":158,"./modules/es6.math.hypot":159,"./modules/es6.math.imul":160,"./modules/es6.math.log10":161,"./modules/es6.math.log1p":162,"./modules/es6.math.log2":163,"./modules/es6.math.sign":164,"./modules/es6.math.sinh":165,"./modules/es6.math.tanh":166,"./modules/es6.math.trunc":167,"./modules/es6.number.constructor":168,"./modules/es6.number.epsilon":169,"./modules/es6.number.is-finite":170,"./modules/es6.number.is-integer":171,"./modules/es6.number.is-nan":172,"./modules/es6.number.is-safe-integer":173,"./modules/es6.number.max-safe-integer":174,"./modules/es6.number.min-safe-integer":175,"./modules/es6.number.parse-float":176,"./modules/es6.number.parse-int":177,"./modules/es6.number.to-fixed":178,"./modules/es6.number.to-precision":179,"./modules/es6.object.assign":180,"./modules/es6.object.create":181,"./modules/es6.object.define-properties":182,"./modules/es6.object.define-property":183,"./modules/es6.object.freeze":184,"./modules/es6.object.get-own-property-descriptor":185,"./modules/es6.object.get-own-property-names":186,"./modules/es6.object.get-prototype-of":187,"./modules/es6.object.is":191,"./modules/es6.object.is-extensible":188,"./modules/es6.object.is-frozen":189,"./modules/es6.object.is-sealed":190,"./modules/es6.object.keys":192,"./modules/es6.object.prevent-extensions":193,"./modules/es6.object.seal":194,"./modules/es6.object.set-prototype-of":195,"./modules/es6.object.to-string":196,"./modules/es6.parse-float":197,"./modules/es6.parse-int":198,"./modules/es6.promise":199,"./modules/es6.reflect.apply":200,"./modules/es6.reflect.construct":201,"./modules/es6.reflect.define-property":202,"./modules/es6.reflect.delete-property":203,"./modules/es6.reflect.enumerate":204,"./modules/es6.reflect.get":207,"./modules/es6.reflect.get-own-property-descriptor":205,"./modules/es6.reflect.get-prototype-of":206,"./modules/es6.reflect.has":208,"./modules/es6.reflect.is-extensible":209,"./modules/es6.reflect.own-keys":210,"./modules/es6.reflect.prevent-extensions":211,"./modules/es6.reflect.set":213,"./modules/es6.reflect.set-prototype-of":212,"./modules/es6.regexp.constructor":214,"./modules/es6.regexp.flags":215,"./modules/es6.regexp.match":216,"./modules/es6.regexp.replace":217,"./modules/es6.regexp.search":218,"./modules/es6.regexp.split":219,"./modules/es6.regexp.to-string":220,"./modules/es6.set":221,"./modules/es6.string.anchor":222,"./modules/es6.string.big":223,"./modules/es6.string.blink":224,"./modules/es6.string.bold":225,"./modules/es6.string.code-point-at":226,"./modules/es6.string.ends-with":227,"./modules/es6.string.fixed":228,"./modules/es6.string.fontcolor":229,"./modules/es6.string.fontsize":230,"./modules/es6.string.from-code-point":231,"./modules/es6.string.includes":232,"./modules/es6.string.italics":233,"./modules/es6.string.iterator":234,"./modules/es6.string.link":235,"./modules/es6.string.raw":236,"./modules/es6.string.repeat":237,"./modules/es6.string.small":238,"./modules/es6.string.starts-with":239,"./modules/es6.string.strike":240,"./modules/es6.string.sub":241,"./modules/es6.string.sup":242,"./modules/es6.string.trim":243,"./modules/es6.symbol":244,"./modules/es6.typed.array-buffer":245,"./modules/es6.typed.data-view":246,"./modules/es6.typed.float32-array":247,"./modules/es6.typed.float64-array":248,"./modules/es6.typed.int16-array":249,"./modules/es6.typed.int32-array":250,"./modules/es6.typed.int8-array":251,"./modules/es6.typed.uint16-array":252,"./modules/es6.typed.uint32-array":253,"./modules/es6.typed.uint8-array":254,"./modules/es6.typed.uint8-clamped-array":255,"./modules/es6.weak-map":256,"./modules/es6.weak-set":257,"./modules/es7.array.includes":258,"./modules/es7.asap":259,"./modules/es7.error.is-error":260,"./modules/es7.map.to-json":261,"./modules/es7.math.iaddh":262,"./modules/es7.math.imulh":263,"./modules/es7.math.isubh":264,"./modules/es7.math.umulh":265,"./modules/es7.object.define-getter":266,"./modules/es7.object.define-setter":267,"./modules/es7.object.entries":268,"./modules/es7.object.get-own-property-descriptors":269,"./modules/es7.object.lookup-getter":270,"./modules/es7.object.lookup-setter":271,"./modules/es7.object.values":272,"./modules/es7.observable":273,"./modules/es7.reflect.define-metadata":274,"./modules/es7.reflect.delete-metadata":275,"./modules/es7.reflect.get-metadata":277,"./modules/es7.reflect.get-metadata-keys":276,"./modules/es7.reflect.get-own-metadata":279,"./modules/es7.reflect.get-own-metadata-keys":278,"./modules/es7.reflect.has-metadata":280,"./modules/es7.reflect.has-own-metadata":281,"./modules/es7.reflect.metadata":282,"./modules/es7.set.to-json":283,"./modules/es7.string.at":284,"./modules/es7.string.match-all":285,"./modules/es7.string.pad-end":286,"./modules/es7.string.pad-start":287,"./modules/es7.string.trim-left":288,"./modules/es7.string.trim-right":289,"./modules/es7.symbol.async-iterator":290,"./modules/es7.symbol.observable":291,"./modules/es7.system.global":292,"./modules/web.dom.iterable":293,"./modules/web.immediate":294,"./modules/web.timers":295}],297:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],298:[function(require,module,exports){
(function (global){
/**
 * Copyright (c) 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
 * additional grant of patent rights can be found in the PATENTS file in
 * the same directory.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration. If the Promise is rejected, however, the
          // result for this iteration will be rejected with the same
          // reason. Note that rejections of yielded Promises are not
          // thrown back into the generator function, as is the case
          // when an awaited Promise is rejected. This difference in
          // behavior between yield and await is important, because it
          // allows the consumer to decide what to do with the yielded
          // rejection (swallow it and continue, manually .throw it back
          // into the generator, abandon iteration, whatever). With
          // await, by contrast, there is no opportunity to examine the
          // rejection reason outside the generator function, so the
          // only option is to throw it from the await expression, and
          // let the generator function handle the exception.
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    if (typeof global.process === "object" && global.process.domain) {
      invoke = global.process.domain.bind(invoke);
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // Among the various tricks for obtaining a reference to the global
  // object, this seems to be the most reliable technique that does not
  // use indirect eval (which violates Content Security Policy).
  typeof global === "object" ? global :
  typeof window === "object" ? window :
  typeof self === "object" ? self : this
);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],299:[function(require,module,exports){
var Vue // late bind
var version
var map = window.__VUE_HOT_MAP__ = Object.create(null)
var installed = false
var isBrowserify = false
var initHookName = 'beforeCreate'

exports.install = function (vue, browserify) {
  if (installed) return
  installed = true

  Vue = vue.__esModule ? vue.default : vue
  version = Vue.version.split('.').map(Number)
  isBrowserify = browserify

  // compat with < 2.0.0-alpha.7
  if (Vue.config._lifecycleHooks.indexOf('init') > -1) {
    initHookName = 'init'
  }

  exports.compatible = version[0] >= 2
  if (!exports.compatible) {
    console.warn(
      '[HMR] You are using a version of vue-hot-reload-api that is ' +
      'only compatible with Vue.js core ^2.0.0.'
    )
    return
  }
}

/**
 * Create a record for a hot module, which keeps track of its constructor
 * and instances
 *
 * @param {String} id
 * @param {Object} options
 */

exports.createRecord = function (id, options) {
  var Ctor = null
  if (typeof options === 'function') {
    Ctor = options
    options = Ctor.options
  }
  makeOptionsHot(id, options)
  map[id] = {
    Ctor: Vue.extend(options),
    instances: []
  }
}

/**
 * Make a Component options object hot.
 *
 * @param {String} id
 * @param {Object} options
 */

function makeOptionsHot (id, options) {
  injectHook(options, initHookName, function () {
    map[id].instances.push(this)
  })
  injectHook(options, 'beforeDestroy', function () {
    var instances = map[id].instances
    instances.splice(instances.indexOf(this), 1)
  })
}

/**
 * Inject a hook to a hot reloadable component so that
 * we can keep track of it.
 *
 * @param {Object} options
 * @param {String} name
 * @param {Function} hook
 */

function injectHook (options, name, hook) {
  var existing = options[name]
  options[name] = existing
    ? Array.isArray(existing)
      ? existing.concat(hook)
      : [existing, hook]
    : [hook]
}

function tryWrap (fn) {
  return function (id, arg) {
    try { fn(id, arg) } catch (e) {
      console.error(e)
      console.warn('Something went wrong during Vue component hot-reload. Full reload required.')
    }
  }
}

exports.rerender = tryWrap(function (id, options) {
  var record = map[id]
  if (!options) {
    record.instances.slice().forEach(function (instance) {
      instance.$forceUpdate()
    })
    return
  }
  if (typeof options === 'function') {
    options = options.options
  }
  record.Ctor.options.render = options.render
  record.Ctor.options.staticRenderFns = options.staticRenderFns
  record.instances.slice().forEach(function (instance) {
    instance.$options.render = options.render
    instance.$options.staticRenderFns = options.staticRenderFns
    instance._staticTrees = [] // reset static trees
    instance.$forceUpdate()
  })
})

exports.reload = tryWrap(function (id, options) {
  var record = map[id]
  if (options) {
    if (typeof options === 'function') {
      options = options.options
    }
    makeOptionsHot(id, options)
    if (version[1] < 2) {
      // preserve pre 2.2 behavior for global mixin handling
      record.Ctor.extendOptions = options
    }
    var newCtor = record.Ctor.super.extend(options)
    record.Ctor.options = newCtor.options
    record.Ctor.cid = newCtor.cid
    record.Ctor.prototype = newCtor.prototype
    if (newCtor.release) {
      // temporary global mixin strategy used in < 2.0.0-alpha.6
      newCtor.release()
    }
  }
  record.instances.slice().forEach(function (instance) {
    if (instance.$vnode && instance.$vnode.context) {
      instance.$vnode.context.$forceUpdate()
    } else {
      console.warn('Root or manually mounted instance modified. Full reload required.')
    }
  })
})

},{}],300:[function(require,module,exports){
var inserted = exports.cache = {}

function noop () {}

exports.insert = function (css) {
  if (inserted[css]) return noop
  inserted[css] = true

  var elem = document.createElement('style')
  elem.setAttribute('type', 'text/css')

  if ('textContent' in elem) {
    elem.textContent = css
  } else {
    elem.styleSheet.cssText = css
  }

  document.getElementsByTagName('head')[0].appendChild(elem)
  return function () {
    document.getElementsByTagName('head')[0].removeChild(elem)
    inserted[css] = false
  }
}

},{}],301:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var pages = [['A01_正在初始化硬件模块', 'A01_InitDev', 'View', require('./customer/common/A01_InitDev.vue')], ['A01_设备初始化失败', 'A01_InitDevFail', 'View', require('./customer/common/A01_InitDevFail.vue')], ['A01_交易进行中提示', 'A01_com_Trading', 'Popup', require('./customer/common/A01_com_Trading.vue')], ['A01_交易结果提示是否打印凭条', 'A01_com_transResult', 'View', require('./common/result.vue')], ['A01_公共信息确认页面样式', 'cus_com_informationConfirm', 'View', require('./customer/common/cus_com_informationConfirm.vue')], ['A01_公共信息确认页面两列样式', 'com_Detail_table', 'View', require('./common/com_Detail_table.vue')], ['A01_日期公共样式', 'A01_com_date', 'View', require('./common/com_date.vue')], ['A01_下拉公共样式', 'A01_com_select', 'View', require('./common/com_select.vue')], ['A01_创建下拉公共样式', 'A01_com_newSelect', 'View', require('./common/com_newSelect.vue')], ['A01_显示公共错误信息-有声音', 'A01_ShowReason', 'View', require('./customer/common/A01_ShowReason.vue')], ['A01_显示公共错误信息-无声音', 'A01_ShowReasonNoSound', 'View', require('./customer/common/A01_ShowReasonNoSound.vue')], ['A01_显示公共错误信息并返回', 'A01_ShowReasonAndReturn', 'View', require('./customer/common/A01_ShowReasonAndReturn.vue')], ['A01_显示交易结果（公共）', 'A01_ShowTransResult', 'View', require('./customer/common/A01_ShowTransResult.vue')], ['A01_再次显示交易结果（打印机故障）', 'A01_ShowTransResult4PrinterError', 'View', require('./customer/common/A01_ShowTransResult4PrinterError.vue')], ['A01_暂停服务原因', 'A01_OutServiceReason', 'View', require('./customer/common/A01_OutServiceReason.vue')], ['A01_吞卡折结果', 'A01_EjectResult', 'View', require('./customer/common/A01_EjectResult.vue')], ['A01_主密钥未加载', 'A01_MstKeyNotLoad', 'View', require('./customer/common/A01_MstKeyNotLoad.vue')], ['A01_打印凭条', 'A01_PrintReceipt', 'View', require('./customer/common/A01_PrintReceipt.vue')], ['A01_打印回单', 'A01_PrintA4HTML', 'View', require('./customer/common/A01_PrintA4HTML.vue')], ['A01_输入帐号和密码', 'A01_InputAccountAndPassword', 'View', require('./customer/common/A01_InputAccountAndPassword.vue')], ['A01_重新输入帐号和密码', 'A01_InputAccountAndPasswordAgain', 'View', require('./customer/common/A01_InputAccountAndPasswordAgain.vue')], ['A01_正在读卡……', 'A01_CardReading', 'Popup', require('./customer/common/A01_CardReading.vue')], ['A01_正在读证件……', 'A01_IDCardReading', 'Popup', require('./customer/common/A01_IDCardReading.vue')], ['A01_正在读折……', 'A01_PassbookReading', 'Popup', require('./customer/common/A01_PassbookReading.vue')], ['A01_选择交易介质(4种)', 'A01_ChooseMediaType', 'View', require('./customer/common/A01_ChooseMediaType.vue')], ['A01_输入证件信息(View)', 'A01_inputIDinfo', 'View', require('./customer/common/A01_inputIDinfo.vue')], ['A01_输入详细证件信息', 'A01_InputMoreIDInfo', 'View', require('./customer/common/A01_InputMoreIDInfo.vue')], ['A01_回显详细证件信息', 'A01_ShowMoreIDInfo', 'View', require('./customer/common/A01_ShowMoreIDInfo.vue')], ['A01_动态显示菜单', 'A01_Menu', 'View', require('./customer/common/A01_Menu.vue')], ['A01_选择证件类型', 'A01_SelectDocumentType', 'View', require('./customer/common/A01_SelectDocumentType.vue')], ['A01_选择证件类型(ALL)', 'A01_SelectDocumentTypeAll', 'View', require('./customer/common/A01_SelectDocumentTypeAll.vue')], ['A01_选择证件类型1(预删除)', './customer/common/cust_com_SelectDocumentType.html', 'View', require('./customer/common/cust_com_SelectDocumentType.vue')], ['A01_选择证件类型,不含非二代证', 'cust_com_SelectShenfengzheng', 'View', require('./customer/common/cust_com_SelectShenfengzheng.vue')], ['A01_人脸识别视频显示页面', 'A01_FaceCamera', 'View', require('./customer/common/A01_FaceCamera.vue')], ['A01_退出卡折证提示', 'A01_TakeCardOrPassbook', 'View', require('./customer/common/A01_TakeCardOrPassbook.vue')], ['A01_回收卡折证提示', 'A01_RetractCardOrPassbook', 'View', require('./customer/common/A01_RetractCardOrPassbook.vue')], ['A01_插入银行卡提示', 'A01_InputCardOrPassbook', 'View', require('./customer/common/A01_InputCardOrPassbook.vue')], ['A01_插入银行卡提示(非桌面款)', 'A01_InputCardOrPassbook2', 'View', require('./customer/common/A01_InputCardOrPassbook2.vue')], ['A01_电子签名异常是否继续交易', 'A01_SignError', 'Popup', require('./customer/common/A01_SignError.vue')], ['A01_外国人居留证是否带芯片提示', 'A01_ForeignerTip', 'Popup', require('./customer/common/A01_ForeignerTip.vue')], ['A01_回单打印成功', 'A01_HDPrintOK', 'View', require('./customer/common/A01_HDPrintOK.vue')], ['A01_高拍仪拍摄证件', 'A01_HignCamTakePhoto', 'View', require('./customer/common/A01_HignCamTakePhoto.vue')], ['A01_审核高拍仪拍摄证件', 'A01_AuthHighCamPic', 'View', require('./customer/common/A01_AuthHighCamPic.vue')], ['A01_前端指纹审核PDF', 'A01_AuditorVerifyIDPDF', 'View', require('./common/A01_AuditorVerifyIDPDF.vue')], ['A01_前端指纹审核实时登记PDF', 'A01_AuditorVerifyIDPDFMarketing', 'View', require('./common/A01_AuditorVerifyIDPDFMarketing.vue')], ['A01_前端指纹审核NoPDF', 'A01_AuditorVerifyIDNoPDF', 'View', require('./common/A01_AuditorVerifyIDNoPDF.vue')], ['A01_菜单下载', 'A01_DownloadMenu', 'View', require('./common/A01_DownloadMenu.vue')], ['A01_参数下载', 'A01_DownloadParams', 'View', require('./common/A01_DownloadParams.vue')], ['A01_UFile下载', 'A01_DownloadUFiles', 'View', require('./common/A01_DownloadUFiles.vue')], ['A01_密钥下载', 'A01_DownloadWorkKey', 'View', require('./common/A01_DownloadWorkKey.vue')], ['A01_参数初始化', 'A01_InitializeParams', 'View', require('./common/A01_InitializeParams.vue')], ['A01_数据库维护中', 'A01_DataBaseMgn', 'View', require('./common/A01_DataBaseMgn.vue')], ['A01_敏感信息维护中', 'A01_SensitiveData', 'View', require('./common/A01_SensitiveData.vue')], ['A01_（申请书签名）电子签名', 'A01_ESign', 'View', require('./customer/common/A01_ESign.vue')], ['A01_非二代证件处理', 'A01_DealNicpCard', 'Popup', require('./customer/common/A01_DealNicpCard.vue')], ['A01_提示读取证件', 'A01_NeedReadCardTip', 'View', require('./customer/common/A01_NeedReadCardTip.vue')], ['A01_广告屏等待页面', 'A01_WaitingForAD', 'Popup', require('./customer/common/A01_WaitingForAD.vue')], ['阅读协议【所有】', 'A01_ShowApplication', 'View', require('./customer/common/A01_ShowApplication.vue')], ['强制显示交易结果', 'A01_ForceShowReSult', 'View', require('./customer/common/A01_ForceShowReSult.vue')], ['是否退出登录模式', 'cust_isLogout', 'Popup', require('./common/cust_isLogout.vue')], ['插入银行卡提示', 'cust_com_InputCard', 'View', require('./customer/common/cust_com_InputCard.vue')], ['是否打印凭条', 'cust_com_IsPrintReceipt', 'View', require('./customer/common/cust_com_IsPrintReceipt.vue')], ['暂停服务', './cust_main_OutService.html', 'View', require('./cust_main_OutService.vue')], ['显示信息', './cust_ShowReason.html', 'View', require('./cust_ShowReason.vue')], ['com暂停服务', './common/cust_main_OutService.html', 'View', require('./common/cust_main_OutService.vue')], ['com显示信息', './common/cust_ShowReason.html', 'View', require('./common/cust_ShowReason.vue')], ['com正在处理', './common/cust_main_Sysing.html', 'View', require('./common/A01_main_Sysing.vue')], ['主菜单', './customer/business/cust_bus_index.html', 'View', require('./customer/business/cust_bus_index.vue')], ['空闲广告', './customer/business/cust_bus_advertise', 'View', require('./customer/business/cust_bus_advertise.vue')], ['迎客', './customer/business/cust_bus_welcome', 'View', require('./customer/business/cust_bus_welcome.vue')], ['布局示例测试', './customer/common/cust_com_LayoutMainDemo.html', 'View', require('./customer/common/cust_com_LayoutMainDemo.vue')], ['Popup示例测试', './customer/common/cust_com_PopupDemo.html', 'Popup', require('./customer/common/cust_com_PopupDemo.vue')], ['Dialog示例测试', './customer/common/cust_com_DialogDemo.html', 'Popup', require('./customer/common/cust_com_DialogDemo.vue')], ['Swiper示例测试', './customer/common/cust_com_SwiperDemo.html', 'View', require('./customer/common/cust_com_SwiperDemo.vue')], ['many测试', './customer/common/cust_com_ManyDemo.html', 'View', require('./customer/common/cust_com_ManyDemo.vue')], ['echarts测试', './customer/common/cust_com_EChartsDemo.html', 'View', require('./customer/common/cust_com_EChartsDemo.vue')], ['界面主题切换', './customer/common/cust_com_SwitchTheme', 'View', require('./customer/common/cust_com_SwitchTheme.vue')], ['录入其他证件资料', './customer/common/cust_com_InsertOtherDocumentInfo.html', 'View', require('./customer/common/cust_com_InsertOtherDocumentInfo.vue')], ['联网核查', './customer/common/cust_com_NetCheck.html', 'View', require('./customer/common/cust_com_NetCheck.vue')], ['是否打印凭条', './customer/common/cust_com_IsPrintReceipt.html', 'View', require('./customer/common/cust_com_IsPrintReceipt.vue')], ['第一次输入密码', './customer/common/cust_com_InputPassword.html', 'View', require('./customer/common/cust_com_InputPassword.vue')], ['第一次输入密码2', './customer/common/cust_com_InputPassWord.html', 'View', require('./customer/common/cust_com_InputPassword.vue')], ['第二次输入密码', './customer/common/cust_com_InputPasswordAgain.html', 'View', require('./customer/common/cust_com_InputPasswordAgain.vue')], ['密码错误提示（非三次）', './customer/common/cust_com_InputPasswordError.html', 'View', require('./customer/common/cust_com_InputPasswordError.vue')], ['输入证件信息（Popup）', './customer/common/cust_com_InputDocumentInfo.html', 'Popup', require('./customer/common/cust_com_InputDocumentInfo.vue')], ['插入银行卡提示', './customer/common/cust_com_InputCard.html', 'View', require('./customer/common/cust_com_InputCard.vue')], ['取走银行卡提示', './customer/common/cust_com_TakeCard.html', 'View', require('./customer/common/cust_com_TakeCard.vue')], ['吞卡提示', './customer/common/cust_com_RetractCard', 'View', require('./customer/common/cust_com_RetractCard.vue')], ['取走证件（身份证需要两个，失败与成功）', './customer/common/cust_com_IDout.html', 'View', require('./customer/common/cust_com_IDout.vue')], ['刷证件', './customer/common/cust_com_IDin.html', 'View', require('./customer/common/cust_com_IDin.vue')], ['审核员审核', './customer/common/cust_com_VerifyIdentity.html', 'View', require('./customer/common/cust_com_VerifyIdentity.vue')], ['坐席审核（即后台审核身份）', './customer/common/cust_com_SeatVerify.html', 'View', require('./customer/common/cust_com_SeatVerify.vue')], ['移动PAD审核', './customer/common/Cust_Pad_Check', 'View', require('./customer/common/Cust_Pad_Check.vue')], ['交易进行中提示', './customer/common/cust_com_Trading.html', 'Popup', require('./customer/common/cust_com_Trading.vue')], ['交易成功提示', './customer/common/cust_com_TradeSuccess.html', 'View', require('./customer/common/cust_com_TradeSuccess.vue')], ['交易失败提示', './customer/common/cust_com_TradeFailed.html', 'View', require('./customer/common/cust_com_TradeFailed.vue')], ['取走凭条提示', './customer/common/cust_com_TakeReceipt.html', 'View', require('./customer/common/cust_com_TakeReceipt.vue')], ['审核员录入指纹', './customer/common/cust_com_FingerDistinguish.html', 'View', require('./customer/common/cust_com_FingerDistinguish.vue')], ['审核员选择Or输入指纹编号', './customer/common/cust_com_AuditorVerifyID.html', 'Popup', require('./customer/common/cust_com_AuditorVerifyID.vue')], ['（申请书签名）展示申请书及签名结果', './customer/common/cust_com_ShowSignResult.html', 'View', require('./customer/common/cust_com_ShowSignResult.vue')], ['（申请书签名）展示申请书及提示', './customer/common/cust_com_ShowApplication.html', 'View', require('./customer/common/cust_com_ShowApplication.vue')], ['打印申请书', './customer/common/cust_com_PrintApplication.html', 'View', require('./customer/common/cust_com_PrintApplication.vue')], ['取走申请书', './customer/common/cust_com_TakeApplication.html', 'View', require('./customer/common/cust_com_TakeApplication.vue')], ['放入申请书', './customer/common/cust_com_PutApplication.html', 'View', require('./customer/common/cust_com_PutApplication.vue')], ['（城市选择器）省市区三级联动选择', './customer/common/cust_com_CitySelector.html', 'Popup', require('./customer/common/cust_com_CitySelector.vue')], ['是否结束交易提示弹框', './customer/common/cust_com_TradeFinishTip.html', 'Popup', require('./customer/common/cust_com_TradeFinishTip.vue')], ['人脸审核繁忙提示弹框', './customer/common/cust_com_VertifyBusyTip.html', 'Popup', require('./customer/common/cust_com_VertifyBusyTip.vue')], ['显示错误提示信息', './customer/common/cust_com_ShowReason.html', 'View', require('./customer/common/cust_com_ShowReason.vue')], ['显示错误信息', './customer/common/Cust_ShowReason.html', 'View', require('./customer/common/Cust_ShowReason.vue')], ['交易成功提示', './cust_com_TradeSuccess.html', 'View', require('./customer/common/cust_com_TradeSuccess.vue')], ['请取走您的银行卡', './cust_com_TakeCard', 'View', require('./customer/common/cust_com_TakeCard.vue')], ['显示公共成功信息', './customer/common/cust_com_TradeSuccess.html', 'View', require('./customer/common/cust_com_TradeSuccess.vue')], ['显示公共错误信息1', './customer/common/Cust_ShowReason.html', 'View', require('./customer/common/Cust_ShowReason.vue')], ['显示公共错误信息2', './customer/common/cust_com_ShowReason.html', 'View', require('./customer/common/Cust_ShowReason.vue')], ['输入证件信息例子', './demo/com_inputIDinfo.html', 'View', require('./demo/com_inputIDinfo.vue')], ['理财产品认购/申购信息填写例子', './demo/com_buyProductInfo.html', 'View', require('./demo/com_buyProductInfo.vue')], ['借记卡交易安全锁', './demo/tran_safety_key.html', 'View', require('./demo/tran_safety_key.vue')], ['个人税收居民身份声明', './demo/identity_statement.html', 'View', require('./demo/identity_statement.vue')], ['滚动条例子', './demo/scroll.html', 'View', require('./demo/scroll.vue')], ['迎客', './demo/welcome.html', 'View', require('./demo/welcome.vue')], ['生日', './demo/birthday.html', 'View', require('./demo/birthday.vue')], ['持有基金产品信息例子', './demo/com_holdFundList.html', 'View', require('./demo/com_holdFundList.vue')], ['A01_精准营销', 'cust_com_isLoginOutAndShowSaleInfo', 'Popup', require('./customer/common/cust_com_isLoginOutAndShowSaleInfo.vue')], ['A01_风险评估已过期', 'A01_RiskExpiredTip', 'Popup', require('./customer/common/A01_RiskExpiredTip.vue')], ['A01_风险评估未评估', 'A01_NotRiskTip', 'Popup', require('./customer/common/A01_NotRiskTip.vue')], ['是否补登折', 'cust_com_IfBonusRecord', 'View', require('./customer/common/cust_com_IfBonusRecord.vue')], ['显示版本过低提示页面', 'A01_ShowVersion', 'View', require('./customer/common/A01_ShowVersion.vue')], ['显示机器未重启页面', 'A01_ShowRebootTerm', 'View', require('./customer/common/A01_ShowRebootTerm.vue')], ['显示设备故障或未配置页面', 'A01_ShowDeviceError', 'View', require('./customer/common/A01_ShowDeviceError.vue')], ['暂停服务页面', 'A01_OutService', 'View', require('./customer/common/A01_OutService.vue')], ['信息治理显示页面', 'A01_ShowReasonForCustMnt', 'View', require('./customer/common/A01_ShowReasonForCustMnt.vue')], ['模糊检索', 'A01_Search', 'View', require('./customer/common/A01_Search.vue')]];

exports.default = pages;

},{"./common/A01_AuditorVerifyIDNoPDF.vue":303,"./common/A01_AuditorVerifyIDPDF.vue":304,"./common/A01_AuditorVerifyIDPDFMarketing.vue":305,"./common/A01_DataBaseMgn.vue":306,"./common/A01_DownloadMenu.vue":307,"./common/A01_DownloadParams.vue":308,"./common/A01_DownloadUFiles.vue":309,"./common/A01_DownloadWorkKey.vue":310,"./common/A01_InitializeParams.vue":311,"./common/A01_SensitiveData.vue":312,"./common/A01_main_Sysing.vue":313,"./common/com_Detail_table.vue":314,"./common/com_date.vue":315,"./common/com_newSelect.vue":316,"./common/com_select.vue":317,"./common/cust_ShowReason.vue":318,"./common/cust_isLogout.vue":319,"./common/cust_main_OutService.vue":320,"./common/result.vue":321,"./cust_ShowReason.vue":346,"./cust_main_OutService.vue":347,"./customer/business/cust_bus_advertise.vue":348,"./customer/business/cust_bus_index.vue":349,"./customer/business/cust_bus_welcome.vue":350,"./customer/common/A01_AuthHighCamPic.vue":351,"./customer/common/A01_CardReading.vue":352,"./customer/common/A01_ChooseMediaType.vue":353,"./customer/common/A01_DealNicpCard.vue":354,"./customer/common/A01_ESign.vue":355,"./customer/common/A01_EjectResult.vue":356,"./customer/common/A01_FaceCamera.vue":357,"./customer/common/A01_ForceShowReSult.vue":358,"./customer/common/A01_ForeignerTip.vue":359,"./customer/common/A01_HDPrintOK.vue":360,"./customer/common/A01_HignCamTakePhoto.vue":361,"./customer/common/A01_IDCardReading.vue":362,"./customer/common/A01_InitDev.vue":363,"./customer/common/A01_InitDevFail.vue":364,"./customer/common/A01_InputAccountAndPassword.vue":365,"./customer/common/A01_InputAccountAndPasswordAgain.vue":366,"./customer/common/A01_InputCardOrPassbook.vue":367,"./customer/common/A01_InputCardOrPassbook2.vue":368,"./customer/common/A01_InputMoreIDInfo.vue":369,"./customer/common/A01_Menu.vue":370,"./customer/common/A01_MstKeyNotLoad.vue":371,"./customer/common/A01_NeedReadCardTip.vue":372,"./customer/common/A01_NotRiskTip.vue":373,"./customer/common/A01_OutService.vue":374,"./customer/common/A01_OutServiceReason.vue":375,"./customer/common/A01_PassbookReading.vue":376,"./customer/common/A01_PrintA4HTML.vue":377,"./customer/common/A01_PrintReceipt.vue":378,"./customer/common/A01_RetractCardOrPassbook.vue":379,"./customer/common/A01_RiskExpiredTip.vue":380,"./customer/common/A01_Search.vue":381,"./customer/common/A01_SelectDocumentType.vue":382,"./customer/common/A01_SelectDocumentTypeAll.vue":383,"./customer/common/A01_ShowApplication.vue":384,"./customer/common/A01_ShowDeviceError.vue":385,"./customer/common/A01_ShowMoreIDInfo.vue":386,"./customer/common/A01_ShowReason.vue":387,"./customer/common/A01_ShowReasonAndReturn.vue":388,"./customer/common/A01_ShowReasonForCustMnt.vue":389,"./customer/common/A01_ShowReasonNoSound.vue":390,"./customer/common/A01_ShowRebootTerm.vue":391,"./customer/common/A01_ShowTransResult.vue":392,"./customer/common/A01_ShowTransResult4PrinterError.vue":393,"./customer/common/A01_ShowVersion.vue":394,"./customer/common/A01_SignError.vue":395,"./customer/common/A01_TakeCardOrPassbook.vue":396,"./customer/common/A01_WaitingForAD.vue":397,"./customer/common/A01_com_Trading.vue":398,"./customer/common/A01_inputIDinfo.vue":399,"./customer/common/Cust_Pad_Check.vue":400,"./customer/common/Cust_ShowReason.vue":401,"./customer/common/cus_com_informationConfirm.vue":402,"./customer/common/cust_com_AuditorVerifyID.vue":403,"./customer/common/cust_com_CitySelector.vue":404,"./customer/common/cust_com_DialogDemo.vue":405,"./customer/common/cust_com_EChartsDemo.vue":406,"./customer/common/cust_com_FingerDistinguish.vue":407,"./customer/common/cust_com_IDin.vue":408,"./customer/common/cust_com_IDout.vue":409,"./customer/common/cust_com_IfBonusRecord.vue":410,"./customer/common/cust_com_InputCard.vue":411,"./customer/common/cust_com_InputDocumentInfo.vue":412,"./customer/common/cust_com_InputPassword.vue":413,"./customer/common/cust_com_InputPasswordAgain.vue":414,"./customer/common/cust_com_InputPasswordError.vue":415,"./customer/common/cust_com_InsertOtherDocumentInfo.vue":416,"./customer/common/cust_com_IsPrintReceipt.vue":417,"./customer/common/cust_com_LayoutMainDemo.vue":418,"./customer/common/cust_com_ManyDemo.vue":419,"./customer/common/cust_com_NetCheck.vue":420,"./customer/common/cust_com_PopupDemo.vue":421,"./customer/common/cust_com_PrintApplication.vue":422,"./customer/common/cust_com_PutApplication.vue":423,"./customer/common/cust_com_RetractCard.vue":424,"./customer/common/cust_com_SeatVerify.vue":425,"./customer/common/cust_com_SelectDocumentType.vue":426,"./customer/common/cust_com_SelectShenfengzheng.vue":427,"./customer/common/cust_com_ShowApplication.vue":428,"./customer/common/cust_com_ShowReason.vue":429,"./customer/common/cust_com_ShowSignResult.vue":430,"./customer/common/cust_com_SwiperDemo.vue":431,"./customer/common/cust_com_SwitchTheme.vue":432,"./customer/common/cust_com_TakeApplication.vue":433,"./customer/common/cust_com_TakeCard.vue":434,"./customer/common/cust_com_TakeReceipt.vue":435,"./customer/common/cust_com_TradeFailed.vue":436,"./customer/common/cust_com_TradeFinishTip.vue":437,"./customer/common/cust_com_TradeSuccess.vue":438,"./customer/common/cust_com_Trading.vue":439,"./customer/common/cust_com_VerifyIdentity.vue":440,"./customer/common/cust_com_VertifyBusyTip.vue":441,"./customer/common/cust_com_isLoginOutAndShowSaleInfo.vue":442,"./demo/birthday.vue":443,"./demo/com_buyProductInfo.vue":444,"./demo/com_holdFundList.vue":445,"./demo/com_inputIDinfo.vue":446,"./demo/identity_statement.vue":447,"./demo/scroll.vue":448,"./demo/tran_safety_key.vue":449,"./demo/welcome.vue":450}],302:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert("/*模态框效果*/\r\n.x-modal {\r\n    position: relative;\r\n    width: 55%;\r\n    height: 65%;\r\n    margin: 10% auto;\r\n    background: #e7faf8;\r\n    border-radius: 20px;\r\n}\r\n@media screen and (max-width: 1280px) { \r\n.x-modal{\r\n   height: 60%;\r\n}\r\n\r\n}\r\n.modal_btnbox{\r\n    position: absolute;\r\n    bottom: 10%;\r\n    width: 100%;\r\n    text-align: center;\r\n}\r\n.modal_title{\r\n    position: relative;\r\n    width: 90%;\r\n    height: 10%;\r\n    margin: 0 auto;\r\n    padding: 28px 10px 10px 0px;\r\n    font-size: 3rem;\r\n    text-align: left;\r\n    border-bottom: 1px solid #CCC;\r\n}\r\n.modal .md_center_title{\r\n    width: 80%;\r\n    font-size: 3rem;\r\n    text-align: center;\r\n    margin: 20% auto;\r\n}\r\n.modal_time{\r\n    width: 54px;\r\n    height: 54px;\r\n    line-height: 54px;\r\n    margin-top:10px;\r\n    background: url(../img/time1.gif) no-repeat;\r\n    background-size: 100% 100%;\r\n    color:red;\r\n    font-size: 2.3rem;\r\n    text-align: center;\r\n    display:inline-block;\r\n    position:absolute;\r\n    right:10%;\r\n    top:5%;\r\n}")
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{"width":"100%","height":"100%"}},[_c(_vm.$root.currentView,{tag:"component"}),_vm._v(" "),_c('div',{staticStyle:{"display":"none"},attrs:{"id":"pagePopup"}},[_c(_vm.$root.currentPopup,{tag:"component"})],1),_vm._v(" "),_c('x-debug-page')],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-e1ab8304", __vue__options__)
  } else {
    hotAPI.reload("data-v-e1ab8304", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],303:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".nice-select[data-v-5972be0a] {\r\n    width: 70%;\r\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _vuex = require('vuex');

exports.default = {
    data: function data() {
        return {
            getKeys: ['D00_D02_marketPersonIdList'],
            setKeys: ['D00_D02_marketPersonNow1', 'D00_D02_marketPersonNow2', 'D00_D02_marketPersonNow3', 'D00_D02_marketPersonNow4'],
            iid: '',
            showName: '',
            name4Value: '',
            name1Val: '',
            name2Val: '',
            name3Val: '',
            name4Val: '',

            marketerName: "",
            marketerCode: "",
            showMarketer: false,
            showPerson: false
        };
    },

    methods: _extends({
        initPage: function initPage() {
            this.initPool(this.$data);
        },
        manyTest: function manyTest() {
            this.showMarketer = true;
            setVar("D00_D02_hasRegisted", 1);
        },
        onManyCancel: function onManyCancel() {
            this.showMarketer = false;
        },
        onInsertName: function onInsertName() {
            var vm = this;
            vm.iid = document.activeElement.id;
            document.getElementById("" + vm.iid + "").value = "";

            vm.showPerson = true;
        },
        onChooseLevel: function onChooseLevel(index, item) {

            this.marketerCode = item.value;
            this.marketerName = item.key;

            document.getElementById("" + this.iid + "").value = "" + item.key;
            document.getElementById("" + this.iid + "").name = "" + item.value;
            var trr = document.getElementById("" + this.iid + "").parentElement.parentElement.parentElement.getElementsByTagName("input");
            trr[3].name = $("#auditor").html();
            for (var i = 0; i < trr.length - 1; i++) {
                if (trr[i].value == "" || trr[i].value == null) {
                    trr[i].value = item.key;
                    trr[i].name = item.value;
                }
            }
            var name1 = trr[0].name + "|" + trr[0].value;
            var name2 = trr[1].name + "|" + trr[1].value;
            var name3 = trr[2].name + "|" + trr[2].value;
            var name4 = trr[3].name + "|" + trr[3].value;
            this.name1Val = name1;
            this.name2Val = name2;
            this.name3Val = name3;
            this.name4Val = name4;
            setVar("D00_D02_marketPersonNow1", name1);
            setVar("D00_D02_marketPersonNow2", name2);
            setVar("D00_D02_marketPersonNow3", name3);
            setVar("D00_D02_marketPersonNow4", name4);

            this.showPerson = false;
            this.showMarketer = true;
        },
        onCancel: function onCancel() {
            this.showMarketer = false;
        }
    }, (0, _vuex.mapActions)(['initPool', 'fetch', 'submit', 'onCancel', 'onContinue'])),
    created: function created() {
        var vm = this;

        this.$root.$on('onClickButton', onClickButton);
        function onClickButton(sel) {
            vm.iid = document.activeElement.id;
            vm.manyTest();
        };
    },
    destroyed: function destroyed() {
        this.$root.$off('onClickButton');
    },
    mounted: function mounted() {
        this.initPool(this.$data);
        var vm = this;
        vm.marketerData = JSON.parse('[{"key":"小鱼","value":"9"},{"key":"小鱼","value":"9"},{"key":"小周","value":"8"},{"key":"郑奎","value":"7"},{"key":"张三","value":"1"},{"key":"李四","value":"2"},{"key":"王二","value":"3"},{"key":"小明","value":"4"},{"key":"李四","value":"2"},{"key":"王二","value":"3"},{"key":"李四","value":"2"},{"key":"王二","value":"3"}]');
        DataTools.get("GD_A01_ManagerUser|GD_MaxTimeForFinger|GD_UsrNum|GD_A01_MenuID", function (data) {
            var jsonArrayData = "";
            if (data[0] != undefined && data[0] != null) {
                jsonArrayData = JSON.parse(data[0]);
                var auditorId = new Array();
                var auditorName = new Array();
                if (jsonArrayData.length == 0) {
                    setVar("GD_ErrReason", "AuditorListEmpty");
                    exitScene("STA_AUDITOREMPTY");
                }
                for (var i = 0; i < jsonArrayData.length; i++) {
                    auditorId.push(jsonArrayData[i].userNum);
                    auditorName.push(jsonArrayData[i].userNum);
                }
                createSelect(auditorId, auditorName, "auditor");
                if (data[2] != "" && data[2] != null) {
                    $("#auditor").html(data[2]);
                    $("#auditor").attr('data-value', data[2]);
                    setVar("GD_UsrNum", data[2]);
                    setVar("GD_A01_NumUrCfg", data[2]);
                } else {
                    $("#auditor").html(auditorName[0]);
                    $("#auditor").attr('data-value', auditorId[0]);

                    setVar("GD_UsrNum", auditorName[0]);
                    setVar("GD_A01_NumUrCfg", auditorName[0]);
                }
            } else {
                setVar("GD_ErrReason", "AuditorListEmpty");
                exitScene("STA_AUDITOREMPTY");
            }

            var strMenuID = data[3];
            var strMsgTip = "";
            var strMsg = "";
            if (strMenuID == "030001") {
                $("#AuditTips").html("1.请提醒客户注意资金安全，谨防电信诈骗<br>2.提醒客户实时转账不可撤销");
            } else {
                $("#AuditTips").html("1.请核实该笔业务是否为客户本人办理");
            }

            if (data[1] == "10") {
                $("#ErrorInfo").html("请选择用户后<br>进行指纹确认");
            } else {
                $("#ErrorInfo").html("请重按指纹<br>剩余次数：" + data[1] + "次");
                $("#ErrorInfo").css("color", "red");
            }

            var nodes = document.querySelectorAll('[name="nice-select"] li');
            for (var i = 0; i < nodes.length; i++) {
                nodes[i].onclick = onNiceSelectLiClick;
            }
            function onNiceSelectLiClick(e) {
                var val = $(this).attr("data-value");
                setVar("GD_UsrNum", val);
                setVar("GD_A01_NumUrCfg", val);
                var index = $(this).index();

                vm.name4Value = jsonArrayData[parseInt(index)].userNam;

                vm.name4Val = val + "|" + vm.name4Value;
                setVar("D00_D02_marketPersonNow4", vm.name4Val);


                e.stopPropagation();
            }

            for (var i = 0; i < jsonArrayData.length; i++) {
                if ($("#auditor").html() == jsonArrayData[i].userNum) {
                    vm.name4Value = jsonArrayData[i].userNam;
                }
            }
        });
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('x-header'),_vm._v(" "),_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/请联系审核员输入指纹编号.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}}),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"content_c"},[_c('div',{staticClass:"content_l"},[_c('img',{attrs:{"id":"IMG","src":_vm.$root.imgPath('img/'+_vm.$root.getImgPath()+'ScanFinger.gif')}})]),_vm._v(" "),_vm._m(0)])]),_vm._v(" "),_c('x-dialog-selectNow',{attrs:{"show":_vm.showMarketer,"childShow":_vm.showPerson,"title":"营销人员","data":_vm.marketerData,"value":_vm.marketerCode,"childData":_vm.name4Value},on:{"cancel":_vm.onManyCancel,"confirm":_vm.onChooseLevel,"insertName":_vm.onInsertName}})],1)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"content_r"},[_c('p',{staticClass:"r_title"},[_vm._v("工作人员审核")]),_vm._v(" "),_c('div',{staticClass:"r_content"},[_c('div',{staticClass:"nice-select",staticStyle:{"z-index":"20060"},attrs:{"name":"nice-select"}},[_c('p',{attrs:{"id":"auditor","type":"text","readonly":""}})]),_vm._v(" "),_c('div',{staticClass:"r_content_div2"},[_c('p',{attrs:{"id":"AuditTips"}})]),_vm._v(" "),_c('br'),_vm._v(" "),_c('div',{staticClass:"r_content_div3"},[_c('p',{attrs:{"id":"ErrorInfo"}})])])])}]
__vue__options__._scopeId = "data-v-5972be0a"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5972be0a", __vue__options__)
  } else {
    hotAPI.reload("data-v-5972be0a", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300,"vuex":"vuex"}],304:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".nice-select[data-v-b97ba96a] {\n        width: 70%;\n    }\n    #inputPopup[data-v-b97ba96a] {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        bottom: 0%;\n        left: 0%;\n        /* z-index: 3000; */\n        background: url('img/首页模糊背景.png') no-repeat;\n    }\n.MediaPic[data-v-b97ba96a]{\n    width: 80%;\n    height: 82%;\n    margin: 2% auto;\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n}  \n.CardMedia[data-v-b97ba96a]{\n    position: relative;\n    text-align: center;\n    width: 40%;\n    height: 85%;\n    margin: 2% auto;\n    background: transparent;\n    border: 1px solid #008b6e;\n    border-radius: 10px;\n    box-shadow: 0px 16px 65px -10px #999;\n  }\n.CardMedia.on[data-v-b97ba96a]{\n  background: rgba(130, 219, 206,0.4);\n }\n.CardMedia img[data-v-b97ba96a]{\n    display: flex;\n    justify-content:center;\n    align-items: center;\n}\n.CardMedia p[data-v-b97ba96a] {\n   font-size: 2.5rem;\n   margin-top:-10px;\n   margin-bottom: 10px;\n  }\n .CardMedia p span[data-v-b97ba96a]{\n      font-size:1.7rem;\n      text-align:left;\n  }\n .x-modal[data-v-b97ba96a]{\n        width:75%;\n        height:75%;\n        margin: 6% auto;\n    }\n .Result_top[data-v-b97ba96a]{\n    height: 12%;\n    text-align: center;\n    position: relative;\n    top:40px;\n}\n .Result_top p[data-v-b97ba96a]{\n        display: inline-block;\n        font-size: 1.8rem;\n    }\n .mybtn[data-v-b97ba96a]{\n        margin-left:45%; \n    }\n.gradient[data-v-b97ba96a]{ \n    background: -webkit-linear-gradient(top, rgb(186,239,246), rgb(142,203,211));\n    background: -moz-linear-gradient(top, rgb(186,239,246), rgb(142,203,211));\n    background: linear-gradient(to bottom,rgb(186,239,246), rgb(142,203,211));  \n    /* background: linear-gradient(#D4F7FD, #95D5DF); 标准的语法  */\n} \n.clsFork[data-v-b97ba96a]{\n    margin-left: 92%;\n    width: 100px;\n    height: 9%;\n}\n.clsFork img[data-v-b97ba96a]{\n    padding: 10px;\n    border-radius: 10px;\n    z-index: 100;\n    margin-left: 36px;\n}\n@media screen and (min-width: 1200px) and  (max-width:1380px) {\n    .CardMedia[data-v-b97ba96a]{\n        height: 78%;\n        width: 45%;\n        margin: 4% auto;\n    }\n    .clsFork img[data-v-b97ba96a]{\n        z-index: 100;\n        padding: 10px;\n        border-radius: 10px;\n        margin-left: 5px;  \n    }\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _vuex = require("vuex");

exports.default = {
    data: function data() {
        return {
            Pic_URL: "",
            recomprc: "",
            prcfeature: "",
            mktevent: "",
            Credithigh: "",
            LocalPic_URL: "./img/二维码-个人掌银.png",
            CodPdbreed: [],
            Page1: true,
            Page2: true,
            marketingText: "",
            marketingText1: "开通电子银行可在线上享受理财、转账、查询、信用卡还款、生活缴费、外汇等服务，<font style ='color:red'>手续费全免</font>，全方面满足您的生活所需，快来开通吧！",
            marketingText2: "开通消息服务可及时享受您的账户动账通知，全天候服务，及时响应，为您提供7×24小时的服务。",

            getKeys: ['D00_D02_marketPersonIdList'],
            setKeys: ['D00_D02_marketPersonNow1', 'D00_D02_marketPersonNow2', 'D00_D02_marketPersonNow3', 'D00_D02_marketPersonNow4'],
            iid: '',
            showName: '',
            name4Value: '',
            name1Val: '',
            name2Val: '',
            name3Val: '',
            name4Val: '',
            marketerName: "",
            marketerCode: "",
            showMarketer: false,
            showPerson: false
        };
    },
    created: function created() {
        this.$root.$on('beforeQuit', onBeforeQuit);
        function onBeforeQuit() {
            $("#PDFViewer").attr('height', "0").attr('width', "0").css('left', "20%");
        }

        this.$root.$on('cancelQuit', onCancelQuit);
        function onCancelQuit() {
            setTimeout(onPDFViewer, 500);
        }

        function onPDFViewer() {
            $("#PDFViewer").attr('height', "60%").attr('width', "60%").css('left', "8%");
        };

        this.$root.$on('sale', onSale);
        function onSale() {
            $("#PDFViewer").attr('height', "0").attr('width', "0").css('left', "20%");
            $("#inputPopup").css('display', 'block');
        }
    },
    beforeDestroy: function beforeDestroy() {
        $("#PDFViewer").attr('height', "0").attr('width', "0").css('left', "20%");
    },
    destroyed: function destroyed() {
        this.$root.$off('beforeQuit');
        this.$root.$off('cancelQuit');
        this.$root.SaleProdSum = "";
        this.$root.saleShow = false;
    },
    mounted: function mounted() {
        var nRet;

        var strOntherButtonName1, strOntherButtonName2;
        var strpdf1, strpdf2;
        var bButton = false;
        var vm = this;

        vm.marketerData = JSON.parse('[{"key":"小鱼","value":"9"},{"key":"小鱼","value":"9"},{"key":"小周","value":"8"},{"key":"郑奎","value":"7"},{"key":"张三","value":"1"},{"key":"李四","value":"2"},{"key":"王二","value":"3"},{"key":"小明","value":"4"},{"key":"李四","value":"2"},{"key":"王二","value":"3"},{"key":"李四","value":"2"},{"key":"王二","value":"3"}]');
        DataTools.get("GD_A01_ManagerUser|GD_A01_FingerShowCampic|GD_MaxTimeForFinger|GD_A01_EsignState|GD_A01_MenuID|GD_UsrNum|GD_A01_BusTip|GD_B01_Trans_SoldierProfession", function (data) {

            var strMenuID = data[4];
            if (strMenuID == "090001" || strMenuID == "090003") {
                strOntherButtonName1 = "申请表";
                strOntherButtonName2 = "申请书";
                strpdf1 = "C:\\csap\\Nisp\\conf\\PDFs\\OpenCard.pdf";
                strpdf2 = "C:\\csap\\Nisp\\conf\\PDFs\\CreditApply.pdf";
                $("#OtherButton").css("display", "inline-block");
                $("#OtherButton").html(strOntherButtonName1);
                nRet = PDFViewer.OpenFile(strpdf1);
            } else if (strMenuID == "090002") {
                nRet = PDFViewer.OpenFile("C:\\csap\\Nisp\\conf\\PDFs\\090002.pdf");
            } else {
                nRet = PDFViewer.OpenFile("C:\\csap\\Nisp\\conf\\PDFs\\OpenCard.pdf");
            }
            PDFViewer.SetViewFit("0");

            setTimeout(onTimeoutshow, 500);

            function onTimeoutshow() {
                $("#PDFViewer").attr('height', "60%").attr('width', "60%").css('left', "8%");
            }
            if (data[3] != 0) {
                $("#reSignName").css("display", "inline-block");
            }
            var jsonArrayData = "";
            if (data[0] != undefined && data[0] != null) {
                jsonArrayData = JSON.parse(data[0]);
                var auditorId = new Array();
                var auditorName = new Array();
                if (jsonArrayData.length == 0) {
                    setVar("GD_ErrReason", "AuditorListEmpty");
                    exitScene("STA_AUDITOREMPTY");
                }
                for (var i = 0; i < jsonArrayData.length; i++) {
                    auditorId.push(jsonArrayData[i].userNum);
                    auditorName.push(jsonArrayData[i].userNum);
                }
                createSelect(auditorId, auditorName, "auditor");
                if (data[5] != "" && data[5] != null) {
                    $("#auditor").html(data[5]);
                    $("#auditor").attr('data-value', data[5]);
                    setVar("GD_UsrNum", data[5]);
                    setVar("GD_A01_NumUrCfg", data[5]);
                } else {
                    $("#auditor").html(auditorName[0]);
                    $("#auditor").attr('data-value', auditorId[0]);
                    setVar("GD_UsrNum", auditorName[0]);
                    setVar("GD_A01_NumUrCfg", auditorName[0]);
                }
            } else {
                setVar("GD_ErrReason", "AuditorListEmpty");
                exitScene("STA_AUDITOREMPTY");
            }
            pageLog("Page GetValue[GD_A01_FingerShowCampic]:" + data[1]);
            $("#IMG").attr("src", data[1]);

            var strMsgTip = "";
            var strMsg = "";
            if (strMenuID == "030001") {
                $("#AuditTips").html("1.请提醒客户注意资金安全，谨防电信诈骗<br>2.请确认客户签名是否准确<br>3.提醒客户实时转账不可撤销");
            } else if (("010002" == strMenuID || "010001" == strMenuID || "060001" == strMenuID) && "1" == data[7]) {
                $("#AuditTips").html("1.请核实该笔业务是否为客户本人办理<br>2.请确认客户签名是否准确<br>3.职业有变更，请核对军人职业信息，并留存相关证明材料");
                $("#AuditTips").css('font-size', '2.0rem');
            } else {
                $("#AuditTips").html("1.请核实该笔业务是否为客户本人办理<br>2.请确认客户签名是否准确");
            }

            if (data[2] == "10") {
                $("#ErrorInfo").html("请选择用户后<br>进行指纹确认");
            } else {
                $("#ErrorInfo").html("请重按指纹<br>剩余次数：" + data[2] + "次");
                $("#ErrorInfo").css("color", "red");
            }

            var nodes = document.querySelectorAll('[name="nice-select"] li');
            for (var i = 0; i < nodes.length; i++) {
                nodes[i].onclick = onNiceSelectLiClick;
            }
            function onNiceSelectLiClick(e) {
                var val = $(this).attr("data-value");
                setVar("GD_UsrNum", val);
                setVar("GD_A01_NumUrCfg", val);

                var index = $(this).index();

                vm.name4Value = jsonArrayData[parseInt(index)].userNam;

                vm.name4Val = val + "|" + vm.name4Value;
                setVar("D00_D02_marketPersonNow4", vm.name4Val);

                e.stopPropagation();
            }

            for (var i = 0; i < jsonArrayData.length; i++) {
                if ($("#auditor").html() == jsonArrayData[i].userNum) {
                    vm.name4Value = jsonArrayData[i].userNam;
                }
            }
        });
        DataTools.get("GD_A01_Trans_Credithigh|GD_A01_TcpCard_Data|GD_A01_Trans_Recomprc|GD_A01_Trans_Recomproccord|GD_A01_Trans_Prcfeature|GD_A01_Trans_Mktevent", function (data) {

            vm.recomprc = data[2];
            vm.prcfeature = data[4];
            vm.mktevent = data[5];
            vm.Credithigh = data[0];
            vm.Pic_URL = GetVluPicSrc(data[3], data[1]) + data[3] + ".jpg";

            function GetVluPicSrc(strProductCord, strJsonData) {
                if ("" != strJsonData && undefined != strJsonData) {
                    var jsonData = JSON.parse(strJsonData);

                    for (var i = 0; i < jsonData.length; i++) {
                        if (strProductCord == jsonData[i].COD_PD) {
                            return jsonData[i].VLU_PIC_1;
                        }
                    }
                }
                return "";
            }
        });
        document.getElementById("reSignName").onclick = onReSignName;
        function onReSignName() {
            exitScene("STA_RESIGN");
        }

        document.getElementById("btn_ZoomOut").onclick = onZoomOut;
        function onZoomOut() {
            PDFViewer.ZoomOut();
        }

        document.getElementById("btn_ZoomIn").onclick = onZoomIn;
        function onZoomIn() {
            PDFViewer.ZoomIn();
        }

        document.getElementById("OtherButton").onclick = onOnther;
        function onOnther() {
            $("#OtherButton").prop('disabled', true);
            if (bButton) {
                $("#OtherButton").html(strOntherButtonName1);
                nRet = PDFViewer.OpenFile(strpdf1);
            } else {
                $("#OtherButton").html(strOntherButtonName2);
                nRet = PDFViewer.OpenFile(strpdf2);
            }
            bButton = !bButton;
            setTimeout(UndisabledButton, 2000);
        }
        function UndisabledButton() {
            $("#OtherButton").prop('disabled', false);
        }

        DataTools.get("GD_MarketingAllNumber|GD_A01_Trans_Tagflg|GD_A01_CodPdbreed|GD_A01_IsLogin", function (data) {
            var strCodPdbreed = data[2].trim();
            if (data[3] == "1") {
                if (parseInt(data[0]) >= 1) {
                    if ("N" == data[1]) {
                        vm.Page1 = true;
                    } else {
                        vm.Page1 = false;
                    }
                    if (strCodPdbreed.length > 0) {
                        vm.Page2 = true;
                    } else {
                        vm.Page2 = false;
                    }
                    if (strCodPdbreed.indexOf("P00013") != -1 && strCodPdbreed.indexOf("P00008") == -1 && strCodPdbreed.indexOf("P00009") == -1) {
                        vm.marketingText = vm.marketingText2;
                    } else {
                        vm.marketingText = vm.marketingText1;
                    }
                    vm.$root.SaleProdSum = data[0];
                    vm.$root.saleShow = true;
                    vm.$root.SaleProdSumShow = true;
                    $(".emailf").css("display", "inline-block");
                    $(".emailf").children().html(vm.$root.SaleProdSum);
                } else {
                    vm.$root.SaleProdSum = "";
                    vm.$root.saleShow = false;
                    vm.$root.SaleProdSumShow = true;
                    $(".emailf").css("display", "none");
                    $(".emailf").children().html();
                }
            }
        });
        this.initPage();
    },

    methods: _extends({
        initPage: function initPage() {
            this.initPool(this.$data);
        },
        OnClose: function OnClose() {
            $("#PDFViewer").attr('height', "60%").attr('width', "60%").css('left', "8%");
            $("#inputPopup").css('display', 'none');
        },
        manyTest: function manyTest() {
            this.showMarketer = true;
            setVar("D00_D02_hasRegisted", 1);
        },
        onManyCancel: function onManyCancel() {
            this.showMarketer = false;
        },
        onInsertName: function onInsertName() {
            var vm = this;
            vm.iid = document.activeElement.id;
            document.getElementById("" + vm.iid + "").value = "";

            vm.showPerson = true;
        },
        onChooseLevel: function onChooseLevel(index, item) {

            this.marketerCode = item.value;
            this.marketerName = item.key;

            document.getElementById("" + this.iid + "").value = "" + item.key;
            document.getElementById("" + this.iid + "").name = "" + item.value;
            var trr = document.getElementById("" + this.iid + "").parentElement.parentElement.parentElement.getElementsByTagName("input");
            trr[3].name = $("#auditor").html();
            for (var i = 0; i < trr.length - 1; i++) {
                if (trr[i].value == "" || trr[i].value == null) {
                    trr[i].value = item.key;
                    trr[i].name = item.value;
                }
            }
            var name1 = trr[0].name + "|" + trr[0].value;
            var name2 = trr[1].name + "|" + trr[1].value;
            var name3 = trr[2].name + "|" + trr[2].value;
            var name4 = trr[3].name + "|" + trr[3].value;
            this.name1Val = name1;
            this.name2Val = name2;
            this.name3Val = name3;
            this.name4Val = name4;
            setVar("D00_D02_marketPersonNow1", name1);
            setVar("D00_D02_marketPersonNow2", name2);
            setVar("D00_D02_marketPersonNow3", name3);
            setVar("D00_D02_marketPersonNow4", name4);

            this.showPerson = false;
            this.showMarketer = true;
        },
        onCancel: function onCancel() {
            this.showMarketer = false;
        }
    }, (0, _vuex.mapActions)(['initPool', 'fetch', 'submit', 'onCancel', 'onContinue', 'exitScene'])),
    watch: {
        pool: function pool(value) {
            if (value.hasOwnProperty("GD_A01_Trans_Mktevent")) {
                this.initData();
            }
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('x-header'),_vm._v(" "),_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/请联系审核员输入指纹编号.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}}),_vm._v(" "),_c('main',{staticClass:"main"},[_vm._m(0),_vm._v(" "),_c('div',{staticStyle:{"display":"none","position":"fixed"},attrs:{"id":"inputPopup"}},[_c('div',{staticClass:"x-modal gradient"},[_c('div',{staticStyle:{"margin-left":"92%","height":"10px"},on:{"click":_vm.OnClose}},[_c('img',{staticStyle:{"padding":"10px","border-radius":"10px"},attrs:{"src":'img/删除.png'}})]),_vm._v(" "),_c('div',{staticClass:"MediaPic"},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.Page1),expression:"Page1"}],staticClass:"CardMedia",attrs:{"id":"MSCard"}},[_c('img',{attrs:{"height":"35%","src":_vm.Pic_URL}}),_vm._v(" "),_c('p',[_vm._v(_vm._s(_vm.recomprc))]),_vm._v(" "),_c('p',[_c('span',[_vm._v(_vm._s(_vm.prcfeature)+"。"+_vm._s(_vm.mktevent)+"。")])]),_vm._v(" "),_c('p',[_vm._v("预授信均值："),_c('font',{staticStyle:{"color":"red"}},[_vm._v(_vm._s(_vm.Credithigh)+"元")])],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.Page2),expression:"Page2"}],staticClass:"CardMedia"},[_c('img',{attrs:{"src":'./img/二维码-个人掌银.png'}}),_vm._v(" "),_c('p',{domProps:{"innerHTML":_vm._s(_vm.marketingText)}})])])])])]),_vm._v(" "),_c('x-dialog-selectNow',{attrs:{"show":_vm.showMarketer,"childShow":_vm.showPerson,"title":"营销人员","data":_vm.marketerData,"value":_vm.marketerCode,"childData":_vm.name4Value},on:{"cancel":_vm.onManyCancel,"confirm":_vm.onChooseLevel,"insertName":_vm.onInsertName}})],1)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"content_c"},[_c('div',{staticClass:"content_l"},[_vm._v("\n                    业务内容确认\n                    "),_c('div',{staticStyle:{"width":"100%","height":"60rem"}}),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",staticStyle:{"margin-right":"3%","margin-left":"3%"},attrs:{"id":"btn_ZoomOut"}},[_vm._v("缩小（-）")]),_vm._v(" "),_c('button',{staticClass:"btn",staticStyle:{"margin-right":"3%","margin-left":"3%"},attrs:{"id":"btn_ZoomIn"}},[_vm._v("放大（+）")]),_vm._v(" "),_c('button',{staticClass:"btn",staticStyle:{"display":"none","margin-right":"3%","margin-left":"3%"},attrs:{"id":"reSignName"}},[_vm._v("重新签名")]),_vm._v(" "),_c('button',{staticClass:"btn",staticStyle:{"display":"none","margin-right":"3%","margin-left":"3%"},attrs:{"id":"OtherButton"}})])]),_vm._v(" "),_c('div',{staticClass:"content_r"},[_c('p',{staticClass:"r_title"},[_vm._v("工作人员审核")]),_vm._v(" "),_c('div',{staticClass:"r_content"},[_c('div',{staticClass:"nice-select",attrs:{"name":"nice-select"}},[_c('p',{attrs:{"id":"auditor","type":"text","readonly":""}})]),_vm._v(" "),_c('div',{staticClass:"r_content_div1"},[_c('img',{attrs:{"id":"IMG","src":""}})]),_vm._v(" "),_c('div',{staticClass:"r_content_div2"},[_c('p',{attrs:{"id":"AuditTips"}})]),_vm._v(" "),_c('br'),_vm._v(" "),_c('div',{staticClass:"r_content_div3"},[_c('p',{attrs:{"id":"ErrorInfo"}})])])])])}]
__vue__options__._scopeId = "data-v-b97ba96a"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-b97ba96a", __vue__options__)
  } else {
    hotAPI.reload("data-v-b97ba96a", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300,"vuex":"vuex"}],305:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".nice-select[data-v-0ec5ca4b] {\r\n  width: 70%;\r\n}\r\n#inputPopup[data-v-0ec5ca4b] {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  bottom: 0%;\r\n  left: 0%;\r\n  /* z-index: 3000; */\r\n  background: url(\"img/首页模糊背景.png\") no-repeat;\r\n}\r\n.MediaPic[data-v-0ec5ca4b] {\r\n  width: 80%;\r\n  height: 82%;\r\n  margin: 2% auto;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n}\r\n.CardMedia[data-v-0ec5ca4b] {\r\n  position: relative;\r\n  text-align: center;\r\n  width: 40%;\r\n  height: 85%;\r\n  margin: 2% auto;\r\n  background: transparent;\r\n  border: 1px solid #008b6e;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 16px 65px -10px #999;\r\n}\r\n.CardMedia.on[data-v-0ec5ca4b] {\r\n  background: rgba(130, 219, 206, 0.4);\r\n}\r\n.CardMedia img[data-v-0ec5ca4b] {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.CardMedia p[data-v-0ec5ca4b] {\r\n  font-size: 2.5rem;\r\n  margin-top: -10px;\r\n  margin-bottom: 10px;\r\n}\r\n.CardMedia p span[data-v-0ec5ca4b] {\r\n  font-size: 1.7rem;\r\n  text-align: left;\r\n}\r\n\r\n.x-modal[data-v-0ec5ca4b]{\r\n  width:75%;\r\n  height:75%;\r\n  margin: 6% auto;\r\n}\r\n.x-modalForD02[data-v-0ec5ca4b] {\r\n  width: 75%;\r\n  height: 75%;\r\n  margin: 6% auto;\r\n}\r\n.Result_top[data-v-0ec5ca4b] {\r\n  height: 12%;\r\n  text-align: center;\r\n  position: relative;\r\n  top: 40px;\r\n}\r\n.Result_top p[data-v-0ec5ca4b] {\r\n  display: inline-block;\r\n  font-size: 1.8rem;\r\n}\r\n.mybtn[data-v-0ec5ca4b] {\r\n  margin-left: 45%;\r\n}\r\n.gradient[data-v-0ec5ca4b] {\r\n  background: -webkit-linear-gradient(\r\n    top,\r\n    rgb(186, 239, 246),\r\n    rgb(142, 203, 211)\r\n  );\r\n  background: -moz-linear-gradient(top, rgb(186, 239, 246), rgb(142, 203, 211));\r\n  background: linear-gradient(\r\n    to bottom,\r\n    rgb(186, 239, 246),\r\n    rgb(142, 203, 211)\r\n  );\r\n  /* background: linear-gradient(#D4F7FD, #95D5DF); 标准的语法  */\r\n}\r\n.clsFork[data-v-0ec5ca4b] {\r\n  margin-left: 92%;\r\n  width: 100px;\r\n  height: 9%;\r\n}\r\n.clsFork img[data-v-0ec5ca4b] {\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  z-index: 100;\r\n  margin-left: 36px;\r\n}\r\n@media screen and (min-width: 1200px) and (max-width: 1380px) {\r\n  .CardMedia[data-v-0ec5ca4b] {\r\n    height: 78%;\r\n    width: 45%;\r\n    margin: 4% auto;\r\n  }\r\n  .clsFork img[data-v-0ec5ca4b] {\r\n    z-index: 100;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    margin-left: 5px;\r\n  }\r\n}\r\n  .x-modalForD02[data-v-0ec5ca4b]{\r\n    width: 30%;\r\n    height: 34%;\r\n    margin: 15% auto;\r\n    margin-left: 72%;\r\n    text-align: center;\r\n    font-size: 10px;\r\n    position: absolute;\r\n    z-index: 300000;\r\n    background-color: #e7faf8;\r\n    border-radius: 0px; \r\n  }\r\n  .many-dialog[data-v-0ec5ca4b] {\r\n    position: absolute;\r\n    z-index: 300000;\r\n    width: 28%;\r\n    height: 40%;\r\n    right: 0%;\r\n    bottom: 0%;\r\n    background-color: #e7faf8;\r\n    color: #666;\r\n    font-size: 20px;\r\n}\r\n\r\n.input_info[data-v-0ec5ca4b] {\r\n    width: 200px;\r\n    height: 30px;\r\n}\r\n#content li[data-v-0ec5ca4b] {\r\n    float: left;\r\n    width: 30%;\r\n    margin: 0px 0px;\r\n}\r\n@media screen and (min-width: 1200px) and (max-width: 1300px) {\r\n\r\n  .x-modalForD02[data-v-0ec5ca4b] {\r\n    margin: 21% auto;\r\n    margin-left: 72%;\r\n  }\r\n}\r\n\r\n\r\n#theMarketId[data-v-0ec5ca4b] {\r\n  /* position: absolute; */\r\n  z-index: 20000;\r\n  bottom: 25%;\r\n  right: 5%;\r\n  width: 120px;\r\n  height: 120px;\r\n  text-align:center;\r\n  font-size: 2rem; \r\n  color: #008b6e;\r\n  background: rgba(255,255,255,0.5);\r\n  -moz-border-radius: 50px;\r\n  -webkit-border-radius: 50px;\r\n  border-radius: 100%;\r\n  vertical-align:middle;\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _vuex = require("vuex");

exports.default = {
  data: function data() {
    return {
      Pic_URL: "",
      recomprc: "",
      prcfeature: "",
      mktevent: "",
      Credithigh: "",
      LocalPic_URL: "./img/二维码-个人掌银.png",
      CodPdbreed: [],
      Page1: true,
      Page2: true,
      marketingText: "",
      marketingText1: "开通电子银行可在线上享受理财、转账、查询、信用卡还款、生活缴费、外汇等服务，<font style ='color:red'>手续费全免</font>，全方面满足您的生活所需，快来开通吧！",
      marketingText2: "开通消息服务可及时享受您的账户动账通知，全天候服务，及时响应，为您提供7×24小时的服务。",

      getKeys: ["D00_D02_marketPersonIdList"],
      setKeys: ["D00_D02_marketPersonNow1", "D00_D02_marketPersonNow2", "D00_D02_marketPersonNow3", "D00_D02_marketPersonNow4"],
      iid: "",
      showName: "",
      name4Value: "",
      name1Val: "",
      name2Val: "",
      name3Val: "",
      name4Val: "",
      nameValArr: [],
      marketerArr: [],
      marketerName: "",
      marketerData: "",
      marketerCode: "",
      marketerNum: 0,
      showMarketer: false,
      showPerson: false,
      PopupShow: false,
      marketPersonIdList: "",
      JsonMarketInfoList: "",
      JsonDataForDefault: "",
      ifHidden: false,
      tempNam: [],
      tempMarket: [],
      ifShowMarket: false
    };
  },
  created: function created() {
    this.$root.$on("beforeQuit", onBeforeQuit);
    function onBeforeQuit() {
      $("#PDFViewer").attr("height", "0").attr("width", "0").css("left", "20%");
    }

    this.$root.$on("cancelQuit", onCancelQuit);
    function onCancelQuit() {
      setTimeout(onPDFViewer, 500);
    }

    function onPDFViewer() {
      $("#PDFViewer").attr("height", "60%").attr("width", "60%").css("left", "8%");
    }

    this.$root.$on("sale", onSale);
    function onSale() {
      $("#PDFViewer").attr("height", "0").attr("width", "0").css("left", "20%");
      $("#inputPopup").css("display", "block");
    }
  },
  beforeDestroy: function beforeDestroy() {
    $("#PDFViewer").attr("height", "0").attr("width", "0").css("left", "20%");
  },
  destroyed: function destroyed() {
    this.$root.$off("beforeQuit");
    this.$root.$off("cancelQuit");
    this.$root.SaleProdSum = "";
    this.$root.saleShow = false;
  },
  mounted: function mounted() {
    var nRet;

    var strOntherButtonName1, strOntherButtonName2;
    var strpdf1, strpdf2;
    var bButton = false;
    var vm = this;

    DataTools.get("D00_D02_marketPersonIdList|D00_D02_hasRegisted|C_A01_SYSPRM_00143", function (data) {

      setVar("D02_ifAuditor", "1");
      if (data[0] != "") {
        vm.JsonMarketInfoList = JSON.parse(data[0]);
        vm.marketerData = JSON.parse(data[0]);
      } else {
        vm.JsonMarketInfoList = "";
        vm.marketerData = "";
      }
      if (data[1] != "1") {
        setVar("D00_D02_hasRegisted", "1");
      }
      if (data[2] == "0") {
        vm.ifShowMarket = true;
      } else {
        vm.ifShowMarket = false;
      }
    });

    DataTools.get("GD_A01_ManagerUser|GD_A01_FingerShowCampic|GD_MaxTimeForFinger|GD_A01_EsignState|GD_A01_MenuID|GD_UsrNum|GD_A01_BusTip|GD_B01_Trans_SoldierProfession", function (data) {
      var strMenuID = data[4];
      if (strMenuID == "090001" || strMenuID == "090003") {
        strOntherButtonName1 = "申请表";
        strOntherButtonName2 = "申请书";
        strpdf1 = "C:\\csap\\Nisp\\conf\\PDFs\\OpenCard.pdf";
        strpdf2 = "C:\\csap\\Nisp\\conf\\PDFs\\CreditApply.pdf";
        $("#OtherButton").css("display", "inline-block");
        $("#OtherButton").html(strOntherButtonName1);
        nRet = PDFViewer.OpenFile(strpdf1);
      } else if (strMenuID == "090002") {
        nRet = PDFViewer.OpenFile("C:\\csap\\Nisp\\conf\\PDFs\\090002.pdf");
      } else {
        nRet = PDFViewer.OpenFile("C:\\csap\\Nisp\\conf\\PDFs\\OpenCard.pdf");
      }
      PDFViewer.SetViewFit("0");

      setTimeout(onTimeoutshow, 500);

      function onTimeoutshow() {
        $("#PDFViewer").attr("height", "60%").attr("width", "60%").css("left", "8%");
      }
      if (data[3] != 0) {
        $("#reSignName").css("display", "inline-block");
      }
      var jsonArrayData = "";
      if (data[0] != undefined && data[0] != null) {
        jsonArrayData = JSON.parse(data[0]);
        vm.JsonDataForDefault = JSON.parse(data[0]);
        var auditorId = new Array();
        var auditorName = new Array();
        if (jsonArrayData.length == 0) {
          setVar("GD_ErrReason", "AuditorListEmpty");
          exitScene("STA_AUDITOREMPTY");
        }
        for (var i = 0; i < jsonArrayData.length; i++) {
          auditorId.push(jsonArrayData[i].userNum);
          auditorName.push(jsonArrayData[i].userNum);
        }
        createSelect(auditorId, auditorName, "auditor");

        for (var i = 0; i < jsonArrayData.length; i++) {
          if ($("#auditor").text() == "") {
            vm.name4Value = jsonArrayData[0].userNam;
            break;
          }
          if (jsonArrayData[i].userNum == $("#auditor").text()) {
            vm.name4Value = jsonArrayData[i].userNam;
            break;
          }
        }
        vm.nameValArr[0] = vm.name4Value;
        vm.tempNam[0] = vm.nameValArr[0];

        if (data[5] != "" && data[5] != null) {
          $("#auditor").html(data[5]);
          $("#auditor").attr("data-value", data[5]);
          setVar("GD_UsrNum", data[5]);
          setVar("GD_A01_NumUrCfg", data[5]);
        } else {
          $("#auditor").html(auditorName[0]);
          $("#auditor").attr("data-value", auditorId[0]);
          setVar("GD_UsrNum", auditorName[0]);
          setVar("GD_A01_NumUrCfg", auditorName[0]);
        }
      } else {
        setVar("GD_ErrReason", "AuditorListEmpty");
        exitScene("STA_AUDITOREMPTY");
      }
      pageLog("Page GetValue[GD_A01_FingerShowCampic]:" + data[1]);
      $("#IMG").attr("src", data[1]);

      var strMsgTip = "";
      var strMsg = "";
      if (strMenuID == "030001") {
        $("#AuditTips").html("1.请提醒客户注意资金安全，谨防电信诈骗<br>2.请确认客户签名是否准确<br>3.提醒客户实时转账不可撤销");
      } else if (("010002" == strMenuID || "010001" == strMenuID || "060001" == strMenuID) && "1" == data[7]) {
        $("#AuditTips").html("1.请核实该笔业务是否为客户本人办理<br>2.请确认客户签名是否准确<br>3.职业有变更，请核对军人职业信息，并留存相关证明材料");
        $("#AuditTips").css("font-size", "2.0rem");
      } else {
        $("#AuditTips").html("1.请核实该笔业务是否为客户本人办理<br>2.请确认客户签名是否准确");
      }

      if (data[2] == "10") {
        $("#ErrorInfo").html("请选择用户后<br>进行指纹确认");
      } else {
        $("#ErrorInfo").html("请重按指纹<br>剩余次数：" + data[2] + "次");
        $("#ErrorInfo").css("color", "red");
      }

      var nodes = document.querySelectorAll('[name="nice-select"] li');
      for (var i = 0; i < nodes.length; i++) {
        nodes[i].onclick = onNiceSelectLiClick;
      }
      function onNiceSelectLiClick(e) {
        var val = $(this).attr("data-value");
        setVar("GD_UsrNum", val);
        setVar("GD_A01_NumUrCfg", val);

        var index = $(this).index();

        vm.name4Value = jsonArrayData[parseInt(index)].userNam;

        vm.nameValArr[0] = vm.name4Value;
        vm.tempNam[0] = vm.nameValArr[0];

        e.stopPropagation();
      }
    });
    DataTools.get("GD_A01_Trans_Credithigh|GD_A01_TcpCard_Data|GD_A01_Trans_Recomprc|GD_A01_Trans_Recomproccord|GD_A01_Trans_Prcfeature|GD_A01_Trans_Mktevent", function (data) {
      vm.recomprc = data[2];
      vm.prcfeature = data[4];
      vm.mktevent = data[5];
      vm.Credithigh = data[0];
      vm.Pic_URL = GetVluPicSrc(data[3], data[1]) + data[3] + ".jpg";

      function GetVluPicSrc(strProductCord, strJsonData) {
        if ("" != strJsonData && undefined != strJsonData) {
          var jsonData = JSON.parse(strJsonData);

          for (var i = 0; i < jsonData.length; i++) {
            if (strProductCord == jsonData[i].COD_PD) {
              return jsonData[i].VLU_PIC_1;
            }
          }
        }
        return "";
      }
    });
    document.getElementById("reSignName").onclick = onReSignName;
    function onReSignName() {
      exitScene("STA_RESIGN");
    }

    document.getElementById("btn_ZoomOut").onclick = onZoomOut;
    function onZoomOut() {
      PDFViewer.ZoomOut();
    }

    document.getElementById("btn_ZoomIn").onclick = onZoomIn;
    function onZoomIn() {
      PDFViewer.ZoomIn();
    }

    document.getElementById("OtherButton").onclick = onOnther;
    function onOnther() {
      $("#OtherButton").prop("disabled", true);
      if (bButton) {
        $("#OtherButton").html(strOntherButtonName1);
        nRet = PDFViewer.OpenFile(strpdf1);
      } else {
        $("#OtherButton").html(strOntherButtonName2);
        nRet = PDFViewer.OpenFile(strpdf2);
      }
      bButton = !bButton;
      setTimeout(UndisabledButton, 2000);
    }
    function UndisabledButton() {
      $("#OtherButton").prop("disabled", false);
    }

    DataTools.get("GD_MarketingAllNumber|GD_A01_Trans_Tagflg|GD_A01_CodPdbreed|GD_A01_IsLogin", function (data) {

      var strCodPdbreed = data[2].trim();
      if (data[3] == "1") {
        if (parseInt(data[0]) >= 1) {
          if ("N" == data[1]) {
            vm.Page1 = true;
          } else {
            vm.Page1 = false;
          }
          if (strCodPdbreed.length > 0) {
            vm.Page2 = true;
          } else {
            vm.Page2 = false;
          }
          if (strCodPdbreed.indexOf("P00013") != -1 && strCodPdbreed.indexOf("P00008") == -1 && strCodPdbreed.indexOf("P00009") == -1) {
            vm.marketingText = vm.marketingText2;
          } else {
            vm.marketingText = vm.marketingText1;
          }
          vm.$root.SaleProdSum = data[0];
          vm.$root.saleShow = true;
          vm.$root.SaleProdSumShow = true;
          $(".emailf").css("display", "inline-block");
          $(".emailf").children().html(vm.$root.SaleProdSum);
        } else {
          vm.$root.SaleProdSum = "";
          vm.$root.saleShow = false;
          vm.$root.SaleProdSumShow = true;
          $(".emailf").css("display", "none");
          $(".emailf").children().html();
        }
      }
    });
    this.initPage();
  },

  methods: _extends({
    initPage: function initPage() {
      this.initPool(this.$data);
    },
    OnClose: function OnClose() {
      $("#PDFViewer").attr("height", "60%").attr("width", "60%").css("left", "8%");
      $("#inputPopup").css("display", "none");
    },
    manyTest: function manyTest() {
      document.getElementById("nam02").disabled = true;
      document.getElementById("nam03").disabled = true;
      document.getElementById("nam04").disabled = true;

      this.marketPersonIdList = "";

      var num = this.JsonMarketInfoList.length;
      for (var i = 0; i < num; i++) {
        this.marketPersonIdList += this.JsonMarketInfoList[i].key;
      }

      this.PopupShow = true;
      this.showMarketer = true;
      this.ifHidden = true;
    },
    enterNam: function enterNam(val) {
      this.marketerNum = val;
      this.ifHidden = true;
      this.PopupShow = true;
      this.showMarketer = true;
    },
    onBtnSubmit: function onBtnSubmit() {
      this.PopupShow = false;
      this.showMarketer = false;
      for (var i = 0; i < 4; i++) {
        if (this.marketerArr[i] == undefined || this.marketerArr[i] == "undefined") {
          this.marketerArr[i] = "";
        }
        this.tempNam[i] = this.nameValArr[i];
        this.tempMarket[i] = this.marketerArr[i];
      }
      if (this.name4Value != this.marketerArr[0]) {
        setVar("D02_ifAuditor", "0");
      }
      setVar("D00_D02_marketPersonNow1", this.marketerArr[0]);
      setVar("D00_D02_marketPersonNow2", this.marketerArr[1]);
      setVar("D00_D02_marketPersonNow3", this.marketerArr[2]);
      setVar("D00_D02_marketPersonNow4", this.marketerArr[3]);
    },
    onBtnCancel: function onBtnCancel() {
      for (var i = 0; i < 4; i++) {
        if (this.nameValArr[i] != undefined && this.tempNam[i] != undefined) {
          this.nameValArr[i] = this.tempNam[i];
        }
        if (this.marketerArr[i] != undefined && this.tempMarket[i] != undefined) {
          this.marketerArr[i] = this.tempMarket[i];
        }
      }
      this.PopupShow = false;
      this.showMarketer = false;
    },
    onBtnClear: function onBtnClear() {
      for (var i = 0; i < 4; i++) {
        this.tempNam[i] = "";
        this.tempMarket[i] = "";
        if (this.nameValArr[i] != undefined && this.nameValArr[i] != "undefined") {
          this.nameValArr[i] = "";

          this.PopupShow = false;
          this.showMarketer = false;
        }
      }
      this.PopupShow = true;
      this.showMarketer = true;
    },
    HidBD: function HidBD() {
      if (this.ifHidden == true) {
        this.ifHidden = false;
        this.onBtnCancel();
      }
    },
    onManyCancel: function onManyCancel() {
      this.showMarketer = false;
    },
    onInsertName: function onInsertName() {
      var vm = this;
      vm.iid = document.activeElement.id;
      document.getElementById("" + vm.iid + "").value = "";

      vm.showPerson = true;
    },
    onChooseLevel: function onChooseLevel(index, item) {
      this.marketerCode = item.value;
      this.marketerName = item.key;

      this.nameValArr[this.marketerNum] = item.key;
      this.marketerArr[this.marketerNum] = item.value + "|" + item.key;
      this.ifHidden = true;


      this.showPerson = false;
      this.showMarketer = true;
    },
    onCancel: function onCancel() {
      this.showMarketer = false;
      this.PopupShow = false;
    }
  }, (0, _vuex.mapActions)(["initPool", "fetch", "submit", "onCancel", "onContinue", "exitScene"])),
  watch: {
    pool: function pool(value) {
      if (value.hasOwnProperty("GD_A01_Trans_Mktevent")) {
        this.initData();
      }
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('x-header'),_vm._v(" "),_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/请联系审核员输入指纹编号.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}}),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"content_c"},[_c('div',{staticClass:"content_l",on:{"click":function($event){_vm.HidBD()}}},[_vm._v("\n                    业务内容确认\n                    "),_c('div',{staticStyle:{"width":"100%","height":"60rem"}}),_vm._v(" "),_vm._m(0)]),_vm._v(" "),_c('div',{staticClass:"content_r",on:{"click":function($event){_vm.HidBD()}}},[_c('p',{staticClass:"r_title"},[_vm._v("工作人员审核")]),_vm._v(" "),_vm._m(1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.ifShowMarket),expression:"ifShowMarket"}],attrs:{"id":"theMarketId"},on:{"click":_vm.manyTest}},[_vm._v("业绩"),_c('br'),_vm._v("登记"),_c('br'),_vm._v("维护")])]),_vm._v(" "),_c('div',{staticStyle:{"display":"none","position":"fixed"},attrs:{"id":"inputPopup"}},[_c('div',{staticClass:"x-modal gradient"},[_c('div',{staticStyle:{"margin-left":"92%","height":"10px"},on:{"click":_vm.OnClose}},[_c('img',{staticStyle:{"padding":"10px","border-radius":"10px"},attrs:{"src":'img/删除.png'}})]),_vm._v(" "),_c('div',{staticClass:"MediaPic"},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.Page1),expression:"Page1"}],staticClass:"CardMedia",attrs:{"id":"MSCard"}},[_c('img',{attrs:{"height":"35%","src":_vm.Pic_URL}}),_vm._v(" "),_c('p',[_vm._v(_vm._s(_vm.recomprc))]),_vm._v(" "),_c('p',[_c('span',[_vm._v(_vm._s(_vm.prcfeature)+"。"+_vm._s(_vm.mktevent)+"。")])]),_vm._v(" "),_c('p',[_vm._v("预授信均值："),_c('font',{staticStyle:{"color":"red"}},[_vm._v(_vm._s(_vm.Credithigh)+"元")])],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.Page2),expression:"Page2"}],staticClass:"CardMedia"},[_c('img',{attrs:{"src":'./img/二维码-个人掌银.png'}}),_vm._v(" "),_c('p',{domProps:{"innerHTML":_vm._s(_vm.marketingText)}})])])])])]),_vm._v(" "),_c('x-dialog-selectForD02',{attrs:{"show":_vm.showMarketer,"title":"营销人员","data":_vm.marketerData,"value":_vm.marketerCode},on:{"cancel":_vm.onManyCancel,"confirm":_vm.onChooseLevel}}),_vm._v(" "),_c('transition',{attrs:{"name":"fade","mode":"out-in"}},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.PopupShow),expression:"PopupShow"}],staticClass:"inputPopup"},[_c('div',{staticClass:"x-modalForD02"},[_c('br'),_vm._v(" "),_c('div',[_vm._v("主营销人:\n                  "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.nameValArr[0]),expression:"nameValArr[0]"}],staticClass:"input_info",attrs:{"type":"text","id":"nam01"},domProps:{"value":(_vm.nameValArr[0])},on:{"click":function($event){_vm.enterNam('0')},"input":function($event){if($event.target.composing){ return; }var $$exp = _vm.nameValArr, $$idx = 0;if (!Array.isArray($$exp)){_vm.nameValArr[0]=$event.target.value}else{$$exp.splice($$idx, 1, $event.target.value)}}}})]),_c('br'),_vm._v(" "),_c('div',[_vm._v("次营销人:\n                  "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.nameValArr[1]),expression:"nameValArr[1]"}],staticClass:"input_info",attrs:{"type":"text","id":"nam02"},domProps:{"value":(_vm.nameValArr[1])},on:{"click":function($event){_vm.enterNam('1')},"input":function($event){if($event.target.composing){ return; }var $$exp = _vm.nameValArr, $$idx = 1;if (!Array.isArray($$exp)){_vm.nameValArr[1]=$event.target.value}else{$$exp.splice($$idx, 1, $event.target.value)}}}})]),_c('br'),_vm._v(" "),_c('div',[_vm._v("转 介 人 :\n                  "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.nameValArr[2]),expression:"nameValArr[2]"}],staticClass:"input_info",attrs:{"type":"text","id":"nam03"},domProps:{"value":(_vm.nameValArr[2])},on:{"click":function($event){_vm.enterNam('2')},"input":function($event){if($event.target.composing){ return; }var $$exp = _vm.nameValArr, $$idx = 2;if (!Array.isArray($$exp)){_vm.nameValArr[2]=$event.target.value}else{$$exp.splice($$idx, 1, $event.target.value)}}}})]),_c('br'),_vm._v(" "),_c('div',[_vm._v("操 作 人 :\n                  "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.nameValArr[3]),expression:"nameValArr[3]"}],staticClass:"input_info",attrs:{"type":"text","id":"nam04"},domProps:{"value":(_vm.nameValArr[3])},on:{"click":function($event){_vm.enterNam('3')},"input":function($event){if($event.target.composing){ return; }var $$exp = _vm.nameValArr, $$idx = 3;if (!Array.isArray($$exp)){_vm.nameValArr[3]=$event.target.value}else{$$exp.splice($$idx, 1, $event.target.value)}}}})]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",staticStyle:{"padding":"3px 15px","font-size":"2.0rem"},on:{"click":_vm.onBtnCancel}},[_vm._v("取 消")]),_vm._v(" "),_c('button',{staticClass:"btn",staticStyle:{"padding":"3px 15px","font-size":"2.0rem"},on:{"click":_vm.onBtnClear}},[_vm._v("清 空")]),_vm._v(" "),_c('button',{staticClass:"btn",staticStyle:{"padding":"3px 15px","font-size":"2.0rem"},attrs:{"disabled":_vm.disabledSubmit},on:{"click":_vm.onBtnSubmit}},[_vm._v("确 定")])])])])])],1)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",staticStyle:{"margin-right":"3%","margin-left":"3%"},attrs:{"id":"btn_ZoomOut"}},[_vm._v("缩小（-）")]),_vm._v(" "),_c('button',{staticClass:"btn",staticStyle:{"margin-right":"3%","margin-left":"3%"},attrs:{"id":"btn_ZoomIn"}},[_vm._v("放大（+）")]),_vm._v(" "),_c('button',{staticClass:"btn",staticStyle:{"display":"none","margin-right":"3%","margin-left":"3%"},attrs:{"id":"reSignName"}},[_vm._v("重新签名")]),_vm._v(" "),_c('button',{staticClass:"btn",staticStyle:{"display":"none","margin-right":"3%","margin-left":"3%"},attrs:{"id":"OtherButton"}})])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"r_content"},[_c('div',{staticClass:"nice-select",attrs:{"name":"nice-select","id":"nice-select"}},[_c('p',{attrs:{"id":"auditor","type":"text","readonly":""}})]),_vm._v(" "),_c('div',{staticClass:"r_content_div1"},[_c('img',{attrs:{"id":"IMG","src":""}})]),_vm._v(" "),_c('div',{staticClass:"r_content_div2"},[_c('p',{attrs:{"id":"AuditTips"}})]),_vm._v(" "),_c('br'),_vm._v(" "),_c('div',{staticClass:"r_content_div3"},[_c('p',{attrs:{"id":"ErrorInfo"}})])])}]
__vue__options__._scopeId = "data-v-0ec5ca4b"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0ec5ca4b", __vue__options__)
  } else {
    hotAPI.reload("data-v-0ec5ca4b", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300,"vuex":"vuex"}],306:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"time",attrs:{"id":"CountDown"}})])]),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"Main1"}},[_vm._v("数据库维护中，请稍候...")])])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-33c7c344", __vue__options__)
  } else {
    hotAPI.reload("data-v-33c7c344", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],307:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"time",attrs:{"id":"CountDown"}})])]),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"Main1"}},[_vm._v("菜单下载中，请稍候...")])])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6c47e61c", __vue__options__)
  } else {
    hotAPI.reload("data-v-6c47e61c", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],308:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"time",attrs:{"id":"CountDown"}})])]),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"Main1"}},[_vm._v("业务参数下载中，请稍候...")])])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-379652d9", __vue__options__)
  } else {
    hotAPI.reload("data-v-379652d9", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],309:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"time",attrs:{"id":"CountDown"}})])]),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"Main1"}},[_vm._v("UFile文件批量下载中，请稍候...")])])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-29bdf356", __vue__options__)
  } else {
    hotAPI.reload("data-v-29bdf356", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],310:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"time",attrs:{"id":"CountDown"}})])]),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"Main1"}},[_vm._v("工作密钥下载中，请稍候...")])])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1dcd52cb", __vue__options__)
  } else {
    hotAPI.reload("data-v-1dcd52cb", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],311:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"time",attrs:{"id":"CountDown"}})])]),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"Main1"}},[_vm._v("业务参数初始化中，请稍候...")])])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-3591b321", __vue__options__)
  } else {
    hotAPI.reload("data-v-3591b321", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],312:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"time",attrs:{"id":"CountDown"}})])]),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"Main1"}},[_vm._v("敏感信息维护中，请稍候...")])])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-c120e6f6", __vue__options__)
  } else {
    hotAPI.reload("data-v-c120e6f6", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],313:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert("img[data-v-259dbb40]{\r\n    display: block;\r\n    margin: auto;\r\n    margin-top: 8%;\r\n    width: 20%;\r\n}\r\n.center_title[data-v-259dbb40]{\r\n    margin-top: 0px;\r\n}")
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._m(0),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('img',{attrs:{"src":_vm.$root.imgPath('img/loading.gif')}}),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"Main1"}},[_vm._v("系统正在处理，请稍候...")])])])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"time",attrs:{"id":"CountDown"}})])])}]
__vue__options__._scopeId = "data-v-259dbb40"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-259dbb40", __vue__options__)
  } else {
    hotAPI.reload("data-v-259dbb40", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],314:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("基金定投签约产品详情")]),_vm._v(" "),_c('table',{staticClass:"tabinfo_form"},[_c('tr',[_c('td',[_vm._v("基金代码："),_c('span',{attrs:{"id":"fundNo"}},[_vm._v("1234")])]),_vm._v(" "),_c('td',[_vm._v("基金类型："),_c('span',{attrs:{"id":"fundType"}},[_vm._v("货币")])])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("基金名称："),_c('span',{attrs:{"id":"fundName"}},[_vm._v("长安货币D类份额")])]),_vm._v(" "),_c('td',[_vm._v("投资管理人："),_c('span',{attrs:{"id":"manager"}},[_vm._v("长安基金管理有限")])])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("产品状态："),_c('span',{attrs:{"id":"proStatus"}},[_vm._v("正常开放")])]),_vm._v(" "),_c('td',[_vm._v("净值/面值："),_c('span',{attrs:{"id":"faceValue"}},[_vm._v("1.000")])])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("基金风险等级："),_c('span',{attrs:{"id":"riskType"}},[_vm._v("低")])]),_vm._v(" "),_c('td',[_vm._v("分红方式："),_c('span',{attrs:{"id":"diviWay"}},[_vm._v("红利再投资")])])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("申购起点金额："),_c('span',{attrs:{"id":"originMon"}},[_vm._v("5000000")])]),_vm._v(" "),_c('td',[_vm._v("申购递增金额："),_c('span',{attrs:{"id":"increMon"}},[_vm._v("0.01")])])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("普通定投起点金额："),_c('span',{attrs:{"id":"originMon"}},[_vm._v("300.00")])]),_vm._v(" "),_c('td',[_vm._v("定投递增金额："),_c('span',{attrs:{"id":"increMon"}},[_vm._v("100.00")])])])]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"btn_back"},on:{"click":_vm.onBack}},[_vm._v("上 一 步")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_invest"},on:{"click":_vm.onNormalInvest}},[_vm._v("普通定投")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_investAuto"},on:{"click":_vm.onAutoInvest}},[_vm._v("智能定投")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0f9d31a8", __vue__options__)
  } else {
    hotAPI.reload("data-v-0f9d31a8", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],315:[function(require,module,exports){
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        $(function () {
            new DatePicker().init({ id: 'start' });
            new DatePicker().init({ id: 'end' });
        });
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('ul',{staticClass:"ul_Result"},[_c('li',[_vm._v("开始日期："),_c('span',[_c('input',{staticClass:"input_info",attrs:{"type":"text","id":"start"}})])]),_vm._v(" "),_c('li',[_vm._v("结束日期："),_c('span',[_c('input',{staticClass:"input_info",attrs:{"type":"text","id":"end"}})])])]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"btn_back"}},[_vm._v("否")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_sure"}},[_vm._v("是")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-c0eacd4c", __vue__options__)
  } else {
    hotAPI.reload("data-v-c0eacd4c", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],316:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	mounted: function mounted() {
		var a = [1, 2, 3, 4, 5, 6, 7];
		var b = ["11111", "22222", "33333", "44444", "5555", "33333333", "3444444"];
		createSelect(a, b, "cq");
		scrollBar("ul1");
		newScrollBar("cq");
	}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("输入转账信息")]),_vm._v(" "),_c('div',{staticClass:"info_conf"},[_c('table',{staticClass:"infor_table"},[_c('tr',[_c('td',{staticClass:"infor_l"},[_vm._v("转存类型：")]),_vm._v(" "),_c('td',{staticClass:"infor_r"},[_c('div',{staticClass:"nice-select",attrs:{"name":"nice-select"}},[_c('p',{attrs:{"id":"cqType","type":"text","readonly":"","data-value":"1"}},[_vm._v("约定转存")]),_vm._v(" "),_c('ul',{attrs:{"id":"ul1"}},[_c('li',{attrs:{"data-value":"1"}},[_vm._v("三个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"2"}},[_vm._v("六个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"3"}},[_vm._v("九个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"4"}},[_vm._v("一年")]),_vm._v(" "),_c('li',{attrs:{"data-value":"1"}},[_vm._v("三个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"2"}},[_vm._v("六个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"3"}},[_vm._v("九个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"4"}},[_vm._v("一年")]),_vm._v(" "),_c('li',{attrs:{"data-value":"1"}},[_vm._v("三个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"2"}},[_vm._v("六个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"3"}},[_vm._v("九个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"4"}},[_vm._v("一年")]),_vm._v(" "),_c('li',{attrs:{"data-value":"1"}},[_vm._v("三个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"2"}},[_vm._v("六个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"3"}},[_vm._v("九个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"4"}},[_vm._v("一年")])])])])]),_vm._v(" "),_c('tr',[_c('td',{staticClass:"infor_l"},[_vm._v("存期：")]),_vm._v(" "),_c('td',{staticClass:"infor_r"},[_c('div',{staticClass:"nice-select",attrs:{"name":"nice-select"}},[_c('p',{attrs:{"id":"cq","type":"text","readonly":""}})])])])]),_vm._v(" "),_c('p',{staticClass:"notice"},[_vm._v("温馨提示：您的客户信息不完善，请携带有效证件到网点办理！")])]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"btn_back"}},[_vm._v("上一步")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_sure"}},[_vm._v("确认")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-90839480", __vue__options__)
  } else {
    hotAPI.reload("data-v-90839480", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],317:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	mounted: function mounted() {
		initializeSelect();
		setTimeout(scrollBar("ul1"), 500);
		setTimeout(scrollBar("ul2"), 500);
	}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("输入转账信息")]),_vm._v(" "),_c('div',{staticClass:"info_conf"},[_c('table',{staticClass:"infor_table"},[_c('tr',[_c('td',{staticClass:"infor_l"},[_vm._v("转存类型：")]),_vm._v(" "),_c('td',{staticClass:"infor_r"},[_c('div',{staticClass:"nice-select",attrs:{"name":"nice-select"}},[_c('p',{attrs:{"id":"cqType","type":"text","readonly":"","data-value":"1"}},[_vm._v("约定转存")]),_vm._v(" "),_c('ul',{attrs:{"id":"ul1"}},[_c('li',{attrs:{"data-value":"1"}},[_vm._v("约定转存")]),_vm._v(" "),_c('li',{attrs:{"data-value":"2"}},[_vm._v("不转存")]),_vm._v(" "),_c('li',{attrs:{"data-value":"1"}},[_vm._v("三个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"2"}},[_vm._v("六个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"3"}},[_vm._v("九个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"4"}},[_vm._v("一年")]),_vm._v(" "),_c('li',{attrs:{"data-value":"1"}},[_vm._v("三个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"2"}},[_vm._v("六个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"3"}},[_vm._v("九个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"4"}},[_vm._v("一年")]),_vm._v(" "),_c('li',{attrs:{"data-value":"1"}},[_vm._v("三个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"2"}},[_vm._v("六个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"3"}},[_vm._v("九个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"4"}},[_vm._v("一年")])])])])]),_vm._v(" "),_c('tr',[_c('td',{staticClass:"infor_l"},[_vm._v("存期：")]),_vm._v(" "),_c('td',{staticClass:"infor_r"},[_c('div',{staticClass:"nice-select",attrs:{"name":"nice-select"}},[_c('p',{attrs:{"id":"cq","type":"text","readonly":"","data-value":"1"}},[_vm._v("三个月")]),_vm._v(" "),_c('ul',{attrs:{"id":"ul2"}},[_c('li',{attrs:{"data-value":"1"}},[_vm._v("三个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"2"}},[_vm._v("六个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"3"}},[_vm._v("九个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"4"}},[_vm._v("一年")]),_vm._v(" "),_c('li',{attrs:{"data-value":"1"}},[_vm._v("三个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"2"}},[_vm._v("六个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"3"}},[_vm._v("九个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"4"}},[_vm._v("一年")]),_vm._v(" "),_c('li',{attrs:{"data-value":"1"}},[_vm._v("三个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"2"}},[_vm._v("六个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"3"}},[_vm._v("九个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"4"}},[_vm._v("一年")]),_vm._v(" "),_c('li',{attrs:{"data-value":"1"}},[_vm._v("三个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"2"}},[_vm._v("六个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"3"}},[_vm._v("九个月")]),_vm._v(" "),_c('li',{attrs:{"data-value":"4"}},[_vm._v("一年")])])])])])])]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"btn_back"}},[_vm._v("上一步")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_sure"}},[_vm._v("确认")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-b8575ab0", __vue__options__)
  } else {
    hotAPI.reload("data-v-b8575ab0", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],318:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        document.getElementById("btn_back").onclick = onBack;
        function onBack() {
            onCancel();
        }
        document.getElementById("btn_sure").onclick = onSure;
        function onSure() {
            onContinue();
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('x-header'),_vm._v(" "),_vm._m(0)],1)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"ShowReason"}},[_vm._v("密码错误")]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn disp_none",attrs:{"id":"btn_back"}},[_vm._v("取   卡")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn disp_none",attrs:{"id":"btn_sure"}},[_vm._v("继   续")])])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-e7f8d922", __vue__options__)
  } else {
    hotAPI.reload("data-v-e7f8d922", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],319:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	mounted: function mounted() {
		document.getElementById("btn_back1").onclick = onBack;
		function onBack() {
			exitScene("STA_CANCEL");
		}

		document.getElementById("btn_sure1").onclick = onSure;
		function onSure() {
			exitScene("STA_CONTINUE");
		}
	}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticStyle:{"text-align":"center","font-size":"2.7rem","top":"30%","position":"relative"}},[_vm._v("交易结束，是否继续办理业务？")]),_vm._v(" "),_c('div',{staticClass:"modal_btnbox"},[_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_back1"}},[_vm._v("结束办理")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_sure1"}},[_vm._v("继续办理")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-8c0079fc", __vue__options__)
  } else {
    hotAPI.reload("data-v-8c0079fc", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],320:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        document.getElementById("btnExit").onclick = onExit;
        function onExit() {
            exitScene("STA_ADMIN");
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"btn_exit",attrs:{"id":"btnExit"}}),_vm._v(" "),_c('div',{staticClass:"time",attrs:{"id":"CountDown"}})])]),_vm._v(" "),_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("本机暂停服务")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"ShowReason"}},[_vm._v("本机暂停服务")])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-c02eb3a2", __vue__options__)
  } else {
    hotAPI.reload("data-v-c02eb3a2", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],321:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("交易成功，是否打印凭条？")]),_vm._v(" "),_c('ul',{staticClass:"ul_Result"},[_c('li',[_vm._v("受理账户："),_c('span',{attrs:{"id":""}},[_vm._v("{{}}")])]),_vm._v(" "),_c('li',[_vm._v("客户姓名："),_c('span',{attrs:{"id":""}},[_vm._v("{{}}")])]),_vm._v(" "),_c('li',[_vm._v("交易终端："),_c('span',{attrs:{"id":""}},[_vm._v("{{}}")])]),_vm._v(" "),_c('li',[_vm._v("交易类型："),_c('span',{attrs:{"id":""}},[_vm._v("{{}}")])]),_vm._v(" "),_c('li',[_vm._v("基金名称："),_c('span',{attrs:{"id":""}},[_vm._v("{{}}")])]),_vm._v(" "),_c('li',[_vm._v("基金代码："),_c('span',{attrs:{"id":""}},[_vm._v("{{}}")])]),_vm._v(" "),_c('li',[_vm._v("购买金额："),_c('span',{attrs:{"id":""}},[_vm._v("{{}}")])]),_vm._v(" "),_c('li',[_vm._v("客户风险等级："),_c('span',{attrs:{"id":""}},[_vm._v("{{}}")])]),_vm._v(" "),_c('li',[_vm._v("交易时间："),_c('span',{attrs:{"id":""}},[_vm._v("{{}}")])]),_vm._v(" "),_c('li',[_vm._v("交易结果："),_c('span',{attrs:{"id":""}},[_vm._v("{{}}")])])]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"btn_back"}},[_vm._v("否")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_sure"}},[_vm._v("是")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-06b1c26a", __vue__options__)
  } else {
    hotAPI.reload("data-v-06b1c26a", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],322:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"header header_bg"},[_c('div',{staticClass:"header_rightarea"},[_c('span',{staticClass:"H_adm_info"},[_c('img',{attrs:{"src":"img/adm/name.png"}}),_vm._v(" "),_c('span',{attrs:{"id":"AdminName"}},[_vm._v(_vm._s(_vm.$root.AdminName))])]),_vm._v(" "),_vm._m(0)])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:"H_adm_info",attrs:{"id":"ExitBtn"}},[_c('img',{attrs:{"src":"img/adm/quit.png"}}),_vm._v("\r\n            安全退出\r\n        ")])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5e7ee79a", __vue__options__)
  } else {
    hotAPI.reload("data-v-5e7ee79a", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],323:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"header header_bg"},[_c('div',{staticClass:"header_rightarea"},[_c('span',{staticClass:"H_adm_info"},[_c('img',{attrs:{"src":"img/adm/name.png"}}),_vm._v(" "),_c('span',{attrs:{"id":"AdminName"}},[_vm._v(_vm._s(_vm.$root.AdminName))])]),_vm._v(" "),_vm._m(0)])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:"H_adm_info",attrs:{"id":"ExitBtn"}},[_c('img',{attrs:{"src":"img/adm/quit.png"}}),_vm._v("\r\n            安全退出\r\n        ")])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-9c8b6636", __vue__options__)
  } else {
    hotAPI.reload("data-v-9c8b6636", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],324:[function(require,module,exports){
'use strict';

/**
 * Vue-awesome-swiper
 * @author Surmon.me
 */

var Swiper = require('./swiper');
var SwiperComponent = require('./src/swiper.vue');
var SlideComponent = require('./src/slide.vue');
SwiperComponent = SwiperComponent.default || SwiperComponent;
SlideComponent = SlideComponent.default || SlideComponent;
if (typeof window !== 'undefined') {
  window.Swiper = Swiper;
}

var swiper = {
  swiperSlide: SlideComponent,
  swiper: SwiperComponent,
  swiperPlugins: Swiper.prototype.plugins,
  install: function install(Vue) {
    Vue.component(SwiperComponent.name, SwiperComponent);
    Vue.component(SlideComponent.name, SlideComponent);
  }
};

module.exports = swiper;

},{"./src/slide.vue":325,"./src/swiper.vue":326,"./swiper":327}],325:[function(require,module,exports){
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  name: 'swiper-slide',
  data: function data() {
    return {
      slideClass: 'swiper-slide'
    };
  },
  ready: function ready() {
    this.update();
  },
  mounted: function mounted() {
    this.update();
    if (this.$parent.options.slideClass) {
      this.slideClass = this.$parent.options.slideClass;
    }
  },
  updated: function updated() {
    this.update();
  },
  attached: function attached() {
    this.update();
  },
  methods: {
    update: function update() {
      if (this.$parent && this.$parent.swiper && this.$parent.swiper.update) {
        this.$parent.swiper.update(true);
        if (this.$parent.options.loop) {
          this.$parent.swiper.reLoop();
        }
      }
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.slideClass},[_vm._t("default")],2)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-3dae1149", __vue__options__)
  } else {
    hotAPI.reload("data-v-3dae1149", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],326:[function(require,module,exports){
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});


var browser = typeof window !== 'undefined';
if (browser) window.Swiper = require('../swiper');
exports.default = {
  name: 'swiper',
  props: {
    options: {
      type: Object,
      default: function _default() {
        return {
          autoplay: 3500
        };
      }
    },
    notNextTick: {
      type: Boolean,
      default: function _default() {
        return false;
      }
    }
  },
  data: function data() {
    return {
      defaultSwiperClasses: {
        wrapperClass: 'swiper-wrapper'
      }
    };
  },
  ready: function ready() {
    if (!this.swiper && browser) {
      this.swiper = new Swiper(this.$el, this.options);
    }
  },
  mounted: function mounted() {
    var self = this;
    var mount = function () {
      if (!self.swiper && browser) {
        delete self.options.notNextTick;
        var setClassName = false;
        for (var className in self.defaultSwiperClasses) {
          if (self.defaultSwiperClasses.hasOwnProperty(className)) {
            if (self.options[className]) {
              setClassName = true;
              self.defaultSwiperClasses[className] = self.options[className];
            }
          }
        }
        var mountInstance = function mountInstance() {
          self.swiper = new Swiper(self.$el, self.options);
        };
        setClassName ? self.$nextTick(mountInstance) : mountInstance();
      }
    }(this.options.notNextTick || this.notNextTick) ? mount() : this.$nextTick(mount);
  },
  updated: function updated() {
    if (this.swiper) {
      this.swiper.update();
    }
  },
  beforeDestroy: function beforeDestroy() {
    if (this.swiper) {
      this.swiper.destroy();
      delete this.swiper;
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"swiper-container"},[_vm._t("parallax-bg"),_vm._v(" "),_c('div',{class:_vm.defaultSwiperClasses.wrapperClass},[_vm._t("default")],2),_vm._v(" "),_vm._t("pagination"),_vm._v(" "),_vm._t("button-prev"),_vm._v(" "),_vm._t("button-next"),_vm._v(" "),_vm._t("scrollbar")],2)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-556d2d90", __vue__options__)
  } else {
    hotAPI.reload("data-v-556d2d90", __vue__options__)
  }
})()}

},{"../swiper":327,"vue":"vue","vue-hot-reload-api":299}],327:[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * Swiper 3.4.2
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * 
 * http://www.idangero.us/swiper/
 * 
 * Copyright 2017, Vladimir Kharlampidi
 * The iDangero.us
 * http://www.idangero.us/
 * 
 * Licensed under MIT
 * 
 * Released on: March 10, 2017
 */
(function () {
    'use strict';

    var $;

    /*===========================
    Swiper
    ===========================*/
    var Swiper = function Swiper(container, params) {
        if (!(this instanceof Swiper)) return new Swiper(container, params);

        var defaults = {
            direction: 'horizontal',
            touchEventsTarget: 'container',
            initialSlide: 0,
            speed: 300,
            // autoplay
            autoplay: false,
            autoplayDisableOnInteraction: true,
            autoplayStopOnLast: false,
            // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).
            iOSEdgeSwipeDetection: false,
            iOSEdgeSwipeThreshold: 20,
            // Free mode
            freeMode: false,
            freeModeMomentum: true,
            freeModeMomentumRatio: 1,
            freeModeMomentumBounce: true,
            freeModeMomentumBounceRatio: 1,
            freeModeMomentumVelocityRatio: 1,
            freeModeSticky: false,
            freeModeMinimumVelocity: 0.02,
            // Autoheight
            autoHeight: false,
            // Set wrapper width
            setWrapperSize: false,
            // Virtual Translate
            virtualTranslate: false,
            // Effects
            effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'
            coverflow: {
                rotate: 50,
                stretch: 0,
                depth: 100,
                modifier: 1,
                slideShadows: true
            },
            flip: {
                slideShadows: true,
                limitRotation: true
            },
            cube: {
                slideShadows: true,
                shadow: true,
                shadowOffset: 20,
                shadowScale: 0.94
            },
            fade: {
                crossFade: false
            },
            // Parallax
            parallax: false,
            // Zoom
            zoom: false,
            zoomMax: 3,
            zoomMin: 1,
            zoomToggle: true,
            // Scrollbar
            scrollbar: null,
            scrollbarHide: true,
            scrollbarDraggable: false,
            scrollbarSnapOnRelease: false,
            // Keyboard Mousewheel
            keyboardControl: false,
            mousewheelControl: false,
            mousewheelReleaseOnEdges: false,
            mousewheelInvert: false,
            mousewheelForceToAxis: false,
            mousewheelSensitivity: 1,
            mousewheelEventsTarged: 'container',
            // Hash Navigation
            hashnav: false,
            hashnavWatchState: false,
            // History
            history: false,
            // Commong Nav State
            replaceState: false,
            // Breakpoints
            breakpoints: undefined,
            // Slides grid
            spaceBetween: 0,
            slidesPerView: 1,
            slidesPerColumn: 1,
            slidesPerColumnFill: 'column',
            slidesPerGroup: 1,
            centeredSlides: false,
            slidesOffsetBefore: 0, // in px
            slidesOffsetAfter: 0, // in px
            // Round length
            roundLengths: false,
            // Touches
            touchRatio: 1,
            touchAngle: 45,
            simulateTouch: true,
            shortSwipes: true,
            longSwipes: true,
            longSwipesRatio: 0.5,
            longSwipesMs: 300,
            followFinger: true,
            onlyExternal: false,
            threshold: 0,
            touchMoveStopPropagation: true,
            touchReleaseOnEdges: false,
            // Unique Navigation Elements
            uniqueNavElements: true,
            // Pagination
            pagination: null,
            paginationElement: 'span',
            paginationClickable: false,
            paginationHide: false,
            paginationBulletRender: null,
            paginationProgressRender: null,
            paginationFractionRender: null,
            paginationCustomRender: null,
            paginationType: 'bullets', // 'bullets' or 'progress' or 'fraction' or 'custom'
            // Resistance
            resistance: true,
            resistanceRatio: 0.85,
            // Next/prev buttons
            nextButton: null,
            prevButton: null,
            // Progress
            watchSlidesProgress: false,
            watchSlidesVisibility: false,
            // Cursor
            grabCursor: false,
            // Clicks
            preventClicks: true,
            preventClicksPropagation: true,
            slideToClickedSlide: false,
            // Lazy Loading
            lazyLoading: false,
            lazyLoadingInPrevNext: false,
            lazyLoadingInPrevNextAmount: 1,
            lazyLoadingOnTransitionStart: false,
            // Images
            preloadImages: true,
            updateOnImagesReady: true,
            // loop
            loop: false,
            loopAdditionalSlides: 0,
            loopedSlides: null,
            // Control
            control: undefined,
            controlInverse: false,
            controlBy: 'slide', //or 'container'
            normalizeSlideIndex: true,
            // Swiping/no swiping
            allowSwipeToPrev: true,
            allowSwipeToNext: true,
            swipeHandler: null, //'.swipe-handler',
            noSwiping: true,
            noSwipingClass: 'swiper-no-swiping',
            // Passive Listeners
            passiveListeners: true,
            // NS
            containerModifierClass: 'swiper-container-', // NEW
            slideClass: 'swiper-slide',
            slideActiveClass: 'swiper-slide-active',
            slideDuplicateActiveClass: 'swiper-slide-duplicate-active',
            slideVisibleClass: 'swiper-slide-visible',
            slideDuplicateClass: 'swiper-slide-duplicate',
            slideNextClass: 'swiper-slide-next',
            slideDuplicateNextClass: 'swiper-slide-duplicate-next',
            slidePrevClass: 'swiper-slide-prev',
            slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',
            wrapperClass: 'swiper-wrapper',
            bulletClass: 'swiper-pagination-bullet',
            bulletActiveClass: 'swiper-pagination-bullet-active',
            buttonDisabledClass: 'swiper-button-disabled',
            paginationCurrentClass: 'swiper-pagination-current',
            paginationTotalClass: 'swiper-pagination-total',
            paginationHiddenClass: 'swiper-pagination-hidden',
            paginationProgressbarClass: 'swiper-pagination-progressbar',
            paginationClickableClass: 'swiper-pagination-clickable', // NEW
            paginationModifierClass: 'swiper-pagination-', // NEW
            lazyLoadingClass: 'swiper-lazy',
            lazyStatusLoadingClass: 'swiper-lazy-loading',
            lazyStatusLoadedClass: 'swiper-lazy-loaded',
            lazyPreloaderClass: 'swiper-lazy-preloader',
            notificationClass: 'swiper-notification',
            preloaderClass: 'preloader',
            zoomContainerClass: 'swiper-zoom-container',

            // Observer
            observer: false,
            observeParents: false,
            // Accessibility
            a11y: false,
            prevSlideMessage: 'Previous slide',
            nextSlideMessage: 'Next slide',
            firstSlideMessage: 'This is the first slide',
            lastSlideMessage: 'This is the last slide',
            paginationBulletMessage: 'Go to slide {{index}}',
            // Callbacks
            runCallbacksOnInit: true
            /*
            Callbacks:
            onInit: function (swiper)
            onDestroy: function (swiper)
            onBeforeResize: function (swiper)
            onAfterResize: function (swiper)
            onClick: function (swiper, e)
            onTap: function (swiper, e)
            onDoubleTap: function (swiper, e)
            onSliderMove: function (swiper, e)
            onSlideChangeStart: function (swiper)
            onSlideChangeEnd: function (swiper)
            onTransitionStart: function (swiper)
            onTransitionEnd: function (swiper)
            onImagesReady: function (swiper)
            onProgress: function (swiper, progress)
            onTouchStart: function (swiper, e)
            onTouchMove: function (swiper, e)
            onTouchMoveOpposite: function (swiper, e)
            onTouchEnd: function (swiper, e)
            onReachBeginning: function (swiper)
            onReachEnd: function (swiper)
            onSetTransition: function (swiper, duration)
            onSetTranslate: function (swiper, translate)
            onAutoplayStart: function (swiper)
            onAutoplayStop: function (swiper),
            onLazyImageLoad: function (swiper, slide, image)
            onLazyImageReady: function (swiper, slide, image)
            onKeyPress: function (swiper, keyCode)
            */

        };
        var initialVirtualTranslate = params && params.virtualTranslate;

        params = params || {};
        var originalParams = {};
        for (var param in params) {
            if (_typeof(params[param]) === 'object' && params[param] !== null && !(params[param].nodeType || params[param] === window || params[param] === document || typeof Dom7 !== 'undefined' && params[param] instanceof Dom7 || typeof jQuery !== 'undefined' && params[param] instanceof jQuery)) {
                originalParams[param] = {};
                for (var deepParam in params[param]) {
                    originalParams[param][deepParam] = params[param][deepParam];
                }
            } else {
                originalParams[param] = params[param];
            }
        }
        for (var def in defaults) {
            if (typeof params[def] === 'undefined') {
                params[def] = defaults[def];
            } else if (_typeof(params[def]) === 'object') {
                for (var deepDef in defaults[def]) {
                    if (typeof params[def][deepDef] === 'undefined') {
                        params[def][deepDef] = defaults[def][deepDef];
                    }
                }
            }
        }

        // Swiper
        var s = this;

        // Params
        s.params = params;
        s.originalParams = originalParams;

        // Classname
        s.classNames = [];
        /*=========================
          Dom Library and plugins
          ===========================*/
        if (typeof $ !== 'undefined' && typeof Dom7 !== 'undefined') {
            $ = Dom7;
        }
        if (typeof $ === 'undefined') {
            if (typeof Dom7 === 'undefined') {
                $ = window.Dom7 || window.Zepto || window.jQuery;
            } else {
                $ = Dom7;
            }
            if (!$) return;
        }
        // Export it to Swiper instance
        s.$ = $;

        /*=========================
          Breakpoints
          ===========================*/
        s.currentBreakpoint = undefined;
        s.getActiveBreakpoint = function () {
            //Get breakpoint for window width
            if (!s.params.breakpoints) return false;
            var breakpoint = false;
            var points = [],
                point;
            for (point in s.params.breakpoints) {
                if (s.params.breakpoints.hasOwnProperty(point)) {
                    points.push(point);
                }
            }
            points.sort(function (a, b) {
                return parseInt(a, 10) > parseInt(b, 10);
            });
            for (var i = 0; i < points.length; i++) {
                point = points[i];
                if (point >= window.innerWidth && !breakpoint) {
                    breakpoint = point;
                }
            }
            return breakpoint || 'max';
        };
        s.setBreakpoint = function () {
            //Set breakpoint for window width and update parameters
            var breakpoint = s.getActiveBreakpoint();
            if (breakpoint && s.currentBreakpoint !== breakpoint) {
                var breakPointsParams = breakpoint in s.params.breakpoints ? s.params.breakpoints[breakpoint] : s.originalParams;
                var needsReLoop = s.params.loop && breakPointsParams.slidesPerView !== s.params.slidesPerView;
                for (var param in breakPointsParams) {
                    s.params[param] = breakPointsParams[param];
                }
                s.currentBreakpoint = breakpoint;
                if (needsReLoop && s.destroyLoop) {
                    s.reLoop(true);
                }
            }
        };
        // Set breakpoint on load
        if (s.params.breakpoints) {
            s.setBreakpoint();
        }

        /*=========================
          Preparation - Define Container, Wrapper and Pagination
          ===========================*/
        s.container = $(container);
        if (s.container.length === 0) return;
        if (s.container.length > 1) {
            var swipers = [];
            s.container.each(function () {
                var container = this;
                swipers.push(new Swiper(this, params));
            });
            return swipers;
        }

        // Save instance in container HTML Element and in data
        s.container[0].swiper = s;
        s.container.data('swiper', s);

        s.classNames.push(s.params.containerModifierClass + s.params.direction);

        if (s.params.freeMode) {
            s.classNames.push(s.params.containerModifierClass + 'free-mode');
        }
        if (!s.support.flexbox) {
            s.classNames.push(s.params.containerModifierClass + 'no-flexbox');
            s.params.slidesPerColumn = 1;
        }
        if (s.params.autoHeight) {
            s.classNames.push(s.params.containerModifierClass + 'autoheight');
        }
        // Enable slides progress when required
        if (s.params.parallax || s.params.watchSlidesVisibility) {
            s.params.watchSlidesProgress = true;
        }
        // Max resistance when touchReleaseOnEdges
        if (s.params.touchReleaseOnEdges) {
            s.params.resistanceRatio = 0;
        }
        // Coverflow / 3D
        if (['cube', 'coverflow', 'flip'].indexOf(s.params.effect) >= 0) {
            if (s.support.transforms3d) {
                s.params.watchSlidesProgress = true;
                s.classNames.push(s.params.containerModifierClass + '3d');
            } else {
                s.params.effect = 'slide';
            }
        }
        if (s.params.effect !== 'slide') {
            s.classNames.push(s.params.containerModifierClass + s.params.effect);
        }
        if (s.params.effect === 'cube') {
            s.params.resistanceRatio = 0;
            s.params.slidesPerView = 1;
            s.params.slidesPerColumn = 1;
            s.params.slidesPerGroup = 1;
            s.params.centeredSlides = false;
            s.params.spaceBetween = 0;
            s.params.virtualTranslate = true;
        }
        if (s.params.effect === 'fade' || s.params.effect === 'flip') {
            s.params.slidesPerView = 1;
            s.params.slidesPerColumn = 1;
            s.params.slidesPerGroup = 1;
            s.params.watchSlidesProgress = true;
            s.params.spaceBetween = 0;
            if (typeof initialVirtualTranslate === 'undefined') {
                s.params.virtualTranslate = true;
            }
        }

        // Grab Cursor
        if (s.params.grabCursor && s.support.touch) {
            s.params.grabCursor = false;
        }

        // Wrapper
        s.wrapper = s.container.children('.' + s.params.wrapperClass);

        // Pagination
        if (s.params.pagination) {
            s.paginationContainer = $(s.params.pagination);
            if (s.params.uniqueNavElements && typeof s.params.pagination === 'string' && s.paginationContainer.length > 1 && s.container.find(s.params.pagination).length === 1) {
                s.paginationContainer = s.container.find(s.params.pagination);
            }

            if (s.params.paginationType === 'bullets' && s.params.paginationClickable) {
                s.paginationContainer.addClass(s.params.paginationModifierClass + 'clickable');
            } else {
                s.params.paginationClickable = false;
            }
            s.paginationContainer.addClass(s.params.paginationModifierClass + s.params.paginationType);
        }
        // Next/Prev Buttons
        if (s.params.nextButton || s.params.prevButton) {
            if (s.params.nextButton) {
                s.nextButton = $(s.params.nextButton);
                if (s.params.uniqueNavElements && typeof s.params.nextButton === 'string' && s.nextButton.length > 1 && s.container.find(s.params.nextButton).length === 1) {
                    s.nextButton = s.container.find(s.params.nextButton);
                }
            }
            if (s.params.prevButton) {
                s.prevButton = $(s.params.prevButton);
                if (s.params.uniqueNavElements && typeof s.params.prevButton === 'string' && s.prevButton.length > 1 && s.container.find(s.params.prevButton).length === 1) {
                    s.prevButton = s.container.find(s.params.prevButton);
                }
            }
        }

        // Is Horizontal
        s.isHorizontal = function () {
            return s.params.direction === 'horizontal';
        };
        // s.isH = isH;

        // RTL
        s.rtl = s.isHorizontal() && (s.container[0].dir.toLowerCase() === 'rtl' || s.container.css('direction') === 'rtl');
        if (s.rtl) {
            s.classNames.push(s.params.containerModifierClass + 'rtl');
        }

        // Wrong RTL support
        if (s.rtl) {
            s.wrongRTL = s.wrapper.css('display') === '-webkit-box';
        }

        // Columns
        if (s.params.slidesPerColumn > 1) {
            s.classNames.push(s.params.containerModifierClass + 'multirow');
        }

        // Check for Android
        if (s.device.android) {
            s.classNames.push(s.params.containerModifierClass + 'android');
        }

        // Add classes
        s.container.addClass(s.classNames.join(' '));

        // Translate
        s.translate = 0;

        // Progress
        s.progress = 0;

        // Velocity
        s.velocity = 0;

        /*=========================
          Locks, unlocks
          ===========================*/
        s.lockSwipeToNext = function () {
            s.params.allowSwipeToNext = false;
            if (s.params.allowSwipeToPrev === false && s.params.grabCursor) {
                s.unsetGrabCursor();
            }
        };
        s.lockSwipeToPrev = function () {
            s.params.allowSwipeToPrev = false;
            if (s.params.allowSwipeToNext === false && s.params.grabCursor) {
                s.unsetGrabCursor();
            }
        };
        s.lockSwipes = function () {
            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = false;
            if (s.params.grabCursor) s.unsetGrabCursor();
        };
        s.unlockSwipeToNext = function () {
            s.params.allowSwipeToNext = true;
            if (s.params.allowSwipeToPrev === true && s.params.grabCursor) {
                s.setGrabCursor();
            }
        };
        s.unlockSwipeToPrev = function () {
            s.params.allowSwipeToPrev = true;
            if (s.params.allowSwipeToNext === true && s.params.grabCursor) {
                s.setGrabCursor();
            }
        };
        s.unlockSwipes = function () {
            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = true;
            if (s.params.grabCursor) s.setGrabCursor();
        };

        /*=========================
          Round helper
          ===========================*/
        function round(a) {
            return Math.floor(a);
        }
        /*=========================
          Set grab cursor
          ===========================*/
        s.setGrabCursor = function (moving) {
            s.container[0].style.cursor = 'move';
            s.container[0].style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';
            s.container[0].style.cursor = moving ? '-moz-grabbin' : '-moz-grab';
            s.container[0].style.cursor = moving ? 'grabbing' : 'grab';
        };
        s.unsetGrabCursor = function () {
            s.container[0].style.cursor = '';
        };
        if (s.params.grabCursor) {
            s.setGrabCursor();
        }
        /*=========================
          Update on Images Ready
          ===========================*/
        s.imagesToLoad = [];
        s.imagesLoaded = 0;

        s.loadImage = function (imgElement, src, srcset, sizes, checkForComplete, callback) {
            var image;
            function onReady() {
                if (callback) callback();
            }
            if (!imgElement.complete || !checkForComplete) {
                if (src) {
                    image = new window.Image();
                    image.onload = onReady;
                    image.onerror = onReady;
                    if (sizes) {
                        image.sizes = sizes;
                    }
                    if (srcset) {
                        image.srcset = srcset;
                    }
                    if (src) {
                        image.src = src;
                    }
                } else {
                    onReady();
                }
            } else {
                //image already loaded...
                onReady();
            }
        };
        s.preloadImages = function () {
            s.imagesToLoad = s.container.find('img');
            function _onReady() {
                if (typeof s === 'undefined' || s === null || !s) return;
                if (s.imagesLoaded !== undefined) s.imagesLoaded++;
                if (s.imagesLoaded === s.imagesToLoad.length) {
                    if (s.params.updateOnImagesReady) s.update();
                    s.emit('onImagesReady', s);
                }
            }
            for (var i = 0; i < s.imagesToLoad.length; i++) {
                s.loadImage(s.imagesToLoad[i], s.imagesToLoad[i].currentSrc || s.imagesToLoad[i].getAttribute('src'), s.imagesToLoad[i].srcset || s.imagesToLoad[i].getAttribute('srcset'), s.imagesToLoad[i].sizes || s.imagesToLoad[i].getAttribute('sizes'), true, _onReady);
            }
        };

        /*=========================
          Autoplay
          ===========================*/
        s.autoplayTimeoutId = undefined;
        s.autoplaying = false;
        s.autoplayPaused = false;
        function autoplay() {
            var autoplayDelay = s.params.autoplay;
            var activeSlide = s.slides.eq(s.activeIndex);
            if (activeSlide.attr('data-swiper-autoplay')) {
                autoplayDelay = activeSlide.attr('data-swiper-autoplay') || s.params.autoplay;
            }
            s.autoplayTimeoutId = setTimeout(function () {
                if (s.params.loop) {
                    s.fixLoop();
                    s._slideNext();
                    s.emit('onAutoplay', s);
                } else {
                    if (!s.isEnd) {
                        s._slideNext();
                        s.emit('onAutoplay', s);
                    } else {
                        if (!params.autoplayStopOnLast) {
                            s._slideTo(0);
                            s.emit('onAutoplay', s);
                        } else {
                            s.stopAutoplay();
                        }
                    }
                }
            }, autoplayDelay);
        }
        s.startAutoplay = function () {
            if (typeof s.autoplayTimeoutId !== 'undefined') return false;
            if (!s.params.autoplay) return false;
            if (s.autoplaying) return false;
            s.autoplaying = true;
            s.emit('onAutoplayStart', s);
            autoplay();
        };
        s.stopAutoplay = function (internal) {
            if (!s.autoplayTimeoutId) return;
            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);
            s.autoplaying = false;
            s.autoplayTimeoutId = undefined;
            s.emit('onAutoplayStop', s);
        };
        s.pauseAutoplay = function (speed) {
            if (s.autoplayPaused) return;
            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);
            s.autoplayPaused = true;
            if (speed === 0) {
                s.autoplayPaused = false;
                autoplay();
            } else {
                s.wrapper.transitionEnd(function () {
                    if (!s) return;
                    s.autoplayPaused = false;
                    if (!s.autoplaying) {
                        s.stopAutoplay();
                    } else {
                        autoplay();
                    }
                });
            }
        };
        /*=========================
          Min/Max Translate
          ===========================*/
        s.minTranslate = function () {
            return -s.snapGrid[0];
        };
        s.maxTranslate = function () {
            return -s.snapGrid[s.snapGrid.length - 1];
        };
        /*=========================
          Slider/slides sizes
          ===========================*/
        s.updateAutoHeight = function () {
            var activeSlides = [];
            var newHeight = 0;
            var i;

            // Find slides currently in view
            if (s.params.slidesPerView !== 'auto' && s.params.slidesPerView > 1) {
                for (i = 0; i < Math.ceil(s.params.slidesPerView); i++) {
                    var index = s.activeIndex + i;
                    if (index > s.slides.length) break;
                    activeSlides.push(s.slides.eq(index)[0]);
                }
            } else {
                activeSlides.push(s.slides.eq(s.activeIndex)[0]);
            }

            // Find new height from heighest slide in view
            for (i = 0; i < activeSlides.length; i++) {
                if (typeof activeSlides[i] !== 'undefined') {
                    var height = activeSlides[i].offsetHeight;
                    newHeight = height > newHeight ? height : newHeight;
                }
            }

            // Update Height
            if (newHeight) s.wrapper.css('height', newHeight + 'px');
        };
        s.updateContainerSize = function () {
            var width, height;
            if (typeof s.params.width !== 'undefined') {
                width = s.params.width;
            } else {
                width = s.container[0].clientWidth;
            }
            if (typeof s.params.height !== 'undefined') {
                height = s.params.height;
            } else {
                height = s.container[0].clientHeight;
            }
            if (width === 0 && s.isHorizontal() || height === 0 && !s.isHorizontal()) {
                return;
            }

            //Subtract paddings
            width = width - parseInt(s.container.css('padding-left'), 10) - parseInt(s.container.css('padding-right'), 10);
            height = height - parseInt(s.container.css('padding-top'), 10) - parseInt(s.container.css('padding-bottom'), 10);

            // Store values
            s.width = width;
            s.height = height;
            s.size = s.isHorizontal() ? s.width : s.height;
        };

        s.updateSlidesSize = function () {
            s.slides = s.wrapper.children('.' + s.params.slideClass);
            s.snapGrid = [];
            s.slidesGrid = [];
            s.slidesSizesGrid = [];

            var spaceBetween = s.params.spaceBetween,
                slidePosition = -s.params.slidesOffsetBefore,
                i,
                prevSlideSize = 0,
                index = 0;
            if (typeof s.size === 'undefined') return;
            if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {
                spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * s.size;
            }

            s.virtualSize = -spaceBetween;
            // reset margins
            if (s.rtl) s.slides.css({ marginLeft: '', marginTop: '' });else s.slides.css({ marginRight: '', marginBottom: '' });

            var slidesNumberEvenToRows;
            if (s.params.slidesPerColumn > 1) {
                if (Math.floor(s.slides.length / s.params.slidesPerColumn) === s.slides.length / s.params.slidesPerColumn) {
                    slidesNumberEvenToRows = s.slides.length;
                } else {
                    slidesNumberEvenToRows = Math.ceil(s.slides.length / s.params.slidesPerColumn) * s.params.slidesPerColumn;
                }
                if (s.params.slidesPerView !== 'auto' && s.params.slidesPerColumnFill === 'row') {
                    slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, s.params.slidesPerView * s.params.slidesPerColumn);
                }
            }

            // Calc slides
            var slideSize;
            var slidesPerColumn = s.params.slidesPerColumn;
            var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;
            var numFullColumns = slidesPerRow - (s.params.slidesPerColumn * slidesPerRow - s.slides.length);
            for (i = 0; i < s.slides.length; i++) {
                slideSize = 0;
                var slide = s.slides.eq(i);
                if (s.params.slidesPerColumn > 1) {
                    // Set slides order
                    var newSlideOrderIndex;
                    var column, row;
                    if (s.params.slidesPerColumnFill === 'column') {
                        column = Math.floor(i / slidesPerColumn);
                        row = i - column * slidesPerColumn;
                        if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {
                            if (++row >= slidesPerColumn) {
                                row = 0;
                                column++;
                            }
                        }
                        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;
                        slide.css({
                            '-webkit-box-ordinal-group': newSlideOrderIndex,
                            '-moz-box-ordinal-group': newSlideOrderIndex,
                            '-ms-flex-order': newSlideOrderIndex,
                            '-webkit-order': newSlideOrderIndex,
                            'order': newSlideOrderIndex
                        });
                    } else {
                        row = Math.floor(i / slidesPerRow);
                        column = i - row * slidesPerRow;
                    }
                    slide.css('margin-' + (s.isHorizontal() ? 'top' : 'left'), row !== 0 && s.params.spaceBetween && s.params.spaceBetween + 'px').attr('data-swiper-column', column).attr('data-swiper-row', row);
                }
                if (slide.css('display') === 'none') continue;
                if (s.params.slidesPerView === 'auto') {
                    slideSize = s.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);
                    if (s.params.roundLengths) slideSize = round(slideSize);
                } else {
                    slideSize = (s.size - (s.params.slidesPerView - 1) * spaceBetween) / s.params.slidesPerView;
                    if (s.params.roundLengths) slideSize = round(slideSize);

                    if (s.isHorizontal()) {
                        s.slides[i].style.width = slideSize + 'px';
                    } else {
                        s.slides[i].style.height = slideSize + 'px';
                    }
                }
                s.slides[i].swiperSlideSize = slideSize;
                s.slidesSizesGrid.push(slideSize);

                if (s.params.centeredSlides) {
                    slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;
                    if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - s.size / 2 - spaceBetween;
                    if (i === 0) slidePosition = slidePosition - s.size / 2 - spaceBetween;
                    if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;
                    if (index % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);
                    s.slidesGrid.push(slidePosition);
                } else {
                    if (index % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);
                    s.slidesGrid.push(slidePosition);
                    slidePosition = slidePosition + slideSize + spaceBetween;
                }

                s.virtualSize += slideSize + spaceBetween;

                prevSlideSize = slideSize;

                index++;
            }
            s.virtualSize = Math.max(s.virtualSize, s.size) + s.params.slidesOffsetAfter;
            var newSlidesGrid;

            if (s.rtl && s.wrongRTL && (s.params.effect === 'slide' || s.params.effect === 'coverflow')) {
                s.wrapper.css({ width: s.virtualSize + s.params.spaceBetween + 'px' });
            }
            if (!s.support.flexbox || s.params.setWrapperSize) {
                if (s.isHorizontal()) s.wrapper.css({ width: s.virtualSize + s.params.spaceBetween + 'px' });else s.wrapper.css({ height: s.virtualSize + s.params.spaceBetween + 'px' });
            }

            if (s.params.slidesPerColumn > 1) {
                s.virtualSize = (slideSize + s.params.spaceBetween) * slidesNumberEvenToRows;
                s.virtualSize = Math.ceil(s.virtualSize / s.params.slidesPerColumn) - s.params.spaceBetween;
                if (s.isHorizontal()) s.wrapper.css({ width: s.virtualSize + s.params.spaceBetween + 'px' });else s.wrapper.css({ height: s.virtualSize + s.params.spaceBetween + 'px' });
                if (s.params.centeredSlides) {
                    newSlidesGrid = [];
                    for (i = 0; i < s.snapGrid.length; i++) {
                        if (s.snapGrid[i] < s.virtualSize + s.snapGrid[0]) newSlidesGrid.push(s.snapGrid[i]);
                    }
                    s.snapGrid = newSlidesGrid;
                }
            }

            // Remove last grid elements depending on width
            if (!s.params.centeredSlides) {
                newSlidesGrid = [];
                for (i = 0; i < s.snapGrid.length; i++) {
                    if (s.snapGrid[i] <= s.virtualSize - s.size) {
                        newSlidesGrid.push(s.snapGrid[i]);
                    }
                }
                s.snapGrid = newSlidesGrid;
                if (Math.floor(s.virtualSize - s.size) - Math.floor(s.snapGrid[s.snapGrid.length - 1]) > 1) {
                    s.snapGrid.push(s.virtualSize - s.size);
                }
            }
            if (s.snapGrid.length === 0) s.snapGrid = [0];

            if (s.params.spaceBetween !== 0) {
                if (s.isHorizontal()) {
                    if (s.rtl) s.slides.css({ marginLeft: spaceBetween + 'px' });else s.slides.css({ marginRight: spaceBetween + 'px' });
                } else s.slides.css({ marginBottom: spaceBetween + 'px' });
            }
            if (s.params.watchSlidesProgress) {
                s.updateSlidesOffset();
            }
        };
        s.updateSlidesOffset = function () {
            for (var i = 0; i < s.slides.length; i++) {
                s.slides[i].swiperSlideOffset = s.isHorizontal() ? s.slides[i].offsetLeft : s.slides[i].offsetTop;
            }
        };

        /*=========================
          Dynamic Slides Per View
          ===========================*/
        s.currentSlidesPerView = function () {
            var spv = 1,
                i,
                j;
            if (s.params.centeredSlides) {
                var size = s.slides[s.activeIndex].swiperSlideSize;
                var breakLoop;
                for (i = s.activeIndex + 1; i < s.slides.length; i++) {
                    if (s.slides[i] && !breakLoop) {
                        size += s.slides[i].swiperSlideSize;
                        spv++;
                        if (size > s.size) breakLoop = true;
                    }
                }
                for (j = s.activeIndex - 1; j >= 0; j--) {
                    if (s.slides[j] && !breakLoop) {
                        size += s.slides[j].swiperSlideSize;
                        spv++;
                        if (size > s.size) breakLoop = true;
                    }
                }
            } else {
                for (i = s.activeIndex + 1; i < s.slides.length; i++) {
                    if (s.slidesGrid[i] - s.slidesGrid[s.activeIndex] < s.size) {
                        spv++;
                    }
                }
            }
            return spv;
        };
        /*=========================
          Slider/slides progress
          ===========================*/
        s.updateSlidesProgress = function (translate) {
            if (typeof translate === 'undefined') {
                translate = s.translate || 0;
            }
            if (s.slides.length === 0) return;
            if (typeof s.slides[0].swiperSlideOffset === 'undefined') s.updateSlidesOffset();

            var offsetCenter = -translate;
            if (s.rtl) offsetCenter = translate;

            // Visible Slides
            s.slides.removeClass(s.params.slideVisibleClass);
            for (var i = 0; i < s.slides.length; i++) {
                var slide = s.slides[i];
                var slideProgress = (offsetCenter + (s.params.centeredSlides ? s.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + s.params.spaceBetween);
                if (s.params.watchSlidesVisibility) {
                    var slideBefore = -(offsetCenter - slide.swiperSlideOffset);
                    var slideAfter = slideBefore + s.slidesSizesGrid[i];
                    var isVisible = slideBefore >= 0 && slideBefore < s.size || slideAfter > 0 && slideAfter <= s.size || slideBefore <= 0 && slideAfter >= s.size;
                    if (isVisible) {
                        s.slides.eq(i).addClass(s.params.slideVisibleClass);
                    }
                }
                slide.progress = s.rtl ? -slideProgress : slideProgress;
            }
        };
        s.updateProgress = function (translate) {
            if (typeof translate === 'undefined') {
                translate = s.translate || 0;
            }
            var translatesDiff = s.maxTranslate() - s.minTranslate();
            var wasBeginning = s.isBeginning;
            var wasEnd = s.isEnd;
            if (translatesDiff === 0) {
                s.progress = 0;
                s.isBeginning = s.isEnd = true;
            } else {
                s.progress = (translate - s.minTranslate()) / translatesDiff;
                s.isBeginning = s.progress <= 0;
                s.isEnd = s.progress >= 1;
            }
            if (s.isBeginning && !wasBeginning) s.emit('onReachBeginning', s);
            if (s.isEnd && !wasEnd) s.emit('onReachEnd', s);

            if (s.params.watchSlidesProgress) s.updateSlidesProgress(translate);
            s.emit('onProgress', s, s.progress);
        };
        s.updateActiveIndex = function () {
            var translate = s.rtl ? s.translate : -s.translate;
            var newActiveIndex, i, snapIndex;
            for (i = 0; i < s.slidesGrid.length; i++) {
                if (typeof s.slidesGrid[i + 1] !== 'undefined') {
                    if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1] - (s.slidesGrid[i + 1] - s.slidesGrid[i]) / 2) {
                        newActiveIndex = i;
                    } else if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1]) {
                        newActiveIndex = i + 1;
                    }
                } else {
                    if (translate >= s.slidesGrid[i]) {
                        newActiveIndex = i;
                    }
                }
            }
            // Normalize slideIndex
            if (s.params.normalizeSlideIndex) {
                if (newActiveIndex < 0 || typeof newActiveIndex === 'undefined') newActiveIndex = 0;
            }
            // for (i = 0; i < s.slidesGrid.length; i++) {
            // if (- translate >= s.slidesGrid[i]) {
            // newActiveIndex = i;
            // }
            // }
            snapIndex = Math.floor(newActiveIndex / s.params.slidesPerGroup);
            if (snapIndex >= s.snapGrid.length) snapIndex = s.snapGrid.length - 1;

            if (newActiveIndex === s.activeIndex) {
                return;
            }
            s.snapIndex = snapIndex;
            s.previousIndex = s.activeIndex;
            s.activeIndex = newActiveIndex;
            s.updateClasses();
            s.updateRealIndex();
        };
        s.updateRealIndex = function () {
            s.realIndex = parseInt(s.slides.eq(s.activeIndex).attr('data-swiper-slide-index') || s.activeIndex, 10);
        };

        /*=========================
          Classes
          ===========================*/
        s.updateClasses = function () {
            s.slides.removeClass(s.params.slideActiveClass + ' ' + s.params.slideNextClass + ' ' + s.params.slidePrevClass + ' ' + s.params.slideDuplicateActiveClass + ' ' + s.params.slideDuplicateNextClass + ' ' + s.params.slideDuplicatePrevClass);
            var activeSlide = s.slides.eq(s.activeIndex);
            // Active classes
            activeSlide.addClass(s.params.slideActiveClass);
            if (params.loop) {
                // Duplicate to all looped slides
                if (activeSlide.hasClass(s.params.slideDuplicateClass)) {
                    s.wrapper.children('.' + s.params.slideClass + ':not(.' + s.params.slideDuplicateClass + ')[data-swiper-slide-index="' + s.realIndex + '"]').addClass(s.params.slideDuplicateActiveClass);
                } else {
                    s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass + '[data-swiper-slide-index="' + s.realIndex + '"]').addClass(s.params.slideDuplicateActiveClass);
                }
            }
            // Next Slide
            var nextSlide = activeSlide.next('.' + s.params.slideClass).addClass(s.params.slideNextClass);
            if (s.params.loop && nextSlide.length === 0) {
                nextSlide = s.slides.eq(0);
                nextSlide.addClass(s.params.slideNextClass);
            }
            // Prev Slide
            var prevSlide = activeSlide.prev('.' + s.params.slideClass).addClass(s.params.slidePrevClass);
            if (s.params.loop && prevSlide.length === 0) {
                prevSlide = s.slides.eq(-1);
                prevSlide.addClass(s.params.slidePrevClass);
            }
            if (params.loop) {
                // Duplicate to all looped slides
                if (nextSlide.hasClass(s.params.slideDuplicateClass)) {
                    s.wrapper.children('.' + s.params.slideClass + ':not(.' + s.params.slideDuplicateClass + ')[data-swiper-slide-index="' + nextSlide.attr('data-swiper-slide-index') + '"]').addClass(s.params.slideDuplicateNextClass);
                } else {
                    s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass + '[data-swiper-slide-index="' + nextSlide.attr('data-swiper-slide-index') + '"]').addClass(s.params.slideDuplicateNextClass);
                }
                if (prevSlide.hasClass(s.params.slideDuplicateClass)) {
                    s.wrapper.children('.' + s.params.slideClass + ':not(.' + s.params.slideDuplicateClass + ')[data-swiper-slide-index="' + prevSlide.attr('data-swiper-slide-index') + '"]').addClass(s.params.slideDuplicatePrevClass);
                } else {
                    s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass + '[data-swiper-slide-index="' + prevSlide.attr('data-swiper-slide-index') + '"]').addClass(s.params.slideDuplicatePrevClass);
                }
            }

            // Pagination
            if (s.paginationContainer && s.paginationContainer.length > 0) {
                // Current/Total
                var current,
                    total = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;
                if (s.params.loop) {
                    current = Math.ceil((s.activeIndex - s.loopedSlides) / s.params.slidesPerGroup);
                    if (current > s.slides.length - 1 - s.loopedSlides * 2) {
                        current = current - (s.slides.length - s.loopedSlides * 2);
                    }
                    if (current > total - 1) current = current - total;
                    if (current < 0 && s.params.paginationType !== 'bullets') current = total + current;
                } else {
                    if (typeof s.snapIndex !== 'undefined') {
                        current = s.snapIndex;
                    } else {
                        current = s.activeIndex || 0;
                    }
                }
                // Types
                if (s.params.paginationType === 'bullets' && s.bullets && s.bullets.length > 0) {
                    s.bullets.removeClass(s.params.bulletActiveClass);
                    if (s.paginationContainer.length > 1) {
                        s.bullets.each(function () {
                            if ($(this).index() === current) $(this).addClass(s.params.bulletActiveClass);
                        });
                    } else {
                        s.bullets.eq(current).addClass(s.params.bulletActiveClass);
                    }
                }
                if (s.params.paginationType === 'fraction') {
                    s.paginationContainer.find('.' + s.params.paginationCurrentClass).text(current + 1);
                    s.paginationContainer.find('.' + s.params.paginationTotalClass).text(total);
                }
                if (s.params.paginationType === 'progress') {
                    var scale = (current + 1) / total,
                        scaleX = scale,
                        scaleY = 1;
                    if (!s.isHorizontal()) {
                        scaleY = scale;
                        scaleX = 1;
                    }
                    s.paginationContainer.find('.' + s.params.paginationProgressbarClass).transform('translate3d(0,0,0) scaleX(' + scaleX + ') scaleY(' + scaleY + ')').transition(s.params.speed);
                }
                if (s.params.paginationType === 'custom' && s.params.paginationCustomRender) {
                    s.paginationContainer.html(s.params.paginationCustomRender(s, current + 1, total));
                    s.emit('onPaginationRendered', s, s.paginationContainer[0]);
                }
            }

            // Next/active buttons
            if (!s.params.loop) {
                if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {
                    if (s.isBeginning) {
                        s.prevButton.addClass(s.params.buttonDisabledClass);
                        if (s.params.a11y && s.a11y) s.a11y.disable(s.prevButton);
                    } else {
                        s.prevButton.removeClass(s.params.buttonDisabledClass);
                        if (s.params.a11y && s.a11y) s.a11y.enable(s.prevButton);
                    }
                }
                if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {
                    if (s.isEnd) {
                        s.nextButton.addClass(s.params.buttonDisabledClass);
                        if (s.params.a11y && s.a11y) s.a11y.disable(s.nextButton);
                    } else {
                        s.nextButton.removeClass(s.params.buttonDisabledClass);
                        if (s.params.a11y && s.a11y) s.a11y.enable(s.nextButton);
                    }
                }
            }
        };

        /*=========================
          Pagination
          ===========================*/
        s.updatePagination = function () {
            if (!s.params.pagination) return;
            if (s.paginationContainer && s.paginationContainer.length > 0) {
                var paginationHTML = '';
                if (s.params.paginationType === 'bullets') {
                    var numberOfBullets = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;
                    for (var i = 0; i < numberOfBullets; i++) {
                        if (s.params.paginationBulletRender) {
                            paginationHTML += s.params.paginationBulletRender(s, i, s.params.bulletClass);
                        } else {
                            paginationHTML += '<' + s.params.paginationElement + ' class="' + s.params.bulletClass + '"></' + s.params.paginationElement + '>';
                        }
                    }
                    s.paginationContainer.html(paginationHTML);
                    s.bullets = s.paginationContainer.find('.' + s.params.bulletClass);
                    if (s.params.paginationClickable && s.params.a11y && s.a11y) {
                        s.a11y.initPagination();
                    }
                }
                if (s.params.paginationType === 'fraction') {
                    if (s.params.paginationFractionRender) {
                        paginationHTML = s.params.paginationFractionRender(s, s.params.paginationCurrentClass, s.params.paginationTotalClass);
                    } else {
                        paginationHTML = '<span class="' + s.params.paginationCurrentClass + '"></span>' + ' / ' + '<span class="' + s.params.paginationTotalClass + '"></span>';
                    }
                    s.paginationContainer.html(paginationHTML);
                }
                if (s.params.paginationType === 'progress') {
                    if (s.params.paginationProgressRender) {
                        paginationHTML = s.params.paginationProgressRender(s, s.params.paginationProgressbarClass);
                    } else {
                        paginationHTML = '<span class="' + s.params.paginationProgressbarClass + '"></span>';
                    }
                    s.paginationContainer.html(paginationHTML);
                }
                if (s.params.paginationType !== 'custom') {
                    s.emit('onPaginationRendered', s, s.paginationContainer[0]);
                }
            }
        };
        /*=========================
          Common update method
          ===========================*/
        s.update = function (updateTranslate) {
            if (!s) return;
            s.updateContainerSize();
            s.updateSlidesSize();
            s.updateProgress();
            s.updatePagination();
            s.updateClasses();
            if (s.params.scrollbar && s.scrollbar) {
                s.scrollbar.set();
            }
            var newTranslate;
            function forceSetTranslate() {
                var translate = s.rtl ? -s.translate : s.translate;
                newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());
                s.setWrapperTranslate(newTranslate);
                s.updateActiveIndex();
                s.updateClasses();
            }
            if (updateTranslate) {
                var translated;
                if (s.controller && s.controller.spline) {
                    s.controller.spline = undefined;
                }
                if (s.params.freeMode) {
                    forceSetTranslate();
                    if (s.params.autoHeight) {
                        s.updateAutoHeight();
                    }
                } else {
                    if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {
                        translated = s.slideTo(s.slides.length - 1, 0, false, true);
                    } else {
                        translated = s.slideTo(s.activeIndex, 0, false, true);
                    }
                    if (!translated) {
                        forceSetTranslate();
                    }
                }
            } else if (s.params.autoHeight) {
                s.updateAutoHeight();
            }
        };

        /*=========================
          Resize Handler
          ===========================*/
        s.onResize = function (forceUpdatePagination) {
            if (s.params.onBeforeResize) s.params.onBeforeResize(s);
            //Breakpoints
            if (s.params.breakpoints) {
                s.setBreakpoint();
            }

            // Disable locks on resize
            var allowSwipeToPrev = s.params.allowSwipeToPrev;
            var allowSwipeToNext = s.params.allowSwipeToNext;
            s.params.allowSwipeToPrev = s.params.allowSwipeToNext = true;

            s.updateContainerSize();
            s.updateSlidesSize();
            if (s.params.slidesPerView === 'auto' || s.params.freeMode || forceUpdatePagination) s.updatePagination();
            if (s.params.scrollbar && s.scrollbar) {
                s.scrollbar.set();
            }
            if (s.controller && s.controller.spline) {
                s.controller.spline = undefined;
            }
            var slideChangedBySlideTo = false;
            if (s.params.freeMode) {
                var newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());
                s.setWrapperTranslate(newTranslate);
                s.updateActiveIndex();
                s.updateClasses();

                if (s.params.autoHeight) {
                    s.updateAutoHeight();
                }
            } else {
                s.updateClasses();
                if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {
                    slideChangedBySlideTo = s.slideTo(s.slides.length - 1, 0, false, true);
                } else {
                    slideChangedBySlideTo = s.slideTo(s.activeIndex, 0, false, true);
                }
            }
            if (s.params.lazyLoading && !slideChangedBySlideTo && s.lazy) {
                s.lazy.load();
            }
            // Return locks after resize
            s.params.allowSwipeToPrev = allowSwipeToPrev;
            s.params.allowSwipeToNext = allowSwipeToNext;
            if (s.params.onAfterResize) s.params.onAfterResize(s);
        };

        /*=========================
          Events
          ===========================*/

        //Define Touch Events
        s.touchEventsDesktop = { start: 'mousedown', move: 'mousemove', end: 'mouseup' };
        if (window.navigator.pointerEnabled) s.touchEventsDesktop = { start: 'pointerdown', move: 'pointermove', end: 'pointerup' };else if (window.navigator.msPointerEnabled) s.touchEventsDesktop = { start: 'MSPointerDown', move: 'MSPointerMove', end: 'MSPointerUp' };
        s.touchEvents = {
            start: s.support.touch || !s.params.simulateTouch ? 'touchstart' : s.touchEventsDesktop.start,
            move: s.support.touch || !s.params.simulateTouch ? 'touchmove' : s.touchEventsDesktop.move,
            end: s.support.touch || !s.params.simulateTouch ? 'touchend' : s.touchEventsDesktop.end
        };

        // WP8 Touch Events Fix
        if (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) {
            (s.params.touchEventsTarget === 'container' ? s.container : s.wrapper).addClass('swiper-wp8-' + s.params.direction);
        }

        // Attach/detach events
        s.initEvents = function (detach) {
            var actionDom = detach ? 'off' : 'on';
            var action = detach ? 'removeEventListener' : 'addEventListener';
            var touchEventsTarget = s.params.touchEventsTarget === 'container' ? s.container[0] : s.wrapper[0];
            var target = s.support.touch ? touchEventsTarget : document;

            var moveCapture = s.params.nested ? true : false;

            //Touch Events
            if (s.browser.ie) {
                touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);
                target[action](s.touchEvents.move, s.onTouchMove, moveCapture);
                target[action](s.touchEvents.end, s.onTouchEnd, false);
            } else {
                if (s.support.touch) {
                    var passiveListener = s.touchEvents.start === 'touchstart' && s.support.passiveListener && s.params.passiveListeners ? { passive: true, capture: false } : false;
                    touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, passiveListener);
                    touchEventsTarget[action](s.touchEvents.move, s.onTouchMove, moveCapture);
                    touchEventsTarget[action](s.touchEvents.end, s.onTouchEnd, passiveListener);
                }
                if (params.simulateTouch && !s.device.ios && !s.device.android || params.simulateTouch && !s.support.touch && s.device.ios) {
                    touchEventsTarget[action]('mousedown', s.onTouchStart, false);
                    document[action]('mousemove', s.onTouchMove, moveCapture);
                    document[action]('mouseup', s.onTouchEnd, false);
                }
            }
            window[action]('resize', s.onResize);

            // Next, Prev, Index
            if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {
                s.nextButton[actionDom]('click', s.onClickNext);
                if (s.params.a11y && s.a11y) s.nextButton[actionDom]('keydown', s.a11y.onEnterKey);
            }
            if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {
                s.prevButton[actionDom]('click', s.onClickPrev);
                if (s.params.a11y && s.a11y) s.prevButton[actionDom]('keydown', s.a11y.onEnterKey);
            }
            if (s.params.pagination && s.params.paginationClickable) {
                s.paginationContainer[actionDom]('click', '.' + s.params.bulletClass, s.onClickIndex);
                if (s.params.a11y && s.a11y) s.paginationContainer[actionDom]('keydown', '.' + s.params.bulletClass, s.a11y.onEnterKey);
            }

            // Prevent Links Clicks
            if (s.params.preventClicks || s.params.preventClicksPropagation) touchEventsTarget[action]('click', s.preventClicks, true);
        };
        s.attachEvents = function () {
            s.initEvents();
        };
        s.detachEvents = function () {
            s.initEvents(true);
        };

        /*=========================
          Handle Clicks
          ===========================*/
        // Prevent Clicks
        s.allowClick = true;
        s.preventClicks = function (e) {
            if (!s.allowClick) {
                if (s.params.preventClicks) e.preventDefault();
                if (s.params.preventClicksPropagation && s.animating) {
                    e.stopPropagation();
                    e.stopImmediatePropagation();
                }
            }
        };
        // Clicks
        s.onClickNext = function (e) {
            e.preventDefault();
            if (s.isEnd && !s.params.loop) return;
            s.slideNext();
        };
        s.onClickPrev = function (e) {
            e.preventDefault();
            if (s.isBeginning && !s.params.loop) return;
            s.slidePrev();
        };
        s.onClickIndex = function (e) {
            e.preventDefault();
            var index = $(this).index() * s.params.slidesPerGroup;
            if (s.params.loop) index = index + s.loopedSlides;
            s.slideTo(index);
        };

        /*=========================
          Handle Touches
          ===========================*/
        function findElementInEvent(e, selector) {
            var el = $(e.target);
            if (!el.is(selector)) {
                if (typeof selector === 'string') {
                    el = el.parents(selector);
                } else if (selector.nodeType) {
                    var found;
                    el.parents().each(function (index, _el) {
                        if (_el === selector) found = selector;
                    });
                    if (!found) return undefined;else return selector;
                }
            }
            if (el.length === 0) {
                return undefined;
            }
            return el[0];
        }
        s.updateClickedSlide = function (e) {
            var slide = findElementInEvent(e, '.' + s.params.slideClass);
            var slideFound = false;
            if (slide) {
                for (var i = 0; i < s.slides.length; i++) {
                    if (s.slides[i] === slide) slideFound = true;
                }
            }

            if (slide && slideFound) {
                s.clickedSlide = slide;
                s.clickedIndex = $(slide).index();
            } else {
                s.clickedSlide = undefined;
                s.clickedIndex = undefined;
                return;
            }
            if (s.params.slideToClickedSlide && s.clickedIndex !== undefined && s.clickedIndex !== s.activeIndex) {
                var slideToIndex = s.clickedIndex,
                    realIndex,
                    duplicatedSlides,
                    slidesPerView = s.params.slidesPerView === 'auto' ? s.currentSlidesPerView() : s.params.slidesPerView;
                if (s.params.loop) {
                    if (s.animating) return;
                    realIndex = parseInt($(s.clickedSlide).attr('data-swiper-slide-index'), 10);
                    if (s.params.centeredSlides) {
                        if (slideToIndex < s.loopedSlides - slidesPerView / 2 || slideToIndex > s.slides.length - s.loopedSlides + slidesPerView / 2) {
                            s.fixLoop();
                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index="' + realIndex + '"]:not(.' + s.params.slideDuplicateClass + ')').eq(0).index();
                            setTimeout(function () {
                                s.slideTo(slideToIndex);
                            }, 0);
                        } else {
                            s.slideTo(slideToIndex);
                        }
                    } else {
                        if (slideToIndex > s.slides.length - slidesPerView) {
                            s.fixLoop();
                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index="' + realIndex + '"]:not(.' + s.params.slideDuplicateClass + ')').eq(0).index();
                            setTimeout(function () {
                                s.slideTo(slideToIndex);
                            }, 0);
                        } else {
                            s.slideTo(slideToIndex);
                        }
                    }
                } else {
                    s.slideTo(slideToIndex);
                }
            }
        };

        var isTouched,
            isMoved,
            allowTouchCallbacks,
            touchStartTime,
            isScrolling,
            currentTranslate,
            startTranslate,
            allowThresholdMove,

        // Form elements to match
        formElements = 'input, select, textarea, button, video',

        // Last click time
        lastClickTime = Date.now(),
            clickTimeout,

        //Velocities
        velocities = [],
            allowMomentumBounce;

        // Animating Flag
        s.animating = false;

        // Touches information
        s.touches = {
            startX: 0,
            startY: 0,
            currentX: 0,
            currentY: 0,
            diff: 0
        };

        // Touch handlers
        var isTouchEvent, startMoving;
        s.onTouchStart = function (e) {
            if (e.originalEvent) e = e.originalEvent;
            isTouchEvent = e.type === 'touchstart';
            if (!isTouchEvent && 'which' in e && e.which === 3) return;
            if (s.params.noSwiping && findElementInEvent(e, '.' + s.params.noSwipingClass)) {
                s.allowClick = true;
                return;
            }
            if (s.params.swipeHandler) {
                if (!findElementInEvent(e, s.params.swipeHandler)) return;
            }

            var startX = s.touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
            var startY = s.touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;

            // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore
            if (s.device.ios && s.params.iOSEdgeSwipeDetection && startX <= s.params.iOSEdgeSwipeThreshold) {
                return;
            }

            isTouched = true;
            isMoved = false;
            allowTouchCallbacks = true;
            isScrolling = undefined;
            startMoving = undefined;
            s.touches.startX = startX;
            s.touches.startY = startY;
            touchStartTime = Date.now();
            s.allowClick = true;
            s.updateContainerSize();
            s.swipeDirection = undefined;
            if (s.params.threshold > 0) allowThresholdMove = false;
            if (e.type !== 'touchstart') {
                var preventDefault = true;
                if ($(e.target).is(formElements)) preventDefault = false;
                if (document.activeElement && $(document.activeElement).is(formElements)) {
                    document.activeElement.blur();
                }
                if (preventDefault) {
                    e.preventDefault();
                }
            }
            s.emit('onTouchStart', s, e);
        };

        s.onTouchMove = function (e) {
            if (e.originalEvent) e = e.originalEvent;
            if (isTouchEvent && e.type === 'mousemove') return;
            if (e.preventedByNestedSwiper) {
                s.touches.startX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
                s.touches.startY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;
                return;
            }
            if (s.params.onlyExternal) {
                // isMoved = true;
                s.allowClick = false;
                if (isTouched) {
                    s.touches.startX = s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
                    s.touches.startY = s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;
                    touchStartTime = Date.now();
                }
                return;
            }
            if (isTouchEvent && s.params.touchReleaseOnEdges && !s.params.loop) {
                if (!s.isHorizontal()) {
                    // Vertical
                    if (s.touches.currentY < s.touches.startY && s.translate <= s.maxTranslate() || s.touches.currentY > s.touches.startY && s.translate >= s.minTranslate()) {
                        return;
                    }
                } else {
                    if (s.touches.currentX < s.touches.startX && s.translate <= s.maxTranslate() || s.touches.currentX > s.touches.startX && s.translate >= s.minTranslate()) {
                        return;
                    }
                }
            }
            if (isTouchEvent && document.activeElement) {
                if (e.target === document.activeElement && $(e.target).is(formElements)) {
                    isMoved = true;
                    s.allowClick = false;
                    return;
                }
            }
            if (allowTouchCallbacks) {
                s.emit('onTouchMove', s, e);
            }
            if (e.targetTouches && e.targetTouches.length > 1) return;

            s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
            s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;

            if (typeof isScrolling === 'undefined') {
                var touchAngle;
                if (s.isHorizontal() && s.touches.currentY === s.touches.startY || !s.isHorizontal() && s.touches.currentX === s.touches.startX) {
                    isScrolling = false;
                } else {
                    touchAngle = Math.atan2(Math.abs(s.touches.currentY - s.touches.startY), Math.abs(s.touches.currentX - s.touches.startX)) * 180 / Math.PI;
                    isScrolling = s.isHorizontal() ? touchAngle > s.params.touchAngle : 90 - touchAngle > s.params.touchAngle;
                }
            }
            if (isScrolling) {
                s.emit('onTouchMoveOpposite', s, e);
            }
            if (typeof startMoving === 'undefined') {
                if (s.touches.currentX !== s.touches.startX || s.touches.currentY !== s.touches.startY) {
                    startMoving = true;
                }
            }
            if (!isTouched) return;
            if (isScrolling) {
                isTouched = false;
                return;
            }
            if (!startMoving) {
                return;
            }
            s.allowClick = false;
            s.emit('onSliderMove', s, e);
            e.preventDefault();
            if (s.params.touchMoveStopPropagation && !s.params.nested) {
                e.stopPropagation();
            }

            if (!isMoved) {
                if (params.loop) {
                    s.fixLoop();
                }
                startTranslate = s.getWrapperTranslate();
                s.setWrapperTransition(0);
                if (s.animating) {
                    s.wrapper.trigger('webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd');
                }
                if (s.params.autoplay && s.autoplaying) {
                    if (s.params.autoplayDisableOnInteraction) {
                        s.stopAutoplay();
                    } else {
                        s.pauseAutoplay();
                    }
                }
                allowMomentumBounce = false;
                //Grab Cursor
                if (s.params.grabCursor && (s.params.allowSwipeToNext === true || s.params.allowSwipeToPrev === true)) {
                    s.setGrabCursor(true);
                }
            }
            isMoved = true;

            var diff = s.touches.diff = s.isHorizontal() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;

            diff = diff * s.params.touchRatio;
            if (s.rtl) diff = -diff;

            s.swipeDirection = diff > 0 ? 'prev' : 'next';
            currentTranslate = diff + startTranslate;

            var disableParentSwiper = true;
            if (diff > 0 && currentTranslate > s.minTranslate()) {
                disableParentSwiper = false;
                if (s.params.resistance) currentTranslate = s.minTranslate() - 1 + Math.pow(-s.minTranslate() + startTranslate + diff, s.params.resistanceRatio);
            } else if (diff < 0 && currentTranslate < s.maxTranslate()) {
                disableParentSwiper = false;
                if (s.params.resistance) currentTranslate = s.maxTranslate() + 1 - Math.pow(s.maxTranslate() - startTranslate - diff, s.params.resistanceRatio);
            }

            if (disableParentSwiper) {
                e.preventedByNestedSwiper = true;
            }

            // Directions locks
            if (!s.params.allowSwipeToNext && s.swipeDirection === 'next' && currentTranslate < startTranslate) {
                currentTranslate = startTranslate;
            }
            if (!s.params.allowSwipeToPrev && s.swipeDirection === 'prev' && currentTranslate > startTranslate) {
                currentTranslate = startTranslate;
            }

            // Threshold
            if (s.params.threshold > 0) {
                if (Math.abs(diff) > s.params.threshold || allowThresholdMove) {
                    if (!allowThresholdMove) {
                        allowThresholdMove = true;
                        s.touches.startX = s.touches.currentX;
                        s.touches.startY = s.touches.currentY;
                        currentTranslate = startTranslate;
                        s.touches.diff = s.isHorizontal() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;
                        return;
                    }
                } else {
                    currentTranslate = startTranslate;
                    return;
                }
            }

            if (!s.params.followFinger) return;

            // Update active index in free mode
            if (s.params.freeMode || s.params.watchSlidesProgress) {
                s.updateActiveIndex();
            }
            if (s.params.freeMode) {
                //Velocity
                if (velocities.length === 0) {
                    velocities.push({
                        position: s.touches[s.isHorizontal() ? 'startX' : 'startY'],
                        time: touchStartTime
                    });
                }
                velocities.push({
                    position: s.touches[s.isHorizontal() ? 'currentX' : 'currentY'],
                    time: new window.Date().getTime()
                });
            }
            // Update progress
            s.updateProgress(currentTranslate);
            // Update translate
            s.setWrapperTranslate(currentTranslate);
        };
        s.onTouchEnd = function (e) {
            if (e.originalEvent) e = e.originalEvent;
            if (allowTouchCallbacks) {
                s.emit('onTouchEnd', s, e);
            }
            allowTouchCallbacks = false;
            if (!isTouched) return;
            //Return Grab Cursor
            if (s.params.grabCursor && isMoved && isTouched && (s.params.allowSwipeToNext === true || s.params.allowSwipeToPrev === true)) {
                s.setGrabCursor(false);
            }

            // Time diff
            var touchEndTime = Date.now();
            var timeDiff = touchEndTime - touchStartTime;

            // Tap, doubleTap, Click
            if (s.allowClick) {
                s.updateClickedSlide(e);
                s.emit('onTap', s, e);
                if (timeDiff < 300 && touchEndTime - lastClickTime > 300) {
                    if (clickTimeout) clearTimeout(clickTimeout);
                    clickTimeout = setTimeout(function () {
                        if (!s) return;
                        if (s.params.paginationHide && s.paginationContainer.length > 0 && !$(e.target).hasClass(s.params.bulletClass)) {
                            s.paginationContainer.toggleClass(s.params.paginationHiddenClass);
                        }
                        s.emit('onClick', s, e);
                    }, 300);
                }
                if (timeDiff < 300 && touchEndTime - lastClickTime < 300) {
                    if (clickTimeout) clearTimeout(clickTimeout);
                    s.emit('onDoubleTap', s, e);
                }
            }

            lastClickTime = Date.now();
            setTimeout(function () {
                if (s) s.allowClick = true;
            }, 0);

            if (!isTouched || !isMoved || !s.swipeDirection || s.touches.diff === 0 || currentTranslate === startTranslate) {
                isTouched = isMoved = false;
                return;
            }
            isTouched = isMoved = false;

            var currentPos;
            if (s.params.followFinger) {
                currentPos = s.rtl ? s.translate : -s.translate;
            } else {
                currentPos = -currentTranslate;
            }
            if (s.params.freeMode) {
                if (currentPos < -s.minTranslate()) {
                    s.slideTo(s.activeIndex);
                    return;
                } else if (currentPos > -s.maxTranslate()) {
                    if (s.slides.length < s.snapGrid.length) {
                        s.slideTo(s.snapGrid.length - 1);
                    } else {
                        s.slideTo(s.slides.length - 1);
                    }
                    return;
                }

                if (s.params.freeModeMomentum) {
                    if (velocities.length > 1) {
                        var lastMoveEvent = velocities.pop(),
                            velocityEvent = velocities.pop();

                        var distance = lastMoveEvent.position - velocityEvent.position;
                        var time = lastMoveEvent.time - velocityEvent.time;
                        s.velocity = distance / time;
                        s.velocity = s.velocity / 2;
                        if (Math.abs(s.velocity) < s.params.freeModeMinimumVelocity) {
                            s.velocity = 0;
                        }
                        // this implies that the user stopped moving a finger then released.
                        // There would be no events with distance zero, so the last event is stale.
                        if (time > 150 || new window.Date().getTime() - lastMoveEvent.time > 300) {
                            s.velocity = 0;
                        }
                    } else {
                        s.velocity = 0;
                    }
                    s.velocity = s.velocity * s.params.freeModeMomentumVelocityRatio;

                    velocities.length = 0;
                    var momentumDuration = 1000 * s.params.freeModeMomentumRatio;
                    var momentumDistance = s.velocity * momentumDuration;

                    var newPosition = s.translate + momentumDistance;
                    if (s.rtl) newPosition = -newPosition;
                    var doBounce = false;
                    var afterBouncePosition;
                    var bounceAmount = Math.abs(s.velocity) * 20 * s.params.freeModeMomentumBounceRatio;
                    if (newPosition < s.maxTranslate()) {
                        if (s.params.freeModeMomentumBounce) {
                            if (newPosition + s.maxTranslate() < -bounceAmount) {
                                newPosition = s.maxTranslate() - bounceAmount;
                            }
                            afterBouncePosition = s.maxTranslate();
                            doBounce = true;
                            allowMomentumBounce = true;
                        } else {
                            newPosition = s.maxTranslate();
                        }
                    } else if (newPosition > s.minTranslate()) {
                        if (s.params.freeModeMomentumBounce) {
                            if (newPosition - s.minTranslate() > bounceAmount) {
                                newPosition = s.minTranslate() + bounceAmount;
                            }
                            afterBouncePosition = s.minTranslate();
                            doBounce = true;
                            allowMomentumBounce = true;
                        } else {
                            newPosition = s.minTranslate();
                        }
                    } else if (s.params.freeModeSticky) {
                        var j = 0,
                            nextSlide;
                        for (j = 0; j < s.snapGrid.length; j += 1) {
                            if (s.snapGrid[j] > -newPosition) {
                                nextSlide = j;
                                break;
                            }
                        }
                        if (Math.abs(s.snapGrid[nextSlide] - newPosition) < Math.abs(s.snapGrid[nextSlide - 1] - newPosition) || s.swipeDirection === 'next') {
                            newPosition = s.snapGrid[nextSlide];
                        } else {
                            newPosition = s.snapGrid[nextSlide - 1];
                        }
                        if (!s.rtl) newPosition = -newPosition;
                    }
                    //Fix duration
                    if (s.velocity !== 0) {
                        if (s.rtl) {
                            momentumDuration = Math.abs((-newPosition - s.translate) / s.velocity);
                        } else {
                            momentumDuration = Math.abs((newPosition - s.translate) / s.velocity);
                        }
                    } else if (s.params.freeModeSticky) {
                        s.slideReset();
                        return;
                    }

                    if (s.params.freeModeMomentumBounce && doBounce) {
                        s.updateProgress(afterBouncePosition);
                        s.setWrapperTransition(momentumDuration);
                        s.setWrapperTranslate(newPosition);
                        s.onTransitionStart();
                        s.animating = true;
                        s.wrapper.transitionEnd(function () {
                            if (!s || !allowMomentumBounce) return;
                            s.emit('onMomentumBounce', s);

                            s.setWrapperTransition(s.params.speed);
                            s.setWrapperTranslate(afterBouncePosition);
                            s.wrapper.transitionEnd(function () {
                                if (!s) return;
                                s.onTransitionEnd();
                            });
                        });
                    } else if (s.velocity) {
                        s.updateProgress(newPosition);
                        s.setWrapperTransition(momentumDuration);
                        s.setWrapperTranslate(newPosition);
                        s.onTransitionStart();
                        if (!s.animating) {
                            s.animating = true;
                            s.wrapper.transitionEnd(function () {
                                if (!s) return;
                                s.onTransitionEnd();
                            });
                        }
                    } else {
                        s.updateProgress(newPosition);
                    }

                    s.updateActiveIndex();
                }
                if (!s.params.freeModeMomentum || timeDiff >= s.params.longSwipesMs) {
                    s.updateProgress();
                    s.updateActiveIndex();
                }
                return;
            }

            // Find current slide
            var i,
                stopIndex = 0,
                groupSize = s.slidesSizesGrid[0];
            for (i = 0; i < s.slidesGrid.length; i += s.params.slidesPerGroup) {
                if (typeof s.slidesGrid[i + s.params.slidesPerGroup] !== 'undefined') {
                    if (currentPos >= s.slidesGrid[i] && currentPos < s.slidesGrid[i + s.params.slidesPerGroup]) {
                        stopIndex = i;
                        groupSize = s.slidesGrid[i + s.params.slidesPerGroup] - s.slidesGrid[i];
                    }
                } else {
                    if (currentPos >= s.slidesGrid[i]) {
                        stopIndex = i;
                        groupSize = s.slidesGrid[s.slidesGrid.length - 1] - s.slidesGrid[s.slidesGrid.length - 2];
                    }
                }
            }

            // Find current slide size
            var ratio = (currentPos - s.slidesGrid[stopIndex]) / groupSize;

            if (timeDiff > s.params.longSwipesMs) {
                // Long touches
                if (!s.params.longSwipes) {
                    s.slideTo(s.activeIndex);
                    return;
                }
                if (s.swipeDirection === 'next') {
                    if (ratio >= s.params.longSwipesRatio) s.slideTo(stopIndex + s.params.slidesPerGroup);else s.slideTo(stopIndex);
                }
                if (s.swipeDirection === 'prev') {
                    if (ratio > 1 - s.params.longSwipesRatio) s.slideTo(stopIndex + s.params.slidesPerGroup);else s.slideTo(stopIndex);
                }
            } else {
                // Short swipes
                if (!s.params.shortSwipes) {
                    s.slideTo(s.activeIndex);
                    return;
                }
                if (s.swipeDirection === 'next') {
                    s.slideTo(stopIndex + s.params.slidesPerGroup);
                }
                if (s.swipeDirection === 'prev') {
                    s.slideTo(stopIndex);
                }
            }
        };
        /*=========================
          Transitions
          ===========================*/
        s._slideTo = function (slideIndex, speed) {
            return s.slideTo(slideIndex, speed, true, true);
        };
        s.slideTo = function (slideIndex, speed, runCallbacks, internal) {
            if (typeof runCallbacks === 'undefined') runCallbacks = true;
            if (typeof slideIndex === 'undefined') slideIndex = 0;
            if (slideIndex < 0) slideIndex = 0;
            s.snapIndex = Math.floor(slideIndex / s.params.slidesPerGroup);
            if (s.snapIndex >= s.snapGrid.length) s.snapIndex = s.snapGrid.length - 1;

            var translate = -s.snapGrid[s.snapIndex];
            // Stop autoplay
            if (s.params.autoplay && s.autoplaying) {
                if (internal || !s.params.autoplayDisableOnInteraction) {
                    s.pauseAutoplay(speed);
                } else {
                    s.stopAutoplay();
                }
            }
            // Update progress
            s.updateProgress(translate);

            // Normalize slideIndex
            if (s.params.normalizeSlideIndex) {
                for (var i = 0; i < s.slidesGrid.length; i++) {
                    if (-Math.floor(translate * 100) >= Math.floor(s.slidesGrid[i] * 100)) {
                        slideIndex = i;
                    }
                }
            }

            // Directions locks
            if (!s.params.allowSwipeToNext && translate < s.translate && translate < s.minTranslate()) {
                return false;
            }
            if (!s.params.allowSwipeToPrev && translate > s.translate && translate > s.maxTranslate()) {
                if ((s.activeIndex || 0) !== slideIndex) return false;
            }

            // Update Index
            if (typeof speed === 'undefined') speed = s.params.speed;
            s.previousIndex = s.activeIndex || 0;
            s.activeIndex = slideIndex;
            s.updateRealIndex();
            if (s.rtl && -translate === s.translate || !s.rtl && translate === s.translate) {
                // Update Height
                if (s.params.autoHeight) {
                    s.updateAutoHeight();
                }
                s.updateClasses();
                if (s.params.effect !== 'slide') {
                    s.setWrapperTranslate(translate);
                }
                return false;
            }
            s.updateClasses();
            s.onTransitionStart(runCallbacks);

            if (speed === 0 || s.browser.lteIE9) {
                s.setWrapperTranslate(translate);
                s.setWrapperTransition(0);
                s.onTransitionEnd(runCallbacks);
            } else {
                s.setWrapperTranslate(translate);
                s.setWrapperTransition(speed);
                if (!s.animating) {
                    s.animating = true;
                    s.wrapper.transitionEnd(function () {
                        if (!s) return;
                        s.onTransitionEnd(runCallbacks);
                    });
                }
            }

            return true;
        };

        s.onTransitionStart = function (runCallbacks) {
            if (typeof runCallbacks === 'undefined') runCallbacks = true;
            if (s.params.autoHeight) {
                s.updateAutoHeight();
            }
            if (s.lazy) s.lazy.onTransitionStart();
            if (runCallbacks) {
                s.emit('onTransitionStart', s);
                if (s.activeIndex !== s.previousIndex) {
                    s.emit('onSlideChangeStart', s);
                    if (s.activeIndex > s.previousIndex) {
                        s.emit('onSlideNextStart', s);
                    } else {
                        s.emit('onSlidePrevStart', s);
                    }
                }
            }
        };
        s.onTransitionEnd = function (runCallbacks) {
            s.animating = false;
            s.setWrapperTransition(0);
            if (typeof runCallbacks === 'undefined') runCallbacks = true;
            if (s.lazy) s.lazy.onTransitionEnd();
            if (runCallbacks) {
                s.emit('onTransitionEnd', s);
                if (s.activeIndex !== s.previousIndex) {
                    s.emit('onSlideChangeEnd', s);
                    if (s.activeIndex > s.previousIndex) {
                        s.emit('onSlideNextEnd', s);
                    } else {
                        s.emit('onSlidePrevEnd', s);
                    }
                }
            }
            if (s.params.history && s.history) {
                s.history.setHistory(s.params.history, s.activeIndex);
            }
            if (s.params.hashnav && s.hashnav) {
                s.hashnav.setHash();
            }
        };
        s.slideNext = function (runCallbacks, speed, internal) {
            if (s.params.loop) {
                if (s.animating) return false;
                s.fixLoop();
                var clientLeft = s.container[0].clientLeft;
                return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);
            } else return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);
        };
        s._slideNext = function (speed) {
            return s.slideNext(true, speed, true);
        };
        s.slidePrev = function (runCallbacks, speed, internal) {
            if (s.params.loop) {
                if (s.animating) return false;
                s.fixLoop();
                var clientLeft = s.container[0].clientLeft;
                return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);
            } else return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);
        };
        s._slidePrev = function (speed) {
            return s.slidePrev(true, speed, true);
        };
        s.slideReset = function (runCallbacks, speed, internal) {
            return s.slideTo(s.activeIndex, speed, runCallbacks);
        };

        s.disableTouchControl = function () {
            s.params.onlyExternal = true;
            return true;
        };
        s.enableTouchControl = function () {
            s.params.onlyExternal = false;
            return true;
        };

        /*=========================
          Translate/transition helpers
          ===========================*/
        s.setWrapperTransition = function (duration, byController) {
            s.wrapper.transition(duration);
            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {
                s.effects[s.params.effect].setTransition(duration);
            }
            if (s.params.parallax && s.parallax) {
                s.parallax.setTransition(duration);
            }
            if (s.params.scrollbar && s.scrollbar) {
                s.scrollbar.setTransition(duration);
            }
            if (s.params.control && s.controller) {
                s.controller.setTransition(duration, byController);
            }
            s.emit('onSetTransition', s, duration);
        };
        s.setWrapperTranslate = function (translate, updateActiveIndex, byController) {
            var x = 0,
                y = 0,
                z = 0;
            if (s.isHorizontal()) {
                x = s.rtl ? -translate : translate;
            } else {
                y = translate;
            }

            if (s.params.roundLengths) {
                x = round(x);
                y = round(y);
            }

            if (!s.params.virtualTranslate) {
                if (s.support.transforms3d) s.wrapper.transform('translate3d(' + x + 'px, ' + y + 'px, ' + z + 'px)');else s.wrapper.transform('translate(' + x + 'px, ' + y + 'px)');
            }

            s.translate = s.isHorizontal() ? x : y;

            // Check if we need to update progress
            var progress;
            var translatesDiff = s.maxTranslate() - s.minTranslate();
            if (translatesDiff === 0) {
                progress = 0;
            } else {
                progress = (translate - s.minTranslate()) / translatesDiff;
            }
            if (progress !== s.progress) {
                s.updateProgress(translate);
            }

            if (updateActiveIndex) s.updateActiveIndex();
            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {
                s.effects[s.params.effect].setTranslate(s.translate);
            }
            if (s.params.parallax && s.parallax) {
                s.parallax.setTranslate(s.translate);
            }
            if (s.params.scrollbar && s.scrollbar) {
                s.scrollbar.setTranslate(s.translate);
            }
            if (s.params.control && s.controller) {
                s.controller.setTranslate(s.translate, byController);
            }
            s.emit('onSetTranslate', s, s.translate);
        };

        s.getTranslate = function (el, axis) {
            var matrix, curTransform, curStyle, transformMatrix;

            // automatic axis detection
            if (typeof axis === 'undefined') {
                axis = 'x';
            }

            if (s.params.virtualTranslate) {
                return s.rtl ? -s.translate : s.translate;
            }

            curStyle = window.getComputedStyle(el, null);
            if (window.WebKitCSSMatrix) {
                curTransform = curStyle.transform || curStyle.webkitTransform;
                if (curTransform.split(',').length > 6) {
                    curTransform = curTransform.split(', ').map(function (a) {
                        return a.replace(',', '.');
                    }).join(', ');
                }
                // Some old versions of Webkit choke when 'none' is passed; pass
                // empty string instead in this case
                transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);
            } else {
                transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');
                matrix = transformMatrix.toString().split(',');
            }

            if (axis === 'x') {
                //Latest Chrome and webkits Fix
                if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;
                //Crazy IE10 Matrix
                else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);
                    //Normal Browsers
                    else curTransform = parseFloat(matrix[4]);
            }
            if (axis === 'y') {
                //Latest Chrome and webkits Fix
                if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;
                //Crazy IE10 Matrix
                else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);
                    //Normal Browsers
                    else curTransform = parseFloat(matrix[5]);
            }
            if (s.rtl && curTransform) curTransform = -curTransform;
            return curTransform || 0;
        };
        s.getWrapperTranslate = function (axis) {
            if (typeof axis === 'undefined') {
                axis = s.isHorizontal() ? 'x' : 'y';
            }
            return s.getTranslate(s.wrapper[0], axis);
        };

        /*=========================
          Observer
          ===========================*/
        s.observers = [];
        function initObserver(target, options) {
            options = options || {};
            // create an observer instance
            var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;
            var observer = new ObserverFunc(function (mutations) {
                mutations.forEach(function (mutation) {
                    s.onResize(true);
                    s.emit('onObserverUpdate', s, mutation);
                });
            });

            observer.observe(target, {
                attributes: typeof options.attributes === 'undefined' ? true : options.attributes,
                childList: typeof options.childList === 'undefined' ? true : options.childList,
                characterData: typeof options.characterData === 'undefined' ? true : options.characterData
            });

            s.observers.push(observer);
        }
        s.initObservers = function () {
            if (s.params.observeParents) {
                var containerParents = s.container.parents();
                for (var i = 0; i < containerParents.length; i++) {
                    initObserver(containerParents[i]);
                }
            }

            // Observe container
            initObserver(s.container[0], { childList: false });

            // Observe wrapper
            initObserver(s.wrapper[0], { attributes: false });
        };
        s.disconnectObservers = function () {
            for (var i = 0; i < s.observers.length; i++) {
                s.observers[i].disconnect();
            }
            s.observers = [];
        };
        /*=========================
          Loop
          ===========================*/
        // Create looped slides
        s.createLoop = function () {
            // Remove duplicated slides
            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();

            var slides = s.wrapper.children('.' + s.params.slideClass);

            if (s.params.slidesPerView === 'auto' && !s.params.loopedSlides) s.params.loopedSlides = slides.length;

            s.loopedSlides = parseInt(s.params.loopedSlides || s.params.slidesPerView, 10);
            s.loopedSlides = s.loopedSlides + s.params.loopAdditionalSlides;
            if (s.loopedSlides > slides.length) {
                s.loopedSlides = slides.length;
            }

            var prependSlides = [],
                appendSlides = [],
                i;
            slides.each(function (index, el) {
                var slide = $(this);
                if (index < s.loopedSlides) appendSlides.push(el);
                if (index < slides.length && index >= slides.length - s.loopedSlides) prependSlides.push(el);
                slide.attr('data-swiper-slide-index', index);
            });
            for (i = 0; i < appendSlides.length; i++) {
                s.wrapper.append($(appendSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));
            }
            for (i = prependSlides.length - 1; i >= 0; i--) {
                s.wrapper.prepend($(prependSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));
            }
        };
        s.destroyLoop = function () {
            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();
            s.slides.removeAttr('data-swiper-slide-index');
        };
        s.reLoop = function (updatePosition) {
            var oldIndex = s.activeIndex - s.loopedSlides;
            s.destroyLoop();
            s.createLoop();
            s.updateSlidesSize();
            if (updatePosition) {
                s.slideTo(oldIndex + s.loopedSlides, 0, false);
            }
        };
        s.fixLoop = function () {
            var newIndex;
            //Fix For Negative Oversliding
            if (s.activeIndex < s.loopedSlides) {
                newIndex = s.slides.length - s.loopedSlides * 3 + s.activeIndex;
                newIndex = newIndex + s.loopedSlides;
                s.slideTo(newIndex, 0, false, true);
            }
            //Fix For Positive Oversliding
            else if (s.params.slidesPerView === 'auto' && s.activeIndex >= s.loopedSlides * 2 || s.activeIndex > s.slides.length - s.params.slidesPerView * 2) {
                    newIndex = -s.slides.length + s.activeIndex + s.loopedSlides;
                    newIndex = newIndex + s.loopedSlides;
                    s.slideTo(newIndex, 0, false, true);
                }
        };
        /*=========================
          Append/Prepend/Remove Slides
          ===========================*/
        s.appendSlide = function (slides) {
            if (s.params.loop) {
                s.destroyLoop();
            }
            if ((typeof slides === 'undefined' ? 'undefined' : _typeof(slides)) === 'object' && slides.length) {
                for (var i = 0; i < slides.length; i++) {
                    if (slides[i]) s.wrapper.append(slides[i]);
                }
            } else {
                s.wrapper.append(slides);
            }
            if (s.params.loop) {
                s.createLoop();
            }
            if (!(s.params.observer && s.support.observer)) {
                s.update(true);
            }
        };
        s.prependSlide = function (slides) {
            if (s.params.loop) {
                s.destroyLoop();
            }
            var newActiveIndex = s.activeIndex + 1;
            if ((typeof slides === 'undefined' ? 'undefined' : _typeof(slides)) === 'object' && slides.length) {
                for (var i = 0; i < slides.length; i++) {
                    if (slides[i]) s.wrapper.prepend(slides[i]);
                }
                newActiveIndex = s.activeIndex + slides.length;
            } else {
                s.wrapper.prepend(slides);
            }
            if (s.params.loop) {
                s.createLoop();
            }
            if (!(s.params.observer && s.support.observer)) {
                s.update(true);
            }
            s.slideTo(newActiveIndex, 0, false);
        };
        s.removeSlide = function (slidesIndexes) {
            if (s.params.loop) {
                s.destroyLoop();
                s.slides = s.wrapper.children('.' + s.params.slideClass);
            }
            var newActiveIndex = s.activeIndex,
                indexToRemove;
            if ((typeof slidesIndexes === 'undefined' ? 'undefined' : _typeof(slidesIndexes)) === 'object' && slidesIndexes.length) {
                for (var i = 0; i < slidesIndexes.length; i++) {
                    indexToRemove = slidesIndexes[i];
                    if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();
                    if (indexToRemove < newActiveIndex) newActiveIndex--;
                }
                newActiveIndex = Math.max(newActiveIndex, 0);
            } else {
                indexToRemove = slidesIndexes;
                if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();
                if (indexToRemove < newActiveIndex) newActiveIndex--;
                newActiveIndex = Math.max(newActiveIndex, 0);
            }

            if (s.params.loop) {
                s.createLoop();
            }

            if (!(s.params.observer && s.support.observer)) {
                s.update(true);
            }
            if (s.params.loop) {
                s.slideTo(newActiveIndex + s.loopedSlides, 0, false);
            } else {
                s.slideTo(newActiveIndex, 0, false);
            }
        };
        s.removeAllSlides = function () {
            var slidesIndexes = [];
            for (var i = 0; i < s.slides.length; i++) {
                slidesIndexes.push(i);
            }
            s.removeSlide(slidesIndexes);
        };

        /*=========================
          Effects
          ===========================*/
        s.effects = {
            fade: {
                setTranslate: function setTranslate() {
                    for (var i = 0; i < s.slides.length; i++) {
                        var slide = s.slides.eq(i);
                        var offset = slide[0].swiperSlideOffset;
                        var tx = -offset;
                        if (!s.params.virtualTranslate) tx = tx - s.translate;
                        var ty = 0;
                        if (!s.isHorizontal()) {
                            ty = tx;
                            tx = 0;
                        }
                        var slideOpacity = s.params.fade.crossFade ? Math.max(1 - Math.abs(slide[0].progress), 0) : 1 + Math.min(Math.max(slide[0].progress, -1), 0);
                        slide.css({
                            opacity: slideOpacity
                        }).transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px)');
                    }
                },
                setTransition: function setTransition(duration) {
                    s.slides.transition(duration);
                    if (s.params.virtualTranslate && duration !== 0) {
                        var eventTriggered = false;
                        s.slides.transitionEnd(function () {
                            if (eventTriggered) return;
                            if (!s) return;
                            eventTriggered = true;
                            s.animating = false;
                            var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];
                            for (var i = 0; i < triggerEvents.length; i++) {
                                s.wrapper.trigger(triggerEvents[i]);
                            }
                        });
                    }
                }
            },
            flip: {
                setTranslate: function setTranslate() {
                    for (var i = 0; i < s.slides.length; i++) {
                        var slide = s.slides.eq(i);
                        var progress = slide[0].progress;
                        if (s.params.flip.limitRotation) {
                            progress = Math.max(Math.min(slide[0].progress, 1), -1);
                        }
                        var offset = slide[0].swiperSlideOffset;
                        var rotate = -180 * progress,
                            rotateY = rotate,
                            rotateX = 0,
                            tx = -offset,
                            ty = 0;
                        if (!s.isHorizontal()) {
                            ty = tx;
                            tx = 0;
                            rotateX = -rotateY;
                            rotateY = 0;
                        } else if (s.rtl) {
                            rotateY = -rotateY;
                        }

                        slide[0].style.zIndex = -Math.abs(Math.round(progress)) + s.slides.length;

                        if (s.params.flip.slideShadows) {
                            //Set shadows
                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');
                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');
                            if (shadowBefore.length === 0) {
                                shadowBefore = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '"></div>');
                                slide.append(shadowBefore);
                            }
                            if (shadowAfter.length === 0) {
                                shadowAfter = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '"></div>');
                                slide.append(shadowAfter);
                            }
                            if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);
                            if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);
                        }

                        slide.transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px) rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)');
                    }
                },
                setTransition: function setTransition(duration) {
                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
                    if (s.params.virtualTranslate && duration !== 0) {
                        var eventTriggered = false;
                        s.slides.eq(s.activeIndex).transitionEnd(function () {
                            if (eventTriggered) return;
                            if (!s) return;
                            if (!$(this).hasClass(s.params.slideActiveClass)) return;
                            eventTriggered = true;
                            s.animating = false;
                            var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];
                            for (var i = 0; i < triggerEvents.length; i++) {
                                s.wrapper.trigger(triggerEvents[i]);
                            }
                        });
                    }
                }
            },
            cube: {
                setTranslate: function setTranslate() {
                    var wrapperRotate = 0,
                        cubeShadow;
                    if (s.params.cube.shadow) {
                        if (s.isHorizontal()) {
                            cubeShadow = s.wrapper.find('.swiper-cube-shadow');
                            if (cubeShadow.length === 0) {
                                cubeShadow = $('<div class="swiper-cube-shadow"></div>');
                                s.wrapper.append(cubeShadow);
                            }
                            cubeShadow.css({ height: s.width + 'px' });
                        } else {
                            cubeShadow = s.container.find('.swiper-cube-shadow');
                            if (cubeShadow.length === 0) {
                                cubeShadow = $('<div class="swiper-cube-shadow"></div>');
                                s.container.append(cubeShadow);
                            }
                        }
                    }
                    for (var i = 0; i < s.slides.length; i++) {
                        var slide = s.slides.eq(i);
                        var slideAngle = i * 90;
                        var round = Math.floor(slideAngle / 360);
                        if (s.rtl) {
                            slideAngle = -slideAngle;
                            round = Math.floor(-slideAngle / 360);
                        }
                        var progress = Math.max(Math.min(slide[0].progress, 1), -1);
                        var tx = 0,
                            ty = 0,
                            tz = 0;
                        if (i % 4 === 0) {
                            tx = -round * 4 * s.size;
                            tz = 0;
                        } else if ((i - 1) % 4 === 0) {
                            tx = 0;
                            tz = -round * 4 * s.size;
                        } else if ((i - 2) % 4 === 0) {
                            tx = s.size + round * 4 * s.size;
                            tz = s.size;
                        } else if ((i - 3) % 4 === 0) {
                            tx = -s.size;
                            tz = 3 * s.size + s.size * 4 * round;
                        }
                        if (s.rtl) {
                            tx = -tx;
                        }

                        if (!s.isHorizontal()) {
                            ty = tx;
                            tx = 0;
                        }

                        var transform = 'rotateX(' + (s.isHorizontal() ? 0 : -slideAngle) + 'deg) rotateY(' + (s.isHorizontal() ? slideAngle : 0) + 'deg) translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px)';
                        if (progress <= 1 && progress > -1) {
                            wrapperRotate = i * 90 + progress * 90;
                            if (s.rtl) wrapperRotate = -i * 90 - progress * 90;
                        }
                        slide.transform(transform);
                        if (s.params.cube.slideShadows) {
                            //Set shadows
                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');
                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');
                            if (shadowBefore.length === 0) {
                                shadowBefore = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '"></div>');
                                slide.append(shadowBefore);
                            }
                            if (shadowAfter.length === 0) {
                                shadowAfter = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '"></div>');
                                slide.append(shadowAfter);
                            }
                            if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);
                            if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);
                        }
                    }
                    s.wrapper.css({
                        '-webkit-transform-origin': '50% 50% -' + s.size / 2 + 'px',
                        '-moz-transform-origin': '50% 50% -' + s.size / 2 + 'px',
                        '-ms-transform-origin': '50% 50% -' + s.size / 2 + 'px',
                        'transform-origin': '50% 50% -' + s.size / 2 + 'px'
                    });

                    if (s.params.cube.shadow) {
                        if (s.isHorizontal()) {
                            cubeShadow.transform('translate3d(0px, ' + (s.width / 2 + s.params.cube.shadowOffset) + 'px, ' + -s.width / 2 + 'px) rotateX(90deg) rotateZ(0deg) scale(' + s.params.cube.shadowScale + ')');
                        } else {
                            var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;
                            var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);
                            var scale1 = s.params.cube.shadowScale,
                                scale2 = s.params.cube.shadowScale / multiplier,
                                offset = s.params.cube.shadowOffset;
                            cubeShadow.transform('scale3d(' + scale1 + ', 1, ' + scale2 + ') translate3d(0px, ' + (s.height / 2 + offset) + 'px, ' + -s.height / 2 / scale2 + 'px) rotateX(-90deg)');
                        }
                    }
                    var zFactor = s.isSafari || s.isUiWebView ? -s.size / 2 : 0;
                    s.wrapper.transform('translate3d(0px,0,' + zFactor + 'px) rotateX(' + (s.isHorizontal() ? 0 : wrapperRotate) + 'deg) rotateY(' + (s.isHorizontal() ? -wrapperRotate : 0) + 'deg)');
                },
                setTransition: function setTransition(duration) {
                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
                    if (s.params.cube.shadow && !s.isHorizontal()) {
                        s.container.find('.swiper-cube-shadow').transition(duration);
                    }
                }
            },
            coverflow: {
                setTranslate: function setTranslate() {
                    var transform = s.translate;
                    var center = s.isHorizontal() ? -transform + s.width / 2 : -transform + s.height / 2;
                    var rotate = s.isHorizontal() ? s.params.coverflow.rotate : -s.params.coverflow.rotate;
                    var translate = s.params.coverflow.depth;
                    //Each slide offset from center
                    for (var i = 0, length = s.slides.length; i < length; i++) {
                        var slide = s.slides.eq(i);
                        var slideSize = s.slidesSizesGrid[i];
                        var slideOffset = slide[0].swiperSlideOffset;
                        var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * s.params.coverflow.modifier;

                        var rotateY = s.isHorizontal() ? rotate * offsetMultiplier : 0;
                        var rotateX = s.isHorizontal() ? 0 : rotate * offsetMultiplier;
                        // var rotateZ = 0
                        var translateZ = -translate * Math.abs(offsetMultiplier);

                        var translateY = s.isHorizontal() ? 0 : s.params.coverflow.stretch * offsetMultiplier;
                        var translateX = s.isHorizontal() ? s.params.coverflow.stretch * offsetMultiplier : 0;

                        //Fix for ultra small values
                        if (Math.abs(translateX) < 0.001) translateX = 0;
                        if (Math.abs(translateY) < 0.001) translateY = 0;
                        if (Math.abs(translateZ) < 0.001) translateZ = 0;
                        if (Math.abs(rotateY) < 0.001) rotateY = 0;
                        if (Math.abs(rotateX) < 0.001) rotateX = 0;

                        var slideTransform = 'translate3d(' + translateX + 'px,' + translateY + 'px,' + translateZ + 'px)  rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)';

                        slide.transform(slideTransform);
                        slide[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;
                        if (s.params.coverflow.slideShadows) {
                            //Set shadows
                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');
                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');
                            if (shadowBefore.length === 0) {
                                shadowBefore = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '"></div>');
                                slide.append(shadowBefore);
                            }
                            if (shadowAfter.length === 0) {
                                shadowAfter = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '"></div>');
                                slide.append(shadowAfter);
                            }
                            if (shadowBefore.length) shadowBefore[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;
                            if (shadowAfter.length) shadowAfter[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;
                        }
                    }

                    //Set correct perspective for IE10
                    if (s.browser.ie) {
                        var ws = s.wrapper[0].style;
                        ws.perspectiveOrigin = center + 'px 50%';
                    }
                },
                setTransition: function setTransition(duration) {
                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
                }
            }
        };

        /*=========================
          Images Lazy Loading
          ===========================*/
        s.lazy = {
            initialImageLoaded: false,
            loadImageInSlide: function loadImageInSlide(index, loadInDuplicate) {
                if (typeof index === 'undefined') return;
                if (typeof loadInDuplicate === 'undefined') loadInDuplicate = true;
                if (s.slides.length === 0) return;

                var slide = s.slides.eq(index);
                var img = slide.find('.' + s.params.lazyLoadingClass + ':not(.' + s.params.lazyStatusLoadedClass + '):not(.' + s.params.lazyStatusLoadingClass + ')');
                if (slide.hasClass(s.params.lazyLoadingClass) && !slide.hasClass(s.params.lazyStatusLoadedClass) && !slide.hasClass(s.params.lazyStatusLoadingClass)) {
                    img = img.add(slide[0]);
                }
                if (img.length === 0) return;

                img.each(function () {
                    var _img = $(this);
                    _img.addClass(s.params.lazyStatusLoadingClass);
                    var background = _img.attr('data-background');
                    var src = _img.attr('data-src'),
                        srcset = _img.attr('data-srcset'),
                        sizes = _img.attr('data-sizes');
                    s.loadImage(_img[0], src || background, srcset, sizes, false, function () {
                        if (typeof s === 'undefined' || s === null || !s) return;
                        if (background) {
                            _img.css('background-image', 'url("' + background + '")');
                            _img.removeAttr('data-background');
                        } else {
                            if (srcset) {
                                _img.attr('srcset', srcset);
                                _img.removeAttr('data-srcset');
                            }
                            if (sizes) {
                                _img.attr('sizes', sizes);
                                _img.removeAttr('data-sizes');
                            }
                            if (src) {
                                _img.attr('src', src);
                                _img.removeAttr('data-src');
                            }
                        }

                        _img.addClass(s.params.lazyStatusLoadedClass).removeClass(s.params.lazyStatusLoadingClass);
                        slide.find('.' + s.params.lazyPreloaderClass + ', .' + s.params.preloaderClass).remove();
                        if (s.params.loop && loadInDuplicate) {
                            var slideOriginalIndex = slide.attr('data-swiper-slide-index');
                            if (slide.hasClass(s.params.slideDuplicateClass)) {
                                var originalSlide = s.wrapper.children('[data-swiper-slide-index="' + slideOriginalIndex + '"]:not(.' + s.params.slideDuplicateClass + ')');
                                s.lazy.loadImageInSlide(originalSlide.index(), false);
                            } else {
                                var duplicatedSlide = s.wrapper.children('.' + s.params.slideDuplicateClass + '[data-swiper-slide-index="' + slideOriginalIndex + '"]');
                                s.lazy.loadImageInSlide(duplicatedSlide.index(), false);
                            }
                        }
                        s.emit('onLazyImageReady', s, slide[0], _img[0]);
                    });

                    s.emit('onLazyImageLoad', s, slide[0], _img[0]);
                });
            },
            load: function load() {
                var i;
                var slidesPerView = s.params.slidesPerView;
                if (slidesPerView === 'auto') {
                    slidesPerView = 0;
                }
                if (!s.lazy.initialImageLoaded) s.lazy.initialImageLoaded = true;
                if (s.params.watchSlidesVisibility) {
                    s.wrapper.children('.' + s.params.slideVisibleClass).each(function () {
                        s.lazy.loadImageInSlide($(this).index());
                    });
                } else {
                    if (slidesPerView > 1) {
                        for (i = s.activeIndex; i < s.activeIndex + slidesPerView; i++) {
                            if (s.slides[i]) s.lazy.loadImageInSlide(i);
                        }
                    } else {
                        s.lazy.loadImageInSlide(s.activeIndex);
                    }
                }
                if (s.params.lazyLoadingInPrevNext) {
                    if (slidesPerView > 1 || s.params.lazyLoadingInPrevNextAmount && s.params.lazyLoadingInPrevNextAmount > 1) {
                        var amount = s.params.lazyLoadingInPrevNextAmount;
                        var spv = slidesPerView;
                        var maxIndex = Math.min(s.activeIndex + spv + Math.max(amount, spv), s.slides.length);
                        var minIndex = Math.max(s.activeIndex - Math.max(spv, amount), 0);
                        // Next Slides
                        for (i = s.activeIndex + slidesPerView; i < maxIndex; i++) {
                            if (s.slides[i]) s.lazy.loadImageInSlide(i);
                        }
                        // Prev Slides
                        for (i = minIndex; i < s.activeIndex; i++) {
                            if (s.slides[i]) s.lazy.loadImageInSlide(i);
                        }
                    } else {
                        var nextSlide = s.wrapper.children('.' + s.params.slideNextClass);
                        if (nextSlide.length > 0) s.lazy.loadImageInSlide(nextSlide.index());

                        var prevSlide = s.wrapper.children('.' + s.params.slidePrevClass);
                        if (prevSlide.length > 0) s.lazy.loadImageInSlide(prevSlide.index());
                    }
                }
            },
            onTransitionStart: function onTransitionStart() {
                if (s.params.lazyLoading) {
                    if (s.params.lazyLoadingOnTransitionStart || !s.params.lazyLoadingOnTransitionStart && !s.lazy.initialImageLoaded) {
                        s.lazy.load();
                    }
                }
            },
            onTransitionEnd: function onTransitionEnd() {
                if (s.params.lazyLoading && !s.params.lazyLoadingOnTransitionStart) {
                    s.lazy.load();
                }
            }
        };

        /*=========================
          Scrollbar
          ===========================*/
        s.scrollbar = {
            isTouched: false,
            setDragPosition: function setDragPosition(e) {
                var sb = s.scrollbar;
                var x = 0,
                    y = 0;
                var translate;
                var pointerPosition = s.isHorizontal() ? e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX || e.clientX : e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY || e.clientY;
                var position = pointerPosition - sb.track.offset()[s.isHorizontal() ? 'left' : 'top'] - sb.dragSize / 2;
                var positionMin = -s.minTranslate() * sb.moveDivider;
                var positionMax = -s.maxTranslate() * sb.moveDivider;
                if (position < positionMin) {
                    position = positionMin;
                } else if (position > positionMax) {
                    position = positionMax;
                }
                position = -position / sb.moveDivider;
                s.updateProgress(position);
                s.setWrapperTranslate(position, true);
            },
            dragStart: function dragStart(e) {
                var sb = s.scrollbar;
                sb.isTouched = true;
                e.preventDefault();
                e.stopPropagation();

                sb.setDragPosition(e);
                clearTimeout(sb.dragTimeout);

                sb.track.transition(0);
                if (s.params.scrollbarHide) {
                    sb.track.css('opacity', 1);
                }
                s.wrapper.transition(100);
                sb.drag.transition(100);
                s.emit('onScrollbarDragStart', s);
            },
            dragMove: function dragMove(e) {
                var sb = s.scrollbar;
                if (!sb.isTouched) return;
                if (e.preventDefault) e.preventDefault();else e.returnValue = false;
                sb.setDragPosition(e);
                s.wrapper.transition(0);
                sb.track.transition(0);
                sb.drag.transition(0);
                s.emit('onScrollbarDragMove', s);
            },
            dragEnd: function dragEnd(e) {
                var sb = s.scrollbar;
                if (!sb.isTouched) return;
                sb.isTouched = false;
                if (s.params.scrollbarHide) {
                    clearTimeout(sb.dragTimeout);
                    sb.dragTimeout = setTimeout(function () {
                        sb.track.css('opacity', 0);
                        sb.track.transition(400);
                    }, 1000);
                }
                s.emit('onScrollbarDragEnd', s);
                if (s.params.scrollbarSnapOnRelease) {
                    s.slideReset();
                }
            },
            draggableEvents: function () {
                if (s.params.simulateTouch === false && !s.support.touch) return s.touchEventsDesktop;else return s.touchEvents;
            }(),
            enableDraggable: function enableDraggable() {
                var sb = s.scrollbar;
                var target = s.support.touch ? sb.track : document;
                $(sb.track).on(sb.draggableEvents.start, sb.dragStart);
                $(target).on(sb.draggableEvents.move, sb.dragMove);
                $(target).on(sb.draggableEvents.end, sb.dragEnd);
            },
            disableDraggable: function disableDraggable() {
                var sb = s.scrollbar;
                var target = s.support.touch ? sb.track : document;
                $(sb.track).off(sb.draggableEvents.start, sb.dragStart);
                $(target).off(sb.draggableEvents.move, sb.dragMove);
                $(target).off(sb.draggableEvents.end, sb.dragEnd);
            },
            set: function set() {
                if (!s.params.scrollbar) return;
                var sb = s.scrollbar;
                sb.track = $(s.params.scrollbar);
                if (s.params.uniqueNavElements && typeof s.params.scrollbar === 'string' && sb.track.length > 1 && s.container.find(s.params.scrollbar).length === 1) {
                    sb.track = s.container.find(s.params.scrollbar);
                }
                sb.drag = sb.track.find('.swiper-scrollbar-drag');
                if (sb.drag.length === 0) {
                    sb.drag = $('<div class="swiper-scrollbar-drag"></div>');
                    sb.track.append(sb.drag);
                }
                sb.drag[0].style.width = '';
                sb.drag[0].style.height = '';
                sb.trackSize = s.isHorizontal() ? sb.track[0].offsetWidth : sb.track[0].offsetHeight;

                sb.divider = s.size / s.virtualSize;
                sb.moveDivider = sb.divider * (sb.trackSize / s.size);
                sb.dragSize = sb.trackSize * sb.divider;

                if (s.isHorizontal()) {
                    sb.drag[0].style.width = sb.dragSize + 'px';
                } else {
                    sb.drag[0].style.height = sb.dragSize + 'px';
                }

                if (sb.divider >= 1) {
                    sb.track[0].style.display = 'none';
                } else {
                    sb.track[0].style.display = '';
                }
                if (s.params.scrollbarHide) {
                    sb.track[0].style.opacity = 0;
                }
            },
            setTranslate: function setTranslate() {
                if (!s.params.scrollbar) return;
                var diff;
                var sb = s.scrollbar;
                var translate = s.translate || 0;
                var newPos;

                var newSize = sb.dragSize;
                newPos = (sb.trackSize - sb.dragSize) * s.progress;
                if (s.rtl && s.isHorizontal()) {
                    newPos = -newPos;
                    if (newPos > 0) {
                        newSize = sb.dragSize - newPos;
                        newPos = 0;
                    } else if (-newPos + sb.dragSize > sb.trackSize) {
                        newSize = sb.trackSize + newPos;
                    }
                } else {
                    if (newPos < 0) {
                        newSize = sb.dragSize + newPos;
                        newPos = 0;
                    } else if (newPos + sb.dragSize > sb.trackSize) {
                        newSize = sb.trackSize - newPos;
                    }
                }
                if (s.isHorizontal()) {
                    if (s.support.transforms3d) {
                        sb.drag.transform('translate3d(' + newPos + 'px, 0, 0)');
                    } else {
                        sb.drag.transform('translateX(' + newPos + 'px)');
                    }
                    sb.drag[0].style.width = newSize + 'px';
                } else {
                    if (s.support.transforms3d) {
                        sb.drag.transform('translate3d(0px, ' + newPos + 'px, 0)');
                    } else {
                        sb.drag.transform('translateY(' + newPos + 'px)');
                    }
                    sb.drag[0].style.height = newSize + 'px';
                }
                if (s.params.scrollbarHide) {
                    clearTimeout(sb.timeout);
                    sb.track[0].style.opacity = 1;
                    sb.timeout = setTimeout(function () {
                        sb.track[0].style.opacity = 0;
                        sb.track.transition(400);
                    }, 1000);
                }
            },
            setTransition: function setTransition(duration) {
                if (!s.params.scrollbar) return;
                s.scrollbar.drag.transition(duration);
            }
        };

        /*=========================
          Controller
          ===========================*/
        s.controller = {
            LinearSpline: function LinearSpline(x, y) {
                var binarySearch = function () {
                    var maxIndex, minIndex, guess;
                    return function (array, val) {
                        minIndex = -1;
                        maxIndex = array.length;
                        while (maxIndex - minIndex > 1) {
                            if (array[guess = maxIndex + minIndex >> 1] <= val) {
                                minIndex = guess;
                            } else {
                                maxIndex = guess;
                            }
                        }return maxIndex;
                    };
                }();
                this.x = x;
                this.y = y;
                this.lastIndex = x.length - 1;
                // Given an x value (x2), return the expected y2 value:
                // (x1,y1) is the known point before given value,
                // (x3,y3) is the known point after given value.
                var i1, i3;
                var l = this.x.length;

                this.interpolate = function (x2) {
                    if (!x2) return 0;

                    // Get the indexes of x1 and x3 (the array indexes before and after given x2):
                    i3 = binarySearch(this.x, x2);
                    i1 = i3 - 1;

                    // We have our indexes i1 & i3, so we can calculate already:
                    // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1
                    return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];
                };
            },
            //xxx: for now i will just save one spline function to to
            getInterpolateFunction: function getInterpolateFunction(c) {
                if (!s.controller.spline) s.controller.spline = s.params.loop ? new s.controller.LinearSpline(s.slidesGrid, c.slidesGrid) : new s.controller.LinearSpline(s.snapGrid, c.snapGrid);
            },
            setTranslate: function setTranslate(translate, byController) {
                var controlled = s.params.control;
                var multiplier, controlledTranslate;
                function setControlledTranslate(c) {
                    // this will create an Interpolate function based on the snapGrids
                    // x is the Grid of the scrolled scroller and y will be the controlled scroller
                    // it makes sense to create this only once and recall it for the interpolation
                    // the function does a lot of value caching for performance
                    translate = c.rtl && c.params.direction === 'horizontal' ? -s.translate : s.translate;
                    if (s.params.controlBy === 'slide') {
                        s.controller.getInterpolateFunction(c);
                        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid
                        // but it did not work out
                        controlledTranslate = -s.controller.spline.interpolate(-translate);
                    }

                    if (!controlledTranslate || s.params.controlBy === 'container') {
                        multiplier = (c.maxTranslate() - c.minTranslate()) / (s.maxTranslate() - s.minTranslate());
                        controlledTranslate = (translate - s.minTranslate()) * multiplier + c.minTranslate();
                    }

                    if (s.params.controlInverse) {
                        controlledTranslate = c.maxTranslate() - controlledTranslate;
                    }
                    c.updateProgress(controlledTranslate);
                    c.setWrapperTranslate(controlledTranslate, false, s);
                    c.updateActiveIndex();
                }
                if (Array.isArray(controlled)) {
                    for (var i = 0; i < controlled.length; i++) {
                        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
                            setControlledTranslate(controlled[i]);
                        }
                    }
                } else if (controlled instanceof Swiper && byController !== controlled) {

                    setControlledTranslate(controlled);
                }
            },
            setTransition: function setTransition(duration, byController) {
                var controlled = s.params.control;
                var i;
                function setControlledTransition(c) {
                    c.setWrapperTransition(duration, s);
                    if (duration !== 0) {
                        c.onTransitionStart();
                        c.wrapper.transitionEnd(function () {
                            if (!controlled) return;
                            if (c.params.loop && s.params.controlBy === 'slide') {
                                c.fixLoop();
                            }
                            c.onTransitionEnd();
                        });
                    }
                }
                if (Array.isArray(controlled)) {
                    for (i = 0; i < controlled.length; i++) {
                        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
                            setControlledTransition(controlled[i]);
                        }
                    }
                } else if (controlled instanceof Swiper && byController !== controlled) {
                    setControlledTransition(controlled);
                }
            }
        };

        /*=========================
          Hash Navigation
          ===========================*/
        s.hashnav = {
            onHashCange: function onHashCange(e, a) {
                var newHash = document.location.hash.replace('#', '');
                var activeSlideHash = s.slides.eq(s.activeIndex).attr('data-hash');
                if (newHash !== activeSlideHash) {
                    s.slideTo(s.wrapper.children('.' + s.params.slideClass + '[data-hash="' + newHash + '"]').index());
                }
            },
            attachEvents: function attachEvents(detach) {
                var action = detach ? 'off' : 'on';
                $(window)[action]('hashchange', s.hashnav.onHashCange);
            },
            setHash: function setHash() {
                if (!s.hashnav.initialized || !s.params.hashnav) return;
                if (s.params.replaceState && window.history && window.history.replaceState) {
                    window.history.replaceState(null, null, '#' + s.slides.eq(s.activeIndex).attr('data-hash') || '');
                } else {
                    var slide = s.slides.eq(s.activeIndex);
                    var hash = slide.attr('data-hash') || slide.attr('data-history');
                    document.location.hash = hash || '';
                }
            },
            init: function init() {
                if (!s.params.hashnav || s.params.history) return;
                s.hashnav.initialized = true;
                var hash = document.location.hash.replace('#', '');
                if (hash) {
                    var speed = 0;
                    for (var i = 0, length = s.slides.length; i < length; i++) {
                        var slide = s.slides.eq(i);
                        var slideHash = slide.attr('data-hash') || slide.attr('data-history');
                        if (slideHash === hash && !slide.hasClass(s.params.slideDuplicateClass)) {
                            var index = slide.index();
                            s.slideTo(index, speed, s.params.runCallbacksOnInit, true);
                        }
                    }
                }
                if (s.params.hashnavWatchState) s.hashnav.attachEvents();
            },
            destroy: function destroy() {
                if (s.params.hashnavWatchState) s.hashnav.attachEvents(true);
            }
        };

        /*=========================
          History Api with fallback to Hashnav
          ===========================*/
        s.history = {
            init: function init() {
                if (!s.params.history) return;
                if (!window.history || !window.history.pushState) {
                    s.params.history = false;
                    s.params.hashnav = true;
                    return;
                }
                s.history.initialized = true;
                this.paths = this.getPathValues();
                if (!this.paths.key && !this.paths.value) return;
                this.scrollToSlide(0, this.paths.value, s.params.runCallbacksOnInit);
                if (!s.params.replaceState) {
                    window.addEventListener('popstate', this.setHistoryPopState);
                }
            },
            setHistoryPopState: function setHistoryPopState() {
                s.history.paths = s.history.getPathValues();
                s.history.scrollToSlide(s.params.speed, s.history.paths.value, false);
            },
            getPathValues: function getPathValues() {
                var pathArray = window.location.pathname.slice(1).split('/');
                var total = pathArray.length;
                var key = pathArray[total - 2];
                var value = pathArray[total - 1];
                return { key: key, value: value };
            },
            setHistory: function setHistory(key, index) {
                if (!s.history.initialized || !s.params.history) return;
                var slide = s.slides.eq(index);
                var value = this.slugify(slide.attr('data-history'));
                if (!window.location.pathname.includes(key)) {
                    value = key + '/' + value;
                }
                if (s.params.replaceState) {
                    window.history.replaceState(null, null, value);
                } else {
                    window.history.pushState(null, null, value);
                }
            },
            slugify: function slugify(text) {
                return text.toString().toLowerCase().replace(/\s+/g, '-').replace(/[^\w\-]+/g, '').replace(/\-\-+/g, '-').replace(/^-+/, '').replace(/-+$/, '');
            },
            scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {
                if (value) {
                    for (var i = 0, length = s.slides.length; i < length; i++) {
                        var slide = s.slides.eq(i);
                        var slideHistory = this.slugify(slide.attr('data-history'));
                        if (slideHistory === value && !slide.hasClass(s.params.slideDuplicateClass)) {
                            var index = slide.index();
                            s.slideTo(index, speed, runCallbacks);
                        }
                    }
                } else {
                    s.slideTo(0, speed, runCallbacks);
                }
            }
        };

        /*=========================
          Keyboard Control
          ===========================*/
        function handleKeyboard(e) {
            if (e.originalEvent) e = e.originalEvent; //jquery fix
            var kc = e.keyCode || e.charCode;
            // Directions locks
            if (!s.params.allowSwipeToNext && (s.isHorizontal() && kc === 39 || !s.isHorizontal() && kc === 40)) {
                return false;
            }
            if (!s.params.allowSwipeToPrev && (s.isHorizontal() && kc === 37 || !s.isHorizontal() && kc === 38)) {
                return false;
            }
            if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {
                return;
            }
            if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {
                return;
            }
            if (kc === 37 || kc === 39 || kc === 38 || kc === 40) {
                var inView = false;
                //Check that swiper should be inside of visible area of window
                if (s.container.parents('.' + s.params.slideClass).length > 0 && s.container.parents('.' + s.params.slideActiveClass).length === 0) {
                    return;
                }
                var windowScroll = {
                    left: window.pageXOffset,
                    top: window.pageYOffset
                };
                var windowWidth = window.innerWidth;
                var windowHeight = window.innerHeight;
                var swiperOffset = s.container.offset();
                if (s.rtl) swiperOffset.left = swiperOffset.left - s.container[0].scrollLeft;
                var swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + s.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + s.height], [swiperOffset.left + s.width, swiperOffset.top + s.height]];
                for (var i = 0; i < swiperCoord.length; i++) {
                    var point = swiperCoord[i];
                    if (point[0] >= windowScroll.left && point[0] <= windowScroll.left + windowWidth && point[1] >= windowScroll.top && point[1] <= windowScroll.top + windowHeight) {
                        inView = true;
                    }
                }
                if (!inView) return;
            }
            if (s.isHorizontal()) {
                if (kc === 37 || kc === 39) {
                    if (e.preventDefault) e.preventDefault();else e.returnValue = false;
                }
                if (kc === 39 && !s.rtl || kc === 37 && s.rtl) s.slideNext();
                if (kc === 37 && !s.rtl || kc === 39 && s.rtl) s.slidePrev();
            } else {
                if (kc === 38 || kc === 40) {
                    if (e.preventDefault) e.preventDefault();else e.returnValue = false;
                }
                if (kc === 40) s.slideNext();
                if (kc === 38) s.slidePrev();
            }
            s.emit('onKeyPress', s, kc);
        }
        s.disableKeyboardControl = function () {
            s.params.keyboardControl = false;
            $(document).off('keydown', handleKeyboard);
        };
        s.enableKeyboardControl = function () {
            s.params.keyboardControl = true;
            $(document).on('keydown', handleKeyboard);
        };

        /*=========================
          Mousewheel Control
          ===========================*/
        s.mousewheel = {
            event: false,
            lastScrollTime: new window.Date().getTime()
        };
        function isEventSupported() {
            var eventName = 'onwheel';
            var isSupported = eventName in document;

            if (!isSupported) {
                var element = document.createElement('div');
                element.setAttribute(eventName, 'return;');
                isSupported = typeof element[eventName] === 'function';
            }

            if (!isSupported && document.implementation && document.implementation.hasFeature &&
            // always returns true in newer browsers as per the standard.
            // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
            document.implementation.hasFeature('', '') !== true) {
                // This is the only way to test support for the `wheel` event in IE9+.
                isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
            }

            return isSupported;
        }
        /**
         * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is
         * complicated, thus this doc is long and (hopefully) detailed enough to answer
         * your questions.
         *
         * If you need to react to the mouse wheel in a predictable way, this code is
         * like your bestest friend. * hugs *
         *
         * As of today, there are 4 DOM event types you can listen to:
         *
         *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)
         *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari
         *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!
         *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003
         *
         * So what to do?  The is the best:
         *
         *   normalizeWheel.getEventType();
         *
         * In your event callback, use this code to get sane interpretation of the
         * deltas.  This code will return an object with properties:
         *
         *   spinX   -- normalized spin speed (use for zoom) - x plane
         *   spinY   -- " - y plane
         *   pixelX  -- normalized distance (to pixels) - x plane
         *   pixelY  -- " - y plane
         *
         * Wheel values are provided by the browser assuming you are using the wheel to
         * scroll a web page by a number of lines or pixels (or pages).  Values can vary
         * significantly on different platforms and browsers, forgetting that you can
         * scroll at different speeds.  Some devices (like trackpads) emit more events
         * at smaller increments with fine granularity, and some emit massive jumps with
         * linear speed or acceleration.
         *
         * This code does its best to normalize the deltas for you:
         *
         *   - spin is trying to normalize how far the wheel was spun (or trackpad
         *     dragged).  This is super useful for zoom support where you want to
         *     throw away the chunky scroll steps on the PC and make those equal to
         *     the slow and smooth tiny steps on the Mac. Key data: This code tries to
         *     resolve a single slow step on a wheel to 1.
         *
         *   - pixel is normalizing the desired scroll delta in pixel units.  You'll
         *     get the crazy differences between browsers, but at least it'll be in
         *     pixels!
         *
         *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This
         *     should translate to positive value zooming IN, negative zooming OUT.
         *     This matches the newer 'wheel' event.
         *
         * Why are there spinX, spinY (or pixels)?
         *
         *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn
         *     with a mouse.  It results in side-scrolling in the browser by default.
         *
         *   - spinY is what you expect -- it's the classic axis of a mouse wheel.
         *
         *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and
         *     probably is by browsers in conjunction with fancy 3D controllers .. but
         *     you know.
         *
         * Implementation info:
         *
         * Examples of 'wheel' event if you scroll slowly (down) by one step with an
         * average mouse:
         *
         *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)
         *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)
         *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)
         *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)
         *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)
         *
         * On the trackpad:
         *
         *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)
         *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)
         *
         * On other/older browsers.. it's more complicated as there can be multiple and
         * also missing delta values.
         *
         * The 'wheel' event is more standard:
         *
         * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents
         *
         * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and
         * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain
         * backward compatibility with older events.  Those other values help us
         * better normalize spin speed.  Example of what the browsers provide:
         *
         *                          | event.wheelDelta | event.detail
         *        ------------------+------------------+--------------
         *          Safari v5/OS X  |       -120       |       0
         *          Safari v5/Win7  |       -120       |       0
         *         Chrome v17/OS X  |       -120       |       0
         *         Chrome v17/Win7  |       -120       |       0
         *                IE9/Win7  |       -120       |   undefined
         *         Firefox v4/OS X  |     undefined    |       1
         *         Firefox v4/Win7  |     undefined    |       3
         *
         */
        function normalizeWheel( /*object*/event) /*object*/{
            // Reasonable defaults
            var PIXEL_STEP = 10;
            var LINE_HEIGHT = 40;
            var PAGE_HEIGHT = 800;

            var sX = 0,
                sY = 0,
                // spinX, spinY
            pX = 0,
                pY = 0; // pixelX, pixelY

            // Legacy
            if ('detail' in event) {
                sY = event.detail;
            }
            if ('wheelDelta' in event) {
                sY = -event.wheelDelta / 120;
            }
            if ('wheelDeltaY' in event) {
                sY = -event.wheelDeltaY / 120;
            }
            if ('wheelDeltaX' in event) {
                sX = -event.wheelDeltaX / 120;
            }

            // side scrolling on FF with DOMMouseScroll
            if ('axis' in event && event.axis === event.HORIZONTAL_AXIS) {
                sX = sY;
                sY = 0;
            }

            pX = sX * PIXEL_STEP;
            pY = sY * PIXEL_STEP;

            if ('deltaY' in event) {
                pY = event.deltaY;
            }
            if ('deltaX' in event) {
                pX = event.deltaX;
            }

            if ((pX || pY) && event.deltaMode) {
                if (event.deltaMode === 1) {
                    // delta in LINE units
                    pX *= LINE_HEIGHT;
                    pY *= LINE_HEIGHT;
                } else {
                    // delta in PAGE units
                    pX *= PAGE_HEIGHT;
                    pY *= PAGE_HEIGHT;
                }
            }

            // Fall-back if spin cannot be determined
            if (pX && !sX) {
                sX = pX < 1 ? -1 : 1;
            }
            if (pY && !sY) {
                sY = pY < 1 ? -1 : 1;
            }

            return {
                spinX: sX,
                spinY: sY,
                pixelX: pX,
                pixelY: pY
            };
        }
        if (s.params.mousewheelControl) {
            /**
             * The best combination if you prefer spinX + spinY normalization.  It favors
             * the older DOMMouseScroll for Firefox, as FF does not include wheelDelta with
             * 'wheel' event, making spin speed determination impossible.
             */
            s.mousewheel.event = navigator.userAgent.indexOf('firefox') > -1 ? 'DOMMouseScroll' : isEventSupported() ? 'wheel' : 'mousewheel';
        }
        function handleMousewheel(e) {
            if (e.originalEvent) e = e.originalEvent; //jquery fix
            var delta = 0;
            var rtlFactor = s.rtl ? -1 : 1;

            var data = normalizeWheel(e);

            if (s.params.mousewheelForceToAxis) {
                if (s.isHorizontal()) {
                    if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;else return;
                } else {
                    if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;else return;
                }
            } else {
                delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;
            }

            if (delta === 0) return;

            if (s.params.mousewheelInvert) delta = -delta;

            if (!s.params.freeMode) {
                if (new window.Date().getTime() - s.mousewheel.lastScrollTime > 60) {
                    if (delta < 0) {
                        if ((!s.isEnd || s.params.loop) && !s.animating) {
                            s.slideNext();
                            s.emit('onScroll', s, e);
                        } else if (s.params.mousewheelReleaseOnEdges) return true;
                    } else {
                        if ((!s.isBeginning || s.params.loop) && !s.animating) {
                            s.slidePrev();
                            s.emit('onScroll', s, e);
                        } else if (s.params.mousewheelReleaseOnEdges) return true;
                    }
                }
                s.mousewheel.lastScrollTime = new window.Date().getTime();
            } else {
                //Freemode or scrollContainer:
                var position = s.getWrapperTranslate() + delta * s.params.mousewheelSensitivity;
                var wasBeginning = s.isBeginning,
                    wasEnd = s.isEnd;

                if (position >= s.minTranslate()) position = s.minTranslate();
                if (position <= s.maxTranslate()) position = s.maxTranslate();

                s.setWrapperTransition(0);
                s.setWrapperTranslate(position);
                s.updateProgress();
                s.updateActiveIndex();

                if (!wasBeginning && s.isBeginning || !wasEnd && s.isEnd) {
                    s.updateClasses();
                }

                if (s.params.freeModeSticky) {
                    clearTimeout(s.mousewheel.timeout);
                    s.mousewheel.timeout = setTimeout(function () {
                        s.slideReset();
                    }, 300);
                } else {
                    if (s.params.lazyLoading && s.lazy) {
                        s.lazy.load();
                    }
                }
                // Emit event
                s.emit('onScroll', s, e);

                // Stop autoplay
                if (s.params.autoplay && s.params.autoplayDisableOnInteraction) s.stopAutoplay();

                // Return page scroll on edge positions
                if (position === 0 || position === s.maxTranslate()) return;
            }

            if (e.preventDefault) e.preventDefault();else e.returnValue = false;
            return false;
        }
        s.disableMousewheelControl = function () {
            if (!s.mousewheel.event) return false;
            var target = s.container;
            if (s.params.mousewheelEventsTarged !== 'container') {
                target = $(s.params.mousewheelEventsTarged);
            }
            target.off(s.mousewheel.event, handleMousewheel);
            s.params.mousewheelControl = false;
            return true;
        };

        s.enableMousewheelControl = function () {
            if (!s.mousewheel.event) return false;
            var target = s.container;
            if (s.params.mousewheelEventsTarged !== 'container') {
                target = $(s.params.mousewheelEventsTarged);
            }
            target.on(s.mousewheel.event, handleMousewheel);
            s.params.mousewheelControl = true;
            return true;
        };

        /*=========================
          Parallax
          ===========================*/
        function setParallaxTransform(el, progress) {
            el = $(el);
            var p, pX, pY;
            var rtlFactor = s.rtl ? -1 : 1;

            p = el.attr('data-swiper-parallax') || '0';
            pX = el.attr('data-swiper-parallax-x');
            pY = el.attr('data-swiper-parallax-y');
            if (pX || pY) {
                pX = pX || '0';
                pY = pY || '0';
            } else {
                if (s.isHorizontal()) {
                    pX = p;
                    pY = '0';
                } else {
                    pY = p;
                    pX = '0';
                }
            }

            if (pX.indexOf('%') >= 0) {
                pX = parseInt(pX, 10) * progress * rtlFactor + '%';
            } else {
                pX = pX * progress * rtlFactor + 'px';
            }
            if (pY.indexOf('%') >= 0) {
                pY = parseInt(pY, 10) * progress + '%';
            } else {
                pY = pY * progress + 'px';
            }

            el.transform('translate3d(' + pX + ', ' + pY + ',0px)');
        }
        s.parallax = {
            setTranslate: function setTranslate() {
                s.container.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function () {
                    setParallaxTransform(this, s.progress);
                });
                s.slides.each(function () {
                    var slide = $(this);
                    slide.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function () {
                        var progress = Math.min(Math.max(slide[0].progress, -1), 1);
                        setParallaxTransform(this, progress);
                    });
                });
            },
            setTransition: function setTransition(duration) {
                if (typeof duration === 'undefined') duration = s.params.speed;
                s.container.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function () {
                    var el = $(this);
                    var parallaxDuration = parseInt(el.attr('data-swiper-parallax-duration'), 10) || duration;
                    if (duration === 0) parallaxDuration = 0;
                    el.transition(parallaxDuration);
                });
            }
        };

        /*=========================
          Zoom
          ===========================*/
        s.zoom = {
            // "Global" Props
            scale: 1,
            currentScale: 1,
            isScaling: false,
            gesture: {
                slide: undefined,
                slideWidth: undefined,
                slideHeight: undefined,
                image: undefined,
                imageWrap: undefined,
                zoomMax: s.params.zoomMax
            },
            image: {
                isTouched: undefined,
                isMoved: undefined,
                currentX: undefined,
                currentY: undefined,
                minX: undefined,
                minY: undefined,
                maxX: undefined,
                maxY: undefined,
                width: undefined,
                height: undefined,
                startX: undefined,
                startY: undefined,
                touchesStart: {},
                touchesCurrent: {}
            },
            velocity: {
                x: undefined,
                y: undefined,
                prevPositionX: undefined,
                prevPositionY: undefined,
                prevTime: undefined
            },
            // Calc Scale From Multi-touches
            getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {
                if (e.targetTouches.length < 2) return 1;
                var x1 = e.targetTouches[0].pageX,
                    y1 = e.targetTouches[0].pageY,
                    x2 = e.targetTouches[1].pageX,
                    y2 = e.targetTouches[1].pageY;
                var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
                return distance;
            },
            // Events
            onGestureStart: function onGestureStart(e) {
                var z = s.zoom;
                if (!s.support.gestures) {
                    if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {
                        return;
                    }
                    z.gesture.scaleStart = z.getDistanceBetweenTouches(e);
                }
                if (!z.gesture.slide || !z.gesture.slide.length) {
                    z.gesture.slide = $(this);
                    if (z.gesture.slide.length === 0) z.gesture.slide = s.slides.eq(s.activeIndex);
                    z.gesture.image = z.gesture.slide.find('img, svg, canvas');
                    z.gesture.imageWrap = z.gesture.image.parent('.' + s.params.zoomContainerClass);
                    z.gesture.zoomMax = z.gesture.imageWrap.attr('data-swiper-zoom') || s.params.zoomMax;
                    if (z.gesture.imageWrap.length === 0) {
                        z.gesture.image = undefined;
                        return;
                    }
                }
                z.gesture.image.transition(0);
                z.isScaling = true;
            },
            onGestureChange: function onGestureChange(e) {
                var z = s.zoom;
                if (!s.support.gestures) {
                    if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {
                        return;
                    }
                    z.gesture.scaleMove = z.getDistanceBetweenTouches(e);
                }
                if (!z.gesture.image || z.gesture.image.length === 0) return;
                if (s.support.gestures) {
                    z.scale = e.scale * z.currentScale;
                } else {
                    z.scale = z.gesture.scaleMove / z.gesture.scaleStart * z.currentScale;
                }
                if (z.scale > z.gesture.zoomMax) {
                    z.scale = z.gesture.zoomMax - 1 + Math.pow(z.scale - z.gesture.zoomMax + 1, 0.5);
                }
                if (z.scale < s.params.zoomMin) {
                    z.scale = s.params.zoomMin + 1 - Math.pow(s.params.zoomMin - z.scale + 1, 0.5);
                }
                z.gesture.image.transform('translate3d(0,0,0) scale(' + z.scale + ')');
            },
            onGestureEnd: function onGestureEnd(e) {
                var z = s.zoom;
                if (!s.support.gestures) {
                    if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2) {
                        return;
                    }
                }
                if (!z.gesture.image || z.gesture.image.length === 0) return;
                z.scale = Math.max(Math.min(z.scale, z.gesture.zoomMax), s.params.zoomMin);
                z.gesture.image.transition(s.params.speed).transform('translate3d(0,0,0) scale(' + z.scale + ')');
                z.currentScale = z.scale;
                z.isScaling = false;
                if (z.scale === 1) z.gesture.slide = undefined;
            },
            onTouchStart: function onTouchStart(s, e) {
                var z = s.zoom;
                if (!z.gesture.image || z.gesture.image.length === 0) return;
                if (z.image.isTouched) return;
                if (s.device.os === 'android') e.preventDefault();
                z.image.isTouched = true;
                z.image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
                z.image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
            },
            onTouchMove: function onTouchMove(e) {
                var z = s.zoom;
                if (!z.gesture.image || z.gesture.image.length === 0) return;
                s.allowClick = false;
                if (!z.image.isTouched || !z.gesture.slide) return;

                if (!z.image.isMoved) {
                    z.image.width = z.gesture.image[0].offsetWidth;
                    z.image.height = z.gesture.image[0].offsetHeight;
                    z.image.startX = s.getTranslate(z.gesture.imageWrap[0], 'x') || 0;
                    z.image.startY = s.getTranslate(z.gesture.imageWrap[0], 'y') || 0;
                    z.gesture.slideWidth = z.gesture.slide[0].offsetWidth;
                    z.gesture.slideHeight = z.gesture.slide[0].offsetHeight;
                    z.gesture.imageWrap.transition(0);
                    if (s.rtl) z.image.startX = -z.image.startX;
                    if (s.rtl) z.image.startY = -z.image.startY;
                }
                // Define if we need image drag
                var scaledWidth = z.image.width * z.scale;
                var scaledHeight = z.image.height * z.scale;

                if (scaledWidth < z.gesture.slideWidth && scaledHeight < z.gesture.slideHeight) return;

                z.image.minX = Math.min(z.gesture.slideWidth / 2 - scaledWidth / 2, 0);
                z.image.maxX = -z.image.minX;
                z.image.minY = Math.min(z.gesture.slideHeight / 2 - scaledHeight / 2, 0);
                z.image.maxY = -z.image.minY;

                z.image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
                z.image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;

                if (!z.image.isMoved && !z.isScaling) {
                    if (s.isHorizontal() && Math.floor(z.image.minX) === Math.floor(z.image.startX) && z.image.touchesCurrent.x < z.image.touchesStart.x || Math.floor(z.image.maxX) === Math.floor(z.image.startX) && z.image.touchesCurrent.x > z.image.touchesStart.x) {
                        z.image.isTouched = false;
                        return;
                    } else if (!s.isHorizontal() && Math.floor(z.image.minY) === Math.floor(z.image.startY) && z.image.touchesCurrent.y < z.image.touchesStart.y || Math.floor(z.image.maxY) === Math.floor(z.image.startY) && z.image.touchesCurrent.y > z.image.touchesStart.y) {
                        z.image.isTouched = false;
                        return;
                    }
                }
                e.preventDefault();
                e.stopPropagation();

                z.image.isMoved = true;
                z.image.currentX = z.image.touchesCurrent.x - z.image.touchesStart.x + z.image.startX;
                z.image.currentY = z.image.touchesCurrent.y - z.image.touchesStart.y + z.image.startY;

                if (z.image.currentX < z.image.minX) {
                    z.image.currentX = z.image.minX + 1 - Math.pow(z.image.minX - z.image.currentX + 1, 0.8);
                }
                if (z.image.currentX > z.image.maxX) {
                    z.image.currentX = z.image.maxX - 1 + Math.pow(z.image.currentX - z.image.maxX + 1, 0.8);
                }

                if (z.image.currentY < z.image.minY) {
                    z.image.currentY = z.image.minY + 1 - Math.pow(z.image.minY - z.image.currentY + 1, 0.8);
                }
                if (z.image.currentY > z.image.maxY) {
                    z.image.currentY = z.image.maxY - 1 + Math.pow(z.image.currentY - z.image.maxY + 1, 0.8);
                }

                //Velocity
                if (!z.velocity.prevPositionX) z.velocity.prevPositionX = z.image.touchesCurrent.x;
                if (!z.velocity.prevPositionY) z.velocity.prevPositionY = z.image.touchesCurrent.y;
                if (!z.velocity.prevTime) z.velocity.prevTime = Date.now();
                z.velocity.x = (z.image.touchesCurrent.x - z.velocity.prevPositionX) / (Date.now() - z.velocity.prevTime) / 2;
                z.velocity.y = (z.image.touchesCurrent.y - z.velocity.prevPositionY) / (Date.now() - z.velocity.prevTime) / 2;
                if (Math.abs(z.image.touchesCurrent.x - z.velocity.prevPositionX) < 2) z.velocity.x = 0;
                if (Math.abs(z.image.touchesCurrent.y - z.velocity.prevPositionY) < 2) z.velocity.y = 0;
                z.velocity.prevPositionX = z.image.touchesCurrent.x;
                z.velocity.prevPositionY = z.image.touchesCurrent.y;
                z.velocity.prevTime = Date.now();

                z.gesture.imageWrap.transform('translate3d(' + z.image.currentX + 'px, ' + z.image.currentY + 'px,0)');
            },
            onTouchEnd: function onTouchEnd(s, e) {
                var z = s.zoom;
                if (!z.gesture.image || z.gesture.image.length === 0) return;
                if (!z.image.isTouched || !z.image.isMoved) {
                    z.image.isTouched = false;
                    z.image.isMoved = false;
                    return;
                }
                z.image.isTouched = false;
                z.image.isMoved = false;
                var momentumDurationX = 300;
                var momentumDurationY = 300;
                var momentumDistanceX = z.velocity.x * momentumDurationX;
                var newPositionX = z.image.currentX + momentumDistanceX;
                var momentumDistanceY = z.velocity.y * momentumDurationY;
                var newPositionY = z.image.currentY + momentumDistanceY;

                //Fix duration
                if (z.velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - z.image.currentX) / z.velocity.x);
                if (z.velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - z.image.currentY) / z.velocity.y);
                var momentumDuration = Math.max(momentumDurationX, momentumDurationY);

                z.image.currentX = newPositionX;
                z.image.currentY = newPositionY;

                // Define if we need image drag
                var scaledWidth = z.image.width * z.scale;
                var scaledHeight = z.image.height * z.scale;
                z.image.minX = Math.min(z.gesture.slideWidth / 2 - scaledWidth / 2, 0);
                z.image.maxX = -z.image.minX;
                z.image.minY = Math.min(z.gesture.slideHeight / 2 - scaledHeight / 2, 0);
                z.image.maxY = -z.image.minY;
                z.image.currentX = Math.max(Math.min(z.image.currentX, z.image.maxX), z.image.minX);
                z.image.currentY = Math.max(Math.min(z.image.currentY, z.image.maxY), z.image.minY);

                z.gesture.imageWrap.transition(momentumDuration).transform('translate3d(' + z.image.currentX + 'px, ' + z.image.currentY + 'px,0)');
            },
            onTransitionEnd: function onTransitionEnd(s) {
                var z = s.zoom;
                if (z.gesture.slide && s.previousIndex !== s.activeIndex) {
                    z.gesture.image.transform('translate3d(0,0,0) scale(1)');
                    z.gesture.imageWrap.transform('translate3d(0,0,0)');
                    z.gesture.slide = z.gesture.image = z.gesture.imageWrap = undefined;
                    z.scale = z.currentScale = 1;
                }
            },
            // Toggle Zoom
            toggleZoom: function toggleZoom(s, e) {
                var z = s.zoom;
                if (!z.gesture.slide) {
                    z.gesture.slide = s.clickedSlide ? $(s.clickedSlide) : s.slides.eq(s.activeIndex);
                    z.gesture.image = z.gesture.slide.find('img, svg, canvas');
                    z.gesture.imageWrap = z.gesture.image.parent('.' + s.params.zoomContainerClass);
                }
                if (!z.gesture.image || z.gesture.image.length === 0) return;

                var touchX, touchY, offsetX, offsetY, diffX, diffY, translateX, translateY, imageWidth, imageHeight, scaledWidth, scaledHeight, translateMinX, translateMinY, translateMaxX, translateMaxY, slideWidth, slideHeight;

                if (typeof z.image.touchesStart.x === 'undefined' && e) {
                    touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;
                    touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;
                } else {
                    touchX = z.image.touchesStart.x;
                    touchY = z.image.touchesStart.y;
                }

                if (z.scale && z.scale !== 1) {
                    // Zoom Out
                    z.scale = z.currentScale = 1;
                    z.gesture.imageWrap.transition(300).transform('translate3d(0,0,0)');
                    z.gesture.image.transition(300).transform('translate3d(0,0,0) scale(1)');
                    z.gesture.slide = undefined;
                } else {
                    // Zoom In
                    z.scale = z.currentScale = z.gesture.imageWrap.attr('data-swiper-zoom') || s.params.zoomMax;
                    if (e) {
                        slideWidth = z.gesture.slide[0].offsetWidth;
                        slideHeight = z.gesture.slide[0].offsetHeight;
                        offsetX = z.gesture.slide.offset().left;
                        offsetY = z.gesture.slide.offset().top;
                        diffX = offsetX + slideWidth / 2 - touchX;
                        diffY = offsetY + slideHeight / 2 - touchY;

                        imageWidth = z.gesture.image[0].offsetWidth;
                        imageHeight = z.gesture.image[0].offsetHeight;
                        scaledWidth = imageWidth * z.scale;
                        scaledHeight = imageHeight * z.scale;

                        translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);
                        translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);
                        translateMaxX = -translateMinX;
                        translateMaxY = -translateMinY;

                        translateX = diffX * z.scale;
                        translateY = diffY * z.scale;

                        if (translateX < translateMinX) {
                            translateX = translateMinX;
                        }
                        if (translateX > translateMaxX) {
                            translateX = translateMaxX;
                        }

                        if (translateY < translateMinY) {
                            translateY = translateMinY;
                        }
                        if (translateY > translateMaxY) {
                            translateY = translateMaxY;
                        }
                    } else {
                        translateX = 0;
                        translateY = 0;
                    }
                    z.gesture.imageWrap.transition(300).transform('translate3d(' + translateX + 'px, ' + translateY + 'px,0)');
                    z.gesture.image.transition(300).transform('translate3d(0,0,0) scale(' + z.scale + ')');
                }
            },
            // Attach/Detach Events
            attachEvents: function attachEvents(detach) {
                var action = detach ? 'off' : 'on';

                if (s.params.zoom) {
                    var target = s.slides;
                    var passiveListener = s.touchEvents.start === 'touchstart' && s.support.passiveListener && s.params.passiveListeners ? { passive: true, capture: false } : false;
                    // Scale image
                    if (s.support.gestures) {
                        s.slides[action]('gesturestart', s.zoom.onGestureStart, passiveListener);
                        s.slides[action]('gesturechange', s.zoom.onGestureChange, passiveListener);
                        s.slides[action]('gestureend', s.zoom.onGestureEnd, passiveListener);
                    } else if (s.touchEvents.start === 'touchstart') {
                        s.slides[action](s.touchEvents.start, s.zoom.onGestureStart, passiveListener);
                        s.slides[action](s.touchEvents.move, s.zoom.onGestureChange, passiveListener);
                        s.slides[action](s.touchEvents.end, s.zoom.onGestureEnd, passiveListener);
                    }

                    // Move image
                    s[action]('touchStart', s.zoom.onTouchStart);
                    s.slides.each(function (index, slide) {
                        if ($(slide).find('.' + s.params.zoomContainerClass).length > 0) {
                            $(slide)[action](s.touchEvents.move, s.zoom.onTouchMove);
                        }
                    });
                    s[action]('touchEnd', s.zoom.onTouchEnd);

                    // Scale Out
                    s[action]('transitionEnd', s.zoom.onTransitionEnd);
                    if (s.params.zoomToggle) {
                        s.on('doubleTap', s.zoom.toggleZoom);
                    }
                }
            },
            init: function init() {
                s.zoom.attachEvents();
            },
            destroy: function destroy() {
                s.zoom.attachEvents(true);
            }
        };

        /*=========================
          Plugins API. Collect all and init all plugins
          ===========================*/
        s._plugins = [];
        for (var plugin in s.plugins) {
            var p = s.plugins[plugin](s, s.params[plugin]);
            if (p) s._plugins.push(p);
        }
        // Method to call all plugins event/method
        s.callPlugins = function (eventName) {
            for (var i = 0; i < s._plugins.length; i++) {
                if (eventName in s._plugins[i]) {
                    s._plugins[i][eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
                }
            }
        };

        /*=========================
          Events/Callbacks/Plugins Emitter
          ===========================*/
        function normalizeEventName(eventName) {
            if (eventName.indexOf('on') !== 0) {
                if (eventName[0] !== eventName[0].toUpperCase()) {
                    eventName = 'on' + eventName[0].toUpperCase() + eventName.substring(1);
                } else {
                    eventName = 'on' + eventName;
                }
            }
            return eventName;
        }
        s.emitterEventListeners = {};
        s.emit = function (eventName) {
            // Trigger callbacks
            if (s.params[eventName]) {
                s.params[eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
            }
            var i;
            // Trigger events
            if (s.emitterEventListeners[eventName]) {
                for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {
                    s.emitterEventListeners[eventName][i](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
                }
            }
            // Trigger plugins
            if (s.callPlugins) s.callPlugins(eventName, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
        };
        s.on = function (eventName, handler) {
            eventName = normalizeEventName(eventName);
            if (!s.emitterEventListeners[eventName]) s.emitterEventListeners[eventName] = [];
            s.emitterEventListeners[eventName].push(handler);
            return s;
        };
        s.off = function (eventName, handler) {
            var i;
            eventName = normalizeEventName(eventName);
            if (typeof handler === 'undefined') {
                // Remove all handlers for such event
                s.emitterEventListeners[eventName] = [];
                return s;
            }
            if (!s.emitterEventListeners[eventName] || s.emitterEventListeners[eventName].length === 0) return;
            for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {
                if (s.emitterEventListeners[eventName][i] === handler) s.emitterEventListeners[eventName].splice(i, 1);
            }
            return s;
        };
        s.once = function (eventName, handler) {
            eventName = normalizeEventName(eventName);
            var _handler = function _handler() {
                handler(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
                s.off(eventName, _handler);
            };
            s.on(eventName, _handler);
            return s;
        };

        // Accessibility tools
        s.a11y = {
            makeFocusable: function makeFocusable($el) {
                $el.attr('tabIndex', '0');
                return $el;
            },
            addRole: function addRole($el, role) {
                $el.attr('role', role);
                return $el;
            },

            addLabel: function addLabel($el, label) {
                $el.attr('aria-label', label);
                return $el;
            },

            disable: function disable($el) {
                $el.attr('aria-disabled', true);
                return $el;
            },

            enable: function enable($el) {
                $el.attr('aria-disabled', false);
                return $el;
            },

            onEnterKey: function onEnterKey(event) {
                if (event.keyCode !== 13) return;
                if ($(event.target).is(s.params.nextButton)) {
                    s.onClickNext(event);
                    if (s.isEnd) {
                        s.a11y.notify(s.params.lastSlideMessage);
                    } else {
                        s.a11y.notify(s.params.nextSlideMessage);
                    }
                } else if ($(event.target).is(s.params.prevButton)) {
                    s.onClickPrev(event);
                    if (s.isBeginning) {
                        s.a11y.notify(s.params.firstSlideMessage);
                    } else {
                        s.a11y.notify(s.params.prevSlideMessage);
                    }
                }
                if ($(event.target).is('.' + s.params.bulletClass)) {
                    $(event.target)[0].click();
                }
            },

            liveRegion: $('<span class="' + s.params.notificationClass + '" aria-live="assertive" aria-atomic="true"></span>'),

            notify: function notify(message) {
                var notification = s.a11y.liveRegion;
                if (notification.length === 0) return;
                notification.html('');
                notification.html(message);
            },
            init: function init() {
                // Setup accessibility
                if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {
                    s.a11y.makeFocusable(s.nextButton);
                    s.a11y.addRole(s.nextButton, 'button');
                    s.a11y.addLabel(s.nextButton, s.params.nextSlideMessage);
                }
                if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {
                    s.a11y.makeFocusable(s.prevButton);
                    s.a11y.addRole(s.prevButton, 'button');
                    s.a11y.addLabel(s.prevButton, s.params.prevSlideMessage);
                }

                $(s.container).append(s.a11y.liveRegion);
            },
            initPagination: function initPagination() {
                if (s.params.pagination && s.params.paginationClickable && s.bullets && s.bullets.length) {
                    s.bullets.each(function () {
                        var bullet = $(this);
                        s.a11y.makeFocusable(bullet);
                        s.a11y.addRole(bullet, 'button');
                        s.a11y.addLabel(bullet, s.params.paginationBulletMessage.replace(/{{index}}/, bullet.index() + 1));
                    });
                }
            },
            destroy: function destroy() {
                if (s.a11y.liveRegion && s.a11y.liveRegion.length > 0) s.a11y.liveRegion.remove();
            }
        };

        /*=========================
          Init/Destroy
          ===========================*/
        s.init = function () {
            if (s.params.loop) s.createLoop();
            s.updateContainerSize();
            s.updateSlidesSize();
            s.updatePagination();
            if (s.params.scrollbar && s.scrollbar) {
                s.scrollbar.set();
                if (s.params.scrollbarDraggable) {
                    s.scrollbar.enableDraggable();
                }
            }
            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {
                if (!s.params.loop) s.updateProgress();
                s.effects[s.params.effect].setTranslate();
            }
            if (s.params.loop) {
                s.slideTo(s.params.initialSlide + s.loopedSlides, 0, s.params.runCallbacksOnInit);
            } else {
                s.slideTo(s.params.initialSlide, 0, s.params.runCallbacksOnInit);
                if (s.params.initialSlide === 0) {
                    if (s.parallax && s.params.parallax) s.parallax.setTranslate();
                    if (s.lazy && s.params.lazyLoading) {
                        s.lazy.load();
                        s.lazy.initialImageLoaded = true;
                    }
                }
            }
            s.attachEvents();
            if (s.params.observer && s.support.observer) {
                s.initObservers();
            }
            if (s.params.preloadImages && !s.params.lazyLoading) {
                s.preloadImages();
            }
            if (s.params.zoom && s.zoom) {
                s.zoom.init();
            }
            if (s.params.autoplay) {
                s.startAutoplay();
            }
            if (s.params.keyboardControl) {
                if (s.enableKeyboardControl) s.enableKeyboardControl();
            }
            if (s.params.mousewheelControl) {
                if (s.enableMousewheelControl) s.enableMousewheelControl();
            }
            // Deprecated hashnavReplaceState changed to replaceState for use in hashnav and history
            if (s.params.hashnavReplaceState) {
                s.params.replaceState = s.params.hashnavReplaceState;
            }
            if (s.params.history) {
                if (s.history) s.history.init();
            }
            if (s.params.hashnav) {
                if (s.hashnav) s.hashnav.init();
            }
            if (s.params.a11y && s.a11y) s.a11y.init();
            s.emit('onInit', s);
        };

        // Cleanup dynamic styles
        s.cleanupStyles = function () {
            // Container
            s.container.removeClass(s.classNames.join(' ')).removeAttr('style');

            // Wrapper
            s.wrapper.removeAttr('style');

            // Slides
            if (s.slides && s.slides.length) {
                s.slides.removeClass([s.params.slideVisibleClass, s.params.slideActiveClass, s.params.slideNextClass, s.params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-column').removeAttr('data-swiper-row');
            }

            // Pagination/Bullets
            if (s.paginationContainer && s.paginationContainer.length) {
                s.paginationContainer.removeClass(s.params.paginationHiddenClass);
            }
            if (s.bullets && s.bullets.length) {
                s.bullets.removeClass(s.params.bulletActiveClass);
            }

            // Buttons
            if (s.params.prevButton) $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);
            if (s.params.nextButton) $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);

            // Scrollbar
            if (s.params.scrollbar && s.scrollbar) {
                if (s.scrollbar.track && s.scrollbar.track.length) s.scrollbar.track.removeAttr('style');
                if (s.scrollbar.drag && s.scrollbar.drag.length) s.scrollbar.drag.removeAttr('style');
            }
        };

        // Destroy
        s.destroy = function (deleteInstance, cleanupStyles) {
            // Detach evebts
            s.detachEvents();
            // Stop autoplay
            s.stopAutoplay();
            // Disable draggable
            if (s.params.scrollbar && s.scrollbar) {
                if (s.params.scrollbarDraggable) {
                    s.scrollbar.disableDraggable();
                }
            }
            // Destroy loop
            if (s.params.loop) {
                s.destroyLoop();
            }
            // Cleanup styles
            if (cleanupStyles) {
                s.cleanupStyles();
            }
            // Disconnect observer
            s.disconnectObservers();

            // Destroy zoom
            if (s.params.zoom && s.zoom) {
                s.zoom.destroy();
            }
            // Disable keyboard/mousewheel
            if (s.params.keyboardControl) {
                if (s.disableKeyboardControl) s.disableKeyboardControl();
            }
            if (s.params.mousewheelControl) {
                if (s.disableMousewheelControl) s.disableMousewheelControl();
            }
            // Disable a11y
            if (s.params.a11y && s.a11y) s.a11y.destroy();
            // Delete history popstate
            if (s.params.history && !s.params.replaceState) {
                window.removeEventListener('popstate', s.history.setHistoryPopState);
            }
            if (s.params.hashnav && s.hashnav) {
                s.hashnav.destroy();
            }
            // Destroy callback
            s.emit('onDestroy');
            // Delete instance
            if (deleteInstance !== false) s = null;
        };

        s.init();

        // Return swiper instance
        return s;
    };

    /*==================================================
        Prototype
    ====================================================*/
    Swiper.prototype = {
        isSafari: function () {
            var ua = window.navigator.userAgent.toLowerCase();
            return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;
        }(),
        isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),
        isArray: function isArray(arr) {
            return Object.prototype.toString.apply(arr) === '[object Array]';
        },
        /*==================================================
        Browser
        ====================================================*/
        browser: {
            ie: window.navigator.pointerEnabled || window.navigator.msPointerEnabled,
            ieTouch: window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1 || window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1,
            lteIE9: function () {
                // create temporary DIV
                var div = document.createElement('div');
                // add content to tmp DIV which is wrapped into the IE HTML conditional statement
                div.innerHTML = '<!--[if lte IE 9]><i></i><![endif]-->';
                // return true / false value based on what will browser render
                return div.getElementsByTagName('i').length === 1;
            }()
        },
        /*==================================================
        Devices
        ====================================================*/
        device: function () {
            var ua = window.navigator.userAgent;
            var android = ua.match(/(Android);?[\s\/]+([\d.]+)?/);
            var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
            var ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
            var iphone = !ipad && ua.match(/(iPhone\sOS|iOS)\s([\d_]+)/);
            return {
                ios: ipad || iphone || ipod,
                android: android
            };
        }(),
        /*==================================================
        Feature Detection
        ====================================================*/
        support: {
            touch: window.Modernizr && Modernizr.touch === true || function () {
                return !!('ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch);
            }(),

            transforms3d: window.Modernizr && Modernizr.csstransforms3d === true || function () {
                var div = document.createElement('div').style;
                return 'webkitPerspective' in div || 'MozPerspective' in div || 'OPerspective' in div || 'MsPerspective' in div || 'perspective' in div;
            }(),

            flexbox: function () {
                var div = document.createElement('div').style;
                var styles = 'alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient'.split(' ');
                for (var i = 0; i < styles.length; i++) {
                    if (styles[i] in div) return true;
                }
            }(),

            observer: function () {
                return 'MutationObserver' in window || 'WebkitMutationObserver' in window;
            }(),

            passiveListener: function () {
                var supportsPassive = false;
                try {
                    var opts = Object.defineProperty({}, 'passive', {
                        get: function get() {
                            supportsPassive = true;
                        }
                    });
                    window.addEventListener('testPassiveListener', null, opts);
                } catch (e) {}
                return supportsPassive;
            }(),

            gestures: function () {
                return 'ongesturestart' in window;
            }()
        },
        /*==================================================
        Plugins
        ====================================================*/
        plugins: {}
    };

    /*===========================
    Dom7 Library
    ===========================*/
    var Dom7 = function () {
        var Dom7 = function Dom7(arr) {
            var _this = this,
                i = 0;
            // Create array-like object
            for (i = 0; i < arr.length; i++) {
                _this[i] = arr[i];
            }
            _this.length = arr.length;
            // Return collection with methods
            return this;
        };
        var $ = function $(selector, context) {
            var arr = [],
                i = 0;
            if (selector && !context) {
                if (selector instanceof Dom7) {
                    return selector;
                }
            }
            if (selector) {
                // String
                if (typeof selector === 'string') {
                    var els,
                        tempParent,
                        html = selector.trim();
                    if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {
                        var toCreate = 'div';
                        if (html.indexOf('<li') === 0) toCreate = 'ul';
                        if (html.indexOf('<tr') === 0) toCreate = 'tbody';
                        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';
                        if (html.indexOf('<tbody') === 0) toCreate = 'table';
                        if (html.indexOf('<option') === 0) toCreate = 'select';
                        tempParent = document.createElement(toCreate);
                        tempParent.innerHTML = selector;
                        for (i = 0; i < tempParent.childNodes.length; i++) {
                            arr.push(tempParent.childNodes[i]);
                        }
                    } else {
                        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {
                            // Pure ID selector
                            els = [document.getElementById(selector.split('#')[1])];
                        } else {
                            // Other selectors
                            els = (context || document).querySelectorAll(selector);
                        }
                        for (i = 0; i < els.length; i++) {
                            if (els[i]) arr.push(els[i]);
                        }
                    }
                }
                // Node/element
                else if (selector.nodeType || selector === window || selector === document) {
                        arr.push(selector);
                    }
                    //Array of elements or instance of Dom
                    else if (selector.length > 0 && selector[0].nodeType) {
                            for (i = 0; i < selector.length; i++) {
                                arr.push(selector[i]);
                            }
                        }
            }
            return new Dom7(arr);
        };
        Dom7.prototype = {
            // Classes and attriutes
            addClass: function addClass(className) {
                if (typeof className === 'undefined') {
                    return this;
                }
                var classes = className.split(' ');
                for (var i = 0; i < classes.length; i++) {
                    for (var j = 0; j < this.length; j++) {
                        this[j].classList.add(classes[i]);
                    }
                }
                return this;
            },
            removeClass: function removeClass(className) {
                var classes = className.split(' ');
                for (var i = 0; i < classes.length; i++) {
                    for (var j = 0; j < this.length; j++) {
                        this[j].classList.remove(classes[i]);
                    }
                }
                return this;
            },
            hasClass: function hasClass(className) {
                if (!this[0]) return false;else return this[0].classList.contains(className);
            },
            toggleClass: function toggleClass(className) {
                var classes = className.split(' ');
                for (var i = 0; i < classes.length; i++) {
                    for (var j = 0; j < this.length; j++) {
                        this[j].classList.toggle(classes[i]);
                    }
                }
                return this;
            },
            attr: function attr(attrs, value) {
                if (arguments.length === 1 && typeof attrs === 'string') {
                    // Get attr
                    if (this[0]) return this[0].getAttribute(attrs);else return undefined;
                } else {
                    // Set attrs
                    for (var i = 0; i < this.length; i++) {
                        if (arguments.length === 2) {
                            // String
                            this[i].setAttribute(attrs, value);
                        } else {
                            // Object
                            for (var attrName in attrs) {
                                this[i][attrName] = attrs[attrName];
                                this[i].setAttribute(attrName, attrs[attrName]);
                            }
                        }
                    }
                    return this;
                }
            },
            removeAttr: function removeAttr(attr) {
                for (var i = 0; i < this.length; i++) {
                    this[i].removeAttribute(attr);
                }
                return this;
            },
            data: function data(key, value) {
                if (typeof value === 'undefined') {
                    // Get value
                    if (this[0]) {
                        var dataKey = this[0].getAttribute('data-' + key);
                        if (dataKey) return dataKey;else if (this[0].dom7ElementDataStorage && key in this[0].dom7ElementDataStorage) return this[0].dom7ElementDataStorage[key];else return undefined;
                    } else return undefined;
                } else {
                    // Set value
                    for (var i = 0; i < this.length; i++) {
                        var el = this[i];
                        if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};
                        el.dom7ElementDataStorage[key] = value;
                    }
                    return this;
                }
            },
            // Transforms
            transform: function transform(_transform) {
                for (var i = 0; i < this.length; i++) {
                    var elStyle = this[i].style;
                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = _transform;
                }
                return this;
            },
            transition: function transition(duration) {
                if (typeof duration !== 'string') {
                    duration = duration + 'ms';
                }
                for (var i = 0; i < this.length; i++) {
                    var elStyle = this[i].style;
                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;
                }
                return this;
            },
            //Events
            on: function on(eventName, targetSelector, listener, capture) {
                function handleLiveEvent(e) {
                    var target = e.target;
                    if ($(target).is(targetSelector)) listener.call(target, e);else {
                        var parents = $(target).parents();
                        for (var k = 0; k < parents.length; k++) {
                            if ($(parents[k]).is(targetSelector)) listener.call(parents[k], e);
                        }
                    }
                }
                var events = eventName.split(' ');
                var i, j;
                for (i = 0; i < this.length; i++) {
                    if (typeof targetSelector === 'function' || targetSelector === false) {
                        // Usual events
                        if (typeof targetSelector === 'function') {
                            listener = arguments[1];
                            capture = arguments[2] || false;
                        }
                        for (j = 0; j < events.length; j++) {
                            this[i].addEventListener(events[j], listener, capture);
                        }
                    } else {
                        //Live events
                        for (j = 0; j < events.length; j++) {
                            if (!this[i].dom7LiveListeners) this[i].dom7LiveListeners = [];
                            this[i].dom7LiveListeners.push({ listener: listener, liveListener: handleLiveEvent });
                            this[i].addEventListener(events[j], handleLiveEvent, capture);
                        }
                    }
                }

                return this;
            },
            off: function off(eventName, targetSelector, listener, capture) {
                var events = eventName.split(' ');
                for (var i = 0; i < events.length; i++) {
                    for (var j = 0; j < this.length; j++) {
                        if (typeof targetSelector === 'function' || targetSelector === false) {
                            // Usual events
                            if (typeof targetSelector === 'function') {
                                listener = arguments[1];
                                capture = arguments[2] || false;
                            }
                            this[j].removeEventListener(events[i], listener, capture);
                        } else {
                            // Live event
                            if (this[j].dom7LiveListeners) {
                                for (var k = 0; k < this[j].dom7LiveListeners.length; k++) {
                                    if (this[j].dom7LiveListeners[k].listener === listener) {
                                        this[j].removeEventListener(events[i], this[j].dom7LiveListeners[k].liveListener, capture);
                                    }
                                }
                            }
                        }
                    }
                }
                return this;
            },
            once: function once(eventName, targetSelector, listener, capture) {
                var dom = this;
                if (typeof targetSelector === 'function') {
                    targetSelector = false;
                    listener = arguments[1];
                    capture = arguments[2];
                }
                function proxy(e) {
                    listener(e);
                    dom.off(eventName, targetSelector, proxy, capture);
                }
                dom.on(eventName, targetSelector, proxy, capture);
            },
            trigger: function trigger(eventName, eventData) {
                for (var i = 0; i < this.length; i++) {
                    var evt;
                    try {
                        evt = new window.CustomEvent(eventName, { detail: eventData, bubbles: true, cancelable: true });
                    } catch (e) {
                        evt = document.createEvent('Event');
                        evt.initEvent(eventName, true, true);
                        evt.detail = eventData;
                    }
                    this[i].dispatchEvent(evt);
                }
                return this;
            },
            transitionEnd: function transitionEnd(callback) {
                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],
                    i,
                    j,
                    dom = this;
                function fireCallBack(e) {
                    /*jshint validthis:true */
                    if (e.target !== this) return;
                    callback.call(this, e);
                    for (i = 0; i < events.length; i++) {
                        dom.off(events[i], fireCallBack);
                    }
                }
                if (callback) {
                    for (i = 0; i < events.length; i++) {
                        dom.on(events[i], fireCallBack);
                    }
                }
                return this;
            },
            // Sizing/Styles
            width: function width() {
                if (this[0] === window) {
                    return window.innerWidth;
                } else {
                    if (this.length > 0) {
                        return parseFloat(this.css('width'));
                    } else {
                        return null;
                    }
                }
            },
            outerWidth: function outerWidth(includeMargins) {
                if (this.length > 0) {
                    if (includeMargins) return this[0].offsetWidth + parseFloat(this.css('margin-right')) + parseFloat(this.css('margin-left'));else return this[0].offsetWidth;
                } else return null;
            },
            height: function height() {
                if (this[0] === window) {
                    return window.innerHeight;
                } else {
                    if (this.length > 0) {
                        return parseFloat(this.css('height'));
                    } else {
                        return null;
                    }
                }
            },
            outerHeight: function outerHeight(includeMargins) {
                if (this.length > 0) {
                    if (includeMargins) return this[0].offsetHeight + parseFloat(this.css('margin-top')) + parseFloat(this.css('margin-bottom'));else return this[0].offsetHeight;
                } else return null;
            },
            offset: function offset() {
                if (this.length > 0) {
                    var el = this[0];
                    var box = el.getBoundingClientRect();
                    var body = document.body;
                    var clientTop = el.clientTop || body.clientTop || 0;
                    var clientLeft = el.clientLeft || body.clientLeft || 0;
                    var scrollTop = window.pageYOffset || el.scrollTop;
                    var scrollLeft = window.pageXOffset || el.scrollLeft;
                    return {
                        top: box.top + scrollTop - clientTop,
                        left: box.left + scrollLeft - clientLeft
                    };
                } else {
                    return null;
                }
            },
            css: function css(props, value) {
                var i;
                if (arguments.length === 1) {
                    if (typeof props === 'string') {
                        if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);
                    } else {
                        for (i = 0; i < this.length; i++) {
                            for (var prop in props) {
                                this[i].style[prop] = props[prop];
                            }
                        }
                        return this;
                    }
                }
                if (arguments.length === 2 && typeof props === 'string') {
                    for (i = 0; i < this.length; i++) {
                        this[i].style[props] = value;
                    }
                    return this;
                }
                return this;
            },

            //Dom manipulation
            each: function each(callback) {
                for (var i = 0; i < this.length; i++) {
                    callback.call(this[i], i, this[i]);
                }
                return this;
            },
            html: function html(_html) {
                if (typeof _html === 'undefined') {
                    return this[0] ? this[0].innerHTML : undefined;
                } else {
                    for (var i = 0; i < this.length; i++) {
                        this[i].innerHTML = _html;
                    }
                    return this;
                }
            },
            text: function text(_text) {
                if (typeof _text === 'undefined') {
                    if (this[0]) {
                        return this[0].textContent.trim();
                    } else return null;
                } else {
                    for (var i = 0; i < this.length; i++) {
                        this[i].textContent = _text;
                    }
                    return this;
                }
            },
            is: function is(selector) {
                if (!this[0]) return false;
                var compareWith, i;
                if (typeof selector === 'string') {
                    var el = this[0];
                    if (el === document) return selector === document;
                    if (el === window) return selector === window;

                    if (el.matches) return el.matches(selector);else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);else if (el.mozMatchesSelector) return el.mozMatchesSelector(selector);else if (el.msMatchesSelector) return el.msMatchesSelector(selector);else {
                        compareWith = $(selector);
                        for (i = 0; i < compareWith.length; i++) {
                            if (compareWith[i] === this[0]) return true;
                        }
                        return false;
                    }
                } else if (selector === document) return this[0] === document;else if (selector === window) return this[0] === window;else {
                    if (selector.nodeType || selector instanceof Dom7) {
                        compareWith = selector.nodeType ? [selector] : selector;
                        for (i = 0; i < compareWith.length; i++) {
                            if (compareWith[i] === this[0]) return true;
                        }
                        return false;
                    }
                    return false;
                }
            },
            index: function index() {
                if (this[0]) {
                    var child = this[0];
                    var i = 0;
                    while ((child = child.previousSibling) !== null) {
                        if (child.nodeType === 1) i++;
                    }
                    return i;
                } else return undefined;
            },
            eq: function eq(index) {
                if (typeof index === 'undefined') return this;
                var length = this.length;
                var returnIndex;
                if (index > length - 1) {
                    return new Dom7([]);
                }
                if (index < 0) {
                    returnIndex = length + index;
                    if (returnIndex < 0) return new Dom7([]);else return new Dom7([this[returnIndex]]);
                }
                return new Dom7([this[index]]);
            },
            append: function append(newChild) {
                var i, j;
                for (i = 0; i < this.length; i++) {
                    if (typeof newChild === 'string') {
                        var tempDiv = document.createElement('div');
                        tempDiv.innerHTML = newChild;
                        while (tempDiv.firstChild) {
                            this[i].appendChild(tempDiv.firstChild);
                        }
                    } else if (newChild instanceof Dom7) {
                        for (j = 0; j < newChild.length; j++) {
                            this[i].appendChild(newChild[j]);
                        }
                    } else {
                        this[i].appendChild(newChild);
                    }
                }
                return this;
            },
            prepend: function prepend(newChild) {
                var i, j;
                for (i = 0; i < this.length; i++) {
                    if (typeof newChild === 'string') {
                        var tempDiv = document.createElement('div');
                        tempDiv.innerHTML = newChild;
                        for (j = tempDiv.childNodes.length - 1; j >= 0; j--) {
                            this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);
                        }
                        // this[i].insertAdjacentHTML('afterbegin', newChild);
                    } else if (newChild instanceof Dom7) {
                        for (j = 0; j < newChild.length; j++) {
                            this[i].insertBefore(newChild[j], this[i].childNodes[0]);
                        }
                    } else {
                        this[i].insertBefore(newChild, this[i].childNodes[0]);
                    }
                }
                return this;
            },
            insertBefore: function insertBefore(selector) {
                var before = $(selector);
                for (var i = 0; i < this.length; i++) {
                    if (before.length === 1) {
                        before[0].parentNode.insertBefore(this[i], before[0]);
                    } else if (before.length > 1) {
                        for (var j = 0; j < before.length; j++) {
                            before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);
                        }
                    }
                }
            },
            insertAfter: function insertAfter(selector) {
                var after = $(selector);
                for (var i = 0; i < this.length; i++) {
                    if (after.length === 1) {
                        after[0].parentNode.insertBefore(this[i], after[0].nextSibling);
                    } else if (after.length > 1) {
                        for (var j = 0; j < after.length; j++) {
                            after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);
                        }
                    }
                }
            },
            next: function next(selector) {
                if (this.length > 0) {
                    if (selector) {
                        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) return new Dom7([this[0].nextElementSibling]);else return new Dom7([]);
                    } else {
                        if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);else return new Dom7([]);
                    }
                } else return new Dom7([]);
            },
            nextAll: function nextAll(selector) {
                var nextEls = [];
                var el = this[0];
                if (!el) return new Dom7([]);
                while (el.nextElementSibling) {
                    var next = el.nextElementSibling;
                    if (selector) {
                        if ($(next).is(selector)) nextEls.push(next);
                    } else nextEls.push(next);
                    el = next;
                }
                return new Dom7(nextEls);
            },
            prev: function prev(selector) {
                if (this.length > 0) {
                    if (selector) {
                        if (this[0].previousElementSibling && $(this[0].previousElementSibling).is(selector)) return new Dom7([this[0].previousElementSibling]);else return new Dom7([]);
                    } else {
                        if (this[0].previousElementSibling) return new Dom7([this[0].previousElementSibling]);else return new Dom7([]);
                    }
                } else return new Dom7([]);
            },
            prevAll: function prevAll(selector) {
                var prevEls = [];
                var el = this[0];
                if (!el) return new Dom7([]);
                while (el.previousElementSibling) {
                    var prev = el.previousElementSibling;
                    if (selector) {
                        if ($(prev).is(selector)) prevEls.push(prev);
                    } else prevEls.push(prev);
                    el = prev;
                }
                return new Dom7(prevEls);
            },
            parent: function parent(selector) {
                var parents = [];
                for (var i = 0; i < this.length; i++) {
                    if (selector) {
                        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);
                    } else {
                        parents.push(this[i].parentNode);
                    }
                }
                return $($.unique(parents));
            },
            parents: function parents(selector) {
                var parents = [];
                for (var i = 0; i < this.length; i++) {
                    var parent = this[i].parentNode;
                    while (parent) {
                        if (selector) {
                            if ($(parent).is(selector)) parents.push(parent);
                        } else {
                            parents.push(parent);
                        }
                        parent = parent.parentNode;
                    }
                }
                return $($.unique(parents));
            },
            find: function find(selector) {
                var foundElements = [];
                for (var i = 0; i < this.length; i++) {
                    var found = this[i].querySelectorAll(selector);
                    for (var j = 0; j < found.length; j++) {
                        foundElements.push(found[j]);
                    }
                }
                return new Dom7(foundElements);
            },
            children: function children(selector) {
                var children = [];
                for (var i = 0; i < this.length; i++) {
                    var childNodes = this[i].childNodes;

                    for (var j = 0; j < childNodes.length; j++) {
                        if (!selector) {
                            if (childNodes[j].nodeType === 1) children.push(childNodes[j]);
                        } else {
                            if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) children.push(childNodes[j]);
                        }
                    }
                }
                return new Dom7($.unique(children));
            },
            remove: function remove() {
                for (var i = 0; i < this.length; i++) {
                    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);
                }
                return this;
            },
            add: function add() {
                var dom = this;
                var i, j;
                for (i = 0; i < arguments.length; i++) {
                    var toAdd = $(arguments[i]);
                    for (j = 0; j < toAdd.length; j++) {
                        dom[dom.length] = toAdd[j];
                        dom.length++;
                    }
                }
                return dom;
            }
        };
        $.fn = Dom7.prototype;
        $.unique = function (arr) {
            var unique = [];
            for (var i = 0; i < arr.length; i++) {
                if (unique.indexOf(arr[i]) === -1) unique.push(arr[i]);
            }
            return unique;
        };

        return $;
    }();

    /*===========================
     Get Dom libraries
     ===========================*/
    var swiperDomPlugins = ['jQuery', 'Zepto', 'Dom7'];
    for (var i = 0; i < swiperDomPlugins.length; i++) {
        if (window[swiperDomPlugins[i]]) {
            addLibraryPlugin(window[swiperDomPlugins[i]]);
        }
    }
    // Required DOM Plugins
    var domLib;
    if (typeof Dom7 === 'undefined') {
        domLib = window.Dom7 || window.Zepto || window.jQuery;
    } else {
        domLib = Dom7;
    }

    /*===========================
    Add .swiper plugin from Dom libraries
    ===========================*/
    function addLibraryPlugin(lib) {
        lib.fn.swiper = function (params) {
            var firstInstance;
            lib(this).each(function () {
                var s = new Swiper(this, params);
                if (!firstInstance) firstInstance = s;
            });
            return firstInstance;
        };
    }

    if (domLib) {
        if (!('transitionEnd' in domLib.fn)) {
            domLib.fn.transitionEnd = function (callback) {
                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],
                    i,
                    j,
                    dom = this;
                function fireCallBack(e) {
                    /*jshint validthis:true */
                    if (e.target !== this) return;
                    callback.call(this, e);
                    for (i = 0; i < events.length; i++) {
                        dom.off(events[i], fireCallBack);
                    }
                }
                if (callback) {
                    for (i = 0; i < events.length; i++) {
                        dom.on(events[i], fireCallBack);
                    }
                }
                return this;
            };
        }
        if (!('transform' in domLib.fn)) {
            domLib.fn.transform = function (transform) {
                for (var i = 0; i < this.length; i++) {
                    var elStyle = this[i].style;
                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;
                }
                return this;
            };
        }
        if (!('transition' in domLib.fn)) {
            domLib.fn.transition = function (duration) {
                if (typeof duration !== 'string') {
                    duration = duration + 'ms';
                }
                for (var i = 0; i < this.length; i++) {
                    var elStyle = this[i].style;
                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;
                }
                return this;
            };
        }
        if (!('outerWidth' in domLib.fn)) {
            domLib.fn.outerWidth = function (includeMargins) {
                if (this.length > 0) {
                    if (includeMargins) return this[0].offsetWidth + parseFloat(this.css('margin-right')) + parseFloat(this.css('margin-left'));else return this[0].offsetWidth;
                } else return null;
            };
        }
    }

    window.Swiper = Swiper;
})();

/*===========================
Swiper AMD Export
===========================*/
if (typeof module !== 'undefined') {
    module.exports = window.Swiper;
} else if (typeof define === 'function' && define.amd) {
    define([], function () {
        'use strict';

        return window.Swiper;
    });
}



},{}],328:[function(require,module,exports){
(function (process){
/*!
 * vue-i18n v7.2.0 
 * (c) 2017 kazuya kawaguchi
 * Released under the MIT License.
 */
'use strict';

/*  */

/**
 * utilites
 */

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function warn(msg, err) {
  if (typeof console !== 'undefined') {
    console.warn('[vue-i18n] ' + msg);
    /* istanbul ignore if */
    if (err) {
      console.warn(err.stack);
    }
  }
}

function isObject(obj) {
  return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';
}

var toString = Object.prototype.toString;
var OBJECT_STRING = '[object Object]';
function isPlainObject(obj) {
  return toString.call(obj) === OBJECT_STRING;
}

function isNull(val) {
  return val === null || val === undefined;
}

function parseArgs() {
  var args = [],
      len = arguments.length;
  while (len--) {
    args[len] = arguments[len];
  }var locale = null;
  var params = null;
  if (args.length === 1) {
    if (isObject(args[0]) || Array.isArray(args[0])) {
      params = args[0];
    } else if (typeof args[0] === 'string') {
      locale = args[0];
    }
  } else if (args.length === 2) {
    if (typeof args[0] === 'string') {
      locale = args[0];
    }
    /* istanbul ignore if */
    if (isObject(args[1]) || Array.isArray(args[1])) {
      params = args[1];
    }
  }

  return { locale: locale, params: params };
}

function getOldChoiceIndexFixed(choice) {
  return choice ? choice > 1 ? 1 : 0 : 1;
}

function getChoiceIndex(choice, choicesLength) {
  choice = Math.abs(choice);

  if (choicesLength === 2) {
    return getOldChoiceIndexFixed(choice);
  }

  return choice ? Math.min(choice, 2) : 0;
}

function fetchChoice(message, choice) {
  /* istanbul ignore if */
  if (!message && typeof message !== 'string') {
    return null;
  }
  var choices = message.split('|');

  choice = getChoiceIndex(choice, choices.length);
  if (!choices[choice]) {
    return message;
  }
  return choices[choice].trim();
}

function looseClone(obj) {
  return JSON.parse(JSON.stringify(obj));
}

function remove(arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1);
    }
  }
}

var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}

function merge(target) {
  var arguments$1 = arguments;

  var output = Object(target);
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments$1[i];
    if (source !== undefined && source !== null) {
      var key = void 0;
      for (key in source) {
        if (hasOwn(source, key)) {
          if (isObject(source[key])) {
            output[key] = merge(output[key], source[key]);
          } else {
            output[key] = source[key];
          }
        }
      }
    }
  }
  return output;
}

var canUseDateTimeFormat = typeof Intl !== 'undefined' && typeof Intl.DateTimeFormat !== 'undefined';

var canUseNumberFormat = typeof Intl !== 'undefined' && typeof Intl.NumberFormat !== 'undefined';

/*  */

function extend(Vue) {
  Vue.prototype.$t = function (key) {
    var values = [],
        len = arguments.length - 1;
    while (len-- > 0) {
      values[len] = arguments[len + 1];
    }var i18n = this.$i18n;
    return i18n._t.apply(i18n, [key, i18n.locale, i18n._getMessages(), this].concat(values));
  };

  Vue.prototype.$tc = function (key, choice) {
    var values = [],
        len = arguments.length - 2;
    while (len-- > 0) {
      values[len] = arguments[len + 2];
    }var i18n = this.$i18n;
    return i18n._tc.apply(i18n, [key, i18n.locale, i18n._getMessages(), this, choice].concat(values));
  };

  Vue.prototype.$te = function (key, locale) {
    var i18n = this.$i18n;
    return i18n._te(key, i18n.locale, i18n._getMessages(), locale);
  };

  Vue.prototype.$d = function (value) {
    var args = [],
        len = arguments.length - 1;
    while (len-- > 0) {
      args[len] = arguments[len + 1];
    }return (ref = this.$i18n).d.apply(ref, [value].concat(args));
    var ref;
  };

  Vue.prototype.$n = function (value) {
    var args = [],
        len = arguments.length - 1;
    while (len-- > 0) {
      args[len] = arguments[len + 1];
    }return (ref = this.$i18n).n.apply(ref, [value].concat(args));
    var ref;
  };
}

/*  */

var mixin = {
  beforeCreate: function beforeCreate() {
    var options = this.$options;
    options.i18n = options.i18n || (options.__i18n ? {} : null);

    if (options.i18n) {
      if (options.i18n instanceof VueI18n) {
        // init locale messages via custom blocks
        if (options.__i18n) {
          try {
            var localeMessages = {};
            options.__i18n.forEach(function (resource) {
              localeMessages = merge(localeMessages, JSON.parse(resource));
            });
            Object.keys(localeMessages).forEach(function (locale) {
              options.i18n.mergeLocaleMessage(locale, localeMessages[locale]);
            });
          } catch (e) {
            if (process.env.NODE_ENV !== 'production') {
              warn("Cannot parse locale messages via custom blocks.", e);
            }
          }
        }
        this._i18n = options.i18n;
        this._i18nWatcher = this._i18n.watchI18nData();
        this._i18n.subscribeDataChanging(this);
        this._subscribing = true;
      } else if (isPlainObject(options.i18n)) {
        // component local i18n
        if (this.$root && this.$root.$i18n && this.$root.$i18n instanceof VueI18n) {
          options.i18n.root = this.$root.$i18n;
          options.i18n.fallbackLocale = this.$root.$i18n.fallbackLocale;
          options.i18n.silentTranslationWarn = this.$root.$i18n.silentTranslationWarn;
        }

        // init locale messages via custom blocks
        if (options.__i18n) {
          try {
            var localeMessages$1 = {};
            options.__i18n.forEach(function (resource) {
              localeMessages$1 = merge(localeMessages$1, JSON.parse(resource));
            });
            options.i18n.messages = localeMessages$1;
          } catch (e) {
            if (process.env.NODE_ENV !== 'production') {
              warn("Cannot parse locale messages via custom blocks.", e);
            }
          }
        }

        this._i18n = new VueI18n(options.i18n);
        this._i18nWatcher = this._i18n.watchI18nData();
        this._i18n.subscribeDataChanging(this);
        this._subscribing = true;

        if (options.i18n.sync === undefined || !!options.i18n.sync) {
          this._localeWatcher = this.$i18n.watchLocale();
        }
      } else {
        if (process.env.NODE_ENV !== 'production') {
          warn("Cannot be interpreted 'i18n' option.");
        }
      }
    } else if (this.$root && this.$root.$i18n && this.$root.$i18n instanceof VueI18n) {
      // root i18n
      this._i18n = this.$root.$i18n;
      this._i18n.subscribeDataChanging(this);
      this._subscribing = true;
    } else if (options.parent && options.parent.$i18n && options.parent.$i18n instanceof VueI18n) {
      // parent i18n
      this._i18n = options.parent.$i18n;
      this._i18n.subscribeDataChanging(this);
      this._subscribing = true;
    }
  },

  beforeDestroy: function beforeDestroy() {
    if (!this._i18n) {
      return;
    }

    if (this._subscribing) {
      this._i18n.unsubscribeDataChanging(this);
      delete this._subscribing;
    }

    if (this._i18nWatcher) {
      this._i18nWatcher();
      delete this._i18nWatcher;
    }

    if (this._localeWatcher) {
      this._localeWatcher();
      delete this._localeWatcher;
    }

    this._i18n = null;
  }
};

/*  */

var component = {
  name: 'i18n',
  functional: true,
  props: {
    tag: {
      type: String,
      default: 'span'
    },
    path: {
      type: String,
      required: true
    },
    locale: {
      type: String
    },
    places: {
      type: [Array, Object]
    }
  },
  render: function render(h, ref) {
    var props = ref.props;
    var data = ref.data;
    var children = ref.children;
    var parent = ref.parent;

    var i18n = parent.$i18n;

    children = (children || []).filter(function (child) {
      return child.tag || (child.text = child.text.trim());
    });

    if (!i18n) {
      if (process.env.NODE_ENV !== 'production') {
        warn('Cannot find VueI18n instance!');
      }
      return children;
    }

    var path = props.path;
    var locale = props.locale;

    var params = {};
    var places = props.places || {};

    var hasPlaces = Array.isArray(places) ? places.length > 0 : Object.keys(places).length > 0;

    var everyPlace = children.every(function (child) {
      if (child.data && child.data.attrs) {
        var place = child.data.attrs.place;
        return typeof place !== 'undefined' && place !== '';
      }
    });

    if (hasPlaces && children.length > 0 && !everyPlace) {
      warn('If places prop is set, all child elements must have place prop set.');
    }

    if (Array.isArray(places)) {
      places.forEach(function (el, i) {
        params[i] = el;
      });
    } else {
      Object.keys(places).forEach(function (key) {
        params[key] = places[key];
      });
    }

    children.forEach(function (child, i) {
      var key = everyPlace ? "" + child.data.attrs.place : "" + i;
      params[key] = child;
    });

    return h(props.tag, data, i18n.i(path, locale, params));
  }
};

var Vue;

function install(_Vue) {
  Vue = _Vue;

  var version = Vue.version && Number(Vue.version.split('.')[0]) || -1;
  /* istanbul ignore if */
  if (process.env.NODE_ENV !== 'production' && install.installed) {
    warn('already installed.');
    return;
  }
  install.installed = true;

  /* istanbul ignore if */
  if (process.env.NODE_ENV !== 'production' && version < 2) {
    warn("vue-i18n (" + install.version + ") need to use Vue 2.0 or later (Vue: " + Vue.version + ").");
    return;
  }

  Object.defineProperty(Vue.prototype, '$i18n', {
    get: function get() {
      return this._i18n;
    }
  });

  extend(Vue);
  Vue.mixin(mixin);
  Vue.component(component.name, component);

  // use object-based merge strategy
  var strats = Vue.config.optionMergeStrategies;
  strats.i18n = strats.methods;
}

/*  */

var BaseFormatter = function BaseFormatter() {
  this._caches = Object.create(null);
};

BaseFormatter.prototype.interpolate = function interpolate(message, values) {
  var tokens = this._caches[message];
  if (!tokens) {
    tokens = parse(message);
    this._caches[message] = tokens;
  }
  return compile(tokens, values);
};

var RE_TOKEN_LIST_VALUE = /^(\d)+/;
var RE_TOKEN_NAMED_VALUE = /^(\w)+/;

function parse(format) {
  var tokens = [];
  var position = 0;

  var text = '';
  while (position < format.length) {
    var char = format[position++];
    if (char === '{') {
      if (text) {
        tokens.push({ type: 'text', value: text });
      }

      text = '';
      var sub = '';
      char = format[position++];
      while (char !== '}') {
        sub += char;
        char = format[position++];
      }

      var type = RE_TOKEN_LIST_VALUE.test(sub) ? 'list' : RE_TOKEN_NAMED_VALUE.test(sub) ? 'named' : 'unknown';
      tokens.push({ value: sub, type: type });
    } else if (char === '%') {
      // when found rails i18n syntax, skip text capture
      if (format[position] !== '{') {
        text += char;
      }
    } else {
      text += char;
    }
  }

  text && tokens.push({ type: 'text', value: text });

  return tokens;
}

function compile(tokens, values) {
  var compiled = [];
  var index = 0;

  var mode = Array.isArray(values) ? 'list' : isObject(values) ? 'named' : 'unknown';
  if (mode === 'unknown') {
    return compiled;
  }

  while (index < tokens.length) {
    var token = tokens[index];
    switch (token.type) {
      case 'text':
        compiled.push(token.value);
        break;
      case 'list':
        compiled.push(values[parseInt(token.value, 10)]);
        break;
      case 'named':
        if (mode === 'named') {
          compiled.push(values[token.value]);
        } else {
          if (process.env.NODE_ENV !== 'production') {
            warn("Type of token '" + token.type + "' and format of value '" + mode + "' don't match!");
          }
        }
        break;
      case 'unknown':
        if (process.env.NODE_ENV !== 'production') {
          warn("Detect 'unknown' type of token!");
        }
        break;
    }
    index++;
  }

  return compiled;
}

/*  */

/**
 *  Path paerser
 *  - Inspired:
 *    Vue.js Path parser
 */

// actions
var APPEND = 0;
var PUSH = 1;
var INC_SUB_PATH_DEPTH = 2;
var PUSH_SUB_PATH = 3;

// states
var BEFORE_PATH = 0;
var IN_PATH = 1;
var BEFORE_IDENT = 2;
var IN_IDENT = 3;
var IN_SUB_PATH = 4;
var IN_SINGLE_QUOTE = 5;
var IN_DOUBLE_QUOTE = 6;
var AFTER_PATH = 7;
var ERROR = 8;

var pathStateMachine = [];

pathStateMachine[BEFORE_PATH] = {
  'ws': [BEFORE_PATH],
  'ident': [IN_IDENT, APPEND],
  '[': [IN_SUB_PATH],
  'eof': [AFTER_PATH]
};

pathStateMachine[IN_PATH] = {
  'ws': [IN_PATH],
  '.': [BEFORE_IDENT],
  '[': [IN_SUB_PATH],
  'eof': [AFTER_PATH]
};

pathStateMachine[BEFORE_IDENT] = {
  'ws': [BEFORE_IDENT],
  'ident': [IN_IDENT, APPEND],
  '0': [IN_IDENT, APPEND],
  'number': [IN_IDENT, APPEND]
};

pathStateMachine[IN_IDENT] = {
  'ident': [IN_IDENT, APPEND],
  '0': [IN_IDENT, APPEND],
  'number': [IN_IDENT, APPEND],
  'ws': [IN_PATH, PUSH],
  '.': [BEFORE_IDENT, PUSH],
  '[': [IN_SUB_PATH, PUSH],
  'eof': [AFTER_PATH, PUSH]
};

pathStateMachine[IN_SUB_PATH] = {
  "'": [IN_SINGLE_QUOTE, APPEND],
  '"': [IN_DOUBLE_QUOTE, APPEND],
  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],
  ']': [IN_PATH, PUSH_SUB_PATH],
  'eof': ERROR,
  'else': [IN_SUB_PATH, APPEND]
};

pathStateMachine[IN_SINGLE_QUOTE] = {
  "'": [IN_SUB_PATH, APPEND],
  'eof': ERROR,
  'else': [IN_SINGLE_QUOTE, APPEND]
};

pathStateMachine[IN_DOUBLE_QUOTE] = {
  '"': [IN_SUB_PATH, APPEND],
  'eof': ERROR,
  'else': [IN_DOUBLE_QUOTE, APPEND]
};

/**
 * Check if an expression is a literal value.
 */

var literalValueRE = /^\s?(true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;
function isLiteral(exp) {
  return literalValueRE.test(exp);
}

/**
 * Strip quotes from a string
 */

function stripQuotes(str) {
  var a = str.charCodeAt(0);
  var b = str.charCodeAt(str.length - 1);
  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;
}

/**
 * Determine the type of a character in a keypath.
 */

function getPathCharType(ch) {
  if (ch === undefined || ch === null) {
    return 'eof';
  }

  var code = ch.charCodeAt(0);

  switch (code) {
    case 0x5B: // [
    case 0x5D: // ]
    case 0x2E: // .
    case 0x22: // "
    case 0x27: // '
    case 0x30:
      // 0
      return ch;

    case 0x5F: // _
    case 0x24: // $
    case 0x2D:
      // -
      return 'ident';

    case 0x20: // Space
    case 0x09: // Tab
    case 0x0A: // Newline
    case 0x0D: // Return
    case 0xA0: // No-break space
    case 0xFEFF: // Byte Order Mark
    case 0x2028: // Line Separator
    case 0x2029:
      // Paragraph Separator
      return 'ws';
  }

  // a-z, A-Z
  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {
    return 'ident';
  }

  // 1-9
  if (code >= 0x31 && code <= 0x39) {
    return 'number';
  }

  return 'else';
}

/**
 * Format a subPath, return its plain form if it is
 * a literal string or number. Otherwise prepend the
 * dynamic indicator (*).
 */

function formatSubPath(path) {
  var trimmed = path.trim();
  // invalid leading 0
  if (path.charAt(0) === '0' && isNaN(path)) {
    return false;
  }

  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;
}

/**
 * Parse a string path into an array of segments
 */

function parse$1(path) {
  var keys = [];
  var index = -1;
  var mode = BEFORE_PATH;
  var subPathDepth = 0;
  var c;
  var key;
  var newChar;
  var type;
  var transition;
  var action;
  var typeMap;
  var actions = [];

  actions[PUSH] = function () {
    if (key !== undefined) {
      keys.push(key);
      key = undefined;
    }
  };

  actions[APPEND] = function () {
    if (key === undefined) {
      key = newChar;
    } else {
      key += newChar;
    }
  };

  actions[INC_SUB_PATH_DEPTH] = function () {
    actions[APPEND]();
    subPathDepth++;
  };

  actions[PUSH_SUB_PATH] = function () {
    if (subPathDepth > 0) {
      subPathDepth--;
      mode = IN_SUB_PATH;
      actions[APPEND]();
    } else {
      subPathDepth = 0;
      key = formatSubPath(key);
      if (key === false) {
        return false;
      } else {
        actions[PUSH]();
      }
    }
  };

  function maybeUnescapeQuote() {
    var nextChar = path[index + 1];
    if (mode === IN_SINGLE_QUOTE && nextChar === "'" || mode === IN_DOUBLE_QUOTE && nextChar === '"') {
      index++;
      newChar = '\\' + nextChar;
      actions[APPEND]();
      return true;
    }
  }

  while (mode !== null) {
    index++;
    c = path[index];

    if (c === '\\' && maybeUnescapeQuote()) {
      continue;
    }

    type = getPathCharType(c);
    typeMap = pathStateMachine[mode];
    transition = typeMap[type] || typeMap['else'] || ERROR;

    if (transition === ERROR) {
      return; // parse error
    }

    mode = transition[0];
    action = actions[transition[1]];
    if (action) {
      newChar = transition[2];
      newChar = newChar === undefined ? c : newChar;
      if (action() === false) {
        return;
      }
    }

    if (mode === AFTER_PATH) {
      return keys;
    }
  }
}

function empty(target) {
  /* istanbul ignore else */
  if (Array.isArray(target)) {
    return target.length === 0;
  } else {
    return false;
  }
}

var I18nPath = function I18nPath() {
  this._cache = Object.create(null);
};

/**
 * External parse that check for a cache hit first
 */
I18nPath.prototype.parsePath = function parsePath(path) {
  var hit = this._cache[path];
  if (!hit) {
    hit = parse$1(path);
    if (hit) {
      this._cache[path] = hit;
    }
  }
  return hit || [];
};

/**
 * Get path value from path string
 */
I18nPath.prototype.getPathValue = function getPathValue(obj, path) {
  if (!isObject(obj)) {
    return null;
  }

  var paths = this.parsePath(path);
  if (empty(paths)) {
    return null;
  } else {
    var length = paths.length;
    var ret = null;
    var last = obj;
    var i = 0;
    while (i < length) {
      var value = last[paths[i]];
      if (value === undefined) {
        last = null;
        break;
      }
      last = value;
      i++;
    }

    ret = last;
    return ret;
  }
};

/*  */

var VueI18n = function VueI18n(options) {
  var this$1 = this;
  if (options === void 0) options = {};

  var locale = options.locale || 'en-US';
  var fallbackLocale = options.fallbackLocale || 'en-US';
  var messages = options.messages || {};
  var dateTimeFormats = options.dateTimeFormats || {};
  var numberFormats = options.numberFormats || {};

  this._vm = null;
  this._formatter = options.formatter || new BaseFormatter();
  this._missing = options.missing || null;
  this._root = options.root || null;
  this._sync = options.sync === undefined ? true : !!options.sync;
  this._fallbackRoot = options.fallbackRoot === undefined ? true : !!options.fallbackRoot;
  this._silentTranslationWarn = options.silentTranslationWarn === undefined ? false : !!options.silentTranslationWarn;
  this._dateTimeFormatters = {};
  this._numberFormatters = {};
  this._path = new I18nPath();
  this._dataListeners = [];

  this._exist = function (message, key) {
    if (!message || !key) {
      return false;
    }
    return !isNull(this$1._path.getPathValue(message, key));
  };

  this._initVM({
    locale: locale,
    fallbackLocale: fallbackLocale,
    messages: messages,
    dateTimeFormats: dateTimeFormats,
    numberFormats: numberFormats
  });
};

var prototypeAccessors = { vm: {}, messages: {}, dateTimeFormats: {}, numberFormats: {}, locale: {}, fallbackLocale: {}, missing: {}, formatter: {}, silentTranslationWarn: {} };

VueI18n.prototype._initVM = function _initVM(data) {
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  this._vm = new Vue({ data: data });
  Vue.config.silent = silent;
};

VueI18n.prototype.subscribeDataChanging = function subscribeDataChanging(vm) {
  this._dataListeners.push(vm);
};

VueI18n.prototype.unsubscribeDataChanging = function unsubscribeDataChanging(vm) {
  remove(this._dataListeners, vm);
};

VueI18n.prototype.watchI18nData = function watchI18nData() {
  var self = this;
  return this._vm.$watch('$data', function () {
    var i = self._dataListeners.length;
    while (i--) {
      Vue.nextTick(function () {
        self._dataListeners[i] && self._dataListeners[i].$forceUpdate();
      });
    }
  }, { deep: true });
};

VueI18n.prototype.watchLocale = function watchLocale() {
  /* istanbul ignore if */
  if (!this._sync || !this._root) {
    return null;
  }
  var target = this._vm;
  return this._root.vm.$watch('locale', function (val) {
    target.$set(target, 'locale', val);
    target.$forceUpdate();
  }, { immediate: true });
};

prototypeAccessors.vm.get = function () {
  return this._vm;
};

prototypeAccessors.messages.get = function () {
  return looseClone(this._getMessages());
};
prototypeAccessors.dateTimeFormats.get = function () {
  return looseClone(this._getDateTimeFormats());
};
prototypeAccessors.numberFormats.get = function () {
  return looseClone(this._getNumberFormats());
};

prototypeAccessors.locale.get = function () {
  return this._vm.locale;
};
prototypeAccessors.locale.set = function (locale) {
  this._vm.$set(this._vm, 'locale', locale);
};

prototypeAccessors.fallbackLocale.get = function () {
  return this._vm.fallbackLocale;
};
prototypeAccessors.fallbackLocale.set = function (locale) {
  this._vm.$set(this._vm, 'fallbackLocale', locale);
};

prototypeAccessors.missing.get = function () {
  return this._missing;
};
prototypeAccessors.missing.set = function (handler) {
  this._missing = handler;
};

prototypeAccessors.formatter.get = function () {
  return this._formatter;
};
prototypeAccessors.formatter.set = function (formatter) {
  this._formatter = formatter;
};

prototypeAccessors.silentTranslationWarn.get = function () {
  return this._silentTranslationWarn;
};
prototypeAccessors.silentTranslationWarn.set = function (silent) {
  this._silentTranslationWarn = silent;
};

VueI18n.prototype._getMessages = function _getMessages() {
  return this._vm.messages;
};
VueI18n.prototype._getDateTimeFormats = function _getDateTimeFormats() {
  return this._vm.dateTimeFormats;
};
VueI18n.prototype._getNumberFormats = function _getNumberFormats() {
  return this._vm.numberFormats;
};

VueI18n.prototype._warnDefault = function _warnDefault(locale, key, result, vm) {
  if (!isNull(result)) {
    return result;
  }
  if (this.missing) {
    this.missing.apply(null, [locale, key, vm]);
  } else {
    if (process.env.NODE_ENV !== 'production' && !this._silentTranslationWarn) {
      warn("Cannot translate the value of keypath '" + key + "'. " + 'Use the value of keypath as default.');
    }
  }
  return key;
};

VueI18n.prototype._isFallbackRoot = function _isFallbackRoot(val) {
  return !val && !isNull(this._root) && this._fallbackRoot;
};

VueI18n.prototype._interpolate = function _interpolate(locale, message, key, host, interpolateMode, values) {
  if (!message) {
    return null;
  }

  var pathRet = this._path.getPathValue(message, key);
  if (Array.isArray(pathRet)) {
    return pathRet;
  }

  var ret;
  if (isNull(pathRet)) {
    /* istanbul ignore else */
    if (isPlainObject(message)) {
      ret = message[key];
      if (typeof ret !== 'string') {
        if (process.env.NODE_ENV !== 'production' && !this._silentTranslationWarn) {
          warn("Value of key '" + key + "' is not a string!");
        }
        return null;
      }
    } else {
      return null;
    }
  } else {
    /* istanbul ignore else */
    if (typeof pathRet === 'string') {
      ret = pathRet;
    } else {
      if (process.env.NODE_ENV !== 'production' && !this._silentTranslationWarn) {
        warn("Value of key '" + key + "' is not a string!");
      }
      return null;
    }
  }

  // Check for the existance of links within the translated string
  if (ret.indexOf('@:') >= 0) {
    ret = this._link(locale, message, ret, host, interpolateMode, values);
  }

  return !values ? ret : this._render(ret, interpolateMode, values);
};

VueI18n.prototype._link = function _link(locale, message, str, host, interpolateMode, values) {
  var this$1 = this;

  var ret = str;

  // Match all the links within the local
  // We are going to replace each of
  // them with its translation
  var matches = ret.match(/(@:[\w\-_|.]+)/g);
  for (var idx in matches) {
    // ie compatible: filter custom array
    // prototype method
    if (!matches.hasOwnProperty(idx)) {
      continue;
    }
    var link = matches[idx];
    // Remove the leading @:
    var linkPlaceholder = link.substr(2);
    // Translate the link
    var translated = this$1._interpolate(locale, message, linkPlaceholder, host, interpolateMode === 'raw' ? 'string' : interpolateMode, interpolateMode === 'raw' ? undefined : values);

    if (this$1._isFallbackRoot(translated)) {
      if (process.env.NODE_ENV !== 'production' && !this$1._silentTranslationWarn) {
        warn("Fall back to translate the link placeholder '" + linkPlaceholder + "' with root locale.");
      }
      /* istanbul ignore if */
      if (!this$1._root) {
        throw Error('unexpected error');
      }
      var root = this$1._root;
      translated = root._translate(root._getMessages(), root.locale, root.fallbackLocale, linkPlaceholder, host, interpolateMode, values);
    }
    translated = this$1._warnDefault(locale, linkPlaceholder, translated, host);

    // Replace the link with the translated
    ret = !translated ? ret : ret.replace(link, translated);
  }

  return ret;
};

VueI18n.prototype._render = function _render(message, interpolateMode, values) {
  var ret = this._formatter.interpolate(message, values);
  // if interpolateMode is **not** 'string' ('row'),
  // return the compiled data (e.g. ['foo', VNode, 'bar']) with formatter
  return interpolateMode === 'string' ? ret.join('') : ret;
};

VueI18n.prototype._translate = function _translate(messages, locale, fallback, key, host, interpolateMode, args) {
  var res = this._interpolate(locale, messages[locale], key, host, interpolateMode, args);
  if (!isNull(res)) {
    return res;
  }

  res = this._interpolate(fallback, messages[fallback], key, host, interpolateMode, args);
  if (!isNull(res)) {
    if (process.env.NODE_ENV !== 'production' && !this._silentTranslationWarn) {
      warn("Fall back to translate the keypath '" + key + "' with '" + fallback + "' locale.");
    }
    return res;
  } else {
    return null;
  }
};

VueI18n.prototype._t = function _t(key, _locale, messages, host) {
  var values = [],
      len = arguments.length - 4;
  while (len-- > 0) {
    values[len] = arguments[len + 4];
  }if (!key) {
    return '';
  }

  var parsedArgs = parseArgs.apply(void 0, values);
  var locale = parsedArgs.locale || _locale;

  var ret = this._translate(messages, locale, this.fallbackLocale, key, host, 'string', parsedArgs.params);
  if (this._isFallbackRoot(ret)) {
    if (process.env.NODE_ENV !== 'production' && !this._silentTranslationWarn) {
      warn("Fall back to translate the keypath '" + key + "' with root locale.");
    }
    /* istanbul ignore if */
    if (!this._root) {
      throw Error('unexpected error');
    }
    return (ref = this._root).t.apply(ref, [key].concat(values));
  } else {
    return this._warnDefault(locale, key, ret, host);
  }
  var ref;
};

VueI18n.prototype.t = function t(key) {
  var values = [],
      len = arguments.length - 1;
  while (len-- > 0) {
    values[len] = arguments[len + 1];
  }return (ref = this)._t.apply(ref, [key, this.locale, this._getMessages(), null].concat(values));
  var ref;
};

VueI18n.prototype._i = function _i(key, locale, messages, host, values) {
  var ret = this._translate(messages, locale, this.fallbackLocale, key, host, 'raw', values);
  if (this._isFallbackRoot(ret)) {
    if (process.env.NODE_ENV !== 'production' && !this._silentTranslationWarn) {
      warn("Fall back to interpolate the keypath '" + key + "' with root locale.");
    }
    if (!this._root) {
      throw Error('unexpected error');
    }
    return this._root.i(key, locale, values);
  } else {
    return this._warnDefault(locale, key, ret, host);
  }
};

VueI18n.prototype.i = function i(key, locale, values) {
  /* istanbul ignore if */
  if (!key) {
    return '';
  }

  if (typeof locale !== 'string') {
    locale = this.locale;
  }

  return this._i(key, locale, this._getMessages(), null, values);
};

VueI18n.prototype._tc = function _tc(key, _locale, messages, host, choice) {
  var values = [],
      len = arguments.length - 5;
  while (len-- > 0) {
    values[len] = arguments[len + 5];
  }if (!key) {
    return '';
  }
  if (choice === undefined) {
    choice = 1;
  }
  return fetchChoice((ref = this)._t.apply(ref, [key, _locale, messages, host].concat(values)), choice);
  var ref;
};

VueI18n.prototype.tc = function tc(key, choice) {
  var values = [],
      len = arguments.length - 2;
  while (len-- > 0) {
    values[len] = arguments[len + 2];
  }return (ref = this)._tc.apply(ref, [key, this.locale, this._getMessages(), null, choice].concat(values));
  var ref;
};

VueI18n.prototype._te = function _te(key, locale, messages) {
  var args = [],
      len = arguments.length - 3;
  while (len-- > 0) {
    args[len] = arguments[len + 3];
  }var _locale = parseArgs.apply(void 0, args).locale || locale;
  return this._exist(messages[_locale], key);
};

VueI18n.prototype.te = function te(key, locale) {
  return this._te(key, this.locale, this._getMessages(), locale);
};

VueI18n.prototype.getLocaleMessage = function getLocaleMessage(locale) {
  return looseClone(this._vm.messages[locale] || {});
};

VueI18n.prototype.setLocaleMessage = function setLocaleMessage(locale, message) {
  this._vm.messages[locale] = message;
};

VueI18n.prototype.mergeLocaleMessage = function mergeLocaleMessage(locale, message) {
  this._vm.messages[locale] = Vue.util.extend(this._vm.messages[locale] || {}, message);
};

VueI18n.prototype.getDateTimeFormat = function getDateTimeFormat(locale) {
  return looseClone(this._vm.dateTimeFormats[locale] || {});
};

VueI18n.prototype.setDateTimeFormat = function setDateTimeFormat(locale, format) {
  this._vm.dateTimeFormats[locale] = format;
};

VueI18n.prototype.mergeDateTimeFormat = function mergeDateTimeFormat(locale, format) {
  this._vm.dateTimeFormats[locale] = Vue.util.extend(this._vm.dateTimeFormats[locale] || {}, format);
};

VueI18n.prototype._localizeDateTime = function _localizeDateTime(value, locale, fallback, dateTimeFormats, key) {
  var _locale = locale;
  var formats = dateTimeFormats[_locale];

  // fallback locale
  if (isNull(formats) || isNull(formats[key])) {
    if (process.env.NODE_ENV !== 'production') {
      warn("Fall back to '" + fallback + "' datetime formats from '" + locale + " datetime formats.");
    }
    _locale = fallback;
    formats = dateTimeFormats[_locale];
  }

  if (isNull(formats) || isNull(formats[key])) {
    return null;
  } else {
    var format = formats[key];
    var id = _locale + "__" + key;
    var formatter = this._dateTimeFormatters[id];
    if (!formatter) {
      formatter = this._dateTimeFormatters[id] = new Intl.DateTimeFormat(_locale, format);
    }
    return formatter.format(value);
  }
};

VueI18n.prototype._d = function _d(value, locale, key) {
  /* istanbul ignore if */
  if (process.env.NODE_ENV !== 'production' && !VueI18n.availabilities.dateTimeFormat) {
    warn('Cannot format a Date value due to not support Intl.DateTimeFormat.');
    return '';
  }

  if (!key) {
    return new Intl.DateTimeFormat(locale).format(value);
  }

  var ret = this._localizeDateTime(value, locale, this.fallbackLocale, this._getDateTimeFormats(), key);
  if (this._isFallbackRoot(ret)) {
    if (process.env.NODE_ENV !== 'production') {
      warn("Fall back to datetime localization of root: key '" + key + "' .");
    }
    /* istanbul ignore if */
    if (!this._root) {
      throw Error('unexpected error');
    }
    return this._root.d(value, key, locale);
  } else {
    return ret || '';
  }
};

VueI18n.prototype.d = function d(value) {
  var args = [],
      len = arguments.length - 1;
  while (len-- > 0) {
    args[len] = arguments[len + 1];
  }var locale = this.locale;
  var key = null;

  if (args.length === 1) {
    if (typeof args[0] === 'string') {
      key = args[0];
    } else if (isObject(args[0])) {
      if (args[0].locale) {
        locale = args[0].locale;
      }
      if (args[0].key) {
        key = args[0].key;
      }
    }
  } else if (args.length === 2) {
    if (typeof args[0] === 'string') {
      key = args[0];
    }
    if (typeof args[1] === 'string') {
      locale = args[1];
    }
  }

  return this._d(value, locale, key);
};

VueI18n.prototype.getNumberFormat = function getNumberFormat(locale) {
  return looseClone(this._vm.numberFormats[locale] || {});
};

VueI18n.prototype.setNumberFormat = function setNumberFormat(locale, format) {
  this._vm.numberFormats[locale] = format;
};

VueI18n.prototype.mergeNumberFormat = function mergeNumberFormat(locale, format) {
  this._vm.numberFormats[locale] = Vue.util.extend(this._vm.numberFormats[locale] || {}, format);
};

VueI18n.prototype._localizeNumber = function _localizeNumber(value, locale, fallback, numberFormats, key) {
  var _locale = locale;
  var formats = numberFormats[_locale];

  // fallback locale
  if (isNull(formats) || isNull(formats[key])) {
    if (process.env.NODE_ENV !== 'production') {
      warn("Fall back to '" + fallback + "' number formats from '" + locale + " number formats.");
    }
    _locale = fallback;
    formats = numberFormats[_locale];
  }

  if (isNull(formats) || isNull(formats[key])) {
    return null;
  } else {
    var format = formats[key];
    var id = _locale + "__" + key;
    var formatter = this._numberFormatters[id];
    if (!formatter) {
      formatter = this._numberFormatters[id] = new Intl.NumberFormat(_locale, format);
    }
    return formatter.format(value);
  }
};

VueI18n.prototype._n = function _n(value, locale, key) {
  /* istanbul ignore if */
  if (process.env.NODE_ENV !== 'production' && !VueI18n.availabilities.numberFormat) {
    warn('Cannot format a Date value due to not support Intl.NumberFormat.');
    return '';
  }

  if (!key) {
    return new Intl.NumberFormat(locale).format(value);
  }

  var ret = this._localizeNumber(value, locale, this.fallbackLocale, this._getNumberFormats(), key);
  if (this._isFallbackRoot(ret)) {
    if (process.env.NODE_ENV !== 'production') {
      warn("Fall back to number localization of root: key '" + key + "' .");
    }
    /* istanbul ignore if */
    if (!this._root) {
      throw Error('unexpected error');
    }
    return this._root.n(value, key, locale);
  } else {
    return ret || '';
  }
};

VueI18n.prototype.n = function n(value) {
  var args = [],
      len = arguments.length - 1;
  while (len-- > 0) {
    args[len] = arguments[len + 1];
  }var locale = this.locale;
  var key = null;

  if (args.length === 1) {
    if (typeof args[0] === 'string') {
      key = args[0];
    } else if (isObject(args[0])) {
      if (args[0].locale) {
        locale = args[0].locale;
      }
      if (args[0].key) {
        key = args[0].key;
      }
    }
  } else if (args.length === 2) {
    if (typeof args[0] === 'string') {
      key = args[0];
    }
    if (typeof args[1] === 'string') {
      locale = args[1];
    }
  }

  return this._n(value, locale, key);
};

Object.defineProperties(VueI18n.prototype, prototypeAccessors);

VueI18n.availabilities = {
  dateTimeFormat: canUseDateTimeFormat,
  numberFormat: canUseNumberFormat
};
VueI18n.install = install;
VueI18n.version = '7.2.0';

/* istanbul ignore if */
if (typeof window !== 'undefined' && window.Vue) {
  window.Vue.use(VueI18n);
}

module.exports = VueI18n;

}).call(this,require('_process'))

},{"_process":297}],329:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _vuex = require("vuex");

exports.default = {
    props: ["dataList", "theadList", "trLinage", "hasDetButton"],
    data: function data() {
        return {
            trData: this.dataList,
            theadData: this.theadList,
            linage: typeof this.trLinage == "number" ? this.trLinage : 5,
            curPageIndex: 0,
            curPageData: [],
            numPage: 0,
            hasPrePage: false,
            hasNextPage: false,
            hasButton: true };
    },

    watch: {
        dataList: function dataList(val) {
            console.log("dataList change, val=" + val);
            this.tabDataClear();
            this.trData = val;
            this.tabDataInit();
        },
        theadList: function theadList(val) {
            console.log("theadList change, val=" + val);
            this.theadData = val;
        },
        trLinage: function trLinage(val) {
            console.log("trLinage change, val=" + val);
            if (typeof val == "number") {
                this.linage = val;
            }
        },
        hasDetButton: function hasDetButton(val) {
            console.log("hasDetButton change, val=" + val);
            this.hasButton = val;
        }
    },
    methods: {
        tabDataClear: function tabDataClear() {
            this.curPageIndex = 0;
            this.curPageData = [];
            this.hasPrePage = false;
            this.hasNextPage = false;
        },
        tabDataInit: function tabDataInit() {
            if (this.trData.length > this.linage) {
                this.hasNextPage = true;
                this.curPageData = this.trData.slice(this.curPageIndex * this.linage, (this.curPageIndex + 1) * this.linage);
            } else {
                this.curPageData = this.trData;
            }
            this.numPage = this.trData.length % this.linage == 0 ? parseInt(this.trData.length / this.linage) : parseInt(this.trData.length / this.linage) + 1;
        },
        trSelected: function trSelected(index) {
            console.log("单行选中");
            var allIndex = this.curPageIndex * this.linage + index;
            $("tbody tr").removeClass("selected");
            $("tbody tr").eq(index).addClass("selected");
            this.$emit("onTrSelected", allIndex);
        },
        onPre: function onPre() {
            this.curPageIndex -= 1;
            this.curPageData = this.trData.slice(this.curPageIndex * this.linage, (this.curPageIndex + 1) * this.linage);
            this.ifPreOrNext();
        },
        onNext: function onNext() {
            this.curPageIndex += 1;
            this.curPageData = this.trData.slice(this.curPageIndex * this.linage, (this.curPageIndex + 1) * this.linage);
            this.ifPreOrNext();
        },
        ifPreOrNext: function ifPreOrNext() {
            var flagPre = true;
            var flagNext = true;
            if (this.curPageIndex >= this.numPage - 1) {
                flagNext = false;
            }
            if (this.curPageIndex <= 0) {
                flagPre = false;
            }
            this.hasPrePage = flagPre;
            this.hasNextPage = flagNext;
        },
        onDetail: function onDetail(event, index) {
            event.stopPropagation();
            console.log("点击详情按钮");
            var allIndex = this.curPageIndex * this.linage + index;

            this.$emit("onTrBtnSelected", allIndex);
        }
    },
    mounted: function mounted() {
        this.tabDataInit();
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('table',{staticClass:"detail_tab"},[_c('thead',[_c('tr',[_vm._l((_vm.theadData),function(item){return _c('td',{key:item},[_vm._v(_vm._s(item))])}),_vm._v(" "),(_vm.hasButton)?_c('td'):_vm._e()],2)]),_vm._v(" "),_c('tbody',_vm._l((_vm.curPageData),function(item,trIndex){return _c('tr',{key:item.currency,class:{"selected":item.isSelected},on:{"click":function($event){_vm.trSelected(trIndex)}}},[_vm._l((item),function(obj){return _c('td',{key:obj},[_vm._v(_vm._s(obj))])}),_vm._v(" "),(_vm.hasButton)?_c('td',{staticClass:"td_btn_wdt txt-c"},[_c('button',{staticClass:"detailbtn",on:{"click":function($event){_vm.onDetail($event,trIndex)}}},[_vm._v("详情")])]):_vm._e()],2)}))]),_vm._v(" "),_c('div',{staticClass:"change_page"},[(_vm.hasPrePage)?_c('button',{on:{"click":_vm.onPre}},[_vm._v("上一页")]):_vm._e(),_vm._v(" "),(_vm.hasNextPage)?_c('button',{on:{"click":_vm.onNext}},[_vm._v("下一页")]):_vm._e()])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-8a0342dc", __vue__options__)
  } else {
    hotAPI.reload("data-v-8a0342dc", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vuex":"vuex"}],330:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _vuex = require("vuex");

exports.default = {
    props: ["dataList", "theadList", "trLinage"],
    data: function data() {
        return {
            trData: this.dataList,
            theadData: this.theadList,
            selectIndex: null,
            linage: typeof this.trLinage == "number" ? this.trLinage : 5,
            curPageIndex: 0,
            curPageData: [],
            numPage: 0,
            hasPrePage: false,
            hasNextPage: false };
    },

    watch: {
        dataList: function dataList(val) {
            console.log("dataList change, val=" + val);
            this.tabDataClear();
            this.trData = val;
            this.tabDataInit();
        },
        theadList: function theadList(val) {
            console.log("theadList change, val=" + val);
            this.theadData = val;
        },
        selectIndex: function selectIndex(val) {
            this.$emit("onTrSelected", val);
        },
        trLinage: function trLinage(val) {
            console.log("trLinage change, val=" + val);
            if (typeof val == "number") {
                this.linage = val;
            }
        }
    },
    methods: {
        tabDataClear: function tabDataClear() {
            this.curPageIndex = 0;
            this.curPageData = [];
            this.hasPrePage = false;
            this.hasNextPage = false;
        },
        tabDataInit: function tabDataInit() {
            if (this.trData.length > this.linage) {
                this.hasNextPage = true;
                this.curPageData = this.trData.slice(this.curPageIndex * this.linage, (this.curPageIndex + 1) * this.linage);
            } else {
                this.curPageData = this.trData;
            }
            this.numPage = this.trData.length % this.linage == 0 ? parseInt(this.trData.length / this.linage) : parseInt(this.trData.length / this.linage) + 1;
        },
        trSelected: function trSelected(index) {
            var allIndex = this.curPageIndex * this.linage + index;
            $("tbody tr").removeClass("selected");
            $("tbody tr").eq(index).addClass("selected");
            this.selectIndex = allIndex;
        },
        onPre: function onPre() {
            this.curPageIndex -= 1;
            this.curPageData = this.trData.slice(this.curPageIndex * this.linage, (this.curPageIndex + 1) * this.linage);
            this.ifPreOrNext();
        },
        onNext: function onNext() {
            this.curPageIndex += 1;
            this.curPageData = this.trData.slice(this.curPageIndex * this.linage, (this.curPageIndex + 1) * this.linage);
            this.ifPreOrNext();
        },
        ifPreOrNext: function ifPreOrNext() {
            var flagPre = true;
            var flagNext = true;
            if (this.curPageIndex >= this.numPage - 1) {
                flagNext = false;
            }
            if (this.curPageIndex <= 0) {
                flagPre = false;
            }
            this.hasPrePage = flagPre;
            this.hasNextPage = flagNext;
        }
    },
    mounted: function mounted() {
        this.tabDataInit();
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('table',{staticClass:"detail_tab"},[_c('thead',_vm._l((_vm.theadData),function(item){return _c('th',{key:item},[_vm._v(_vm._s(item))])})),_vm._v(" "),_c('tbody',_vm._l((_vm.curPageData),function(item,trIndex){return _c('tr',{key:item.currency,class:{"selected":item.isSelected},on:{"click":function($event){_vm.trSelected(trIndex)}}},_vm._l((item),function(obj){return _c('td',{key:obj},[_vm._v(_vm._s(obj))])}))}))]),_vm._v(" "),_c('div',{staticClass:"change_page"},[(_vm.hasPrePage)?_c('button',{on:{"click":_vm.onPre}},[_vm._v("上一页")]):_vm._e(),_vm._v(" "),(_vm.hasNextPage)?_c('button',{on:{"click":_vm.onNext}},[_vm._v("下一页")]):_vm._e()])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-a77d1a68", __vue__options__)
  } else {
    hotAPI.reload("data-v-a77d1a68", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vuex":"vuex"}],331:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert("@media screen and (min-width: 1300px) and (max-width: 1380px){\r\n    table.detail_tab tr[data-v-47f6dfd4]{\r\n        height: 38px;\r\n    }\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _vuex = require("vuex");

exports.default = {
    props: ["dataList", "theadList", "trLinage"],
    data: function data() {
        return {
            trData: this.dataList,
            theadData: this.theadList,
            selectIndex: null,
            linage: typeof this.trLinage == "number" ? this.trLinage : 5,
            curPageIndex: 0,
            curPageData: [],
            numPage: 0,
            hasPrePage: false,
            hasNextPage: false };
    },

    watch: {
        dataList: function dataList(val) {
            console.log("dataList change, val=" + val);
            this.tabDataClear();
            this.trData = val;
            this.tabDataInit();
        },
        theadList: function theadList(val) {
            console.log("theadList change, val=" + val);
            this.theadData = val;
        },
        selectIndex: function selectIndex(val) {
            this.$emit("onTrSelected", val);
        },
        trLinage: function trLinage(val) {
            console.log("trLinage change, val=" + val);
            if (typeof val == "number") {
                this.linage = val;
            }
        }
    },
    methods: {
        tabDataClear: function tabDataClear() {
            this.curPageIndex = 0;
            this.curPageData = [];
            this.hasPrePage = false;
            this.hasNextPage = false;
        },
        tabDataInit: function tabDataInit() {
            if (this.trData.length > this.linage) {
                this.hasNextPage = true;
                this.curPageData = this.trData.slice(this.curPageIndex * this.linage, (this.curPageIndex + 1) * this.linage);
            } else {
                this.curPageData = this.trData;
            }
            this.numPage = this.trData.length % this.linage == 0 ? parseInt(this.trData.length / this.linage) : parseInt(this.trData.length / this.linage) + 1;
        },
        trSelected: function trSelected(index) {
            var allIndex = this.curPageIndex * this.linage + index;
            $("tbody tr").removeClass("selected");
            $("tbody tr").eq(index).addClass("selected");
            this.selectIndex = allIndex;
        },
        onPre: function onPre() {
            this.curPageIndex -= 1;
            this.curPageData = this.trData.slice(this.curPageIndex * this.linage, (this.curPageIndex + 1) * this.linage);
            this.ifPreOrNext();
        },
        onNext: function onNext() {
            this.curPageIndex += 1;
            this.curPageData = this.trData.slice(this.curPageIndex * this.linage, (this.curPageIndex + 1) * this.linage);
            this.ifPreOrNext();
        },
        ifPreOrNext: function ifPreOrNext() {
            var flagPre = true;
            var flagNext = true;
            if (this.curPageIndex >= this.numPage - 1) {
                flagNext = false;
            }
            if (this.curPageIndex <= 0) {
                flagPre = false;
            }
            this.hasPrePage = flagPre;
            this.hasNextPage = flagNext;
        }
    },
    mounted: function mounted() {
        this.tabDataInit();
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('table',{staticClass:"detail_tab"},[_c('thead',_vm._l((_vm.theadData),function(item){return _c('th',{key:item},[_vm._v(_vm._s(item))])})),_vm._v(" "),_c('tbody',_vm._l((_vm.curPageData),function(item,trIndex){return _c('tr',{key:item.currency,class:{"selected":item.isSelected},on:{"click":function($event){_vm.trSelected(trIndex)}}},_vm._l((item),function(obj){return _c('td',{key:obj},[_vm._v(_vm._s(obj))])}))}))]),_vm._v(" "),_c('div',{staticClass:"change_page"},[(_vm.hasPrePage)?_c('button',{on:{"click":_vm.onPre}},[_vm._v("上一页")]):_vm._e(),_vm._v(" "),(_vm.hasNextPage)?_c('button',{on:{"click":_vm.onNext}},[_vm._v("下一页")]):_vm._e()])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-47f6dfd4"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-47f6dfd4", __vue__options__)
  } else {
    hotAPI.reload("data-v-47f6dfd4", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300,"vuex":"vuex"}],332:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert("/***/\r\n.col-md-2 {\r\n    width: 16%;\r\n    float: left;\r\n}\r\n.col-md-3 {\r\n    width: 24%;\r\n    float: left;\r\n}\r\n.col-md-10 {\r\n    width: 83%;\r\n    float: left;\r\n}\r\n/***/\r\n.x-debug-page {\r\n    position: absolute;\r\n    top: 5%;\r\n    left: 5%;\r\n    width: 90%;\r\n    height: 90%;\r\n    padding: 5px;\r\n    border: 2px solid black;\r\n    background-color: white;\r\n    z-index: 111111;\r\n}\r\n.x-debug-item {\r\n    padding: 2px;\r\n}\r\n.current {\r\n    background-color: red;\r\n}\r\n.x-popup {\r\n    background-color: yellow;\r\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    data: function data() {
        return {
            pages: [],
            changeCount: 0
        };
    },
    created: function created() {
        this.pages = this.$root.collections[0][1].default;
    },

    methods: {
        isCurrent: function isCurrent(page) {
            return page === this.$root.currentView;
        },
        isPopup: function isPopup(item) {
            return item[2] === 'Popup';
        },
        onClose: function onClose() {
            this.$root.debug = false;
        },
        onChangePage: function onChangePage(page) {
            this.$root.debug = false;
            ChangePage(page);
        },
        onCollection: function onCollection(collection) {
            this.pages = collection[1].default;
        },
        onChangeInterval: function onChangeInterval() {
            this.$root.debug = false;
            var self = this;
            setInterval(function () {
                self.changeCount++;
                document.title = 'changeCount ' + self.changeCount;
                if (self.changeCount % 2) ChangePage('./cust_main_OutService.html');else ChangePage('B01_PersonalTaxFingerDistinguish');
            }, 2000);
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.$root.debug),expression:"$root.debug"}],staticClass:"x-debug-page container"},[_c('div',{staticClass:"col-md-2"},[_c('ol',{staticClass:"list-group"},_vm._l((_vm.$root.collections),function(item){return _c('li',{key:item[0],staticClass:"list-group-item"},[_c('span',{staticClass:"badge"},[_vm._v(_vm._s(item[1].default.length))]),_vm._v(" "),_c('a',{on:{"click":function($event){_vm.onCollection(item)}}},[_vm._v(_vm._s(item[0]))])])}))]),_vm._v(" "),_c('div',{staticClass:"col-md-10"},[_c('ol',{staticClass:"list-inline"},[_c('li',{staticClass:"col-md-3 x-debug-item"},[_vm._v("X "),_c('a',{on:{"click":_vm.onClose}},[_vm._v("关闭")])]),_vm._v(" "),_c('li',{staticClass:"col-md-3 x-debug-item"},[_vm._v("+ "),_c('a',{on:{"click":_vm.onChangeInterval}},[_vm._v("持续切换")])]),_vm._v(" "),_vm._l((_vm.pages),function(item,idx){return _c('li',{key:item[1],staticClass:"col-md-3 x-debug-item",class:{current: _vm.isCurrent(item[1])}},[_c('span',{class:{'x-popup': _vm.isPopup(item)}},[_vm._v(_vm._s(idx+1))]),_vm._v(" "),_c('a',{on:{"click":function($event){_vm.onChangePage(item[1])}}},[_vm._v(_vm._s(item[0]))])])})],2)])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-276087a1", __vue__options__)
  } else {
    hotAPI.reload("data-v-276087a1", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],333:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".many-dialog[data-v-2dda690e] {\r\n    position: absolute;\r\n    z-index: 1000;\r\n    width: 30%;\r\n    height: 55%;\r\n    right: 0%;\r\n    bottom: 0%;\r\n    background-color: rgba(240,240,240,1);\r\n    color: #666;\r\n    font-size: 30px;\r\n}\r\n.many-body[data-v-2dda690e] {\r\n    margin: 10px 0;\r\n}\r\nul#content[data-v-2dda690e] {\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n}\r\n\r\n#content li[data-v-2dda690e] {\r\n    float: left;\r\n    width: 30%;\r\n    margin: 16px 50px;\r\n}\r\n\r\nli > a[data-v-2dda690e] {\r\n    border: 0px solid black;\r\n    padding: 5px;\r\n}\r\n.cancalbtn[data-v-2dda690e],.backbtn[data-v-2dda690e]{ \r\n    margin:20px 0 0 0;\r\n    background:none;\r\n    color:#333;\r\n}\r\n.selectitle[data-v-2dda690e]{    \r\n    text-align:center;\r\n    font-size:2.5rem;\r\n}\r\n.many-header[data-v-2dda690e]{   \r\n    text-align:center;\r\n}\r\n.closed[data-v-2dda690e] {\r\n    margin: 6px 6px 0 6px;\r\n    float: right;\r\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    props: {
        show: {
            type: Boolean,
            default: false
        },
        title: {
            type: String,
            default: "项目"
        },
        data: {
            type: Array,
            default: []
        }
    },
    data: function data() {
        return {};
    },

    computed: {
        curPage: function curPage() {
            return this.data.slice(0);
        }
    },
    methods: {
        onCancel: function onCancel() {
            this.$emit('cancel');
        },
        onChoose: function onChoose(index, item) {
            this.$emit('confirm', index, item);
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.show),expression:"show"}],staticClass:"many-dialog"},[_c('div',{staticClass:"many-header"},[_c('span',{staticClass:"selectitle"},[_vm._v("请选择"+_vm._s(_vm.title))]),_vm._v(" "),_c('a',{on:{"click":_vm.onCancel}},[_c('img',{staticClass:"closed",attrs:{"src":_vm.$root.imgPath('img/返回按钮.png')}})])]),_vm._v(" "),_c('div',{staticStyle:{"width":"98%","max-height":"78%","margin":"0 auto","overflow-y":"auto"}},[_c('ul',{attrs:{"id":"content"}},_vm._l((_vm.curPage),function(item,index){return _c('li',{key:item.key},[_c('a',{on:{"click":function($event){_vm.onChoose(index, item)}}},[_vm._v(_vm._s(item.key))])])}))])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-2dda690e"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2dda690e", __vue__options__)
  } else {
    hotAPI.reload("data-v-2dda690e", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],334:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".many-dialog[data-v-09d2dc36] {\r\n    position: absolute;\r\n    z-index: 1000;\r\n    width: 30%;\r\n    height: 55%;\r\n    right: 0%;\r\n    bottom: 0%;\r\n    background-color: rgba(240,240,240,1);\r\n    color: #666;\r\n    font-size: 30px;\r\n}\r\n.many-body[data-v-09d2dc36] {\r\n    margin: 10px 0;\r\n}\r\nul#content[data-v-09d2dc36] {\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n}\r\n\r\n#content li[data-v-09d2dc36] {\r\n    float: left;\r\n    width: 30%;\r\n    margin: 0px 0px;\r\n}\r\n\r\nli > a[data-v-09d2dc36] {\r\n    border: 0px solid black;\r\n    padding: 5px;\r\n}\r\n.cancalbtn[data-v-09d2dc36],.backbtn[data-v-09d2dc36]{ \r\n    margin:20px 0 0 0;\r\n    background:none;\r\n    color:#333;\r\n}\r\n.selectitle[data-v-09d2dc36]{    \r\n    text-align:center;\r\n    font-size:2.5rem;\r\n}\r\n.many-header[data-v-09d2dc36]{   \r\n    text-align:center;\r\n}\r\n.closed[data-v-09d2dc36] {\r\n    margin: 6px 6px 0 6px;\r\n    float: right;\r\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    props: {
        show: {
            type: Boolean,
            default: false
        },
        title: {
            type: String,
            default: "项目"
        },
        data: {
            type: Array,
            default: []
        }
    },
    data: function data() {
        return {};
    },

    computed: {
        curPage: function curPage() {
            return this.data.slice(0);
        }
    },
    methods: {
        onCancel: function onCancel() {
            this.$emit('cancel');
        },
        onChoose: function onChoose(index, item) {
            this.$emit('confirm', index, item);
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.show),expression:"show"}],staticClass:"many-dialog"},[_vm._m(0),_vm._v(" "),_c('div',{staticStyle:{"width":"98%","max-height":"78%","margin":"0 auto","overflow-y":"auto"}},[_c('ul',{attrs:{"id":"content"}},_vm._l((_vm.curPage),function(item,index){return _c('li',{key:item.key},[_c('a',{on:{"click":function($event){_vm.onChoose(index, item)}}},[_vm._v(_vm._s(item.key))])])}))])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"many-header"},[_c('span',{staticClass:"selectitle"}),_vm._v(" "),_c('br'),_vm._v(" "),_c('br')])}]
__vue__options__._scopeId = "data-v-09d2dc36"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-09d2dc36", __vue__options__)
  } else {
    hotAPI.reload("data-v-09d2dc36", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],335:[function(require,module,exports){
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _vuex = require('vuex');

exports.default = {
    props: {
        title: {
            type: String,
            default: '请定制对话框标题'
        },
        timeout: {
            type: Number,
            default: 10
        },
        back: {
            type: String,
            default: "取　　消"
        },
        sure: {
            type: String,
            default: "确　　定"
        }
    },
    data: function data() {
        return {
            interval: null,
            backNtnName: this.back,
            sureNtnName: this.sure,
            timerun: this.timeout
        };
    },

    computed: _extends({
        showBack: function showBack() {
            return this.backNtnName.length > 0;
        },
        showSure: function showSure() {
            return this.sureNtnName.length > 0;
        }
    }, (0, _vuex.mapState)(["pool"])),
    methods: _extends({
        onBack: function onBack() {
            this.clearTime();
            this.onCancel();
        },
        onSure: function onSure() {
            this.clearTime();
            this.onContinue();
        },
        setTimeHtml: function setTimeHtml() {
            console.log(this.timerun);
            this.timerun -= 1;
            if (this.timerun <= 0) {
                this.clearTime();
                this.exitScene("STA_TIMEOUT");
            }
        },
        startTime: function startTime() {
            if (isNaN(this.timerun) || this.timerun <= 0) {
                this.timerun = 10;
            }
            this.interval = setInterval(this.setTimeHtml, 1000);
        },
        clearTime: function clearTime() {
            clearInterval(this.interval);
            this.timerun = "";
        }
    }, (0, _vuex.mapActions)(['initPool', 'fetch', 'submit', 'onCancel', 'onContinue', 'exitScene'])),
    mounted: function mounted() {
        this.startTime();
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('p',{staticClass:"modal_tip"},[_vm._v(_vm._s(_vm.title))]),_vm._v(" "),_c('div',{staticClass:"modal_time",attrs:{"id":"modal_CountDown"}},[_vm._v(_vm._s(_vm.timerun))]),_vm._v(" "),_vm._t("default"),_vm._v(" "),_c('div',{staticClass:"modal_btnbox"},[_c('button',{directives:[{name:"show",rawName:"v-show",value:(_vm.showBack),expression:"showBack"}],staticClass:"btn backbtn",attrs:{"id":"modal_btn_back"},on:{"click":_vm.onBack}},[_vm._v(_vm._s(_vm.backNtnName))]),_vm._v(" "),_c('button',{directives:[{name:"show",rawName:"v-show",value:(_vm.showSure),expression:"showSure"}],staticClass:"btn surebtn",attrs:{"id":"modal_btn_sure"},on:{"click":_vm.onSure}},[_vm._v(_vm._s(_vm.sureNtnName))])])],2)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-8d4ab8c0", __vue__options__)
  } else {
    hotAPI.reload("data-v-8d4ab8c0", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vuex":"vuex"}],336:[function(require,module,exports){
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _vuex = require('vuex');

exports.default = {
    computed: _extends({
        pageCnt: function pageCnt() {
            return this.$root.pages.length;
        }
    }, (0, _vuex.mapState)(['hotline'])),
    methods: {
        onDebug: function onDebug() {
            this.$root.debug = true;
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('footer',{staticClass:"footer footerbg"},[_c('span',{staticClass:"footInfo hotline"},[_vm._v("客户服务热线 "),_c('i',[_vm._v(_vm._s(_vm.hotline))])]),_vm._v(" "),_c('span',{staticClass:"footInfo slogan"},[_vm._v("大行德广 伴你成长")]),_vm._v(" "),_c('span',{staticClass:"footInfo slogan"},[_c('a',{on:{"click":_vm.onDebug}},[_vm._v(_vm._s(_vm.pageCnt))])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6094fa73", __vue__options__)
  } else {
    hotAPI.reload("data-v-6094fa73", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vuex":"vuex"}],337:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".bb[data-v-fc714336]{\n  position: fixed;\n  z-index: 1002;\n  -webkit-animation: clockwise 5s, mymove 5s;\n  animation: clockwise 5s, mymove 5s;\n  animation-fill-mode: forwards;\n  display: none;\n}\n.bb img[data-v-fc714336] {\n  display: block;\n  position:relative;\n  width: 300px;\n  height: 300px;\n  /***/\n  opacity: 1;\n  animation: change 5s, mylogo 0.6s  5.1s 4 alternate;\n  -moz-animation: change 5s, mylogo 0.6s  5.1s 4 alternate;\n  -webkit-animation: change 5s, mylogo 0.6s  5.1s 4 alternate;\n  -o-animation: change 5s, mylogo 0.6s  5.1s 4 alternate;\n\n  transform: rotate(-90deg);\n  -ms-transform: rotate(-90deg);\n  -webkit-transform: rotate(-90deg);\n  -o-transform: rotate(-90deg);\n  -moz-transform: rotate(-90deg);\n  /***/\n}\n@-webkit-keyframes clockwise{\n  0%  { -webkit-transform: rotate(0deg) ;  }\n  100%{ -webkit-transform: rotate(90deg); }\n}\n@keyframes clockwise {\n  0%  { -webkit-transform: rotate(0deg) ;  }\n  100%{ -webkit-transform: rotate(90deg); }\n}\n@-webkit-keyframes mymove{\n  from {\n      top: 10%;\n      left: 75%;\n  }\n  to {\n      top: 65%;\n      left: 1%;\n  }\n}\n@keyframes mymove {\n  from {\n      top: 10%;\n      left: 75%;\n  }\n  to {\n      top: 65%;\n      left: 1%;\n  }\n}\n/**/\n@keyframes change{\n    from {\n      width: 0px;\n      height: 0px;\n      opacity: 0;\n    }\n    to {\n      width: 300px;\n      height: 300px;\n      opacity: 1;\n    }\n}\n@keyframes mylogo{\n    from {\n      left : 20px;\n    }\n    to {\n      left: -20px;\n    }\n}\n/**/")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _vuex = require('vuex');

exports.default = {
    computed: _extends({
        countText: function countText() {
            return this.$root.countDown == 0 ? '' : this.$root.countDown;
        },
        pageCnt: function pageCnt() {
            return this.$root.pages.length;
        }
    }, (0, _vuex.mapState)(['pool'])),
    methods: {
        onDebug: function onDebug() {
            this.$root.debug = !this.$root.debug;
        }
    },
    mounted: function mounted() {
        var VIPClassName;
        var Sale = this;
        if (this.$root.VIPStatus) {
            VIPClassName = parseInt(this.$root.VIPStatus);
        }
        if (VIPClassName == "1") {
            $("#VIP").addClass("VIP0");
        } else if (VIPClassName == "2") {
            $("#VIP").addClass("VIP1");
        } else if (VIPClassName == "3") {
            $("#VIP").addClass("VIP2");
        } else if (VIPClassName == "4") {
            $("#VIP").addClass("VIP3");
        } else {
            $("#VIP").addClass("VIP0");
        }
        var loginStatus;
        loginStatus = this.$root.loginStatus;
        if (loginStatus == "1") {
            $(".login_status").css("display", "inline-block");
        }
        var timeStatus;
        timeStatus = this.$root.timeStatus;
        if (timeStatus == "1") {
            $("#CountDown").css("display", "inline-block");
        }
        var exitStatus;
        exitStatus = this.$root.exitStatus;
        if (exitStatus == "1") {
            $(".btn_exit").css("display", "inline-block");
        }

        if (this.$root.barrage == "1") {
            $(".bb").css("display", "block");
        } else {
            $(".bb").css("display", "none");
        }
        if (this.$root.saleShow) {
            $(".emailf").css("display", "inline-block");
        } else {
            $(".emailf").css("display", "none");
        }

        if (this.$root.SaleProdSum) {
            $(".emailf").children().html(this.$root.SaleProdSum);
        } else {
            $(".emailf").children().html();
        }

        DataTools.get("GD_A01_CardClass|GD_A01_IsLogin|GD_A01_Header_Exit|GD_A01_Header_Time", function (data) {
            if (data[0] != "" && data[0] != "-1" && data[0] != null) {
                Sale.$root.VIPStatus = parseInt(data[0]);
                VIPClassName = parseInt(data[0]);
            }
            if (VIPClassName == "1") {
                $("#VIP").addClass("VIP0");
            } else if (VIPClassName == "2") {
                $("#VIP").addClass("VIP1");
            } else if (VIPClassName == "3") {
                $("#VIP").addClass("VIP2");
            } else if (VIPClassName == "4") {
                $("#VIP").addClass("VIP3");
            } else {
                $("#VIP").addClass("VIP0");
            }
            if (data[1] != "" && data[1] != "-1" && data[1] != null) {
                Sale.$root.loginStatus = data[1];
                loginStatus = data[1];
            }
            if (loginStatus == "1") {
                $(".login_status").css("display", "inline-block");
            }
            if (data[2] != "" && data[2] != "-1" && data[2] != null) {
                Sale.$root.exitStatus = data[2];
                exitStatus = data[2];
            }
            if (exitStatus == "1") {
                $(".btn_exit").css("display", "inline-block");
            }
            if (data[3] != "" && data[3] != "-1" && data[3] != null) {
                Sale.$root.timeStatus = data[3];
                timeStatus = data[3];
            }
            if (timeStatus == "1") {
                $("#CountDown").css("display", "inline-block");
            }
        });
        document.getElementById("emailf").onclick = onEmail;
        function onEmail() {
            Sale.$root.$emit('sale');
        }
        document.getElementById("btn_exit").onclick = onExit;
        function onExit() {
            setVar("GD_A01_ExcepionHandling", 'F');
            ChangePage("./customer/common/cust_com_TradeFinishTip.html");
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',{staticClass:"header"},[_c('div',[_c('span',{staticClass:"header_test"},[_c('a',{on:{"click":_vm.onDebug}},[_vm._v(_vm._s(_vm.pageCnt))])])]),_vm._v(" "),_vm._m(0),_vm._v(" "),_vm._m(1)])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"emailf",attrs:{"id":"emailf"}},[_c('span')]),_vm._v(" "),_c('div',{attrs:{"id":"VIP"}}),_vm._v(" "),_c('div',{staticClass:"login_status",staticStyle:{"display":"none"}}),_vm._v(" "),_c('div',{staticClass:"btn_exit",staticStyle:{"display":"none"},attrs:{"id":"btn_exit"}}),_vm._v(" "),_c('div',{staticClass:"time",staticStyle:{"display":"none"},attrs:{"id":"CountDown"}})])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"bb"},[_c('img',{attrs:{"src":"img/barrage/生日快乐.png","alt":""}})])}]
__vue__options__._scopeId = "data-v-fc714336"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-fc714336", __vue__options__)
  } else {
    hotAPI.reload("data-v-fc714336", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300,"vuex":"vuex"}],338:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _vuex = require("vuex");

var interval;
exports.default = {
    props: ["title", "timeout"],
    data: function data() {
        return {
            backNtnName: "否",
            sureNtnName: "是",
            timerun: this.timeout
        };
    },

    computed: _extends({}, (0, _vuex.mapState)(["pool"])),
    methods: _extends({
        onBack: function onBack() {
            this.clearTime();
            this.onCancel();
        },
        onSure: function onSure() {
            this.clearTime();
            this.onContinue();
        },
        setTimeHtml: function setTimeHtml() {
            console.log(this.timerun);
            this.timerun -= 1;
            if (this.timerun <= 0) {
                this.clearTime();
                this.onBack();
            }
        },
        startTime: function startTime() {
            if (isNaN(this.timerun) || this.timerun <= 0) {
                this.timerun = 10;
            }
            interval = setInterval(this.setTimeHtml, 1000);
        },
        clearTime: function clearTime() {
            clearInterval(interval);
            this.timerun = "";
        }
    }, (0, _vuex.mapActions)(['initPool', 'fetch', 'submit', 'onCancel', 'onContinue'])),
    mounted: function mounted() {
        this.startTime();
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('p',{staticClass:"modal_tip"},[_vm._v(_vm._s(_vm.title))]),_vm._v(" "),_c('div',{staticClass:"modal_time",attrs:{"id":"modal_CountDown"}},[_vm._v(_vm._s(_vm.timerun))]),_vm._v(" "),_c('div',{staticClass:"modal_btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"modal_btn_back"},on:{"click":_vm.onBack}},[_vm._v(_vm._s(_vm.backNtnName))]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"modal_btn_sure"},on:{"click":_vm.onSure}},[_vm._v(_vm._s(_vm.sureNtnName))])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-721115c8", __vue__options__)
  } else {
    hotAPI.reload("data-v-721115c8", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vuex":"vuex"}],339:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('x-header'),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"content"},[_c('div',{staticClass:"panel"},[_vm._t("default",[_c('p',{staticClass:"title"},[_vm._v("请定制显示内容。。。")])])],2)])])],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0e08ab54", __vue__options__)
  } else {
    hotAPI.reload("data-v-0e08ab54", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],340:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _vuex = require("vuex");

exports.default = {
    data: function data() {
        return {
            getKeys: ["GD_A01_ExcepionHandling"],
            setKeys: ["GD_A01_ExcepionHandling"]
        };
    },

    computed: _extends({
        countText: function countText() {
            return this.$root.countDown == 0 ? '' : this.$root.countDown;
        },
        pageCnt: function pageCnt() {
            return this.$root.pages.length;
        }
    }, (0, _vuex.mapState)(['pool'])),

    methods: _extends({
        initPage: function initPage() {
            this.initPool(this.$data);
        },
        onDebug: function onDebug() {
            this.$root.debug = !this.$root.debug;
        },
        onEmail: function onEmail() {
            setVar("GD_ReadEmail", "1");
            this.exitScene("STA_SHOWPRODUCT");
        },
        onQuit: function onQuit() {
            var excepion = this.pool.GD_A01_ExcepionHandling;
            if (excepion != 'F') {
                this.pool.GD_A01_ExcepionHandling = 'F';
                this.submit(["GD_A01_ExcepionHandling"]);
            }
        },
        onInsurance: function onInsurance() {
            this.exitScene("STA_INSURANCE");
        }
    }, (0, _vuex.mapActions)(['initPool', 'exitScene', 'submit'])),
    mounted: function mounted() {
        this.initPage();
        var vm = this;
        var VIPStatus = this.$root.VIPStatus;
        var loginStatus;
        loginStatus = this.$root.loginStatus;
        var timeStatus;
        timeStatus = this.$root.timeStatus;
        var exitStatus;
        exitStatus = this.$root.exitStatus;
        var VIPClassName;
        DataTools.get("GD_A01_CardClass|GD_A01_IsLogin|GD_A01_Header_Exit|GD_A01_Header_Time|GD_A01_Trans_Tagflg|GD_A01_Trans_SaleProdSum|GD_MarketingAllNumber|GD_A01_CodPdbreed", function (data) {
            if (data[0] != "" && data[0] != "-1" && data[0] != null) {
                vm.$root.VIPStatus = data[0];
                VIPClassName = parseInt(data[0]);
            } else {
                VIPClassName = parseInt(VIPStatus);
            }
            if (VIPClassName == "1") {
                $("#VIP").addClass("VIP0");
            } else if (VIPClassName == "2") {
                $("#VIP").addClass("VIP1");
            } else if (VIPClassName == "3") {
                $("#VIP").addClass("VIP2");
            } else if (VIPClassName == "4") {
                $("#VIP").addClass("VIP3");
            } else {
                $("#VIP").addClass("VIP0");
            }
            if (data[1] != "" && data[1] != "-1" && data[1] != null) {
                vm.$root.loginStatus = data[1];
                loginStatus = data[1];
            }
            if (loginStatus == "1") {
                $(".login_status").css("display", "inline-block");
            }
            if (data[2] != "" && data[2] != "-1" && data[2] != null) {
                vm.$root.exitStatus = data[2];
                exitStatus = data[2];
            }
            if (exitStatus == "1") {
                $("#btn_quit").css("display", "inline-block");
            }
            if (data[3] != "" && data[3] != "-1" && data[3] != null) {
                vm.$root.timeStatus = data[3];
                timeStatus = data[3];
            }
            if (timeStatus == "1") {
                $("#CountDown").css("display", "inline-block");
            }

            if (data[1] == "1") {
                if (parseInt(data[6]) >= 1) {
                    $(".emailf").children().html(data[6]);
                    $(".emailf").css("display", "inline-block");
                } else {
                    $(".emailf").children().html("");
                    $(".emailf").css("display", "none");
                }
            }
        });
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',{staticClass:"header"},[_c('div',[_c('span',{staticClass:"header_test"},[_c('a',{on:{"click":_vm.onDebug}},[_vm._v(_vm._s(_vm.pageCnt))])])]),_vm._v(" "),_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"emailf",staticStyle:{"display":"none"},on:{"click":_vm.onEmail}},[_c('span')]),_vm._v(" "),_c('div',{attrs:{"id":"VIP"}}),_vm._v(" "),_c('div',{staticClass:"searchmenu",attrs:{"id":"bus_search"}}),_vm._v(" "),_c('div',{staticClass:"login_status",staticStyle:{"display":"none"}}),_vm._v(" "),_c('div',{staticClass:"btn_exit btn_exitDisb",staticStyle:{"display":"none"},attrs:{"id":"btn_quit"},on:{"click":_vm.onQuit}}),_vm._v(" "),_c('div',{staticClass:"time",staticStyle:{"display":"none"},attrs:{"id":"CountDown"}})])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4cc04f79", __vue__options__)
  } else {
    hotAPI.reload("data-v-4cc04f79", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vuex":"vuex"}],341:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".many-dialog[data-v-4cb1499d] {\r\n    position: absolute;\r\n    z-index: 1000;\r\n    width: 100%;\r\n    height: 62%;\r\n    background-color: rgba(240,240,240,1);\r\n    color: #666;\r\n    font-size: 30px;\r\n}\r\n.many-body[data-v-4cb1499d] {\r\n    margin: 10px 0;\r\n}\r\n.many-footer[data-v-4cb1499d] {\r\n    clear: left;\r\n    margin: 20px 0;\r\n}\r\nul#content[data-v-4cb1499d] {\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n}\r\n\r\n#content li[data-v-4cb1499d] {\r\n    float: left;\r\n    width: 30%;\r\n    margin: 16px 5px;\r\n}\r\n\r\nli > a[data-v-4cb1499d] {\r\n    border: 1px solid black;\r\n    padding: 5px;\r\n}\r\n.cancalbtn[data-v-4cb1499d],.backbtn[data-v-4cb1499d]{ \r\n    margin:20px 0 0 0;\r\n    background:none;\r\n    color:#333;\r\n}\r\n.selectitle[data-v-4cb1499d]{    \r\n    margin:0 30%;\r\n    font-size:3rem;\r\n}\r\n.many-header[data-v-4cb1499d]{   \r\n    text-align:center;\r\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    props: {
        show: {
            type: Boolean,
            default: false
        },
        title: {
            type: String,
            default: "项目"
        },
        up: {
            type: Boolean,
            default: false
        },
        data: {
            type: Array,
            default: []
        }
    },
    data: function data() {
        return {
            page: 0
        };
    },

    computed: {
        curPage: function curPage() {
            return this.data.slice(this.page * 15, (this.page + 1) * 15);
        },
        showNext: function showNext() {
            return this.data.length > (this.page + 1) * 15;
        },
        showPrev: function showPrev() {
            return this.page > 0;
        },
        showUp: function showUp() {
            return this.up;
        }
    },
    methods: {
        onUp: function onUp() {
            this.$emit('up');
        },
        onPrev: function onPrev() {
            this.page -= 1;
        },
        onNext: function onNext() {
            this.page += 1;
        },
        onCancel: function onCancel() {
            this.$emit('cancel');
        },
        onChoose: function onChoose(index, item) {
            this.$emit('confirm', index, item);
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.show),expression:"show"}],staticClass:"many-dialog"},[_c('div',{staticClass:"many-header"},[_c('button',{staticClass:"btn cancalbtn",on:{"click":_vm.onCancel}},[_vm._v("取消")]),_vm._v(" "),_c('span',{staticClass:"selectitle"},[_vm._v("请选择"+_vm._s(_vm.title))]),_vm._v(" "),_c('button',{directives:[{name:"show",rawName:"v-show",value:(_vm.showUp),expression:"showUp"}],staticClass:"btn backbtn",on:{"click":_vm.onUp}},[_vm._v("返回")])]),_vm._v(" "),_c('div',{staticClass:"many-body"},[_c('ul',{attrs:{"id":"content"}},_vm._l((_vm.curPage),function(item,index){return _c('li',{key:item.NAM},[_c('a',{on:{"click":function($event){_vm.onChoose(index, item)}}},[_vm._v(_vm._s(item.NAM))])])}))]),_vm._v(" "),_c('div',{staticClass:"many-footer"},[_c('button',{directives:[{name:"show",rawName:"v-show",value:(_vm.showPrev),expression:"showPrev"}],staticClass:"btn",on:{"click":_vm.onPrev}},[_vm._v("上一页")]),_vm._v(" "),_c('button',{directives:[{name:"show",rawName:"v-show",value:(_vm.showNext),expression:"showNext"}],staticClass:"btn",on:{"click":_vm.onNext}},[_vm._v("下一页")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-4cb1499d"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4cb1499d", __vue__options__)
  } else {
    hotAPI.reload("data-v-4cb1499d", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],342:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".all-level[data-v-2c999e70] {\r\n    position: fixed;\r\n    z-index: 1001;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.multi-level[data-v-2c999e70] {\r\n    position: absolute;\r\n    top: 10%;\r\n    left: 6%;\r\n    width: 88%;\r\n    height: 88%;\r\n    font-size: 30px;\r\n}\r\n.level-1[data-v-2c999e70], .level-2[data-v-2c999e70], .level-3[data-v-2c999e70] {\r\n    margin: 10px 0;\r\n}\r\n\r\n.level-header[data-v-2c999e70] {\r\n    text-align: left;\r\n}\r\n.level-1[data-v-2c999e70] {\r\n    max-height: 85%;\r\n    height: 850px;\r\n    float: left;\r\n}\r\n\r\n.level-2[data-v-2c999e70], .level-3[data-v-2c999e70] {\r\n    max-height: 85%;\r\n    height: 850px;\r\n    float: left;\r\n}\r\n\r\n.level-expand[data-v-2c999e70] {  /* 全扩展模式 */\r\n    width: 98%;\r\n}\r\n\r\n.level-left[data-v-2c999e70] {    /* 两列模式 */\r\n    width: 25%;\r\n}\r\n.level-right[data-v-2c999e70] {\r\n    width: 74%;\r\n}\r\n\r\n.level-1 > ul[data-v-2c999e70], .level-2 > ul[data-v-2c999e70], .level-3 > ul[data-v-2c999e70] {\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n}\r\n\r\n.cols-1[data-v-2c999e70] {\r\n    float: left;\r\n    width: 96%;\r\n    margin: 0 5px;\r\n}\r\n.cols-2[data-v-2c999e70] {\r\n    float: left;\r\n    width: 48%;\r\n    margin: 0 5px;\r\n}\r\n.cols-3[data-v-2c999e70] {\r\n    float: left;\r\n    width: 30%;\r\n    margin: 0 5px;\r\n}\r\n.cols-4[data-v-2c999e70] {\r\n    float: left;\r\n    width: 24%;\r\n    margin: 0 5px;\r\n}\r\n\r\n.level-item[data-v-2c999e70] {\r\n    display: block;\r\n    overflow: hidden;\r\n    padding: 12px 0;\r\n    margin: 0 16px;\r\n}\r\n.selectitle[data-v-2c999e70]{    \r\n    margin:0 12px;\r\n    font-size:3rem;\r\n}\r\n\r\n.up[data-v-2c999e70] {\r\n    margin: 8px 0;\r\n}\r\n.closed[data-v-2c999e70] {\r\n    margin: 6px 6px 0 6px;\r\n    float: right;\r\n}\r\n.header-right[data-v-2c999e70] {\r\n    float: right;\r\n}\r\n.level-filter[data-v-2c999e70] {\r\n    margin: 6px 0 0 0;\r\n    font-size:2.6rem;\r\n}\r\n@media screen and (max-height: 850px) {\r\n    .multi-level[data-v-2c999e70] {\r\n        font-size: 26px;\r\n    }\r\n    .level-1[data-v-2c999e70] {\r\n        height:600px; \r\n    }\r\n    .level-2[data-v-2c999e70], .level-3[data-v-2c999e70] {\r\n        height: 600px; \r\n    }    \r\n    .up img[data-v-2c999e70]{\r\n        width: 40px;\r\n    }  \r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    props: {
        show: {
            type: Boolean,
            default: false
        },
        title: {
            type: String,
            default: "项目"
        },
        data: {
            type: Array,
            default: []
        },
        value: {
            type: String,
            default: ""
        },
        pcode: {
            type: String,
            default: 'COD'
        },
        pname: {
            type: String,
            default: 'NAM'
        },
        plevel: {
            type: String,
            default: 'C'
        },
        columns: {
            type: Array,
            default: function _default() {
                return [3, 3, 3];
            }
        }
    },
    data: function data() {
        return {
            left_cls: "level-expand",
            right_cls: "level-right",
            cols_cls: this.makeColsCls(this.columns),
            showLevel1: true,
            showLevel2: false,
            showLevel3: false,
            data2: [],
            data3: [],
            filter: '',
            filter1: '',
            filter2: '',
            filter3: '',
            result: [],
            advanced: false,
            advData: null
        };
    },

    computed: {
        data1: function data1() {
            if (this.advanced) {
                return this.advData;
            } else {
                return this.data;
            }
        },
        filterData1: function filterData1() {
            var _this = this;

            return this.data1.filter(function (item) {
                if (_this.filter1 === '') return true;
                if (item[_this.pname].indexOf(_this.filter1) == -1) return false;else return true;
            });
        },
        filterData2: function filterData2() {
            var _this2 = this;

            return this.data2.filter(function (item) {
                if (_this2.filter2 === '') return true;
                if (item[_this2.pname].indexOf(_this2.filter2) == -1) return false;else return true;
            });
        },
        filterData3: function filterData3() {
            var _this3 = this;

            return this.data3.filter(function (item) {
                if (_this3.filter3 === '') return true;
                if (item[_this3.pname].indexOf(_this3.filter3) == -1) return false;else return true;
            });
        },

        filterDisabled: function filterDisabled() {
            if (this.result.length == 0) {
                return false;
            } else if (this.result.length == 3) {
                return true;
            } else {
                return !this.hasDownLevel(this.result[this.result.length - 1]);
            }
        },
        showUp: function showUp() {
            return this.result.length > 0;
        }
    },
    watch: {
        data: function data(val) {
            this.mark();
        },
        value: function value(val) {
            this.mark();
        },
        advanced: function advanced(val) {
            this.mark();
        }
    },
    created: function created() {
        this.mark();
    },

    methods: {
        mark: function mark() {
            if (this.advanced) {
                this.makeAdvanced();
                this.markAdvanced();
            } else {
                this.markResult();
                this.markLayout();
            }
        },
        markAdvanced: function markAdvanced() {
            console.log('markAdvanced');
            this.left_cls = "level-expand";
            this.cols_cls[0] = "cols-2";
            this.showLevel2 = false;
            this.showLevel3 = false;
            this.filter = this.filter1 = '';
        },
        markLayout: function markLayout() {
            if (this.result[2]) {
                this.data3 = this.result[1][this.plevel];
                this.markActived(this.data3, this.result[2]);
                this.markActived(this.data, this.result[0]);
                this.left_cls = "level-left";
                this.cols_cls[0] = "cols-1";
                this.showLevel2 = false;
                this.showLevel3 = true;
                this.filter = this.filter3 = '';
                return;
            }
            if (this.result[1]) {
                this.data2 = this.result[0][this.plevel];
                this.markActived(this.data2, this.result[1]);
                this.markActived(this.data, this.result[0]);
                this.left_cls = "level-left";
                this.cols_cls[0] = "cols-1";
                this.showLevel2 = true;
                this.showLevel3 = false;
                this.filter = this.filter3 = '';
                return;
            }
            if (this.result[0]) {
                this.markActived(this.data, this.result[0]);
                if (this.hasDownLevel(this.result[0])) {
                    this.data2 = this.result[0][this.plevel];
                    this.markActived(this.data2, "");
                    this.left_cls = "level-left";
                    this.cols_cls[0] = "cols-1";
                    this.showLevel2 = true;
                    this.showLevel3 = false;
                    this.filter = this.filter2 = '';
                } else {
                    this.left_cls = "level-expand";
                    this.cols_cls = this.makeColsCls(this.columns);
                    this.showLevel2 = false;
                    this.showLevel3 = false;
                    this.filter = this.filter1 = '';
                }
            } else {
                this.markActived(this.data, "");
                this.left_cls = "level-expand";
                this.cols_cls = this.makeColsCls(this.columns);
                this.showLevel2 = false;
                this.showLevel3 = false;
                this.filter = this.filter1 = '';
            }
        },
        makeColsCls: function makeColsCls(col) {
            return col.map(function (item) {
                return "cols-" + item;
            });
        },
        onUp: function onUp() {
            this.result.pop();
            this.markLayout();
        },
        onCancel: function onCancel() {
            this.$emit('cancel');
        },
        itemCode: function itemCode(item) {
            return item[this.pcode];
        },
        itemName: function itemName(item) {
            return item[this.pname];
        },
        hasDownLevel: function hasDownLevel(item) {
            return item.hasOwnProperty(this.plevel) && item[this.plevel].length > 0;
        },
        findResult: function findResult() {
            this.result = [];
            for (var i = 0; i < this.data.length; i++) {
                var item0 = this.data[i];
                this.result.push(item0);
                if (item0[this.pcode] === this.value) {
                    return;
                }
                if (this.hasDownLevel(item0)) {
                    for (var j = 0; j < item0[this.plevel].length; j++) {
                        var item1 = item0[this.plevel][j];
                        this.result.push(item1);
                        if (item1[this.pcode] === this.value) {
                            return;
                        }
                        if (this.hasDownLevel(item1)) {
                            for (var k = 0; k < item1[this.plevel].length; k++) {
                                var item2 = item1[this.plevel][k];
                                if (item2[this.pcode] === this.value) {
                                    this.result.push(item2);
                                    return;
                                }
                            }
                        }
                        this.result.pop();
                    }
                }
                this.result.pop();
            }
        },
        markResult: function markResult() {
            if (this.value === "") return;
            this.findResult();
            this.$emit('result', this.result);
        },
        markActived: function markActived(data, value) {
            data.forEach(function (item) {
                if (item === value) {
                    item["actived"] = "level-actived";
                } else {
                    item["actived"] = "level-normal";
                }
            });
        },
        onChoose1: function onChoose1(index, item) {
            this.result = [item];
            this.$emit('result', this.result);
            this.markActived(this.data1, this.result[0]);
            if (this.hasDownLevel(item)) {
                this.data2 = item[this.plevel];
                this.markActived(this.data2, this.result[1]);
                this.left_cls = "level-left";
                this.cols_cls[0] = "cols-1";
                this.showLevel3 = false;
                this.showLevel2 = true;
                this.filter = this.filter2 = '';
                this.$emit('choose', 0, item);
            } else {
                this.left_cls = "level-expand";
                this.cols_cls = this.makeColsCls(this.columns);
                this.showLevel3 = false;
                this.$emit('confirm', index, item);
            }
        },
        onChoose2: function onChoose2(index, item) {
            this.result = [this.result[0], item];
            this.$emit('result', this.result);
            this.markActived(this.data2, this.result[1]);
            if (this.hasDownLevel(item)) {
                this.data3 = item[this.plevel];
                this.markActived(this.data3, this.result[2]);
                this.showLevel2 = false;
                this.showLevel3 = true;
                this.filter = this.filter3 = '';
                this.$emit('choose', 1, item);
            } else {
                this.$emit('confirm', index, item);
            }
        },
        onChoose3: function onChoose3(index, item) {
            this.$set(this.result, 2, item);
            this.$emit('result', this.result);
            this.markActived(this.data3, this.result[2]);
            this.$emit('confirm', index, item);
        },
        onFilter: function onFilter(event) {
            console.log(event.target.value);
            if (this.result.length == 0) {
                this.filter1 = event.target.value;
            } else if (this.result.length == 1) {
                this.filter2 = event.target.value;
            } else {
                this.filter3 = event.target.value;
            }
        },
        findResult2: function findResult2() {
            if (this.advData == null || this.value === "") return;
            this.result = [];
            for (var i = 0; i < this.advData.length; i++) {
                var item0 = this.advData[i];
                this.result.push(item0);
                if (item0[this.pcode] === this.value) {
                    return;
                }
                this.result.pop();
            }
        },
        makeAdvanced: function makeAdvanced() {
            this.findResult2();
            console.log('makeAdvanced');
            var expand = [];
            var path = [];
            for (var i = 0; i < this.data.length; i++) {
                var item0 = this.data[i];
                path.push(item0);
                if (this.hasDownLevel(item0)) {
                    for (var j = 0; j < item0[this.plevel].length; j++) {
                        var item1 = item0[this.plevel][j];
                        path.push(item1);
                        if (this.hasDownLevel(item1)) {
                            for (var k = 0; k < item1[this.plevel].length; k++) {
                                var item2 = item1[this.plevel][k];
                                path.push(item2);
                                this.expandAdd(expand, path);
                                path.pop();
                            }
                        } else {
                            this.expandAdd(expand, path);
                        }
                        path.pop();
                    }
                } else {
                    this.expandAdd(expand, path);
                }
                path.pop();
            }
            this.advData = expand;
        },
        expandAdd: function expandAdd(expand, path) {
            var i = 0;
            var prepand = "";
            while (i < path.length) {
                prepand = prepand + path[i][this.pname];
                i++;
            }
            var item = Object.assign({}, path[i - 1]);
            item[this.pname] = prepand;
            expand.push(item);
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.show),expression:"show"}],staticClass:"all-level"},[_c('div',{staticClass:"multi-level"},[_c('div',{staticClass:"level-header"},[_c('div',{staticClass:"header-right"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.filter),expression:"filter"}],staticClass:"level-filter",attrs:{"id":"textFilter","type":"text","placeholder":"查询过滤","disabled":_vm.filterDisabled,"onclick":"ShowPinyinKB('-1','-1','textFilter','')","onblur":"HideKB()"},domProps:{"value":(_vm.filter)},on:{"input":[function($event){if($event.target.composing){ return; }_vm.filter=$event.target.value},_vm.onFilter]}}),_vm._v(" "),_c('a',{on:{"click":_vm.onCancel}},[_c('img',{staticClass:"closed",attrs:{"src":_vm.$root.imgPath('img/返回按钮.png')}})])]),_vm._v(" "),_c('div',[_c('span',{staticClass:"selectitle"},[_vm._v("请选择"+_vm._s(_vm.title)+"：")]),_vm._v(" "),_vm._l((_vm.result),function(item,index){return _c('span',{key:'result-'+index},[_vm._v(_vm._s(_vm.itemName(item))+" / ")])}),_vm._v(" "),_c('a',{directives:[{name:"show",rawName:"v-show",value:(_vm.showUp),expression:"showUp"}],staticClass:"up",on:{"click":_vm.onUp}},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/删除.png')}})])],2)]),_vm._v(" "),_c('div',[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showLevel1),expression:"showLevel1"}],staticClass:"level-1",class:_vm.left_cls},[_c('ul',_vm._l((_vm.filterData1),function(item,index){return _c('li',{key:'level1-'+index,class:_vm.cols_cls[0]},[_c('a',{staticClass:"level-item",class:item.actived,attrs:{"id":_vm.itemCode(item)},on:{"click":function($event){_vm.onChoose1(index, item)}}},[_vm._v(_vm._s(_vm.itemName(item)))])])}))]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showLevel2),expression:"showLevel2"}],staticClass:"level-2",class:_vm.right_cls},[_c('ul',_vm._l((_vm.filterData2),function(item,index){return _c('li',{key:'level2-'+index,class:_vm.cols_cls[1]},[_c('a',{staticClass:"level-item",class:item.actived,attrs:{"id":_vm.itemCode(item)},on:{"click":function($event){_vm.onChoose2(index, item)}}},[_vm._v(_vm._s(_vm.itemName(item)))])])}))]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showLevel3),expression:"showLevel3"}],staticClass:"level-3",class:_vm.right_cls},[_c('ul',_vm._l((_vm.filterData3),function(item,index){return _c('li',{key:'level3-'+index,class:_vm.cols_cls[2]},[_c('a',{staticClass:"level-item",class:item.actived,attrs:{"id":_vm.itemCode(item)},on:{"click":function($event){_vm.onChoose3(index, item)}}},[_vm._v(_vm._s(_vm.itemName(item)))])])}))])])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-2c999e70"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2c999e70", __vue__options__)
  } else {
    hotAPI.reload("data-v-2c999e70", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],343:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert("/*主体区域之导航区域*/\r\n.nav[data-v-7664527b]{\r\n    position: absolute;\r\n    float: left;\r\n    width: 29%;\r\n    height: 100%;\r\n}\r\n/*-------------------------导航-------------------------*/\r\n.navbus[data-v-7664527b]{\r\n    margin-top:11%;\r\n}\r\n.navlist[data-v-7664527b]{\r\n    position: relative;\r\n    width: 100%;\r\n    height: 70%;\r\n    margin: 5% auto;\r\n    background: url(img/navbg.png) no-repeat;\r\n    background-size: 100% 100%;\r\n}\r\n.navlist li[data-v-7664527b]{\r\n    position: relative;\r\n    width: 100%;\r\n    height: 12%;\r\n    margin: 1% auto;\r\n    color:#FFFFFF;\r\n}\r\n.navlist li span[data-v-7664527b]{\r\n    position: absolute;\r\n}\r\n.navlist li span[data-v-7664527b]:first-child{\r\n    width: 100%;\r\n    height: 100%;\r\n    font-size: 4rem;\r\n}\r\n.busName[data-v-7664527b]{\r\n    margin-left: 35px;\r\n    margin-bottom: 0px;\r\n    color: #009688;\r\n    font-size: 3rem;\r\n    font-weight: 600;\r\n}\r\n.BZ[data-v-7664527b]{\r\n    font-size: 2.5rem;\r\n}\r\n.part0[data-v-7664527b]{\r\n    top: 65px;\r\n    left: -30px;\r\n    transform: scale(0.5,0.6) skew(14deg,14deg);\r\n    opacity: 0.4;\r\n}\r\n.part00[data-v-7664527b]{\r\n    top: 100px;\r\n    left: 318px;\r\n    font-size: 1.6rem;\r\n}\r\n.part1[data-v-7664527b]{\r\n    top: 65px;\r\n    left: 40px;\r\n    transform: scale(0.65, 0.8) skew(13deg, 8deg);\r\n    opacity: 0.7;\r\n}\r\n.part01[data-v-7664527b]{\r\n    top: 100px;\r\n    left: 385px;\r\n    font-size: 2rem;\r\n}\r\n.active[data-v-7664527b]{\r\n    top: 85px;\r\n    left: 130px;\r\n    transform: scale(0.9, 1.1) skew(-1deg, 2deg);\r\n    color: #008B6E;\r\n}\r\n.activing[data-v-7664527b]{\r\n    top: 100px;\r\n    left: 470px;\r\n    font-size: 3.5rem;\r\n    color: #008B6E;\r\n}\r\n.part3[data-v-7664527b]{\r\n    top: 105px;\r\n    left: 55px;\r\n    transform: scale(0.7,0.8) skew(-10deg,-4deg);\r\n    opacity: 0.8;\r\n}\r\n.part03[data-v-7664527b]{\r\n    top: 115px;\r\n    left: 385px;\r\n    font-size: 2.5rem;\r\n}\r\n.part4[data-v-7664527b]{\r\n    top: 100px;\r\n    left: 0px;\r\n    transform: scale(0.6,0.5) skew(-15deg,-12deg);\r\n    opacity: 0.6;\r\n}\r\n.part04[data-v-7664527b]{\r\n    top: 115px;\r\n    left: 310px;\r\n    font-size: 2rem;\r\n}\r\n.part5[data-v-7664527b]{\r\n    top: 90px;\r\n    left: -90px;\r\n    opacity: 0.4;\r\n    transform: scale(0.4,0.4) skew(-15deg,-15deg);\r\n}\r\n.part05[data-v-7664527b]{\r\n    top: 105px;\r\n    left: 235px;\r\n    font-size: 1.6rem;\r\n}")
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('nav',{staticClass:"nav"},[_c('div',{staticClass:"navbus"},[_c('label',{staticClass:"busName",attrs:{"id":"busName"}}),_c('span',{staticClass:"BZ"},[_vm._v("（"),_c('label',{staticClass:"curBz",attrs:{"id":"curBz"}}),_vm._v("/"),_c('label',{staticClass:"allBz",attrs:{"id":"allBz"}}),_vm._v("）")])]),_vm._v(" "),_c('ul',{staticClass:"navlist",attrs:{"id":"menu-content"}})])}]
__vue__options__._scopeId = "data-v-7664527b"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7664527b", __vue__options__)
  } else {
    hotAPI.reload("data-v-7664527b", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],344:[function(require,module,exports){
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    props: {
        total: {
            type: Number,
            default: 0
        },
        pageSize: {
            type: Number,
            default: 8
        }
    },
    data: function data() {
        return {
            currentPage: 0
        };
    },

    computed: {
        prevShow: function prevShow() {
            return this.currentPage > 0;
        },
        nextShow: function nextShow() {
            return this.pageSize * (this.currentPage + 1) < this.total;
        },
        pageNumList: function pageNumList() {
            var PageNum = 4;
            var PagesLen = Math.ceil(this.total / this.pageSize);
            var PageNum_2 = PageNum % 2 == 0 ? Math.ceil(PageNum / 2) + 1 : Math.ceil(PageNum / 2);
            var PageNum_3 = PageNum % 2 == 0 ? Math.ceil(PageNum / 2) : Math.ceil(PageNum / 2) + 1;
            var startPage, endPage;
            if (PageNum >= PagesLen) {
                startPage = 0;endPage = PagesLen - 1;
            } else if (this.currentPage < PageNum_2) {
                startPage = 0;endPage = PagesLen - 1 > PageNum ? PageNum : PagesLen - 1;
            } else {
                startPage = this.currentPage + PageNum_3 >= PagesLen ? PagesLen - PageNum - 1 : this.currentPage - PageNum_2 + 1;
                var t = startPage + PageNum;endPage = t > PagesLen ? PagesLen - 1 : t;
            }
            var result = [];
            for (var num = startPage; num <= endPage; num++) {
                result.push(num);
            }
            return result;
        },
        pageOfTable: function pageOfTable() {
            if (this.total === 0) return '共0/0页';else return '\u5171' + (this.currentPage + 1) + '/' + Math.ceil(this.total / this.pageSize) + '\u9875';
        }
    },
    methods: {
        toPage: function toPage(num) {
            this.currentPage = num;
            this.$emit('current-change', num);
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"page",attrs:{"id":"page"}},[_c('a',{directives:[{name:"show",rawName:"v-show",value:(_vm.prevShow),expression:"prevShow"}],staticClass:"prePage",on:{"click":function($event){_vm.toPage(_vm.currentPage-1)}}},[_vm._v("上一页")]),_vm._v(" "),_vm._l((_vm.pageNumList),function(num){return _c('a',{key:'n'+num,staticClass:"page_btn",class:{nowpage: num == _vm.currentPage},on:{"click":function($event){_vm.toPage(num)}}},[_vm._v(_vm._s(num+1))])}),_vm._v(" "),_c('a',{directives:[{name:"show",rawName:"v-show",value:(_vm.nextShow),expression:"nextShow"}],staticClass:"nextPage",on:{"click":function($event){_vm.toPage(_vm.currentPage+1)}}},[_vm._v("下一页")]),_vm._v(" "),_c('span',{staticClass:"sumpage"},[_vm._v(_vm._s(_vm.pageOfTable))])],2)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-503e84f2", __vue__options__)
  } else {
    hotAPI.reload("data-v-503e84f2", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],345:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".province, .city, .district {\n    display:inline-block;\n}\n.province .swiper-container,.city .swiper-container,.district .swiper-container  {\n    width: 280px;\n    height: 400px;\n    margin:10px 20px 20px 10px;\n}\n.swiper-slideN {\n    text-align: center;\n    font-size: 2.5rem;\n    background-color: transparent;\n    /* Center slide text vertically */\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    -webkit-justify-content: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    -webkit-align-items: center;\n    align-items: center;\n}\n.activeSlide{\n    font-weight: bold;\n}\n.citySelector{\n    position:relative;\n    margin:10px auto;\n    width:90%;\n    height:65%;\n    text-align:center;\n    color:#008B6E;\n}\n.selectSlide{\n    width:100%;\n    height:77px;\n    position:absolute;\n    z-index: 1;\n    top:38%;\n    background-color: #bfbfbf;\n    opacity: 0.4;\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        var indexPro = 0;
        var indexCty = 0;
        var indexDst = 0;
        var swiperPro = new Swiper('.province .swiper-container', {
            direction: "vertical",

            slideActiveClass: 'activeSlide',
            slidesPerView: 5,
            spaceBetween: 3,
            loopedSlides: 5,
            centeredSlides: true,
            slideToClickedSlide: true,
            onSlideChangeEnd: function onSlideChangeEnd(swiperPro) {
                swiperCty.removeAllSlides();
                swiperDst.removeAllSlides();
                indexPro = swiperPro.activeIndex;
                initCity();
                initDistrict();
                swiperCty.update();
            }
        });
        var swiperCty = new Swiper('.city .swiper-container', {
            direction: "vertical",

            slideActiveClass: 'activeSlide',
            slidesPerView: 5,
            spaceBetween: 3,
            loopedSlides: 5,
            centeredSlides: true,
            slideToClickedSlide: true,
            onSlideChangeEnd: function onSlideChangeEnd(swiperCty) {
                swiperDst.removeAllSlides();
                indexCty = swiperCty.activeIndex;
                initDistrict();
                swiperDst.update();
            },
            onClick: function onClick(swiperCty) {
                swiperDst.removeAllSlides();
                indexCty = swiperCty.activeIndex;
                initDistrict();
                swiperDst.update();
            }
        });
        var swiperDst = new Swiper('.district .swiper-container', {
            direction: "vertical",

            slideActiveClass: 'activeSlide',
            slidesPerView: 5,
            spaceBetween: 3,
            loopedSlides: 5,
            centeredSlides: true,
            slideToClickedSlide: true,
            onSlideChangeEnd: function onSlideChangeEnd(swiperDst) {
                indexDst = swiperDst.activeIndex;
            }
        });

        var str = [{ "province": "广东省", "ctyList": [{ "city": "深圳市", "dstList": ["南山区_10000", "龙岗区_40000", "罗湖区_60000", "宝安区_80000", "盐田区_12000", "福田区_30000"] }, { "city": "汕头市", "dstList": ["龙湖区_10001", "濠江区_10002", "潮南区_10003", "南澳县_10004", "金平区_10005", "潮阳区_10006", "澄海区"] }, { "city": "珠海市", "dstList": ["香洲区_11000", "金湾区_12000", "斗门区_13000"] }, { "city": "惠州市", "dstList": ["惠城区_14000", "博罗县_15000", "龙门县_16000", "惠阳区_17000", "惠东县_18000"] }, { "city": "佛山市", "dstList": ["三水区", "禅城区", "顺德区", "高明区", "南海区"] }] }, { "province": "北京市", "ctyList": [{ "city": "北京市", "dstList": ["通县", "西城区", "宣武区", "丰台区", "海淀区", "房山区", "顺义区", "大兴区", "平谷区", "延庆区", "东城区", "崇文区", "朝阳区", "石景山区", "门头沟区", "通州区", "昌平区", "怀柔区", "密云县"] }] }, { "province": "内蒙古自治区", "ctyList": [{ "city": "锡林郭勒盟", "dstList": ["锡林浩特市", "多伦县", "苏尼特右旗", "西乌珠穆沁旗", "正镶白旗", "二连浩特市", "阿马嗄旗", "阿巴嘎旗", "苏尼特左旗", "东乌珠穆沁旗", "太仆寺旗", "正蓝旗", "镶黄旗"] }, { "city": "兴安盟", "dstList": ["科尔沁右翼中旗", "突泉县", "科右中旗", "科尔沁右翼前旗", "扎赉特旗", "乌兰浩特市", "阿尔山市"] }, { "city": "阿拉善盟", "dstList": ["阿拉善左旗", "前郭尔罗斯蒙古族自治县", "阿拉善右旗"] }] }, { "province": "江苏省", "ctyList": [{ "city": "南京市", "dstList": ["玄武区", "秦淮区", "鼓楼区"] }] }, { "province": "上海市", "ctyList": [{ "city": "上海市", "dstList": ["黄浦区", "浦东新区", "嘉定区"] }] }, { "province": "黑龙江省", "ctyList": [{ "city": "哈尔滨市", "dstList": ["松北区", "木兰县", "方正县"] }] }, { "province": "吉林省", "ctyList": [{ "city": "长春市", "dstList": ["农安县", "绿园区", "二道区"] }] }, { "province": "辽宁省", "ctyList": [{ "city": "沈阳市", "dstList": ["大东区", "苏家屯区", "于洪区"] }] }, { "province": "浙江省", "ctyList": [{ "city": "杭州市", "dstList": ["西湖区", "萧山区", "桐庐县"] }] }, { "province": "安徽省", "ctyList": [{ "city": "合肥市", "dstList": ["庐阳区", "肥东县"] }] }, { "province": "福建省", "ctyList": [{ "city": "福州市", "dstList": ["鼓楼区"] }] }, { "province": "广西壮族自治区", "ctyList": [{ "city": "南宁市", "dstList": ["青秀区"] }] }];

        function initProvince() {
            for (var i = 0; i < str.length; i++) {
                swiperPro.appendSlide("<div class=\"swiper-slide swiper-slideN\">" + str[i]["province"] + "</div>");
            }
        }
        function initCity() {
            for (var j = 0; j < str[indexPro]["ctyList"].length; j++) {
                swiperCty.appendSlide("<div class=\"swiper-slide swiper-slideN\">" + str[indexPro].ctyList[j]["city"] + "</div>");
            }
        }
        function initDistrict() {
            for (var j = 0; j < str[indexPro].ctyList[indexCty]["dstList"].length; j++) {
                swiperDst.appendSlide("<div class=\"swiper-slide swiper-slideN\">" + str[indexPro].ctyList[indexCty].dstList[j].split("_")[0] + "</div>");
            }
        }
        initProvince();
        initCity();
        initDistrict();
        $("#btn_sure").on('click', function () {
            exitScene("STA_CONTINUE");
        });
        $("#btn_back").on('click', function () {
            exitScene("STA_CANCEL");
        });
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('p',{staticClass:"modal_title"},[_vm._v("省市区选择")]),_vm._v(" "),_c('div',{staticClass:"citySelector"},[_c('div',{staticClass:"selectSlide"}),_vm._v(" "),_c('div',{staticClass:"province"},[_c('div',{staticClass:"swiper-container"},[_c('div',{staticClass:"swiper-wrapper"})])]),_vm._v(" "),_c('div',{staticClass:"city"},[_c('div',{staticClass:"swiper-container"},[_c('div',{staticClass:"swiper-wrapper"})])]),_vm._v(" "),_c('div',{staticClass:"district"},[_c('div',{staticClass:"swiper-container"},[_c('div',{staticClass:"swiper-wrapper"})])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2e96a4f0", __vue__options__)
  } else {
    hotAPI.reload("data-v-2e96a4f0", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],346:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    data: function data() {
        return {};
    },

    methods: {
        onBackCard: function onBackCard() {
            this.$root.loginStatus = false;
            this.$root.countDown = 10;
        },
        onSure: function onSure() {
            this.$root.cardStatus = true;
        }
    },
    i18n: {
        messages: {
            zh_cn: {
                html: {
                    "title": "信息提示",
                    "reason": "密码错误",
                    "back": "取&nbsp;&nbsp;&nbsp;卡",
                    "sure": "继&nbsp;&nbsp;&nbsp;续"
                },
                errors: {
                    "pinError": "密码错误"
                }
            },
            en_us: {
                html: {
                    "title": "Information",
                    "reason": "Pin Error",
                    "back": "Eject Card",
                    "sure": "Continue"
                },
                errors: {
                    "pinError": "Pin Error"
                }
            }
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('x-header',{attrs:{"login":_vm.$root.loginStatue,"countdown":_vm.$root.countDown,"cardstatus":_vm.$root.cardStatue}}),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v(_vm._s(_vm.$t("html.title")))]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"ShowReason"}},[_vm._v(_vm._s(_vm.$t("html.reason")))]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"btn_back"},domProps:{"innerHTML":_vm._s(_vm.$t('html.back'))},on:{"click":function($event){_vm.onBackCard()}}}),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_sure"},domProps:{"innerHTML":_vm._s(_vm.$t('html.sure'))},on:{"click":function($event){_vm.onSure()}}})])])])])],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-39cfd00a", __vue__options__)
  } else {
    hotAPI.reload("data-v-39cfd00a", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],347:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    data: function data() {
        return {};
    },

    methods: {},
    i18n: {
        messages: {
            zh_cn: {
                "html": {
                    "OutService": "本机暂停服务"
                }
            },
            en_us: {
                "html": {
                    "OutService": "Out Of Service"
                }
            }
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('x-header',{attrs:{"login":false}}),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_c('span',{attrs:{"id":"ShowReason"}},[_vm._v(_vm._s(_vm.$t("html.OutService")))])])])])])],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1ce11274", __vue__options__)
  } else {
    hotAPI.reload("data-v-1ce11274", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],348:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".advertise[data-v-542a6acd] {\r\n    position: absolute;\r\n    z-index: 1000;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\nimg .center[data-v-542a6acd] {\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  data: function data() {
    return {
      images: ["A0001.jpg", "A0002.jpg", "A0003.jpg", "A0004.jpg"],
      swiperOption: {
        autoplay: 3000,
        effect: "fade",
        autoplayDisableOnInteraction: false
      }

    };
  },

  methods: {
    onOver: function onOver() {
      exitScene("STA_CANCEL");
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"advertise"},[_c('swiper',{attrs:{"options":_vm.swiperOption}},_vm._l((_vm.images),function(item){return _c('swiper-slide',{key:item},[_c('a',{on:{"click":_vm.onOver}},[_c('img',{staticClass:"center",attrs:{"src":'advertise/' + item}})])])}))],1)}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-542a6acd"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-542a6acd", __vue__options__)
  } else {
    hotAPI.reload("data-v-542a6acd", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],349:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert("@media screen and (min-width: 1300px) and  (max-width:1380px){ \n  .clear[data-v-7ca3d610]{\n      background-position: center 0;\n  }\n  \n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});


var arr;

var firstMenu;

var secondMenu;
var jsonData;
var adtime;
exports.default = {
    beforeDestroy: function beforeDestroy() {

        $(".regularlymenu").unbind("click");
        $(".regularlymenu").remove();
        $(".regularly_menu_logo").unbind("click");
        $(".made_menu .swiper-container").empty();
        $(".made_menu .swiper-container").empty();
        clearInterval(adtime);
        firstMenu.destroy(false);
        secondMenu.destroy(false);

        $(".regularly_menu .regularly_menu_logo").empty();
        $(".made_menu .swiper-wrapper").empty();
        $(".regularly_menu .swiper-wrapper").empty();
        $(".made_menu .swiper-slide").empty();
        $("#autoScreening").empty();
        $(".mainAd .swiper-wrapper").empty();
        firstMenu = null;
        secondMenu = null;
        arr = null;
    },

    mounted: function mounted() {
        arr = new Array();
        var thepath = vm.$root.themeImgPath;
        DataTools.get("GD_A01_MenuData", function (data) {
            jsonData = JSON.parse(data);
            data = null;
            var nowPage = 0;
            var SecondnowPage = 0;
            var SecondnowPage1 = 0;
            var FirstMenuPageLen = 0;
            var heightW = screen.height;
            var widthW = screen.width;
            var FirstMenuNum;
            var SecondMenuNum;
            if (widthW >= 1900) {
                FirstMenuNum = 8;
                SecondMenuNum = 10;
            } else {
                FirstMenuNum = 5;
                SecondMenuNum = 8;
            }
            var FirstMenuPage = 0;
            var SecondMenuPage = 0;
            var newData = new Array();
            var regularlyData = new Array();
            var addFirstMenu, addSecondMenu, FirstMenuWrap, SecondMenuWrap;

            $(".regularly_menu .regularly_menu_logo").empty();
            $(".made_menu .swiper-wrapper").empty();
            for (var i = 0; i < jsonData.length; i++) {
                arr[i] = new Array();
                if (i == 0) {
                    FirstMenuWrap = "<div class='menu_imgbox'><img class='regularly_menu_img larger' src='" + thepath + '/img/' + jsonData[i].NAM_ICON.substr(0, jsonData[i].NAM_ICON.length - 4) + "1" + jsonData[i].NAM_ICON.substr(-4) + "'/><p class='regularly_menu_name'>" + jsonData[i].NAM_MENU + "</p></div>";
                    $(".regularly_menu .regularly_menu_logo").append(FirstMenuWrap);

                    regularlyData[i] = jsonData[i];
                    SecondMenuPage = Math.ceil(regularlyData[i].CLD_MENU.length / SecondMenuNum);
                    for (var m = 0; m < SecondMenuPage; m++) {

                        SecondMenuWrap = "<div class='swiper-slide' id='RegularlyMenu" + m + "'><div class='menu_imgbox'></div></div>";

                        $(".made_menu .swiper-wrapper").append(SecondMenuWrap);

                        for (var j = SecondnowPage * SecondMenuNum; j < (SecondnowPage + 1) * SecondMenuNum; j++) {
                            if (regularlyData[i].CLD_MENU[j]) {
                                addSecondMenu = "<span class='col'><div class='menu_icon' data-ID_MENU=" + regularlyData[i].CLD_MENU[j].ID_MENU + "><img id=" + regularlyData[i].CLD_MENU[j].NAM_ACTION + " class='menu_img' src='" + thepath + '/img/bus/' + regularlyData[i].CLD_MENU[j].NAM_ICON + "'/></div><p style='display:none;'>" + regularlyData[i].CLD_MENU[j].NAM_MENU + "</p></span>";
                                $("#RegularlyMenu" + m).children().append(addSecondMenu);
                            }
                        }

                        arr[0].push($(".made_menu .swiper-slide").length);
                        SecondnowPage++;
                    }
                } else {
                    newData[FirstMenuPageLen] = jsonData[i];
                    FirstMenuPageLen++;
                }
            }

            FirstMenuPage = Math.ceil(FirstMenuPageLen / FirstMenuNum);

            for (var n = 0; n < FirstMenuPage; n++) {
                FirstMenuWrap = "<div class='swiper-slide' id='menu" + n + "'><div class='menu_imgbox'></div></div>";
                $(".regularly_menu .swiper-wrapper").append(FirstMenuWrap);

                for (var i = nowPage * FirstMenuNum; i < (nowPage + 1) * FirstMenuNum; i++) {
                    if (newData[i]) {
                        addFirstMenu = "<span class='col regularlymenu' data-bus=" + newData[i].NAM_ACTION + "><img src='" + thepath + '/img/' + newData[i].NAM_ICON + "'/><p class='menu_name'>" + newData[i].NAM_MENU + "</p></span>";
                        $("#menu" + n).children().append(addFirstMenu);

                        var SecondnowPage1 = 0;
                        SecondMenuPage = Math.ceil(newData[i].CLD_MENU.length / SecondMenuNum);
                        for (var m = 0; m < SecondMenuPage; m++) {
                            SecondMenuWrap = "<div class='swiper-slide' id='" + newData[i].NAM_ACTION + m + "'><div class='menu_imgbox'></div></div>";
                            $(".made_menu .swiper-wrapper").append(SecondMenuWrap);

                            for (var j = SecondnowPage1 * SecondMenuNum; j < (SecondnowPage1 + 1) * SecondMenuNum; j++) {
                                if (newData[i].CLD_MENU[j]) {
                                    addSecondMenu = "<span class='col'><div class='menu_icon' data-ID_MENU=" + newData[i].CLD_MENU[j].ID_MENU + "><img id=" + newData[i].CLD_MENU[j].NAM_ACTION + " class='menu_img' src='" + thepath + '/img/bus/' + newData[i].CLD_MENU[j].NAM_ICON + "'/></div><p style='display:none;'>" + newData[i].CLD_MENU[j].NAM_MENU + "</p></span>";
                                    $("#" + newData[i].NAM_ACTION + m).children().append(addSecondMenu);
                                }
                            }
                            arr[i + 1].push($(".made_menu .swiper-slide").length);
                            SecondnowPage1++;
                        }
                    }
                }
                nowPage++;
            }
            createMenu();
        });
        function findindex(str) {

            for (var i = 0; i < arr.length; i++) {

                for (var j = 0; j < arr[i].length; j++) {
                    if (arr[i][j] == str) {
                        return i;
                    }
                }
            }
        }

        function createMenu() {
            firstMenu = new Swiper('.regularly_menu .swiper-container', {
                prevButton: '.swiper-button-prev',
                nextButton: '.swiper-button-next'
            });

            secondMenu = new Swiper('.made_menu .swiper-container', {
                pagination: '.swiper-pagination',
                paginationClickable: true,

                fade: {
                    crossFade: true
                },
                onTransitionEnd: function onTransitionEnd(swiper) {
                    var curindex = findindex(swiper.activeIndex + 1);
                    changeFirstMenu(curindex);
                }
            });

            onClickBind();
        }

        function onClickBind() {

            var list = document.getElementsByClassName("col");
            for (var i = 0; i < list.length; i++) {
                list[i].onclick = made_menu_onclick;
            }

            var list = document.getElementsByClassName("regularlymenu");
            for (var i = 0; i < list.length; i++) {
                list[i].onclick = regularlymenu_onclick;
            }

            var list = document.getElementsByClassName("regularly_menu_logo");
            for (var i = 0; i < list.length; i++) {
                list[i].onclick = regularly_menu_logo_onclick;
            }

            document.getElementById("bus_search").onclick = bus_search_onclick;
            document.getElementById("goodcover").onclick = goodcover_onclick;
            document.getElementById("btn_quit").onclick = btn_quit_onclick;
            document.getElementById("searchText").onclick = searchText_onclick;

            document.getElementById("searchText").oninput = searchText_onpropertychange;
        }

        function regularlymenu_onclick() {
            var madeMenu = $('.made_menu .swiper-container .swiper-wrapper');
            var busName = $(this).attr('data-bus');

            var curindex = madeMenu.find('#' + busName + '0').index();
            secondMenu.slideTo(curindex, 300, false);
            changeFirstMenu(findindex(curindex + 1));
        }

        function regularly_menu_logo_onclick() {
            var curindex = 0;
            secondMenu.slideTo(curindex, 300, false);
            changeFirstMenu(curindex);
        }

        var previousIndex = 0;
        function changeFirstMenu(index) {
            var widthW = screen.width;
            var num;
            if (widthW >= 1900) {
                num = 8;
            } else {
                num = 5;
            }
            var firstindex = Math.ceil(index / num) - 1;
            firstMenu.slideTo(firstindex, 300, false);
            if (previousIndex != 0) {
                var strPreSrc = $(".menu_imgbox .regularlymenu img").eq(previousIndex - 1).attr("src");
                var strPreNewSrc = strPreSrc.replace("1.png", ".png");
                $(".menu_imgbox .regularlymenu img").eq(previousIndex - 1).attr("src", strPreNewSrc);
            } else {
                var strPreSrc = $(".regularly_menu_logo img").attr("src");
                var strPreNewSrc = strPreSrc.replace("1.png", ".png");
                $(".regularly_menu_logo img").attr("src", strPreNewSrc);
            }
            if (index != 0) {
                var strCurMenuSrc = $(".menu_imgbox .regularlymenu img").eq(index - 1).attr("src");
                if (strCurMenuSrc.substr(-5) != "1.png") {
                    var strNewSrc = strCurMenuSrc.substr(0, strCurMenuSrc.length - 4) + "1" + strCurMenuSrc.substr(-4);
                    $(".menu_imgbox img").removeClass('larger');
                    $(".menu_imgbox .regularlymenu img").eq(index - 1).attr("src", strNewSrc).addClass('larger');
                }
            } else {
                var strPreSrc = $(".regularly_menu_logo img").attr("src");
                var strPreNewSrc = strPreSrc.replace(".png", "1.png");
                $(".menu_imgbox img").removeClass('larger');
                $(".regularly_menu_logo img").attr("src", strPreNewSrc).addClass('larger');
            }
            previousIndex = index;
        }


        function made_menu_onclick() {
            var MenuName = $(this).find("p").html();
            var MenuID = $(this).find(".menu_icon").attr("data-ID_MENU");
            var MenuAction = $(this).find("img").attr("id");

            setVar("GD_A01_MenuID", MenuID);
            setVar("GD_A01_MenuName", MenuName);
            setVar("GD_A01_MenuAction", MenuAction);
            setVar("GD_A01_Header_Time", "1");
            setVar("GD_A01_Header_Exit", "1");

            exitScene("STA_CONTINUE");
        }

        function bus_search_onclick(e) {
            $("#goodcover").css("display", "block");
            $("#blursearch").css("display", "block");
            $("#searchText").focus();
            ShowPinyinKB('-1', '-1', 'searchText', '');
        }

        function goodcover_onclick(e) {
            $(".auto-screening-prompt").remove();
            $(".blursearch_select_content").css("display", "none");
            $('#searchText').val("");
            $("#blursearch").css("display", "none");
            $("#goodcover").css("display", "none");
        }

        function btn_quit_onclick() {
            if (loginStatus == "1") {
                $.get("customer/common/cust_com_TradeFinishTip.html", function (data) {
                    $('#pagePopup').fadeIn(300).html(data);
                });
            } else {
                exitScene("STA_ADMIN");
            }
        }


        function searchText_onclick() {
            ShowPinyinKB(-1, -1, "searchText", "");
        }

        function searchText_onpropertychange() {
            var inputText = $('#searchText').val();

            if (inputText != "") {

                $(".blursearch_select_content").css("display", "flex");
                $(".auto-screening-prompt").remove();
                for (var i = 0; i < jsonData.length; i++) {
                    if (jsonData[i].NAM_MENU != "常用菜单") {
                        for (var j = 0; j < jsonData[i].CLD_MENU.length; j++) {
                            if (jsonData[i].CLD_MENU[j].TXT_INTRO.indexOf(inputText.toUpperCase()) != -1) {
                                var addArrWord = "<div class=\"auto-screening-prompt\" data-ID_MENU=" + jsonData[i].CLD_MENU[j].ID_MENU + " data-NAM_MENU= " + jsonData[i].CLD_MENU[j].NAM_MENU + " data-TXT_INTRO= " + jsonData[i].CLD_MENU[j].TXT_INTRO + "><img class=\" \" src='" + thepath + '/img/bus/' + jsonData[i].CLD_MENU[j].NAM_ICON + "' /></div>";
                                if ($(".auto-screening-prompt").length <= 4) {
                                    $("#autoScreening").append(addArrWord);
                                } else {
                                    break;
                                }
                            }
                        }
                    }
                }
            }

            $(".auto-screening-prompt").each(function () {
                if ($(this).attr("data-TXT_INTRO").indexOf($('#searchText').val().toUpperCase()) < 0) {
                    $(this).remove();
                } else if ($('#searchText').val().length == 0) {
                    $(".auto-screening-prompt").remove();
                }
            });

            $(".auto-screening-prompt").each(function (i) {
                var iTextHtml = $(this).attr("data-TXT_INTRO");
                $(".auto-screening-prompt").each(function (j) {
                    var jTextHtml = $(this).attr("data-TXT_INTRO");
                    if (i < j && iTextHtml == jTextHtml) {
                        $(this).remove();
                    }
                });
            });

            $(".auto-screening-prompt").on("click", function () {
                $("#searchText").val($(this).text());
                var MenuName = $(this).attr("data-NAM_MENU");
                var MenuID = $(this).attr("data-ID_MENU");

                $("#autoScreening").addClass("auto-hidden");
                $(".auto-screening-prompt").remove();

                setVar("GD_A01_MenuID", MenuID);
                setVar("GD_A01_MenuName", MenuName);
                exitScene("STA_CONTINUE");
            });
        }

        playAd();

        function playAd() {
            if (!imgfile) {
                return;
            } else {
                changeAd();
            }
        }

        function changeAd() {
            for (var i = 0; i < imgfile.length; i++) {
                var ADChild = '<div class="swiper-slide"><img src=' + imgfile[i] + ' class="mainAdvertise"></div>';
                $(".mainAd .swiper-wrapper").append(ADChild);
            }

            $('.mainAd .swiper-slide').addClass("swiper-no-swiping");
            adtime = setInterval(showadv1, 180000);
            document.getElementById("advertiseimg").onclick = hideMainAd;
        }

        function hideMainAd() {
            $(".mainAd").css("display", "none");
            $(".mainAd").prev().css("display", "block");
            adtime = setInterval(ShowSwiper, 180000);
        }

        function ShowSwiper() {
            $(".mainAd").css("display", "block");
            $(".mainAd").prev().css("display", "none");
            clearInterval(adtime);
            var adswiper = new Swiper(".mainAd .swiper-container", {
                autoplay: 2500,
                effect: "fade",
                autoplayDisableOnInteraction: false,
                loop: true
            });
        }

        function showadv1() {
            $("#advertiseimg").css("display", "block");
            $(".mainAd").prev().css("display", "none");

            setVar("GD_A01_ShowingAD", "1");

            clearInterval(adtime);
            var adswiper = new Swiper(".mainAd .swiper-container", {
                autoplay: 2500,
                effect: "fade",
                autoplayDisableOnInteraction: false,
                loop: true
            });
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('x-main-header'),_vm._v(" "),_c('div',{staticClass:"bus_main"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"swiper-button-prev regularly_menu_left"},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/箭头-左.png')}})]),_vm._v(" "),_c('div',{staticClass:"swiper-button-next regularly_menu_right"},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/箭头-右.png')}})]),_vm._v(" "),_vm._m(1)]),_vm._v(" "),_c('div',{attrs:{"id":"goodcover"}}),_vm._v(" "),_vm._m(2),_vm._v(" "),_c('div',{staticClass:"mainHe"}),_vm._v(" "),_vm._m(3)],1)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"made_menu"},[_c('div',{staticClass:"swiper-container"},[_c('div',{staticClass:"swiper-wrapper"})])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"regularly_menu clear"},[_c('div',{staticClass:"regularly_menu_logo",attrs:{"data-bus":"RegularlyMenu"}}),_vm._v(" "),_c('div',{staticClass:"swiper-container"},[_c('div',{staticClass:"swiper-wrapper"})]),_vm._v(" "),_c('div',{staticClass:"regularly_menu_rail"})])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{"id":"blursearch"}},[_c('div',{attrs:{"id":"menu_blursearch"}},[_c('div',{staticClass:"blursearch_select_input"},[_c('input',{staticClass:"blursearch_input",attrs:{"type":"text","id":"searchText","placeholder":"请输入关键字","onclick":"ShowPinyinKB('-1','-1','searchText','')","onblur":"HideKB()"}})]),_vm._v(" "),_c('div',{staticClass:"blursearch_select_content",attrs:{"id":"autoScreening"}})])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"mainAd",attrs:{"id":"advertiseimg"}},[_c('div',{staticClass:"swiper-container"},[_c('div',{staticClass:"swiper-wrapper"})])])}]
__vue__options__._scopeId = "data-v-7ca3d610"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7ca3d610", __vue__options__)
  } else {
    hotAPI.reload("data-v-7ca3d610", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],350:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".welcome-all[data-v-05b757f0] {\r\n    position: absolute;\r\n    z-index: 1000;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.welcome-center[data-v-05b757f0] {\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  data: function data() {
    return {};
  },

  methods: {
    onStop: function onStop() {
      console.log(this.$refs.video1);
      $("#video2").stop();
      console.log($("#video2"));
    },
    onOver: function onOver() {
      exitScene("STA_CANCEL");
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"welcome-all"},[_c('video',{ref:"video1",staticClass:"welcome-center",attrs:{"id":"video2","autoplay":""},on:{"click":_vm.onStop,"ended":_vm.onOver}},[_c('source',{attrs:{"src":"img/welcome.mp4","type":"video/mp4"}})])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-05b757f0"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-05b757f0", __vue__options__)
  } else {
    hotAPI.reload("data-v-05b757f0", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],351:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".nice-select[data-v-62ca3388] {\r\n    width: 70%;\r\n}\r\n.picL[data-v-62ca3388]{\r\n    display: inline-block;\r\n\twidth: 45%;\r\n\theight: 60%;\r\n\tfloat: left;\r\n\tmargin: 0% 7%;\r\n}\r\n.picR[data-v-62ca3388]{\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\talign-items: center;\r\n\theight: 100%;\r\n\tjustify-content: center;\r\n    width:30%;\r\n\tfloat: right;\r\n}\r\n.photo_bg[data-v-62ca3388] {\r\n\twidth: 100%;\r\n\tflex-grow: 0;\r\n\theight: 33%;\r\n\tmargin-right: 2%;\r\n}\r\n.photo_bg img[data-v-62ca3388] {\r\n\twidth: 100%;\r\n\theight: 80%;\r\n\tdisplay: block;\r\n}\r\n.content_l[data-v-62ca3388] {\r\n    font-size: 1.8rem;\r\n}\r\n@media screen and (max-height: 850px) {\r\n    .photo_bg img[data-v-62ca3388] {\r\n\t    height: 75%;\r\n    }\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        var bPic04 = false;
        var bPicPath01 = "";
        var bPicPath02 = "";
        var bPicPath03 = "";
        var bPicPath04 = "";
        DataTools.get("GD_CodPid|C_A01_CameraPicFile|GD_A01_LC_SerialNo|GD_A01_DatePicForbak", function (data) {
            var strCodPid = data[0];
            bPicPath02 = data[1] + data[2] + data[3] + "02.jpg";
            bPicPath03 = data[1] + data[2] + data[3] + "03.jpg";
            bPicPath04 = data[1] + data[2] + data[3] + "04.jpg";
            if (strCodPid == "110019") {
                $("#picname02").html("港澳居民来往内地通行证正面（带人像）");
                $("#picname03").html("港澳居民来往内地通行证反面");
            } else if (strCodPid == "110021") {
                $("#picname02").html("台湾居民来往大陆通行证正面（带人像）");
                $("#picname03").html("台湾居民来往大陆通行证反面");
            } else if (strCodPid == "110037") {
                $("#picname02").html("外国人永久居留证正面（带人像）");
                $("#picname03").html("外国人永久居留证反面");
            } else if (strCodPid == "110025") {
                $("#picname02").html("外国护照基本信息页");
                $("#picname03").html("外国护照签注页");
                $("#picname04").html("外国护照入境时间页");
                $("#pic04").attr("src", bPicPath04);
                bPic04 = true;
            }
            $("#pic01").attr("src", bPicPath02);
            $("#pic02").attr("src", bPicPath02);
            $("#pic03").attr("src", bPicPath03);
        });

        DataTools.get("GD_A01_ManagerUser|GD_MaxTimeForFinger|GD_UsrNum", function (data) {
            var jsonArrayData = "";
            if (data[0] != undefined && data[0] != null) {
                jsonArrayData = JSON.parse(data[0]);
                var auditorId = new Array();
                var auditorName = new Array();
                if (jsonArrayData.length == 0) {
                    setVar("GD_ErrReason", "AuditorListEmpty");
                    exitScene("STA_AUDITOREMPTY");
                }
                for (var i = 0; i < jsonArrayData.length; i++) {
                    auditorId.push(jsonArrayData[i].userNum);
                    auditorName.push(jsonArrayData[i].userNum);
                }
                createSelect(auditorId, auditorName, "auditor");

                if (data[2] != "" && data[2] != null) {
                    $("#auditor").html(data[2]);
                    $("#auditor").attr('data-value', data[2]);
                    setVar("GD_UsrNum", data[2]);
                    setVar("GD_A01_NumUrCfg", data[2]);
                } else {
                    $("#auditor").html(auditorName[0]);
                    $("#auditor").attr('data-value', auditorId[0]);
                    setVar("GD_UsrNum", auditorName[0]);
                    setVar("GD_A01_NumUrCfg", auditorName[0]);
                }
            } else {
                setVar("GD_ErrReason", "AuditorListEmpty");
                exitScene("STA_AUDITOREMPTY");
            }
            $("#AuditTips").html("1.请核实该笔业务是否为客户本人办理");

            if (data[1] == "10") {
                $("#ErrorInfo").html("请选择用户后<br>进行指纹确认");
            } else {
                $("#ErrorInfo").html("请重按指纹<br>剩余次数：" + data[1] + "次");
                $("#ErrorInfo").css("color", "red");
            }

            var nodes = document.querySelectorAll('[name="nice-select"] li');
            for (var i = 0; i < nodes.length; i++) {
                nodes[i].onclick = onNiceSelectLiClick;
            }
            function onNiceSelectLiClick(e) {
                var val = $(this).attr("data-value");
                setVar("GD_UsrNum", val);
                setVar("GD_A01_NumUrCfg", val);
                e.stopPropagation();
            }
        });
        document.getElementById("btn_back").onclick = onBack;
        function onBack(e) {
            exitScene("STA_RESIGN");
        }
        document.getElementById("pic02").onclick = onPic02;
        function onPic02(e) {
            $("#pic01").attr("src", bPicPath02);
        }
        document.getElementById("pic03").onclick = onPic03;
        function onPic03(e) {
            $("#pic01").attr("src", bPicPath03);
        }
        document.getElementById("pic04").onclick = onPic04;
        function onPic04(e) {
            if (bPic04) {
                $("#pic01").attr("src", bPicPath04);
            }
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('x-header'),_vm._v(" "),_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/请联系审核员输入指纹编号.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}}),_vm._v(" "),_vm._m(0)],1)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('main',{staticClass:"main"},[_c('div',{staticClass:"content_c"},[_c('div',{staticClass:"content_l"},[_c('div',{staticClass:"main_conter"},[_c('div',{staticClass:"picL"},[_c('img',{staticStyle:{"max-height":"100%","max-width":"100%"},attrs:{"id":"pic01"}})]),_vm._v(" "),_c('div',{staticClass:"picR"},[_c('div',{staticClass:"photo_bg"},[_c('img',{attrs:{"id":"pic02"}}),_vm._v(" "),_c('span',{attrs:{"value":"02","id":"picname02"}})]),_vm._v(" "),_c('div',{staticClass:"photo_bg"},[_c('img',{attrs:{"id":"pic03"}}),_vm._v(" "),_c('span',{attrs:{"value":"03","id":"picname03"}})]),_vm._v(" "),_c('div',{staticClass:"photo_bg"},[_c('img',{attrs:{"id":"pic04"}}),_vm._v(" "),_c('span',{attrs:{"value":"04","id":"picname04"}})])])]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn surebtn",staticStyle:{"display":"none"},attrs:{"id":"btn_back"}},[_vm._v("重新拍摄")])])]),_vm._v(" "),_c('div',{staticClass:"content_r"},[_c('p',{staticClass:"r_title"},[_vm._v("工作人员审核")]),_vm._v(" "),_c('div',{staticClass:"r_content"},[_c('div',{staticClass:"nice-select",attrs:{"name":"nice-select"}},[_c('p',{attrs:{"id":"auditor","type":"text","readonly":""}})]),_vm._v(" "),_c('div',{staticClass:"r_content_div1"},[_c('img',{attrs:{"id":"IMG","src":"img/指纹.gif"}})]),_vm._v(" "),_c('div',{staticClass:"r_content_div2"},[_c('p',{attrs:{"id":"AuditTips"}})]),_vm._v(" "),_c('br'),_vm._v(" "),_c('div',{staticClass:"r_content_div3"},[_c('p',{attrs:{"id":"ErrorInfo"}})])])])])])}]
__vue__options__._scopeId = "data-v-62ca3388"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-62ca3388", __vue__options__)
  } else {
    hotAPI.reload("data-v-62ca3388", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],352:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert("img[data-v-2d2404ae]{\r\n    display: block;\r\n    margin: auto;\r\n    width: 20%;\r\n}")
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('div',{staticClass:"modal_tradingBox",attrs:{"id":"modal_tradingBox"}},[_c('div',[_c('img',{attrs:{"src":_vm.$root.imgPath('img/loading.gif')}}),_vm._v("正在读取卡片信息，请稍候...")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-2d2404ae"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2d2404ae", __vue__options__)
  } else {
    hotAPI.reload("data-v-2d2404ae", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],353:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        var strMachineType = "";
        DataTools.get("GD_A01_Cust_MediaTypeMask|C_A01_Dev_MachineType", function (data) {
            var strMask = data[0];
            strMachineType = data[1];

            if (strMask == "") {
                if (strMachineType == "3") strMask = "1111";else strMask = "1110";
            }

            if (strMask.replace(/0/g, "").length == 3) {
                $(".MediaKind").css("width", "96%");
                $(".CardMedia").css("margin-left", "4%");
            }
            if (strMask.substr(0, 1) == "1") {
                $("#MSCard").css("display", "block");
            }
            if (strMask.substr(1, 1) == "1") {
                $("#ChipCard").css("display", "block");
            }
            if (strMask.substr(2, 1) == "1") {
                $("#PICC").css("display", "block");
            }
            if (strMask.substr(3, 1) == "1") {
                $("#Passbook").css("display", "block");
            }
        });
        document.getElementById("MSCard").onclick = onCardMedia;
        document.getElementById("ChipCard").onclick = onCardMedia;
        document.getElementById("PICC").onclick = onCardMedia;
        document.getElementById("Passbook").onclick = onCardMedia;
        function onCardMedia() {
            $(".CardMedia").removeClass("on");
            $(this).addClass("on");
            var MediaType = $(this).find('p').attr('value');
            setVar("GD_A01_Cust_MediaTypeMask", "");
            setVar("GD_A01_Cust_MediaType", MediaType);
            setVar("GD_IsInsertPIC", "0");
            switch (MediaType) {
                case "1":
                    exitScene("STA_MSCARD");
                    break;
                case "2":
                    exitScene("STA_CHIPCARD");
                    break;
                case "3":
                    setVar("GD_IsInsertPIC", "1");
                    exitScene("STA_PICCARD");
                    break;
                case "4":
                    setVar("GD_A01_Cust_MediaType", "5");
                    exitScene("STA_PASSBOOK");

                    break;
                default:
                    exitScene("STA_FAIL");
                    break;
            }
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("请选择您持有的介质种类")]),_vm._v(" "),_c('div',{staticClass:"MediaKind"},[_c('div',{staticClass:"CardMedia",staticStyle:{"display":"none"},attrs:{"id":"MSCard"}},[_c('img',{attrs:{"src":"img/customer/MSCard.png"}}),_vm._v(" "),_c('p',{attrs:{"value":"1"}},[_vm._v("磁条卡")])]),_vm._v(" "),_c('div',{staticClass:"CardMedia",staticStyle:{"display":"none"},attrs:{"id":"ChipCard"}},[_c('img',{attrs:{"src":"img/customer/ICCard.png"}}),_vm._v(" "),_c('p',{attrs:{"value":"2"}},[_vm._v("芯片卡")])]),_vm._v(" "),_c('div',{staticClass:"CardMedia",staticStyle:{"display":"none"},attrs:{"id":"Passbook"}},[_c('img',{attrs:{"src":"img/customer/passbook.png"}}),_vm._v(" "),_c('p',{attrs:{"value":"4"}},[_vm._v("存折")])]),_vm._v(" "),_c('div',{staticClass:"CardMedia",staticStyle:{"display":"none"},attrs:{"id":"PICC"}},[_c('img',{attrs:{"src":"img/customer/PICCard.png"}}),_vm._v(" "),_c('p',{attrs:{"value":"3"}},[_vm._v("非接触IC卡")])])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-55a37934", __vue__options__)
  } else {
    hotAPI.reload("data-v-55a37934", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],354:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert("img[data-v-0cc33ea7]{\r\n    display: block;\r\n    margin: auto;\r\n    width: 20%;\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        DataTools.get("RP_DateCertBgn|C_A01_BIZPRM_00104|GD_A01_Trans_IsInsertCard|GD_A01_Status_HCAM|GD_CodPid|GD_A01_NeedMoreIDInfo|C_A01_Dict_00000005|RP_Gender", function (data) {
            var RP_DateCertBgn = data[0];
            var C_A01_BIZPRM_00104 = data[1];
            var GD_A01_Trans_IsInsertCard = data[2];
            var GD_A01_Status_HCAM = data[3];
            var GD_CodPid = data[4];
            var GD_A01_NeedMoreIDInfo = data[5];
            switch (GD_CodPid) {
                case "110019":
                    setVar("GD_CodCertOrg", "公安部");
                    break;
                case "110021":
                    setVar("GD_CodCertOrg", "公安部");
                    break;
                case "110037":
                    setVar("GD_CodCertOrg", "公安部");
                    break;
                default:
                    break;
            }

            var jsSex = JSON.parse(data[6]);
            for (var i = 0; i < jsSex.length; i++) {
                if (jsSex[i].NUM_ITEM_DIC == data[7]) {
                    setVar("GD_Gender", jsSex[i].VLU_ITEM_DIC);
                }
            }
            if (GD_A01_Trans_IsInsertCard == "") {
                setVar("GD_Address", "");
                setVar("GD_Birthday", "");
                if (GD_CodPid != "110037") {
                    setVar("GD_A01_IDCardIsIC", "0");
                    exitScene("STA_FILLINFO");
                } else {
                    setVar("GD_A01_IDCardIsIC", "1");
                    exitScene("STA_CONTINUE");
                }
            } else {
                setVar("GD_DateCertBgn", "");
                setVar("GD_DateCertEnd", "");
                setVar("GD_Birthday", "");
                if (GD_CodPid == "110037") {
                    if (RP_DateCertBgn.length != 8) {
                        setVar("GD_ErrReason", "DateErrToMod");
                        exitScene("STA_FAIL");
                    } else {
                        if (C_A01_BIZPRM_00104 == "") {
                            setVar("GD_A01_IDCardIsIC", "1");
                            exitScene("STA_READCARD");
                        } else {
                            if (parseInt(RP_DateCertBgn) < parseInt(C_A01_BIZPRM_00104)) {
                                if (GD_A01_Status_HCAM == "HEALTHY") {
                                    setVar("GD_A01_IDCardIsIC", "0");
                                    setVar("GD_A01_IsDealNotIDCardInfo", "1");
                                    exitScene("STA_READOK");
                                } else {
                                    setVar("GD_ErrReason", "NotSupportNICPRCard");
                                    exitScene("STA_FAIL");
                                }
                            } else {
                                setVar("GD_A01_IDCardIsIC", "1");
                                exitScene("STA_READCARD");
                            }
                        }
                    }
                } else {
                    setVar("GD_A01_IsDealNotIDCardInfo", "1");
                    exitScene("STA_CONTINUE");
                }
            }
        });
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('div',{staticClass:"modal_tradingBox",attrs:{"id":"modal_tradingBox"}},[_c('div',[_c('img',{attrs:{"src":_vm.$root.imgPath('img/loading.gif')}}),_vm._v("交易正在进行，请稍候...")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-0cc33ea7"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0cc33ea7", __vue__options__)
  } else {
    hotAPI.reload("data-v-0cc33ea7", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],355:[function(require,module,exports){
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {

        this.$root.$on('beforeQuit', onBeforeQuit);
        function onBeforeQuit() {
            exitScene("STA_BEFOREQUIT");
        }

        this.$root.$on('cancelQuit', onCancelQuit);
        function onCancelQuit() {
            exitScene("STA_CANCELQUIT");
        }

        DataTools.get("C_A01_Dev_MachineType|GD_CodPid", function (data) {
            var strMachineType = data[0];
            if (strMachineType == "1" || strMachineType == "2") {
                $("#EsignTittle").html("请在外接电子签名板上签字");
                $("#cwsound").html('<EMBED name="ViewSound" src="wav/请到外接签字版签字，签字后点击确认键.wav" Loop=false AUTOSTART=true Hidden=true MASTERSOUND></EMBED>');
            } else {
                $("#EsignTittle").html("请在签名区域内签字");
                $("#cwsound").html('<EMBED name="ViewSound" src="wav/请签字，签字后点击确认键.wav" Loop=false AUTOSTART=true Hidden=true MASTERSOUND></EMBED>');
            }
        });
        document.getElementById("BtnSkip22").onclick = onReSign22;
        function onReSign22() {
            exitScene("STA_CLEAR");
        }
        document.getElementById("BtnSure22").onclick = onSure22;
        function onSure22() {
            pageLog("Sign Confirm.");
            document.getElementById("BtnSure22").setAttribute("disabled", "disabled");
            exitScene("STA_CONTINUE");
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title",attrs:{"id":"EsignTittle"}}),_vm._v(" "),_c('div',{staticStyle:{"width":"100%","height":"60rem"}}),_vm._v(" "),_c('p',{staticClass:"center_title"}),_vm._v(" "),_c('div',{staticStyle:{"display":"none"},attrs:{"id":"cwsound"}}),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"BtnSkip22"}},[_vm._v("重新签名")]),_vm._v(" "),_c('button',{staticClass:"btn",attrs:{"id":"BtnSure22"}},[_vm._v("确   定")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-94187662", __vue__options__)
  } else {
    hotAPI.reload("data-v-94187662", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],356:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
		value: true
});
exports.default = {
		mounted: function mounted() {
				document.getElementById("btn_sure").onclick = onSure;
				function onSure(e) {
						onContinue();
				}
		}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"time",attrs:{"id":"CountDown"}})])]),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"ShowReason"}},[_vm._v("正在复位硬件模块，请稍候...")]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn surebtn disp_none",attrs:{"id":"btn_sure"}},[_vm._v("确   定")])]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"Msg1"}})])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-244028ca", __vue__options__)
  } else {
    hotAPI.reload("data-v-244028ca", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],357:[function(require,module,exports){
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    created: function created() {
        var vm = this;

        this.$root.$once('CW_FaceCam_MsgReceived', onMsgReceived);
        function onMsgReceived(strMsg) {
            vm.$root.$off('CW_FaceCam_MsgReceived');
            var jsonobject = $.parseJSON(strMsg);
            var strMsg = "";
            if (jsonobject != "null") {
                strMsg = LivesInfoSucc(vm.C_FileDIR, vm.GD_A01_LC_SerialNo, vm.GD_A01_UpUfilePram);
            } else {
                strMsg = LivesInfoErr(jsonobject.Result);
            }
            vm.CW_Succ(strMsg);
        };

        this.$root.$on('beforeQuit', onBeforeQuit);
        function onBeforeQuit() {
            CW_Destroy();
        };

        this.$root.$on('cancelQuit', onCancelQuit);
        function onCancelQuit() {
            var strMsg = CW_Init();
            if (strMsg != "") {
                vm.CW_Succ(strMsg);
            }
        };
    },
    destroyed: function destroyed() {
        this.$root.$off('CW_FaceCam_MsgReceived');
        this.$root.$off('beforeQuit');
        this.$root.$off('cancelQuit');
    },
    data: function data() {
        return {
            C_FileDIR: "",
            GD_A01_LC_SerialNo: "",
            GD_A01_UpUfilePram: ""
        };
    },

    methods: {
        CW_Succ: function CW_Succ(strMsg) {
            var arrstr = strMsg.split(",");
            if (arrstr[1] == "STA_CONTINUE") {
                setVar("GD_A01_UpUfilePram", arrstr[0]);
            }
            exitScene(arrstr[1]);
        }
    },
    mounted: function mounted() {
        var vm = this;
        DataTools.get("C_A01_CameraPicFile|GD_A01_LC_SerialNo|GD_A01_UpUfilePram", function (data) {
            vm.C_FileDIR = data[0];
            vm.GD_A01_LC_SerialNo = data[1];
            vm.GD_A01_UpUfilePram = data[2];
            var strMsg = CW_Init();
            if (strMsg != "") {
                vm.CW_Succ(strMsg);
            }
        });

        var t = 17;
        var timerFace = setInterval(function () {
            if (t < 0) {
                clearInterval(timerFace);
                CW_Destroy();
                return;
            } else {
                t = t - 1;
            }
        }, 1000);
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("人脸比对拍照")]),_vm._v(" "),_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/请对准屏幕上的识别框.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}})],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1db13325", __vue__options__)
  } else {
    hotAPI.reload("data-v-1db13325", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],358:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".ul_Result_scroll[data-v-50e8e432]{\r\n    margin:2% 38%;\r\n    width: 60%;\r\n}\r\n .ReceiptQRImage[data-v-50e8e432] {\r\n\tposition:absolute;\r\n\tfloat:left;\r\n\tbottom:45%;\r\n\tleft:3%;\r\n\twidth:360px;\r\n\theight:360px\r\n}\r\n .ReceiptQRImage img[data-v-50e8e432]{\r\n\t\twidth:100%;\r\n}\r\n.QRCode[data-v-50e8e432] {\r\n\tposition:absolute;\r\n\tfloat:left;\r\n\tbottom:0%;        \r\n}  \r\n@media screen and (max-height: 850px) {\r\n     .ReceiptQRImage[data-v-50e8e432] {\r\n        width: 310px;\r\n        height: 310px;\r\n        bottom:43%;\r\n     }\r\n    .QRCode img[data-v-50e8e432]{\r\n       max-width: 80%;       \r\n    }  \r\n    .ul_Result_scroll[data-v-50e8e432]{\r\n        width: 60%;\r\n        max-height: 480px;\r\n        font-size: 2.6rem;\r\n    }       \r\n}\r\n\r\n@media screen and (min-width: 1300px) and  (max-width:1380px) {  \r\n    .ul_Result_scroll[data-v-50e8e432]{\r\n        width: 60%;\r\n        height: 65%;\r\n        font-size: 2.6rem;\r\n    }       \r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        DataTools.get("GD_A01_Cust_RQImgName|GD_A01_ForceShowResultHtmlValue", function (data) {
            $("#IMG").attr("src", data[0]);
            $("#TranList").html(data[1].replace(/\@!@/g, "="));
        });

        document.getElementById("btn_sure").onclick = onSure;
        function onSure(e) {
            onContinue();
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title",attrs:{"id":"title"}},[_vm._v("交易已结束，请仔细核对交易结果")]),_vm._v(" "),_c('div',{staticClass:"ReceiptQRImage",attrs:{"id":"QRIMG"}},[_c('img',{attrs:{"id":"IMG","src":""}})]),_vm._v(" "),_c('div',{staticClass:"QRCode",attrs:{"id":"QRGIF"}},[_c('img',{attrs:{"src":"img/二维码动画.gif"}})]),_vm._v(" "),_c('ul',{staticClass:"ul_Result_scroll",attrs:{"id":"TranList"}}),_vm._v(" "),_c('p',{staticClass:"tips",attrs:{"id":"tip"}},[_vm._v("对不起，暂无法提供回单打印服务，请仔细核对交易结果")]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"btn_sure"}},[_vm._v("确   定")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-50e8e432"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-50e8e432", __vue__options__)
  } else {
    hotAPI.reload("data-v-50e8e432", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],359:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	mounted: function mounted() {
		document.getElementById("btn_back1").onclick = function () {
			setVar("GD_A01_IDCardIsIC", "0");
			exitScene("STA_CONTINUE");
		};

		document.getElementById("btn_sure1").onclick = function () {
			setVar("GD_A01_IDCardIsIC", "1");
			exitScene("STA_CONTINUE");
		};
	}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticStyle:{"text-align":"center","font-size":"2.7rem","top":"30%","position":"relative"}},[_vm._v("是否为新款外国人永久居留身份证？")]),_vm._v(" "),_c('div',{staticClass:"modal_btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"btn_back1"}},[_vm._v("否")]),_vm._v(" "),_c('button',{staticClass:"btn",attrs:{"id":"btn_sure1"}},[_vm._v("是")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-32879e46", __vue__options__)
  } else {
    hotAPI.reload("data-v-32879e46", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],360:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".x-hsgif[data-v-0dc24dda]{\r\n    width: 50%;\r\n    margin: 0% auto;\r\n}\r\n.x-hsgif img[data-v-0dc24dda]{\r\n    width: 100%;\r\n}\r\n.title[data-v-0dc24dda]:before {\r\n    width: 150px;\r\n}\r\n.title[data-v-0dc24dda]:after {\r\n    width: 150px;\r\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _vuex = require('vuex');

exports.default = {
    methods: _extends({
        onSure: function onSure() {
            this.onContinue();
        }
    }, (0, _vuex.mapActions)(['initPool', 'fetch', 'onContinue'])),
    mounted: function mounted() {}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("打印成功，请取走您的回单")]),_vm._v(" "),_c('div',{staticClass:"x-hsgif"},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/'+_vm.$root.getImgPath()+'PrintA4.gif')}})]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_sure"},on:{"click":_vm.onSure}},[_vm._v("确   认")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-0dc24dda"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0dc24dda", __vue__options__)
  } else {
    hotAPI.reload("data-v-0dc24dda", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300,"vuex":"vuex"}],361:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".picL[data-v-f6c1e2b2]{\r\n    display: inline-block;\r\n\twidth: 45%;\r\n\theight: 60%;\r\n\tfloat: left;\r\n\tmargin: 0% 7%;\r\n}\r\n.picR[data-v-f6c1e2b2]{\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\talign-items: center;\r\n\theight: 100%;\r\n\tjustify-content: center;\r\n\twidth:30%;\r\n\tfloat: right;\r\n}\r\n.photo_bg[data-v-f6c1e2b2] {\r\n\twidth: 100%;\r\n\tflex-grow: 0;\r\n\theight: 33%;\r\n\tmargin-right: 2%;\r\n}\r\n.photo_bg img[data-v-f6c1e2b2] {\r\n\twidth: 100%;\r\n\theight: 80%;\r\n\tdisplay: block;\r\n}\r\n@media screen and (max-height: 850px) {\r\n    .photo_bg img[data-v-f6c1e2b2] {\r\n\t    height: 75%;\r\n    }\r\n}\r\n\r\n@media screen and (max-height: 780px) {\r\n    .picL[data-v-f6c1e2b2]{\r\n\t    margin: 2% 7%;\r\n    }\r\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	created: function created() {
		this.$root.$on('beforeQuit', onBeforeQuit);
		function onBeforeQuit() {
			exitScene("STA_BEFOREQUIT");
		};

		this.$root.$on('cancelQuit', onCancelQuit);
		function onCancelQuit() {
			exitScene("STA_CANCELQUIT");
		};
	},
	destroyed: function destroyed() {
		this.$root.$off('beforeQuit');
		this.$root.$off('cancelQuit');
	},
	mounted: function mounted() {
		var bPic04 = false;
		DataTools.get("GD_CodPid", function (data) {
			var strCodPid = data.toString();
			if (strCodPid == "110019") {
				$("#picname02").html("港澳居民来往内地通行证正面（带人像）");
				$("#picname03").html("港澳居民来往内地通行证反面");
			} else if (strCodPid == "110021") {
				$("#picname02").html("台湾居民来往大陆通行证正面（带人像）");
				$("#picname03").html("台湾居民来往大陆通行证反面");
			} else if (strCodPid == "110037") {
				$("#picname02").html("外国人永久居留证正面（带人像）");
				$("#picname03").html("外国人永久居留证反面");
			} else if (strCodPid == "110025") {
				$("#picname02").html("外国护照基本信息页");
				$("#picname03").html("外国护照签注页");
				$("#picname04").html("外国护照入境时间页");
				bPic04 = true;
			}
		});
		document.getElementById("BtnSure").onclick = onSure;
		function onSure(e) {
			onContinue();
		}
		document.getElementById("Pictake").onclick = onPictake;
		function onPictake(e) {
			exitScene("STA_NEXT");
		}
		document.getElementById("Retake").onclick = onRetake;
		function onRetake(e) {
			exitScene("STA_RETAKE");
		}
		document.getElementById("pic02").onclick = onPic02;
		function onPic02(e) {
			exitScene("STA_PIC02");
		}
		document.getElementById("pic03").onclick = onPic03;
		function onPic03(e) {
			exitScene("STA_PIC03");
		}
		document.getElementById("pic04").onclick = onPic04;
		function onPic04(e) {
			if (bPic04) {
				exitScene("STA_PIC04");
			}
		}
	}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('div',{staticClass:"main_conter"},[_c('div',{staticClass:"picL"},[_c('img',{staticStyle:{"max-height":"100%","max-width":"100%"},attrs:{"id":"pic01"}})]),_vm._v(" "),_c('div',{staticClass:"picR"},[_c('div',{staticClass:"photo_bg"},[_c('img',{attrs:{"id":"pic02"}}),_vm._v(" "),_c('span',{staticStyle:{"font-size":"large"},attrs:{"value":"02","id":"picname02"}})]),_vm._v(" "),_c('div',{staticClass:"photo_bg"},[_c('img',{attrs:{"id":"pic03"}}),_vm._v(" "),_c('span',{staticStyle:{"font-size":"large"},attrs:{"value":"03","id":"picname03"}})]),_vm._v(" "),_c('div',{staticClass:"photo_bg"},[_c('img',{attrs:{"id":"pic04"}}),_vm._v(" "),_c('span',{staticStyle:{"font-size":"large"},attrs:{"value":"04","id":"picname04"}})])])]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",staticStyle:{"display":"none"},attrs:{"id":"Retake"}},[_vm._v("重摄")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",staticStyle:{"display":"inline"},attrs:{"id":"Pictake"}},[_vm._v("拍摄")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"BtnSure","disabled":"true"}},[_vm._v("下一步")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-f6c1e2b2"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-f6c1e2b2", __vue__options__)
  } else {
    hotAPI.reload("data-v-f6c1e2b2", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],362:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert("img[data-v-bfaacc24]{\r\n    display: block;\r\n    margin: auto;\r\n    width: 20%;\r\n}")
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('div',{staticClass:"modal_tradingBox",attrs:{"id":"modal_tradingBox"}},[_c('div',[_c('img',{attrs:{"src":_vm.$root.imgPath('img/loading.gif')}}),_vm._v("正在读取证件信息，请稍候...")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-bfaacc24"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-bfaacc24", __vue__options__)
  } else {
    hotAPI.reload("data-v-bfaacc24", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],363:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"time",attrs:{"id":"CountDown"}})])]),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"Main1"}})])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-15cba732", __vue__options__)
  } else {
    hotAPI.reload("data-v-15cba732", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],364:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	mounted: function mounted() {
		var intTime = $("#Dev_CountDown").html();
		if (intTime <= 0) {
			intTime = 300;
		}
		$("#Dev_CountDown").html(intTime);
		function setTimeHtml() {
			intTime -= 1;
			if (intTime <= 0) {
				clearInterval(interval);
				exitScene("STA_CONTINUE");
			}
			$("#Dev_CountDown").html(intTime);
		}
		var interval = setInterval(setTimeHtml, 1000);
	}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"time",attrs:{"id":"Dev_CountDown"}})])]),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title"},[_vm._v("对不起，设备初始化失败！")])])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-82cd7320", __vue__options__)
  } else {
    hotAPI.reload("data-v-82cd7320", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],365:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        DataTools.get("GD_Account1", function (data) {
            $("#account").val(data);
        });
        document.getElementById("account").oninput = onAccount;
        function onAccount() {
            if ($("#account").val().length == 19) {
                onInputOK();
            }
        }

        document.getElementById("account").onclick = onAccount1;
        function onAccount1() {
            ShowNumberKB('-2', '-2', 'account', '输入待挂失账号：');
            exitScene("STA_CLEARPIN");
        }
        document.getElementById("account").onkeypress = onAccount2;
        function onAccount2() {
            if (window.event.key == "Enter" && $("#account").val().length >= 12) {
                onInputOK();
            }
        }
        function onInputOK() {
            HideKB();
            setVar("GD_Account1", $("#account").val());
            exitScene("STA_ACCINPUTTED");
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/请您在输入密码前确认周边环境是否安全.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}}),_vm._v(" "),_c('div',[_c('p',{staticClass:"title"},[_vm._v("请输入您的账号和密码")]),_vm._v(" "),_c('div',{staticClass:"Pin_img"},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/'+_vm.$root.getImgPath()+'InputPin.gif')}})]),_vm._v(" "),_c('div',{staticClass:"Pin_input"},[_c('p',[_c('i',[_vm._v("账号：")]),_c('input',{staticClass:"input_Pin",attrs:{"type":"text","id":"account","maxlength":"19","onblur":"onInputOK()"}})]),_vm._v(" "),_c('p',[_c('i',[_vm._v("密码：")]),_c('input',{staticClass:"input_Pin",attrs:{"type":"password","id":"password","maxlength":"6","readonly":""}})]),_vm._v(" "),_c('div',{staticClass:"Pin_tips"},[_c('p',[_c('i',{staticStyle:{"color":"red"}},[_vm._v("尊敬的客户：")])]),_vm._v(" "),_c('p',[_vm._v("1.请注意保护您的密码,防止被偷窥,不要向任何人透露;")]),_vm._v(" "),_c('p',[_vm._v("2.警惕插卡口,密码键盘及机身周围是否安装可疑异常装置;")]),_vm._v(" "),_c('p',[_vm._v("3.为保障您的资金安全,谨防利用短信、电话等方式进行的转账诈骗等违法行为,如遇特殊情况请拨打95599或110。")])])])])],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2235bc48", __vue__options__)
  } else {
    hotAPI.reload("data-v-2235bc48", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],366:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        DataTools.get("GD_Account1", function (data) {
            $("#account").val(data);
        });
        document.getElementById("account").oninput = onAccount;
        function onAccount() {
            if ($("#account").val().length == 19) {
                onInputOK();
            }
        }
        document.getElementById("account").onclick = onAccount1;
        function onAccount1() {
            ShowNumberKB('-2', '-2', 'account', '输入待挂失账号：');
            exitScene("STA_CLEARPIN");
        };
        document.getElementById("account").onkeypress = onAccount2;
        function onAccount2() {
            if (window.event.key == "Enter" && $("#account").val().length >= 12) {
                onInputOK();
            }
        }
        function onInputOK() {
            HideKB();
            setVar("GD_Account1", $("#account").val());
            exitScene("STA_ACCINPUTTED");
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/请您在输入密码前确认周边环境是否安全.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}}),_vm._v(" "),_c('div',[_c('p',{staticClass:"title"},[_vm._v("请输入您的账号和密码")]),_vm._v(" "),_c('div',{staticClass:"Pin_img"},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/'+_vm.$root.getImgPath()+'InputPin.gif')}})]),_vm._v(" "),_c('div',{staticClass:"Pin_input"},[_c('p',[_c('i',[_vm._v("账号：")]),_c('input',{staticClass:"input_Pin",attrs:{"type":"text","id":"account","maxlength":"19","onblur":"onInputOK()"}})]),_vm._v(" "),_c('p',[_c('i',[_vm._v("密码：")]),_c('input',{staticClass:"input_Pin",attrs:{"type":"password","id":"password","maxlength":"6","readonly":""}})]),_vm._v(" "),_c('div',{staticClass:"Pin_tips"},[_c('p',[_c('i',{staticStyle:{"color":"red"}},[_vm._v("尊敬的客户：")])]),_vm._v(" "),_c('p',[_vm._v("1.请注意保护您的密码,防止被偷窥,不要向任何人透露;")]),_vm._v(" "),_c('p',[_vm._v("2.警惕插卡口,密码键盘及机身周围是否安装可疑异常装置;")]),_vm._v(" "),_c('p',[_vm._v("3.为保障您的资金安全,谨防利用短信、电话等方式进行的转账诈骗等违法行为,如遇特殊情况请拨打95599或110。")])])])])],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-356fd114", __vue__options__)
  } else {
    hotAPI.reload("data-v-356fd114", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],367:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".x-hsgif[data-v-9a195638]{\r\n    width: 50%;\r\n    margin: 0% auto;\r\n}\r\n.x-hsgif img[data-v-9a195638]{\r\n    width: 100%;\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        var vm = this;
        DataTools.get("GD_A01_Cust_MediaType|C_A01_Dev_MachineType", function (data) {
            switch (data[0]) {
                case "1":
                    if (data[1] == "1" || data[1] == "5") {
                        $(".title").html("请刷您的磁条卡");
                        $("#bg").empty();
                        $("#bg").html('<EMBED id="sound" name="ViewSound" SRC="wav/请刷您的银行卡.wav" Loop=false AUTOSTART=true Hidden=true MASTERSOUND></EMBED>');
                    } else {
                        $(".title").html("请插入您的银行卡");
                        $("#bg").empty();
                        $("#bg").html('<EMBED id="sound" name="ViewSound" SRC="wav/请插入您的银行卡.wav" Loop=false AUTOSTART=true Hidden=true MASTERSOUND></EMBED>');
                    }
                    $(".x-hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "InsertMSCard.gif"));

                    break;
                case "2":
                    $(".title").html("请插入您的银行卡");
                    $(".x-hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "InsertICCard.gif"));
                    $("#bg").empty();
                    $("#bg").html('<EMBED id="sound" name="ViewSound" SRC="wav/请插入您的银行卡.wav" Loop=false AUTOSTART=true Hidden=true MASTERSOUND></EMBED>');
                    break;
                case "3":
                    $(".title").html("请将您的银行卡放置于识别区");
                    $(".x-hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "InsertPICCard.gif"));
                    $("#bg").empty();
                    $("#bg").html('<EMBED id="sound" name="ViewSound" SRC="wav/请将您的银行卡放置于识别区.wav" Loop=false AUTOSTART=true Hidden=true MASTERSOUND></EMBED>');
                    break;
                case "4":
                    $(".title").html("请刷您的存折");
                    $(".x-hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "InsertPassbook.gif"));
                    $("#bg").empty();
                    $("#bg").html('<EMBED id="sound" name="ViewSound" SRC="wav/请刷您的存折.wav" Loop=false AUTOSTART=true Hidden=true MASTERSOUND></EMBED>');
                    break;
                case "5":
                    $(".title").html("请插入您的存折");
                    $(".x-hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "InsertPassbook.gif"));
                    $("#bg").empty();
                    $("#bg").html('<EMBED id="sound" name="ViewSound" SRC="wav/请插入您的存折.wav" Loop=false AUTOSTART=true Hidden=true MASTERSOUND></EMBED>');
                    break;
                default:
                    $(".title").html("请插入您的银行卡");
                    $(".x-hsgif img").attr("src", vm.$root.imgPath("img/InsertICCard.gif"));
                    $("#bg").empty();
                    $("#bg").html('<EMBED id="sound" name="ViewSound" SRC="wav/请插入您的银行卡.wav" Loop=false AUTOSTART=true Hidden=true MASTERSOUND></EMBED>');
                    break;
            }
        });
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"}),_vm._v(" "),_c('div',{staticClass:"x-hsgif"},[_c('img',{attrs:{"src":""}})]),_vm._v(" "),_c('div',{staticStyle:{"display":"none"},attrs:{"id":"bg"}})])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-9a195638"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-9a195638", __vue__options__)
  } else {
    hotAPI.reload("data-v-9a195638", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],368:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".x-hsgif[data-v-a8e21e04] {\r\n  width: 50%;\r\n  margin: 0% 20%;\r\n}\r\n.x-hsgif img[data-v-a8e21e04] {\r\n  width: 100%;\r\n}\r\n.MediaKind[data-v-a8e21e04] {\r\n  position: absolute;\r\n  right: 7.5%;\r\n  width: 20%;\r\n  top: 20%;\r\n  height: 70%;\r\n}\r\n\r\n\r\n.CardMedia[data-v-a8e21e04] {\r\n  height: 250px;\r\n}\r\n@media screen and (max-height: 780px) {\r\n  .MediaKind[data-v-a8e21e04] {\r\n    top: 10%;\r\n  }\r\n\r\n  .CardMedia[data-v-a8e21e04] {\r\n  height: 180px;\r\n}\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        var vm = this;
        DataTools.get("GD_A01_Cust_MediaTypeMask|C_A01_Dev_MachineType", function (data) {
            var strMask = data[0];
            var strMachineType = data[1];

            if (strMask != "") {
                if (strMask.substr(2, 1) == "1") {
                    $("#PICC").css("display", "inline-block");
                }

                if (strMask.substr(3, 1) == "1") {
                    $("#Passbook").css("display", "inline-block");
                }
            }
            setVar("GD_A01_Cust_MediaType", "2");
        });
        document.getElementById("Passbook").onclick = onCardMedia;
        document.getElementById("PICC").onclick = onCardMedia;
        function onCardMedia() {
            $(".CardMedia").removeClass("on");
            $(this).addClass("on");
            var MediaType = $(this).find('p').attr('value');
            setVar("GD_A01_Cust_MediaType", MediaType);
            setVar("GD_IsInsertPIC", "0");
            switch (MediaType) {
                case "3":
                    setVar("GD_IsInsertPIC", "1");
                    exitScene("STA_PICCARD");
                    break;
                case "5":
                    exitScene("STA_PASSBOOK");
                    break;
                default:
                    exitScene("STA_FAIL");
                    break;
            }
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("请插入您的银行卡")]),_vm._v(" "),_c('div',{staticClass:"x-hsgif"},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/'+_vm.$root.getImgPath()+'InsertICCard.gif')}})]),_vm._v(" "),_c('div',{staticClass:"MediaKind"},[_c('div',{staticClass:"CardMedia",staticStyle:{"display":"none"},attrs:{"id":"Passbook"}},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/customer/passbook.png')}}),_vm._v(" "),_c('p',{attrs:{"value":"5"}},[_vm._v("存折")])]),_vm._v(" "),_c('div',{staticClass:"CardMedia",staticStyle:{"display":"none"},attrs:{"id":"PICC"}},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/customer/PICCard.png')}}),_vm._v(" "),_c('p',{attrs:{"value":"3"}},[_vm._v("非接触IC卡")])])]),_vm._v(" "),_c('div',{staticStyle:{"display":"none"},attrs:{"id":"bg"}},[_c('EMBED',{attrs:{"id":"sound","name":"ViewSound","SRC":"wav/请插入您的银行卡.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}})],1)])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-a8e21e04"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-a8e21e04", __vue__options__)
  } else {
    hotAPI.reload("data-v-a8e21e04", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],369:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".table_inform[data-v-0e7fdf35]{\r\n    width:80%;\r\n    font-size: 3.1rem;\r\n    margin: 10px auto;  \r\n}\r\n.txt-r[data-v-0e7fdf35]{\r\n    text-align: right;\r\n    padding-top: 40px;\r\n}\r\n.txt-l[data-v-0e7fdf35]{\r\n    text-align: left;\r\n    color: #6600ff;\r\n    padding-top: 40px;\r\n}\r\n.input_info[data-v-0e7fdf35]{\r\n    width:180px;\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    data: function data() {
        return {
            bankData: [],
            branchData: [],
            showBank: false,
            showBranch: false,
            vmCountryCode: "",
            vmCountryNam: "",
            vmNationCode: "",
            vmNationNam: ""
        };
    },

    computed: {},
    methods: {
        onCancelBank: function onCancelBank() {
            this.showBank = false;
        },
        onCancelBranch: function onCancelBranch() {
            this.showBranch = false;
        },
        onChooseBank: function onChooseBank(index, item) {
            this.showBank = false;
            this.showBranch = false;
            $("#CountryJson").val(item.VLU_ITEM_DIC);
            this.vmCountryCode = item.NUM_ITEM_DIC;
            this.vmCountryNam = item.VLU_ITEM_DIC;
        },
        onChooseBranch: function onChooseBranch(index, item) {
            this.showBank = false;
            this.showBranch = false;
            $("#NationJson").val(item.VLU_ITEM_DIC);
            this.vmNationCode = item.NUM_ITEM_DIC;
            this.vmNationNam = item.VLU_ITEM_DIC;
        }
    },
    mounted: function mounted() {
        pageLog('mounted-->' + new Date());
        var vm = this;
        var C_A01_Dict_00000009 = "";
        var sex = "";
        var C_A01_BIZPRM_00104 = "0";
        var GD_CodPid, menuMinAge, menuMaxAge, GD_A01_MenuBusOld;
        DataTools.get("GD_CodPid|GD_NumPid|GD_NamCust|C_A01_Dict_00000010|C_A01_Dict_00000007|C_A01_Dict_00000009|C_A01_BIZPRM_00104|GD_A01_BusMinAge|C_A01_BIZPRM_00208|GD_A01_MenuBusOld", function (data) {
            pageLog('GD_A01_BusMinAge-->' + data[7]);
            pageLog('C_A01_BIZPRM_00208-->' + data[8]);
            C_A01_BIZPRM_00104 = data[6];
            menuMinAge = data[7] + "0000";
            menuMaxAge = data[8] + "0000";
            GD_A01_MenuBusOld = data[9];
            GD_CodPid = data[0];
            var strIDtype = "";
            var bSpliceChina = false;
            switch (data[0]) {
                case "110001":
                    strIDtype = "二代身份证";
                    break;
                case "110019":
                    if (data[1].substr(0, 1) == "H" || data[1].substr(0, 1) == "h") {
                        vm.vmCountryCode = "344";
                        vm.vmCountryNam = "中国香港";
                        $("#CountryJson").val("中国香港");
                    } else {
                        vm.vmCountryCode = "446";
                        vm.vmCountryNam = "中国澳门";
                        $("#CountryJson").val("中国澳门");
                    }

                    $("#NationJson").val("不适用");
                    vm.vmNationCode = "99";
                    vm.vmNationNam = "不适用";
                    strIDtype = "港澳居民来往内地通行证";
                    setVar("GD_CodCertOrg", "公安部");
                    break;
                case "110021":
                    vm.vmCountryCode = "158";
                    vm.vmCountryNam = "中国台湾";
                    $("#CountryJson").val("中国台湾");
                    $("#NationJson").val("不适用");
                    vm.vmNationCode = "99";
                    vm.vmNationNam = "不适用";
                    strIDtype = "台湾居民来往大陆通行证";
                    setVar("GD_CodCertOrg", "公安部");
                    break;
                case "110037":
                    $("#NationJson").val("不适用");
                    vm.vmNationCode = "99";
                    vm.vmNationNam = "不适用";
                    strIDtype = "外国人永久居留证";
                    setVar("GD_CodCertOrg", "公安部");
                    bSpliceChina = true;
                    break;
                case "110025":
                    strIDtype = "外国护照";
                    setVar("GD_CodCertOrg", "不适用");
                    $("#NationJson").val("不适用");
                    vm.vmNationCode = "99";
                    vm.vmNationNam = "不适用";
                    bSpliceChina = true;
                    break;
                default:
                    strIDtype = "";
                    break;
            }
            $("#IDcardType").html(strIDtype);
            $("#IDcardNum").html(data[1]);
            $("#IDcardNam").html(data[2]);
            if (typeof data[3] == "string" && data[3] != "") {
                var JsonCountry = JSON.parse(data[3]);;
                var index = -1;
                if (bSpliceChina == true) {
                    for (var i = 0; i < JsonCountry.length; i++) {
                        if (JsonCountry[i].VLU_ITEM_DIC == "中国") {
                            index = i;
                        }
                    }
                    if (index > -1) {
                        JsonCountry.splice(JsonCountry.indexOf(JsonCountry[index]), 1);
                    }
                }
                vm.bankData = JsonCountry;
            }
            if (typeof data[4] == "string" && data[4] != "") {
                vm.branchData = JSON.parse(data[4]);
            }
        });
        document.getElementById("CountryJson").onclick = onCountryJson;
        function onCountryJson() {
            vm.showBank = true;
            vm.showBranch = false;
        }
        document.getElementById("NationJson").onclick = onNationJson;
        function onNationJson() {
            vm.showBank = false;
            vm.showBranch = true;
        }
        document.getElementById("man").onclick = onMan;
        function onMan() {
            if ($(this).is(':checked')) {
                sex = "男";
            }
        }
        document.getElementById("woman").onclick = onWoman;
        function onWoman() {
            if ($(this).is(':checked')) {
                sex = "女";
            }
        }
        document.getElementById("Alltime").onclick = onAlltime;
        function onAlltime() {
            if ($(this).is(':checked')) {
                $("#VarDataEnd").val("9999-99-99");
                $('#VarDataEnd').prop('disabled', true);
            } else {
                $("#VarDataEnd").val("");
                $('#VarDataEnd').prop('disabled', false);
            }
        }

        $(function () {
            new DatePicker().init({ id: 'VarDataStart' });
            new DatePicker().init({ id: 'VarDataEnd' });
            new DatePicker().init({ id: 'Birthday' });
        });

        document.getElementById("btn_back").onclick = onBack;
        function onBack() {
            exitScene("STA_BACK");
        }
        document.getElementById("btn_sure").onclick = onSure;
        function onSure() {
            var strDataStart = $("#VarDataStart").val();
            var strVarDataEnd = $("#VarDataEnd").val();
            var strBirthday = $("#Birthday").val();
            var bAllTime = $("#Alltime").is(':checked');
            if (sex == "") {
                $("#notice").html("您好，性别为必填项，请填写完整");
            } else if (vm.vmCountryCode == "") {
                $("#notice").html("您好，国籍为必填项，请填写完整");
            } else if (vm.vmNationCode == "") {
                $("#notice").html("您好，民族为必填项，请填写完整");
            } else if (!bAllTime && strVarDataEnd == "") {
                $("#notice").html("您好，证件有效日期为必填项，请填写完整");
            } else if (strDataStart == "") {
                $("#notice").html("您好，证件有效日期为必填项，请填写完整");
            } else if (strBirthday == "") {
                $("#notice").html("您好，出生日期为必填项，请填写完整");
            } else {
                if (bAllTime) {
                    strVarDataEnd = "99999999";
                }
                strBirthday = strBirthday.replace(/-/g, "");
                strDataStart = strDataStart.replace(/-/g, "");
                strVarDataEnd = strVarDataEnd.replace(/-/g, "");

                var date = new Date();
                var strYear = date.getFullYear();
                var strMonth = date.getMonth() + 1;
                var strDate = date.getDate();

                if (strMonth >= 1 && strMonth <= 9) {
                    strMonth = '0' + strMonth;
                }
                if (strDate >= 1 && strDate <= 9) {
                    strDate = '0' + strDate;
                }
                var currData = strYear.toString() + strMonth + strDate;
                pageLog('currData-->' + currData + ',strDataStart-->' + strDataStart + ',strBirthday-->' + strBirthday + ',strVarDataEnd-->' + strVarDataEnd + ',menuMinAge-->' + menuMinAge + ',menuMaxAge-->' + menuMaxAge + ',GD_A01_MenuBusOld-->' + GD_A01_MenuBusOld);
                if (parseInt(strDataStart) > parseInt(currData)) {
                    $("#notice").html("您好，证件起始日期不可大于当天，请重新选择");
                } else if (!(bAllTime || parseInt(strVarDataEnd) >= parseInt(currData))) {
                    $("#notice").html("您好，证件终止日期已过期，请重新选择");
                } else if (parseInt(strBirthday) > parseInt(currData)) {
                    $("#notice").html("您好，出生日期不可大于当天，请重新选择");
                } else if (parseInt(currData) - parseInt(strBirthday) <= parseInt(menuMinAge)) {
                    $("#notice").html("本机暂无法受理您的业务，请联系银行工作人员到柜面办理。");
                } else if (parseInt(currData) - parseInt(strBirthday) > parseInt(menuMaxAge) && GD_A01_MenuBusOld != "1") {
                    $("#notice").html("本机暂无法受理您的业务，请联系银行工作人员到柜面办理。");
                } else {
                    setVar("GD_Gender", sex);
                    setVar("GD_Address", "");
                    setVar("GD_CodNation", vm.vmNationNam);
                    setVar("P_CodCountry", vm.vmCountryCode);
                    setVar("GD_DateCertBgn", strDataStart);
                    setVar("GD_DateCertEnd", strVarDataEnd);
                    setVar("GD_Birthday", strBirthday);

                    if (parseInt(strDataStart.replace(/-/g, "")) >= parseInt(C_A01_BIZPRM_00104) && GD_CodPid == "110037") {
                        exitScene("STA_READCARD");
                    } else {
                        exitScene("STA_CONTINUE");
                    }

                    exitScene("STA_CONTINUE");
                }
            }
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("输入证件类型")]),_vm._v(" "),_c('table',{staticClass:"table_inform"},[_c('tr',[_c('td',{staticClass:"txt-r"},[_vm._v("证件类型：")]),_vm._v(" "),_c('td',{staticClass:"txt-l",attrs:{"id":"IDcardType"}}),_vm._v(" "),_c('td',{staticClass:"txt-r"},[_c('span',{staticClass:"starts"}),_vm._v("性别：")]),_vm._v(" "),_c('td',{staticClass:"txt-l"},[_c('label',{staticClass:"radio_box"},[_c('input',{attrs:{"type":"radio","id":"man","name":"sex"}}),_c('i'),_vm._v("  男\n                    ")]),_vm._v(" "),_c('label',{staticClass:"radio_box"},[_c('input',{attrs:{"type":"radio","id":"woman","name":"sex"}}),_c('i'),_vm._v("  女\n                    ")])])]),_vm._v(" "),_c('tr',[_c('td',{staticClass:"txt-r"},[_vm._v("证件号码：")]),_vm._v(" "),_c('td',{staticClass:"txt-l",attrs:{"id":"IDcardNum"}}),_vm._v(" "),_c('td',{staticClass:"txt-r"},[_c('span',{staticClass:"starts"},[_vm._v("*")]),_vm._v("国籍：")]),_vm._v(" "),_c('td',{staticClass:"txt-l"},[_c('input',{staticClass:"input_info",attrs:{"type":"text","placeholder":"","id":"CountryJson"}})])]),_vm._v(" "),_c('tr',[_c('td',{staticClass:"txt-r"},[_vm._v("客户姓名：")]),_vm._v(" "),_c('td',{staticClass:"txt-l",attrs:{"id":"IDcardNam"}}),_vm._v(" "),_c('td',{staticClass:"txt-r"},[_c('span',{staticClass:"starts"},[_vm._v("*")]),_vm._v("民族：")]),_vm._v(" "),_c('td',{staticClass:"txt-l"},[_c('input',{staticClass:"input_info",attrs:{"type":"text","placeholder":"","disabled":"true","id":"NationJson"}})])]),_vm._v(" "),_c('tr',[_c('td',{staticClass:"txt-r"},[_c('span',{staticClass:"starts"},[_vm._v("*")]),_vm._v("有效日期：")]),_vm._v(" "),_c('td',{staticClass:"txt-l",attrs:{"colspan":"2"}},[_c('input',{staticClass:"input_info",attrs:{"type":"text","id":"VarDataStart"}}),_vm._v("- "),_c('input',{staticClass:"input_info",attrs:{"type":"text","id":"VarDataEnd"}})]),_vm._v(" "),_c('td',{staticClass:"txt-l"},[_c('label',{staticClass:"check_box"},[_c('input',{attrs:{"type":"checkbox","id":"Alltime"}}),_c('i'),_vm._v("永久有效\n                    ")])])]),_vm._v(" "),_c('tr',[_c('td',{staticClass:"txt-r"},[_c('span',{staticClass:"starts"},[_vm._v("*")]),_vm._v("出生日期：")]),_vm._v(" "),_c('td',{staticClass:"txt-l"},[_c('input',{staticClass:"input_info",attrs:{"type":"text","id":"Birthday"}})]),_vm._v(" "),_c('td'),_vm._v(" "),_c('td')])]),_vm._v(" "),_c('x-multi-level',{attrs:{"show":_vm.showBank,"title":"国籍","data":_vm.bankData,"pcode":"NUM_ITEM_DIC","pname":"VLU_ITEM_DIC"},on:{"cancel":_vm.onCancelBank,"confirm":_vm.onChooseBank}}),_vm._v(" "),_c('x-multi-level',{attrs:{"show":_vm.showBranch,"title":"民族","data":_vm.branchData,"pcode":"NUM_ITEM_DIC","pname":"VLU_ITEM_DIC"},on:{"cancel":_vm.onCancelBranch,"confirm":_vm.onChooseBranch}}),_vm._v(" "),_c('p',{staticClass:"tips",attrs:{"id":"notice"}}),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"btn_back"}},[_vm._v("上 一 步")]),_vm._v(" "),_c('button',{staticClass:"btn",attrs:{"id":"btn_sure"}},[_vm._v("下 一 步")])])],1)}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-0e7fdf35"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0e7fdf35", __vue__options__)
  } else {
    hotAPI.reload("data-v-0e7fdf35", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],370:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".MenuShow[data-v-40181262]{\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\theight: 65%;\r\n\tmargin-top: 5%;\r\n\toverflow-y: auto;\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	mounted: function mounted() {
		var thepath = vm.$root.themeImgPath;
		DataTools.get("GD_A01_MenuID_Preprocess|GD_A01_MenuData", function (data) {
			var MenuData = JSON.parse(data[1]);
			var MenuID = data[0].split(",");

			for (var t = 0; t < MenuID.length; t++) {
				for (var i = 0; i < MenuData.length; i++) {
					if (MenuData[i].NAM_MENU != "常用菜单") {
						for (var j = 0; j < MenuData[i].CLD_MENU.length; j++) {
							if (MenuData[i].CLD_MENU[j].ID_MENU.indexOf(MenuID[t]) != -1) {
								var nodeChild = "<div style=\"width:20%;\" data-ID='" + MenuData[i].CLD_MENU[j].ID_MENU + "'><img style='max-width:95%;' src='" + thepath + '/img/bus/' + MenuData[i].CLD_MENU[j].NAM_ICON + "'></div>";
								$(".MenuShow").append(nodeChild);
								break;
							}
						}
					}
				}
			}
			var imgNodes = document.querySelectorAll(".MenuShow div");
			for (var i = 0; i < imgNodes.length; i++) {
				imgNodes[i].addEventListener("click", onSure);
			}
			function onSure() {
				var MenuID = $(this).attr("data-ID");

				setVar("GD_A01_MenuID", MenuID);
				exitScene("STA_CONTINUE");
			}
		});
	}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("业务预处理")]),_vm._v(" "),_c('div',{staticClass:"MenuShow"})])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-40181262"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-40181262", __vue__options__)
  } else {
    hotAPI.reload("data-v-40181262", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],371:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        document.getElementById("btn_sure").onclick = onSure;
        function onSure() {
            onContinue();
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"time",attrs:{"id":"CountDown"}})])]),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"ShowReason"}}),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn surebtn disp_none",attrs:{"id":"btn_sure"}},[_vm._v("加载主密钥")])]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"Msg1"}})])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-3dc4d235", __vue__options__)
  } else {
    hotAPI.reload("data-v-3dc4d235", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],372:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
        value: true
});
exports.default = {
        mounted: function mounted() {
                document.getElementById("btn_back").onclick = onBack;
                function onBack(e) {
                        onContinue();
                }
        }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"ShowReason"}},[_vm._v("系统留存证件起始日期识别为新版证件，请读取证件或进行资料修改交易")]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"btn_back"}},[_vm._v("读取证件")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4455ca68", __vue__options__)
  } else {
    hotAPI.reload("data-v-4455ca68", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],373:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".modal_tip[data-v-0882b688] {\r\n    position: absolute;\r\n    top: 40%;\r\n    width: 98%;\r\n    text-align: center;\r\n    font-size: 3rem; \r\n}\r\n.modal_title[data-v-0882b688] {\r\n    position: absolute;\r\n    top: 10%;\r\n    width: 99%;\r\n    text-align: center;\r\n    font-size: 3rem; \r\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _vuex = require('vuex');

exports.default = {
    methods: _extends({
        onBack: function onBack() {
            this.onCancel();
        },
        onSure: function onSure() {
            this.onContinue();
        }
    }, (0, _vuex.mapActions)(['initPool', 'fetch', 'onCancel', 'onContinue', 'exitScene']))
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('p',{staticClass:"modal_tip"},[_vm._v("您尚未进行风险评估，请先进行风险评估")]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",on:{"click":_vm.onBack}},[_vm._v("取 消")]),_vm._v(" "),_c('button',{staticClass:"btn",on:{"click":_vm.onSure}},[_vm._v("确 认")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-0882b688"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0882b688", __vue__options__)
  } else {
    hotAPI.reload("data-v-0882b688", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300,"vuex":"vuex"}],374:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
		value: true
});
exports.default = {
		mounted: function mounted() {
				document.getElementById("btnExit").onclick = onExit;
				function onExit() {
						exitScene("STA_ADMIN");
				}
		}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"btn_exit",attrs:{"id":"btnExit"}})])]),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("本机暂停服务")]),_vm._v(" "),_c('p',{staticClass:"center_title"},[_vm._v("由于设备故障，无法提供服务，"),_c('br'),_c('br'),_vm._v("给您带来不便，敬请谅解！(密码键盘硬件故障)")])])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-66e0c84a", __vue__options__)
  } else {
    hotAPI.reload("data-v-66e0c84a", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],375:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
		value: true
});
exports.default = {
		mounted: function mounted() {
				document.getElementById("btn_sure").onclick = onSure;
				function onSure(e) {
						onContinue();
				}
		}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"time",attrs:{"id":"CountDown"}})])]),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"ShowReason"}},[_vm._v("正在复位硬件模块，请稍候...")]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn surebtn disp_none",attrs:{"id":"btn_sure"}},[_vm._v("重   试")])]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"Msg1"}})])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-17e231a4", __vue__options__)
  } else {
    hotAPI.reload("data-v-17e231a4", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],376:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert("img[data-v-6be7fd02]{\r\n    display: block;\r\n    margin: auto;\r\n    width: 20%;\r\n}")
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('div',{staticClass:"modal_tradingBox",attrs:{"id":"modal_tradingBox"}},[_c('div',[_c('img',{attrs:{"src":_vm.$root.imgPath('img/loading.gif')}}),_vm._v("正在读取存折信息，请稍候...")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-6be7fd02"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6be7fd02", __vue__options__)
  } else {
    hotAPI.reload("data-v-6be7fd02", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],377:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title"},[_vm._v("正在打印回单...")])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5b53b010", __vue__options__)
  } else {
    hotAPI.reload("data-v-5b53b010", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],378:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title"},[_vm._v("正在打印凭条...")])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-9da09264", __vue__options__)
  } else {
    hotAPI.reload("data-v-9da09264", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],379:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".x-hsgif[data-v-43c02f1b]{\r\n    width: 50%;\r\n    margin: 0% auto;\r\n}\r\n.x-hsgif img[data-v-43c02f1b]{\r\n    width: 100%;\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        var vm = this;
        DataTools.get("GD_A01_Cust_RejectMediaID|GD_CodPid", function (data) {
            switch (data[0]) {
                case "IDC":case "IDCIC":case "MAG":
                    $(".title").html("您的银行卡已被回收，请与大堂经理联系");

                    break;
                case "SIM":
                    $(".title").html("请收好您的银行卡，以防遗失");

                    break;
                case "PPR":
                    $(".title").html("您的存折已被回收，请与大堂经理联系");

                    break;
                case "ID":
                    $(".title").html("请收好您的身份证件，以防遗失");
                    switch (data[1]) {
                        case "110001":
                            $(".x-hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "TakeIDCard.gif"));
                            break;
                        case "110037":
                            $(".x-hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "TakeForeignerCard.gif"));
                            break;
                        default:
                            $(".x-hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "TakeIDCard.gif"));
                            break;
                    }

                    break;
                default:
                    $(".title").html("您的银行卡已被回收，请与大堂经理联系");

                    break;
            }
        });
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"}),_vm._v(" "),_c('div',{staticClass:"x-hsgif"},[_c('img',{attrs:{"src":""}})]),_vm._v(" "),_c('div',{staticStyle:{"display":"none"},attrs:{"id":"bg"}})])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-43c02f1b"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-43c02f1b", __vue__options__)
  } else {
    hotAPI.reload("data-v-43c02f1b", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],380:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".modal_tip[data-v-5aaec3a8] {\r\n    position: absolute;\r\n    top: 40%;\r\n    width: 98%;\r\n    text-align: center;\r\n    font-size: 3rem; \r\n}\r\n.modal_title[data-v-5aaec3a8] {\r\n    position: absolute;\r\n    top: 10%;\r\n    width: 99%;\r\n    text-align: center;\r\n    font-size: 3rem; \r\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _vuex = require('vuex');

exports.default = {
    methods: _extends({
        onSure: function onSure() {
            this.onContinue();
        },
        onBack: function onBack() {
            this.onCancel();
        }
    }, (0, _vuex.mapActions)(['initPool', 'fetch', 'onCancel', 'onContinue', 'exitScene']))
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('p',{staticClass:"modal_tip"},[_vm._v("您的风险评估结果已过期，请重新进行风险评估")]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",on:{"click":_vm.onBack}},[_vm._v("取  消")]),_vm._v(" "),_c('button',{staticClass:"btn",on:{"click":_vm.onSure}},[_vm._v("确  定")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-5aaec3a8"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5aaec3a8", __vue__options__)
  } else {
    hotAPI.reload("data-v-5aaec3a8", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300,"vuex":"vuex"}],381:[function(require,module,exports){
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    data: function data() {
        return {
            json: '[{"NUM_ITEM_DIC":"ABW","VLU_ITEM_DIC":"阿鲁巴"},{"NUM_ITEM_DIC":"AFG","VLU_ITEM_DIC":"阿富汗"},{"NUM_ITEM_DIC":"BEL","VLU_ITEM_DIC":"比利时"},{"NUM_ITEM_DIC":"BTN","VLU_ITEM_DIC":"不丹"},{"NUM_ITEM_DIC":"GBR","VLU_ITEM_DIC":"英国"}]'
        };
    },

    methods: {
        sourceChanged: function sourceChanged(e) {
            var strCountryInput = $("#CountryInput").val();
            this.onSelectCountry(strCountryInput);
            var arr = strCountryInput.split(' ');
            if (arr.length > 0) {
                strCountryInput = arr[arr.length - 1];
            }

            $("#CountryInput").val(strCountryInput);
            var strCountryCode = strFromJson(this.json, "VLU_ITEM_DIC", strCountryInput, "NUM_ITEM_DIC");
        },
        onSelectCountry: function onSelectCountry(val) {
            $("#CountryList").html("");
            var selectArray = new Array();
            var k = 0;
            var DictCountry1 = JSON.parse(this.json);
            for (var i in DictCountry1) {
                if (DictCountry1[i].VLU_ITEM_DIC == "中国") {
                    continue;
                }
                if (CheckPinYin(val)) {
                    val = val.toLowerCase();
                    var strCountryForPY = ConvertPinyin(DictCountry1[i].VLU_ITEM_DIC);
                    if (strCountryForPY.indexOf(val) != -1) {
                        selectArray[k] = new Array();

                        selectArray[k][0] = strCountryForPY + " " + DictCountry1[i].VLU_ITEM_DIC;
                        selectArray[k][1] = DictCountry1[i].VLU_ITEM_DIC;
                        k++;
                    }
                } else {
                    if (DictCountry1[i].VLU_ITEM_DIC.indexOf(val) != -1) {
                        selectArray[k] = new Array();

                        selectArray[k][0] = DictCountry1[i].VLU_ITEM_DIC;
                        selectArray[k][1] = DictCountry1[i].VLU_ITEM_DIC;
                        k++;
                    }
                }
            }
            var html = "";
            for (var i = 0; i < selectArray.length; i++) {
                html += '<option value="' + selectArray[i][0] + '">' + selectArray[i][1] + '</option>';
            }
            $("#CountryList").html(html);
        }
    },
    mounted: function mounted() {
        this.onSelectCountry("");
        var strCountry = strFromJson(this.json, "NUM_ITEM_DIC", "BEL", "VLU_ITEM_DIC");
        $("#CountryInput").val(strCountry);

        document.getElementById("btn_sure").onclick = onBtnSure;
        function onBtnSure() {
            var isOk = false;
            var val = $("#CountryInput").val();
            var strCountryCode = strFromJson(json, "VLU_ITEM_DIC", val, "NUM_ITEM_DIC");
        };
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("请选择国家")]),_vm._v(" "),_c('table',{staticClass:"infor_table",staticStyle:{"table-layout":"fixed","word-wrap":"break-word"},attrs:{"id":"tab"}},[_c('tr',[_c('td',[_vm._v("国            家：")]),_vm._v(" "),_c('td',[_c('label',[_c('input',{staticClass:"input_info",attrs:{"id":"CountryInput","list":"CountryList","placeholder":"请选择国家/地区","type":"text","maxlength":"20","onclick":"ShowPinyinKB('-1','-1','CountryInput','请选择国家/地区：')","onblur":"HideKB()"},on:{"input":_vm.sourceChanged}})]),_vm._v(" "),_c('datalist',{attrs:{"id":"CountryList"},on:{"change":_vm.changeType}})])])]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"btn_back"}},[_vm._v("上 一 步")]),_vm._v(" "),_c('button',{staticClass:"btn",attrs:{"id":"btn_sure"}},[_vm._v("下 一 步")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6f01712a", __vue__options__)
  } else {
    hotAPI.reload("data-v-6f01712a", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],382:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".MediaKind[data-v-4edddad4]{\r\n    width:95%;\r\n    justify-content: center;\r\n}\r\n.CardMedia[data-v-4edddad4]{\r\n    width: 596px;\r\n    height: 300px;\r\n    margin-right: 30px;\r\n    margin-left: 10px; \r\n}\r\n@media screen and (max-width: 1300px) { \r\n    .CardMedia[data-v-4edddad4]{\r\n            width: 480px;\r\n            height: 280px;\r\n        }\r\n}\r\n@media screen and (max-height: 850px) { \r\n    .CardMedia[data-v-4edddad4]{\r\n        width: 400px;\r\n        height: 240px;\r\n    }\r\n    .CardMedia p[data-v-4edddad4]{\r\n        font-size:3.0rem;\r\n        margin-top:-15px;\r\n    }\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        DataTools.get("GD_A01_Cust_IDTypeMask", function (data) {
            var strMask = data.toString();

            if (strMask == "") {
                strMask = "10000";
            }

            if (strMask.substr(0, 1) == "1") {
                $("#IDCard").css("display", "block");
            }
            if (strMask.substr(1, 1) == "1") {
                $("#HKOrMacau").css("display", "block");
            }
            if (strMask.substr(2, 1) == "1") {
                $("#TAIWAN").css("display", "block");
            }
            if (strMask.substr(3, 1) == "1") {
                $("#PASSPORt").css("display", "block");
            }
            if (strMask.substr(4, 1) == "1") {
                $("#PRCard").css("display", "block");
            }
        });

        document.getElementById("IDCard").onclick = onCardMedia;
        document.getElementById("HKOrMacau").onclick = onCardMedia;
        document.getElementById("TAIWAN").onclick = onCardMedia;
        document.getElementById("PRCard").onclick = onCardMedia;
        document.getElementById("PASSPORt").onclick = onCardMedia;
        function onCardMedia() {
            $(".CardMedia").removeClass("on");
            $(this).addClass("on");
            var DocumentType = $(this).find('p').attr('value');
            setVar("GD_CodPid", DocumentType);
            switch (DocumentType) {
                case "110001":
                    setVar("P_CodCountry", "156");
                    exitScene("STA_CONTINUE");
                    break;
                case "110025":case "110019":case "110021":
                    exitScene("STA_CONTINUE");
                    break;
                case "110037":
                    setVar("GD_A01_IsSupportNICPRCard", "1");
                    exitScene("STA_CONTINUE");
                    break;
                default:
                    exitScene("STA_FAIL");
                    break;
            }
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("选择证件类型")]),_vm._v(" "),_c('div',{staticClass:"MediaKind"},[_c('div',{staticClass:"CardMedia",staticStyle:{"display":"none"},attrs:{"id":"IDCard"}},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/二代身份证.png'),"alt":""}}),_vm._v(" "),_c('p',{attrs:{"value":"110001"}},[_vm._v("二代身份证")])]),_vm._v(" "),_c('div',{staticClass:"CardMedia",staticStyle:{"display":"none"},attrs:{"id":"HKOrMacau"}},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/港澳居民来往内地通行证.png'),"alt":""}}),_vm._v(" "),_c('p',{attrs:{"value":"110019"}},[_vm._v("港澳居民来往内地通行证")])]),_vm._v(" "),_c('div',{staticClass:"CardMedia",staticStyle:{"display":"none"},attrs:{"id":"TAIWAN"}},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/台湾居民来往大陆通行证.png'),"alt":""}}),_vm._v(" "),_c('p',{attrs:{"value":"110021"}},[_vm._v("台湾居民来往大陆通行证")])]),_vm._v(" "),_c('div',{staticClass:"CardMedia",staticStyle:{"display":"none"},attrs:{"id":"PRCard"}},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/外国人永久居留证1.png'),"alt":""}}),_vm._v(" "),_c('p',{attrs:{"value":"110037"}},[_vm._v("外国人永久居留证")])]),_vm._v(" "),_c('div',{staticClass:"CardMedia",staticStyle:{"display":"none"},attrs:{"id":"PASSPORt"}},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/外国护照.png'),"alt":""}}),_vm._v(" "),_c('p',{attrs:{"value":"110025"}},[_vm._v("外国护照")])])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-4edddad4"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4edddad4", __vue__options__)
  } else {
    hotAPI.reload("data-v-4edddad4", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],383:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".box[data-v-b227ac46]{\n            height: 775px;\n            margin-top: 30px;\n        }\n    .top[data-v-b227ac46], .bottom[data-v-b227ac46]{\n            display: flex;\n            justify-content: center;\n            margin-bottom: 45px;\n    }\n    .card[data-v-b227ac46]{\n            width: 596px;\n            height: 280px;\n            margin-right: 30px;\n            text-align: center;\n            font-size: 3rem;   \n        }\n        .card>img[data-v-b227ac46]{\n            width:50%;\n            height: 60%;\n        }\n@media screen and (max-width: 1300px) { \n    .card[data-v-b227ac46]{\n            width: 480px;\n            height: 250px;\n        }\n}\n    .cardbox[data-v-b227ac46]{\n            display: flex;\n            justify-content: space-between;\n            border: none;\n            box-shadow: none;\n        }\n    .cardbox div[data-v-b227ac46]{\n            height: 100%;\n            width: 46%;\n        }\n    .Docimg img[data-v-b227ac46]{\n            margin-top: 35px;\n        }\n    @media screen and (max-width: 1300px) { \n      .Docimg img[data-v-b227ac46]{\n            margin-top: 25px;\n        }\n    }\n@media screen and (max-height: 850px) { \n     .box[data-v-b227ac46]{\n            margin-top: 30px;\n        }\n    .card[data-v-b227ac46]{\n        width: 480px;\n        height: 240px;\n    }\n    .Docimg img[data-v-b227ac46]{\n        margin-top: 20px;\n    }\n    .top[data-v-b227ac46], .bottom[data-v-b227ac46]{\n            margin-bottom: 35px;\n    }\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    beforeDestroy: function beforeDestroy() {
        $(".Docimg").unbind("click");
    },
    mounted: function mounted() {
        document.getElementById("IDCard").onclick = onDocimg;
        document.getElementById("HKOrMacau").onclick = onDocimg;
        document.getElementById("TAIWAN").onclick = onDocimg;
        document.getElementById("PRCard").onclick = onDocimg;
        document.getElementById("PASSPORt").onclick = onDocimg;
        function onDocimg() {
            $(".Docimg").removeClass("on");
            $(this).addClass("on");
            var DocumentType = $(this).find('p').attr('value');
            setVar("GD_CodPid", DocumentType);
            switch (DocumentType) {
                case "110001":
                    setVar("P_CodCountry", "156");
                    exitScene("STA_CONTINUE");
                    break;
                case "110025":case "110019":case "110021":
                    exitScene("STA_CONTINUE");
                    break;
                case "110037":
                    setVar("GD_A01_IsSupportNICPRCard", "1");
                    exitScene("STA_CONTINUE");
                    break;
                default:
                    exitScene("STA_FAIL");
                    break;
            }
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("选择证件类型")]),_vm._v(" "),_c('div',{staticClass:"box"},[_c('div',{staticClass:"top"},[_c('div',{staticClass:"card Docimg",attrs:{"id":"IDCard"}},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/二代身份证.png'),"alt":""}}),_vm._v(" "),_c('p',{attrs:{"value":"110001"}},[_vm._v("二代身份证")])]),_vm._v(" "),_c('div',{staticClass:"card Docimg",attrs:{"id":"HKOrMacau"}},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/港澳居民来往内地通行证.png'),"alt":""}}),_vm._v(" "),_c('p',{attrs:{"value":"110019"}},[_vm._v("港澳居民来往内地通行证")])])]),_vm._v(" "),_c('div',{staticClass:"bottom"},[_c('div',{staticClass:"card Docimg",attrs:{"id":"TAIWAN"}},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/台湾居民来往大陆通行证.png'),"alt":""}}),_vm._v(" "),_c('p',{attrs:{"value":"110021"}},[_vm._v("台湾居民来往大陆通行证")])]),_vm._v(" "),_c('div',{staticClass:"card cardbox"},[_c('div',{staticClass:"Docimg",attrs:{"id":"PRCard"}},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/外国人永久居留证.png'),"alt":""}}),_vm._v(" "),_c('p',{attrs:{"value":"110037"}},[_vm._v("外国人"),_c('br'),_vm._v("永久居留证")])]),_vm._v(" "),_c('div',{staticClass:"Docimg",attrs:{"id":"PASSPORt"}},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/外国护照.png'),"alt":""}}),_vm._v(" "),_c('p',{attrs:{"value":"110025"}},[_vm._v("外国护照")])])])])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-b227ac46"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-b227ac46", __vue__options__)
  } else {
    hotAPI.reload("data-v-b227ac46", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],384:[function(require,module,exports){
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    created: function created() {

        this.$root.$on('beforeQuit', onBeforeQuit);
        function onBeforeQuit() {
            $("#PDFViewer").attr('height', "0").attr('width', "0");
        };

        this.$root.$on('cancelQuit', onCancelQuit);
        function onCancelQuit() {
            $("#PDFViewer").attr('height', "60%").attr('width', "60%");
        };
    },
    destroyed: function destroyed() {
        this.$root.$off('beforeQuit');
        this.$root.$off('cancelQuit');
    },
    mounted: function mounted() {
        setTimeout(function () {
            $("#PDFViewer").attr('height', "60%").attr('width', "60%");
        }, 500);

        document.getElementById("btn_sure").onclick = onSure;
        function onSure(e) {
            $("#PDFViewer").attr('height', "0").attr('width', "0");
            onContinue();
        }

        document.getElementById("btn_back").onclick = onBack;
        function onBack(e) {
            $("#PDFViewer").attr('height', "0").attr('width', "0");
            onCancel();
        }

        document.getElementById("btn_ZoomOut").onclick = onZoomOut;
        function onZoomOut() {
            PDFViewer.ZoomOut();
        }

        document.getElementById("btn_ZoomIn").onclick = onZoomIn;
        function onZoomIn() {
            PDFViewer.ZoomIn();
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("协议阅读")]),_vm._v(" "),_c('div',{staticStyle:{"width":"100%","height":"60rem"}}),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"btn_back"}},[_vm._v("不 同 意")]),_vm._v(" "),_c('button',{staticClass:"btn",attrs:{"id":"btn_ZoomOut"}},[_vm._v("缩小（-）")]),_vm._v(" "),_c('button',{staticClass:"btn",attrs:{"id":"btn_ZoomIn"}},[_vm._v("放大（+）")]),_vm._v(" "),_c('button',{staticClass:"btn",attrs:{"id":"btn_sure"}},[_vm._v("同   意")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-11959060", __vue__options__)
  } else {
    hotAPI.reload("data-v-11959060", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],385:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	mounted: function mounted() {
		var intTime = $("#Ver_CountDown").html();
		if (intTime <= 0) {
			intTime = 300;
		}
		$("#Ver_CountDown").html(intTime);
		function setTimeHtml() {
			intTime -= 1;
			if (intTime <= 0) {
				clearInterval(interval);
				exitScene("STA_CONTINUE");
			}
			$("#Ver_CountDown").html(intTime);
		}
		var interval = setInterval(setTimeHtml, 1000);
		DataTools.get("RP_THRespCode|RP_THRespMsg", function (data) {
			var strRespCode = data[0];
			var strRespMsg = data[1];
			$("#ShowReason").html(strRespMsg + "<br><br>" + strRespCode);
		});

		document.getElementById("btn_sure").onclick = onSure;
		function onSure(e) {
			clearInterval(interval);
			exitScene("STA_CONTINUE");
		}
	}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"time",attrs:{"id":"Ver_CountDown"}})])]),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("本机暂停服务")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"ShowReason"}})])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2ae60362", __vue__options__)
  } else {
    hotAPI.reload("data-v-2ae60362", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],386:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".table_inform[data-v-0f9c181e]{\r\n    width:80%;\r\n    font-size: 3.1rem;\r\n    margin: 10px auto;  \r\n}\r\n.txt-r[data-v-0f9c181e]{\r\n    text-align: right;\r\n    padding-top: 40px;\r\n}\r\n.txt-l[data-v-0f9c181e]{\r\n    text-align: left;\r\n    color: #6600ff;\r\n    padding-top: 40px;\r\n}\r\n.input_info[data-v-0f9c181e]{\r\n    width:180px;\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    data: function data() {
        return {
            bankData: [],
            branchData: [],
            showBank: false,
            showBranch: false,
            vmCountryCode: "",
            vmCountryNam: "",
            vmNationCode: "",
            vmNationNam: ""
        };
    },

    computed: {},
    methods: {
        onCancelBank: function onCancelBank() {
            this.showBank = false;
        },
        onCancelBranch: function onCancelBranch() {
            this.showBranch = false;
        },
        onChooseBank: function onChooseBank(index, item) {
            this.showBank = false;
            this.showBranch = false;
            $("#CountryJson").val(item.VLU_ITEM_DIC);
            this.vmCountryCode = item.NUM_ITEM_DIC;
            this.vmCountryNam = item.VLU_ITEM_DIC;
        },
        onChooseBranch: function onChooseBranch(index, item) {
            this.showBank = false;
            this.showBranch = false;
            $("#NationJson").val(item.VLU_ITEM_DIC);
            this.vmNationCode = item.NUM_ITEM_DIC;
            this.vmNationNam = item.VLU_ITEM_DIC;
        }
    },
    mounted: function mounted() {
        pageLog('mounted-->' + new Date());
        var vm = this;
        var C_A01_Dict_00000009 = "";
        var sex = "";
        var C_A01_BIZPRM_00104 = "0";
        var GD_CodPid;
        var GD_CodPid, menuMinAge, menuMaxAge, GD_A01_MenuBusOld;
        DataTools.get("GD_CodPid|GD_NumPid|GD_NamCust|C_A01_Dict_00000010|C_A01_Dict_00000007|C_A01_Dict_00000009|C_A01_Dict_00000005|RP_Gender|RP_CodCountry|RP_CodNation|RP_CodCertOrg|RP_DateCertBgn|RP_DateCertEnd|RP_Birthday|C_A01_BIZPRM_00104|GD_A01_BusMinAge|C_A01_BIZPRM_00208|GD_A01_MenuBusOld", function (data) {
            var strIDtype = "";
            var bSpliceChina = false;
            GD_CodPid = data[0];
            var RP_Gender = data[7];
            var RP_CodCountry = data[8];
            var RP_CodNation = data[9];
            var RP_CodCertOrg = data[10];
            var RP_DateCertBgn = data[11];
            var RP_DateCertEnd = data[12];
            var RP_Birthday = data[13];
            C_A01_BIZPRM_00104 = data[14];
            menuMinAge = data[15] + "0000";
            menuMaxAge = data[16] + "0000";
            GD_A01_MenuBusOld = data[17];
            switch (data[0]) {
                case "110019":
                    strIDtype = "港澳居民来往内地通行证";
                    setVar("GD_CodCertOrg", "公安部");
                    break;
                case "110021":
                    strIDtype = "台湾居民来往大陆通行证";
                    setVar("GD_CodCertOrg", "公安部");
                    break;
                case "110037":
                    strIDtype = "外国人永久居留证";
                    setVar("GD_CodCertOrg", "公安部");
                    bSpliceChina = true;
                    break;
                case "110025":
                    strIDtype = "外国护照";
                    bSpliceChina = true;
                    $("#NationJson").val("不能适用");
                    break;
                default:
                    break;
            }

            $("#IDcardType").html(strIDtype);
            $("#IDcardNum").html(data[1]);
            $("#IDcardNam").html(data[2]);
            if (typeof data[3] == "string" && data[3] != "") {
                pageLog('mounted,tsx,RP_CodCountry-->' + RP_CodCountry + "<---");
                var C_A01_Dict_00000010 = JSON.parse(data[3]);
                if (RP_CodCountry != "") {
                    vm.vmCountryCode = RP_CodCountry;
                    for (var i = 0; i < C_A01_Dict_00000010.length; i++) {
                        if (C_A01_Dict_00000010[i].NUM_ITEM_DIC == RP_CodCountry) {
                            vm.vmCountryNam = C_A01_Dict_00000010[i].VLU_ITEM_DIC;
                        }
                    }
                    $("#CountryJson").val(vm.vmCountryNam);
                }
                var index = -1;
                if (bSpliceChina == true) {
                    for (var i = 0; i < C_A01_Dict_00000010.length; i++) {
                        if (C_A01_Dict_00000010[i].VLU_ITEM_DIC == "中国") {
                            index = i;
                        }
                    }
                    if (index > -1) {
                        C_A01_Dict_00000010.splice(C_A01_Dict_00000010.indexOf(C_A01_Dict_00000010[index]), 1);
                    }
                }
                vm.bankData = C_A01_Dict_00000010;
            } else {}
            if (typeof data[4] == "string" && data[4] != "") {
                var C_A01_Dict_00000007 = JSON.parse(data[4]);
                if (RP_CodNation == "") {
                    vm.vmNationCode = "99";
                    vm.vmNationNam = "不适用";
                } else {
                    vm.vmNationCode = RP_CodNation;
                    for (var i = 0; i < C_A01_Dict_00000007.length; i++) {
                        if (C_A01_Dict_00000007[i].NUM_ITEM_DIC == RP_CodNation) {
                            vm.vmNationNam = C_A01_Dict_00000007[i].VLU_ITEM_DIC;
                        }
                    }
                    $("#NationJson").val(vm.vmNationNam);
                }
            }
            if (typeof data[6] == "string" && data[6] != "") {
                var C_A01_Dict_00000005 = JSON.parse(data[6]);
                if (RP_Gender != "") {
                    for (var i = 0; i < C_A01_Dict_00000005.length; i++) {
                        if (C_A01_Dict_00000005[i].NUM_ITEM_DIC == RP_Gender) {
                            if (C_A01_Dict_00000005[i].VLU_ITEM_DIC == "男") {
                                sex = "男";

                                $('#man').prop('checked', true);
                            } else {
                                sex = "女";

                                $('#woman').prop('checked', true);
                            }
                        }
                    }
                }
            }

            RP_DateCertBgn = data[11];
            RP_DateCertEnd = data[12];
            RP_Birthday = data[13];
            if (RP_DateCertBgn == "") {} else {
                $("#VarDataStart").val(RP_DateCertBgn.substr(0, 4) + "-" + RP_DateCertBgn.substr(4, 2) + "-" + RP_DateCertBgn.substr(6, 2));
            }

            if (RP_DateCertEnd == "") {} else {
                if (RP_DateCertEnd == "99999999") {
                    $('#VarDataEnd').prop('disabled', true);
                    $('#Alltime').prop('checked', true);
                } else {
                    $("#VarDataEnd").val(RP_DateCertEnd.substr(0, 4) + "-" + RP_DateCertEnd.substr(4, 2) + "-" + RP_DateCertEnd.substr(6, 2));
                }
            }

            if (RP_Birthday == "") {} else {
                $("#Birthday").val(RP_Birthday.substr(0, 4) + "-" + RP_Birthday.substr(4, 2) + "-" + RP_Birthday.substr(6, 2));
            }
        });
        document.getElementById("CountryJson").onclick = onCountryJson;
        function onCountryJson() {
            vm.showBank = true;
            vm.showBranch = false;
        }
        document.getElementById("NationJson").onclick = onNationJson;
        function onNationJson() {
            vm.showBank = false;
            vm.showBranch = true;
        };
        document.getElementById("man").onclick = onMan;
        function onMan() {
            if ($(this).is(':checked')) {
                sex = "男";
            }
        }
        document.getElementById("woman").onclick = onWoman;
        function onWoman() {
            if ($(this).is(':checked')) {
                sex = "女";
            }
        }
        document.getElementById("Alltime").onclick = onAlltime;
        function onAlltime() {
            if ($(this).is(':checked')) {
                $("#VarDataEnd").val("9999-99-99");
                $('#VarDataEnd').prop('disabled', true);
            } else {
                $("#VarDataEnd").val("");
                $('#VarDataEnd').prop('disabled', false);
            }
        }

        $(function () {
            new DatePicker().init({ id: 'VarDataStart' });
            new DatePicker().init({ id: 'VarDataEnd' });
            new DatePicker().init({ id: 'Birthday' });
        });

        document.getElementById("btn_back").onclick = onBack;
        function onBack() {
            exitScene("STA_BACK");
        }

        document.getElementById("btn_sure").onclick = onSure;
        function onSure() {
            var strDataStart = $("#VarDataStart").val();
            var strVarDataEnd = $("#VarDataEnd").val();
            var strBirthday = $("#Birthday").val();
            var bAllTime = $("#Alltime").is(':checked');
            if (sex == "") {
                $("#notice").html("您好，性别为必填项，请填写完整");
            } else if (vm.vmCountryCode == "") {
                $("#notice").html("您好，国籍为必填项，请填写完整");
            } else if (vm.vmNationCode == "") {
                $("#notice").html("您好，民族为必填项，请填写完整");
            } else if (!bAllTime && strVarDataEnd == "") {
                $("#notice").html("您好，证件有效日期为必填项，请填写完整");
            } else if (strDataStart == "") {
                $("#notice").html("您好，证件有效日期为必填项，请填写完整");
            } else if (strBirthday == "") {
                $("#notice").html("您好，出生日期为必填项，请填写完整");
            } else {
                if (bAllTime) {
                    strVarDataEnd = "99999999";
                }
                strBirthday = strBirthday.replace(/-/g, "");
                strDataStart = strDataStart.replace(/-/g, "");
                strVarDataEnd = strVarDataEnd.replace(/-/g, "");

                var date = new Date();
                var strYear = date.getFullYear();
                var strMonth = date.getMonth() + 1;
                var strDate = date.getDate();

                if (strMonth >= 1 && strMonth <= 9) {
                    strMonth = '0' + strMonth;
                }
                if (strDate >= 1 && strDate <= 9) {
                    strDate = '0' + strDate;
                }
                var currData = strYear.toString() + strMonth + strDate;
                pageLog('currData-->' + currData + ',strDataStart-->' + strDataStart + ',strBirthday-->' + strBirthday + ',strVarDataEnd-->' + strVarDataEnd + ',menuMinAge-->' + menuMinAge + ',menuMaxAge-->' + menuMaxAge + ',GD_A01_MenuBusOld-->' + GD_A01_MenuBusOld);
                if (parseInt(strDataStart) > parseInt(currData)) {
                    $("#notice").html("您好，证件起始日期不可大于当天，请重新选择");
                } else if (!(bAllTime || parseInt(strVarDataEnd) >= parseInt(currData))) {
                    $("#notice").html("您好，证件终止日期已过期，请重新选择");
                } else if (parseInt(strBirthday) > parseInt(currData)) {
                    $("#notice").html("您好，出生日期不可大于当天，请重新选择");
                } else if (parseInt(currData) - parseInt(strBirthday) <= parseInt(menuMinAge)) {
                    $("#notice").html("本机暂无法受理您的业务，请联系银行工作人员到柜面办理。");
                } else if (parseInt(currData) - parseInt(strBirthday) > parseInt(menuMaxAge) && GD_A01_MenuBusOld != "1") {
                    $("#notice").html("本机暂无法受理您的业务，请联系银行工作人员到柜面办理。");
                } else {
                    setVar("GD_Gender", sex);
                    setVar("GD_Address", "");
                    setVar("GD_CodNation", vm.vmNationNam);
                    setVar("P_CodCountry", vm.vmCountryCode);
                    setVar("GD_CodCertOrg", "");
                    setVar("GD_DateCertBgn", strDataStart.replace(/-/g, ""));
                    setVar("GD_DateCertEnd", strVarDataEnd.replace(/-/g, ""));
                    setVar("GD_Birthday", strBirthday.replace(/-/g, ""));

                    if (parseInt(strDataStart.replace(/-/g, "")) >= parseInt(C_A01_BIZPRM_00104) && GD_CodPid == "110037") {
                        exitScene("STA_READCARD");
                    } else {
                        exitScene("STA_CONTINUE");
                    }
                }
            }
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("输入证件类型")]),_vm._v(" "),_c('table',{staticClass:"table_inform"},[_c('tr',[_c('td',{staticClass:"txt-r"},[_vm._v("证件类型：")]),_vm._v(" "),_c('td',{staticClass:"txt-l",attrs:{"id":"IDcardType"}}),_vm._v(" "),_c('td',{staticClass:"txt-r"},[_c('span',{staticClass:"starts"}),_vm._v("性别：")]),_vm._v(" "),_c('td',{staticClass:"txt-l"},[_c('label',{staticClass:"radio_box"},[_c('input',{attrs:{"type":"radio","id":"man","name":"sex"}}),_c('i'),_vm._v("  男\n                    ")]),_vm._v(" "),_c('label',{staticClass:"radio_box"},[_c('input',{attrs:{"type":"radio","id":"woman","name":"sex"}}),_c('i'),_vm._v("  女\n                    ")])])]),_vm._v(" "),_c('tr',[_c('td',{staticClass:"txt-r"},[_vm._v("证件号码：")]),_vm._v(" "),_c('td',{staticClass:"txt-l",attrs:{"id":"IDcardNum"}}),_vm._v(" "),_c('td',{staticClass:"txt-r"},[_c('span',{staticClass:"starts"},[_vm._v("*")]),_vm._v("国籍：")]),_vm._v(" "),_c('td',{staticClass:"txt-l"},[_c('input',{staticClass:"input_info",attrs:{"type":"text","placeholder":"","id":"CountryJson"}})])]),_vm._v(" "),_c('tr',[_c('td',{staticClass:"txt-r"},[_vm._v("客户姓名：")]),_vm._v(" "),_c('td',{staticClass:"txt-l",attrs:{"id":"IDcardNam"}}),_vm._v(" "),_c('td',{staticClass:"txt-r"},[_c('span',{staticClass:"starts"},[_vm._v("*")]),_vm._v("民族：")]),_vm._v(" "),_c('td',{staticClass:"txt-l"},[_c('input',{staticClass:"input_info",attrs:{"type":"text","placeholder":"","id":"NationJson","disabled":"true"}})])]),_vm._v(" "),_c('tr',[_c('td',{staticClass:"txt-r"},[_c('span',{staticClass:"starts"},[_vm._v("*")]),_vm._v("有效日期：")]),_vm._v(" "),_c('td',{staticClass:"txt-l",attrs:{"colspan":"2"}},[_c('input',{staticClass:"input_info",attrs:{"type":"text","id":"VarDataStart"}}),_vm._v("- "),_c('input',{staticClass:"input_info",attrs:{"type":"text","id":"VarDataEnd"}})]),_vm._v(" "),_c('td',{staticClass:"txt-l"},[_c('label',{staticClass:"check_box"},[_c('input',{attrs:{"type":"checkbox","id":"Alltime"}}),_c('i'),_vm._v("永久有效\n                    ")])])]),_vm._v(" "),_c('tr',[_c('td',{staticClass:"txt-r"},[_c('span',{staticClass:"starts"},[_vm._v("*")]),_vm._v("出生日期：")]),_vm._v(" "),_c('td',{staticClass:"txt-l"},[_c('input',{staticClass:"input_info",attrs:{"type":"text","id":"Birthday"}})]),_vm._v(" "),_c('td'),_vm._v(" "),_c('td')])]),_vm._v(" "),_c('x-multi-level',{attrs:{"show":_vm.showBank,"title":"国籍","data":_vm.bankData,"pcode":"NUM_ITEM_DIC","pname":"VLU_ITEM_DIC"},on:{"cancel":_vm.onCancelBank,"confirm":_vm.onChooseBank}}),_vm._v(" "),_c('x-multi-level',{attrs:{"show":_vm.showBranch,"title":"民族","data":_vm.branchData,"pcode":"NUM_ITEM_DIC","pname":"VLU_ITEM_DIC"},on:{"cancel":_vm.onCancelBranch,"confirm":_vm.onChooseBranch}}),_vm._v(" "),_c('p',{staticClass:"tips",attrs:{"id":"notice"}}),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"btn_back"}},[_vm._v("上 一 步")]),_vm._v(" "),_c('button',{staticClass:"btn",attrs:{"id":"btn_sure"}},[_vm._v("下 一 步")])])],1)}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-0f9c181e"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0f9c181e", __vue__options__)
  } else {
    hotAPI.reload("data-v-0f9c181e", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],387:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
		value: true
});
exports.default = {
		mounted: function mounted() {
				document.getElementById("btn_sure1").onclick = onSure;
				function onSure(e) {
						onContinue();
				}
		}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"ShowReason"}}),_vm._v(" "),_c('div',{staticClass:"modal_btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"btn_sure1"}},[_vm._v("确   定")])]),_vm._v(" "),_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/交易已被取消请看屏幕提示.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}})],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-da19d138", __vue__options__)
  } else {
    hotAPI.reload("data-v-da19d138", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],388:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  mounted: function mounted() {
    document.getElementById("btn_back").onclick = onBack;
    function onBack(e) {
      onCancel();
    }
    document.getElementById("btn_sure").onclick = onSure;
    function onSure(e) {
      onContinue();
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"ShowReason"}}),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn disp_none",attrs:{"id":"btn_back"}},[_vm._v("结束")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn disp_none",attrs:{"id":"btn_sure"}},[_vm._v("返回")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0cbe7d93", __vue__options__)
  } else {
    hotAPI.reload("data-v-0cbe7d93", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],389:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  mounted: function mounted() {
    document.getElementById("btn_back").onclick = onBack;
    function onBack(e) {
      onCancel();
    }
    document.getElementById("btn_sure").onclick = onSure;
    function onSure(e) {
      onContinue();
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"ShowReason"}}),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn disp_none",attrs:{"id":"btn_back"}},[_vm._v("确   定")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn disp_none",attrs:{"id":"btn_sure"}},[_vm._v("资料修改")])]),_vm._v(" "),_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/信息完善.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}})],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-3c1e5b9b", __vue__options__)
  } else {
    hotAPI.reload("data-v-3c1e5b9b", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],390:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  mounted: function mounted() {
    document.getElementById("btn_back").onclick = onBack;
    function onBack(e) {
      onCancel();
    }
    document.getElementById("btn_sure").onclick = onSure;
    function onSure(e) {
      onContinue();
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"ShowReason"}}),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn disp_none",attrs:{"id":"btn_back"}},[_vm._v("取   消")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn disp_none",attrs:{"id":"btn_sure"}},[_vm._v("继   续")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-610c460c", __vue__options__)
  } else {
    hotAPI.reload("data-v-610c460c", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],391:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	mounted: function mounted() {
		var intTime = $("#Ver_CountDown").html();
		if (intTime <= 0) {
			intTime = 30;
		}
		$("#Ver_CountDown").html(intTime);
		function setTimeHtml() {
			intTime -= 1;
			if (intTime <= 0) {
				clearInterval(interval);
				exitScene("STA_CONTINUE");
			}
			$("#Ver_CountDown").html(intTime);
		}
		var interval = setInterval(setTimeHtml, 1000);
		$("#ShowReason").html("应用未重启，请重启机器！");

		document.getElementById("btn_sure").onclick = onSure;
		function onSure(e) {
			$("#ShowReason").html("正在重启机器，请稍候...");
			clearInterval(interval);
			exitScene("STA_CONTINUE");
		}
	}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"time",attrs:{"id":"Ver_CountDown"}})])]),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"ShowReason"}}),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"btn_sure"}},[_vm._v("重   启")])])])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-3c55d851", __vue__options__)
  } else {
    hotAPI.reload("data-v-3c55d851", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],392:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".ul_Result_scroll[data-v-e4e07d16]{\r\n    margin:2% 38%;\r\n    width: 60%;\r\n}\r\n .ReceiptQRImage[data-v-e4e07d16] {\r\n\tposition:absolute;\r\n\tfloat:left;\r\n\tbottom:45%;\r\n\tleft:3%;\r\n\twidth:360px;\r\n\theight:360px\r\n}\r\n .ReceiptQRImage img[data-v-e4e07d16]{\r\n\t\twidth:100%;\r\n}\r\n.QRCode[data-v-e4e07d16] {\r\n\tposition:absolute;\r\n\tfloat:left;\r\n\tbottom:0%;        \r\n}  \r\n@media screen and (max-height: 850px) {\r\n     .ReceiptQRImage[data-v-e4e07d16] {\r\n        width: 310px;\r\n        height: 310px;\r\n        bottom:43%;\r\n     }\r\n     .ReceiptQRImage img[data-v-e4e07d16] {\r\n        width: 80%;\r\n     }\r\n    .QRCode img[data-v-e4e07d16]{\r\n       max-width: 80%;       \r\n    }  \r\n    .ul_Result_scroll[data-v-e4e07d16]{\r\n        width: 60%;\r\n        max-height: 480px;\r\n        font-size: 2.6rem;\r\n    }       \r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        DataTools.get("GD_A01_Cust_RQImgName", function (data) {
            $("#IMG").attr("src", data);
        });
        document.getElementById("btn_back").onclick = onBack;
        function onBack(e) {
            onCancel();
        }
        document.getElementById("btn_sure").onclick = onSure;
        function onSure(e) {
            onContinue();
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title",attrs:{"id":"title"}},[_vm._v("交易已结束，请仔细核对交易结果")]),_vm._v(" "),_c('div',{staticClass:"ReceiptQRImage",staticStyle:{"display":"none"},attrs:{"id":"QRIMG"}},[_c('img',{attrs:{"id":"IMG","src":""}})]),_vm._v(" "),_c('div',{staticClass:"QRCode",staticStyle:{"display":"none"},attrs:{"id":"QRGIF"}},[_c('img',{attrs:{"src":"img/二维码动画.gif"}})]),_vm._v(" "),_c('ul',{staticClass:"ul_Result_scroll",attrs:{"id":"TranList"}}),_vm._v(" "),_c('p',{staticClass:"tips",staticStyle:{"display":"none"},attrs:{"id":"tip"}},[_vm._v("对不起，暂无法提供回单打印服务，请仔细核对交易结果")]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"btn_back"}},[_vm._v("不 打 印")]),_vm._v(" "),_c('button',{staticClass:"btn",attrs:{"id":"btn_sure"}},[_vm._v("打   印")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-e4e07d16"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-e4e07d16", __vue__options__)
  } else {
    hotAPI.reload("data-v-e4e07d16", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],393:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".ul_Result_scroll[data-v-e1af9b86]{\r\n    margin:2% 38%;\r\n    width: 60%;\r\n}\r\n .ReceiptQRImage[data-v-e1af9b86] {\r\n\tposition:absolute;\r\n\tfloat:left;\r\n\tbottom:45%;\r\n\tleft:3%;\r\n\twidth:360px;\r\n\theight:360px\r\n}\r\n .ReceiptQRImage img[data-v-e1af9b86]{\r\n\t\twidth:100%;\r\n}\r\n.QRCode[data-v-e1af9b86] {\r\n\tposition:absolute;\r\n\tfloat:left;\r\n\tbottom:0%;        \r\n}  \r\n@media screen and (max-height: 850px) {\r\n     .ReceiptQRImage[data-v-e1af9b86] {\r\n        width: 310px;\r\n        height: 310px;\r\n        bottom:43%;\r\n     }\r\n    .QRCode img[data-v-e1af9b86]{\r\n       max-width: 80%;       \r\n    }  \r\n    .ul_Result_scroll[data-v-e1af9b86]{\r\n        width: 60%;\r\n        max-height: 480px;\r\n        font-size: 2.6rem;\r\n    }       \r\n}\r\n@media screen and (max-height: 780px) {\r\n  .btnbox[data-v-e1af9b86]{\r\n      bottom: 0%;\r\n  }\r\n  .tips[data-v-e1af9b86]{\r\n      position: absolute;\r\n      bottom: 5%; \r\n      left: 30%\r\n  }\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        DataTools.get("GD_A01_Cust_RQImgName", function (data) {
            $("#IMG").attr("src", data);
        });
        document.getElementById("btn_sure").onclick = onSure;
        function onSure(e) {
            onContinue();
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title",attrs:{"id":"title"}},[_vm._v("请仔细核对交易结果")]),_vm._v(" "),_c('div',{staticClass:"ReceiptQRImage",staticStyle:{"display":"none"},attrs:{"id":"QRIMG"}},[_c('img',{attrs:{"id":"IMG","src":""}})]),_vm._v(" "),_c('div',{staticClass:"QRCode",staticStyle:{"display":"none"},attrs:{"id":"QRGIF"}},[_c('img',{attrs:{"src":"img/二维码动画.gif"}})]),_vm._v(" "),_c('ul',{staticClass:"ul_Result_scroll",attrs:{"id":"TranList"}}),_vm._v(" "),_c('p',{staticClass:"tips",attrs:{"id":"tip"}},[_vm._v("对不起，暂无法提供回单打印服务，请仔细核对交易结果")]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"btn_sure"}},[_vm._v("确    定")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-e1af9b86"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-e1af9b86", __vue__options__)
  } else {
    hotAPI.reload("data-v-e1af9b86", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],394:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".notice[data-v-817ac030]{\n        position:absolute;\n\t\tbottom:25%;\n\t\twidth:60%;\n\t\ttext-align:center;\n\t\tleft:20%;\n\t}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	mounted: function mounted() {
		var intTime = $("#Ver_CountDown").html();
		if (intTime <= 0) {
			intTime = 30;
		}
		$("#Ver_CountDown").html(intTime);
		function setTimeHtml() {
			intTime -= 1;
			if (intTime <= 0) {
				clearInterval(interval);
				exitScene("STA_CONTINUE");
			}
			$("#Ver_CountDown").html(intTime);
		}
		var interval = setInterval(setTimeHtml, 1000);
		DataTools.get("RP_THRespCode|RP_THRespMsg", function (data) {
			var strRespCode = data[0];
			var strRespMsg = data[1];
			$("#ShowReason").html(strRespMsg + "<br>" + strRespCode);
		});

		document.getElementById("btn_sure").onclick = onSure;
		function onSure(e) {
			$("#ShowReason").html("正在关闭机器，请稍候...");
			clearInterval(interval);
			exitScene("STA_CONTINUE");
		}
	}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:"header"},[_c('div',{staticClass:"header_rightarea"},[_c('div',{staticClass:"time",attrs:{"id":"Ver_CountDown"}})])]),_vm._v(" "),_c('main',{staticClass:"main"},[_c('div',{staticClass:"pub_content"},[_c('div',{staticClass:"panel"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"ShowReason"}}),_vm._v(" "),_c('p',{staticClass:"notice"},[_vm._v("温馨提示：请先联系科技部门更新版本,再启动机器！")]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"btn_sure"}},[_vm._v("关   机")])])])])])])}]
__vue__options__._scopeId = "data-v-817ac030"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-817ac030", __vue__options__)
  } else {
    hotAPI.reload("data-v-817ac030", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],395:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	mounted: function mounted() {
		document.getElementById("btn_back1").onclick = onBack;
		function onBack() {
			exitScene("STA_CANCEL");
		}

		document.getElementById("btn_sure1").onclick = onSure;
		function onSure() {
			exitScene("STA_CONTINUE");
		}
	}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticStyle:{"text-align":"center","font-size":"2.7rem","top":"30%","position":"relative"}},[_vm._v("电子签名故障，是否继续办理业务？")]),_vm._v(" "),_c('div',{staticClass:"modal_btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"btn_back1"}},[_vm._v("结束办理")]),_vm._v(" "),_c('button',{staticClass:"btn",attrs:{"id":"btn_sure1"}},[_vm._v("继续办理")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-e35fdf50", __vue__options__)
  } else {
    hotAPI.reload("data-v-e35fdf50", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],396:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".x-hsgif[data-v-01dbbc57]{\r\n    width: 50%;\r\n    margin: 0% auto;\r\n}\r\n.x-hsgif img[data-v-01dbbc57]{\r\n    width: 100%;\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        var vm = this;
        DataTools.get("GD_A01_Cust_RejectMediaID|GD_CodPid", function (data) {
            switch (data[0]) {
                case "IDC":case "IDCIC":case "MAG":
                    $(".title").html("请收好您的银行卡");
                    $(".x-hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "TakeCard.gif"));
                    $("#bg").empty();
                    $("#bg").html('<EMBED id="sound" name="ViewSound" SRC="wav/请收好您的银行卡.wav" Loop=false AUTOSTART=true Hidden=true MASTERSOUND></EMBED>');
                    break;
                case "SIM":
                    $(".title").html("请收好您的银行卡");
                    $(".x-hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "TakePICCard.gif"));
                    $("#bg").empty();
                    $("#bg").html('<EMBED id="sound" name="ViewSound" SRC="wav/请收好您的银行卡.wav" Loop=false AUTOSTART=true Hidden=true MASTERSOUND></EMBED>');
                    break;
                case "PPR":
                    $(".title").html("请收好您的存折");
                    $(".x-hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "DispensePassbook.gif"));
                    $("#bg").empty();
                    $("#bg").html('<EMBED id="sound" name="ViewSound" SRC="wav/请收好您的存折.wav" Loop=false AUTOSTART=true Hidden=true MASTERSOUND></EMBED>');
                    break;
                case "ID":
                    $(".title").html("请收好您的身份证件");
                    switch (data[1]) {
                        case "110001":
                            $(".x-hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "TakeIDCard.gif"));
                            break;
                        case "110037":
                            $(".x-hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "TakeForeignerCard.gif"));
                            break;
                        default:
                            $(".x-hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "TakeIDCard.gif"));
                            break;
                    }
                    $("#bg").empty();
                    $("#bg").html('<EMBED id="sound" name="ViewSound" SRC="wav/请收好您的身份证件.wav" Loop=false AUTOSTART=true Hidden=true MASTERSOUND></EMBED>');
                    break;
                default:
                    $(".title").html("请收好您的银行卡");
                    $(".x-hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "TakeCard.gif"));
                    $("#bg").empty();
                    $("#bg").html('<EMBED id="sound" name="ViewSound" SRC="wav/请收好您的银行卡.wav" Loop=false AUTOSTART=true Hidden=true MASTERSOUND></EMBED>');
                    break;
            }
        });
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"}),_vm._v(" "),_c('div',{staticClass:"x-hsgif"},[_c('img',{attrs:{"src":""}})]),_vm._v(" "),_c('div',{staticStyle:{"display":"none"},attrs:{"id":"bg"}})])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-01dbbc57"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-01dbbc57", __vue__options__)
  } else {
    hotAPI.reload("data-v-01dbbc57", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],397:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert("img[data-v-24ec4a62]{\r\n    display: block;\r\n    margin: auto;\r\n    width: 20%;\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        document.getElementById("AD_btn_back").onclick = AD_btn_back;
        function AD_btn_back() {
            pageLog("STA_CANCEL.");
            exitScene("STA_CANCEL");
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('div',{staticClass:"modal_tradingBox",attrs:{"id":"modal_tradingBox"}},[_c('div',[_c('img',{attrs:{"src":_vm.$root.imgPath('img/loading.gif')}}),_vm._v("交易正在进行，请稍候...")])]),_vm._v(" "),_vm._m(0)])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"modal_btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"AD_btn_back"}},[_vm._v("取   消")])])}]
__vue__options__._scopeId = "data-v-24ec4a62"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-24ec4a62", __vue__options__)
  } else {
    hotAPI.reload("data-v-24ec4a62", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],398:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert("img[data-v-41791530]{\r\n    display: block;\r\n    margin: auto;\r\n    width: 20%;\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        var strTransTip = getTransTip();
        if (strTransTip != null && strTransTip != "") {
            $("#TradingTip").html(strTransTip);
        } else {
            $("#TradingTip").html("交易正在进行，请稍候...");
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('div',{staticClass:"modal_tradingBox",attrs:{"id":"modal_tradingBox"}},[_c('div',[_c('img',{attrs:{"src":_vm.$root.imgPath('img/loading.gif')}}),_vm._v(" "),_c('div',{attrs:{"id":"TradingTip"}},[_vm._v("交易正在进行，请稍候...")])])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-41791530"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-41791530", __vue__options__)
  } else {
    hotAPI.reload("data-v-41791530", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],399:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".title[data-v-b9628d00] {\n    position: relative;\n    padding-top: 2%;\n    font-size: 4.3rem;\n    text-align: center;\n    color: #008B6E;\n    letter-spacing: 3px;\n}\n.title[data-v-b9628d00]:after {\n    content: \"\";\n    border-top: 2px solid #008B6E;\n    display: inline-block;\n    position: relative;\n    width: 300px;\n    top: -16px;\n    right: -28px;\n}\n.title[data-v-b9628d00]:before {\n    content: \"\";\n    border-top: 2px solid #008B6E;\n    display: inline-block;\n    position: relative;\n    width: 300px;\n    top: -16px;\n    left: -28px;\n}\n.inputIDinfo[data-v-b9628d00]{   \n    font-size:3.6rem;\n    margin:0 auto;\n    margin-top:2%;\n    line-height:100px;\n}\n.IDinfoleft[data-v-b9628d00]{    \n    text-align:right; \n}\n.IDinforight[data-v-b9628d00]{ \n    text-align:left;\n    color:#6600ff;\n}\n.btn[data-v-b9628d00]{   \n    padding:10px 22px;\n    font-size:3rem;\n    color:#fff;\n}\n.btnbox[data-v-b9628d00] {\n    position: absolute;\n    bottom: 29%;\n    width: 100%;\n    text-align: center;\n}\n.input_info[data-v-b9628d00]{    \n    height: 60px;\n    border: 1px solid #008B6E;\n    border-radius: 10px;\n    box-shadow: inset 2px 5px 16px 0px #CDCDCD;\n    font-size: 3.6rem;\n    padding: 0px 10px;\n    color:#6600ff;\n}\n@media screen and (max-height: 780px) {\n.btnbox[data-v-b9628d00]{\n  bottom: 15%;\n  }\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _vuex = require("vuex");

exports.default = {
    data: function data() {
        return {
            setKeys: ["GD_NumPid", "GD_NamCust"],
            InputIDInfo: "输入证件信息",
            IDType: "证件类型：",
            CustomerName: "客户姓名：",
            CustomerNameInput: "",
            strIdcardType: "",
            IDNumber: "证件号码：",
            IDNumberInput: "",
            IsOnlyNum: false,
            IsOnlyEng: false,
            maxlength: 22,
            NumPidErr: ""
        };
    },

    computed: _extends({}, (0, _vuex.mapState)(['pool'])),
    methods: _extends({
        initPage: function initPage() {
            this.initPool(this.$data);
        },
        onBack: function onBack() {
            exitScene("STA_BACK");
        },
        onSure: function onSure() {
            if (!this.validate()) return;
            this.submit(this.setKeys);
            this.onContinue();
        },
        onIDNumClick: function onIDNumClick() {
            if (this.IsOnlyNum == false) {
                ShowEngKB('-1', '-1', 'IDNum', '证件号码');
            } else {
                ShowNumberKB('-2', '-2', 'IDNum', '证件号码');
            }
        },
        onCustomerNameClick: function onCustomerNameClick() {
            if (this.IsOnlyEng == true) {
                ShowEngKB('-1', '-1', 'IDName', '客户姓名');
            } else {
                ShowPinyinKB('-1', '-1', 'IDName', '客户姓名');
            }
        },
        validate: function validate() {
            var CustomerNameInput = $("#IDName").val();
            var IDNumberInput = $("#IDNum").val();
            if (CustomerNameInput.length == 0) {
                this.NumPidErr = "请输入您的姓名";
                return false;
            }
            if (IDNumberInput.length == 0) {
                this.NumPidErr = "请输入您的证件号码";
                return false;
            }
            if (this.strIdcardType != "110025") {
                if (!checkDocumentNum(IDNumberInput, this.strIdcardType)) {
                    this.NumPidErr = "请输入正确的证件号码";
                    return false;
                }
            }
            this.pool.GD_NumPid = IDNumberInput;
            this.pool.GD_NamCust = CustomerNameInput;
            return true;
        },
        onClearNumPidErr: function onClearNumPidErr() {
            this.NumPidErr = "";
        }
    }, (0, _vuex.mapActions)(['initPool', 'fetch', 'submit', 'onCancel', 'onContinue'])),
    mounted: function mounted() {
        this.initPage();
        var vm = this;
        var maxlength = 0;
        var reg = /^([a-z]|[A-Z]|[0-9])*$/;
        var regEx = /^([a-z]|[A-Z]|[0-9])*$/;
        var MsgEx = "";
        var CheckPos = 1;
        DataTools.get("GD_CodPid|GD_NumPid", function (data) {
            var strIDtype = "";
            vm.strIdcardType = data[0];
            switch (data[0]) {
                case "110001":
                    strIDtype = "二代身份证";
                    maxlength = 18;
                    vm.IsOnlyNum = true;
                    reg = /^[0-9]*$/;
                    regEx = /^[0-9]*$/;
                    MsgEx = "二代身份证首位只能为数字";
                    break;
                case "110019":
                    strIDtype = "港澳居民来往内地通行证";
                    maxlength = 9;
                    regEx = /^[HM]{1}$/;
                    MsgEx = "港澳居民来往内地通行证首位只能为“H”或“M”";
                    setVar("GD_CodCertOrg", "公安部");
                    break;
                case "110021":
                    strIDtype = "台湾居民来往大陆通行证";
                    maxlength = 8;
                    vm.IsOnlyNum = true;
                    reg = /^[0-9]*$/;
                    regEx = /^[0-9]{1}$/;
                    setVar("GD_CodCertOrg", "公安部");
                    break;
                case "110037":
                    strIDtype = "外国人永久居留证";
                    vm.IsOnlyEng = true;
                    maxlength = 15;
                    CheckPos = 3;
                    regEx = /^[a-zA-Z]{1}$/;
                    strIDtype = "外国人永久居留证";
                    MsgEx = "外国人永久居留证前3位只能为字母";
                    setVar("GD_CodCertOrg", "公安部");
                    break;
                case "110025":
                    strIDtype = "外国护照";
                    vm.IsOnlyEng = true;
                    maxlength = 18;
                    break;
                default:
                    strIDtype = "";
                    break;
            }
            $("#IDTypeSelect").html(strIDtype);
        });
        document.getElementById("IDName").oninput = onIDName;
        function onIDName() {
            var writing = $(this).val();
            var writinglen = writing.replace(/[^\x00-\xff]/g, "01").length;
            if (writinglen > 40) {
                writing = writing.substr(0, writing.length - 1);
                $(this).val(writing);
            }
        }
        document.getElementById("IDNum").oninput = onIDNum;
        function onIDNum() {
            var writing = $(this).val();
            var writinglen = writing.length;
            var bShowLastValue = true;
            var tmpStrErr = "";
            var strLastVal = writing.substr(writinglen - 1, 1);

            if (!reg.test(writing) || writinglen > maxlength) {
                bShowLastValue = false;
            } else {
                if (writinglen <= CheckPos) {
                    if (!regEx.test(strLastVal) && strLastVal != "") {
                        bShowLastValue = false;
                        tmpStrErr = MsgEx;
                    }
                } else if (vm.strIdcardType == "110037") {
                    var regNum = /^[0-9]*$/;
                    if (!regNum.test(strLastVal)) {
                        bShowLastValue = false;
                        tmpStrErr = MsgEx;
                    }
                }
            }
            if (bShowLastValue == false) {
                writing = writing.substr(0, writinglen - 1);
                $(this).val(writing);
            }
            vm.NumPidErr = tmpStrErr;
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v(_vm._s(_vm.InputIDInfo))]),_vm._v(" "),_c('table',{staticClass:"inputIDinfo"},[_c('tr',[_c('td',{staticClass:"IDinfoleft"},[_vm._v(_vm._s(_vm.IDType))]),_vm._v(" "),_c('td',{staticClass:"IDinforight",attrs:{"id":"IDTypeSelect"}})]),_vm._v(" "),_c('tr',[_c('td',{staticClass:"IDinfoleft"},[_vm._v(_vm._s(_vm.CustomerName))]),_vm._v(" "),_c('td',{staticClass:"IDinforight"},[_c('input',{staticClass:"input_long",staticStyle:{"width":"580px"},attrs:{"maxlength":"40","id":"IDName","type":"text","onblur":"HideKB()"},on:{"click":_vm.onCustomerNameClick,"focus":_vm.onClearNumPidErr}})])]),_vm._v(" "),_c('tr',[_c('td',{staticClass:"IDinfoleft"},[_vm._v(_vm._s(_vm.IDNumber))]),_vm._v(" "),_c('td',{staticClass:"IDinforight"},[_c('input',{staticClass:"input_long",staticStyle:{"width":"580px"},attrs:{"maxlength":"22","id":"IDNum","type":"text","onblur":"HideKB()"},on:{"focus":_vm.onClearNumPidErr,"click":_vm.onIDNumClick}})])])]),_vm._v(" "),_c('p',{staticClass:"tips",attrs:{"id":"noticeCheckCode"}},[_vm._v(_vm._s(_vm.NumPidErr))]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"btn_back"},on:{"click":_vm.onBack}},[_vm._v("上一步")]),_vm._v(" "),_c('button',{staticClass:"btn",attrs:{"id":"btn_sure"},on:{"click":_vm.onSure}},[_vm._v("下一步")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-b9628d00"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-b9628d00", __vue__options__)
  } else {
    hotAPI.reload("data-v-b9628d00", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300,"vuex":"vuex"}],400:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".auditorC[data-v-931098d4]{\r\n\tborder: 0px solid #008B6E;\r\n\twidth: 60%;\r\n\theight: 70%;\r\n\tmargin:50px auto;\r\n\tdisplay: flex;\r\n\tjustify-content:center;\r\n\talign-items: center\r\n}\r\n.auditorC img[data-v-931098d4]{\r\n\twidth:50%;\r\n}\r\n.auditorcR[data-v-931098d4]{\r\n\r\n\tposition: absolute;\r\n\twidth:18%;\r\n\theight: 40%;\r\n\tdisplay: inline-block;\t\r\n\tright:0.8%;\r\n\tbottom: 1%;\r\n}\r\n.auditorcR img[data-v-931098d4]{\r\n\twidth:95%;\t\r\n}")
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title",attrs:{"id":"RemoteTips"}},[_vm._v("正在等待授权，请稍候")]),_vm._v(" "),_c('div',{staticClass:"auditorC"},[_c('img',{attrs:{"src":"img/loading.gif"}})]),_vm._v(" "),_c('div',{staticClass:"auditorcR"},[_c('img',{attrs:{"id":"idc_img","src":"img/审核员.png"}})]),_vm._v(" "),_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/正在等待授权，请稍后.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}})],1)}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-931098d4"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-931098d4", __vue__options__)
  } else {
    hotAPI.reload("data-v-931098d4", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],401:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	mounted: function mounted() {
		document.getElementById("btn_back").onclick = onBack;
		function onBack() {
			onCancel();
		}
		document.getElementById("btn_sure").onclick = onSure;
		function onSure() {
			onContinue();
		}
	}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"ShowReason"}}),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn disp_none",attrs:{"id":"btn_back"}},[_vm._v("取   卡")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn disp_none",attrs:{"id":"btn_sure"}},[_vm._v("继   续")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4b4fed92", __vue__options__)
  } else {
    hotAPI.reload("data-v-4b4fed92", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],402:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("确认转账信息")]),_vm._v(" "),_c('div',{staticClass:"info_conf"},[_c('table',{staticClass:"infor_table"},[_c('tr',[_c('td',[_vm._v("受理账户：")]),_vm._v(" "),_c('td',{attrs:{"id":""}},[_vm._v(_vm._s(22222222222222222222222))])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("客户姓名：")]),_vm._v(" "),_c('td',{attrs:{"id":""}},[_vm._v("{{}}")])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("交易终端：")]),_vm._v(" "),_c('td',{attrs:{"id":""}},[_vm._v("{{}}")])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("交易类型：")]),_vm._v(" "),_c('td',{attrs:{"id":""}},[_vm._v("{{}}")])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("购买金额：")]),_vm._v(" "),_c('td',{attrs:{"id":""}},[_vm._v("{{}}")])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("客户风险等级：")]),_vm._v(" "),_c('td',{attrs:{"id":""}},[_vm._v("{{}}")])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("交易时间：")]),_vm._v(" "),_c('td',{attrs:{"id":""}},[_vm._v("{{}}")])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("交易日期：")]),_vm._v(" "),_c('td',{attrs:{"id":""}},[_vm._v("{{}}")])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("交易结果：")]),_vm._v(" "),_c('td',{attrs:{"id":""}},[_vm._v("{{}}")])])]),_vm._v(" "),_c('p',{staticClass:"tips"},[_vm._v("温馨提示：您的客户信息不完善，请携带有效证件到网点办理！")])]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"btn_back"}},[_vm._v("上一步")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_sure"}},[_vm._v("确认")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5e062e76", __vue__options__)
  } else {
    hotAPI.reload("data-v-5e062e76", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],403:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        document.getElementById("modal_btn_back").onclick = onModalBack;
        function onModalBack() {
            $("#goodcover").fadeOut('500');
            $("#FingerID").val("");
            exitScene("STA_CANCEL");
        }

        document.getElementById("modal_btn_sure").onclick = onModalSure;
        function onModalSure() {
            var FingerID = $("#FingerID").val();
            setVar("GD_UsrNum", FingerID);
            setVar("GD_A01_BUS_NUM_UR_CFM", FingerID);
            exitScene("STA_CONTINUE");
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('p',{staticClass:"modal_title"},[_vm._v("请联系审核员输入指纹编号")]),_vm._v(" "),_vm._m(0),_vm._v(" "),_vm._m(1),_vm._v(" "),_c('EMBED',{attrs:{"name":"PopupSound","SRC":"wav/请联系审核员输入指纹编号.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}})],1)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:"documentinfolist"},[_c('li',[_c('span',[_c('b',{staticClass:"must"},[_vm._v("*")]),_vm._v("指纹编号：")]),_c('input',{staticClass:"input_amount",attrs:{"type":"text","id":"FingerID","onclick":"ShowPinyinKB('-1','-1','FingerID','指纹编号：')","onblur":"HideKB()"}})])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"modal_btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"modal_btn_back"}},[_vm._v("取   消")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"modal_btn_sure"}},[_vm._v("确   定")])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-e58fa724", __vue__options__)
  } else {
    hotAPI.reload("data-v-e58fa724", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],404:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".province[data-v-0c41f81e], .city[data-v-0c41f81e], .district[data-v-0c41f81e] {\n    display:inline-block;\n}\n.province .swiper-container[data-v-0c41f81e],.city .swiper-container[data-v-0c41f81e],.district .swiper-container[data-v-0c41f81e]  {\n    width: 280px;\n    height: 400px;\n    margin:10px 20px 20px 10px;\n}\n.swiper-slideN[data-v-0c41f81e] {\n    text-align: center;\n    font-size: 2.5rem;\n    background-color: transparent;\n    /* Center slide text vertically */\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    -webkit-justify-content: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    -webkit-align-items: center;\n    align-items: center;\n}\n.activeSlide[data-v-0c41f81e]{\n    font-weight: bold;\n}\n.citySelector[data-v-0c41f81e]{\n    position:relative;\n    margin:10px auto;\n    width:90%;\n    height:65%;\n    text-align:center;\n    color:#008B6E;\n}\n.selectSlide[data-v-0c41f81e]{\n    width:100%;\n    height:77px;\n    position:absolute;\n    z-index: 1;\n    top:38%;\n    background-color: #bfbfbf;\n    opacity: 0.4;\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        var indexPro = 0;
        var indexCty = 0;
        var indexDst = 0;
        var swiperPro = new Swiper('.province .swiper-container', {
            direction: "vertical",

            slideActiveClass: 'activeSlide',
            slidesPerView: 5,
            spaceBetween: 3,
            loopedSlides: 5,
            centeredSlides: true,
            slideToClickedSlide: true,
            onSlideChangeEnd: function onSlideChangeEnd(swiperPro) {
                swiperCty.removeAllSlides();
                swiperDst.removeAllSlides();
                indexPro = swiperPro.activeIndex;
                initCity();
                swiperCty.update();
            }
        });
        var swiperCty = new Swiper('.city .swiper-container', {
            direction: "vertical",

            slideActiveClass: 'activeSlide',
            slidesPerView: 5,
            spaceBetween: 3,
            loopedSlides: 5,
            centeredSlides: true,
            slideToClickedSlide: true,
            onSlideChangeEnd: function onSlideChangeEnd(swiperCty) {
                swiperDst.removeAllSlides();
                indexCty = swiperCty.activeIndex;
                initDistrict();
                swiperDst.update();
            },
            onClick: function onClick(swiperCty) {
                swiperDst.removeAllSlides();
                indexCty = swiperCty.activeIndex;
                initDistrict();
                swiperDst.update();
            }
        });
        var swiperDst = new Swiper('.district .swiper-container', {
            direction: "vertical",

            slideActiveClass: 'activeSlide',
            slidesPerView: 5,
            spaceBetween: 3,
            loopedSlides: 5,
            centeredSlides: true,
            slideToClickedSlide: true,
            onSlideChangeEnd: function onSlideChangeEnd(swiperDst) {
                indexDst = swiperDst.activeIndex;
            }
        });

        var str = [{ "province": "广东省", "ctyList": [{ "city": "深圳市", "dstList": ["南山区_10000", "龙岗区_40000", "罗湖区_60000", "宝安区_80000", "盐田区_12000", "福田区_30000"] }, { "city": "汕头市", "dstList": ["龙湖区_10001", "濠江区_10002", "潮南区_10003", "南澳县_10004", "金平区_10005", "潮阳区_10006", "澄海区"] }, { "city": "珠海市", "dstList": ["香洲区_11000", "金湾区_12000", "斗门区_13000"] }, { "city": "惠州市", "dstList": ["惠城区_14000", "博罗县_15000", "龙门县_16000", "惠阳区_17000", "惠东县_18000"] }, { "city": "佛山市", "dstList": ["三水区", "禅城区", "顺德区", "高明区", "南海区"] }] }, { "province": "北京市", "ctyList": [{ "city": "北京市", "dstList": ["通县", "西城区", "宣武区", "丰台区", "海淀区", "房山区", "顺义区", "大兴区", "平谷区", "延庆区", "东城区", "崇文区", "朝阳区", "石景山区", "门头沟区", "通州区", "昌平区", "怀柔区", "密云县"] }] }, { "province": "内蒙古自治区", "ctyList": [{ "city": "锡林郭勒盟", "dstList": ["锡林浩特市", "多伦县", "苏尼特右旗", "西乌珠穆沁旗", "正镶白旗", "二连浩特市", "阿马嗄旗", "阿巴嘎旗", "苏尼特左旗", "东乌珠穆沁旗", "太仆寺旗", "正蓝旗", "镶黄旗"] }, { "city": "兴安盟", "dstList": ["科尔沁右翼中旗", "突泉县", "科右中旗", "科尔沁右翼前旗", "扎赉特旗", "乌兰浩特市", "阿尔山市"] }, { "city": "阿拉善盟", "dstList": ["阿拉善左旗", "前郭尔罗斯蒙古族自治县", "阿拉善右旗"] }] }, { "province": "江苏省", "ctyList": [{ "city": "南京市", "dstList": ["玄武区", "秦淮区", "鼓楼区"] }] }, { "province": "上海市", "ctyList": [{ "city": "上海市", "dstList": ["黄浦区", "浦东新区", "嘉定区"] }] }, { "province": "黑龙江省", "ctyList": [{ "city": "哈尔滨市", "dstList": ["松北区", "木兰县", "方正县"] }] }, { "province": "吉林省", "ctyList": [{ "city": "长春市", "dstList": ["农安县", "绿园区", "二道区"] }] }, { "province": "辽宁省", "ctyList": [{ "city": "沈阳市", "dstList": ["大东区", "苏家屯区", "于洪区"] }] }, { "province": "浙江省", "ctyList": [{ "city": "杭州市", "dstList": ["西湖区", "萧山区", "桐庐县"] }] }, { "province": "安徽省", "ctyList": [{ "city": "合肥市", "dstList": ["庐阳区", "肥东县"] }] }, { "province": "福建省", "ctyList": [{ "city": "福州市", "dstList": ["鼓楼区"] }] }, { "province": "广西壮族自治区", "ctyList": [{ "city": "南宁市", "dstList": ["青秀区"] }] }];

        function initProvince() {
            for (var i = 0; i < str.length; i++) {
                swiperPro.appendSlide("<div class=\"swiper-slide swiper-slideN\">" + str[i]["province"] + "</div>");
            }
        }
        function initCity() {
            for (var j = 0; j < str[indexPro]["ctyList"].length; j++) {
                swiperCty.appendSlide("<div class=\"swiper-slide swiper-slideN\">" + str[indexPro].ctyList[j]["city"] + "</div>");
            }
        }
        function initDistrict() {
            for (var j = 0; j < str[indexPro].ctyList[indexCty]["dstList"].length; j++) {
                swiperDst.appendSlide("<div class=\"swiper-slide swiper-slideN\">" + str[indexPro].ctyList[indexCty].dstList[j].split("_")[0] + "</div>");
            }
        }
        initProvince();
        initCity();
        initDistrict();
        $("#btn_sure").click(function () {
            exitScene("STA_CONTINUE");
        });
        $("#btn_back").click(function () {
            exitScene("STA_CANCEL");
        });
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('div',{staticClass:"x-modal"},[_c('p',{staticClass:"modal_title"},[_vm._v("省市区选择")]),_vm._v(" "),_c('div',{staticClass:"citySelector"},[_c('div',{staticClass:"selectSlide"}),_vm._v(" "),_c('div',{staticClass:"province"},[_c('div',{staticClass:"swiper-container"},[_c('div',{staticClass:"swiper-wrapper"})])]),_vm._v(" "),_c('div',{staticClass:"city"},[_c('div',{staticClass:"swiper-container"},[_c('div',{staticClass:"swiper-wrapper"})])]),_vm._v(" "),_c('div',{staticClass:"district"},[_c('div',{staticClass:"swiper-container"},[_c('div',{staticClass:"swiper-wrapper"})])])]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"btn_back"}},[_vm._v("返   回")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_sure"}},[_vm._v("确   定")])])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-0c41f81e"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0c41f81e", __vue__options__)
  } else {
    hotAPI.reload("data-v-0c41f81e", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],405:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  mounted: function mounted() {}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-dialog',{attrs:{"title":"请定制弹框内容2","timeout":15}},[_c('ul',{staticClass:"documentinfolist"})])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-bd69a902", __vue__options__)
  } else {
    hotAPI.reload("data-v-bd69a902", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],406:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".echarts[data-v-40720ace] {\n  width: 400px;\n  height: 400px;\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  data: function data() {
    return {
      loading: false,
      line: {
        title: {
          text: '利率图表示例'
        },
        tooltip: {},
        xAxis: {
          data: ['9/1', '9/2', '9/3', '9/4', '9/5', '9/6']
        },
        yAxis: {},
        series: [{
          name: 'Rates',
          type: 'line',
          data: [5, 20, 36, 10, 10, 20]
        }]
      }
    };
  },
  methods: {
    doRandom: function doRandom() {
      var that = this;
      var data = [];
      for (var i = 0, min = 5, max = 99; i < 6; i++) {
        data.push(Math.floor(Math.random() * (max + 1 - min) + min));
      }
      that.loading = !that.loading;
      that.line.series[0].data = data;
    },
    onReady: function onReady(instance) {
      console.log(instance);
    },
    onClick: function onClick(event, instance, echarts) {
      console.log(arguments);
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('div',{staticClass:"echarts"},[_c('IEcharts',{attrs:{"option":_vm.line,"loading":_vm.loading},on:{"ready":_vm.onReady,"click":_vm.onClick}}),_vm._v(" "),_c('button',{on:{"click":_vm.doRandom}},[_vm._v("Random")])],1)])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-40720ace"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-40720ace", __vue__options__)
  } else {
    hotAPI.reload("data-v-40720ace", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],407:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("请审核员录入指纹")]),_vm._v(" "),_c('div',{staticClass:"Pin_img"},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/指纹.gif')}})]),_vm._v(" "),_c('div',{staticClass:"Pin_input"},[_c('p',{staticStyle:{"margin-top":"5%"}},[_vm._v("指纹编号："),_c('i',{attrs:{"id":"FingerID"}},[_vm._v("1111")])]),_vm._v(" "),_c('div',{staticClass:"Pin_tips"},[_c('p',[_vm._v("请将手指紧贴在指纹扫描处")]),_vm._v(" "),_c('p',{staticStyle:{"color":"#FF9800"},attrs:{"id":"FingerStatus"}},[_vm._v("指纹还未校验")])])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5f1e5590", __vue__options__)
  } else {
    hotAPI.reload("data-v-5f1e5590", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],408:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        var vm = this;
        DataTools.get("C_A01_Dev_MachineType|GD_CodPid", function (data) {
            switch (data[0]) {
                case "1":case "2":case "5":
                    $("#ReadIdCard").html("请将您的身份证件放入识别区");
                    break;
                case "3":case "4":
                    $("#ReadIdCard").html("请插入您的身份证件");
                    break;
                default:
                    $("#ReadIdCard").html("请将您的身份证件放入识别区");
                    break;
            }
            var DocumentType = data[1];
            switch (DocumentType) {
                case "110001":
                    $(".hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "InsertIDCard.gif"));
                    break;
                case "110037":
                    $(".hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "InsertForeignerCard.gif"));
                    break;
                default:
                    $(".hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "InsertIDCard.gif"));
                    break;
            }
        });
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title",attrs:{"id":"ReadIdCard"}}),_vm._v(" "),_c('div',{staticClass:"hsgif"},[_c('img',{attrs:{"src":""}})]),_vm._v(" "),_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/请将您的身份证件放入识别区.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}})],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-55d8da14", __vue__options__)
  } else {
    hotAPI.reload("data-v-55d8da14", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],409:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        var vm = this;
        DataTools.get("GD_CodPid", function (data) {
            switch (data.toString()) {
                case "110001":
                    $(".hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "TakeIDCard.gif"));
                    break;
                case "110037":
                    $(".hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "TakeForeignerCard.gif"));
                    break;
                default:
                    $(".hsgif img").attr("src", vm.$root.imgPath("img/" + vm.$root.getImgPath() + "TakeIDCard.gif"));
                    break;
            }
        });
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("请取走证件")]),_vm._v(" "),_c('div',{staticClass:"hsgif"},[_c('img',{attrs:{"src":""}})]),_vm._v(" "),_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/请收好您的身份证件.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}})],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-9b591e22", __vue__options__)
  } else {
    hotAPI.reload("data-v-9b591e22", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],410:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {

        document.getElementById("btn_back").onclick = onBtn_back;
        function onBtn_back() {
            onCancel();
        }
        document.getElementById("btn_sure").onclick = onBtn_sure;
        function onBtn_sure() {
            onContinue();
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("打印存折交易明细")]),_vm._v(" "),_c('p',{staticClass:"center_title"},[_vm._v("请确认存折翻至待打印页")]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"btn_back"}},[_vm._v("取消")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_sure"}},[_vm._v("确定")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-34e4ac6f", __vue__options__)
  } else {
    hotAPI.reload("data-v-34e4ac6f", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],411:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".x-hsgif[data-v-ec65ce14]{\r\n    width: 50%;\r\n    margin: 0% auto;\r\n}\r\n.x-hsgif img[data-v-ec65ce14]{\r\n    width: 100%;\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {

        DataTools.get("GD_A01_Cust_MediaType", function (data) {

            switch (data[0]) {
                case "1":
                    $(".title").html("请插入您的银行卡");
                    $(".x-hsgif img").attr("src", "img/InsertMSCard.gif");
                    break;
                case "2":
                    $(".title").html("请插入您的银行卡");
                    $(".x-hsgif img").attr("src", "img/InsertICCard.gif");
                    break;
                case "3":
                    $(".title").html("请将您的银行卡放置于识别区");
                    $(".x-hsgif img").attr("src", "img/InsertPICCard.gif");
                    break;
                case "4":
                    $(".title").html("请插入您的存折");
                    $(".x-hsgif img").attr("src", "img/InsertPassbook.gif");
                    break;
                default:
                    $(".title").html("请插入您的银行卡");
                    $(".x-hsgif img").attr("src", "img/InsertICCard.gif");
                    break;
            }
        });
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("请插入您的银行卡")]),_vm._v(" "),_c('div',{staticClass:"x-hsgif"},[_c('img',{attrs:{"src":""}})]),_vm._v(" "),_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/请插入您的银行卡.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}})],1)}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-ec65ce14"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-ec65ce14", __vue__options__)
  } else {
    hotAPI.reload("data-v-ec65ce14", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],412:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _vuex = require("vuex");

exports.default = {
    data: function data() {
        return {
            getKeys: ["GD_CodPid"],
            setKeys: ["GD_NumPid", "GD_NamCust"],
            NumPidErr: "",
            NamCustErr: ""
        };
    },

    computed: _extends({
        documentTypeText: function documentTypeText() {
            if (this.pool.GD_CodPid == "") return "";
            return this.documentTypeOptions[this.pool.GD_CodPid];
        }
    }, (0, _vuex.mapState)(['pool', 'documentTypeOptions'])),
    methods: _extends({
        initPage: function initPage() {
            this.initPool(this.$data);
        },
        onBack: function onBack() {
            pageLog('取消-->' + new Date());
            this.onCancel();
        },
        onSure: function onSure() {
            if (!this.validate()) return;

            this.submit(this.setKeys);
            this.onContinue();
        },
        validate: function validate() {
            if (this.pool.GD_NumPid.length == 0) {
                this.NumPidErr = "请输入您的证件号码";
                return false;
            }
            if (this.pool.GD_NamCust.length == 0) {
                this.NamCustErr = "请输入您的姓名";
                return false;
            }
            return true;
        },
        onClearNumPidErr: function onClearNumPidErr() {
            this.NumPidErr = "";
        },
        onClearNamCustErr: function onClearNamCustErr() {
            this.NamCustErr = "";
        }
    }, (0, _vuex.mapActions)(['initPool', 'fetch', 'submit', 'onCancel', 'onContinue'])),
    mounted: function mounted() {
        this.initPage();
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('p',{staticClass:"modal_title"},[_vm._v("输入证件信息")]),_vm._v(" "),_c('ul',{staticClass:"documentinfolist"},[_c('li',[_vm._m(0),_c('input',{staticClass:"input_document",attrs:{"type":"text","id":"DocumentType","disabled":"true"},domProps:{"value":_vm.documentTypeText}})]),_vm._v(" "),_c('li',[_vm._m(1),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.pool.GD_NumPid),expression:"pool.GD_NumPid"}],staticClass:"input_document",attrs:{"type":"text","id":"DocumentNo"},domProps:{"value":(_vm.pool.GD_NumPid)},on:{"focus":_vm.onClearNumPidErr,"input":function($event){if($event.target.composing){ return; }_vm.pool.GD_NumPid=$event.target.value}}}),_vm._v(" "),_c('b',{staticClass:"error",attrs:{"id":"DocumentNoError"}},[_vm._v(_vm._s(_vm.NumPidErr))])]),_vm._v(" "),_c('li',[_vm._m(2),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.pool.GD_NamCust),expression:"pool.GD_NamCust"}],staticClass:"input_document",attrs:{"type":"text","id":"Name"},domProps:{"value":(_vm.pool.GD_NamCust)},on:{"focus":_vm.onClearNamCustErr,"input":function($event){if($event.target.composing){ return; }_vm.pool.GD_NamCust=$event.target.value}}}),_vm._v(" "),_c('b',{staticClass:"error",attrs:{"id":"NameError"}},[_vm._v(_vm._s(_vm.NamCustErr))])])]),_vm._v(" "),_c('div',{staticClass:"modal_btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"modal_btn_back"},on:{"click":_vm.onBack}},[_vm._v("取   消")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"modal_btn_sure"},on:{"click":_vm.onSure}},[_vm._v("确   定")])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_c('b',{staticClass:"must"},[_vm._v("*")]),_vm._v("证件类型：")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_c('b',{staticClass:"must"},[_vm._v("*")]),_vm._v("证件号码：")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_c('b',{staticClass:"must"},[_vm._v("*")]),_vm._v("姓名：")])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6daa8062", __vue__options__)
  } else {
    hotAPI.reload("data-v-6daa8062", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vuex":"vuex"}],413:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('div',[_c('p',{staticClass:"title"},[_vm._v("请输入您的密码")]),_vm._v(" "),_c('div',{staticClass:"Pin_img"},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/'+_vm.$root.getImgPath()+'InputPin.gif')}})]),_vm._v(" "),_c('div',{staticClass:"Pin_input"},[_c('p',[_c('i',[_vm._v("账号：")]),_c('span',{attrs:{"id":"Account"}})]),_vm._v(" "),_c('p',[_c('i',[_vm._v("密码：")]),_c('input',{staticClass:"input_Pin",attrs:{"type":"password","id":"password","maxlength":"6"}})]),_vm._v(" "),_c('div',{staticClass:"Pin_tips"},[_c('p',[_c('i',{staticStyle:{"color":"red"}},[_vm._v("尊敬的客户：")])]),_vm._v(" "),_c('p',[_vm._v("1.请注意保护您的密码,防止被偷窥,不要向任何人透露;")]),_vm._v(" "),_c('p',[_vm._v("2.警惕插卡口,密码键盘及机身周围是否安装可疑异常装置;")]),_vm._v(" "),_c('p',[_vm._v("3.为保障您的资金安全,谨防利用短信、电话等方式进行的转账诈骗等违法行为,如遇特殊情况请拨打95599或110。")])])])]),_vm._v(" "),_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/请您在输入密码前确认周边环境是否安全.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}})],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6b314401", __vue__options__)
  } else {
    hotAPI.reload("data-v-6b314401", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],414:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/请您在输入密码前确认周边环境是否安全.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}}),_vm._v(" "),_c('div',[_c('p',{staticClass:"title"},[_vm._v("请输入您的密码")]),_vm._v(" "),_c('div',{staticClass:"Pin_img"},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/'+_vm.$root.getImgPath()+'InputPin.gif')}})]),_vm._v(" "),_c('div',{staticClass:"Pin_input"},[_c('p',[_c('i',[_vm._v("账号：")]),_c('span',{attrs:{"id":"Account"}})]),_vm._v(" "),_c('p',[_c('i',[_vm._v("密码：")]),_c('input',{staticClass:"input_Pin",attrs:{"type":"password","id":"password","maxlength":"6"}})]),_vm._v(" "),_c('div',{staticClass:"Pin_tips"},[_c('p',[_c('i',{staticStyle:{"color":"red"}},[_vm._v("尊敬的客户：")])]),_vm._v(" "),_c('p',[_vm._v("1.请注意保护您的密码,防止被偷窥,不要向任何人透露;")]),_vm._v(" "),_c('p',[_vm._v("2.警惕插卡口,密码键盘及机身周围是否安装可疑异常装置;")]),_vm._v(" "),_c('p',[_vm._v("3.为保障您的资金安全,谨防利用短信、电话等方式进行的转账诈骗等违法行为,如遇特殊情况请拨打95599或110。")])])])])],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-66e783e2", __vue__options__)
  } else {
    hotAPI.reload("data-v-66e783e2", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],415:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("密码错误提示（非三次）")])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-220a48b7", __vue__options__)
  } else {
    hotAPI.reload("data-v-220a48b7", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],416:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert("@media screen and (max-width: 1280px) { \r\n.infohalf[data-v-70f4aa48] {\r\n    display: inline-flex;\r\n}\r\n\r\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {

        DataTools.get("GD_NamCust|GD_NumPid|GD_CodPid|GD_DateCertBgn|GD_DateCertEnd|GD_CodCountry|GD_CodNation|GD_Birthday|GD_Gender", function (data) {
            var infoList = [];
            for (var i = 0; i < data.length; i++) {
                infoList[i] = data[i];
            }
            $('#NamCust').val(infoList[0]);
            $('#NumPid').val(infoList[1]);
            if (110025 == infoList[2]) {
                $('#CodPid').val("外国护照");
            } else if (110021 == infoList[2]) {
                $('#CodPid').val("台湾居民来往大陆通行证");
            } else if (110019 == infoList[2]) {
                $('#CodPid').val("港澳居民来往内地通行证");
            }
            $('#DateCertBgn').val(infoList[3]);
            $('#DateCertEnd').val(infoList[4]);
            $('#CodCountry').val(infoList[5]);
            $('#CodNation').val(infoList[6]);
            $('#Birthday').val(infoList[7]);
            if ('男' == infoList[8]) {
                $('#Man').attr('checked', 'true');
            } else if ('女' == infoList[8]) {
                $('#Woman').attr('checked', 'true');
            }
        });

        document.getElementById("btn_sure").onclick = onSure;
        function onSure() {
            setVar("GD_DateCertBgn", $("#DateCertBgn").val());
            setVar("GD_DateCertEnd", $("#DateCertEnd").val());
            setVar("GD_CodCountry", $("#CodCountry").val());
            setVar("GD_CodNation", $("#CodNation").val());
            setVar("GD_Birthday", $("#Birthday").val());
            setVar("GD_Gender", $("input[name='Sex']:checked").val());
            exitScene("STA_CONTINUE");
        }

        document.getElementById("btn_back").onclick = onBack;
        function onBack() {
            onCancel();
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("客户证件资料填写")]),_vm._v(" "),_c('ul',{staticClass:"ulinfo_form"},[_c('li',[_c('div',{staticClass:"infohalf"},[_c('span',[_vm._v("姓名：")]),_vm._v(" "),_c('input',{staticClass:"input_info",attrs:{"type":"text","id":"NamCust","disabled":"true"}})]),_vm._v(" "),_c('div',{staticClass:"infohalf"},[_c('span',[_vm._v("证件号码：")]),_vm._v(" "),_c('input',{staticClass:"input_info",attrs:{"type":"text","id":"NumPid","disabled":"true"}})])]),_vm._v(" "),_c('li',[_c('div',{staticClass:"infohalf"},[_c('span',[_vm._v("证件类型：")]),_vm._v(" "),_c('input',{staticClass:"input_info",attrs:{"type":"text","id":"CodPid","disabled":"true"}})]),_vm._v(" "),_c('div',{staticClass:"infohalf"},[_c('span',[_c('b',{staticClass:"must"},[_vm._v("*")]),_vm._v("证件有效期：")]),_vm._v(" "),_c('input',{staticClass:"input_info",staticStyle:{"width":"28%"},attrs:{"type":"text","id":"DateCertBgn"}}),_vm._v("-\n                        "),_c('input',{staticClass:"input_info",staticStyle:{"width":"28%"},attrs:{"type":"text","id":"DateCertEnd"}})])]),_vm._v(" "),_c('li',[_c('div',{staticClass:"infohalf"},[_c('span',[_c('b',{staticClass:"must"},[_vm._v("*")]),_vm._v("国籍：")]),_vm._v(" "),_c('input',{staticClass:"input_info",attrs:{"type":"text","id":"CodCountry"}})]),_vm._v(" "),_c('div',{staticClass:"infohalf"},[_c('span',[_c('b',{staticClass:"must"},[_vm._v("*")]),_vm._v("民族：")]),_vm._v(" "),_c('input',{staticClass:"input_info",attrs:{"type":"text","id":"CodNation"}})])]),_vm._v(" "),_c('li',[_c('div',{staticClass:"infohalf"},[_c('span',[_c('b',{staticClass:"must"},[_vm._v("*")]),_vm._v("出生日期：")]),_vm._v(" "),_c('input',{staticClass:"input_info",attrs:{"type":"text","id":"Birthday"}})]),_vm._v(" "),_c('div',{staticClass:"infohalf"},[_c('span',[_vm._v("性别：")]),_vm._v(" "),_c('i',[_c('div',{staticClass:"radiobox"},[_c('input',{staticClass:"radioAccount",attrs:{"type":"radio","name":"Sex","id":"Man","value":"男"}}),_vm._v(" "),_c('label',{attrs:{"for":"Man"}},[_vm._v("√")])]),_vm._v("\n                            男\n                        ")]),_vm._v(" "),_c('i',[_c('div',{staticClass:"radiobox"},[_c('input',{staticClass:"radioAccount",attrs:{"type":"radio","name":"Sex","id":"Woman","value":"女"}}),_vm._v(" "),_c('label',{attrs:{"for":"Woman"}},[_vm._v("√")])]),_vm._v("\n                            女\n                        ")])])])]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"btn_back"}},[_vm._v("返   回")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_sure"}},[_vm._v("确   定")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-70f4aa48"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-70f4aa48", __vue__options__)
  } else {
    hotAPI.reload("data-v-70f4aa48", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],417:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  mounted: function mounted() {
    document.getElementById("btn_back").onclick = onBack;
    function onBack() {
      onCancel();
    }
    document.getElementById("btn_sure").onclick = onSure;
    function onSure() {
      onContinue();
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("选择是否打印凭条")]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"btn_back"}},[_vm._v("否")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_sure"}},[_vm._v("是")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-29f51a49", __vue__options__)
  } else {
    hotAPI.reload("data-v-29f51a49", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],418:[function(require,module,exports){
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        console.log('page mounted');
    },
    destroyed: function destroyed() {
        console.log('page destroyed');
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main')}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-e739b58c", __vue__options__)
  } else {
    hotAPI.reload("data-v-e739b58c", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],419:[function(require,module,exports){
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _vuex = require('vuex');

exports.default = {
  data: function data() {
    return {
      getKeys: ['GD_A01_AreaData'],
      cityData: [],
      value: "1612",
      showLevel: false,
      showProvince: false,
      showCity: false
    };
  },

  computed: _extends({
    provinceData: function provinceData() {
      if (!this.pool.hasOwnProperty('GD_A01_AreaData')) return [];
      return JSON.parse(this.pool.GD_A01_AreaData);
    }
  }, (0, _vuex.mapState)(['pool'])),
  methods: _extends({
    manyTest: function manyTest() {
      this.showProvince = true;
    },
    levelTest: function levelTest() {
      this.showLevel = true;
    },
    onManyCancel: function onManyCancel() {
      console.log('onManyCancel');
      this.showProvince = false;
      this.showCity = false;
      this.showLevel = false;
    },
    onChooseProvince: function onChooseProvince(index, item) {
      console.log('onChooseProvince ' + index);
      console.log(item);
      this.showProvince = false;
      this.cityData = item.C;
      this.showCity = true;
    },
    onChooseLevel: function onChooseLevel(index, item) {
      console.log('onChooseLevel ' + index);
      this.showLevel = false;
    },
    onResult: function onResult(result) {
      console.log(result);
    },
    onUpProvince: function onUpProvince() {
      this.showCity = false;
      this.showProvince = true;
    },
    onChooseCity: function onChooseCity(index, item) {
      this.showCity = false;
      console.log('onChooseCity ' + index);
      console.log(item);
    },
    onCurrentChange: function onCurrentChange(pageNum) {
      console.log('onCurrentChange' + pageNum);
    }
  }, (0, _vuex.mapActions)(['initPool', 'fetch', 'submit', 'onCancel', 'onContinue'])),
  mounted: function mounted() {
    this.initPool(this.$data);
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_vm._v("\n   输入测试"),_c('input',{attrs:{"id":"searchText3","type":"text","placeholder":"查询过滤","onclick":"ShowPinyinKB('-1','-1','searchText3','')","onblur":"HideKB()"}}),_vm._v(" "),_c('x-pagination',{attrs:{"total":65,"page-size":8},on:{"current-change":_vm.onCurrentChange}}),_vm._v(" "),_c('x-many-choose',{attrs:{"show":_vm.showProvince,"title":"省市","data":_vm.provinceData},on:{"cancel":_vm.onManyCancel,"confirm":_vm.onChooseProvince}}),_vm._v(" "),_c('x-many-choose',{attrs:{"show":_vm.showCity,"title":"市县","data":_vm.cityData,"up":true},on:{"up":_vm.onUpProvince,"cancel":_vm.onManyCancel,"confirm":_vm.onChooseCity}}),_vm._v(" "),_c('x-multi-level',{attrs:{"show":_vm.showLevel,"title":"省市","value":_vm.value,"data":_vm.provinceData},on:{"result":_vm.onResult,"cancel":_vm.onManyCancel,"confirm":_vm.onChooseLevel}}),_vm._v(" "),_c('div',{staticClass:"modal_btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"modal_btn_back"},on:{"click":_vm.manyTest}},[_vm._v("ManyChoose")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"modal_btn_sure"},on:{"click":_vm.levelTest}},[_vm._v("MultiLevel")])])],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-29114496", __vue__options__)
  } else {
    hotAPI.reload("data-v-29114496", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vuex":"vuex"}],420:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("联网核查")])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-fbff26c2", __vue__options__)
  } else {
    hotAPI.reload("data-v-fbff26c2", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],421:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  mounted: function mounted() {}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('p',{staticClass:"modal_title"},[_vm._v("请定制弹框内容")]),_vm._v(" "),_c('ul',{staticClass:"documentinfolist"}),_vm._v(" "),_c('div',{staticClass:"modal_btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"modal_btn_back"}},[_vm._v("取   消")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"modal_btn_sure"}},[_vm._v("确   定")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0ce1ddaa", __vue__options__)
  } else {
    hotAPI.reload("data-v-0ce1ddaa", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],422:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title"},[_vm._v("正在打印申请书，请稍候.....")])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-3a840b97", __vue__options__)
  } else {
    hotAPI.reload("data-v-3a840b97", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],423:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title"},[_vm._v("请放入您的纸质申请书")])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-3e285c16", __vue__options__)
  } else {
    hotAPI.reload("data-v-3e285c16", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],424:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("您的卡已被回收，请与银行联系")]),_vm._v(" "),_c('div',{staticClass:"hsgif"},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/'+_vm.$root.getImgPath()+'TakeCard.gif')}})])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-64f79c2d", __vue__options__)
  } else {
    hotAPI.reload("data-v-64f79c2d", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],425:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".auditorC[data-v-39588992]{\r\n\tborder: 0px solid #008B6E;\r\n\twidth: 60%;\r\n\theight: 70%;\r\n\tmargin:50px auto;\r\n\tdisplay: flex;\r\n\tjustify-content:center;\r\n\talign-items: center\r\n}\r\n.auditorC img[data-v-39588992]{\r\n\twidth:50%;\r\n}\r\n.auditorcR[data-v-39588992]{\r\n\r\n\tposition: absolute;\r\n\twidth:18%;\r\n\theight: 40%;\r\n\tdisplay: inline-block;\t\r\n\tright:0.8%;\r\n\tbottom: 1%;\r\n}\r\n.auditorcR img[data-v-39588992]{\r\n\twidth:95%;\t\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	data: function data() {
		return {
			sound: "wav/正在进行身份审核，请稍后.wav"
		};
	},
	created: function created() {
		var vm = this;

		this.$root.$on('SynCardOcx_VideoOpened', onVideoOpened);
		function onVideoOpened() {
			Syn_ShowWindow();
			$("#RemoteTips").html("正在进行身份审核，请稍候");
		};

		this.$root.$on('SynCardOcx_VideoClosed', onVideoClosed);
		function onVideoClosed() {
			Syn_HideWindow();
		};

		this.$root.$on('SynCardOcx_MsgReceived', onMsgReceived);
		function onMsgReceived(strMsg) {
			if (strMsg != "") {
				var arrstr = strMsg.split("|");
				if (arrstr.length < 3) {
					setVar("GD_ErrReason", "RemoteRetErr");
					exitScene("STA_FAIL");
				} else {
					if (arrstr.length >= 5) {
						setVar("GD_A01_ChkUsrNum", arrstr[4]);
						setVar("GD_A01_BUS_NUM_UR_IDCHK", arrstr[4]);
					}
					DataTools.get("GD_A01_LC_SerialNo", function (data1) {
						if (data1 == arrstr[1]) {
							if (arrstr[0] == "002") {
								if (arrstr[2] == "0000") {
									var arrFileDIR = "";
									var arrNumSeqBusproc = "";

									DataTools.get("C_FileDIR|GD_CodPid", function (data) {
										arrFileDIR = data[0];
										var GD_CodPid = data[1];
										arrNumSeqBusproc = arrstr[1];
										var strPicDir = arrstr[3] + "\\" + arrNumSeqBusproc;
										console.log('SynCardOcx_MsgReceived-on: ' + strPicDir);

										if (GD_CodPid == "110001") {
											setVar("GD_A01_Applypic1", arrFileDIR + strPicDir + "04.jpg");

											setVar("GD_A01_Applypic2", arrFileDIR + strPicDir + "03.jpg");

											setVar("GD_A01_Applypic3", arrFileDIR + strPicDir + "02.jpg");
										} else {
											setVar("GD_A01_Applypic1", arrFileDIR + strPicDir + "02.jpg");

											setVar("GD_A01_Applypic2", arrFileDIR + strPicDir + "03.jpg");

											setVar("GD_A01_Applypic3", arrFileDIR + strPicDir + "04.jpg");
										}

										setVar("GD_A01_ApplyCampicSave", arrFileDIR + strPicDir + "01.jpg");
										var strFileDir = arrFileDIR;
										strFileDir = strFileDir.replace(/\\\\/g, "\\");
										strFileDir = strFileDir.replace(/\\/g, "/");
										if (strFileDir.substr(-1) != "/") {
											strFileDir += "/";
										}
										strFileDir += arrstr[3] + "/" + arrNumSeqBusproc + "01.jpg";
										pageLog("Page SetValue[GD_A01_FingerShowCampic]:" + strFileDir);

										setVar("GD_A01_FingerShowCampic", strFileDir);
										setVar("GD_UFid", arrstr[3]);
										setVar("GD_A01_ApplyLoginFlag", "1");
										setVar("GD_A01_BUS_IDN_RST_IDCHK", "1");

										var date = new Date();
										var strHours = date.getHours();
										var strMinutes = date.getMinutes();
										var strSeconds = date.getSeconds();
										strHours = strHours.length == 1 ? "0" + strHours : strHours;
										strMinutes = strMinutes.length == 1 ? "0" + strMinutes : strMinutes;
										strSeconds = strSeconds.length == 1 ? "0" + strSeconds : strSeconds;
										setVar("GD_A01_BUS_TIME_END_IDCHK", strHours + strMinutes + strSeconds);
										exitScene("STA_CONTINUE");
									});
								} else {
									setVar("GD_ErrReason", arrstr[3]);

									setVar("GD_A01_BUS_TXT_RSN_IDCHK", arrstr[3]);
									var date = new Date();
									var strHours = date.getHours();
									var strMinutes = date.getMinutes();
									var strSeconds = date.getSeconds();
									strHours = strHours.length == 1 ? "0" + strHours : strHours;
									strMinutes = strMinutes.length == 1 ? "0" + strMinutes : strMinutes;
									strSeconds = strSeconds.length == 1 ? "0" + strSeconds : strSeconds;
									setVar("GD_A01_BUS_TIME_END_IDCHK", strHours + strMinutes + strSeconds);
									setVar("GD_A01_BUS_IDN_RST_PROC", "5");
									exitScene("STA_FAIL");
								}
							} else if (arrstr[0] == "001") {
								DataTools.get("C_A01_Dict_00000017", function (data) {
									if (data != "") {
										var jsErrTip = JSON.parse(data);
										var tmpStr = "";
										for (var i = 0; i < jsErrTip.length; i++) {
											if (arrstr[2] == jsErrTip[i].NUM_ITEM_DIC) {
												tmpStr = jsErrTip[i].VLU_ITEM_DIC;
											}
										}
										if (tmpStr != "") {
											vm.playSound(arrstr[2] + tmpStr);

											$("#idc_img").attr("src", "img/chk/" + arrstr[2] + tmpStr + ".gif");
										}
									} else {
										$("#RemoteTip").html(arrstr[2]);
									}
								});
							} else {
								var date = new Date();
								var strHours = date.getHours();
								var strMinutes = date.getMinutes();
								var strSeconds = date.getSeconds();
								strHours = strHours.length == 1 ? "0" + strHours : strHours;
								strMinutes = strMinutes.length == 1 ? "0" + strMinutes : strMinutes;
								strSeconds = strSeconds.length == 1 ? "0" + strSeconds : strSeconds;
								setVar("GD_A01_BUS_TIME_END_IDCHK", strHours + strMinutes + strSeconds);
								setVar("GD_A01_BUS_IDN_RST_PROC", "5");
								exitScene("STA_FAIL");
							}
						} else {
							pageLog("LCSerialNoNotSame err GD_A01_LC_SerialNo:" + data1 + " ,Return No:" + arrstr[1]);
						}
					});
				}
			}
		};

		this.$root.$on('beforeQuit', onBeforeQuit);
		function onBeforeQuit() {
			setVar("GD_A01_BUS_IDN_RST_IDCHK", "4");
			var date = new Date();
			var strHours = date.getHours();
			var strMinutes = date.getMinutes();
			var strSeconds = date.getSeconds();
			strHours = strHours.length == 1 ? "0" + strHours : strHours;
			strMinutes = strMinutes.length == 1 ? "0" + strMinutes : strMinutes;
			strSeconds = strSeconds.length == 1 ? "0" + strSeconds : strSeconds;
			setVar("GD_A01_BUS_TIME_END_IDCHK", strHours + strMinutes + strSeconds);

			Syn_HideWindow();
		};

		this.$root.$on('cancelQuit', onCancelQuit);
		function onCancelQuit() {
			Syn_ShowWindow();
		};
	},
	beforeDestroy: function beforeDestroy() {
		Syn_HideWindow();
	},
	destroyed: function destroyed() {
		this.$root.$off('SynCardOcx_MsgReceived');
		this.$root.$off('beforeQuit');
		this.$root.$off('cancelQuit');
		this.$root.$off('SynCardOcx_VideoOpened');
		this.$root.$off('SynCardOcx_VideoClosed');
	},

	methods: {
		playSound: function Play(sound) {
			$("#DynSound_").remove();
			$('body').append('<embed id="DynSound_" autostart="true" hidden="true" src="wav/' + sound + '.wav" />');
		},
		onBack: function onBack() {
			var vm = this;
			vm.playSound("交易正在进行，请稍后！");
		},
		onSure: function onSure() {
			var vm = this;
			vm.playSound("正在进行身份审核，请稍后");
		}
	},

	mounted: function mounted() {
		Syn_HideWindow();
	}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title",attrs:{"id":"RemoteTips"}},[_vm._v("身份审核排队中，请稍候")]),_vm._v(" "),_c('div',{staticClass:"auditorC"},[_c('img',{attrs:{"src":"img/loading.gif"}})]),_vm._v(" "),_c('div',{staticClass:"auditorcR"},[_c('img',{attrs:{"id":"idc_img","src":"img/审核员.png"}})]),_vm._v(" "),_c('EMBED',{attrs:{"name":"ViewSound","src":_vm.sound,"Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}})],1)}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-39588992"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-39588992", __vue__options__)
  } else {
    hotAPI.reload("data-v-39588992", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],426:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".box[data-v-3e66af45]{\n            height: 775px;\n            margin-top: 30px;\n        }\n    .top[data-v-3e66af45], .bottom[data-v-3e66af45]{\n            display: flex;\n            justify-content: center;\n            margin-bottom: 45px;\n    }\n    .card[data-v-3e66af45]{\n            width: 596px;\n            height: 280px;\n            border: 2px solid #8addce;\n            box-shadow: 1px 1px 20px grey;\n            border-radius: 8px;\n            margin-right: 30px;\n            text-align: center;\n            font-size: 3rem;\n           \n        }\n    .Docimg[data-v-3e66af45]{\n        background: rgba(224,250,242,0.4);\n    }\n@media screen and (max-width: 1300px) { \n    .card[data-v-3e66af45]{\n            width: 480px;\n            height: 250px;\n        }\n}\n    .cardbox[data-v-3e66af45]{\n            display: flex;\n            justify-content: space-between;\n            border: none;\n            box-shadow: none;\n        }\n    .cardbox div[data-v-3e66af45]{\n            height: 100%;\n            width: 46%;\n            border: 2px solid #8addce;\n            box-shadow: 1px 1px 20px grey;\n            border-radius: 8px;\n        }\n        img[data-v-3e66af45]{\n            margin-top: 40px;\n        }")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        $(".Docimg").on('click', function (event) {
            var DocumentType = $(this).find('p').attr('value');
            $(".Docimg").css("background", "rgba(224,250,242,0.4)");
            $(this).css("background", "rgba(130, 219, 206,0.4)");
            setVar("GD_CodPid", DocumentType);
            switch (DocumentType) {
                case "110001":
                    setVar("P_CodCountry", "156");
                    exitScene("STA_IDCARD");
                    break;
                case "110037":
                    exitScene("STA_FOREIGNER");
                    break;
                case "110025":case "110019":case "110021":
                    exitScene("STA_OTHER");

                    break;
                default:
                    exitScene("STA_FAIL");
                    break;
            }
        });
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("选择证件类型")]),_vm._v(" "),_c('div',{staticClass:"box"},[_c('div',{staticClass:"top"},[_c('div',{staticClass:"card Docimg"},[_c('img',{attrs:{"src":"img/二代身份证.png","alt":""}}),_vm._v(" "),_c('p',{attrs:{"value":"110001"}},[_vm._v("二代身份证")])]),_vm._v(" "),_c('div',{staticClass:"card Docimg"},[_c('img',{attrs:{"src":"img/港澳居民来往内地通行证.png","alt":""}}),_vm._v(" "),_c('p',{attrs:{"value":"110019"}},[_vm._v("港澳居民来往内地通行证")])])]),_vm._v(" "),_c('div',{staticClass:"bottom"},[_c('div',{staticClass:"card Docimg"},[_c('img',{attrs:{"src":"img/台湾居民来往大陆通行证.png","alt":""}}),_vm._v(" "),_c('p',{attrs:{"value":"110021"}},[_vm._v("台湾居民来往大陆通行证")])]),_vm._v(" "),_c('div',{staticClass:"card cardbox"},[_c('div',{staticClass:"Docimg"},[_c('img',{attrs:{"src":"img/外国人永久居留证.png","alt":""}}),_vm._v(" "),_c('p',{attrs:{"value":"110037"}},[_vm._v("外国人"),_c('br'),_vm._v("永久居留证")])]),_vm._v(" "),_c('div',{staticClass:"Docimg"},[_c('img',{attrs:{"src":"img/外国护照.png","alt":""}}),_vm._v(" "),_c('p',{attrs:{"value":"110025"}},[_vm._v("外国护照")])])])])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-3e66af45"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-3e66af45", __vue__options__)
  } else {
    hotAPI.reload("data-v-3e66af45", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],427:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".box[data-v-c12ab0cc]{\n            height: 775px;\n            margin-top: 30px;\n        }\n    .top[data-v-c12ab0cc], .bottom[data-v-c12ab0cc]{\n            display: flex;\n            justify-content: center;\n            margin-bottom: 45px;\n    }\n    .card[data-v-c12ab0cc]{\n            width: 596px;\n            height: 280px;\n            border: 2px solid #8addce;\n            box-shadow: 1px 1px 20px grey;\n            border-radius: 8px;\n            margin-right: 30px;\n            text-align: center;\n            font-size: 3rem;\n\n    }\n    .Docimg[data-v-c12ab0cc]{\n        background: rgba(224,250,242,0.4);\n    }\n@media screen and (max-width: 1300px) { \n    .card[data-v-c12ab0cc]{\n            width: 480px;\n            height: 250px;\n        }\n}\n    .cardbox[data-v-c12ab0cc]{\n            display: flex;\n            justify-content: space-between;\n            border: none;\n            box-shadow: none;\n        }\n    .cardbox div[data-v-c12ab0cc]{\n            height: 100%;\n            width: 46%;\n            border: 2px solid #8addce;\n            box-shadow: 1px 1px 20px grey;\n            border-radius: 8px;\n        }\n        img[data-v-c12ab0cc]{\n            margin-top: 40px;\n        }")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        $(".Docimg").on('click', function (event) {
            var DocumentType = $(this).find('p').attr('value');
            $(".Docimg").css("background", "rgba(224,250,242,0.4)");
            $(this).css("background", "rgba(130, 219, 206,0.4)");
            setVar("GD_CodPid", DocumentType);
            setVar("GD_A01_IDCardIsIC", "0");
            switch (DocumentType) {
                case "110001":
                    setVar("GD_A01_IDCardIsIC", "1");
                    setVar("P_CodCountry", "156");
                    exitScene("STA_IDCARD");
                    break;
                case "110037":
                    exitScene("STA_FOREIGNER");
                    break;
                case "110025":case "110019":case "110021":
                    exitScene("STA_OTHER");
                    $('#pagePopup').fadeIn(300);
                    break;
                default:
                    exitScene("STA_FAIL");
                    break;
            }
        });
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("选择证件类型")]),_vm._v(" "),_c('div',{staticClass:"box"},[_c('div',{staticClass:"top"},[_c('div',{staticClass:"card Docimg"},[_c('img',{attrs:{"src":"img/二代身份证.png","alt":""}}),_vm._v(" "),_c('p',{attrs:{"value":"110001"}},[_vm._v("二代身份证")])])])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-c12ab0cc"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-c12ab0cc", __vue__options__)
  } else {
    hotAPI.reload("data-v-c12ab0cc", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],428:[function(require,module,exports){
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    created: function created() {
        this.$root.$on('beforeQuit', onBeforeQuit);
        function onBeforeQuit() {
            $("#PDFViewer").attr('height', "0").attr('width', "0");
        };

        this.$root.$on('cancelQuit', onCancelQuit);
        function onCancelQuit() {
            setTimeout(function () {
                $("#PDFViewer").attr('height', "60%").attr('width', "60%");
            }, 500);
        };
    },
    beforeDestroy: function beforeDestroy() {
        $("#PDFViewer").attr('height', "0").attr('width', "0");
    },
    destroyed: function destroyed() {
        this.$root.$off('beforeQuit');
        this.$root.$off('cancelQuit');
    },
    mounted: function mounted() {
        setTimeout(function () {
            var nRet = PDFViewer.OpenFile("C:\\csap\\Nisp\\conf\\PDFs\\OpenCard.pdf");
            PDFViewer.SetViewFit("0");
        }, 100);

        setTimeout(function () {
            $("#PDFViewer").attr('height', "60%").attr('width', "60%");
        }, 500);

        document.getElementById("btn_sure").onclick = onSure;
        function onSure() {
            $("#PDFViewer").attr('height', "0").attr('width', "0");
            onContinue();
        }

        document.getElementById("btn_back").onclick = onBack;
        function onBack() {
            $("#PDFViewer").attr('height', "0").attr('width', "0");
            onCancel();
        }

        document.getElementById("btn_ZoomOut").onclick = onZoomOut;
        function onZoomOut() {
            PDFViewer.ZoomOut();
        }

        document.getElementById("btn_ZoomIn").onclick = onZoomIn;
        function onZoomIn() {
            PDFViewer.ZoomIn();
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("请核对申请书")]),_vm._v(" "),_c('div',{staticStyle:{"width":"100%","height":"60rem"}}),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn",attrs:{"id":"btn_back"}},[_vm._v("不 同 意")]),_vm._v(" "),_c('button',{staticClass:"btn",attrs:{"id":"btn_ZoomOut"}},[_vm._v("缩小（-）")]),_vm._v(" "),_c('button',{staticClass:"btn",attrs:{"id":"btn_ZoomIn"}},[_vm._v("放大（+）")]),_vm._v(" "),_c('button',{staticClass:"btn",attrs:{"id":"btn_sure"}},[_vm._v("同   意")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-bea50ce2", __vue__options__)
  } else {
    hotAPI.reload("data-v-bea50ce2", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],429:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	mounted: function mounted() {
		document.getElementById("btn_back").onclick = onBack;
		function onBack() {
			onCancel();
		}
		document.getElementById("btn_sure").onclick = onSure;
		function onSure() {
			onContinue();
		}
	}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title",attrs:{"id":"ShowReason"}}),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn disp_none",attrs:{"id":"btn_back"}},[_vm._v("取   卡")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn disp_none",attrs:{"id":"btn_sure"}},[_vm._v("继   续")])]),_vm._v(" "),_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/交易失败，请查看详情！.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}})],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-d0282656", __vue__options__)
  } else {
    hotAPI.reload("data-v-d0282656", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],430:[function(require,module,exports){
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    created: function created() {

        this.$root.$on('beforeQuit', onBeforeQuit);
        function onBeforeQuit() {
            $("#PDFViewer").attr('height', "0").attr('width', "0");
        };

        this.$root.$on('cancelQuit', onCancelQuit);
        function onCancelQuit() {
            setTimeout(function () {
                $("#PDFViewer").attr('height', "60%").attr('width', "60%");
            }, 500);
        };
    },
    beforeDestroy: function beforeDestroy() {
        $("#PDFViewer").attr('height', "0").attr('width', "0");
    },
    destroyed: function destroyed() {
        this.$root.$off('beforeQuit');
        this.$root.$off('cancelQuit');
    },
    mounted: function mounted() {
        var nRet = PDFViewer.OpenFile("C:\\csap\\Nisp\\conf\\PDFs\\OpenCard.pdf");
        PDFViewer.SetViewFit("0");
        setTimeout(function () {
            $("#PDFViewer").attr('height', "60%").attr('width', "60%");
        }, 500);

        document.getElementById("btn_sure").onclick = onSure;
        function onSure() {
            $("#PDFViewer").attr('height', "0").attr('width', "0");
            onContinue();
        }
        document.getElementById("btn_ReSign").onclick = onReSign;
        function onReSign() {
            $("#PDFViewer").attr('height', "0").attr('width', "0");
            exitScene("STA_BACK");
        }

        document.getElementById("btn_back").onclick = onBack;
        function onBack() {
            $("#PDFViewer").attr('height', "0").attr('width', "0");
            onCancel();
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("请核对申请书及签名")]),_vm._v(" "),_c('div',{staticStyle:{"width":"100%","height":"60rem"}}),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"btn_back"}},[_vm._v("不 同 意")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_ReSign"}},[_vm._v("重新签名")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_sure"}},[_vm._v("同   意")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6f0b5b4b", __vue__options__)
  } else {
    hotAPI.reload("data-v-6f0b5b4b", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],431:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".province[data-v-4da6a6af], .city[data-v-4da6a6af] {\n            display:inline-block;\n        }\n        .province .swiper-container[data-v-4da6a6af],.city .swiper-container[data-v-4da6a6af] {\n            width: 400px;\n            height: 400px;\n            margin:50px 20px 20px 10px;\n        }\n\t\t .swiper-slide[data-v-4da6a6af] {\n            text-align: center;\n            font-size: 2.5rem;\n            background-color: transparent;\n            /* Center slide text vertically */\n            display: -webkit-box;\n            display: -ms-flexbox;\n            display: -webkit-flex;\n            display: flex;\n            -webkit-box-pack: center;\n            -ms-flex-pack: center;\n            -webkit-justify-content: center;\n            justify-content: center;\n            -webkit-box-align: center;\n            -ms-flex-align: center;\n            -webkit-align-items: center;\n            align-items: center;\n\t\t\t position:relative;  \n        }\n\t\t.activeSlide[data-v-4da6a6af]{\n            font-weight: bold;\n        }\n        .citySelector[data-v-4da6a6af]{\n            position:relative;     \n            width:100%;\n            height:65%;\n            text-align:center;\n            color:#008B6E;\n            z-index: 9999;\t\n            /*bottom: 0px; \n             margin:10px auto;*/\n            background-color: #ffffcc;\n    \n        }\n             \n        .selectSlide[data-v-4da6a6af]{\n            width:100%;\n            height:77px;\n            position:absolute;\n            z-index: 1;\n            top:38%;\n            background-color: #bfbfbf;\n            opacity: 0.4;\n        }\n   \t\t.gcover[data-v-4da6a6af]{\n\t\t\tdisplay: none;\n\t\t\tposition: absolute;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tbottom: 0%;\n\t\t\tleft: 0%;\n\t\t\tz-index: 2000;\n\t\t}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  name: 'carrousel',
  data: function data() {
    return {
      notNextTick: true,
      provinceOption: {
        direction: 'vertical',
        slidesPerView: 3,
        spaceBetween: 1,
        centeredSlides: true,
        slideActiveClass: 'activeSlide',
        mousewheelControl: true,
        slideToClickedSlide: true,
        onTransitionEnd: function onTransitionEnd(swiperPro) {
          var indexPro = swiperPro.activeIndex;
          console.log('province changed!');
        }
      },
      cityOption: {
        direction: 'vertical',
        slidesPerView: 3,
        spaceBetween: 0,
        slideActiveClass: 'activeSlide',
        mousewheelControl: true,
        slideToClickedSlide: true,
        centeredSlides: true,
        onTransitionEnd: function onTransitionEnd(swiperPro) {
          var indexPro = swiperPro.activeIndex;
          console.log('city changed');
        }
      }
    };
  },

  computed: {
    swiper1: function swiper1() {
      return this.$refs.provinceSwiper.swiper;
    },
    swiper2: function swiper2() {
      return this.$refs.citySwiper.swiper;
    }
  },
  mounted: function mounted() {
    this.swiper1.slideTo(1, 1000, false);
    this.swiper2.slideTo(4, 1000, false);
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('div',{staticClass:"gcover"}),_vm._v(" "),_c('div',{staticClass:"citySelector"},[_c('div',{staticClass:"selectSlide"}),_vm._v(" "),_c('div',{staticClass:"province"},[_c('swiper',{ref:"provinceSwiper",attrs:{"options":_vm.provinceOption,"not-next-tick":_vm.notNextTick}},[_c('swiper-slide',[_vm._v("Slide 1")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 2")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 3")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 4")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 5")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 6")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 7")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 8")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 9")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 10")])],1)],1),_vm._v(" "),_c('div',{staticClass:"city"},[_c('swiper',{ref:"citySwiper",attrs:{"options":_vm.cityOption,"not-next-tick":_vm.notNextTick}},[_c('swiper-slide',[_vm._v("Slide 1")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 2")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 3")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 4")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 5")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 6")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 7")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 8")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 9")]),_vm._v(" "),_c('swiper-slide',[_vm._v("Slide 10")])],1)],1)])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-4da6a6af"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4da6a6af", __vue__options__)
  } else {
    hotAPI.reload("data-v-4da6a6af", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],432:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".theme-item[data-v-b4fb911e] {\r\n    text-align: center;\r\n    width: 40%;\r\n\tbackground-color: gray;\r\n\tfont-size: 2rem;\r\n    padding: 6px;\r\n    margin: 6px;\r\n}\r\n.current[data-v-b4fb911e] {\r\n    background-color: green;\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    methods: {
        isCurrent: function isCurrent(theme) {
            return theme === this.$root.theme;
        },
        onSwitchTheme: function onSwitchTheme(theme) {
            this.$root.theme = theme;
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("界面主题切换")]),_vm._v(" "),_c('ol',_vm._l((_vm.$root.themes),function(item,idx){return _c('li',{key:item[0],staticClass:"theme-item",class:{current: _vm.isCurrent(item[0])}},[_c('a',{on:{"click":function($event){_vm.onSwitchTheme(item[0])}}},[_vm._v(_vm._s(item[1])+" "+_vm._s(item[0]))])])}))])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-b4fb911e"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-b4fb911e", __vue__options__)
  } else {
    hotAPI.reload("data-v-b4fb911e", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],433:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        document.getElementById("btn_sure").onclick = onSure;
        function onSure() {
            $("#goodcover").fadeIn(300);
        }
        document.getElementById("goodcover").onclick = onCover;
        function onCover() {
            $(this).fadeOut(300);
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"center_title"},[_vm._v("请取走申请书并签名区域内签字")]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn surebtn",attrs:{"id":"btn_sure"}},[_vm._v("确定")])]),_vm._v(" "),_c('div',{attrs:{"id":"goodcover"}},[_c('div',{staticClass:"modal"},[_c('p',{staticClass:"modal_title"},[_vm._v("信息提示")]),_vm._v(" "),_c('p',{staticClass:"md_center_title"},[_vm._v("是否确认已在申请书签字？")]),_vm._v(" "),_c('div',{staticClass:"modal_btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"modal_btn_back"}},[_vm._v("返   回")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"modal_btn_sure"}},[_vm._v("确   定")])])])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-211cca76", __vue__options__)
  } else {
    hotAPI.reload("data-v-211cca76", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],434:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("请收好您的银行卡")]),_vm._v(" "),_c('div',{staticClass:"hsgif"},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/'+_vm.$root.getImgPath()+'TakeCard.gif')}})]),_vm._v(" "),_c('EMBED',{attrs:{"name":"ViewSound","SRC":"wav/请收好您的银行卡.wav","Loop":"false","AUTOSTART":"true","Hidden":"true","MASTERSOUND":""}})],1)}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-8daa2d2a", __vue__options__)
  } else {
    hotAPI.reload("data-v-8daa2d2a", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],435:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("请取走凭条")]),_vm._v(" "),_c('div',{staticClass:"hsgif"},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/'+_vm.$root.getImgPath()+'PrintReceipt.gif')}})])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-dc6d6ba6", __vue__options__)
  } else {
    hotAPI.reload("data-v-dc6d6ba6", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],436:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"center_title"},[_vm._v("对不起，交易失败")])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-9a5fcd86", __vue__options__)
  } else {
    hotAPI.reload("data-v-9a5fcd86", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],437:[function(require,module,exports){
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	beforeMount: function beforeMount() {
		console.log('before Quit');
		this.$root.$emit('beforeQuit');
	},
	mounted: function mounted() {
		var vm = this;

		var intTime = $("#modal_CountDown").html();
		if (intTime <= 0) {
			intTime = 10;
		}
		function setTimeHtml() {
			intTime -= 1;
			if (intTime <= 0) {
				clearInterval(interval);

				setVar("GD_A01_IsLogin", "0");
				setVar("GD_A01_BUS_IDN_RST_PROC", "1");
				exitScene("STA_CANCEL");
			}
			$("#modal_CountDown").html(intTime);
		}
		var interval = setInterval(setTimeHtml, 1000);
		document.getElementById("modal_btn_sure").onclick = onSure;
		document.getElementById("modal_btn_back").onclick = onBack;
		function onSure() {
			clearInterval(interval);

			setVar("GD_A01_IsLogin", "0");
			setVar("GD_A01_BUS_IDN_RST_PROC", "1");

			exitScene("STA_CANCEL");
		}
		function onBack() {
			console.log('emit cancelQuit');
			vm.$root.$emit('cancelQuit');
			clearInterval(interval);
			$("#pagePopup").fadeOut(500);
		}
	}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('p',{staticClass:"modal_tip"},[_vm._v(_vm._s(_vm.$t('tip.00001')))]),_vm._v(" "),_c('div',{staticClass:"modal_time",attrs:{"id":"modal_CountDown"}},[_vm._v("10")]),_vm._v(" "),_vm._m(0)])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"modal_btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"modal_btn_back"}},[_vm._v("取   消")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"modal_btn_sure"}},[_vm._v("确   定")])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6eb43bb8", __vue__options__)
  } else {
    hotAPI.reload("data-v-6eb43bb8", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299}],438:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("交易成功")])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-494c1d33", __vue__options__)
  } else {
    hotAPI.reload("data-v-494c1d33", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],439:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert("img[data-v-4a25acc6]{\r\n    display: block;\r\n    margin: auto;\r\n    width: 20%;\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    mounted: function mounted() {
        var strTransTip = getTransTip();
        if (strTransTip != null && strTransTip != "") {
            $("#TradingTip").html(strTransTip);
        } else {
            $("#TradingTip").html("交易正在进行，请稍候...");
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal"},[_c('div',{staticClass:"modal_tradingBox",attrs:{"id":"modal_tradingBox"}},[_c('div',[_c('img',{attrs:{"src":_vm.$root.imgPath('img/loading.gif')}}),_vm._v(" "),_c('div',{attrs:{"id":"TradingTip"}},[_vm._v("交易正在进行，请稍候...")])])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-4a25acc6"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4a25acc6", __vue__options__)
  } else {
    hotAPI.reload("data-v-4a25acc6", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],440:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("审核员审核")])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6783beea", __vue__options__)
  } else {
    hotAPI.reload("data-v-6783beea", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],441:[function(require,module,exports){
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-dialog',{attrs:{"title":"后台繁忙，是否继续等待?"}})}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0ca6f56b", __vue__options__)
  } else {
    hotAPI.reload("data-v-0ca6f56b", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299}],442:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".Result_top[data-v-740be3d6]{\r\n    height: 10%;\r\n    width: 100%;\r\n    text-align: center;\r\n    position: relative;\r\n    top: 40px;\r\n}\r\n.Result_top p[data-v-740be3d6]{\r\n\tdisplay: inline-block;\r\n\tfont-size: 1.8rem;\r\n}\r\n.swiper-slideNN1[data-v-740be3d6]{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content:center;\r\n    flex-wrap: wrap;\r\n    height:550px;\r\n}\r\n.MediaPic[data-v-740be3d6]{\r\n    width: 80%;\r\n    height: 82%;\r\n    margin: 2% auto;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n}  \r\n.CardMedia[data-v-740be3d6]{\r\n    position: relative;\r\n    text-align: center;\r\n    width: 40%;\r\n    height: 88%;\r\n    margin: 2% auto;\r\n    background: transparent;\r\n    border: 1px solid #008b6e;\r\n    border-radius: 10px;\r\n    box-shadow: 0px 16px 65px -10px #999;\r\n  }\r\n\r\n.CardMedia.on[data-v-740be3d6]{\r\n  background: rgba(130, 219, 206,0.4);\r\n }\r\n.CardMedia img[data-v-740be3d6]{\r\n    display: flex;\r\n    justify-content:center;\r\n    align-items: center;\r\n}\r\n.CardMedia p[data-v-740be3d6]{\r\n   font-size: 2.4rem;\r\n   margin-top:-10px;\r\n   margin-bottom: 10px;\r\n  }\r\n .CardMedia p span[data-v-740be3d6]{\r\n      font-size:1.7rem;\r\n      text-align:left;\r\n  }\r\n.x-modal[data-v-740be3d6]{\r\n\twidth:75%;\r\n\theight:75%;\r\n\tmargin: 6% auto;\r\n}\r\n.btn[data-v-740be3d6]{\r\n\tmargin-left:6%; \r\n\tmargin-right:6%;\r\n}\r\n.gradient[data-v-740be3d6]{ \r\n    background: -webkit-linear-gradient(top, rgb(186,239,246), rgb(142,203,211));\r\n    background: -moz-linear-gradient(top, rgb(186,239,246), rgb(142,203,211));\r\n    background: linear-gradient(to bottom,rgb(186,239,246), rgb(142,203,211));  \r\n    /* background: linear-gradient(#D4F7FD, #95D5DF); 标准的语法  */\r\n} \r\n.clsFork[data-v-740be3d6]{\r\n    margin-left: 92%;\r\n    width: 100px;\r\n    height: 9%;\r\n}\r\n.clsFork img[data-v-740be3d6]{\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    z-index: 100;\r\n    margin-left: 36px;\r\n}\r\n@media screen and (min-width: 1200px) and  (max-width:1380px) {\r\n    .CardMedia[data-v-740be3d6]{\r\n        height: 84%;\r\n        width: 45%;\r\n        margin: 4% auto;\r\n    }\r\n    .clsFork img[data-v-740be3d6]{\r\n        z-index: 100;\r\n        padding: 10px;\r\n        border-radius: 10px;\r\n        margin-left: 5px;  \r\n    }\r\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _vuex = require("vuex");

exports.default = {
    data: function data() {
        return {
            getKeys: ["GD_A01_CodPdbreed", "GD_MarketingAllNumber", "GD_ReadEmail", "GD_A01_IsLogin", "GD_A01_Trans_Tagflg", "GD_A01_Trans_Credithigh", "GD_A01_Trans_Recomprc", "GD_A01_Trans_Recomproccord", "GD_A01_Trans_Prcfeature", "GD_A01_Trans_Mktevent", "GD_A01_TcpCard_Data"],
            setKeys: ["GD_A01_MenuID", "GD_A01_Trans_SaleFlag", "GD_B09_sltCardInfo", "GD_B09_sltCardName", "GD_B09_sltCardImg", "P_B09_Pdno", "P_B09_Appinfotype"],
            productList: "[{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00001\",\"VLU_ITEM_DIC\":\"双利丰:全部双利丰产品（余额>0）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00002\",\"VLU_ITEM_DIC\":\"贷记卡:全部贷记卡类产品（卡片数量）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00003\",\"VLU_ITEM_DIC\":\"贷款:全部贷款类产品（余额>0）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00004\",\"VLU_ITEM_DIC\":\"基金:全部基金类产品（余额>0）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00005\",\"VLU_ITEM_DIC\":\"理财产品:全部理财类产品（余额>0）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00006\",\"VLU_ITEM_DIC\":\"国债:全部国债类产品（余额>0）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00007\",\"VLU_ITEM_DIC\":\"保险:全部保险类产品（保费>0）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00008\",\"VLU_ITEM_DIC\":\"网上银行（签约标识）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00009\",\"VLU_ITEM_DIC\":\"手机银行（签约标识）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00010\",\"VLU_ITEM_DIC\":\"电话银行（签约标识）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00011\",\"VLU_ITEM_DIC\":\"基金定投（签约标识）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00012\",\"VLU_ITEM_DIC\":\"代发工资（签约标识）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00013\",\"VLU_ITEM_DIC\":\"消息服务（签约标识）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00014\",\"VLU_ITEM_DIC\":\"转账电话（签约标识）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00015\",\"VLU_ITEM_DIC\":\"商惠通（签约标识）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00016\",\"VLU_ITEM_DIC\":\"银期转账（签约标识）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00017\",\"VLU_ITEM_DIC\":\"金市通（签约标识）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00018\",\"VLU_ITEM_DIC\":\"外汇宝（签约标识）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00019\",\"VLU_ITEM_DIC\":\"个人资金归集（签约标识）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00020\",\"VLU_ITEM_DIC\":\"存金通（黄金存折）（余额>0）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00021\",\"VLU_ITEM_DIC\":\"第三方存管（签约标识）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00022\",\"VLU_ITEM_DIC\":\"外币存款账户（余额>0）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00023\",\"VLU_ITEM_DIC\":\"存贷通（签约标识）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00024\",\"VLU_ITEM_DIC\":\"结售汇（交易标识）\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00025\",\"VLU_ITEM_DIC\":\"随薪贷签约标识\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00026\",\"VLU_ITEM_DIC\":\"留学贷款标识\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00027\",\"VLU_ITEM_DIC\":\"网捷贷签约标识\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00028\",\"VLU_ITEM_DIC\":\"循环贷款签约标识\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00029\",\"VLU_ITEM_DIC\":\"大额存单\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00030\",\"VLU_ITEM_DIC\":\"存金通2号\"},{\"NAM_DIC\":\"精准营销产品列表\",\"NUM_DIC\":\"00000001\",\"NUM_ITEM_DIC\":\"P00031\",\"VLU_ITEM_DIC\":\"私行专属产品\"},]",
            goodsList: [],
            Credithigh: "",
            recomprc: "",
            prcfeature: "",
            mktevent: "",
            Pic_URL: "",
            thePath: "",
            LocalPic_URL: "./img/二维码-个人掌银.png",
            IsShow: false,
            num: 2,
            swiper: null,
            Page1: false,
            Page2: false,
            urlList: [],
            clickList: [],
            BtnList: [],
            CodPdbreed: [],
            BoxPage: 0,
            BoxWrap: "",
            addContent: "",
            marketingText: "",
            marketingText1: "开通电子银行可在线上享受理财、转账、查询、信用卡还款、生活缴费、外汇等服务，<font style ='color:red'>手续费全免</font>，全方面满足您的生活所需，快来开通吧！",
            marketingText2: "开通消息服务可及时享受您的账户动账通知，全天候服务，及时响应，为您提供7×24小时的服务。",
            currentPage: 0 };
    },

    computed: _extends({}, (0, _vuex.mapState)(['pool'])),
    methods: _extends({
        initPage: function initPage() {
            this.initPool(this.$data);
        },
        onClose: function onClose() {
            setVar("GD_ReadEmail", "0");
            this.onContinue();
        },
        onBack: function onBack() {
            setVar("GD_A01_InitiativeMarketing", "0");
            this.onCancel();
        },
        onSure: function onSure() {
            setVar("GD_A01_InitiativeMarketing", "0");
            this.onContinue();
        },
        onSignEBank: function onSignEBank() {
            this.pool.GD_A01_MenuID = "020001";
            this.submit(["GD_A01_MenuID"]);
            this.exitScene("STA_SELECTPRODUCT");
        },
        OnSelectProduct: function OnSelectProduct() {
            if ("" == this.pool.GD_A01_Trans_Recomproccord || undefined == this.pool.GD_A01_Trans_Recomproccord) {
                return;
            }

            this.pool.GD_A01_MenuID = "090001";
            this.pool.GD_A01_Trans_SaleFlag = "1";
            this.pool.GD_B09_sltCardImg = this.Pic_URL.split("\\").join("\\\\");

            var pdno = this.pool.GD_A01_Trans_Recomproccord;
            if (pdno == "CCGY8I" || pdno == "CCPY8I" || pdno == "CCGY6I" || pdno == "CCGY5I" || pdno == "CCPY5I" || pdno == "CCGY9I" || pdno == "CCGY2I" || pdno == "CCPY2I" || pdno == "CCGZ9I" || pdno == "CCPZ9I" || pdno == "CCGX2I" || pdno == "CCPX2I" || pdno == "CCGJ3I") {
                this.pool.P_B09_Appinfotype = "01";
            } else {
                this.pool.P_B09_Appinfotype = "03";
            }

            this.pool.P_B09_Pdno = this.pool.GD_A01_Trans_Recomproccord;
            this.submit(this.setKeys);
            this.exitScene("STA_SELECTPRODUCT");
        },
        GetVluPicSrc: function GetVluPicSrc(strProductCord, strJsonData) {
            if ("" != strJsonData && undefined != strJsonData) {
                var jsonData = JSON.parse(strJsonData);

                for (var i = 0; i < jsonData.length; i++) {
                    if (strProductCord == jsonData[i].COD_PD) {
                        this.pool.GD_B09_sltCardInfo = JSON.stringify(jsonData[i]).split("\\").join("\\\\");;
                        this.pool.GD_B09_sltCardName = jsonData[i].NAM_PD;
                        return jsonData[i].VLU_PIC_1;
                    }
                }
            }
            return "";
        },
        initData: function initData() {
            this.recomprc = this.pool.GD_A01_Trans_Recomprc;
            this.prcfeature = this.pool.GD_A01_Trans_Prcfeature;
            this.mktevent = this.pool.GD_A01_Trans_Mktevent;
            this.Credithigh = this.pool.GD_A01_Trans_Credithigh;
            if (this.pool.GD_A01_TcpCard_Data != "" && this.pool.GD_A01_TcpCard_Data != undefined && this.pool.GD_A01_Trans_Recomproccord != "" && this.pool.GD_A01_Trans_Recomproccord != undefined) {
                this.Pic_URL = this.GetVluPicSrc(this.pool.GD_A01_Trans_Recomproccord, this.pool.GD_A01_TcpCard_Data) + this.pool.GD_A01_Trans_Recomproccord + ".jpg";
                if (this.pool.GD_A01_Trans_Tagflg == "N") {
                    this.Page1 = true;
                }
            } else {
                this.Page1 = false;
            }
            if (this.pool.GD_A01_CodPdbreed.trim().length > 0) {
                this.Page2 = true;
                if (this.pool.GD_A01_CodPdbreed.indexOf("P00008") == -1 && this.pool.GD_A01_CodPdbreed.indexOf("P00009") == -1 && this.pool.GD_A01_CodPdbreed.indexOf("P00013") != -1) {
                    this.marketingText = this.marketingText2;
                } else {
                    this.marketingText = this.marketingText1;
                }
            } else {
                this.Page2 = false;
            }

            if (this.pool.GD_A01_IsLogin == "1" && this.pool.GD_ReadEmail != "1") {
                this.IsShow = true;
            } else {
                this.IsShow = false;
            }
        }
    }, (0, _vuex.mapActions)(['initPool', 'fetch', 'submit', 'onCancel', 'onContinue', 'exitScene'])),
    mounted: function mounted() {
        this.initPage();
        var vm = this;
    },

    watch: {
        pool: function pool(value) {
            if (value.hasOwnProperty("GD_A01_TcpCard_Data")) {
                this.initData();
            }
        }
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"x-modal gradient"},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.IsShow),expression:"IsShow"}],staticClass:"Result_top"},[_c('p',{staticStyle:{"font-size":"3.2rem"}},[_vm._v("您是否继续办理业务？")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",on:{"click":_vm.onSure}},[_vm._v("继续办理")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",on:{"click":_vm.onBack}},[_vm._v("结束办理")])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(!_vm.IsShow),expression:"!IsShow"}],staticClass:"clsFork",on:{"click":_vm.onClose}},[_c('img',{attrs:{"src":'img/删除.png'}})]),_vm._v(" "),_c('div',{staticClass:"MediaPic"},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.Page1),expression:"Page1"}],staticClass:"CardMedia",on:{"click":_vm.OnSelectProduct}},[_c('img',{attrs:{"height":"35%","src":_vm.Pic_URL}}),_vm._v(" "),_c('p',[_vm._v(_vm._s(_vm.recomprc))]),_vm._v(" "),_c('p',[_c('span',[_vm._v(_vm._s(_vm.prcfeature)+"。"+_vm._s(_vm.mktevent)+"。")])]),_vm._v(" "),_c('p',[_vm._v("预授信均值："),_c('font',{staticStyle:{"color":"red"}},[_vm._v(_vm._s(_vm.Credithigh)+"元")])],1),_vm._v(" "),_c('button',{staticClass:"btn"},[_vm._v("立即申请")])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.Page2),expression:"Page2"}],staticClass:"CardMedia",on:{"click":_vm.onSignEBank}},[_c('img',{attrs:{"src":'./img/二维码-个人掌银.png'}}),_vm._v(" "),_c('p',{domProps:{"innerHTML":_vm._s(_vm.marketingText)}}),_vm._v(" "),_c('button',{staticClass:"btn"},[_vm._v("立即办理")])])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-740be3d6"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-740be3d6", __vue__options__)
  } else {
    hotAPI.reload("data-v-740be3d6", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300,"vuex":"vuex"}],443:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".bb[data-v-647687f3]{\n  position: fixed;\n  top: 50%; \n  left: 50%;\n  -webkit-animation: clockwise 5s ;\n  animation: clockwise 5s ;\n  transform-origin: 300px 500px;\n  animation-fill-mode: forwards;\n}\n.bb img[data-v-647687f3] {\n  display: block;\n  position:relative;\n  width: 300px;\n  height: 300px;\n  opacity: 1;\n  animation: change 5s, mylogo 0.6s  5.1s 4 alternate;\n  -moz-animation: change 5s, mylogo 0.6s  5.1s 4 alternate;\n  -webkit-animation: change 5s, mylogo 0.6s  5.1s 4 alternate;\n  -o-animation: change 5s, mylogo 0.6s  5.1s 4 alternate;\n\n  transform: rotate(-90deg);\n  -ms-transform: rotate(-90deg);\n  -webkit-transform: rotate(-90deg);\n  -o-transform: rotate(-90deg);\n  -moz-transform: rotate(-90deg);\n\n}\n@-webkit-keyframes clockwise{\n  0%  { -webkit-transform: rotate(0deg) ;  }\n  100%{ -webkit-transform: rotate(90deg); }\n}\n@keyframes clockwise {\n  0%  { transform: rotate(0deg) ; }\n  100%{ transform: rotate(90deg); }\n}\n@keyframes change{\n    from {\n      width: 0px;\n      height: 0px;\n      opacity: 0;\n    }\n    to {\n      width: 300px;\n      height: 300px;\n      opacity: 1;\n    }\n}\n@keyframes mylogo{\n    from {\n      left : 20px;\n    }\n    to {\n      left: -20px;\n    }\n}")
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('div',{staticClass:"bb"},[_c('img',{attrs:{"src":_vm.$root.imgPath('img/生日快乐.png'),"alt":""}})])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-647687f3"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-647687f3", __vue__options__)
  } else {
    hotAPI.reload("data-v-647687f3", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],444:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _vuex = require("vuex");

exports.default = {
    data: function data() {
        return {
            title: "理财产品认购/申购信息填写"
        };
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v(_vm._s(_vm.title))]),_vm._v(" "),_c('ul',{staticClass:"productallinfo"},[_c('li',[_c('p',{staticClass:"mainleft"},[_c('span',[_vm._v("姓名：")]),_vm._v(" "),_c('span',{staticClass:"productinforight",attrs:{"id":""}},[_vm._v("XXXXX")])]),_vm._v(" "),_c('p',[_c('span',[_vm._v("证件类型：")]),_vm._v(" "),_c('span',{staticClass:"productinforight",attrs:{"id":""}},[_vm._v("XXXXX")])])]),_vm._v(" "),_c('li',[_c('p',{staticClass:"mainleft"},[_c('span',[_vm._v("产品代码：")]),_vm._v(" "),_c('span',{staticClass:"productinforight",attrs:{"id":""}},[_vm._v("XXXXX")])]),_vm._v(" "),_c('p',[_c('span',[_vm._v("证件号码：")]),_vm._v(" "),_c('span',{staticClass:"productinforight",attrs:{"id":""}},[_vm._v("XXXXX")])])]),_vm._v(" "),_c('li',[_c('p',{staticClass:"mainleft"},[_c('span',[_vm._v("产品名称：")]),_vm._v(" "),_c('span',{staticClass:"productinforight",attrs:{"id":""}},[_vm._v("XXXXX")])]),_vm._v(" "),_c('p',[_c('span',[_vm._v("币种：")]),_vm._v(" "),_c('span',{staticClass:"productinforight",attrs:{"id":""}},[_vm._v("XXXXX")])])]),_vm._v(" "),_c('li',[_c('p',{staticClass:"mainleft"},[_c('span',[_vm._v("产品风险类型：")]),_vm._v(" "),_c('span',{staticClass:"productinforight",attrs:{"id":""}},[_vm._v("XXXXX")])]),_vm._v(" "),_c('p',[_c('span',[_vm._v("产品类型：")]),_vm._v(" "),_c('span',{staticClass:"productinforight",attrs:{"id":""}},[_vm._v("XXXXX")])])]),_vm._v(" "),_c('li',[_c('p',{staticClass:"mainleft"},[_c('span',[_vm._v("发售起始日：")]),_vm._v(" "),_c('span',{staticClass:"productinforight",attrs:{"id":""}},[_vm._v("XXXXX")])]),_vm._v(" "),_c('p',[_c('span',[_vm._v("发售终止日：")]),_vm._v(" "),_c('span',{staticClass:"productinforight",attrs:{"id":""}},[_vm._v("XXXXX")])])]),_vm._v(" "),_c('li',[_c('p',{staticClass:"mainleft"},[_c('span',[_vm._v("起息日：")]),_vm._v(" "),_c('span',{staticClass:"productinforight",attrs:{"id":""}},[_vm._v("XXXXX")])]),_vm._v(" "),_c('p',[_c('span',[_vm._v("到期日：")]),_vm._v(" "),_c('span',{staticClass:"productinforight",attrs:{"id":""}},[_vm._v("XXXXX")])])]),_vm._v(" "),_c('li',[_c('p',{staticClass:"mainleft"},[_c('span',[_vm._v("起点金额：")]),_vm._v(" "),_c('span',{staticClass:"productinforight",attrs:{"id":""}},[_vm._v("XXXXX")])]),_vm._v(" "),_c('p',[_c('span',[_vm._v("递增金额：")]),_vm._v(" "),_c('span',{staticClass:"productinforight",attrs:{"id":""}},[_vm._v("XXXXX")])])]),_vm._v(" "),_c('li',[_c('p',{staticClass:"mainleft"},[_c('span',[_vm._v("期限：")]),_vm._v(" "),_c('span',{staticClass:"productinforight",attrs:{"id":""}},[_vm._v("XXXXX")])]),_vm._v(" "),_c('p',[_c('span',[_vm._v("预期收益率：")]),_vm._v(" "),_c('span',{staticClass:"productinforight",attrs:{"id":""}},[_vm._v("XXXXX")])])])]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"modal_btn_back"}},[_vm._v("上一步")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"modal_btn_sure"}},[_vm._v("下一步")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-bd63f36a", __vue__options__)
  } else {
    hotAPI.reload("data-v-bd63f36a", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vuex":"vuex"}],445:[function(require,module,exports){
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _vuex = require("vuex");

exports.default = {
    data: function data() {
        return {
            InputIDInfo: "基金定投持有列表"
        };
    },
    mounted: function mounted() {}
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('table',{staticClass:"detail_tab"},[_c('thead',[_c('tr',[_c('td',[_vm._v("基金代码")]),_vm._v(" "),_c('td',[_vm._v("基金名称")]),_vm._v(" "),_c('td',[_vm._v("投资管理人")]),_vm._v(" "),_c('td',[_vm._v("基金单位净值")]),_vm._v(" "),_c('td',[_vm._v("定投类型")]),_vm._v(" "),_c('td',[_vm._v("定投周期")]),_vm._v(" "),_c('td',[_vm._v("定投金额")]),_vm._v(" "),_c('td',[_vm._v("合约号")]),_vm._v(" "),_c('td')])]),_vm._v(" "),_c('tbody',{attrs:{"id":"TbodyQuery"}},[_c('tr',[_c('td',[_vm._v("600001")]),_vm._v(" "),_c('td',[_vm._v("生命一号")]),_vm._v(" "),_c('td',[_vm._v("1000.00")]),_vm._v(" "),_c('td',[_vm._v("30天")]),_vm._v(" "),_c('td',[_vm._v("3%")]),_vm._v(" "),_c('td',[_vm._v("2017/8/1")]),_vm._v(" "),_c('td',[_vm._v("2017/8/30")]),_vm._v(" "),_c('td',[_vm._v("111111")]),_vm._v(" "),_c('td',[_c('button',{staticClass:"detailbtn",on:{"click":_vm.onDetail}},[_vm._v("详情")])])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("600001")]),_vm._v(" "),_c('td',[_vm._v("生命一号")]),_vm._v(" "),_c('td',[_vm._v("1000.00")]),_vm._v(" "),_c('td',[_vm._v("30天")]),_vm._v(" "),_c('td',[_vm._v("3%")]),_vm._v(" "),_c('td',[_vm._v("2017/8/1")]),_vm._v(" "),_c('td',[_vm._v("2017/8/30")]),_vm._v(" "),_c('td',[_vm._v("111111")]),_vm._v(" "),_c('td',[_c('button',{staticClass:"detailbtn",on:{"click":_vm.onDetail}},[_vm._v("详情")])])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("600001")]),_vm._v(" "),_c('td',[_vm._v("生命一号")]),_vm._v(" "),_c('td',[_vm._v("1000.00")]),_vm._v(" "),_c('td',[_vm._v("30天")]),_vm._v(" "),_c('td',[_vm._v("3%")]),_vm._v(" "),_c('td',[_vm._v("2017/8/1")]),_vm._v(" "),_c('td',[_vm._v("2017/8/30")]),_vm._v(" "),_c('td',[_vm._v("111111")]),_vm._v(" "),_c('td',[_c('button',{staticClass:"detailbtn",on:{"click":_vm.onDetail}},[_vm._v("详情")])])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("600001")]),_vm._v(" "),_c('td',[_vm._v("生命一号")]),_vm._v(" "),_c('td',[_vm._v("1000.00")]),_vm._v(" "),_c('td',[_vm._v("30天")]),_vm._v(" "),_c('td',[_vm._v("3%")]),_vm._v(" "),_c('td',[_vm._v("2017/8/1")]),_vm._v(" "),_c('td',[_vm._v("2017/8/30")]),_vm._v(" "),_c('td',[_vm._v("111111")]),_vm._v(" "),_c('td',[_c('button',{staticClass:"detailbtn",on:{"click":_vm.onDetail}},[_vm._v("详情")])])])])]),_vm._v(" "),_c('div',{staticClass:"change_page"},[_c('button',{attrs:{"id":""}},[_vm._v("上一页")]),_vm._v(" "),_c('button',{attrs:{"id":""}},[_vm._v("下一页")])]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"modal_btn_back"}},[_vm._v("普通定投")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"modal_btn_sure"}},[_vm._v("智能定投")])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4706b254", __vue__options__)
  } else {
    hotAPI.reload("data-v-4706b254", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vuex":"vuex"}],446:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".title[data-v-18b6f062] {\n    position: relative;\n    padding-top: 2%;\n    font-size: 4.3rem;\n    text-align: center;\n    color: #008B6E;\n    letter-spacing: 3px;\n}\n.title[data-v-18b6f062]:after {\n    content: \"\";\n    border-top: 2px solid #008B6E;\n    display: inline-block;\n    position: relative;\n    width: 300px;\n    top: -16px;\n    right: -28px;\n}\n.title[data-v-18b6f062]:before {\n    content: \"\";\n    border-top: 2px solid #008B6E;\n    display: inline-block;\n    position: relative;\n    width: 300px;\n    top: -16px;\n    left: -28px;\n}\n.inputIDinfo[data-v-18b6f062]{   \n    font-size:3.6rem;\n    margin:0 auto;\n    margin-top:2%;\n    line-height:100px;\n}\n.IDinfoleft[data-v-18b6f062]{    \n    text-align:right; \n}\n.IDinforight[data-v-18b6f062]{ \n    text-align:left;\n    color:#6600ff;\n}\n.btn[data-v-18b6f062]{   \n    padding:10px 22px;\n    font-size:3rem;\n    color:#fff;\n}\n.btnbox[data-v-18b6f062] {\n    position: absolute;\n    bottom: 29%;\n    width: 100%;\n    text-align: center;\n}\n.input_info[data-v-18b6f062]{    \n    height: 60px;\n    border: 1px solid #008B6E;\n    border-radius: 10px;\n    box-shadow: inset 2px 5px 16px 0px #CDCDCD;\n    font-size: 3.6rem;\n    padding: 0px 10px;\n    color:#6600ff;\n}")
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _vuex = require("vuex");

exports.default = {
    data: function data() {
        return {
            InputIDInfo: "输入证件信息",
            IDType: "证件类型：",
            CustomerName: "客户姓名：",
            IDNumber: "证件号码："
        };
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v(_vm._s(_vm.InputIDInfo))]),_vm._v(" "),_c('table',{staticClass:"inputIDinfo"},[_c('tr',[_c('td',{staticClass:"IDinfoleft"},[_vm._v(_vm._s(_vm.IDType))]),_vm._v(" "),_c('td',{staticClass:"IDinforight"},[_vm._v("港澳居民来往内地通")])]),_vm._v(" "),_c('tr',[_c('td',{staticClass:"IDinfoleft"},[_vm._v(_vm._s(_vm.CustomerName))]),_vm._v(" "),_c('td',{staticClass:"IDinforight"},[_c('input',{staticClass:"input_info",attrs:{"type":"text","id":"Name"}})])]),_vm._v(" "),_c('tr',[_c('td',{staticClass:"IDinfoleft"},[_vm._v(_vm._s(_vm.IDNumber))]),_vm._v(" "),_c('td',{staticClass:"IDinforight"},[_c('input',{staticClass:"input_info",attrs:{"type":"text","id":"IDNo"}})])])]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"modal_btn_back"}},[_vm._v("上一步")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"modal_btn_sure"}},[_vm._v("下一步")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-18b6f062"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-18b6f062", __vue__options__)
  } else {
    hotAPI.reload("data-v-18b6f062", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300,"vuex":"vuex"}],447:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".support_tran[data-v-3a9106a4]{    \n     color: #333;\n     font-size: 2.8rem;\n     font-weight: 600;\n     margin-top:3%;\n}\n.check_box[data-v-3a9106a4]{  \n    width:28%;\n    text-align: left;\n}\nul[data-v-3a9106a4]{  \n     font-size: 1.8rem;\n     margin:0 auto;\n     margin-top:3%;\n     text-align: left;\n     width:88%;\n}\nli[data-v-3a9106a4]{  \n    margin-bottom:8px;\n}\n.input_amount[data-v-3a9106a4] {\n     width: 158px;\n     height: 30px;\n     border-radius: 2px;\n     font-size:1.8rem;\n     margin-left:10px;\n     margin-right:0;\n     font-size:1.8rem;\n }\n .input_info[data-v-3a9106a4]{\n     height: 30px;\n     width:198px;\n     border-radius: 2px;\n     margin-left:10px;\n     margin-right:0;\n     font-size:1.8rem;\n }\n .input_long[data-v-3a9106a4]{    \n     height: 30px;\n     width:616px;\n     border-radius: 2px;\n     margin-left:10px;\n     margin-right:0;\n     font-size:1.8rem;\n }\n .check_box i[data-v-3a9106a4],.radio_box i[data-v-3a9106a4]{\n     width: 30px;\n     height: 30px;\n }\n .btnbox[data-v-3a9106a4] {\n     bottom: 2%;\n }\n .radio_box[data-v-3a9106a4],.check_box[data-v-3a9106a4]{  \n     font-size:1.8rem;\n }\n .engAdd[data-v-3a9106a4]{    \n     width:380px;\n }\n .chAdd[data-v-3a9106a4]{ \n     width:118px;\n }\n .selectType_long[data-v-3a9106a4] {\n     width: 198px;\n     height: 30px;\n     appearance: none;\n     -moz-appearance: none;\n     -webkit-appearance: none;\n     border-radius: 5px;\n     background: url(img/customer/select.png) no-repeat scroll right center transparent;\n     font-size: 1.6rem;\n     color: #6E0FFF;\n     background-size: 30px;\n     line-height: 28px;\n }\n .inputlast[data-v-3a9106a4]{ \n     width:800px;\n }\n @media screen and (max-width:1300px){   \n     .input_long[data-v-3a9106a4]{    \n         width:368px;\n     }\n     .chAdd[data-v-3a9106a4]{ \n         width:110px;\n     }\n     .input_amount[data-v-3a9106a4]{  \n         width:120px;\n     }\n     .engAdd[data-v-3a9106a4]{    \n         width:278px;\n     }\n     .inputlast[data-v-3a9106a4]{ \n         width:860px;\n     }\n }\n     @media screen and (min-width: 1300px) and  (max-width:1380px){   \n     ul[data-v-3a9106a4]{  \n         margin-top:-1%;\n     }\n\n     .input_long[data-v-3a9106a4]{    \n         width:368px;\n     }\n     .chAdd[data-v-3a9106a4]{ \n         width:110px;\n     }\n     .input_amount[data-v-3a9106a4]{  \n         width:120px;\n     }\n     .engAdd[data-v-3a9106a4]{    \n         width:278px;\n     }\n     .inputlast[data-v-3a9106a4]{ \n         width:860px;\n     }\n     \n }")
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("个人税收居民身份声明")]),_vm._v(" "),_c('ul',[_c('li',[_vm._v(" 税收居民标志：仅为非居民")]),_vm._v(" "),_c('li',[_c('span',[_vm._v("\n                    姓（英文或拼音）\n                    "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}})]),_vm._v(" "),_c('span',[_vm._v("\n                    名（英文或拼音）\n                    "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}})])]),_vm._v(" "),_c('li',[_vm._v("\n                您是否有税收居民国（地区）及纳税人识别号？\n                "),_c('label',{staticClass:"radio_box"},[_vm._v("\n                    有\n                    "),_c('input',{attrs:{"type":"radio","name":"account","id":""}}),_c('i')]),_vm._v(" "),_c('label',{staticClass:"radio_box"},[_vm._v("\n                    无 \n                    "),_c('input',{attrs:{"type":"radio","name":"account","id":""}}),_c('i')])]),_vm._v(" "),_c('li',[_vm._v("\n                税收居民国（地区）及纳税人识别号：\n                "),_c('select',{staticClass:"selectType_long",attrs:{"name":"select","id":"IssueId"}}),_vm._v(" "),_c('input',{staticClass:"input_info",attrs:{"type":"text"}})]),_vm._v(" "),_c('li',[_vm._v("\n               税收居民国（地区）及纳税人识别号：\n               "),_c('select',{staticClass:"selectType_long",attrs:{"name":"select","id":"IssueId"}}),_vm._v(" "),_c('input',{staticClass:"input_info",attrs:{"type":"text"}})]),_vm._v(" "),_c('li',[_vm._v("\n               税收居民国（地区）及纳税人识别号：\n               "),_c('select',{staticClass:"selectType_long",attrs:{"name":"select","id":"IssueId"}}),_vm._v(" "),_c('input',{staticClass:"input_info",attrs:{"type":"text"}})]),_vm._v(" "),_c('li',[_vm._v("\n               税收居民国（地区）及纳税人识别号：\n               "),_c('select',{staticClass:"selectType_long",attrs:{"name":"select","id":"IssueId"}}),_vm._v(" "),_c('input',{staticClass:"input_info",attrs:{"type":"text"}})]),_vm._v(" "),_c('li',{staticStyle:{"margin-bottom":"12px"}},[_vm._v("\n               税收居民国（地区）及纳税人识别号：\n               "),_c('select',{staticClass:"selectType_long",attrs:{"name":"select","id":"IssueId"}}),_vm._v(" "),_c('input',{staticClass:"input_info",attrs:{"type":"text"}})]),_vm._v(" "),_c('li',[_vm._v("\n               现居住地信息：国家\n               "),_c('select',{staticClass:"selectType_long",attrs:{"name":"select","id":"IssueId"}})]),_vm._v(" "),_c('li',[_vm._v("\n               中文地址：行政规划\n               "),_c('input',{staticClass:"input_amount chAdd",attrs:{"type":"text"}}),_vm._v(" "),_c('input',{staticClass:"input_amount chAdd",attrs:{"type":"text"}}),_vm._v(" "),_c('input',{staticClass:"input_amount chAdd",attrs:{"type":"text"}}),_vm._v(" "),_c('input',{staticClass:"input_long",attrs:{"type":"text"}})]),_vm._v(" "),_c('li',{staticStyle:{"margin-bottom":"12px"}},[_vm._v("\n               英文或拼音地址：\n               省（州）"),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v("\n               市"),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v("\n               区"),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v(" "),_c('input',{staticClass:"input_long engAdd",attrs:{"type":"text"}})]),_vm._v(" "),_c('li',[_vm._v("\n                出生地信息：国家\n                "),_c('select',{staticClass:"selectType_long",attrs:{"name":"select","id":"IssueId"}}),_vm._v(" "),_c('label',{staticClass:"check_box"},[_c('input',{staticClass:"checkbox",attrs:{"type":"checkbox","id":" "}}),_c('i'),_vm._v("\n                    与现居住地一致\n                ")])]),_vm._v(" "),_c('li',[_vm._v("\n               中文地址：行政规划\n               "),_c('input',{staticClass:"input_amount chAdd",attrs:{"type":"text"}}),_vm._v(" "),_c('input',{staticClass:"input_amount chAdd",attrs:{"type":"text"}}),_vm._v(" "),_c('input',{staticClass:"input_amount chAdd",attrs:{"type":"text"}}),_vm._v(" "),_c('input',{staticClass:"input_long",attrs:{"type":"text"}})]),_vm._v(" "),_c('li',[_vm._v("\n               英文或拼音地址：\n               省（州）"),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v("\n               市"),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v("\n               区"),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v(" "),_c('input',{staticClass:"input_long engAdd",attrs:{"type":"text"}})]),_vm._v(" "),_c('li',[_vm._v("\n                解释说明:\n                "),_c('input',{staticClass:"input_long inputlast",attrs:{"type":"text"}})]),_vm._v(" "),_c('li',{staticStyle:{"color":"red"}},[_vm._v("\n               （温馨提示：当国籍、证件类型、现居地址等所属国家与声明的税收居民国（地区）不一致时，需要填写此解释说明）\n            ")])]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn backbtn",attrs:{"id":"modal_btn_back"}},[_vm._v("上一步")]),_vm._v(" "),_c('button',{staticClass:"btn surebtn",attrs:{"id":"modal_btn_sure"}},[_vm._v("确定")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-3a9106a4"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-3a9106a4", __vue__options__)
  } else {
    hotAPI.reload("data-v-3a9106a4", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],448:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".scrollBar[data-v-d921b87a]{ \r\n    height:600px;\r\n    width:800px;\r\n    font-size:20px;\r\n    padding-bottom:50px;   \r\n}")
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _vuex = require('vuex');

exports.default = {
    data: function data() {
        return {};
    },

    methods: {},
    mounted: function mounted() {
        $(function () {
            scrollBar();
        });
    }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('ul',{staticClass:"scrollBar"},[_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("444444444444444444444444444444444444")]),_vm._v(" "),_c('li',[_vm._v("111111111111111111111111111111111111")]),_vm._v(" "),_c('li',[_vm._v("333333333333333333333333333333333333")]),_vm._v(" "),_c('li',[_vm._v("222222222222222222222222222222222222")]),_vm._v(" "),_c('li',[_vm._v("222222222222222222222222222222222222")]),_vm._v(" "),_c('li',[_vm._v("333333333333333333333333333333333333")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-d921b87a"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-d921b87a", __vue__options__)
  } else {
    hotAPI.reload("data-v-d921b87a", __vue__options__)
  }
})()}

},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300,"vuex":"vuex"}],449:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".support_tran[data-v-25611d80]{    \n     color: #333;\n     font-size: 2.8rem;\n     font-weight: 600;\n     margin-top:3%;\n}\n.check_box[data-v-25611d80]{  \n    width:28%;\n    text-align: left;\n}\nul[data-v-25611d80]{  \n    font-size: 2.5rem;\n    margin-top:3%;\n}\nli[data-v-25611d80]{   \n     margin-bottom:2%;\n}\n.input_amount[data-v-25611d80] {\n     width: 148px;\n     height: 38px;\n     border-radius: 6px;\n     margin-right:0;\n     font-size:2rem;\n }\n .check_box i[data-v-25611d80] {\n     width: 44px;\n     height: 44px;\n }\n .btnbox[data-v-25611d80] {\n     bottom: 13%;\n }\n @media screen and (max-width:1300px){   \n     ul[data-v-25611d80]{ \n         font-size:2.2rem;\n     }\n     .check_box[data-v-25611d80]{ \n         font-size:2.4rem;\n         margin-right:0;\n     }\n     .check_box i[data-v-25611d80]{   \n         width:40px;\n         height:40px;\n     }\n     .input_amount[data-v-25611d80]{  \n         width:140px;\n     }\n }\n \n @media screen and (min-width: 1300px) and  (max-width:1380px){ \n     .btnbox[data-v-25611d80] {\n     bottom: 10%;\n   }\n }")
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('p',{staticClass:"title"},[_vm._v("借记卡交易安全锁")]),_vm._v(" "),_c('p',{staticClass:"support_tran"},[_vm._v("\n            您当前的卡号是"),_c('span'),_vm._v("，为"),_c('span'),_vm._v("类账户，支持以下交易类型：\n        ")]),_vm._v(" "),_c('ul',[_c('li',[_c('label',{staticClass:"check_box"},[_c('input',{staticClass:"checkbox",attrs:{"type":"checkbox","id":" "}}),_c('i'),_vm._v("\n                    无卡支付开通\n                ")]),_vm._v("\n                单日累计限额\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v("\n                元，生效日期\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v("\n                -\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}})]),_vm._v(" "),_c('li',[_c('label',{staticClass:"check_box"},[_c('input',{staticClass:"checkbox",attrs:{"type":"checkbox","id":" "}}),_c('i'),_vm._v("\n                    转账功能开通\n                ")]),_vm._v("\n                单日累计限额\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v("\n                元，生效日期\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v("\n                -\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}})]),_vm._v(" "),_c('li',[_c('label',{staticClass:"check_box"},[_c('input',{staticClass:"checkbox",attrs:{"type":"checkbox","id":" "}}),_c('i'),_vm._v("\n                    境内消费关闭\n                ")]),_vm._v("\n                单日累计限额\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v("\n                元，生效日期\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v("\n                -\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}})]),_vm._v(" "),_c('li',[_c('label',{staticClass:"check_box"},[_c('input',{staticClass:"checkbox",attrs:{"type":"checkbox","id":" "}}),_c('i'),_vm._v("\n                    境外消费开通\n                ")]),_vm._v("\n                单日累计限额\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v("\n                元，生效日期\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v("\n                -\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}})]),_vm._v(" "),_c('li',[_c('label',{staticClass:"check_box"},[_c('input',{staticClass:"checkbox",attrs:{"type":"checkbox","id":" "}}),_c('i'),_vm._v("\n                    境内自助设备取现关闭\n                ")]),_vm._v("\n                单日累计限额\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v("\n                元，生效日期\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v("\n                -\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}})]),_vm._v(" "),_c('li',[_c('label',{staticClass:"check_box"},[_c('input',{staticClass:"checkbox",attrs:{"type":"checkbox","id":" "}}),_c('i'),_vm._v("\n                    境外自助设备取现开通\n                ")]),_vm._v("\n                单日累计限额\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v("\n                元，生效日期\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}}),_vm._v("\n                -\n                "),_c('input',{staticClass:"input_amount",attrs:{"type":"text"}})])]),_vm._v(" "),_c('div',{staticClass:"btnbox"},[_c('button',{staticClass:"btn surebtn",attrs:{"id":"modal_btn_sure"}},[_vm._v("下一步")])])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-25611d80"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-25611d80", __vue__options__)
  } else {
    hotAPI.reload("data-v-25611d80", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],450:[function(require,module,exports){
var __vueify_style_dispose__ = require("vueify/lib/insert-css").insert(".box img[data-v-61c02fdc]{\n    width: 110px;\n    height: 400px;\n    position: fixed;\n    opacity: 1;\n    left: 75%;  \n    top: 20%;\n    transform: translate(50%, 50%); \n    animation: change 8s;\n    -moz-animation: change 8s;\n    -webkit-animation: change 8s;\n    -o-animation: change 8s;\n}\n@keyframes change{\n    from {\n        width: 0px;\n        height: 0px;\n        opacity: 0;\n        left: 100%;\n        top: 100%;\n    }\n    to {\n        width: 110px;\n        height: 400px;\n        opacity: 1;\n        left: 75%;\n        top: 20%;\n    }\n}")
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('x-layout-main',[_c('div',{staticClass:"box"},[_c('img',{attrs:{"src":"img/小人.png","alt":""}})])])}
__vue__options__.staticRenderFns = []
__vue__options__._scopeId = "data-v-61c02fdc"
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  module.hot.dispose(__vueify_style_dispose__)
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-61c02fdc", __vue__options__)
  } else {
    hotAPI.reload("data-v-61c02fdc", __vue__options__)
  }
})()}
},{"vue":"vue","vue-hot-reload-api":299,"vueify/lib/insert-css":300}],451:[function(require,module,exports){
module.exports={
    "html": {       // 页面文本英文资源定义
        "Description": "define page english resources"
    },
    "tip": {
        "00001": "交易正在进行中，是否结束办理？",
        "00002": "请选择需要办理的业务",
        "00003": "请刷您的银行卡",
        "00004": "请插入您的银行卡",
        "00005": "请插入您的银行卡",
        "00006": "请将您的银行卡放置于识别区",
        "00007": "读取卡号信息失败，请检查银行卡是否支持此功能或损坏",
        "00008": "请收好您的银行卡",
        "00009": "请收好您的银行卡",
        "00010": "请收好您的银行卡",
        "00011": "请将存折翻至需打印的页面插入补登口",
        "00012": "请刷您的存折",
        "00013": "无补登明细",
        "00014": "有补打明细，请将存折翻至第x页插入打印机",
        "00015": "有补打明细，正在为您打印",
        "00016": "存折已打满，请至柜面办理换折业务",
        "00017": "请翻页",
        "00018": "请收好您的存折",
        "00019": "该账户已挂失，请客户本人携带身份证件至柜台办理",
        "00020": "该账户密码已挂失，请客户本人携带身份证件进行密码重置",
        "00021": "读取卡号信息失败，请检查卡是否拿反或损坏",
        "00022": "不支持受理此类账户，请至柜面办理",
        "00023": "读取卡号信息失败，请检查卡是否拿反或损坏",
        "00024": "请设置您的新密码/请再次输入你的密码删除（因加入存折业务，所以考虑将卡改为账户）",
        "00025": "温馨提示：密码需为六位数字，不允许使用生日.电话.身份证号码.重复数字.连续数字等简单密码，请牢记并妥善保管及使用您的密码。删除（根据最新的密码设置规则修改）",
        "00026": "请输入您的密码",
        "00027": "密码输入错误，请重新输入！",
        "00028": "您的密码错误次数超限，请联系大堂人员。",
        "00029": "请将您的身份证件放入识别区删除（供新版外国人永久居留证+旧版设备使用）",
        "00030": "请收好您的身份证件",
        "00031": "您的身份证信息读取失败，请联系大堂人员",
        "00032": "请插入您的身份证",
        "00033": "请收好您的身份证件",
        "00038": "尊敬的用户，您所持有的证件暂时不能办理此项业务，请您联系大堂经理进行咨询，我们将继续为您提供服务。",
        "00039": "删除（审核人员:xxxxxx）您好，请抬头看正前方。",
        "00040": "正在进行身份审核，请稍后！",
        "00041": "您的身份已确认，请继续办理业务。",
        "00042": "您的身份审核未通过，请联系大堂人员。",
        "00044": "温馨提示：正在打印申请书，请稍后",
        "00045": "界面显示12秒倒计时",
        "00046": "温馨提示：请拿出申请书并在客户栏签字。",
        "00047": "温馨提示：请将业务申请书正面朝下放入回收口",
        "00048": "请核对业务申请书信息，无误后请点击确认键",
        "00049": "抄录后请点击“保存”",
        "00050": "请签字，签字后点击确认键。",
        "00051": "请联系审核员输入指纹编号",
        "00052": "请刷您的指纹！删除（指纹编号：9000）",
        "00053": "1.请核实该笔业务是否为客户本人办理2.请确认客户签名是否准确",
        "00054": "1.请核实客户证件的真实性2.请确认客户拍摄证件信息清晰.完整",
        "00055": ".请核实客户证件的真实性2.请核实该笔业务是否为客户本人办理3.请确认客户签名是否准确",
        "00056": "请确认客户已达相应贵宾等级",
        "00057": "1.请核实该笔业务是否为客户本人办理2.请确认客户签名是否准确3.请确认客户已达相应贵宾等级",
        "00058": "请确认客户已达相应贵宾等级",
        "00059": "1.请核实该笔业务是否为客户本人办理2.请确认客户签名是否准确3.请确认客户已达相应贵宾等级",
        "00060": "请确认客户提供有效证明材料,并留存。",
        "00061": "1.请核实该笔业务是否为客户本人办理2.请确认客户签名是否准确3.请确认客户提供有效证明材料，并留存。",
        "00062": "1.请客户再次确认收款方信息，谨防电信诈骗！2.如客户选择实时到账，提醒客户该笔转账不可撤销",
        "00063": "1.请核实该笔业务是否为客户本人办理2.请确认客户签名是否准确3.请客户再次确认收款方信息，谨防电信诈骗！4.如客户选择实时到账，提醒客户该笔转账不可撤销",
        "00064": "请提示客户电子银行注销后，原常用联系人信息不再保存！",
        "00065": "1、请核实该笔业务是否为客户本人办理2、请确认客户签名是否准确3、请提示客户电子银行注销后，原常用联系人信息不再保存！",
        "01001": "中国税收居民是指在中国境内有住所，或者无住所而在境内居住满一年的个人。非居民是指中国税收居民以外的个人。",
        "01002": "您的手机号码已被占用，如需修改手机号码，可点击修改",
        "01003": "谨慎操作，删除将有可能无法恢复减免",
        "02001": "（口令卡升级为K令）",
        "02002": "K宝：单笔转账支付限额（人民币）：100万元；单日累计转账支付限额（人民币）：500万元K令：单笔转账限额（人民币）：50万，单日累计限额（人民币）：50万；单笔支付限额（人民币）：10万，单日累计限额（人民币）：50万K宝：50元/个；K令：25元/个",
        "02003": "口令卡升级为K令",
        "02004": "开通掌银仅支持音频及蓝牙K宝",
        "02005": "您的手机号码已被占用，如需修改手机号码，可点击修改",
        "02006": "（含网上银行.掌上银行和短信银行）",
        "02007": "（2元/月），请确保电话号码无误且为本人使用",
        "02008": "其中Ⅱ类卡按规定额度限制，以上限额均不超过10000元",
        "02009": "请收好您的动态密码设备，切勿交予他人使用",
        "02010": "密码需设置为8位数字与字母组合，且不能为连续的数字和字母。",
        "02011": "您的激活码已打印在客户凭条上，请注意保管。",
        "02012": "K令：25元/个",
        "02013": "温馨提示：本操作将导致您在农行的所有账户已绑定的电子渠道注销。并且所有电子渠道保存信息会被清除且不可恢复。异地存折的电子银行一旦被注销，如果需要重新绑定，必须返回开户行所在省重新绑定。",
        "02014": "温馨提示：只注销本卡的电子银行渠道，不影响其他卡绑定的电子银行。",
        "02015": "温馨提示：选择插入电子现金介质，则只能办理指定账户圈存；选择放置电子现金介质，则可以办理指定账户圈存或非指定账户圈存",
        "02016": "请保持电子现金介质插入状态或放置在感应区内！",
        "02017": "指定账户圈存：持卡人使用绑定银行卡账户中的资金向电子现金充值；非指定账户圈存：持卡人使用其他银行卡账户中的资金向电子现金充值",
        "02018": "请保持电子现金介质插入状态或放置在感应区内！",
        "03001": "重要提示：谨防电信诈骗，请勿轻信陌生人的汇款转账信息！！！    警方提示：抵制高息诱惑，远离非法集资，请勿轻信陌生人的汇款转账信息，谨防上当受骗！    温馨提示：在本设备进行操作时，请注意周边环境，并注意密码遮挡，在交易过程中确认收款方户名后再进行转账。如有问题，请及时联系银行工作人员，我行客服热线：95599。",
        "03002": "“账号有误，请重新输入”",
        "03003": "“请输入收款方账号”",
        "03004": "“转入账户与转出账户不能相同！”",
        "03005": "“单笔转账金额超限，请重新输入”",
        "03006": "“账户可用余额不足，请重新输入”",
        "03007": "“Ⅱ类户转账金额超限，请重新输入”",
        "03008": "“您的可用余额为*元”“您的Ⅱ类户当前转账限额为*元”",
        "03009": "“是否删除收款人信息？”是、否",
        "03010": "实时转账：资金在交易完成后立即转出普通转账：资金在交易完成2小时后转出次日转账：资金在交易完成24小时后转出",
        "03011": "中国农业银行股份有限公司：    本人确认已向贵行申请的资金划转交易是本人基于自主决策而作出的自愿行为，不存在中国农业银行员工介绍.推荐.要求本人交易等情况。农业银行已依法向本人提示：应认真核实金额和收款账号的准确性，确保资金划转交易用途的真实.合法.有效，防止诈骗.非法集资等风险或不利情形的发生。本人已知悉并确认上述资金划转交易不是用于购买中国农业银行自主发行的理财产品或中国农业银行代销的产品。本人已清楚认识到上述资金划转交易的法律后果，由此产生的一切风险和损失由本人承担，与中国农业银行无关。确定、取消",
        "03012": "“账户可用余额不足，请重新输入”",
        "03013": "“Ⅱ类户转账金额超限，请重新输入”",
        "03014": "“大额渠道关闭，请联系大堂人员”",
        "03015": "“当日为节假日且次日为工作日，不支持5万（含）以上选择次日到账。” 确定",
        "03016": "“次日为节假日，实际到账时间为下一工作日，是否继续？”是、否",
        "03017": "温馨提示：“为了确保您的资金安全，请认真核对上述交易信息。”",
        "03018": "“请将存折翻至第x页插入打印机”",
        "03019": "“请翻页”",
        "03020": "“请收好您的存折”",
        "03021": "“是否办理下一笔延时转账撤销交易？”是、否",
        "04001": "卡箱无卡，是否办理书面挂失业务？",
        "04002": "卡箱无卡，是否办理书面挂失业务及后续业务？",
        "04003": "温馨提示：账户余额校验至万位",
        "04004": "是否同号补卡？",
        "04005": "温馨提示：同号补卡非实时取卡，具体办理条件及取卡时间请咨询网点工作人员。",
        "04006": "中国农业银行股份有限公司：本人确认所提供的个人资料真实.有效，并已详细了解挂失业务章程.业务协议.功能说明及责任条款.业务收费标准，受相关业务章程和协议的约束。银行受理挂失业务前和挂失业务后，造成的损失由本人负责，银行不承担责任。",
        "04007": "注意：挂失换卡时，原借记卡下已签合约变更到新卡下前，将无法正常进行相关资金结算。",
        "04008": "补卡将联动电子现金解约，电子现金余额将丢失，是否继续办理？",
        "04009": "非本网点挂失，请到原挂失网点办理",
        "04010": "温馨提示：账户余额校验至万位",
        "04011": "新账户类型为I类账户，交易限额修改为日累计不受限；年累计不受限",
        "04012": "新账户类型为II类账户，交易限额修改为日累计1万元；年累计20万元。",
        "04013": "谨慎操作，I类户降级为II类户后，将受II类户借记卡日.年累计限额控制，降级后可能无法重新升级为I类户。",
        "04014": "“账户余额超限，请联系大堂人员”",
        "04015": "“账户余额大于转账限额，销户后资金无法成功转出”",
        "04016": "“存在*.*.*等合约，请先注销再进行销户”",
        "04017": "“已签约电子现金.电子银行.消息服务.个人资金归集，销户将联动解约，是否继续？”温馨提示：电子钱包内资金将转回主账户。",
        "04018": "“账号有误，请重新输入”",
        "04019": "温馨提示：销户业务仅支持实时到账，且收款方需为我行借记卡账户，销户后资金立即转出，无法转回，请勿向陌生人汇款！",
        "04020": "温馨提示：销户操作不可撤销，请确定进行销卡",
        "04021": "“账户余额超限，请联系大堂人员”",
        "04022": "非本网点挂失，请到原挂失网点办理",
        "04023": "“账户余额大于转账限额，销户后资金无法成功转出”",
        "04024": "“存在*.*.*等合约，请先注销再进行销户”",
        "04025": "“已签约电子现金.电子银行.消息服务.个人资金归集，销户将联动解约，是否继续？”温馨提示：电子钱包内资金将丢失，无法转回。",
        "04026": "温馨提示：账户余额校验至万位",
        "04027": "“账号有误，请重新输入”",
        "04028": "温馨提示：销户业务仅支持实时到账，且收款方需为我行借记卡账户，销户后资金立即转出，无法转回，请勿向陌生人汇款！",
        "04029": "温馨提示：销户操作不可撤销，请确定进行销卡",
        "05001": "是否继续办理下一笔活期转定期业务",
        "05002": "该笔子账户未到期，提前支取将按活期利息计息！",
        "05003": "请选择一个定期账户",
        "05004": "单个子账户当日只允许办理一次部分提取",
        "05005": "是否继续办理下一笔活期转定期业务",
        "05006": "理财非存款，产品有风险，投资须谨慎。",
        "05007": "您的风险评估已过期，是否重新进行风险评估？",
        "05008": "本次风险评估结果适用于基金.理财业务。",
        "05009": "理财非存款，产品有风险，投资须谨慎。",
        "05010": "您已经理财产品签约，是否修改个人签约信息？",
        "05011": "该联系方式已经绑定到签约信息，不能进行修改",
        "05012": "理财非存款，产品有风险，投资须谨慎。",
        "05013": "此金额为试算金额，不为实际收益金额",
        "05014": "您还未风险评估，请先进行客户风险评估交易，本交易结束。",
        "05015": "您还未签约理财，请先进行理财产品签约交易，本交易结束。",
        "05016": "温馨提示：理财产品追加申购起点金额不收申购起点金额限制。",
        "05017": "理财非存款，产品有风险，投资须谨慎。",
        "05018": "理财非存款，产品有风险，投资须谨慎。",
        "05019": "是否确定撤销选中的委托记录？",
        "05020": "是否确定撤销此条委托记录？",
        "05021": "理财非存款，产品有风险，投资须谨慎。",
        "05022": "您的风险评估已过期，是否重新进行风险评估？",
        "05023": "您还未签约理财，请先进行理财产品签约交易，本交易结束。",
        "05024": "您已签约天天理财",
        "05025": "“大众版”不得低于人民币5万元或外币等值1000美元，“投资版”不得低于人民币10万元。",
        "05026": "请选择一个双利丰子账户",
        "05027": "留存金额低于最低转存金额，请确认是否全部转出？",
        "05028": "根据您的申请，按照您设定的条件，将您签约卡账户中超过留存金额且达到最小约转金额的款项或是超过留存金额的定额约转金额，按照事先约定的约转方式.约转周期.存期等要素在日终自动转存为定期整存整取存款。该笔存款到期后，系统根据签约时约定的转存标志和存期进行转存。",
        "05029": "您使用签约借记卡通过POS机刷卡消费时，在消费金额大于签约借记卡下活期主账户金额但小于签约借记卡下活期主账户与各定期存款子账户资金总额的情况下，按照“后存先冻”原则依次冻结客户签约借记卡下定期存款子账户，并为您签约借记卡下活期主账户提供与冻结金额相等的消费额度，同时扣减消费金额。日终前您向签约借记卡补足冻结金额；对于未按时不足的冻结金额，我行按定期存款子账户的冻结次序依次提前部分支取或者销户已冻结的定期存款，将本金和税后利息转入签约借记卡下活期主账户。",
        "05030": "借记卡下活期主账户需保留的最低余额，以满足日常的交易需要。系统将超过留存金额且满足约转条件的部分转为约定期限的定期存款。",
        "05031": "系统设定的借记卡活期主账户余额超过留存金额的部分，约转为定期存款的最小金额。若活期主账户余额超过留存金额的部分大于等于该金额，系统按约定进行转存，反之，系统不进行转存。",
        "05032": "系统设定的借记卡活期主账户余额超过留存金额的部分，每次约转为定期存款的固定金额。若活期主账户余额超过留存金额的部分大于等于该金额，系统按约定进行转存，反之，系统不进行转存。",
        "05033": "温馨提示：手机号为选填项",
        "05034": "您已签约双利丰产品。",
        "06001": "理财非存款，产品有风险，投资须谨慎。",
        "06002": "您已经基金签约，是否修改个人签约信息？",
        "06003": "理财非存款，产品有风险，投资须谨慎。",
        "06004": "是否签约XXX公司TA产品？",
        "06005": "请输入TA账号",
        "06006": "请输入12位TA账号",
        "06007": "请选择需要签约的TA产品",
        "06008": "理财非存款，产品有风险，投资须谨慎。",
        "06009": "温馨提示：当前时刻为非基金交易时间，是否预约认购/申购【XXXXX】？",
        "06010": "您还未风险评估，请先进行客户风险评估交易，本交易结束。",
        "06011": "您还未签约基金，请先进行基金签约交易，本交易结束。",
        "06012": "您还未开通TA账户，请先进行基金TA签约交易，本交易结束。",
        "06013": "理财非存款，产品有风险，投资须谨慎。",
        "06014": "您未开通定投服务，请修改基金签约信息开通定投",
        "06015": "您未开通智能定投服务，请修改基金签约信息开通智能定投",
        "06016": "温馨提示：基金购买前需在该基金公司开立基金账户才能购买该基金公司的基金产品。点击【签约】按钮，将为您开立TA账户。点击【上一步】按钮，将取消购买基金产品",
        "06017": "理财非存款，产品有风险，投资须谨慎。",
        "06018": "理财非存款，产品有风险，投资须谨慎。",
        "06019": "理财非存款，产品有风险，投资须谨慎。",
        "06020": "温馨提示：当前时刻为非基金交易时间，是否预约赎回【XXXXX】？",
        "06021": "理财非存款，产品有风险，投资须谨慎。",
        "06022": "是否确定撤销选中的委托记录？",
        "06023": "是否确定撤销此条委托记录？",
        "06024": "是否继续进行基金委托撤销？",
        "07001": "打印失败，请联系大堂人员",
        "07002": "温馨提示：理财产品追加申购起点金额不收申购起点金额限制。",
        "07003": "温馨提示：产品收益率以起息日当天收益率为准。",
        "07004": "理财非存款，产品有风险，投资须谨慎。",
        "07005": "理财非存款，产品有风险，投资须谨慎。",
        "07006": "理财非存款，产品有风险，投资须谨慎。",
        "07007": "您的客户等级不匹配，请选择其他产品。",
        "07008": "您的风险等级不匹配，是否重新风险评估？",
        "07009": "理财非存款，产品有风险，投资须谨慎。",
        "08001": "温馨提示：请如实填写每一项，填写不规范将影响您下次购汇，如用途选项无法满足您的需求，请到柜台办理。",
        "08002": "外汇牌价提示：外汇牌价实时变更，与市场价格接轨，系统所显示的汇率为参考牌价，以最终成交汇率为准。",
        "08003": "外汇牌价提示：外汇牌价实时变更，与市场价格接轨，系统所显示的汇率为参考牌价，以最终成交汇率为准。",
        "08004": "汇款金额不能超过等值5万美元金额。",
        "08005": "手续费和电报费汇款人支付，手续费及电报费与汇款本金在同一账户扣收。",
        "08006": "手续费和电报费由收款人支付，以汇款币种计算，在汇款金额中扣收。",
        "08007": "如付汇资金来源于购汇，付汇用途与原《个人购汇申请书》填报的购汇用途是否一致。",
        "08008": "现钞须转为现汇才可以用于汇出汇款",
        "08009": "您也可以点击下一步联动购汇交易",
        "08010": "钞转汇将会产生汇兑损益，并且为根据实时汇率进行实时交易，请进行办理。",
        "09001": "请务必正确填写",
        "09002": "填写信息有误，请返回修改，边框已标红",
        "09003": "请重新选择一张未办理过第三方存管的借记卡卡号",
        "09004": "无符合条件的借记卡",
        "09005": "分期金额不得低于2000元人民币.不得高于50000元人民币。分期一经申请成功，不可撤销。",
        "10001": "您的风险等级不够购买此产品，是否重新进行风险评估？",
        "10002": "您的风险评估已过期，是否重新进行风险评估？",
        "10003": "健康告知您是否患有...",
        "10004": "请您确认是否存在以上健康提示所述内容？",
        "10005": "温馨提示：存在相关健康问题，无法购买该产品！",
        "10006": "是否确认购买此款保险产品？",
        "10007": "长期请输入99999999",
        "10008": "您还未风险评估，是否先进行风险评估？",
        "10009": "温馨提示：1.犹豫期撤单针对犹豫期内（具体时间以公司规定为准）的保单进行撤保操作；2.资金到账时间请参照保险公司提示，不同保险公司产品有所不同；3.保险公司将根据保险条款确定是否收取工本费；4.投保后变更银行账号将对该功能产生影响，如不成功，请到保险公司柜台办理",
        "10010": "温馨提示：1.领取/退保针对犹豫期外（具体时间以公司规定为准）的保单进行退保操作；2.资金到账时间请参照保险公司提示，不同保险公司产品有所不同；3.保险公司将根据保险条款收取退保手续费，收费标准请参见产品的“费用结构”；4.投保后变更银行账号将对该功能产生影响，如不成功，请到保险公司柜台办理",
        "10011": "温馨提示：1.当日撤单为撤销当天投保成功的保单，当日撤单将不扣除手续费；2.当日撤单到账时间需根据农行撤单操作退款时间进行确认；3.投保后变更了账户信息会造成该交易失败，请到保险公司柜台查询及办理相关业务。",
        "10012": "是否确认提交？",
        "10013": "温馨提示：资金将实时到账。",
        "10014": "温馨提示：资金到账时间由保险公司确定。",
        "11001": "每人可预约1-3枚，预约后不可修改",
        "11002": "本网点剩余额度500枚",
        "11003": "本网点可预约额度已用完",
        "11004": "请选择预约数量",
        "11005": "贺岁币兑换活动已结束，无法查询",
        "11006": "请在兑换日期凭预约证件和兑换码到网点兑换。",
        "11007": "温馨提示：交易成功将清除您的预约记录！",
        "99001": "41H999指定理财金额不能小于8万元人民币！"
    },
    "errors": {

    }
}
},{}],452:[function(require,module,exports){
module.exports={
    "html": {
        "Description": "页面文本中文资源定义"
    },
    "tip": {
        "00001": "交易正在进行中，是否结束办理？",
        "00002": "请选择需要办理的业务",
        "00003": "请刷您的银行卡",
        "00004": "请插入您的银行卡",
        "00005": "请插入您的银行卡",
        "00006": "请将您的银行卡放置于识别区",
        "00007": "读取卡号信息失败，请检查银行卡是否支持此功能或损坏",
        "00008": "请收好您的银行卡",
        "00009": "请收好您的银行卡",
        "00010": "请收好您的银行卡",
        "00011": "请将存折翻至需打印的页面插入补登口",
        "00012": "请刷您的存折",
        "00013": "无补登明细",
        "00014": "有补打明细，请将存折翻至第x页插入打印机",
        "00015": "有补打明细，正在为您打印",
        "00016": "存折已打满，请至柜面办理换折业务",
        "00017": "请翻页",
        "00018": "请收好您的存折",
        "00019": "该账户已挂失，请客户本人携带身份证件至柜台办理",
        "00020": "该账户密码已挂失，请客户本人携带身份证件进行密码重置",
        "00021": "读取卡号信息失败，请检查卡是否拿反或损坏",
        "00022": "不支持受理此类账户，请至柜面办理",
        "00023": "读取卡号信息失败，请检查卡是否拿反或损坏",
        "00024": "请设置您的新密码/请再次输入你的密码删除（因加入存折业务，所以考虑将卡改为账户）",
        "00025": "温馨提示：密码需为六位数字，不允许使用生日.电话.身份证号码.重复数字.连续数字等简单密码，请牢记并妥善保管及使用您的密码。删除（根据最新的密码设置规则修改）",
        "00026": "请输入您的密码",
        "00027": "密码输入错误，请重新输入！",
        "00028": "您的密码错误次数超限，请联系大堂人员。",
        "00029": "请将您的身份证件放入识别区删除（供新版外国人永久居留证+旧版设备使用）",
        "00030": "请收好您的身份证件",
        "00031": "您的身份证信息读取失败，请联系大堂人员",
        "00032": "请插入您的身份证",
        "00033": "请收好您的身份证件",
        "00038": "尊敬的用户，您所持有的证件暂时不能办理此项业务，请您联系大堂经理进行咨询，我们将继续为您提供服务。",
        "00039": "删除（审核人员:xxxxxx）您好，请抬头看正前方。",
        "00040": "正在进行身份审核，请稍后！",
        "00041": "您的身份已确认，请继续办理业务。",
        "00042": "您的身份审核未通过，请联系大堂人员。",
        "00044": "温馨提示：正在打印申请书，请稍后",
        "00045": "界面显示12秒倒计时",
        "00046": "温馨提示：请拿出申请书并在客户栏签字。",
        "00047": "温馨提示：请将业务申请书正面朝下放入回收口",
        "00048": "请核对业务申请书信息，无误后请点击确认键",
        "00049": "抄录后请点击“保存”",
        "00050": "请签字，签字后点击确认键。",
        "00051": "请联系审核员输入指纹编号",
        "00052": "请刷您的指纹！删除（指纹编号：9000）",
        "00053": "1.请核实该笔业务是否为客户本人办理2.请确认客户签名是否准确",
        "00054": "1.请核实客户证件的真实性2.请确认客户拍摄证件信息清晰.完整",
        "00055": ".请核实客户证件的真实性2.请核实该笔业务是否为客户本人办理3.请确认客户签名是否准确",
        "00056": "请确认客户已达相应贵宾等级",
        "00057": "1.请核实该笔业务是否为客户本人办理2.请确认客户签名是否准确3.请确认客户已达相应贵宾等级",
        "00058": "请确认客户已达相应贵宾等级",
        "00059": "1.请核实该笔业务是否为客户本人办理2.请确认客户签名是否准确3.请确认客户已达相应贵宾等级",
        "00060": "请确认客户提供有效证明材料,并留存。",
        "00061": "1.请核实该笔业务是否为客户本人办理2.请确认客户签名是否准确3.请确认客户提供有效证明材料，并留存。",
        "00062": "1.请客户再次确认收款方信息，谨防电信诈骗！2.如客户选择实时到账，提醒客户该笔转账不可撤销",
        "00063": "1.请核实该笔业务是否为客户本人办理2.请确认客户签名是否准确3.请客户再次确认收款方信息，谨防电信诈骗！4.如客户选择实时到账，提醒客户该笔转账不可撤销",
        "00064": "请提示客户电子银行注销后，原常用联系人信息不再保存！",
        "00065": "1、请核实该笔业务是否为客户本人办理2、请确认客户签名是否准确3、请提示客户电子银行注销后，原常用联系人信息不再保存！",
        "01001": "中国税收居民是指在中国境内有住所，或者无住所而在境内居住满一年的个人。非居民是指中国税收居民以外的个人。",
        "01002": "您的手机号码已被占用，如需修改手机号码，可点击修改",
        "01003": "谨慎操作，删除将有可能无法恢复减免",
        "02001": "（口令卡升级为K令）",
        "02002": "K宝：单笔转账支付限额（人民币）：100万元；单日累计转账支付限额（人民币）：500万元K令：单笔转账限额（人民币）：50万，单日累计限额（人民币）：50万；单笔支付限额（人民币）：10万，单日累计限额（人民币）：50万K宝：50元/个；K令：25元/个",
        "02003": "口令卡升级为K令",
        "02004": "开通掌银仅支持音频及蓝牙K宝",
        "02005": "您的手机号码已被占用，如需修改手机号码，可点击修改",
        "02006": "（含网上银行.掌上银行和短信银行）",
        "02007": "（2元/月），请确保电话号码无误且为本人使用",
        "02008": "其中Ⅱ类卡按规定额度限制，以上限额均不超过10000元",
        "02009": "请收好您的动态密码设备，切勿交予他人使用",
        "02010": "密码需设置为8位数字与字母组合，且不能为连续的数字和字母。",
        "02011": "您的激活码已打印在客户凭条上，请注意保管。",
        "02012": "K令：25元/个",
        "02013": "温馨提示：本操作将导致您在农行的所有账户已绑定的电子渠道注销。并且所有电子渠道保存信息会被清除且不可恢复。异地存折的电子银行一旦被注销，如果需要重新绑定，必须返回开户行所在省重新绑定。",
        "02014": "温馨提示：只注销本卡的电子银行渠道，不影响其他卡绑定的电子银行。",
        "02015": "温馨提示：选择插入电子现金介质，则只能办理指定账户圈存；选择放置电子现金介质，则可以办理指定账户圈存或非指定账户圈存",
        "02016": "请保持电子现金介质插入状态或放置在感应区内！",
        "02017": "指定账户圈存：持卡人使用绑定银行卡账户中的资金向电子现金充值；非指定账户圈存：持卡人使用其他银行卡账户中的资金向电子现金充值",
        "02018": "请保持电子现金介质插入状态或放置在感应区内！",
        "03001": "重要提示：谨防电信诈骗，请勿轻信陌生人的汇款转账信息！！！    警方提示：抵制高息诱惑，远离非法集资，请勿轻信陌生人的汇款转账信息，谨防上当受骗！    温馨提示：在本设备进行操作时，请注意周边环境，并注意密码遮挡，在交易过程中确认收款方户名后再进行转账。如有问题，请及时联系银行工作人员，我行客服热线：95599。",
        "03002": "“账号有误，请重新输入”",
        "03003": "“请输入收款方账号”",
        "03004": "“转入账户与转出账户不能相同！”",
        "03005": "“单笔转账金额超限，请重新输入”",
        "03006": "“账户可用余额不足，请重新输入”",
        "03007": "“Ⅱ类户转账金额超限，请重新输入”",
        "03008": "“您的可用余额为*元”“您的Ⅱ类户当前转账限额为*元”",
        "03009": "“是否删除收款人信息？”是、否",
        "03010": "实时转账：资金在交易完成后立即转出普通转账：资金在交易完成2小时后转出次日转账：资金在交易完成24小时后转出",
        "03011": "中国农业银行股份有限公司：    本人确认已向贵行申请的资金划转交易是本人基于自主决策而作出的自愿行为，不存在中国农业银行员工介绍.推荐.要求本人交易等情况。农业银行已依法向本人提示：应认真核实金额和收款账号的准确性，确保资金划转交易用途的真实.合法.有效，防止诈骗.非法集资等风险或不利情形的发生。本人已知悉并确认上述资金划转交易不是用于购买中国农业银行自主发行的理财产品或中国农业银行代销的产品。本人已清楚认识到上述资金划转交易的法律后果，由此产生的一切风险和损失由本人承担，与中国农业银行无关。确定、取消",
        "03012": "“账户可用余额不足，请重新输入”",
        "03013": "“Ⅱ类户转账金额超限，请重新输入”",
        "03014": "“大额渠道关闭，请联系大堂人员”",
        "03015": "“当日为节假日且次日为工作日，不支持5万（含）以上选择次日到账。” 确定",
        "03016": "“次日为节假日，实际到账时间为下一工作日，是否继续？”是、否",
        "03017": "温馨提示：“为了确保您的资金安全，请认真核对上述交易信息。”",
        "03018": "“请将存折翻至第x页插入打印机”",
        "03019": "“请翻页”",
        "03020": "“请收好您的存折”",
        "03021": "“是否办理下一笔延时转账撤销交易？”是、否",
        "04001": "卡箱无卡，是否办理书面挂失业务？",
        "04002": "卡箱无卡，是否办理书面挂失业务及后续业务？",
        "04003": "温馨提示：账户余额校验至万位",
        "04004": "是否同号补卡？",
        "04005": "温馨提示：同号补卡非实时取卡，具体办理条件及取卡时间请咨询网点工作人员。",
        "04006": "中国农业银行股份有限公司：本人确认所提供的个人资料真实.有效，并已详细了解挂失业务章程.业务协议.功能说明及责任条款.业务收费标准，受相关业务章程和协议的约束。银行受理挂失业务前和挂失业务后，造成的损失由本人负责，银行不承担责任。",
        "04007": "注意：挂失换卡时，原借记卡下已签合约变更到新卡下前，将无法正常进行相关资金结算。",
        "04008": "补卡将联动电子现金解约，电子现金余额将丢失，是否继续办理？",
        "04009": "非本网点挂失，请到原挂失网点办理",
        "04010": "温馨提示：账户余额校验至万位",
        "04011": "新账户类型为I类账户，交易限额修改为日累计不受限；年累计不受限",
        "04012": "新账户类型为II类账户，交易限额修改为日累计1万元；年累计20万元。",
        "04013": "谨慎操作，I类户降级为II类户后，将受II类户借记卡日.年累计限额控制，降级后可能无法重新升级为I类户。",
        "04014": "“账户余额超限，请联系大堂人员”",
        "04015": "“账户余额大于转账限额，销户后资金无法成功转出”",
        "04016": "“存在*.*.*等合约，请先注销再进行销户”",
        "04017": "“已签约电子现金.电子银行.消息服务.个人资金归集，销户将联动解约，是否继续？”温馨提示：电子钱包内资金将转回主账户。",
        "04018": "“账号有误，请重新输入”",
        "04019": "温馨提示：销户业务仅支持实时到账，且收款方需为我行借记卡账户，销户后资金立即转出，无法转回，请勿向陌生人汇款！",
        "04020": "温馨提示：销户操作不可撤销，请确定进行销卡",
        "04021": "“账户余额超限，请联系大堂人员”",
        "04022": "非本网点挂失，请到原挂失网点办理",
        "04023": "“账户余额大于转账限额，销户后资金无法成功转出”",
        "04024": "“存在*.*.*等合约，请先注销再进行销户”",
        "04025": "“已签约电子现金.电子银行.消息服务.个人资金归集，销户将联动解约，是否继续？”温馨提示：电子钱包内资金将丢失，无法转回。",
        "04026": "温馨提示：账户余额校验至万位",
        "04027": "“账号有误，请重新输入”",
        "04028": "温馨提示：销户业务仅支持实时到账，且收款方需为我行借记卡账户，销户后资金立即转出，无法转回，请勿向陌生人汇款！",
        "04029": "温馨提示：销户操作不可撤销，请确定进行销卡",
        "05001": "是否继续办理下一笔活期转定期业务",
        "05002": "该笔子账户未到期，提前支取将按活期利息计息！",
        "05003": "请选择一个定期账户",
        "05004": "单个子账户当日只允许办理一次部分提取",
        "05005": "是否继续办理下一笔活期转定期业务",
        "05006": "理财非存款，产品有风险，投资须谨慎。",
        "05007": "您的风险评估已过期，是否重新进行风险评估？",
        "05008": "本次风险评估结果适用于基金.理财业务。",
        "05009": "理财非存款，产品有风险，投资须谨慎。",
        "05010": "您已经理财产品签约，是否修改个人签约信息？",
        "05011": "该联系方式已经绑定到签约信息，不能进行修改",
        "05012": "理财非存款，产品有风险，投资须谨慎。",
        "05013": "此金额为试算金额，不为实际收益金额",
        "05014": "您还未风险评估，请先进行客户风险评估交易，本交易结束。",
        "05015": "您还未签约理财，请先进行理财产品签约交易，本交易结束。",
        "05016": "温馨提示：理财产品追加申购起点金额不收申购起点金额限制。",
        "05017": "理财非存款，产品有风险，投资须谨慎。",
        "05018": "理财非存款，产品有风险，投资须谨慎。",
        "05019": "是否确定撤销选中的委托记录？",
        "05020": "是否确定撤销此条委托记录？",
        "05021": "理财非存款，产品有风险，投资须谨慎。",
        "05022": "您的风险评估已过期，是否重新进行风险评估？",
        "05023": "您还未签约理财，请先进行理财产品签约交易，本交易结束。",
        "05024": "您已签约天天理财",
        "05025": "“大众版”不得低于人民币5万元或外币等值1000美元，“投资版”不得低于人民币10万元。",
        "05026": "请选择一个双利丰子账户",
        "05027": "留存金额低于最低转存金额，请确认是否全部转出？",
        "05028": "根据您的申请，按照您设定的条件，将您签约卡账户中超过留存金额且达到最小约转金额的款项或是超过留存金额的定额约转金额，按照事先约定的约转方式.约转周期.存期等要素在日终自动转存为定期整存整取存款。该笔存款到期后，系统根据签约时约定的转存标志和存期进行转存。",
        "05029": "您使用签约借记卡通过POS机刷卡消费时，在消费金额大于签约借记卡下活期主账户金额但小于签约借记卡下活期主账户与各定期存款子账户资金总额的情况下，按照“后存先冻”原则依次冻结客户签约借记卡下定期存款子账户，并为您签约借记卡下活期主账户提供与冻结金额相等的消费额度，同时扣减消费金额。日终前您向签约借记卡补足冻结金额；对于未按时不足的冻结金额，我行按定期存款子账户的冻结次序依次提前部分支取或者销户已冻结的定期存款，将本金和税后利息转入签约借记卡下活期主账户。",
        "05030": "借记卡下活期主账户需保留的最低余额，以满足日常的交易需要。系统将超过留存金额且满足约转条件的部分转为约定期限的定期存款。",
        "05031": "系统设定的借记卡活期主账户余额超过留存金额的部分，约转为定期存款的最小金额。若活期主账户余额超过留存金额的部分大于等于该金额，系统按约定进行转存，反之，系统不进行转存。",
        "05032": "系统设定的借记卡活期主账户余额超过留存金额的部分，每次约转为定期存款的固定金额。若活期主账户余额超过留存金额的部分大于等于该金额，系统按约定进行转存，反之，系统不进行转存。",
        "05033": "温馨提示：手机号为选填项",
        "05034": "您已签约双利丰产品。",
        "06001": "理财非存款，产品有风险，投资须谨慎。",
        "06002": "您已经基金签约，是否修改个人签约信息？",
        "06003": "理财非存款，产品有风险，投资须谨慎。",
        "06004": "是否签约XXX公司TA产品？",
        "06005": "请输入TA账号",
        "06006": "请输入12位TA账号",
        "06007": "请选择需要签约的TA产品",
        "06008": "理财非存款，产品有风险，投资须谨慎。",
        "06009": "温馨提示：当前时刻为非基金交易时间，是否预约认购/申购【XXXXX】？",
        "06010": "您还未风险评估，请先进行客户风险评估交易，本交易结束。",
        "06011": "您还未签约基金，请先进行基金签约交易，本交易结束。",
        "06012": "您还未开通TA账户，请先进行基金TA签约交易，本交易结束。",
        "06013": "理财非存款，产品有风险，投资须谨慎。",
        "06014": "您未开通定投服务，请修改基金签约信息开通定投",
        "06015": "您未开通智能定投服务，请修改基金签约信息开通智能定投",
        "06016": "温馨提示：基金购买前需在该基金公司开立基金账户才能购买该基金公司的基金产品。点击【签约】按钮，将为您开立TA账户。点击【上一步】按钮，将取消购买基金产品",
        "06017": "理财非存款，产品有风险，投资须谨慎。",
        "06018": "理财非存款，产品有风险，投资须谨慎。",
        "06019": "理财非存款，产品有风险，投资须谨慎。",
        "06020": "温馨提示：当前时刻为非基金交易时间，是否预约赎回【XXXXX】？",
        "06021": "理财非存款，产品有风险，投资须谨慎。",
        "06022": "是否确定撤销选中的委托记录？",
        "06023": "是否确定撤销此条委托记录？",
        "06024": "是否继续进行基金委托撤销？",
        "07001": "打印失败，请联系大堂人员",
        "07002": "温馨提示：理财产品追加申购起点金额不收申购起点金额限制。",
        "07003": "温馨提示：产品收益率以起息日当天收益率为准。",
        "07004": "理财非存款，产品有风险，投资须谨慎。",
        "07005": "理财非存款，产品有风险，投资须谨慎。",
        "07006": "理财非存款，产品有风险，投资须谨慎。",
        "07007": "您的客户等级不匹配，请选择其他产品。",
        "07008": "您的风险等级不匹配，是否重新风险评估？",
        "07009": "理财非存款，产品有风险，投资须谨慎。",
        "08001": "温馨提示：请如实填写每一项，填写不规范将影响您下次购汇，如用途选项无法满足您的需求，请到柜台办理。",
        "08002": "外汇牌价提示：外汇牌价实时变更，与市场价格接轨，系统所显示的汇率为参考牌价，以最终成交汇率为准。",
        "08003": "外汇牌价提示：外汇牌价实时变更，与市场价格接轨，系统所显示的汇率为参考牌价，以最终成交汇率为准。",
        "08004": "汇款金额不能超过等值5万美元金额。",
        "08005": "手续费和电报费汇款人支付，手续费及电报费与汇款本金在同一账户扣收。",
        "08006": "手续费和电报费由收款人支付，以汇款币种计算，在汇款金额中扣收。",
        "08007": "如付汇资金来源于购汇，付汇用途与原《个人购汇申请书》填报的购汇用途是否一致。",
        "08008": "现钞须转为现汇才可以用于汇出汇款",
        "08009": "您也可以点击下一步联动购汇交易",
        "08010": "钞转汇将会产生汇兑损益，并且为根据实时汇率进行实时交易，请进行办理。",
        "09001": "请务必正确填写",
        "09002": "填写信息有误，请返回修改，边框已标红",
        "09003": "请重新选择一张未办理过第三方存管的借记卡卡号",
        "09004": "无符合条件的借记卡",
        "09005": "分期金额不得低于2000元人民币.不得高于50000元人民币。分期一经申请成功，不可撤销。",
        "10001": "您的风险等级不够购买此产品，是否重新进行风险评估？",
        "10002": "您的风险评估已过期，是否重新进行风险评估？",
        "10003": "健康告知您是否患有...",
        "10004": "请您确认是否存在以上健康提示所述内容？",
        "10005": "温馨提示：存在相关健康问题，无法购买该产品！",
        "10006": "是否确认购买此款保险产品？",
        "10007": "长期请输入99999999",
        "10008": "您还未风险评估，是否先进行风险评估？",
        "10009": "温馨提示：1.犹豫期撤单针对犹豫期内（具体时间以公司规定为准）的保单进行撤保操作；2.资金到账时间请参照保险公司提示，不同保险公司产品有所不同；3.保险公司将根据保险条款确定是否收取工本费；4.投保后变更银行账号将对该功能产生影响，如不成功，请到保险公司柜台办理",
        "10010": "温馨提示：1.领取/退保针对犹豫期外（具体时间以公司规定为准）的保单进行退保操作；2.资金到账时间请参照保险公司提示，不同保险公司产品有所不同；3.保险公司将根据保险条款收取退保手续费，收费标准请参见产品的“费用结构”；4.投保后变更银行账号将对该功能产生影响，如不成功，请到保险公司柜台办理",
        "10011": "温馨提示：1.当日撤单为撤销当天投保成功的保单，当日撤单将不扣除手续费；2.当日撤单到账时间需根据农行撤单操作退款时间进行确认；3.投保后变更了账户信息会造成该交易失败，请到保险公司柜台查询及办理相关业务。",
        "10012": "是否确认提交？",
        "10013": "温馨提示：资金将实时到账。",
        "10014": "温馨提示：资金到账时间由保险公司确定。",
        "11001": "每人可预约1-3枚，预约后不可修改",
        "11002": "本网点剩余额度500枚",
        "11003": "本网点可预约额度已用完",
        "11004": "请选择预约数量",
        "11005": "贺岁币兑换活动已结束，无法查询",
        "11006": "请在兑换日期凭预约证件和兑换码到网点兑换。",
        "11007": "温馨提示：交易成功将清除您的预约记录！",
        "99001": "41H999指定理财金额不能小于8万元人民币！"
    },
    "errors": {

    }
}
},{}],453:[function(require,module,exports){
'use strict';

require('babel-polyfill');

var _store = require('./store.js');

var _store2 = _interopRequireDefault(_store);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Vue = require('vue');

var VueI18n = require('./components/vue-i18n');
Vue.use(VueI18n);
var i18n = new VueI18n({
    locale: 'zh_cn',
    messages: {
        zh_cn: require('./i18n/zh_cn.json'),
        en_us: require('./i18n/en_us.json')
    }
});

var VueAwesomeSwiper = require('./components/vue-awesome-swiper');
Vue.use(VueAwesomeSwiper);

var components = [['页头', 'x-header', 'Part', require('./components/x-header.vue')], ['导航', 'x-nav', 'Part', require('./components/x-nav.vue')], ['布局', 'x-layout-main', 'Part', require('./components/x-layout-main.vue')], ['页脚', 'x-footer', 'Part', require('./components/x-footer.vue')], ['调试', 'x-debug-page', 'Part', require('./components/x-debug-page.vue')], ['省市区三级联动', 'x-province', 'Part', require('./components/x-province.vue')], ['Dialog', 'x-dialog', 'Part', require('./components/x-dialog.vue')], ['主菜单头', 'x-main-header', 'Part', require('./components/x-main-header.vue')], ['Many', 'x-many-choose', 'Part', require('./components/x-many-choose.vue')], ['弹出窗口', 'x-dialog-select', 'Part', require('./components/x-dialog-select.vue')], ['弹出窗口2', 'x-dialog-selectForD02', 'Part', require('./components/x-dialog-selectForD02.vue')], ['Level', 'x-multi-level', 'Part', require('./components/x-multi-level.vue')], ['分页', 'x-pagination', 'Part', require('./components/x-pagination.vue')], ['管理页头', 'adm-header', 'Part', require('./components/adm-header.vue')], ['管理功能页头', 'in-adm-header', 'Part', require('./components/in-adm-header.vue')], ['是否继续交易', 'x-pop-ifcontinue', 'Part', require('./components/x-ifcontinue.vue')], ['通用表格显示组件', 'x-comtab', 'Part', require('./components/x-comtab.vue')], ['通用表格显示组件2', 'x-comtab2', 'Part', require('./components/x-comtab2.vue')], ['通用表格有详情按钮', 'x-comtab-det', 'Part', require('./components/x-comtab-det.vue')]];
components.forEach(function (item) {
    Vue.component(item[1], item[3]);
});

var collections = [];
collections = AppCollections;
collections.push(['A01_PUBLIC', require('./A01_common.js')]);
collections.push(['B01_CARD', { default: B01_pages }]);
collections.push(['B02_EBANK', { default: B02_pages }]);
collections.push(['B03_TRANSFER', { default: B03_pages }]);
collections.push(['B04_ACCOUNT', { default: B04_pages }]);
collections.push(['B05_FINANCE', { default: B05_pages }]);
collections.push(['B06_FUND', { default: B06_pages }]);
collections.push(['B07_QUERY', { default: B07_pages }]);
collections.push(['B08_FOREXC', { default: B08_pages }]);
collections.push(['B09_CREDITCARD', { default: B09_pages }]);
collections.push(['B10_INSURANCE', { default: B10_pages }]);
collections.push(['B11_COMCOIN', { default: B11_pages }]);
collections.push(['B12_BRCHFEATURE', { default: B12_pages }]);
collections.push(['B14_BILL', { default: B14_pages }]);
collections.push(['B15_LOAN', { default: B15_pages }]);

collections.push(['D01_ADMIN', { default: D01_pages }]);

collections.push(['C00_BRCHFEATURE', { default: window.C00_pages ? window.C00_pages : [] }]);
collections.push(['C10_00GG', { default: window.C10_00GG_pages ? window.C10_00GG_pages : [] }]);
collections.push(['C10_01XJ', { default: window.C10_01XJ_pages ? window.C10_01XJ_pages : [] }]);
collections.push(['C10_02CD', { default: window.C10_02CD_pages ? window.C10_02CD_pages : [] }]);
collections.push(['C10_03TS', { default: window.C10_03TS_pages ? window.C10_03TS_pages : [] }]);
collections.push(['C10_04ZZ', { default: window.C10_04ZZ_pages ? window.C10_04ZZ_pages : [] }]);
collections.push(['C10_05DY', { default: window.C10_05DY_pages ? window.C10_05DY_pages : [] }]);
collections.push(['C10_06LC', { default: window.C10_06LC_pages ? window.C10_06LC_pages : [] }]);
collections.push(['C10_07JJ', { default: window.C10_07JJ_pages ? window.C10_07JJ_pages : [] }]);
collections.push(['C10_08XY', { default: window.C10_08XY_pages ? window.C10_08XY_pages : [] }]);
collections.push(['C10_09JF', { default: window.C10_09JF_pages ? window.C10_09JF_pages : [] }]);
collections.push(['C10_10KK', { default: window.C10_10KK_pages ? window.C10_10KK_pages : [] }]);
collections.push(['C10_99GL', { default: window.C10_99GL_pages ? window.C10_99GL_pages : [] }]);

var pages = [];
collections.forEach(function (collection) {
    collection[1].default.forEach(function (item) {
        Vue.component(item[1], item[3]);
        pages.push(item);
    });
});

var menu = require('../json/menu.json');
var demoPool = [];

var App = require('./app.vue');

var vm = new Vue({
    i18n: i18n,
    store: _store2.default,
    data: {
        currentView: './cust_main_OutService.html',
        currentPopup: './customer/common/cust_com_PopupDemo.html',
        theme: 'default',
        themeImgPath: 'themes/default',
        themes: window.g_themes ? window.g_themes : [],
        collections: collections,
        pages: pages,
        menu: menu,
        loginStatus: false, // 登录状态
        exitStatus: true, // 退出状态
        timeStatus: true, // 倒计时显示
        VIPStatus: "0", // 客户等级
        countDown: 0,
        cardStatus: false,
        saleShow: false, // 营销小信封显示
        barrage: '', // 弹幕：生日祝贺
        SaleProdSumShow: false,
        debug: false,
        demoPool: window.g_pool ? window.g_pool : demoPool,
        message: 'Hello, world',
        SaleProdSum: "",
        MachineType: "3",
        AdminName: ""
    },
    render: function render(createElement) {
        return createElement(App);
    },
    mounted: function mounted() {
        var self = this;
        DataTools.get("GD_A01_Theme|GD_A01_BusTip|C_A01_Dev_MachineType", function (data) {
            self.theme = data[0]; // 界面主题
            self.MachineType = data[2];
            var tips = JSON.parse(data[1]); // 界面提示语
            var i18n_tips = self.$i18n._vm.$data.messages.zh_cn.tip; // 偷看i18n底层数据结构
            for (var tip in tips) {
                i18n_tips[tip] = tips[tip];
            }
        });
    },

    watch: {
        theme: function theme(newValue) {
            var conf = ChangeTheme(newValue);
            this.themeImgPath = conf[3];
        }
    },
    methods: {
        imgPath: function imgPath(file) {
            return this.themeImgPath + '/' + file;
        },
        getImgPath: function getImgPath() {
            return "Machine/" + this.MachineType.toString() + "/";
        }
    }

});

// 浏览器调试访问
window.vm = vm;
vm.$mount("#vueApp");

},{"../json/menu.json":1,"./A01_common.js":301,"./app.vue":302,"./components/adm-header.vue":322,"./components/in-adm-header.vue":323,"./components/vue-awesome-swiper":324,"./components/vue-i18n":328,"./components/x-comtab-det.vue":329,"./components/x-comtab.vue":330,"./components/x-comtab2.vue":331,"./components/x-debug-page.vue":332,"./components/x-dialog-select.vue":333,"./components/x-dialog-selectForD02.vue":334,"./components/x-dialog.vue":335,"./components/x-footer.vue":336,"./components/x-header.vue":337,"./components/x-ifcontinue.vue":338,"./components/x-layout-main.vue":339,"./components/x-main-header.vue":340,"./components/x-many-choose.vue":341,"./components/x-multi-level.vue":342,"./components/x-nav.vue":343,"./components/x-pagination.vue":344,"./components/x-province.vue":345,"./i18n/en_us.json":451,"./i18n/zh_cn.json":452,"./store.js":454,"babel-polyfill":2,"vue":"vue"}],454:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _vue = require('vue');

var _vue2 = _interopRequireDefault(_vue);

var _vuex = require('vuex');

var _vuex2 = _interopRequireDefault(_vuex);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_vue2.default.use(_vuex2.default);

var store = new _vuex2.default.Store({
    state: {
        pool: {},
        hotline: '95599',
        documentTypeOptions: {
            "110025": "外国护照",
            "110021": "台湾居民来往大陆通行证",
            "110019": "港澳居民来往内地通行证"
        },
        accountTypeOptions: {}, //A-I类账户，B-II类账户
        CodAccount: {}, //账户性质:活期/整整/双利丰
        CodCurrency: {}, //币种
        CodIndDraf: {}, //钞汇性质
        accountStatus: {}, //账户状态
        endState: 0
    },
    mutations: {
        resetPool: function resetPool(state, data) {
            state.pool = data;
        },
        setPool: function setPool(state, payload) {
            console.log("setPool " + payload.key + "  " + payload.val);
            state.pool[payload.key] = payload.val;
        }
    },
    actions: {
        initPool: function initPool(_ref, data) {
            var commit = _ref.commit,
                state = _ref.state;

            commit('resetPool', {});
            if (data.hasOwnProperty('setKeys')) {
                for (var i = 0; i < data.setKeys.length; i++) {
                    commit({ type: "setPool", key: data.setKeys[i], val: "" });
                }
            }
            if (data.hasOwnProperty('getKeys')) {
                PlatformAdapter.getData(data.getKeys, function (data2) {
                    var ojb = {};
                    for (var i = 0; i < data.getKeys.length; i++) {
                        //commit({type:"setPool", key:data.getKeys[i], val:data2[ data.getKeys[i] ]})
                        ojb[data.getKeys[i]] = data2[data.getKeys[i]];
                    }
                    commit('resetPool', ojb);
                });
            }
        },
        initPool2: function initPool2(_ref2, data) {
            var commit = _ref2.commit,
                state = _ref2.state;

            //commit('resetPool', {})
            _vue2.default.set(data, 'pool', {});
            if (data.hasOwnProperty('setKeys')) {
                for (var i = 0; i < data.setKeys.length; i++) {
                    _vue2.default.set(data.pool, data.setKeys[i], "");
                    //commit({type:"setPool", key:data.setKeys[i], val:""})
                }
            }
            if (data.hasOwnProperty('getKeys')) {
                PlatformAdapter.getData(data.getKeys, function (data2) {
                    //var ojb = {};
                    for (var i = 0; i < data.getKeys.length; i++) {
                        //commit({type:"setPool", key:data.getKeys[i], val:data2[ data.getKeys[i] ]})
                        //ojb[data.getKeys[i]] = data2[ data.getKeys[i] ];
                        _vue2.default.set(data.pool, data.getKeys[i], data2[data.getKeys[i]]);
                    }
                    //commit('resetPool', ojb);
                });
            }
        },
        fetch: function fetch(_ref3, names) {
            var commit = _ref3.commit;

            PlatformAdapter.getData(names, function (data) {
                commit('resetPool', data);
            });
        },
        submit: function submit(_ref4, names) {
            var commit = _ref4.commit,
                state = _ref4.state;

            var pairs = {};
            for (var i = 0; i < names.length; i++) {
                pairs[names[i]] = state.pool[names[i]];
            }
            PlatformAdapter.setData(pairs);
        },
        submit2: function submit2(_ref5, payload) {
            var commit = _ref5.commit,
                state = _ref5.state;

            var pairs = {};
            for (var i = 0; i < payload.names.length; i++) {
                pairs[payload.names[i]] = payload.pool[payload.names[i]];
            }
            PlatformAdapter.setData(pairs);
        },
        exitScene: function exitScene(state, exit) {
            var event = exit.split("_")[1];
            PlatformAdapter.sendEvent(event);
        },
        onCancel: function onCancel(state) {
            PlatformAdapter.sendEvent("CANCEL");
        },
        onContinue: function onContinue(state) {
            PlatformAdapter.sendEvent("CONTINUE");
        },
        onFail: function onFail(state) {
            PlatformAdapter.sendEvent("FAIL");
        },
        onTimeout: function onTimeout(state) {
            PlatformAdapter.sendEvent("TIMEOUT");
        },
        onHome: function onHome(state) {
            PlatformAdapter.sendEvent("HOME");
        },
        onExit: function onExit(state) {
            PlatformAdapter.sendEvent("EXITADMIN");
        },
        onBack: function onBack(state) {
            PlatformAdapter.sendEvent("BACK");
        }
    }
});

exports.default = store;

},{"vue":"vue","vuex":"vuex"}]},{},[453])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJqc29uL21lbnUuanNvbiIsIm5vZGVfbW9kdWxlcy9iYWJlbC1wb2x5ZmlsbC9saWIvaW5kZXguanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9mbi9yZWdleHAvZXNjYXBlLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYS1mdW5jdGlvbi5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2EtbnVtYmVyLXZhbHVlLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYWRkLXRvLXVuc2NvcGFibGVzLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYW4taW5zdGFuY2UuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hbi1vYmplY3QuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1jb3B5LXdpdGhpbi5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LWZpbGwuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1mcm9tLWl0ZXJhYmxlLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktaW5jbHVkZXMuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1tZXRob2RzLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktcmVkdWNlLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktc3BlY2llcy1jb25zdHJ1Y3Rvci5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LXNwZWNpZXMtY3JlYXRlLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYmluZC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NsYXNzb2YuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2YuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2xsZWN0aW9uLXN0cm9uZy5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NvbGxlY3Rpb24tdG8tanNvbi5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NvbGxlY3Rpb24td2Vhay5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NvbGxlY3Rpb24uanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb3JlLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY3JlYXRlLXByb3BlcnR5LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY3R4LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGF0ZS10by1wcmltaXRpdmUuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kZWZpbmVkLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGVzY3JpcHRvcnMuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kb20tY3JlYXRlLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZW51bS1idWcta2V5cy5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2VudW0ta2V5cy5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2V4cG9ydC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2ZhaWxzLWlzLXJlZ2V4cC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2ZhaWxzLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZml4LXJlLXdrcy5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2ZsYWdzLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZm9yLW9mLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZ2xvYmFsLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faGFzLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faGlkZS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2h0bWwuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pZTgtZG9tLWRlZmluZS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2luaGVyaXQtaWYtcmVxdWlyZWQuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pbnZva2UuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pb2JqZWN0LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXMtYXJyYXktaXRlci5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLWFycmF5LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXMtaW50ZWdlci5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLW9iamVjdC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLXJlZ2V4cC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2l0ZXItY2FsbC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2l0ZXItY3JlYXRlLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1kZWZpbmUuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLWRldGVjdC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2l0ZXItc3RlcC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2l0ZXJhdG9ycy5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2tleW9mLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbGlicmFyeS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21hdGgtZXhwbTEuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19tYXRoLWxvZzFwLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWF0aC1zaWduLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWV0YS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21ldGFkYXRhLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWljcm90YXNrLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWFzc2lnbi5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1jcmVhdGUuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZHAuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZHBzLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWZvcmNlZC1wYW0uanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ29wZC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1nb3BuLWV4dC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1nb3BuLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdvcHMuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ3BvLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWtleXMtaW50ZXJuYWwuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3Qta2V5cy5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1waWUuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3Qtc2FwLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LXRvLWFycmF5LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb3duLWtleXMuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wYXJzZS1mbG9hdC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3BhcnNlLWludC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3BhcnRpYWwuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wYXRoLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcHJvcGVydHktZGVzYy5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3JlZGVmaW5lLWFsbC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3JlZGVmaW5lLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcmVwbGFjZXIuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zYW1lLXZhbHVlLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LXByb3RvLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LXNwZWNpZXMuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zZXQtdG8tc3RyaW5nLXRhZy5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3NoYXJlZC1rZXkuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zaGFyZWQuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zcGVjaWVzLWNvbnN0cnVjdG9yLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaWN0LW1ldGhvZC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmluZy1hdC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmluZy1jb250ZXh0LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLWh0bWwuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctcGFkLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLXJlcGVhdC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmluZy10cmltLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLXdzLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdGFzay5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLWluZGV4LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8taW50ZWdlci5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLWlvYmplY3QuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1sZW5ndGguanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1vYmplY3QuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1wcmltaXRpdmUuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190eXBlZC1hcnJheS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3R5cGVkLWJ1ZmZlci5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3R5cGVkLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdWlkLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fd2tzLWRlZmluZS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3drcy1leHQuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL193a3MuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvY29yZS5yZWdleHAuZXNjYXBlLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuY29weS13aXRoaW4uanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5ldmVyeS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbGwuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5maWx0ZXIuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5maW5kLWluZGV4LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZmluZC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZvci1lYWNoLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZnJvbS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmluZGV4LW9mLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaXMtYXJyYXkuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5pdGVyYXRvci5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmpvaW4uanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5sYXN0LWluZGV4LW9mLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkubWFwLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkub2YuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5yZWR1Y2UtcmlnaHQuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5yZWR1Y2UuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5zbGljZS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnNvbWUuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5zb3J0LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuc3BlY2llcy5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUubm93LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1pc28tc3RyaW5nLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1qc29uLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1wcmltaXRpdmUuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5kYXRlLnRvLXN0cmluZy5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmZ1bmN0aW9uLmJpbmQuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5mdW5jdGlvbi5oYXMtaW5zdGFuY2UuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5mdW5jdGlvbi5uYW1lLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWFwLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5hY29zaC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguYXNpbmguanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmF0YW5oLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5jYnJ0LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5jbHozMi5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguY29zaC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguZXhwbTEuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmZyb3VuZC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguaHlwb3QuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmltdWwuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmxvZzEwLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5sb2cxcC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgubG9nMi5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguc2lnbi5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguc2luaC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgudGFuaC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgudHJ1bmMuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIuY29uc3RydWN0b3IuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIuZXBzaWxvbi5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5pcy1maW5pdGUuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIuaXMtaW50ZWdlci5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5pcy1uYW4uanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIuaXMtc2FmZS1pbnRlZ2VyLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLm1heC1zYWZlLWludGVnZXIuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIubWluLXNhZmUtaW50ZWdlci5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5wYXJzZS1mbG9hdC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5wYXJzZS1pbnQuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIudG8tZml4ZWQuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIudG8tcHJlY2lzaW9uLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmFzc2lnbi5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5jcmVhdGUuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnRpZXMuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmZyZWV6ZS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcy5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtcHJvdG90eXBlLW9mLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmlzLWV4dGVuc2libGUuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuaXMtZnJvemVuLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmlzLXNlYWxlZC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5pcy5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnByZXZlbnQtZXh0ZW5zaW9ucy5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5zZWFsLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucGFyc2UtZmxvYXQuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5wYXJzZS1pbnQuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5wcm9taXNlLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5hcHBseS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuY29uc3RydWN0LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5kZWZpbmUtcHJvcGVydHkuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmRlbGV0ZS1wcm9wZXJ0eS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuZW51bWVyYXRlLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmdldC1wcm90b3R5cGUtb2YuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmdldC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuaGFzLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5pcy1leHRlbnNpYmxlLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5vd24ta2V5cy5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QucHJldmVudC1leHRlbnNpb25zLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5zZXQtcHJvdG90eXBlLW9mLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5zZXQuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAuY29uc3RydWN0b3IuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAuZmxhZ3MuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAubWF0Y2guanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAucmVwbGFjZS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5zZWFyY2guanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAuc3BsaXQuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAudG8tc3RyaW5nLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc2V0LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmFuY2hvci5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5iaWcuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuYmxpbmsuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuYm9sZC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5jb2RlLXBvaW50LWF0LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmVuZHMtd2l0aC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5maXhlZC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5mb250Y29sb3IuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udHNpemUuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuZnJvbS1jb2RlLXBvaW50LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmluY2x1ZGVzLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLml0YWxpY3MuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcubGluay5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5yYXcuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcucmVwZWF0LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnNtYWxsLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnN0YXJ0cy13aXRoLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnN0cmlrZS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5zdWIuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuc3VwLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnRyaW0uanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zeW1ib2wuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5hcnJheS1idWZmZXIuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5kYXRhLXZpZXcuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5mbG9hdDMyLWFycmF5LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuZmxvYXQ2NC1hcnJheS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLmludDE2LWFycmF5LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuaW50MzItYXJyYXkuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5pbnQ4LWFycmF5LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQudWludDE2LWFycmF5LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQudWludDMyLWFycmF5LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQudWludDgtYXJyYXkuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC51aW50OC1jbGFtcGVkLWFycmF5LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYud2Vhay1tYXAuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi53ZWFrLXNldC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LmFycmF5LmluY2x1ZGVzLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuYXNhcC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LmVycm9yLmlzLWVycm9yLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcubWFwLnRvLWpzb24uanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5tYXRoLmlhZGRoLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcubWF0aC5pbXVsaC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm1hdGguaXN1YmguanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5tYXRoLnVtdWxoLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcub2JqZWN0LmRlZmluZS1nZXR0ZXIuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5vYmplY3QuZGVmaW5lLXNldHRlci5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5lbnRyaWVzLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5vYmplY3QubG9va3VwLWdldHRlci5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5sb29rdXAtc2V0dGVyLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcub2JqZWN0LnZhbHVlcy5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm9ic2VydmFibGUuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5yZWZsZWN0LmRlZmluZS1tZXRhZGF0YS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnJlZmxlY3QuZGVsZXRlLW1ldGFkYXRhLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcucmVmbGVjdC5nZXQtbWV0YWRhdGEta2V5cy5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnJlZmxlY3QuZ2V0LW1ldGFkYXRhLmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcucmVmbGVjdC5nZXQtb3duLW1ldGFkYXRhLWtleXMuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5yZWZsZWN0LmdldC1vd24tbWV0YWRhdGEuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5yZWZsZWN0Lmhhcy1tZXRhZGF0YS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnJlZmxlY3QuaGFzLW93bi1tZXRhZGF0YS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnJlZmxlY3QubWV0YWRhdGEuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zZXQudG8tanNvbi5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN0cmluZy5hdC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN0cmluZy5tYXRjaC1hbGwuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zdHJpbmcucGFkLWVuZC5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN0cmluZy5wYWQtc3RhcnQuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zdHJpbmcudHJpbS1sZWZ0LmpzIiwibm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3RyaW5nLnRyaW0tcmlnaHQuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3IuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zeW1ib2wub2JzZXJ2YWJsZS5qcyIsIm5vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN5c3RlbS5nbG9iYWwuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi5pbW1lZGlhdGUuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi50aW1lcnMuanMiLCJub2RlX21vZHVsZXMvY29yZS1qcy9zaGltLmpzIiwibm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy9yZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiLCJub2RlX21vZHVsZXMvdnVlLWhvdC1yZWxvYWQtYXBpL2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL3Z1ZWlmeS9saWIvaW5zZXJ0LWNzcy5qcyIsInNyY1xcQTAxX2NvbW1vbi5qcyIsInNyYy9hcHAudnVlIiwic3JjXFxjb21tb25cXEEwMV9BdWRpdG9yVmVyaWZ5SUROb1BERi52dWU/ZjcwZmMwOWMiLCJzcmNcXGNvbW1vblxcQTAxX0F1ZGl0b3JWZXJpZnlJRFBERi52dWU/NTUwNmU0NjciLCJzcmNcXGNvbW1vblxcQTAxX0F1ZGl0b3JWZXJpZnlJRFBERk1hcmtldGluZy52dWU/YTFhZWEzYmEiLCJzcmMvY29tbW9uL0EwMV9EYXRhQmFzZU1nbi52dWUiLCJzcmMvY29tbW9uL0EwMV9Eb3dubG9hZE1lbnUudnVlIiwic3JjL2NvbW1vbi9BMDFfRG93bmxvYWRQYXJhbXMudnVlIiwic3JjL2NvbW1vbi9BMDFfRG93bmxvYWRVRmlsZXMudnVlIiwic3JjL2NvbW1vbi9BMDFfRG93bmxvYWRXb3JrS2V5LnZ1ZSIsInNyYy9jb21tb24vQTAxX0luaXRpYWxpemVQYXJhbXMudnVlIiwic3JjL2NvbW1vbi9BMDFfU2Vuc2l0aXZlRGF0YS52dWUiLCJzcmMvY29tbW9uL0EwMV9tYWluX1N5c2luZy52dWUiLCJzcmMvY29tbW9uL2NvbV9EZXRhaWxfdGFibGUudnVlIiwic3JjXFxjb21tb25cXGNvbV9kYXRlLnZ1ZT81OGQ3OTk0NCIsInNyY1xcY29tbW9uXFxjb21fbmV3U2VsZWN0LnZ1ZT9kNWQ5YjQzNiIsInNyY1xcY29tbW9uXFxjb21fc2VsZWN0LnZ1ZT80MzdkZjA5ZSIsInNyY1xcY29tbW9uXFxjdXN0X1Nob3dSZWFzb24udnVlPzQ0NmIxZTAyIiwic3JjXFxjb21tb25cXGN1c3RfaXNMb2dvdXQudnVlP2QyYjViMTgwIiwic3JjXFxjb21tb25cXGN1c3RfbWFpbl9PdXRTZXJ2aWNlLnZ1ZT9jYjY3YjhlYyIsInNyY1xcY29tbW9uXFxyZXN1bHQudnVlPzNjMDEyMTYwIiwic3JjL2NvbXBvbmVudHMvYWRtLWhlYWRlci52dWUiLCJzcmMvY29tcG9uZW50cy9pbi1hZG0taGVhZGVyLnZ1ZSIsInNyY1xcY29tcG9uZW50c1xcdnVlLWF3ZXNvbWUtc3dpcGVyXFxpbmRleC5qcyIsInNyY1xcY29tcG9uZW50c1xcdnVlLWF3ZXNvbWUtc3dpcGVyXFxzcmNcXHNsaWRlLnZ1ZT83YmU3YjE3ZSIsInNyY1xcY29tcG9uZW50c1xcdnVlLWF3ZXNvbWUtc3dpcGVyXFxzcmNcXHN3aXBlci52dWU/NTgzZjYyM2EiLCJzcmNcXGNvbXBvbmVudHNcXHZ1ZS1hd2Vzb21lLXN3aXBlclxcc3dpcGVyXFxkaXN0XFxqc1xcc3dpcGVyLmpzIiwic3JjXFxjb21wb25lbnRzXFx2dWUtaTE4blxcZGlzdFxcc3JjXFxjb21wb25lbnRzXFx2dWUtaTE4blxcZGlzdFxcdnVlLWkxOG4uY29tbW9uLmpzIiwic3JjXFxjb21wb25lbnRzXFx4LWNvbXRhYi1kZXQudnVlPzVlMzE3MDI2Iiwic3JjXFxjb21wb25lbnRzXFx4LWNvbXRhYi52dWU/ODdkYTgzYWMiLCJzcmNcXGNvbXBvbmVudHNcXHgtY29tdGFiMi52dWU/MjQ0MTI2YjkiLCJzcmNcXGNvbXBvbmVudHNcXHgtZGVidWctcGFnZS52dWU/NjNlYWNkNzYiLCJzcmNcXGNvbXBvbmVudHNcXHgtZGlhbG9nLXNlbGVjdC52dWU/N2MzNjlkZTAiLCJzcmNcXGNvbXBvbmVudHNcXHgtZGlhbG9nLXNlbGVjdEZvckQwMi52dWU/MzZhNGE1YjciLCJzcmNcXGNvbXBvbmVudHNcXHgtZGlhbG9nLnZ1ZT81OTNkODM3MiIsInNyY1xcY29tcG9uZW50c1xceC1mb290ZXIudnVlPzdjYzc2MjI0Iiwic3JjXFxjb21wb25lbnRzXFx4LWhlYWRlci52dWU/NzNmYTExNzEiLCJzcmNcXGNvbXBvbmVudHNcXHgtaWZjb250aW51ZS52dWU/YTIwZGNmNTgiLCJzcmMvY29tcG9uZW50cy94LWxheW91dC1tYWluLnZ1ZSIsInNyY1xcY29tcG9uZW50c1xceC1tYWluLWhlYWRlci52dWU/M2NjYjA3NzAiLCJzcmNcXGNvbXBvbmVudHNcXHgtbWFueS1jaG9vc2UudnVlPzMxYjI5YTA4Iiwic3JjXFxjb21wb25lbnRzXFx4LW11bHRpLWxldmVsLnZ1ZT8wZjBlYjRjNCIsInNyYy9jb21wb25lbnRzL3gtbmF2LnZ1ZSIsInNyY1xcY29tcG9uZW50c1xceC1wYWdpbmF0aW9uLnZ1ZT8wZWY3ZTdmZiIsInNyY1xcY29tcG9uZW50c1xceC1wcm92aW5jZS52dWU/MTM1NTYxNzQiLCJzcmNcXGN1c3RfU2hvd1JlYXNvbi52dWU/NzE4MDQxNDIiLCJzcmNcXGN1c3RfbWFpbl9PdXRTZXJ2aWNlLnZ1ZT8xMmJmNDc3MCIsInNyY1xcY3VzdG9tZXJcXGJ1c2luZXNzXFxjdXN0X2J1c19hZHZlcnRpc2UudnVlPzQyNmQxMmZhIiwic3JjXFxjdXN0b21lclxcYnVzaW5lc3NcXGN1c3RfYnVzX2luZGV4LnZ1ZT9kM2Y2NmY2YyIsInNyY1xcY3VzdG9tZXJcXGJ1c2luZXNzXFxjdXN0X2J1c193ZWxjb21lLnZ1ZT8zMWFjNDllYyIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcQTAxX0F1dGhIaWdoQ2FtUGljLnZ1ZT8yOGZhZDMyYiIsInNyYy9jdXN0b21lci9jb21tb24vQTAxX0NhcmRSZWFkaW5nLnZ1ZSIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcQTAxX0Nob29zZU1lZGlhVHlwZS52dWU/Njk2OWNkNGIiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXEEwMV9EZWFsTmljcENhcmQudnVlPzAxODJkNGNhIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfRVNpZ24udnVlPzc5OGU2OWZlIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfRWplY3RSZXN1bHQudnVlPzk4YTFiMGYyIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfRmFjZUNhbWVyYS52dWU/MmEwNWQ3N2EiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXEEwMV9Gb3JjZVNob3dSZVN1bHQudnVlPzE4NWFmZTdjIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfRm9yZWlnbmVyVGlwLnZ1ZT83N2U3ZGZlMyIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcQTAxX0hEUHJpbnRPSy52dWU/MmIwZjA2YzQiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXEEwMV9IaWduQ2FtVGFrZVBob3RvLnZ1ZT81OTRiOTg3MCIsInNyYy9jdXN0b21lci9jb21tb24vQTAxX0lEQ2FyZFJlYWRpbmcudnVlIiwic3JjL2N1c3RvbWVyL2NvbW1vbi9BMDFfSW5pdERldi52dWUiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXEEwMV9Jbml0RGV2RmFpbC52dWU/OTNhYjlhNDYiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXEEwMV9JbnB1dEFjY291bnRBbmRQYXNzd29yZC52dWU/NmE0ZTZlYjYiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXEEwMV9JbnB1dEFjY291bnRBbmRQYXNzd29yZEFnYWluLnZ1ZT83MDRiNWUwYyIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcQTAxX0lucHV0Q2FyZE9yUGFzc2Jvb2sudnVlP2UxMWFjODAwIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfSW5wdXRDYXJkT3JQYXNzYm9vazIudnVlPzIwYjJjY2VjIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfSW5wdXRNb3JlSURJbmZvLnZ1ZT80Y2RkNjA5ZSIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcQTAxX01lbnUudnVlPzA1OThhZDRjIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfTXN0S2V5Tm90TG9hZC52dWU/NjVhNWQzZTciLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXEEwMV9OZWVkUmVhZENhcmRUaXAudnVlP2JjODAyMzQyIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfTm90Umlza1RpcC52dWU/NDE4NzkxNWUiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXEEwMV9PdXRTZXJ2aWNlLnZ1ZT82N2VhYTllZiIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcQTAxX091dFNlcnZpY2VSZWFzb24udnVlPzg1NzRhMmUwIiwic3JjL2N1c3RvbWVyL2NvbW1vbi9BMDFfUGFzc2Jvb2tSZWFkaW5nLnZ1ZSIsInNyYy9jdXN0b21lci9jb21tb24vQTAxX1ByaW50QTRIVE1MLnZ1ZSIsInNyYy9jdXN0b21lci9jb21tb24vQTAxX1ByaW50UmVjZWlwdC52dWUiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXEEwMV9SZXRyYWN0Q2FyZE9yUGFzc2Jvb2sudnVlPzk3NGFlYWQwIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfUmlza0V4cGlyZWRUaXAudnVlP2MyOThjODJjIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfU2VhcmNoLnZ1ZT81ZmY5NTIwMSIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcQTAxX1NlbGVjdERvY3VtZW50VHlwZS52dWU/NjUxYTlkYTciLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXEEwMV9TZWxlY3REb2N1bWVudFR5cGVBbGwudnVlPzUzYTc3Y2NmIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfU2hvd0FwcGxpY2F0aW9uLnZ1ZT8yMjljZDZhNSIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcQTAxX1Nob3dEZXZpY2VFcnJvci52dWU/NzVmNmJkZTEiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXEEwMV9TaG93TW9yZUlESW5mby52dWU/NjUwY2FkM2IiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXEEwMV9TaG93UmVhc29uLnZ1ZT85YWYxN2M0NCIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcQTAxX1Nob3dSZWFzb25BbmRSZXR1cm4udnVlPzQ2ZDJkNjUzIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfU2hvd1JlYXNvbkZvckN1c3RNbnQudnVlPzI3YzE2M2FkIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfU2hvd1JlYXNvbk5vU291bmQudnVlPzM5NWYzM2UyIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfU2hvd1JlYm9vdFRlcm0udnVlPzNmZDg3ZGJjIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfU2hvd1RyYW5zUmVzdWx0LnZ1ZT8zZmE5MjUxMCIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcQTAxX1Nob3dUcmFuc1Jlc3VsdDRQcmludGVyRXJyb3IudnVlPzA4ZDE3ZjQ4Iiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfU2hvd1ZlcnNpb24udnVlPzVhYjQ3MTllIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfU2lnbkVycm9yLnZ1ZT8wNzM2NzFlZCIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcQTAxX1Rha2VDYXJkT3JQYXNzYm9vay52dWU/MmJlNDE0NmYiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXEEwMV9XYWl0aW5nRm9yQUQudnVlPzNjMDJhN2RkIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfY29tX1RyYWRpbmcudnVlPzE0NjBjNmIwIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxBMDFfaW5wdXRJRGluZm8udnVlPzE1NWVkMzZlIiwic3JjL2N1c3RvbWVyL2NvbW1vbi9DdXN0X1BhZF9DaGVjay52dWUiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXEN1c3RfU2hvd1JlYXNvbi52dWU/MzU2ZWUzZTgiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXGN1c19jb21faW5mb3JtYXRpb25Db25maXJtLnZ1ZT9kZjAyMjEyMiIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcY3VzdF9jb21fQXVkaXRvclZlcmlmeUlELnZ1ZT82ZjczYTlmMSIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcY3VzdF9jb21fQ2l0eVNlbGVjdG9yLnZ1ZT85NDk4YjM0NCIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcY3VzdF9jb21fRGlhbG9nRGVtby52dWU/OTJhYjk2NWUiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXGN1c3RfY29tX0VDaGFydHNEZW1vLnZ1ZT82ZmM4ODA1OCIsInNyYy9jdXN0b21lci9jb21tb24vY3VzdF9jb21fRmluZ2VyRGlzdGluZ3Vpc2gudnVlIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxjdXN0X2NvbV9JRGluLnZ1ZT82ZmVhN2VmYSIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcY3VzdF9jb21fSURvdXQudnVlPzUwMWY1NWM0Iiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxjdXN0X2NvbV9JZkJvbnVzUmVjb3JkLnZ1ZT8zZjMwM2YzMCIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcY3VzdF9jb21fSW5wdXRDYXJkLnZ1ZT81NjlhOWFjZSIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcY3VzdF9jb21fSW5wdXREb2N1bWVudEluZm8udnVlPzY5MGQ2MzllIiwic3JjL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9JbnB1dFBhc3N3b3JkLnZ1ZSIsInNyYy9jdXN0b21lci9jb21tb24vY3VzdF9jb21fSW5wdXRQYXNzd29yZEFnYWluLnZ1ZSIsInNyYy9jdXN0b21lci9jb21tb24vY3VzdF9jb21fSW5wdXRQYXNzd29yZEVycm9yLnZ1ZSIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcY3VzdF9jb21fSW5zZXJ0T3RoZXJEb2N1bWVudEluZm8udnVlPzRmNmY3NmI0Iiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxjdXN0X2NvbV9Jc1ByaW50UmVjZWlwdC52dWU/Mjc0MWUyMmEiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXGN1c3RfY29tX0xheW91dE1haW5EZW1vLnZ1ZT82OTM4Y2QzMCIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcY3VzdF9jb21fTWFueURlbW8udnVlP2Q5MzNmMWMwIiwic3JjL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9OZXRDaGVjay52dWUiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXGN1c3RfY29tX1BvcHVwRGVtby52dWU/ZGQyNDIzOWEiLCJzcmMvY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1ByaW50QXBwbGljYXRpb24udnVlIiwic3JjL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9QdXRBcHBsaWNhdGlvbi52dWUiLCJzcmMvY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1JldHJhY3RDYXJkLnZ1ZSIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcY3VzdF9jb21fU2VhdFZlcmlmeS52dWU/ZmYwMWRkMjIiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXGN1c3RfY29tX1NlbGVjdERvY3VtZW50VHlwZS52dWU/NjMzNDllYTgiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXGN1c3RfY29tX1NlbGVjdFNoZW5mZW5nemhlbmcudnVlP2U4ZmJkMTEyIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxjdXN0X2NvbV9TaG93QXBwbGljYXRpb24udnVlPzU3NDQ5YTA0Iiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxjdXN0X2NvbV9TaG93UmVhc29uLnZ1ZT8xYjQzNDllNCIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcY3VzdF9jb21fU2hvd1NpZ25SZXN1bHQudnVlPzMyMjliYWQ0Iiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxjdXN0X2NvbV9Td2lwZXJEZW1vLnZ1ZT9lYzg1YTI3NCIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcY3VzdF9jb21fU3dpdGNoVGhlbWUudnVlPzQ5NTk1MDIwIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxjdXN0X2NvbV9UYWtlQXBwbGljYXRpb24udnVlP2JkYmMzMDllIiwic3JjL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9UYWtlQ2FyZC52dWUiLCJzcmMvY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1Rha2VSZWNlaXB0LnZ1ZSIsInNyYy9jdXN0b21lci9jb21tb24vY3VzdF9jb21fVHJhZGVGYWlsZWQudnVlIiwic3JjXFxjdXN0b21lclxcY29tbW9uXFxjdXN0X2NvbV9UcmFkZUZpbmlzaFRpcC52dWU/YjU0NWNiZTYiLCJzcmMvY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1RyYWRlU3VjY2Vzcy52dWUiLCJzcmNcXGN1c3RvbWVyXFxjb21tb25cXGN1c3RfY29tX1RyYWRpbmcudnVlPzZhYmUwMGRlIiwic3JjL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9WZXJpZnlJZGVudGl0eS52dWUiLCJzcmMvY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1ZlcnRpZnlCdXN5VGlwLnZ1ZSIsInNyY1xcY3VzdG9tZXJcXGNvbW1vblxcY3VzdF9jb21faXNMb2dpbk91dEFuZFNob3dTYWxlSW5mby52dWU/YzdmZjBlNWEiLCJzcmMvZGVtby9iaXJ0aGRheS52dWUiLCJzcmNcXGRlbW9cXGNvbV9idXlQcm9kdWN0SW5mby52dWU/MTc4MDVjMWYiLCJzcmNcXGRlbW9cXGNvbV9ob2xkRnVuZExpc3QudnVlPzg4OWZmNTQyIiwic3JjXFxkZW1vXFxjb21faW5wdXRJRGluZm8udnVlP2YxNmEyNjVjIiwic3JjL2RlbW8vaWRlbnRpdHlfc3RhdGVtZW50LnZ1ZSIsInNyY1xcZGVtb1xcc2Nyb2xsLnZ1ZT8zYzgwZGVjNCIsInNyYy9kZW1vL3RyYW5fc2FmZXR5X2tleS52dWUiLCJzcmMvZGVtby93ZWxjb21lLnZ1ZSIsInNyYy9pMThuL2VuX3VzLmpzb24iLCJzcmMvaTE4bi96aF9jbi5qc29uIiwic3JjXFxtYWluLmpzIiwic3JjXFxzdG9yZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzd1Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUMzQkE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTs7QUNIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3pCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDM0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzNCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNmQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3ZCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3RCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzdJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNsRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcEZBO0FBQ0E7O0FDREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ25CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNKQTtBQUNBO0FBQ0E7QUFDQTs7QUNIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNOQTtBQUNBO0FBQ0E7QUFDQTs7QUNIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDMUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNYQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMzQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDWkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDeEJBO0FBQ0E7QUFDQTtBQUNBOztBQ0hBO0FBQ0E7QUFDQTtBQUNBOztBQ0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUEE7O0FDQUE7QUFDQTtBQUNBOztBQ0ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1BBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0xBO0FBQ0E7QUFDQTs7QUNGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1BBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNYQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNaQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3BCQTtBQUNBO0FBQ0E7O0FDRkE7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7O0FDSEE7QUFDQTtBQUNBO0FBQ0E7O0FDSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2xEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ25FQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN6Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDWkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNuQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTkE7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDWkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNoQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTkE7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN0QkE7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDL0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUEE7QUFDQTtBQUNBO0FBQ0E7O0FDSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDeEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNoQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNsQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNoQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM3QkE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDMUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOWRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNoUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN6QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUkE7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNWQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1BBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNiQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDckNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNkQTtBQUNBO0FBQ0E7QUFDQTs7QUNIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNqQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3JCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNUQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNsQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDM0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDdEJBOztBQ0FBO0FBQ0E7QUFDQTtBQUNBOztBQ0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzNCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2JBO0FBQ0E7QUFDQTtBQUNBOztBQ0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVkE7QUFDQTtBQUNBO0FBQ0E7O0FDSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDWkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDeEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNqQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN6QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDeEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUEE7QUFDQTtBQUNBO0FBQ0E7O0FDSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNQQTtBQUNBO0FBQ0E7QUFDQTs7QUNIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3BFQTtBQUNBO0FBQ0E7QUFDQTs7QUNIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUkE7QUFDQTtBQUNBO0FBQ0E7O0FDSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNUQTtBQUNBO0FBQ0E7QUFDQTs7QUNIQTtBQUNBO0FBQ0E7QUFDQTs7QUNIQTtBQUNBO0FBQ0E7QUFDQTs7QUNIQTtBQUNBO0FBQ0E7QUFDQTs7QUNIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2hIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDakJBO0FBQ0E7QUFDQTtBQUNBOztBQ0hBO0FBQ0E7QUFDQTs7QUNGQTtBQUNBO0FBQ0E7O0FDRkE7QUFDQTtBQUNBOztBQ0ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNSQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUkE7QUFDQTtBQUNBO0FBQ0E7O0FDSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1BBO0FBQ0E7QUFDQTs7QUNGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNSQTtBQUNBO0FBQ0E7O0FDRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7O0FDSEE7QUFDQTtBQUNBO0FBQ0E7O0FDSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMxU0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM5Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDckJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN6QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3BCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1BBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVkE7QUFDQTtBQUNBO0FBQ0E7O0FDSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzlCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMxQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNUQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDWEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDckVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3hCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDWEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDdEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNYQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2hCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDakJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDakJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM3Q0E7QUFDQTtBQUNBO0FBQ0E7O0FDSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN2REE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNYQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDWEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1JBO0FBQ0E7QUFDQTtBQUNBOztBQ0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNWQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNmQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDWEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNSQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNsQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2pCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDakJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNSQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN0TUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNSQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZEE7QUFDQTtBQUNBO0FBQ0E7O0FDSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzdCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNUQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNUQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNOQTs7QUNBQTs7QUNBQTtBQUNBO0FBQ0E7QUFDQTs7QUNIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDL0tBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3hMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FDaHVCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7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QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXREQTtBQXlEQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQXdCQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQVFBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBUUE7QUF4TkE7Ozs7QUF4Q0E7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUM2SkE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUExQkE7QUE0QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQXdCQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBR0E7QUFDQTs7QUFFQTtBQUVBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFRQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUVBO0FBR0E7O0FBRUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBR0E7QUFHQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF6REE7QUE2REE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFqWUE7Ozs7QUFsRUE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNvS0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUE1Q0E7QUE4Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFJQTs7QUFFQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUdBOztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7O0FBSUE7QUFHQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQXdCQTtBQUdBO0FBT0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFRQTtBQUNBOztBQUVBO0FBQ0E7QUFPQTtBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUVBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBSUE7QUFDQTtBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQWtCQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBVUE7QUFDQTtBQUNBOzs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTdJQTtBQXdKQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFQQTtBQS9pQkE7Ozs7QUE5RkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FDM0tBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNiQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNiQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNoQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7O0FDRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBUEE7Ozs7O0FBZEE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUMwREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFQQTs7Ozs7QUF6REE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNrRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQU5BOzs7OztBQWpFQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ3FCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVZBOzs7OztBQXBCQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ2NBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVpBOzs7OztBQWJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDbUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BOzs7OztBQWxCQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNBQTtBQUFBOzs7Ozs7Ozs7Ozs7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNiQTtBQUNBO0FBQ0E7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QUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBckRBO0FBdURBO0FBQ0E7QUFDQTtBQTlGQTs7Ozs7QUE1QkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNvQkE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFuQkE7QUFxQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTdDQTtBQStDQTtBQUNBO0FBQ0E7QUFyRkE7Ozs7O0FBdEJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUM0QkE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFuQkE7QUFxQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTdDQTtBQStDQTtBQUNBO0FBQ0E7QUFyRkE7Ozs7QUE5QkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDMEJBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBMUJBO0FBVkE7Ozs7QUF6QkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNtRUE7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBRkE7QUFUQTtBQWNBO0FBQ0E7QUFFQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFOQTtBQXhCQTs7OztBQWZBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ2tCQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFGQTtBQVRBO0FBY0E7QUFDQTtBQUVBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BO0FBeEJBOzs7O0FBakJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ3RDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFGQTtBQWJBO0FBa0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFOQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTdCQTtBQWdDQTtBQUNBO0FBQ0E7QUF0RUE7Ozs7O0FBZkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ2dCQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFQQTs7Ozs7QUFsQkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDZUE7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFVQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQXJIQTs7OztBQWhCQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNZQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUtBOztBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBNUJBO0FBK0JBO0FBQ0E7QUFDQTtBQTdDQTs7Ozs7QUFmQTtBQUFBOzs7Ozs7Ozs7Ozs7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7QUNRQTs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7O0FBbUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXBCQTtBQXVCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBO0FBRUE7QUFHQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFwSEE7Ozs7O0FBdEJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUN3RUE7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFGQTtBQWJBO0FBa0JBO0FBQ0E7QUFDQTtBQURBO0FBR0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFaQTtBQWNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBZkE7QUF0Q0E7Ozs7QUFyQkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDZ0hBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRkE7QUE3QkE7QUFrQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWZBO0FBaUJBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBOztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBOztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBM0NBO0FBNkNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVEE7QUFXQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBM09BO0FBakhBOzs7O0FBM0NBO0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQ3RIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7QUNGQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBRkE7QUFMQTtBQVVBO0FBQ0E7QUFDQTtBQURBO0FBR0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBaENBO0FBa0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQWxEQTs7Ozs7QUFiQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDd0NBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBaEJBO0FBa0JBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBcEJBO0FBc0JBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBWEE7O0FBY0E7O0FBbUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBNUdBOzs7O0FBdkNBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ3FCQTtBQUNBO0FBRUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQVRBO0FBV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7QUFDQTtBQURBO0FBUEE7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQU1BO0FBQ0E7QUFEQTtBQVBBO0FBWkE7QUFEQTtBQWhCQTs7Ozs7QUFwQkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNlQTtBQUNBO0FBR0E7O0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFEQTtBQUtBO0FBQ0E7QUFDQTtBQURBO0FBREE7QUFOQTtBQURBO0FBUkE7Ozs7O0FBZEE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQzRCQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBOztBQVBBO0FBY0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQWpCQTs7OztBQVZBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUM4Q0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBSUE7O0FBRUE7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBR0E7O0FBRUE7QUFHQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBR0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFGQTs7QUFLQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFWQTs7QUFjQTtBQUNBOztBQUVBOztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBR0E7O0FBR0E7QUFJQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBR0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFJQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFJQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBR0E7QUFFQTs7QUFPQTtBQUlBOztBQW9CQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBOztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7O0FBRUE7QUFFQTtBQUNBOztBQUdBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7QUFDQTtBQTNkQTs7OztBQTFEQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNlQTtBQUNBO0FBRUE7O0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVEE7QUFMQTs7OztBQVRBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ2lGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQTtBQUNBO0FBR0E7QUFDQTtBQUNBOztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQW5IQTs7OztBQXpEQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUN4Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7O0FDVUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUdBO0FBSUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBekJBO0FBMkJBO0FBQ0E7QUE3RUE7Ozs7O0FBekJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNtQkE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVhBOztBQWNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQTdFQTs7OztBQVhBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNRQTs7QUFHQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF0Q0E7Ozs7O0FBZEE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUMwQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7Ozs7O0FBekJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDU0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUEE7QUFTQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUEzRUE7Ozs7O0FBUkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ2lFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFYQTs7OztBQW5CQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDL0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVhBOzs7OztBQWJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQzRCQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBUEE7Ozs7QUE5QkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDMkVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWxFQTs7OztBQWpDQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUN6Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNoQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7O0FDU0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFsQkE7Ozs7O0FBckJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDd0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUEvQkE7Ozs7O0FBdkJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDd0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQTlCQTs7Ozs7QUF2QkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ3dCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUE5Q0E7QUFnREE7QUFDQTtBQXJEQTs7OztBQXZCQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUMwREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBO0FBRUE7QUFDQTs7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVZBO0FBWUE7QUFDQTtBQTNDQTs7OztBQXpEQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUN3RkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFSQTtBQVVBOztBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBcEJBO0FBdUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFuREE7QUFxREE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQXJQQTs7OztBQWxFQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBRUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFsQ0E7Ozs7QUFUQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDY0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7Ozs7O0FBekJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDYUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7Ozs7O0FBWkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDV0E7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFEQTs7OztBQVpBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNxQkE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUEE7Ozs7O0FBcEJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDMEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BOzs7OztBQXpCQTtBQUFBOzs7Ozs7Ozs7Ozs7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNoQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNiQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7OztBQ1dBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFJQTtBQUNBO0FBQ0E7O0FBSUE7QUFDQTtBQUNBOztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVEE7O0FBY0E7QUFDQTtBQUNBOztBQUlBO0FBekNBO0FBMkNBO0FBQ0E7QUFoREE7Ozs7QUF2QkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNXQTs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFOQTtBQURBOzs7O0FBWkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ3FCQTtBQUNBO0FBQ0E7QUFEQTtBQUdBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFsREE7QUFvREE7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF0RUE7Ozs7O0FBcEJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUM2REE7QUFFQTtBQUVBOztBQUVBO0FBR0E7QUFDQTs7QUFNQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWZBO0FBaUJBO0FBQ0E7QUFwRUE7Ozs7QUEvQkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDdUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFmQTtBQWtCQTtBQUNBO0FBcENBOzs7O0FBckNBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUMvQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUE3Q0E7Ozs7O0FBZEE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUN5QkE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUE3QkE7Ozs7O0FBeEJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUN3RkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFSQTtBQVVBOztBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBcEJBO0FBdUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFwQkE7O0FBdUJBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFFQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7O0FBRUE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBdlNBOzs7O0FBbEVBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNSQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFOQTs7Ozs7QUFaQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ2FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVkE7Ozs7O0FBWkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNjQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVZBOzs7OztBQWJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDYUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFWQTs7Ozs7QUFaQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ3lCQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTFCQTs7Ozs7QUF4QkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQzZEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWJBOzs7O0FBcEJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQzRCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFWQTs7OztBQW5CQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNyQkE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTlCQTs7OztBQXpCQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDY0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBYkE7Ozs7O0FBYkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ3dCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVRBO0FBV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBeENBO0FBMENBO0FBQ0E7QUEvQ0E7Ozs7QUF2QkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDcUJBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUkE7Ozs7QUFaQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNrQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQVRBOzs7O0FBWkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUMrRUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFaQTtBQWNBOztBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQW5EQTtBQXNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBekNBO0FBMkNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBektBOzs7O0FBNUJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQ2xFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7QUNIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQVhBOzs7OztBQVpBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ0NBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDa0JBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFwQkE7Ozs7O0FBbEJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUMwRkE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBZkE7QUFpQkE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFwQkE7QUFzQkE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFYQTs7QUFjQTs7QUFtQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUEzR0E7Ozs7QUFsQ0E7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQy9DQTtBQURBOzs7OztBQVBBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNZQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBVEE7QUFGQTtBQUFBO0FBa0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBZkE7QUFuQkE7Ozs7QUFYQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7QUNGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVRBO0FBV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVRBO0FBV0E7QUFDQTtBQTVCQTs7Ozs7QUFWQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ1dBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVEE7QUFXQTtBQUNBO0FBaEJBOzs7OztBQVZBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDY0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBWkE7Ozs7O0FBWkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ29CQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFwQkE7QUFzQkE7QUFDQTtBQTVCQTs7OztBQXBCQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUN1QkE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQS9CQTtBQWtDQTtBQUNBO0FBQ0E7QUFwREE7Ozs7O0FBekJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7QUMrREE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQWpEQTs7OztBQTNFQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFYQTs7Ozs7QUFWQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ09BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BOzs7OztBQU5BO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUM0QkE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFOQTtBQVFBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXRDQTtBQXlDQTtBQUNBO0FBQ0E7QUE3REE7Ozs7O0FBN0JBO0FBQUE7Ozs7Ozs7Ozs7Ozs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7QUNBQTtBQURBOzs7OztBQVpBO0FBQUE7Ozs7Ozs7Ozs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7QUNtQ0E7QUFDQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBRUE7QUFDQTtBQUdBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVpBOztBQWVBO0FBRUE7QUFDQTtBQTlNQTs7OztBQXBCQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUM2REE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFkQTtBQWlCQTtBQUNBO0FBM0JBOzs7O0FBdkNBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ21CQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBZkE7QUFrQkE7QUFDQTtBQTdCQTs7OztBQWxCQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDakNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBdERBOzs7OztBQWRBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDY0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFWQTs7Ozs7QUFiQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ2NBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBL0NBOzs7OztBQWJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUN5Q0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFYQTtBQWFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVhBO0FBakJBO0FBK0JBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFRQTtBQUlBO0FBQ0E7QUFDQTtBQW5EQTs7OztBQXZDQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUMrQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFQQTtBQURBOzs7O0FBWkE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ0dBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVkE7Ozs7O0FBckJBO0FBQUE7Ozs7Ozs7Ozs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7O0FDR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXpDQTs7Ozs7QUFaQTtBQUFBOzs7Ozs7Ozs7Ozs7O0FDSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7QUNPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBVEE7Ozs7QUFaQTtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUNQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7QUMyQkE7OztBQUVBO0FBQ0E7QUFFQTtBQUlBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBUUE7QUFDQTtBQUdBO0FBQ0E7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7O0FBRUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBV0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQTFIQTtBQWlMQTtBQUNBO0FBQ0E7QUFzQ0E7O0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFwUUE7Ozs7QUF6Q0E7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7O0FDOEVBOzs7QUFHQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBTEE7Ozs7O0FBL0ZBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDNEVBOzs7QUFHQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFOQTs7Ozs7QUEvRUE7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ3NGQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFNQTtBQVJBOzs7O0FBM0JBO0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQzdEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7OztBQ29DQTs7O0FBRUE7QUFDQTtBQUdBOztBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVpBOzs7O0FBN0NBO0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcFBBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7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RUssc0JBa0VPLEtBbEVQLEVBa0VjO0FBQ2YsNEJBQWdCLFNBQWhCLENBQTBCLFVBQTFCO0FBQ0gsU0FwRUk7QUFxRUwsY0FyRUssa0JBcUVHLEtBckVILEVBcUVVO0FBQ1gsNEJBQWdCLFNBQWhCLENBQTBCLE1BQTFCO0FBQ0gsU0F2RUk7QUF3RUwsaUJBeEVLLHFCQXdFTSxLQXhFTixFQXdFYTtBQUNkLDRCQUFnQixTQUFoQixDQUEwQixTQUExQjtBQUNILFNBMUVJO0FBMkVMLGNBM0VLLGtCQTJFRyxLQTNFSCxFQTJFVTtBQUNYLDRCQUFnQixTQUFoQixDQUEwQixNQUExQjtBQUNILFNBN0VJO0FBOEVMLGNBOUVLLGtCQThFRyxLQTlFSCxFQThFVTtBQUNYLDRCQUFnQixTQUFoQixDQUEwQixXQUExQjtBQUNILFNBaEZJO0FBaUZYLGNBakZXLGtCQWlGSixLQWpGSSxFQWlGRTtBQUNaLDRCQUFnQixTQUFoQixDQUEwQixNQUExQjtBQUNBO0FBbkZVO0FBekJnQixDQUFmLENBQWQ7O2tCQWdIZSxLIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIm1vZHVsZS5leHBvcnRzPe+7v1t7XHJcblx0XHRcIkNMRF9NRU5VXCIgOiBbe1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDMwMDAxXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwMzAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwM18wMVRSQU5TRkVSQUNDT1VOVFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjAzXzAxVFJBTlNGRVJBQ0NPVU5ULnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5oiR6KaB6L2s6LSmXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwMVwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuaIkeimgei9rOi0plwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjA0MDAwMVwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDQwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDRfMDFSRUdMT1NTVVJHRU5UXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDRfMDFSRUdMT1NTVVJHRU5ULnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi57Sn5oCl5oyC5aSxXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwMVwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIue0p+aApeaMguWksVwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjAxMDAwMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDEwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDFfMDJNT0RJRllJTkZPXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDFfMDJNT0RJRllJTkZPLnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi6LWE5paZ5L+u5pS5XCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwMlwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIui1hOaWmeS/ruaUuVwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjAyMDAwMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDIwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDJfMDJSRUFQUExZQ0VSVFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjAyXzAyUkVBUFBMWUNFUlQucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLooaXlip7nvZHpk7bor4HkuaZcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjAyXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi6KGl5Yqe572R6ZO26K+B5LmmXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDMwMDAyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwMzAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwM18wMkNDTERFTEFZVFJBTlNcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwM18wMkNDTERFTEFZVFJBTlMucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLlu7bml7bovazotKbmkqTplIBcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjAyXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5bu25pe26L2s6LSm5pKk6ZSAXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDQwMDAyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwNDAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwNF8wMlJFR0xPU1NGT1JDQVJEXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDRfMDJSRUdMT1NTRk9SQ0FSRC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuaMguWkseihpeWNoVwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDJcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLmjILlpLHooaXljaFcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwMTAwMDNcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjAxMDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjAxXzAzQ0hBTkdFQ0FSRFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjAxXzAzQ0hBTkdFQ0FSRC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuaIkeimgeaNouWNoVwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDNcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLmiJHopoHmjaLljaFcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNDAwMDNcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA0MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA0XzAzQ0xPU0VDQVJEXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDRfMDNDTE9TRUNBUkQucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLmiJHopoHplIDljaFcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjAzXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5oiR6KaB6ZSA5Y2hXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fVxyXG5cdFx0XSxcclxuXHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjFcIixcclxuXHRcdFwiSURfTUVOVVwiIDogXCI5OTAwMDBcIixcclxuXHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDAwMDAwXCIsXHJcblx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjAwXzAwQ09NTUVOVVwiLFxyXG5cdFx0XCJOQU1fSUNPTlwiIDogXCJCMDBfMDBDT01NRU5VLnBuZ1wiLFxyXG5cdFx0XCJOQU1fTUVOVVwiIDogXCLluLjnlKjoj5zljZVcIixcclxuXHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFwiTlVNX1NFUVwiIDogXCIwMFwiLFxyXG5cdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcIlRYVF9JTlRST1wiIDogXCLluLjnlKjoj5zljZVcIixcclxuXHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0fSwge1xyXG5cdFx0XCJDTERfTUVOVVwiIDogW3tcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjAxMDAwMVwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDEwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDFfMDFPUEVOQ0FSRFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjAxXzAxT1BFTkNBUkQucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLmiJHopoHlvIDljaFcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjAxXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5oiR6KaB5byA5Y2hXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDEwMDAyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwMTAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwMV8wMk1PRElGWUlORk9cIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwMV8wMk1PRElGWUlORk8ucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLotYTmlpnkv67mlLlcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjAyXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi6LWE5paZ5L+u5pS5XCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDEwMDAzXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwMTAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwMV8wM0NIQU5HRUNBUkRcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwMV8wM0NIQU5HRUNBUkQucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLmiJHopoHmjaLljaFcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjAzXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5oiR6KaB5o2i5Y2hXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDEwMDA0XCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwMTAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwMV8wNEFDVElWQVRFQ0FSRFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjAxXzA0QUNUSVZBVEVDQVJELnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5YCf6K6w5Y2h5r+A5rS7XCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwNFwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuWAn+iusOWNoea/gOa0u1wiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjAxMDAwNVwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDEwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDFfMDVGRUVSRUxJRUZSRUdcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwMV8wNUZFRVJFTElFRlJFRy5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuWPjOi0ueWHj+WFjeeZu+iusC/liKDpmaRcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjA1XCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5Y+M6LS55YeP5YWN55m76K6wL+WIoOmZpFwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH1cclxuXHRcdF0sXHJcblx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIxXCIsXHJcblx0XHRcIklEX01FTlVcIiA6IFwiMDEwMDAwXCIsXHJcblx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjAwMDAwMFwiLFxyXG5cdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwMV8wMENBUkRcIixcclxuXHRcdFwiTkFNX0lDT05cIiA6IFwiQjAxXzAwQ0FSRC5wbmdcIixcclxuXHRcdFwiTkFNX01FTlVcIiA6IFwi6ZO26KGM5Y2h5Lia5YqhXCIsXHJcblx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcIk5VTV9TRVFcIiA6IFwiMDFcIixcclxuXHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XCJUWFRfSU5UUk9cIiA6IFwi6ZO26KGM5Y2h5Lia5YqhXCIsXHJcblx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdH0sIHtcclxuXHRcdFwiQ0xEX01FTlVcIiA6IFt7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwMjAwMDFcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjAyMDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjAyXzAxU0lHTkVCQU5LXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDJfMDFTSUdORUJBTksucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLnlLXlrZDpk7booYznrb7nuqZcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjAxXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi55S15a2Q6ZO26KGM562+57qmXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDIwMDAyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwMjAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwMl8wMlJFQVBQTFlDRVJUXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDJfMDJSRUFQUExZQ0VSVC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuihpeWKnue9kemTtuivgeS5plwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDJcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLooaXlip7nvZHpk7bor4HkuaZcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwMjAwMDNcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjAyMDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjAyXzAzUkVQUlRLQ09ERVwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjAyXzAzUkVQUlRLQ09ERS5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuihpeaJk0vku6Tmv4DmtLvnoIFcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjAzXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi6KGl5omTS+S7pOa/gOa0u+eggVwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjAyMDAwNFwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDIwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDJfMDRMT0FERUNBU0hcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwMl8wNExPQURFQ0FTSC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIueUteWtkOeOsOmHkeWciOWtmFwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDRcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLnlLXlrZDnjrDph5HlnIjlrZhcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwMjAwMDVcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjAyMDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjAyXzA1VU5MT0FERUNBU0hcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwMl8wNVVOTE9BREVDQVNILnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi55S15a2Q546w6YeR5ZyI5o+QXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwNVwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIueUteWtkOeOsOmHkeWciOaPkFwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjAyMDAwNlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDIwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDJfMDZERUxQSE9ORVwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjAyXzA2REVMUEhPTkUucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLmiYvmnLrlj7fliKDpmaRcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjA2XCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5omL5py65Y+35Yig6ZmkXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDIwMDA3XCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwMjAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwMl8wN1VOU0lHTkVCQU5LXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDJfMDdVTlNJR05FQkFOSy5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIueUteWtkOmTtuihjOazqOmUgFwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDdcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLnlLXlrZDpk7booYzms6jplIBcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwMjAwMDhcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjAyMDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjAyXzA4VU5TSUdORUJBTktDQVJEXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDJfMDhVTlNJR05FQkFOS0NBUkQucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLms6jplIDmnKzljaHnlLXlrZDpk7booYxcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjA4XCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5rOo6ZSA5pys5Y2h55S15a2Q6ZO26KGMXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDIwMDA5XCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwMjAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwMl8wOVJFU0VUTE9HUFdEXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDJfMDlSRVNFVExPR1BXRC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIumHjee9rueUteWtkOmTtuihjOeZu+W9leWvhueggVwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDlcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLph43nva7nlLXlrZDpk7booYznmbvlvZXlr4bnoIFcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwMjAwMTBcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjAyMDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjAyXzEwQ0hBTkdFS0VZREVWXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDJfMTBDSEFOR0VLRVlERVYucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLmm7TmjaLliqjmgIHlr4bnoIHorr7lpIdcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjEwXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5pu05o2i5Yqo5oCB5a+G56CB6K6+5aSHXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDIwMDExXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwMjAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwMl8xMU9QRU5FQ0FTSFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjAyXzExT1BFTkVDQVNILnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5byA56uL55S15a2Q546w6YeRXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIxMVwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuW8gOeri+eUteWtkOeOsOmHkVwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjAyMDAxMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDIwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDJfMTJDTE9TRUVDQVNIXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDJfMTJDTE9TRUVDQVNILnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5rOo6ZSA55S15a2Q546w6YeRXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIxMlwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuazqOmUgOeUteWtkOeOsOmHkVwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH1cclxuXHRcdF0sXHJcblx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIxXCIsXHJcblx0XHRcIklEX01FTlVcIiA6IFwiMDIwMDAwXCIsXHJcblx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjAwMDAwMFwiLFxyXG5cdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwMl8wMEVCQU5LXCIsXHJcblx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwMl8wMEVCQU5LLnBuZ1wiLFxyXG5cdFx0XCJOQU1fTUVOVVwiIDogXCLnlLXlrZDpk7booYzkuJrliqFcIixcclxuXHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFwiTlVNX1NFUVwiIDogXCIwMlwiLFxyXG5cdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcIlRYVF9JTlRST1wiIDogXCLnlLXlrZDpk7booYzkuJrliqFcIixcclxuXHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0fSwge1xyXG5cdFx0XCJDTERfTUVOVVwiIDogW3tcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjAzMDAwMVwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDMwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDNfMDFUUkFOU0ZFUkFDQ09VTlRcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwM18wMVRSQU5TRkVSQUNDT1VOVC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuaIkeimgei9rOi0plwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDFcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLmiJHopoHovazotKZcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwMzAwMDJcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjAzMDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjAzXzAyQ0NMREVMQVlUUkFOU1wiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjAzXzAyQ0NMREVMQVlUUkFOUy5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuW7tuaXtui9rOi0puaSpOmUgFwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDJcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLlu7bml7bovazotKbmkqTplIBcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwMzAwMDNcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjAzMDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjAzXzAzQ09SUENBUkRcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwM18wM0NPUlBDQVJELnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5Y2V5L2N57uT566X5Y2h5Lia5YqhXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwM1wiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuWNleS9jee7k+eul+WNoeS4muWKoVwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH1cclxuXHRcdF0sXHJcblx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIxXCIsXHJcblx0XHRcIklEX01FTlVcIiA6IFwiMDMwMDAwXCIsXHJcblx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjAwMDAwMFwiLFxyXG5cdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwM18wMFRSQU5TRkVSXCIsXHJcblx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwM18wMFRSQU5TRkVSLnBuZ1wiLFxyXG5cdFx0XCJOQU1fTUVOVVwiIDogXCLovazotKbkuJrliqFcIixcclxuXHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFwiTlVNX1NFUVwiIDogXCIwM1wiLFxyXG5cdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcIlRYVF9JTlRST1wiIDogXCLovazotKbkuJrliqFcIixcclxuXHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0fSwge1xyXG5cdFx0XCJDTERfTUVOVVwiIDogW3tcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjA0MDAwMVwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDQwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDRfMDFSRUdMT1NTVVJHRU5UXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDRfMDFSRUdMT1NTVVJHRU5ULnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi57Sn5oCl5oyC5aSxXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwMVwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIue0p+aApeaMguWksVwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjA0MDAwMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDQwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDRfMDJSRUdMT1NTRk9SQ0FSRFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA0XzAyUkVHTE9TU0ZPUkNBUkQucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLmjILlpLHooaXljaFcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjAyXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5oyC5aSx6KGl5Y2hXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDQwMDAzXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwNDAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwNF8wM0NMT1NFQ0FSRFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA0XzAzQ0xPU0VDQVJELnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5oiR6KaB6ZSA5Y2hXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwM1wiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuaIkeimgemUgOWNoVwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjA0MDAwNFwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDQwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDRfMDRSRUdMT1NTQ0xPU0VDQVJEXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDRfMDRSRUdMT1NTQ0xPU0VDQVJELnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5oyC5aSx6ZSA5Y2hXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwNFwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuaMguWksemUgOWNoVwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjA0MDAwNVwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDQwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDRfMDVVUERBVEVJRFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA0XzA1VVBEQVRFSUQucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCIxNeS9jei6q+S7veivgeWNhzE45L2NXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwNVwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIjE15L2N6Lqr5Lu96K+B5Y2HMTjkvY1cIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNDAwMDZcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA0MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA0XzA2UkVTRVRQV0RcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwNF8wNlJFU0VUUFdELnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5a+G56CB6YeN572uXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwNlwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuWvhueggemHjee9rlwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjA0MDAwN1wiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDQwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDRfMDdVTkxPQ0tQV0RcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwNF8wN1VOTE9DS1BXRC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuWvhueggeino+mUgVwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDdcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLlr4bnoIHop6PplIFcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNDAwMDhcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA0MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA0XzA4TU9ESUZZUFdEXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDRfMDhNT0RJRllQV0QucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLlr4bnoIHkv67mlLlcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjA4XCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5a+G56CB6Kej6ZSBXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDQwMDA5XCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwNDAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwNF8wOVVOUkVHTE9TU1wiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA0XzA5VU5SRUdMT1NTLnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi6Kej6Zmk5oyC5aSxXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwOVwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuino+mZpOaMguWksVwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjA0MDAxMFwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDQwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDRfMTBRUEFTU05PUFdEXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDRfMTBRUEFTU05PUFdELnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5bCP6aKd6Zeq5LuY5YWN5a+G566h55CGXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIxMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuWwj+minemXquS7mOWFjeWvhueuoeeQhlwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjA0MDAxMVwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDQwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDRfMTFFQUNDT1VOVEJJTkRcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwNF8xMUVBQ0NPVU5UQklORC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuKFoeexu+aIt+e7keWumuKFoOexu+aIt+euoeeQhlwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMTFcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLihaHnsbvmiLfnu5HlrprihaDnsbvmiLfnrqHnkIZcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNDAwMTJcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA0MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA0XzEyQURKQ0FSREdSQURFXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDRfMTJBREpDQVJER1JBREUucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLlgJ/orrDljaHljYfpmY3nuqdcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjEyXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5YCf6K6w5Y2h5Y2H6ZmN57qnXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fVxyXG5cdFx0XSxcclxuXHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjFcIixcclxuXHRcdFwiSURfTUVOVVwiIDogXCIwNDAwMDBcIixcclxuXHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDAwMDAwXCIsXHJcblx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA0XzAwQUNDT1VOVFwiLFxyXG5cdFx0XCJOQU1fSUNPTlwiIDogXCJCMDRfMDBBQ0NPVU5ULnBuZ1wiLFxyXG5cdFx0XCJOQU1fTUVOVVwiIDogXCLotKbmiLfnrqHnkIZcIixcclxuXHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFwiTlVNX1NFUVwiIDogXCIwNFwiLFxyXG5cdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcIlRYVF9JTlRST1wiIDogXCLotKbmiLfnrqHnkIZcIixcclxuXHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0fSwge1xyXG5cdFx0XCJDTERfTUVOVVwiIDogW3tcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjA1MDAwMVwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDUwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDVfMDFTSUdORklOQU5DRVwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA1XzAxU0lHTkZJTkFOQ0UucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLnkIbotKLnrb7nuqZcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjAxXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi55CG6LSi562+57qmXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDUwMDAyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwNTAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwNV8wMkVWQUxSSVNLTFZMXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDVfMDJFVkFMUklTS0xWTC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuWuouaIt+mjjumZqeivhOS8sFwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDJcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLlrqLmiLfpo47pmanor4TkvLBcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNTAwMDNcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA1MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA1XzAzTElWRVRPREVBRFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA1XzAzTElWRVRPREVBRC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIua0u+acn+i9rOWumuacn1wiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDNcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLmtLvmnJ/ovazlrprmnJ9cIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNTAwMDRcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA1MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA1XzA0REVBRFRPTElWRVwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA1XzA0REVBRFRPTElWRS5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuWumuacn+i9rOa0u+acn1wiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDRcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLlrprmnJ/ovazmtLvmnJ9cIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNTAwMDVcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA1MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA1XzA1U0lHTkRKVFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA1XzA1U0lHTkRKVC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuWtmOmHkemAmuetvue6plwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDVcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLlrZjph5HpgJrnrb7nuqZcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNTAwMDZcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA1MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA1XzA2QlVZRklOQU5DRVwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA1XzA2QlVZRklOQU5DRS5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIui0reS5sOeQhui0olwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDZcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLotK3kubDnkIbotKJcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNTAwMDdcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA1MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA1XzA3V0lUSERSQVdGSU5BTkNFXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDVfMDdXSVRIRFJBV0ZJTkFOQ0UucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLnkIbotKLotY7lm55cIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjA3XCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi55CG6LSi6LWO5ZueXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDUwMDA4XCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwNTAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwNV8wOENDTERFTEVHQVRFRlwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA1XzA4Q0NMREVMRUdBVEVGLnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi55CG6LSi5aeU5omY5pKk6ZSAXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwOFwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIueQhui0ouWnlOaJmOaSpOmUgFwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjA1MDAwOVwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDUwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDVfMDlTSUdOU0hMRlwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA1XzA5U0lHTlNITEYucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLlj4zliKnkuLDnrb7nuqZcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjA5XCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5Y+M5Yip5Liw562+57qmXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDUwMDEwXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwNTAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwNV8xMFNITEZUT0xJVkVcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwNV8xMFNITEZUT0xJVkUucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLlj4zliKnkuLDovazmtLvmnJ9cIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjEwXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5Y+M5Yip5Liw6L2s5rS75pyfXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDUwMDExXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwNTAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwNV8xMVNJR05DTVpIXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDVfMTFTSUdOQ01aSC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuiBquaYjui0puetvue6plwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMTFcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLogarmmI7otKbnrb7nuqZcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNTAwMTJcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA1MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA1XzEyU0hTSFBBWVwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA1XzEyU0hTSFBBWS5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuaXtuaXtuS7mFwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMTJcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLml7bml7bku5hcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9XHJcblx0XHRdLFxyXG5cdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMVwiLFxyXG5cdFx0XCJJRF9NRU5VXCIgOiBcIjA1MDAwMFwiLFxyXG5cdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwMDAwMDBcIixcclxuXHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDVfMDBGSU5BTkNFXCIsXHJcblx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwNV8wMEZJTkFOQ0UucG5nXCIsXHJcblx0XHRcIk5BTV9NRU5VXCIgOiBcIueQhui0ouS4muWKoVwiLFxyXG5cdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XCJOVU1fU0VRXCIgOiBcIjA1XCIsXHJcblx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFwiVFhUX0lOVFJPXCIgOiBcIueQhui0ouS4muWKoVwiLFxyXG5cdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHR9LCB7XHJcblx0XHRcIkNMRF9NRU5VXCIgOiBbe1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDYwMDAxXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwNjAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwNl8wMVNJR05GVU5EXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDZfMDFTSUdORlVORC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuWfuumHkeetvue6plwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDFcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLln7rph5Hnrb7nuqZcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNjAwMDJcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA2MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA2XzAyU0lHTkZVTkRUQVwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA2XzAyU0lHTkZVTkRUQS5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuWfuumHkVRB6LSm5oi3562+57qmXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwMlwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuWfuumHkVRB6LSm5oi3562+57qmXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDYwMDAzXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwNjAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwNl8wM0JVWUZVTkRcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwNl8wM0JVWUZVTkQucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLln7rph5HotK3kubBcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjAzXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5Z+66YeR6LSt5LmwXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDYwMDA0XCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwNjAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwNl8wNFdJVEhEUkFXRlVORFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA2XzA0V0lUSERSQVdGVU5ELnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5Z+66YeR6LWO5ZueXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwNFwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuWfuumHkei1juWbnlwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjA2MDAwNVwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDYwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDZfMDVDQ0xERUxFR0FURURcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwNl8wNUNDTERFTEVHQVRFRC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuWfuumHkeWnlOaJmOaSpOmUgFwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDVcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLln7rph5Hlp5TmiZjmkqTplIBcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNjAwMDZcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA2MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA2XzA2U0lHTlBMQU5GVU5EXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDZfMDZTSUdOUExBTkZVTkQucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLln7rph5HlrprmipXnrb7nuqZcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjA2XCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5Z+66YeR5a6a5oqV562+57qmXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDYwMDA3XCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwNjAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwNl8wN1VOU0lHTlBMQU5GVU5EXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDZfMDdVTlNJR05QTEFORlVORC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuWfuumHkeWumuaKleino+e6plwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDdcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLln7rph5HlrprmipXop6PnuqZcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNjAwMDhcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA2MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA2XzA4TU9ESUZZUExBTkZVTkRcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwNl8wOE1PRElGWVBMQU5GVU5ELnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5Z+66YeR5a6a5oqV5L+u5pS5XCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwOFwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuWfuumHkeWumuaKleS/ruaUuVwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH1cclxuXHRcdF0sXHJcblx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIxXCIsXHJcblx0XHRcIklEX01FTlVcIiA6IFwiMDYwMDAwXCIsXHJcblx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjAwMDAwMFwiLFxyXG5cdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwNl8wMEZVTkRcIixcclxuXHRcdFwiTkFNX0lDT05cIiA6IFwiQjA2XzAwRlVORC5wbmdcIixcclxuXHRcdFwiTkFNX01FTlVcIiA6IFwi5Z+66YeR5Lia5YqhXCIsXHJcblx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcIk5VTV9TRVFcIiA6IFwiMDZcIixcclxuXHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XCJUWFRfSU5UUk9cIiA6IFwi5Z+66YeR5Lia5YqhXCIsXHJcblx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdH0sIHtcclxuXHRcdFwiQ0xEX01FTlVcIiA6IFt7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNzAwMDFcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA3MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA3XzAxQUNDT1VOVEJBTFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA3XzAxQUNDT1VOVEJBTC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIui0puaIt+S9meminVwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDFcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLotKbmiLfkvZnpop1cIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNzAwMDJcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA3MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA3XzAyQUNDT1VOVERFVEFJTFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA3XzAyQUNDT1VOVERFVEFJTC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuWfuui0puaIt+aYjue7hlwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDJcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLotKbmiLfmmI7nu4ZcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNzAwMDNcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA3MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA3XzAzTVlFQkFOS1wiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA3XzAzTVlFQkFOSy5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuaIkeeahOeUteWtkOmTtuihjFwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDNcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLmiJHnmoTnlLXlrZDpk7booYxcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNzAwMDRcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA3MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA3XzA0UVJZRkVFUkVMSUVGXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDdfMDRRUllGRUVSRUxJRUYucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLlj4zotLnlh4/lhY3mn6Xor6JcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjA0XCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5Y+M6LS55YeP5YWN5p+l6K+iXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDcwMDA1XCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwNzAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwN18wNVJFUFJUUkVDRUlQVFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA3XzA1UkVQUlRSRUNFSVBULnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5Zue5Y2V6KGl5omTXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwNVwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuWbnuWNleihpeaJk1wiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjA3MDAwNlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDcwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDdfMDZPTlNBTEVGSU5BTkNFXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDdfMDZPTlNBTEVGSU5BTkNFLnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5Zyo5ZSu55CG6LSiXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwNlwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuWcqOWUrueQhui0olwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjA3MDAwN1wiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDcwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDdfMDdNWUZJTkFOQ0VcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwN18wN01ZRklOQU5DRS5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuaIkeeahOeQhui0olwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDdcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLmiJHnmoTnkIbotKJcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNzAwMDhcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA3MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA3XzA4T05TQUxFRlVORFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA3XzA4T05TQUxFRlVORC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuWcqOWUruWfuumHkVwiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDhcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLlnKjllK7ln7rph5FcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwNzAwMDlcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA3MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA3XzA5TVlGVU5EXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDdfMDlNWUZVTkQucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLmiJHnmoTln7rph5FcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjA5XCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5oiR55qE5Z+66YeRXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDcwMDEwXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwNzAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwN18xMENPUlBBQ0NERVRBSUxQUlRcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwN18xMENPUlBBQ0NERVRBSUxQUlQucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLlr7nlhazotKbmiLfmmI7nu4blm57ljZXmiZPljbBcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjEwXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5a+55YWs6LSm5oi35piO57uG5Zue5Y2V5omT5Y2wXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDcwMDExXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwNzAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwN18xMU1ZRUNBU0hcIixcclxuXHRcdFx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwN18xMU1ZRUNBU0gucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLmiJHnmoTnlLXlrZDnjrDph5FcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjExXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5oiR55qE55S15a2Q546w6YeRXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDcwMDEyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwNzAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwN18xMkVBQ0NPVU5UQklORFFSWVwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA3XzEyRUFDQ09VTlRCSU5EUVJZLnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi4oWg4oWh57G75oi357uR5a6a5p+l6K+iXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIxMlwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuKFoOKFoeexu+aIt+e7keWumuafpeivolwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjA3MDAxM1wiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDcwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDdfMTNSRUdQQVNTQk9PS1wiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA3XzEzUkVHUEFTU0JPT0sucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLooaXnmbvmiphcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjEzXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi6KGl55m75oqYXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fVxyXG5cdFx0XSxcclxuXHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjFcIixcclxuXHRcdFwiSURfTUVOVVwiIDogXCIwNzAwMDBcIixcclxuXHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDAwMDAwXCIsXHJcblx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA3XzAwUVVFUllcIixcclxuXHRcdFwiTkFNX0lDT05cIiA6IFwiQjA3XzAwUVVFUlkucG5nXCIsXHJcblx0XHRcIk5BTV9NRU5VXCIgOiBcIuafpeivouS4muWKoVwiLFxyXG5cdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XCJOVU1fU0VRXCIgOiBcIjA3XCIsXHJcblx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFwiVFhUX0lOVFJPXCIgOiBcIuafpeivouS4muWKoVwiLFxyXG5cdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHR9LCB7XHJcblx0XHRcIkNMRF9NRU5VXCIgOiBbe1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMDgwMDAxXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwODAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IwOF8wMUJVWUZPUkVYQ1wiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA4XzAxQlVZRk9SRVhDLnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5oiR6KaB6LSt5rGHXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwMVwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuaIkeimgei0reaxh1wiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjA4MDAwMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDgwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDhfMDJTRUxMRk9SRVhDXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMDhfMDJTRUxMRk9SRVhDLnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5oiR6KaB57uT5rGHXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwMlwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuaIkeimgee7k+axh1wiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjA4MDAwM1wiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDgwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDhfMDNUUkFOU0ZFUkZPUkVYQ1wiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA4XzAzVFJBTlNGRVJGT1JFWEMucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLlpJbmsYfmsYflh7rmsYfmrL5cIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjAzXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5aSW5rGH5rGH5Ye65rGH5qy+XCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fVxyXG5cdFx0XSxcclxuXHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjFcIixcclxuXHRcdFwiSURfTUVOVVwiIDogXCIwODAwMDBcIixcclxuXHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDAwMDAwXCIsXHJcblx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA4XzAwRk9SRVhDXCIsXHJcblx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwOF8wMEZPUkVYQy5wbmdcIixcclxuXHRcdFwiTkFNX01FTlVcIiA6IFwi5aSW5rGH5Lia5YqhXCIsXHJcblx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcIk5VTV9TRVFcIiA6IFwiMDhcIixcclxuXHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XCJUWFRfSU5UUk9cIiA6IFwi5aSW5rGH5Lia5YqhXCIsXHJcblx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdH0sIHtcclxuXHRcdFwiQ0xEX01FTlVcIiA6IFt7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwOTAwMDFcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA5MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA5XzAxQVBMQ1JFRElUQ0FSRFwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA5XzAxQVBMQ1JFRElUQ0FSRC5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIuS/oeeUqOWNoeeUs+ivt1wiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDFcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLkv6HnlKjljaHnlLPor7dcIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIwOTAwMDJcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjA5MDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjA5XzAyQ0FTSERJVklERVwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjA5XzAyQ0FTSERJVklERS5wbmdcIixcclxuXHRcdFx0XHRcIk5BTV9NRU5VXCIgOiBcIueOsOmHkeWIhuacn1wiLFxyXG5cdFx0XHRcdFwiTlVNX09SR1wiIDogXCI5OUg5OTlcIixcclxuXHRcdFx0XHRcIk5VTV9TRVFcIiA6IFwiMDJcIixcclxuXHRcdFx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFx0XHRcIlRYVF9JTlRST1wiIDogXCLnjrDph5HliIbmnJ9cIixcclxuXHRcdFx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdFx0XHR9XHJcblx0XHRdLFxyXG5cdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMVwiLFxyXG5cdFx0XCJJRF9NRU5VXCIgOiBcIjA5MDAwMFwiLFxyXG5cdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIwMDAwMDBcIixcclxuXHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMDlfMDBDUkVESVRDQVJEXCIsXHJcblx0XHRcIk5BTV9JQ09OXCIgOiBcIkIwOV8wMENSRURJVENBUkQucG5nXCIsXHJcblx0XHRcIk5BTV9NRU5VXCIgOiBcIuS/oeeUqOWNoeS4muWKoVwiLFxyXG5cdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XCJOVU1fU0VRXCIgOiBcIjA5XCIsXHJcblx0XHRcIlRYVF9CVVNfQ1RMXCIgOiBcIjExMTAwMDAwMDBcIixcclxuXHRcdFwiVFhUX0lOVFJPXCIgOiBcIuS/oeeUqOWNoeS4muWKoVwiLFxyXG5cdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHR9LCB7XHJcblx0XHRcIkNMRF9NRU5VXCIgOiBbe1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMTAwMDAxXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIxMDAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IxMF8wMUJVWUlOU1VSQU5DRVwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjEwXzAxQlVZSU5TVVJBTkNFLnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5L+d6Zmp6LSt5LmwXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwMVwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuS/nemZqei0reS5sFwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjEwMDAwMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMTAwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMTBfMDJNWUlOU1VSQU5DRVwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjEwXzAyTVlJTlNVUkFOQ0UucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLmiJHnmoTkv53pmalcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjAyXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi5oiR55qE5L+d6ZmpXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fVxyXG5cdFx0XSxcclxuXHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjFcIixcclxuXHRcdFwiSURfTUVOVVwiIDogXCIxMDAwMDBcIixcclxuXHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMDAwMDAwXCIsXHJcblx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjEwXzAwSU5TVVJBTkNFXCIsXHJcblx0XHRcIk5BTV9JQ09OXCIgOiBcIkIxMF8wMElOU1VSQU5DRS5wbmdcIixcclxuXHRcdFwiTkFNX01FTlVcIiA6IFwi5L+d6Zmp5Lia5YqhXCIsXHJcblx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcIk5VTV9TRVFcIiA6IFwiMTBcIixcclxuXHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XCJUWFRfSU5UUk9cIiA6IFwi5L+d6Zmp5Lia5YqhXCIsXHJcblx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdH0sIHtcclxuXHRcdFwiQ0xEX01FTlVcIiA6IFt7XHJcblx0XHRcdFx0XCJDT0RfTUVOVV9MVkxcIiA6IFwiMlwiLFxyXG5cdFx0XHRcdFwiSURfTUVOVVwiIDogXCIxMTAwMDFcIixcclxuXHRcdFx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjExMDAwMFwiLFxyXG5cdFx0XHRcdFwiSU5EX01FTlVcIiA6IFwiMVwiLFxyXG5cdFx0XHRcdFwiTkFNX0FDVElPTlwiIDogXCJTVEFfQjExXzAxT1JERVJDT01DT0lOXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMTFfMDFPUkRFUkNPTUNPSU4ucG5nXCIsXHJcblx0XHRcdFx0XCJOQU1fTUVOVVwiIDogXCLnuqrlv7XluIHpooTnuqZcIixcclxuXHRcdFx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcdFx0XCJOVU1fU0VRXCIgOiBcIjAxXCIsXHJcblx0XHRcdFx0XCJUWFRfQlVTX0NUTFwiIDogXCIxMTEwMDAwMDAwXCIsXHJcblx0XHRcdFx0XCJUWFRfSU5UUk9cIiA6IFwi57qq5b+15biB6aKE57qmXCIsXHJcblx0XHRcdFx0XCJUWFRfTU9EX1ZJU1wiIDogXCIxMTEwMDAwMDAwXCJcclxuXHRcdFx0fSwge1xyXG5cdFx0XHRcdFwiQ09EX01FTlVfTFZMXCIgOiBcIjJcIixcclxuXHRcdFx0XHRcIklEX01FTlVcIiA6IFwiMTEwMDAyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VX1NVUFwiIDogXCIxMTAwMDBcIixcclxuXHRcdFx0XHRcIklORF9NRU5VXCIgOiBcIjFcIixcclxuXHRcdFx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IxMV8wMk1ZQ09NQ09JTlwiLFxyXG5cdFx0XHRcdFwiTkFNX0lDT05cIiA6IFwiQjExXzAyTVlDT01DT0lOLnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi5oiR55qE57qq5b+15biBXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwMlwiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIuaIkeeahOe6quW/teW4gVwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH0sIHtcclxuXHRcdFx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIyXCIsXHJcblx0XHRcdFx0XCJJRF9NRU5VXCIgOiBcIjExMDAwM1wiLFxyXG5cdFx0XHRcdFwiSURfTUVOVV9TVVBcIiA6IFwiMTEwMDAwXCIsXHJcblx0XHRcdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcdFx0XCJOQU1fQUNUSU9OXCIgOiBcIlNUQV9CMTFfMDNDT01DT0lOTk9USUNFXCIsXHJcblx0XHRcdFx0XCJOQU1fSUNPTlwiIDogXCJCMTFfMDNDT01DT0lOTk9USUNFLnBuZ1wiLFxyXG5cdFx0XHRcdFwiTkFNX01FTlVcIiA6IFwi57qq5b+15biB5YWs5ZGKXCIsXHJcblx0XHRcdFx0XCJOVU1fT1JHXCIgOiBcIjk5SDk5OVwiLFxyXG5cdFx0XHRcdFwiTlVNX1NFUVwiIDogXCIwM1wiLFxyXG5cdFx0XHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XHRcdFwiVFhUX0lOVFJPXCIgOiBcIue6quW/teW4geWFrOWRilwiLFxyXG5cdFx0XHRcdFwiVFhUX01PRF9WSVNcIiA6IFwiMTExMDAwMDAwMFwiXHJcblx0XHRcdH1cclxuXHRcdF0sXHJcblx0XHRcIkNPRF9NRU5VX0xWTFwiIDogXCIxXCIsXHJcblx0XHRcIklEX01FTlVcIiA6IFwiMTEwMDAwXCIsXHJcblx0XHRcIklEX01FTlVfU1VQXCIgOiBcIjAwMDAwMFwiLFxyXG5cdFx0XCJJTkRfTUVOVVwiIDogXCIxXCIsXHJcblx0XHRcIk5BTV9BQ1RJT05cIiA6IFwiU1RBX0IxMV8wMENPTUNPSU5cIixcclxuXHRcdFwiTkFNX0lDT05cIiA6IFwiQjExXzAwQ09NQ09JTi5wbmdcIixcclxuXHRcdFwiTkFNX01FTlVcIiA6IFwi57qq5b+15biB5Lia5YqhXCIsXHJcblx0XHRcIk5VTV9PUkdcIiA6IFwiOTlIOTk5XCIsXHJcblx0XHRcIk5VTV9TRVFcIiA6IFwiMTFcIixcclxuXHRcdFwiVFhUX0JVU19DVExcIiA6IFwiMTExMDAwMDAwMFwiLFxyXG5cdFx0XCJUWFRfSU5UUk9cIiA6IFwi57qq5b+15biB5Lia5YqhXCIsXHJcblx0XHRcIlRYVF9NT0RfVklTXCIgOiBcIjExMTAwMDAwMDBcIlxyXG5cdH1cclxuXVxyXG4iLCJcInVzZSBzdHJpY3RcIjtcblxucmVxdWlyZShcImNvcmUtanMvc2hpbVwiKTtcblxucmVxdWlyZShcInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZVwiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vcmVnZXhwL2VzY2FwZVwiKTtcblxuaWYgKGdsb2JhbC5fYmFiZWxQb2x5ZmlsbCkge1xuICB0aHJvdyBuZXcgRXJyb3IoXCJvbmx5IG9uZSBpbnN0YW5jZSBvZiBiYWJlbC1wb2x5ZmlsbCBpcyBhbGxvd2VkXCIpO1xufVxuZ2xvYmFsLl9iYWJlbFBvbHlmaWxsID0gdHJ1ZTtcblxudmFyIERFRklORV9QUk9QRVJUWSA9IFwiZGVmaW5lUHJvcGVydHlcIjtcbmZ1bmN0aW9uIGRlZmluZShPLCBrZXksIHZhbHVlKSB7XG4gIE9ba2V5XSB8fCBPYmplY3RbREVGSU5FX1BST1BFUlRZXShPLCBrZXksIHtcbiAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgdmFsdWU6IHZhbHVlXG4gIH0pO1xufVxuXG5kZWZpbmUoU3RyaW5nLnByb3RvdHlwZSwgXCJwYWRMZWZ0XCIsIFwiXCIucGFkU3RhcnQpO1xuZGVmaW5lKFN0cmluZy5wcm90b3R5cGUsIFwicGFkUmlnaHRcIiwgXCJcIi5wYWRFbmQpO1xuXG5cInBvcCxyZXZlcnNlLHNoaWZ0LGtleXMsdmFsdWVzLGVudHJpZXMsaW5kZXhPZixldmVyeSxzb21lLGZvckVhY2gsbWFwLGZpbHRlcixmaW5kLGZpbmRJbmRleCxpbmNsdWRlcyxqb2luLHNsaWNlLGNvbmNhdCxwdXNoLHNwbGljZSx1bnNoaWZ0LHNvcnQsbGFzdEluZGV4T2YscmVkdWNlLHJlZHVjZVJpZ2h0LGNvcHlXaXRoaW4sZmlsbFwiLnNwbGl0KFwiLFwiKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgW11ba2V5XSAmJiBkZWZpbmUoQXJyYXksIGtleSwgRnVuY3Rpb24uY2FsbC5iaW5kKFtdW2tleV0pKTtcbn0pOyIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvY29yZS5yZWdleHAuZXNjYXBlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5SZWdFeHAuZXNjYXBlOyIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICBpZih0eXBlb2YgaXQgIT0gJ2Z1bmN0aW9uJyl0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhIGZ1bmN0aW9uIScpO1xuICByZXR1cm4gaXQ7XG59OyIsInZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQsIG1zZyl7XG4gIGlmKHR5cGVvZiBpdCAhPSAnbnVtYmVyJyAmJiBjb2YoaXQpICE9ICdOdW1iZXInKXRocm93IFR5cGVFcnJvcihtc2cpO1xuICByZXR1cm4gK2l0O1xufTsiLCIvLyAyMi4xLjMuMzEgQXJyYXkucHJvdG90eXBlW0BAdW5zY29wYWJsZXNdXG52YXIgVU5TQ09QQUJMRVMgPSByZXF1aXJlKCcuL193a3MnKSgndW5zY29wYWJsZXMnKVxuICAsIEFycmF5UHJvdG8gID0gQXJyYXkucHJvdG90eXBlO1xuaWYoQXJyYXlQcm90b1tVTlNDT1BBQkxFU10gPT0gdW5kZWZpbmVkKXJlcXVpcmUoJy4vX2hpZGUnKShBcnJheVByb3RvLCBVTlNDT1BBQkxFUywge30pO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihrZXkpe1xuICBBcnJheVByb3RvW1VOU0NPUEFCTEVTXVtrZXldID0gdHJ1ZTtcbn07IiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCwgQ29uc3RydWN0b3IsIG5hbWUsIGZvcmJpZGRlbkZpZWxkKXtcbiAgaWYoIShpdCBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSB8fCAoZm9yYmlkZGVuRmllbGQgIT09IHVuZGVmaW5lZCAmJiBmb3JiaWRkZW5GaWVsZCBpbiBpdCkpe1xuICAgIHRocm93IFR5cGVFcnJvcihuYW1lICsgJzogaW5jb3JyZWN0IGludm9jYXRpb24hJyk7XG4gIH0gcmV0dXJuIGl0O1xufTsiLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICBpZighaXNPYmplY3QoaXQpKXRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGFuIG9iamVjdCEnKTtcbiAgcmV0dXJuIGl0O1xufTsiLCIvLyAyMi4xLjMuMyBBcnJheS5wcm90b3R5cGUuY29weVdpdGhpbih0YXJnZXQsIHN0YXJ0LCBlbmQgPSB0aGlzLmxlbmd0aClcbid1c2Ugc3RyaWN0JztcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpXG4gICwgdG9JbmRleCAgPSByZXF1aXJlKCcuL190by1pbmRleCcpXG4gICwgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBbXS5jb3B5V2l0aGluIHx8IGZ1bmN0aW9uIGNvcHlXaXRoaW4odGFyZ2V0Lyo9IDAqLywgc3RhcnQvKj0gMCwgZW5kID0gQGxlbmd0aCovKXtcbiAgdmFyIE8gICAgID0gdG9PYmplY3QodGhpcylcbiAgICAsIGxlbiAgID0gdG9MZW5ndGgoTy5sZW5ndGgpXG4gICAgLCB0byAgICA9IHRvSW5kZXgodGFyZ2V0LCBsZW4pXG4gICAgLCBmcm9tICA9IHRvSW5kZXgoc3RhcnQsIGxlbilcbiAgICAsIGVuZCAgID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWRcbiAgICAsIGNvdW50ID0gTWF0aC5taW4oKGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuIDogdG9JbmRleChlbmQsIGxlbikpIC0gZnJvbSwgbGVuIC0gdG8pXG4gICAgLCBpbmMgICA9IDE7XG4gIGlmKGZyb20gPCB0byAmJiB0byA8IGZyb20gKyBjb3VudCl7XG4gICAgaW5jICA9IC0xO1xuICAgIGZyb20gKz0gY291bnQgLSAxO1xuICAgIHRvICAgKz0gY291bnQgLSAxO1xuICB9XG4gIHdoaWxlKGNvdW50LS0gPiAwKXtcbiAgICBpZihmcm9tIGluIE8pT1t0b10gPSBPW2Zyb21dO1xuICAgIGVsc2UgZGVsZXRlIE9bdG9dO1xuICAgIHRvICAgKz0gaW5jO1xuICAgIGZyb20gKz0gaW5jO1xuICB9IHJldHVybiBPO1xufTsiLCIvLyAyMi4xLjMuNiBBcnJheS5wcm90b3R5cGUuZmlsbCh2YWx1ZSwgc3RhcnQgPSAwLCBlbmQgPSB0aGlzLmxlbmd0aClcbid1c2Ugc3RyaWN0JztcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpXG4gICwgdG9JbmRleCAgPSByZXF1aXJlKCcuL190by1pbmRleCcpXG4gICwgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZmlsbCh2YWx1ZSAvKiwgc3RhcnQgPSAwLCBlbmQgPSBAbGVuZ3RoICovKXtcbiAgdmFyIE8gICAgICA9IHRvT2JqZWN0KHRoaXMpXG4gICAgLCBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aClcbiAgICAsIGFMZW4gICA9IGFyZ3VtZW50cy5sZW5ndGhcbiAgICAsIGluZGV4ICA9IHRvSW5kZXgoYUxlbiA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIGxlbmd0aClcbiAgICAsIGVuZCAgICA9IGFMZW4gPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkXG4gICAgLCBlbmRQb3MgPSBlbmQgPT09IHVuZGVmaW5lZCA/IGxlbmd0aCA6IHRvSW5kZXgoZW5kLCBsZW5ndGgpO1xuICB3aGlsZShlbmRQb3MgPiBpbmRleClPW2luZGV4KytdID0gdmFsdWU7XG4gIHJldHVybiBPO1xufTsiLCJ2YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdGVyLCBJVEVSQVRPUil7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgZm9yT2YoaXRlciwgZmFsc2UsIHJlc3VsdC5wdXNoLCByZXN1bHQsIElURVJBVE9SKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4iLCIvLyBmYWxzZSAtPiBBcnJheSNpbmRleE9mXG4vLyB0cnVlICAtPiBBcnJheSNpbmNsdWRlc1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKVxuICAsIHRvTGVuZ3RoICA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpXG4gICwgdG9JbmRleCAgID0gcmVxdWlyZSgnLi9fdG8taW5kZXgnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oSVNfSU5DTFVERVMpe1xuICByZXR1cm4gZnVuY3Rpb24oJHRoaXMsIGVsLCBmcm9tSW5kZXgpe1xuICAgIHZhciBPICAgICAgPSB0b0lPYmplY3QoJHRoaXMpXG4gICAgICAsIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKVxuICAgICAgLCBpbmRleCAgPSB0b0luZGV4KGZyb21JbmRleCwgbGVuZ3RoKVxuICAgICAgLCB2YWx1ZTtcbiAgICAvLyBBcnJheSNpbmNsdWRlcyB1c2VzIFNhbWVWYWx1ZVplcm8gZXF1YWxpdHkgYWxnb3JpdGhtXG4gICAgaWYoSVNfSU5DTFVERVMgJiYgZWwgIT0gZWwpd2hpbGUobGVuZ3RoID4gaW5kZXgpe1xuICAgICAgdmFsdWUgPSBPW2luZGV4KytdO1xuICAgICAgaWYodmFsdWUgIT0gdmFsdWUpcmV0dXJuIHRydWU7XG4gICAgLy8gQXJyYXkjdG9JbmRleCBpZ25vcmVzIGhvbGVzLCBBcnJheSNpbmNsdWRlcyAtIG5vdFxuICAgIH0gZWxzZSBmb3IoO2xlbmd0aCA+IGluZGV4OyBpbmRleCsrKWlmKElTX0lOQ0xVREVTIHx8IGluZGV4IGluIE8pe1xuICAgICAgaWYoT1tpbmRleF0gPT09IGVsKXJldHVybiBJU19JTkNMVURFUyB8fCBpbmRleCB8fCAwO1xuICAgIH0gcmV0dXJuICFJU19JTkNMVURFUyAmJiAtMTtcbiAgfTtcbn07IiwiLy8gMCAtPiBBcnJheSNmb3JFYWNoXG4vLyAxIC0+IEFycmF5I21hcFxuLy8gMiAtPiBBcnJheSNmaWx0ZXJcbi8vIDMgLT4gQXJyYXkjc29tZVxuLy8gNCAtPiBBcnJheSNldmVyeVxuLy8gNSAtPiBBcnJheSNmaW5kXG4vLyA2IC0+IEFycmF5I2ZpbmRJbmRleFxudmFyIGN0eCAgICAgID0gcmVxdWlyZSgnLi9fY3R4JylcbiAgLCBJT2JqZWN0ICA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKVxuICAsIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0JylcbiAgLCB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpXG4gICwgYXNjICAgICAgPSByZXF1aXJlKCcuL19hcnJheS1zcGVjaWVzLWNyZWF0ZScpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihUWVBFLCAkY3JlYXRlKXtcbiAgdmFyIElTX01BUCAgICAgICAgPSBUWVBFID09IDFcbiAgICAsIElTX0ZJTFRFUiAgICAgPSBUWVBFID09IDJcbiAgICAsIElTX1NPTUUgICAgICAgPSBUWVBFID09IDNcbiAgICAsIElTX0VWRVJZICAgICAgPSBUWVBFID09IDRcbiAgICAsIElTX0ZJTkRfSU5ERVggPSBUWVBFID09IDZcbiAgICAsIE5PX0hPTEVTICAgICAgPSBUWVBFID09IDUgfHwgSVNfRklORF9JTkRFWFxuICAgICwgY3JlYXRlICAgICAgICA9ICRjcmVhdGUgfHwgYXNjO1xuICByZXR1cm4gZnVuY3Rpb24oJHRoaXMsIGNhbGxiYWNrZm4sIHRoYXQpe1xuICAgIHZhciBPICAgICAgPSB0b09iamVjdCgkdGhpcylcbiAgICAgICwgc2VsZiAgID0gSU9iamVjdChPKVxuICAgICAgLCBmICAgICAgPSBjdHgoY2FsbGJhY2tmbiwgdGhhdCwgMylcbiAgICAgICwgbGVuZ3RoID0gdG9MZW5ndGgoc2VsZi5sZW5ndGgpXG4gICAgICAsIGluZGV4ICA9IDBcbiAgICAgICwgcmVzdWx0ID0gSVNfTUFQID8gY3JlYXRlKCR0aGlzLCBsZW5ndGgpIDogSVNfRklMVEVSID8gY3JlYXRlKCR0aGlzLCAwKSA6IHVuZGVmaW5lZFxuICAgICAgLCB2YWwsIHJlcztcbiAgICBmb3IoO2xlbmd0aCA+IGluZGV4OyBpbmRleCsrKWlmKE5PX0hPTEVTIHx8IGluZGV4IGluIHNlbGYpe1xuICAgICAgdmFsID0gc2VsZltpbmRleF07XG4gICAgICByZXMgPSBmKHZhbCwgaW5kZXgsIE8pO1xuICAgICAgaWYoVFlQRSl7XG4gICAgICAgIGlmKElTX01BUClyZXN1bHRbaW5kZXhdID0gcmVzOyAgICAgICAgICAgIC8vIG1hcFxuICAgICAgICBlbHNlIGlmKHJlcylzd2l0Y2goVFlQRSl7XG4gICAgICAgICAgY2FzZSAzOiByZXR1cm4gdHJ1ZTsgICAgICAgICAgICAgICAgICAgIC8vIHNvbWVcbiAgICAgICAgICBjYXNlIDU6IHJldHVybiB2YWw7ICAgICAgICAgICAgICAgICAgICAgLy8gZmluZFxuICAgICAgICAgIGNhc2UgNjogcmV0dXJuIGluZGV4OyAgICAgICAgICAgICAgICAgICAvLyBmaW5kSW5kZXhcbiAgICAgICAgICBjYXNlIDI6IHJlc3VsdC5wdXNoKHZhbCk7ICAgICAgICAgICAgICAgLy8gZmlsdGVyXG4gICAgICAgIH0gZWxzZSBpZihJU19FVkVSWSlyZXR1cm4gZmFsc2U7ICAgICAgICAgIC8vIGV2ZXJ5XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBJU19GSU5EX0lOREVYID8gLTEgOiBJU19TT01FIHx8IElTX0VWRVJZID8gSVNfRVZFUlkgOiByZXN1bHQ7XG4gIH07XG59OyIsInZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJylcbiAgLCB0b09iamVjdCAgPSByZXF1aXJlKCcuL190by1vYmplY3QnKVxuICAsIElPYmplY3QgICA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKVxuICAsIHRvTGVuZ3RoICA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHRoYXQsIGNhbGxiYWNrZm4sIGFMZW4sIG1lbW8sIGlzUmlnaHQpe1xuICBhRnVuY3Rpb24oY2FsbGJhY2tmbik7XG4gIHZhciBPICAgICAgPSB0b09iamVjdCh0aGF0KVxuICAgICwgc2VsZiAgID0gSU9iamVjdChPKVxuICAgICwgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpXG4gICAgLCBpbmRleCAgPSBpc1JpZ2h0ID8gbGVuZ3RoIC0gMSA6IDBcbiAgICAsIGkgICAgICA9IGlzUmlnaHQgPyAtMSA6IDE7XG4gIGlmKGFMZW4gPCAyKWZvcig7Oyl7XG4gICAgaWYoaW5kZXggaW4gc2VsZil7XG4gICAgICBtZW1vID0gc2VsZltpbmRleF07XG4gICAgICBpbmRleCArPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIGluZGV4ICs9IGk7XG4gICAgaWYoaXNSaWdodCA/IGluZGV4IDwgMCA6IGxlbmd0aCA8PSBpbmRleCl7XG4gICAgICB0aHJvdyBUeXBlRXJyb3IoJ1JlZHVjZSBvZiBlbXB0eSBhcnJheSB3aXRoIG5vIGluaXRpYWwgdmFsdWUnKTtcbiAgICB9XG4gIH1cbiAgZm9yKDtpc1JpZ2h0ID8gaW5kZXggPj0gMCA6IGxlbmd0aCA+IGluZGV4OyBpbmRleCArPSBpKWlmKGluZGV4IGluIHNlbGYpe1xuICAgIG1lbW8gPSBjYWxsYmFja2ZuKG1lbW8sIHNlbGZbaW5kZXhdLCBpbmRleCwgTyk7XG4gIH1cbiAgcmV0dXJuIG1lbW87XG59OyIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpXG4gICwgaXNBcnJheSAgPSByZXF1aXJlKCcuL19pcy1hcnJheScpXG4gICwgU1BFQ0lFUyAgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9yaWdpbmFsKXtcbiAgdmFyIEM7XG4gIGlmKGlzQXJyYXkob3JpZ2luYWwpKXtcbiAgICBDID0gb3JpZ2luYWwuY29uc3RydWN0b3I7XG4gICAgLy8gY3Jvc3MtcmVhbG0gZmFsbGJhY2tcbiAgICBpZih0eXBlb2YgQyA9PSAnZnVuY3Rpb24nICYmIChDID09PSBBcnJheSB8fCBpc0FycmF5KEMucHJvdG90eXBlKSkpQyA9IHVuZGVmaW5lZDtcbiAgICBpZihpc09iamVjdChDKSl7XG4gICAgICBDID0gQ1tTUEVDSUVTXTtcbiAgICAgIGlmKEMgPT09IG51bGwpQyA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH0gcmV0dXJuIEMgPT09IHVuZGVmaW5lZCA/IEFycmF5IDogQztcbn07IiwiLy8gOS40LjIuMyBBcnJheVNwZWNpZXNDcmVhdGUob3JpZ2luYWxBcnJheSwgbGVuZ3RoKVxudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX2FycmF5LXNwZWNpZXMtY29uc3RydWN0b3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvcmlnaW5hbCwgbGVuZ3RoKXtcbiAgcmV0dXJuIG5ldyAoc3BlY2llc0NvbnN0cnVjdG9yKG9yaWdpbmFsKSkobGVuZ3RoKTtcbn07IiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFGdW5jdGlvbiAgPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJylcbiAgLCBpc09iamVjdCAgID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JylcbiAgLCBpbnZva2UgICAgID0gcmVxdWlyZSgnLi9faW52b2tlJylcbiAgLCBhcnJheVNsaWNlID0gW10uc2xpY2VcbiAgLCBmYWN0b3JpZXMgID0ge307XG5cbnZhciBjb25zdHJ1Y3QgPSBmdW5jdGlvbihGLCBsZW4sIGFyZ3Mpe1xuICBpZighKGxlbiBpbiBmYWN0b3JpZXMpKXtcbiAgICBmb3IodmFyIG4gPSBbXSwgaSA9IDA7IGkgPCBsZW47IGkrKyluW2ldID0gJ2FbJyArIGkgKyAnXSc7XG4gICAgZmFjdG9yaWVzW2xlbl0gPSBGdW5jdGlvbignRixhJywgJ3JldHVybiBuZXcgRignICsgbi5qb2luKCcsJykgKyAnKScpO1xuICB9IHJldHVybiBmYWN0b3JpZXNbbGVuXShGLCBhcmdzKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRnVuY3Rpb24uYmluZCB8fCBmdW5jdGlvbiBiaW5kKHRoYXQgLyosIGFyZ3MuLi4gKi8pe1xuICB2YXIgZm4gICAgICAgPSBhRnVuY3Rpb24odGhpcylcbiAgICAsIHBhcnRBcmdzID0gYXJyYXlTbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG4gIHZhciBib3VuZCA9IGZ1bmN0aW9uKC8qIGFyZ3MuLi4gKi8pe1xuICAgIHZhciBhcmdzID0gcGFydEFyZ3MuY29uY2F0KGFycmF5U2xpY2UuY2FsbChhcmd1bWVudHMpKTtcbiAgICByZXR1cm4gdGhpcyBpbnN0YW5jZW9mIGJvdW5kID8gY29uc3RydWN0KGZuLCBhcmdzLmxlbmd0aCwgYXJncykgOiBpbnZva2UoZm4sIGFyZ3MsIHRoYXQpO1xuICB9O1xuICBpZihpc09iamVjdChmbi5wcm90b3R5cGUpKWJvdW5kLnByb3RvdHlwZSA9IGZuLnByb3RvdHlwZTtcbiAgcmV0dXJuIGJvdW5kO1xufTsiLCIvLyBnZXR0aW5nIHRhZyBmcm9tIDE5LjEuMy42IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcoKVxudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpXG4gICwgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJylcbiAgLy8gRVMzIHdyb25nIGhlcmVcbiAgLCBBUkcgPSBjb2YoZnVuY3Rpb24oKXsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA9PSAnQXJndW1lbnRzJztcblxuLy8gZmFsbGJhY2sgZm9yIElFMTEgU2NyaXB0IEFjY2VzcyBEZW5pZWQgZXJyb3JcbnZhciB0cnlHZXQgPSBmdW5jdGlvbihpdCwga2V5KXtcbiAgdHJ5IHtcbiAgICByZXR1cm4gaXRba2V5XTtcbiAgfSBjYXRjaChlKXsgLyogZW1wdHkgKi8gfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHZhciBPLCBULCBCO1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/ICdVbmRlZmluZWQnIDogaXQgPT09IG51bGwgPyAnTnVsbCdcbiAgICAvLyBAQHRvU3RyaW5nVGFnIGNhc2VcbiAgICA6IHR5cGVvZiAoVCA9IHRyeUdldChPID0gT2JqZWN0KGl0KSwgVEFHKSkgPT0gJ3N0cmluZycgPyBUXG4gICAgLy8gYnVpbHRpblRhZyBjYXNlXG4gICAgOiBBUkcgPyBjb2YoTylcbiAgICAvLyBFUzMgYXJndW1lbnRzIGZhbGxiYWNrXG4gICAgOiAoQiA9IGNvZihPKSkgPT0gJ09iamVjdCcgJiYgdHlwZW9mIE8uY2FsbGVlID09ICdmdW5jdGlvbicgPyAnQXJndW1lbnRzJyA6IEI7XG59OyIsInZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoaXQpLnNsaWNlKDgsIC0xKTtcbn07IiwiJ3VzZSBzdHJpY3QnO1xudmFyIGRQICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZlxuICAsIGNyZWF0ZSAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpXG4gICwgcmVkZWZpbmVBbGwgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKVxuICAsIGN0eCAgICAgICAgID0gcmVxdWlyZSgnLi9fY3R4JylcbiAgLCBhbkluc3RhbmNlICA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJylcbiAgLCBkZWZpbmVkICAgICA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKVxuICAsIGZvck9mICAgICAgID0gcmVxdWlyZSgnLi9fZm9yLW9mJylcbiAgLCAkaXRlckRlZmluZSA9IHJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJylcbiAgLCBzdGVwICAgICAgICA9IHJlcXVpcmUoJy4vX2l0ZXItc3RlcCcpXG4gICwgc2V0U3BlY2llcyAgPSByZXF1aXJlKCcuL19zZXQtc3BlY2llcycpXG4gICwgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpXG4gICwgZmFzdEtleSAgICAgPSByZXF1aXJlKCcuL19tZXRhJykuZmFzdEtleVxuICAsIFNJWkUgICAgICAgID0gREVTQ1JJUFRPUlMgPyAnX3MnIDogJ3NpemUnO1xuXG52YXIgZ2V0RW50cnkgPSBmdW5jdGlvbih0aGF0LCBrZXkpe1xuICAvLyBmYXN0IGNhc2VcbiAgdmFyIGluZGV4ID0gZmFzdEtleShrZXkpLCBlbnRyeTtcbiAgaWYoaW5kZXggIT09ICdGJylyZXR1cm4gdGhhdC5faVtpbmRleF07XG4gIC8vIGZyb3plbiBvYmplY3QgY2FzZVxuICBmb3IoZW50cnkgPSB0aGF0Ll9mOyBlbnRyeTsgZW50cnkgPSBlbnRyeS5uKXtcbiAgICBpZihlbnRyeS5rID09IGtleSlyZXR1cm4gZW50cnk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRDb25zdHJ1Y3RvcjogZnVuY3Rpb24od3JhcHBlciwgTkFNRSwgSVNfTUFQLCBBRERFUil7XG4gICAgdmFyIEMgPSB3cmFwcGVyKGZ1bmN0aW9uKHRoYXQsIGl0ZXJhYmxlKXtcbiAgICAgIGFuSW5zdGFuY2UodGhhdCwgQywgTkFNRSwgJ19pJyk7XG4gICAgICB0aGF0Ll9pID0gY3JlYXRlKG51bGwpOyAvLyBpbmRleFxuICAgICAgdGhhdC5fZiA9IHVuZGVmaW5lZDsgICAgLy8gZmlyc3QgZW50cnlcbiAgICAgIHRoYXQuX2wgPSB1bmRlZmluZWQ7ICAgIC8vIGxhc3QgZW50cnlcbiAgICAgIHRoYXRbU0laRV0gPSAwOyAgICAgICAgIC8vIHNpemVcbiAgICAgIGlmKGl0ZXJhYmxlICE9IHVuZGVmaW5lZClmb3JPZihpdGVyYWJsZSwgSVNfTUFQLCB0aGF0W0FEREVSXSwgdGhhdCk7XG4gICAgfSk7XG4gICAgcmVkZWZpbmVBbGwoQy5wcm90b3R5cGUsIHtcbiAgICAgIC8vIDIzLjEuMy4xIE1hcC5wcm90b3R5cGUuY2xlYXIoKVxuICAgICAgLy8gMjMuMi4zLjIgU2V0LnByb3RvdHlwZS5jbGVhcigpXG4gICAgICBjbGVhcjogZnVuY3Rpb24gY2xlYXIoKXtcbiAgICAgICAgZm9yKHZhciB0aGF0ID0gdGhpcywgZGF0YSA9IHRoYXQuX2ksIGVudHJ5ID0gdGhhdC5fZjsgZW50cnk7IGVudHJ5ID0gZW50cnkubil7XG4gICAgICAgICAgZW50cnkuciA9IHRydWU7XG4gICAgICAgICAgaWYoZW50cnkucCllbnRyeS5wID0gZW50cnkucC5uID0gdW5kZWZpbmVkO1xuICAgICAgICAgIGRlbGV0ZSBkYXRhW2VudHJ5LmldO1xuICAgICAgICB9XG4gICAgICAgIHRoYXQuX2YgPSB0aGF0Ll9sID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGF0W1NJWkVdID0gMDtcbiAgICAgIH0sXG4gICAgICAvLyAyMy4xLjMuMyBNYXAucHJvdG90eXBlLmRlbGV0ZShrZXkpXG4gICAgICAvLyAyMy4yLjMuNCBTZXQucHJvdG90eXBlLmRlbGV0ZSh2YWx1ZSlcbiAgICAgICdkZWxldGUnOiBmdW5jdGlvbihrZXkpe1xuICAgICAgICB2YXIgdGhhdCAgPSB0aGlzXG4gICAgICAgICAgLCBlbnRyeSA9IGdldEVudHJ5KHRoYXQsIGtleSk7XG4gICAgICAgIGlmKGVudHJ5KXtcbiAgICAgICAgICB2YXIgbmV4dCA9IGVudHJ5Lm5cbiAgICAgICAgICAgICwgcHJldiA9IGVudHJ5LnA7XG4gICAgICAgICAgZGVsZXRlIHRoYXQuX2lbZW50cnkuaV07XG4gICAgICAgICAgZW50cnkuciA9IHRydWU7XG4gICAgICAgICAgaWYocHJldilwcmV2Lm4gPSBuZXh0O1xuICAgICAgICAgIGlmKG5leHQpbmV4dC5wID0gcHJldjtcbiAgICAgICAgICBpZih0aGF0Ll9mID09IGVudHJ5KXRoYXQuX2YgPSBuZXh0O1xuICAgICAgICAgIGlmKHRoYXQuX2wgPT0gZW50cnkpdGhhdC5fbCA9IHByZXY7XG4gICAgICAgICAgdGhhdFtTSVpFXS0tO1xuICAgICAgICB9IHJldHVybiAhIWVudHJ5O1xuICAgICAgfSxcbiAgICAgIC8vIDIzLjIuMy42IFNldC5wcm90b3R5cGUuZm9yRWFjaChjYWxsYmFja2ZuLCB0aGlzQXJnID0gdW5kZWZpbmVkKVxuICAgICAgLy8gMjMuMS4zLjUgTWFwLnByb3RvdHlwZS5mb3JFYWNoKGNhbGxiYWNrZm4sIHRoaXNBcmcgPSB1bmRlZmluZWQpXG4gICAgICBmb3JFYWNoOiBmdW5jdGlvbiBmb3JFYWNoKGNhbGxiYWNrZm4gLyosIHRoYXQgPSB1bmRlZmluZWQgKi8pe1xuICAgICAgICBhbkluc3RhbmNlKHRoaXMsIEMsICdmb3JFYWNoJyk7XG4gICAgICAgIHZhciBmID0gY3R4KGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkLCAzKVxuICAgICAgICAgICwgZW50cnk7XG4gICAgICAgIHdoaWxlKGVudHJ5ID0gZW50cnkgPyBlbnRyeS5uIDogdGhpcy5fZil7XG4gICAgICAgICAgZihlbnRyeS52LCBlbnRyeS5rLCB0aGlzKTtcbiAgICAgICAgICAvLyByZXZlcnQgdG8gdGhlIGxhc3QgZXhpc3RpbmcgZW50cnlcbiAgICAgICAgICB3aGlsZShlbnRyeSAmJiBlbnRyeS5yKWVudHJ5ID0gZW50cnkucDtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIC8vIDIzLjEuMy43IE1hcC5wcm90b3R5cGUuaGFzKGtleSlcbiAgICAgIC8vIDIzLjIuMy43IFNldC5wcm90b3R5cGUuaGFzKHZhbHVlKVxuICAgICAgaGFzOiBmdW5jdGlvbiBoYXMoa2V5KXtcbiAgICAgICAgcmV0dXJuICEhZ2V0RW50cnkodGhpcywga2V5KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBpZihERVNDUklQVE9SUylkUChDLnByb3RvdHlwZSwgJ3NpemUnLCB7XG4gICAgICBnZXQ6IGZ1bmN0aW9uKCl7XG4gICAgICAgIHJldHVybiBkZWZpbmVkKHRoaXNbU0laRV0pO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBDO1xuICB9LFxuICBkZWY6IGZ1bmN0aW9uKHRoYXQsIGtleSwgdmFsdWUpe1xuICAgIHZhciBlbnRyeSA9IGdldEVudHJ5KHRoYXQsIGtleSlcbiAgICAgICwgcHJldiwgaW5kZXg7XG4gICAgLy8gY2hhbmdlIGV4aXN0aW5nIGVudHJ5XG4gICAgaWYoZW50cnkpe1xuICAgICAgZW50cnkudiA9IHZhbHVlO1xuICAgIC8vIGNyZWF0ZSBuZXcgZW50cnlcbiAgICB9IGVsc2Uge1xuICAgICAgdGhhdC5fbCA9IGVudHJ5ID0ge1xuICAgICAgICBpOiBpbmRleCA9IGZhc3RLZXkoa2V5LCB0cnVlKSwgLy8gPC0gaW5kZXhcbiAgICAgICAgazoga2V5LCAgICAgICAgICAgICAgICAgICAgICAgIC8vIDwtIGtleVxuICAgICAgICB2OiB2YWx1ZSwgICAgICAgICAgICAgICAgICAgICAgLy8gPC0gdmFsdWVcbiAgICAgICAgcDogcHJldiA9IHRoYXQuX2wsICAgICAgICAgICAgIC8vIDwtIHByZXZpb3VzIGVudHJ5XG4gICAgICAgIG46IHVuZGVmaW5lZCwgICAgICAgICAgICAgICAgICAvLyA8LSBuZXh0IGVudHJ5XG4gICAgICAgIHI6IGZhbHNlICAgICAgICAgICAgICAgICAgICAgICAvLyA8LSByZW1vdmVkXG4gICAgICB9O1xuICAgICAgaWYoIXRoYXQuX2YpdGhhdC5fZiA9IGVudHJ5O1xuICAgICAgaWYocHJldilwcmV2Lm4gPSBlbnRyeTtcbiAgICAgIHRoYXRbU0laRV0rKztcbiAgICAgIC8vIGFkZCB0byBpbmRleFxuICAgICAgaWYoaW5kZXggIT09ICdGJyl0aGF0Ll9pW2luZGV4XSA9IGVudHJ5O1xuICAgIH0gcmV0dXJuIHRoYXQ7XG4gIH0sXG4gIGdldEVudHJ5OiBnZXRFbnRyeSxcbiAgc2V0U3Ryb25nOiBmdW5jdGlvbihDLCBOQU1FLCBJU19NQVApe1xuICAgIC8vIGFkZCAua2V5cywgLnZhbHVlcywgLmVudHJpZXMsIFtAQGl0ZXJhdG9yXVxuICAgIC8vIDIzLjEuMy40LCAyMy4xLjMuOCwgMjMuMS4zLjExLCAyMy4xLjMuMTIsIDIzLjIuMy41LCAyMy4yLjMuOCwgMjMuMi4zLjEwLCAyMy4yLjMuMTFcbiAgICAkaXRlckRlZmluZShDLCBOQU1FLCBmdW5jdGlvbihpdGVyYXRlZCwga2luZCl7XG4gICAgICB0aGlzLl90ID0gaXRlcmF0ZWQ7ICAvLyB0YXJnZXRcbiAgICAgIHRoaXMuX2sgPSBraW5kOyAgICAgIC8vIGtpbmRcbiAgICAgIHRoaXMuX2wgPSB1bmRlZmluZWQ7IC8vIHByZXZpb3VzXG4gICAgfSwgZnVuY3Rpb24oKXtcbiAgICAgIHZhciB0aGF0ICA9IHRoaXNcbiAgICAgICAgLCBraW5kICA9IHRoYXQuX2tcbiAgICAgICAgLCBlbnRyeSA9IHRoYXQuX2w7XG4gICAgICAvLyByZXZlcnQgdG8gdGhlIGxhc3QgZXhpc3RpbmcgZW50cnlcbiAgICAgIHdoaWxlKGVudHJ5ICYmIGVudHJ5LnIpZW50cnkgPSBlbnRyeS5wO1xuICAgICAgLy8gZ2V0IG5leHQgZW50cnlcbiAgICAgIGlmKCF0aGF0Ll90IHx8ICEodGhhdC5fbCA9IGVudHJ5ID0gZW50cnkgPyBlbnRyeS5uIDogdGhhdC5fdC5fZikpe1xuICAgICAgICAvLyBvciBmaW5pc2ggdGhlIGl0ZXJhdGlvblxuICAgICAgICB0aGF0Ll90ID0gdW5kZWZpbmVkO1xuICAgICAgICByZXR1cm4gc3RlcCgxKTtcbiAgICAgIH1cbiAgICAgIC8vIHJldHVybiBzdGVwIGJ5IGtpbmRcbiAgICAgIGlmKGtpbmQgPT0gJ2tleXMnICApcmV0dXJuIHN0ZXAoMCwgZW50cnkuayk7XG4gICAgICBpZihraW5kID09ICd2YWx1ZXMnKXJldHVybiBzdGVwKDAsIGVudHJ5LnYpO1xuICAgICAgcmV0dXJuIHN0ZXAoMCwgW2VudHJ5LmssIGVudHJ5LnZdKTtcbiAgICB9LCBJU19NQVAgPyAnZW50cmllcycgOiAndmFsdWVzJyAsICFJU19NQVAsIHRydWUpO1xuXG4gICAgLy8gYWRkIFtAQHNwZWNpZXNdLCAyMy4xLjIuMiwgMjMuMi4yLjJcbiAgICBzZXRTcGVjaWVzKE5BTUUpO1xuICB9XG59OyIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9EYXZpZEJydWFudC9NYXAtU2V0LnByb3RvdHlwZS50b0pTT05cbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpXG4gICwgZnJvbSAgICA9IHJlcXVpcmUoJy4vX2FycmF5LWZyb20taXRlcmFibGUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oTkFNRSl7XG4gIHJldHVybiBmdW5jdGlvbiB0b0pTT04oKXtcbiAgICBpZihjbGFzc29mKHRoaXMpICE9IE5BTUUpdGhyb3cgVHlwZUVycm9yKE5BTUUgKyBcIiN0b0pTT04gaXNuJ3QgZ2VuZXJpY1wiKTtcbiAgICByZXR1cm4gZnJvbSh0aGlzKTtcbiAgfTtcbn07IiwiJ3VzZSBzdHJpY3QnO1xudmFyIHJlZGVmaW5lQWxsICAgICAgID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJylcbiAgLCBnZXRXZWFrICAgICAgICAgICA9IHJlcXVpcmUoJy4vX21ldGEnKS5nZXRXZWFrXG4gICwgYW5PYmplY3QgICAgICAgICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKVxuICAsIGlzT2JqZWN0ICAgICAgICAgID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JylcbiAgLCBhbkluc3RhbmNlICAgICAgICA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJylcbiAgLCBmb3JPZiAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2Zvci1vZicpXG4gICwgY3JlYXRlQXJyYXlNZXRob2QgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJylcbiAgLCAkaGFzICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpXG4gICwgYXJyYXlGaW5kICAgICAgICAgPSBjcmVhdGVBcnJheU1ldGhvZCg1KVxuICAsIGFycmF5RmluZEluZGV4ICAgID0gY3JlYXRlQXJyYXlNZXRob2QoNilcbiAgLCBpZCAgICAgICAgICAgICAgICA9IDA7XG5cbi8vIGZhbGxiYWNrIGZvciB1bmNhdWdodCBmcm96ZW4ga2V5c1xudmFyIHVuY2F1Z2h0RnJvemVuU3RvcmUgPSBmdW5jdGlvbih0aGF0KXtcbiAgcmV0dXJuIHRoYXQuX2wgfHwgKHRoYXQuX2wgPSBuZXcgVW5jYXVnaHRGcm96ZW5TdG9yZSk7XG59O1xudmFyIFVuY2F1Z2h0RnJvemVuU3RvcmUgPSBmdW5jdGlvbigpe1xuICB0aGlzLmEgPSBbXTtcbn07XG52YXIgZmluZFVuY2F1Z2h0RnJvemVuID0gZnVuY3Rpb24oc3RvcmUsIGtleSl7XG4gIHJldHVybiBhcnJheUZpbmQoc3RvcmUuYSwgZnVuY3Rpb24oaXQpe1xuICAgIHJldHVybiBpdFswXSA9PT0ga2V5O1xuICB9KTtcbn07XG5VbmNhdWdodEZyb3plblN0b3JlLnByb3RvdHlwZSA9IHtcbiAgZ2V0OiBmdW5jdGlvbihrZXkpe1xuICAgIHZhciBlbnRyeSA9IGZpbmRVbmNhdWdodEZyb3plbih0aGlzLCBrZXkpO1xuICAgIGlmKGVudHJ5KXJldHVybiBlbnRyeVsxXTtcbiAgfSxcbiAgaGFzOiBmdW5jdGlvbihrZXkpe1xuICAgIHJldHVybiAhIWZpbmRVbmNhdWdodEZyb3plbih0aGlzLCBrZXkpO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uKGtleSwgdmFsdWUpe1xuICAgIHZhciBlbnRyeSA9IGZpbmRVbmNhdWdodEZyb3plbih0aGlzLCBrZXkpO1xuICAgIGlmKGVudHJ5KWVudHJ5WzFdID0gdmFsdWU7XG4gICAgZWxzZSB0aGlzLmEucHVzaChba2V5LCB2YWx1ZV0pO1xuICB9LFxuICAnZGVsZXRlJzogZnVuY3Rpb24oa2V5KXtcbiAgICB2YXIgaW5kZXggPSBhcnJheUZpbmRJbmRleCh0aGlzLmEsIGZ1bmN0aW9uKGl0KXtcbiAgICAgIHJldHVybiBpdFswXSA9PT0ga2V5O1xuICAgIH0pO1xuICAgIGlmKH5pbmRleCl0aGlzLmEuc3BsaWNlKGluZGV4LCAxKTtcbiAgICByZXR1cm4gISF+aW5kZXg7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRDb25zdHJ1Y3RvcjogZnVuY3Rpb24od3JhcHBlciwgTkFNRSwgSVNfTUFQLCBBRERFUil7XG4gICAgdmFyIEMgPSB3cmFwcGVyKGZ1bmN0aW9uKHRoYXQsIGl0ZXJhYmxlKXtcbiAgICAgIGFuSW5zdGFuY2UodGhhdCwgQywgTkFNRSwgJ19pJyk7XG4gICAgICB0aGF0Ll9pID0gaWQrKzsgICAgICAvLyBjb2xsZWN0aW9uIGlkXG4gICAgICB0aGF0Ll9sID0gdW5kZWZpbmVkOyAvLyBsZWFrIHN0b3JlIGZvciB1bmNhdWdodCBmcm96ZW4gb2JqZWN0c1xuICAgICAgaWYoaXRlcmFibGUgIT0gdW5kZWZpbmVkKWZvck9mKGl0ZXJhYmxlLCBJU19NQVAsIHRoYXRbQURERVJdLCB0aGF0KTtcbiAgICB9KTtcbiAgICByZWRlZmluZUFsbChDLnByb3RvdHlwZSwge1xuICAgICAgLy8gMjMuMy4zLjIgV2Vha01hcC5wcm90b3R5cGUuZGVsZXRlKGtleSlcbiAgICAgIC8vIDIzLjQuMy4zIFdlYWtTZXQucHJvdG90eXBlLmRlbGV0ZSh2YWx1ZSlcbiAgICAgICdkZWxldGUnOiBmdW5jdGlvbihrZXkpe1xuICAgICAgICBpZighaXNPYmplY3Qoa2V5KSlyZXR1cm4gZmFsc2U7XG4gICAgICAgIHZhciBkYXRhID0gZ2V0V2VhayhrZXkpO1xuICAgICAgICBpZihkYXRhID09PSB0cnVlKXJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHRoaXMpWydkZWxldGUnXShrZXkpO1xuICAgICAgICByZXR1cm4gZGF0YSAmJiAkaGFzKGRhdGEsIHRoaXMuX2kpICYmIGRlbGV0ZSBkYXRhW3RoaXMuX2ldO1xuICAgICAgfSxcbiAgICAgIC8vIDIzLjMuMy40IFdlYWtNYXAucHJvdG90eXBlLmhhcyhrZXkpXG4gICAgICAvLyAyMy40LjMuNCBXZWFrU2V0LnByb3RvdHlwZS5oYXModmFsdWUpXG4gICAgICBoYXM6IGZ1bmN0aW9uIGhhcyhrZXkpe1xuICAgICAgICBpZighaXNPYmplY3Qoa2V5KSlyZXR1cm4gZmFsc2U7XG4gICAgICAgIHZhciBkYXRhID0gZ2V0V2VhayhrZXkpO1xuICAgICAgICBpZihkYXRhID09PSB0cnVlKXJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHRoaXMpLmhhcyhrZXkpO1xuICAgICAgICByZXR1cm4gZGF0YSAmJiAkaGFzKGRhdGEsIHRoaXMuX2kpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBDO1xuICB9LFxuICBkZWY6IGZ1bmN0aW9uKHRoYXQsIGtleSwgdmFsdWUpe1xuICAgIHZhciBkYXRhID0gZ2V0V2Vhayhhbk9iamVjdChrZXkpLCB0cnVlKTtcbiAgICBpZihkYXRhID09PSB0cnVlKXVuY2F1Z2h0RnJvemVuU3RvcmUodGhhdCkuc2V0KGtleSwgdmFsdWUpO1xuICAgIGVsc2UgZGF0YVt0aGF0Ll9pXSA9IHZhbHVlO1xuICAgIHJldHVybiB0aGF0O1xuICB9LFxuICB1ZnN0b3JlOiB1bmNhdWdodEZyb3plblN0b3JlXG59OyIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpXG4gICwgJGV4cG9ydCAgICAgICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIHJlZGVmaW5lICAgICAgICAgID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKVxuICAsIHJlZGVmaW5lQWxsICAgICAgID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJylcbiAgLCBtZXRhICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX21ldGEnKVxuICAsIGZvck9mICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fZm9yLW9mJylcbiAgLCBhbkluc3RhbmNlICAgICAgICA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJylcbiAgLCBpc09iamVjdCAgICAgICAgICA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpXG4gICwgZmFpbHMgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19mYWlscycpXG4gICwgJGl0ZXJEZXRlY3QgICAgICAgPSByZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpXG4gICwgc2V0VG9TdHJpbmdUYWcgICAgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpXG4gICwgaW5oZXJpdElmUmVxdWlyZWQgPSByZXF1aXJlKCcuL19pbmhlcml0LWlmLXJlcXVpcmVkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oTkFNRSwgd3JhcHBlciwgbWV0aG9kcywgY29tbW9uLCBJU19NQVAsIElTX1dFQUspe1xuICB2YXIgQmFzZSAgPSBnbG9iYWxbTkFNRV1cbiAgICAsIEMgICAgID0gQmFzZVxuICAgICwgQURERVIgPSBJU19NQVAgPyAnc2V0JyA6ICdhZGQnXG4gICAgLCBwcm90byA9IEMgJiYgQy5wcm90b3R5cGVcbiAgICAsIE8gICAgID0ge307XG4gIHZhciBmaXhNZXRob2QgPSBmdW5jdGlvbihLRVkpe1xuICAgIHZhciBmbiA9IHByb3RvW0tFWV07XG4gICAgcmVkZWZpbmUocHJvdG8sIEtFWSxcbiAgICAgIEtFWSA9PSAnZGVsZXRlJyA/IGZ1bmN0aW9uKGEpe1xuICAgICAgICByZXR1cm4gSVNfV0VBSyAmJiAhaXNPYmplY3QoYSkgPyBmYWxzZSA6IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhKTtcbiAgICAgIH0gOiBLRVkgPT0gJ2hhcycgPyBmdW5jdGlvbiBoYXMoYSl7XG4gICAgICAgIHJldHVybiBJU19XRUFLICYmICFpc09iamVjdChhKSA/IGZhbHNlIDogZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEpO1xuICAgICAgfSA6IEtFWSA9PSAnZ2V0JyA/IGZ1bmN0aW9uIGdldChhKXtcbiAgICAgICAgcmV0dXJuIElTX1dFQUsgJiYgIWlzT2JqZWN0KGEpID8gdW5kZWZpbmVkIDogZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEpO1xuICAgICAgfSA6IEtFWSA9PSAnYWRkJyA/IGZ1bmN0aW9uIGFkZChhKXsgZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEpOyByZXR1cm4gdGhpczsgfVxuICAgICAgICA6IGZ1bmN0aW9uIHNldChhLCBiKXsgZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEsIGIpOyByZXR1cm4gdGhpczsgfVxuICAgICk7XG4gIH07XG4gIGlmKHR5cGVvZiBDICE9ICdmdW5jdGlvbicgfHwgIShJU19XRUFLIHx8IHByb3RvLmZvckVhY2ggJiYgIWZhaWxzKGZ1bmN0aW9uKCl7XG4gICAgbmV3IEMoKS5lbnRyaWVzKCkubmV4dCgpO1xuICB9KSkpe1xuICAgIC8vIGNyZWF0ZSBjb2xsZWN0aW9uIGNvbnN0cnVjdG9yXG4gICAgQyA9IGNvbW1vbi5nZXRDb25zdHJ1Y3Rvcih3cmFwcGVyLCBOQU1FLCBJU19NQVAsIEFEREVSKTtcbiAgICByZWRlZmluZUFsbChDLnByb3RvdHlwZSwgbWV0aG9kcyk7XG4gICAgbWV0YS5ORUVEID0gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgaW5zdGFuY2UgICAgICAgICAgICAgPSBuZXcgQ1xuICAgICAgLy8gZWFybHkgaW1wbGVtZW50YXRpb25zIG5vdCBzdXBwb3J0cyBjaGFpbmluZ1xuICAgICAgLCBIQVNOVF9DSEFJTklORyAgICAgICA9IGluc3RhbmNlW0FEREVSXShJU19XRUFLID8ge30gOiAtMCwgMSkgIT0gaW5zdGFuY2VcbiAgICAgIC8vIFY4IH4gIENocm9taXVtIDQwLSB3ZWFrLWNvbGxlY3Rpb25zIHRocm93cyBvbiBwcmltaXRpdmVzLCBidXQgc2hvdWxkIHJldHVybiBmYWxzZVxuICAgICAgLCBUSFJPV1NfT05fUFJJTUlUSVZFUyA9IGZhaWxzKGZ1bmN0aW9uKCl7IGluc3RhbmNlLmhhcygxKTsgfSlcbiAgICAgIC8vIG1vc3QgZWFybHkgaW1wbGVtZW50YXRpb25zIGRvZXNuJ3Qgc3VwcG9ydHMgaXRlcmFibGVzLCBtb3N0IG1vZGVybiAtIG5vdCBjbG9zZSBpdCBjb3JyZWN0bHlcbiAgICAgICwgQUNDRVBUX0lURVJBQkxFUyAgICAgPSAkaXRlckRldGVjdChmdW5jdGlvbihpdGVyKXsgbmV3IEMoaXRlcik7IH0pIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgICAvLyBmb3IgZWFybHkgaW1wbGVtZW50YXRpb25zIC0wIGFuZCArMCBub3QgdGhlIHNhbWVcbiAgICAgICwgQlVHR1lfWkVSTyA9ICFJU19XRUFLICYmIGZhaWxzKGZ1bmN0aW9uKCl7XG4gICAgICAgIC8vIFY4IH4gQ2hyb21pdW0gNDItIGZhaWxzIG9ubHkgd2l0aCA1KyBlbGVtZW50c1xuICAgICAgICB2YXIgJGluc3RhbmNlID0gbmV3IEMoKVxuICAgICAgICAgICwgaW5kZXggICAgID0gNTtcbiAgICAgICAgd2hpbGUoaW5kZXgtLSkkaW5zdGFuY2VbQURERVJdKGluZGV4LCBpbmRleCk7XG4gICAgICAgIHJldHVybiAhJGluc3RhbmNlLmhhcygtMCk7XG4gICAgICB9KTtcbiAgICBpZighQUNDRVBUX0lURVJBQkxFUyl7IFxuICAgICAgQyA9IHdyYXBwZXIoZnVuY3Rpb24odGFyZ2V0LCBpdGVyYWJsZSl7XG4gICAgICAgIGFuSW5zdGFuY2UodGFyZ2V0LCBDLCBOQU1FKTtcbiAgICAgICAgdmFyIHRoYXQgPSBpbmhlcml0SWZSZXF1aXJlZChuZXcgQmFzZSwgdGFyZ2V0LCBDKTtcbiAgICAgICAgaWYoaXRlcmFibGUgIT0gdW5kZWZpbmVkKWZvck9mKGl0ZXJhYmxlLCBJU19NQVAsIHRoYXRbQURERVJdLCB0aGF0KTtcbiAgICAgICAgcmV0dXJuIHRoYXQ7XG4gICAgICB9KTtcbiAgICAgIEMucHJvdG90eXBlID0gcHJvdG87XG4gICAgICBwcm90by5jb25zdHJ1Y3RvciA9IEM7XG4gICAgfVxuICAgIGlmKFRIUk9XU19PTl9QUklNSVRJVkVTIHx8IEJVR0dZX1pFUk8pe1xuICAgICAgZml4TWV0aG9kKCdkZWxldGUnKTtcbiAgICAgIGZpeE1ldGhvZCgnaGFzJyk7XG4gICAgICBJU19NQVAgJiYgZml4TWV0aG9kKCdnZXQnKTtcbiAgICB9XG4gICAgaWYoQlVHR1lfWkVSTyB8fCBIQVNOVF9DSEFJTklORylmaXhNZXRob2QoQURERVIpO1xuICAgIC8vIHdlYWsgY29sbGVjdGlvbnMgc2hvdWxkIG5vdCBjb250YWlucyAuY2xlYXIgbWV0aG9kXG4gICAgaWYoSVNfV0VBSyAmJiBwcm90by5jbGVhcilkZWxldGUgcHJvdG8uY2xlYXI7XG4gIH1cblxuICBzZXRUb1N0cmluZ1RhZyhDLCBOQU1FKTtcblxuICBPW05BTUVdID0gQztcbiAgJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAoQyAhPSBCYXNlKSwgTyk7XG5cbiAgaWYoIUlTX1dFQUspY29tbW9uLnNldFN0cm9uZyhDLCBOQU1FLCBJU19NQVApO1xuXG4gIHJldHVybiBDO1xufTsiLCJ2YXIgY29yZSA9IG1vZHVsZS5leHBvcnRzID0ge3ZlcnNpb246ICcyLjQuMCd9O1xuaWYodHlwZW9mIF9fZSA9PSAnbnVtYmVyJylfX2UgPSBjb3JlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpXG4gICwgY3JlYXRlRGVzYyAgICAgID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9iamVjdCwgaW5kZXgsIHZhbHVlKXtcbiAgaWYoaW5kZXggaW4gb2JqZWN0KSRkZWZpbmVQcm9wZXJ0eS5mKG9iamVjdCwgaW5kZXgsIGNyZWF0ZURlc2MoMCwgdmFsdWUpKTtcbiAgZWxzZSBvYmplY3RbaW5kZXhdID0gdmFsdWU7XG59OyIsIi8vIG9wdGlvbmFsIC8gc2ltcGxlIGNvbnRleHQgYmluZGluZ1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZm4sIHRoYXQsIGxlbmd0aCl7XG4gIGFGdW5jdGlvbihmbik7XG4gIGlmKHRoYXQgPT09IHVuZGVmaW5lZClyZXR1cm4gZm47XG4gIHN3aXRjaChsZW5ndGgpe1xuICAgIGNhc2UgMTogcmV0dXJuIGZ1bmN0aW9uKGEpe1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSk7XG4gICAgfTtcbiAgICBjYXNlIDI6IHJldHVybiBmdW5jdGlvbihhLCBiKXtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIpO1xuICAgIH07XG4gICAgY2FzZSAzOiByZXR1cm4gZnVuY3Rpb24oYSwgYiwgYyl7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhLCBiLCBjKTtcbiAgICB9O1xuICB9XG4gIHJldHVybiBmdW5jdGlvbigvKiAuLi5hcmdzICovKXtcbiAgICByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJndW1lbnRzKTtcbiAgfTtcbn07IiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFuT2JqZWN0ICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JylcbiAgLCB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpXG4gICwgTlVNQkVSICAgICAgPSAnbnVtYmVyJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihoaW50KXtcbiAgaWYoaGludCAhPT0gJ3N0cmluZycgJiYgaGludCAhPT0gTlVNQkVSICYmIGhpbnQgIT09ICdkZWZhdWx0Jyl0aHJvdyBUeXBlRXJyb3IoJ0luY29ycmVjdCBoaW50Jyk7XG4gIHJldHVybiB0b1ByaW1pdGl2ZShhbk9iamVjdCh0aGlzKSwgaGludCAhPSBOVU1CRVIpO1xufTsiLCIvLyA3LjIuMSBSZXF1aXJlT2JqZWN0Q29lcmNpYmxlKGFyZ3VtZW50KVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIGlmKGl0ID09IHVuZGVmaW5lZCl0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgXCIgKyBpdCk7XG4gIHJldHVybiBpdDtcbn07IiwiLy8gVGhhbmsncyBJRTggZm9yIGhpcyBmdW5ueSBkZWZpbmVQcm9wZXJ0eVxubW9kdWxlLmV4cG9ydHMgPSAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbigpe1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAnYScsIHtnZXQ6IGZ1bmN0aW9uKCl7IHJldHVybiA3OyB9fSkuYSAhPSA3O1xufSk7IiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JylcbiAgLCBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50XG4gIC8vIGluIG9sZCBJRSB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCBpcyAnb2JqZWN0J1xuICAsIGlzID0gaXNPYmplY3QoZG9jdW1lbnQpICYmIGlzT2JqZWN0KGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBpcyA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoaXQpIDoge307XG59OyIsIi8vIElFIDgtIGRvbid0IGVudW0gYnVnIGtleXNcbm1vZHVsZS5leHBvcnRzID0gKFxuICAnY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mJ1xuKS5zcGxpdCgnLCcpOyIsIi8vIGFsbCBlbnVtZXJhYmxlIG9iamVjdCBrZXlzLCBpbmNsdWRlcyBzeW1ib2xzXG52YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJylcbiAgLCBnT1BTICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKVxuICAsIHBJRSAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgdmFyIHJlc3VsdCAgICAgPSBnZXRLZXlzKGl0KVxuICAgICwgZ2V0U3ltYm9scyA9IGdPUFMuZjtcbiAgaWYoZ2V0U3ltYm9scyl7XG4gICAgdmFyIHN5bWJvbHMgPSBnZXRTeW1ib2xzKGl0KVxuICAgICAgLCBpc0VudW0gID0gcElFLmZcbiAgICAgICwgaSAgICAgICA9IDBcbiAgICAgICwga2V5O1xuICAgIHdoaWxlKHN5bWJvbHMubGVuZ3RoID4gaSlpZihpc0VudW0uY2FsbChpdCwga2V5ID0gc3ltYm9sc1tpKytdKSlyZXN1bHQucHVzaChrZXkpO1xuICB9IHJldHVybiByZXN1bHQ7XG59OyIsInZhciBnbG9iYWwgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKVxuICAsIGNvcmUgICAgICA9IHJlcXVpcmUoJy4vX2NvcmUnKVxuICAsIGhpZGUgICAgICA9IHJlcXVpcmUoJy4vX2hpZGUnKVxuICAsIHJlZGVmaW5lICA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJylcbiAgLCBjdHggICAgICAgPSByZXF1aXJlKCcuL19jdHgnKVxuICAsIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG52YXIgJGV4cG9ydCA9IGZ1bmN0aW9uKHR5cGUsIG5hbWUsIHNvdXJjZSl7XG4gIHZhciBJU19GT1JDRUQgPSB0eXBlICYgJGV4cG9ydC5GXG4gICAgLCBJU19HTE9CQUwgPSB0eXBlICYgJGV4cG9ydC5HXG4gICAgLCBJU19TVEFUSUMgPSB0eXBlICYgJGV4cG9ydC5TXG4gICAgLCBJU19QUk9UTyAgPSB0eXBlICYgJGV4cG9ydC5QXG4gICAgLCBJU19CSU5EICAgPSB0eXBlICYgJGV4cG9ydC5CXG4gICAgLCB0YXJnZXQgICAgPSBJU19HTE9CQUwgPyBnbG9iYWwgOiBJU19TVEFUSUMgPyBnbG9iYWxbbmFtZV0gfHwgKGdsb2JhbFtuYW1lXSA9IHt9KSA6IChnbG9iYWxbbmFtZV0gfHwge30pW1BST1RPVFlQRV1cbiAgICAsIGV4cG9ydHMgICA9IElTX0dMT0JBTCA/IGNvcmUgOiBjb3JlW25hbWVdIHx8IChjb3JlW25hbWVdID0ge30pXG4gICAgLCBleHBQcm90byAgPSBleHBvcnRzW1BST1RPVFlQRV0gfHwgKGV4cG9ydHNbUFJPVE9UWVBFXSA9IHt9KVxuICAgICwga2V5LCBvd24sIG91dCwgZXhwO1xuICBpZihJU19HTE9CQUwpc291cmNlID0gbmFtZTtcbiAgZm9yKGtleSBpbiBzb3VyY2Upe1xuICAgIC8vIGNvbnRhaW5zIGluIG5hdGl2ZVxuICAgIG93biA9ICFJU19GT1JDRUQgJiYgdGFyZ2V0ICYmIHRhcmdldFtrZXldICE9PSB1bmRlZmluZWQ7XG4gICAgLy8gZXhwb3J0IG5hdGl2ZSBvciBwYXNzZWRcbiAgICBvdXQgPSAob3duID8gdGFyZ2V0IDogc291cmNlKVtrZXldO1xuICAgIC8vIGJpbmQgdGltZXJzIHRvIGdsb2JhbCBmb3IgY2FsbCBmcm9tIGV4cG9ydCBjb250ZXh0XG4gICAgZXhwID0gSVNfQklORCAmJiBvd24gPyBjdHgob3V0LCBnbG9iYWwpIDogSVNfUFJPVE8gJiYgdHlwZW9mIG91dCA9PSAnZnVuY3Rpb24nID8gY3R4KEZ1bmN0aW9uLmNhbGwsIG91dCkgOiBvdXQ7XG4gICAgLy8gZXh0ZW5kIGdsb2JhbFxuICAgIGlmKHRhcmdldClyZWRlZmluZSh0YXJnZXQsIGtleSwgb3V0LCB0eXBlICYgJGV4cG9ydC5VKTtcbiAgICAvLyBleHBvcnRcbiAgICBpZihleHBvcnRzW2tleV0gIT0gb3V0KWhpZGUoZXhwb3J0cywga2V5LCBleHApO1xuICAgIGlmKElTX1BST1RPICYmIGV4cFByb3RvW2tleV0gIT0gb3V0KWV4cFByb3RvW2tleV0gPSBvdXQ7XG4gIH1cbn07XG5nbG9iYWwuY29yZSA9IGNvcmU7XG4vLyB0eXBlIGJpdG1hcFxuJGV4cG9ydC5GID0gMTsgICAvLyBmb3JjZWRcbiRleHBvcnQuRyA9IDI7ICAgLy8gZ2xvYmFsXG4kZXhwb3J0LlMgPSA0OyAgIC8vIHN0YXRpY1xuJGV4cG9ydC5QID0gODsgICAvLyBwcm90b1xuJGV4cG9ydC5CID0gMTY7ICAvLyBiaW5kXG4kZXhwb3J0LlcgPSAzMjsgIC8vIHdyYXBcbiRleHBvcnQuVSA9IDY0OyAgLy8gc2FmZVxuJGV4cG9ydC5SID0gMTI4OyAvLyByZWFsIHByb3RvIG1ldGhvZCBmb3IgYGxpYnJhcnlgIFxubW9kdWxlLmV4cG9ydHMgPSAkZXhwb3J0OyIsInZhciBNQVRDSCA9IHJlcXVpcmUoJy4vX3drcycpKCdtYXRjaCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihLRVkpe1xuICB2YXIgcmUgPSAvLi87XG4gIHRyeSB7XG4gICAgJy8uLydbS0VZXShyZSk7XG4gIH0gY2F0Y2goZSl7XG4gICAgdHJ5IHtcbiAgICAgIHJlW01BVENIXSA9IGZhbHNlO1xuICAgICAgcmV0dXJuICEnLy4vJ1tLRVldKHJlKTtcbiAgICB9IGNhdGNoKGYpeyAvKiBlbXB0eSAqLyB9XG4gIH0gcmV0dXJuIHRydWU7XG59OyIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZXhlYyl7XG4gIHRyeSB7XG4gICAgcmV0dXJuICEhZXhlYygpO1xuICB9IGNhdGNoKGUpe1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59OyIsIid1c2Ugc3RyaWN0JztcbnZhciBoaWRlICAgICA9IHJlcXVpcmUoJy4vX2hpZGUnKVxuICAsIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKVxuICAsIGZhaWxzICAgID0gcmVxdWlyZSgnLi9fZmFpbHMnKVxuICAsIGRlZmluZWQgID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpXG4gICwgd2tzICAgICAgPSByZXF1aXJlKCcuL193a3MnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihLRVksIGxlbmd0aCwgZXhlYyl7XG4gIHZhciBTWU1CT0wgICA9IHdrcyhLRVkpXG4gICAgLCBmbnMgICAgICA9IGV4ZWMoZGVmaW5lZCwgU1lNQk9MLCAnJ1tLRVldKVxuICAgICwgc3RyZm4gICAgPSBmbnNbMF1cbiAgICAsIHJ4Zm4gICAgID0gZm5zWzFdO1xuICBpZihmYWlscyhmdW5jdGlvbigpe1xuICAgIHZhciBPID0ge307XG4gICAgT1tTWU1CT0xdID0gZnVuY3Rpb24oKXsgcmV0dXJuIDc7IH07XG4gICAgcmV0dXJuICcnW0tFWV0oTykgIT0gNztcbiAgfSkpe1xuICAgIHJlZGVmaW5lKFN0cmluZy5wcm90b3R5cGUsIEtFWSwgc3RyZm4pO1xuICAgIGhpZGUoUmVnRXhwLnByb3RvdHlwZSwgU1lNQk9MLCBsZW5ndGggPT0gMlxuICAgICAgLy8gMjEuMi41LjggUmVnRXhwLnByb3RvdHlwZVtAQHJlcGxhY2VdKHN0cmluZywgcmVwbGFjZVZhbHVlKVxuICAgICAgLy8gMjEuMi41LjExIFJlZ0V4cC5wcm90b3R5cGVbQEBzcGxpdF0oc3RyaW5nLCBsaW1pdClcbiAgICAgID8gZnVuY3Rpb24oc3RyaW5nLCBhcmcpeyByZXR1cm4gcnhmbi5jYWxsKHN0cmluZywgdGhpcywgYXJnKTsgfVxuICAgICAgLy8gMjEuMi41LjYgUmVnRXhwLnByb3RvdHlwZVtAQG1hdGNoXShzdHJpbmcpXG4gICAgICAvLyAyMS4yLjUuOSBSZWdFeHAucHJvdG90eXBlW0BAc2VhcmNoXShzdHJpbmcpXG4gICAgICA6IGZ1bmN0aW9uKHN0cmluZyl7IHJldHVybiByeGZuLmNhbGwoc3RyaW5nLCB0aGlzKTsgfVxuICAgICk7XG4gIH1cbn07IiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjEuMi41LjMgZ2V0IFJlZ0V4cC5wcm90b3R5cGUuZmxhZ3NcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpe1xuICB2YXIgdGhhdCAgID0gYW5PYmplY3QodGhpcylcbiAgICAsIHJlc3VsdCA9ICcnO1xuICBpZih0aGF0Lmdsb2JhbCkgICAgIHJlc3VsdCArPSAnZyc7XG4gIGlmKHRoYXQuaWdub3JlQ2FzZSkgcmVzdWx0ICs9ICdpJztcbiAgaWYodGhhdC5tdWx0aWxpbmUpICByZXN1bHQgKz0gJ20nO1xuICBpZih0aGF0LnVuaWNvZGUpICAgIHJlc3VsdCArPSAndSc7XG4gIGlmKHRoYXQuc3RpY2t5KSAgICAgcmVzdWx0ICs9ICd5JztcbiAgcmV0dXJuIHJlc3VsdDtcbn07IiwidmFyIGN0eCAgICAgICAgID0gcmVxdWlyZSgnLi9fY3R4JylcbiAgLCBjYWxsICAgICAgICA9IHJlcXVpcmUoJy4vX2l0ZXItY2FsbCcpXG4gICwgaXNBcnJheUl0ZXIgPSByZXF1aXJlKCcuL19pcy1hcnJheS1pdGVyJylcbiAgLCBhbk9iamVjdCAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpXG4gICwgdG9MZW5ndGggICAgPSByZXF1aXJlKCcuL190by1sZW5ndGgnKVxuICAsIGdldEl0ZXJGbiAgID0gcmVxdWlyZSgnLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QnKVxuICAsIEJSRUFLICAgICAgID0ge31cbiAgLCBSRVRVUk4gICAgICA9IHt9O1xudmFyIGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0ZXJhYmxlLCBlbnRyaWVzLCBmbiwgdGhhdCwgSVRFUkFUT1Ipe1xuICB2YXIgaXRlckZuID0gSVRFUkFUT1IgPyBmdW5jdGlvbigpeyByZXR1cm4gaXRlcmFibGU7IH0gOiBnZXRJdGVyRm4oaXRlcmFibGUpXG4gICAgLCBmICAgICAgPSBjdHgoZm4sIHRoYXQsIGVudHJpZXMgPyAyIDogMSlcbiAgICAsIGluZGV4ICA9IDBcbiAgICAsIGxlbmd0aCwgc3RlcCwgaXRlcmF0b3IsIHJlc3VsdDtcbiAgaWYodHlwZW9mIGl0ZXJGbiAhPSAnZnVuY3Rpb24nKXRocm93IFR5cGVFcnJvcihpdGVyYWJsZSArICcgaXMgbm90IGl0ZXJhYmxlIScpO1xuICAvLyBmYXN0IGNhc2UgZm9yIGFycmF5cyB3aXRoIGRlZmF1bHQgaXRlcmF0b3JcbiAgaWYoaXNBcnJheUl0ZXIoaXRlckZuKSlmb3IobGVuZ3RoID0gdG9MZW5ndGgoaXRlcmFibGUubGVuZ3RoKTsgbGVuZ3RoID4gaW5kZXg7IGluZGV4Kyspe1xuICAgIHJlc3VsdCA9IGVudHJpZXMgPyBmKGFuT2JqZWN0KHN0ZXAgPSBpdGVyYWJsZVtpbmRleF0pWzBdLCBzdGVwWzFdKSA6IGYoaXRlcmFibGVbaW5kZXhdKTtcbiAgICBpZihyZXN1bHQgPT09IEJSRUFLIHx8IHJlc3VsdCA9PT0gUkVUVVJOKXJldHVybiByZXN1bHQ7XG4gIH0gZWxzZSBmb3IoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChpdGVyYWJsZSk7ICEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTsgKXtcbiAgICByZXN1bHQgPSBjYWxsKGl0ZXJhdG9yLCBmLCBzdGVwLnZhbHVlLCBlbnRyaWVzKTtcbiAgICBpZihyZXN1bHQgPT09IEJSRUFLIHx8IHJlc3VsdCA9PT0gUkVUVVJOKXJldHVybiByZXN1bHQ7XG4gIH1cbn07XG5leHBvcnRzLkJSRUFLICA9IEJSRUFLO1xuZXhwb3J0cy5SRVRVUk4gPSBSRVRVUk47IiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzg2I2lzc3VlY29tbWVudC0xMTU3NTkwMjhcbnZhciBnbG9iYWwgPSBtb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiB3aW5kb3cgIT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93Lk1hdGggPT0gTWF0aFxuICA/IHdpbmRvdyA6IHR5cGVvZiBzZWxmICE9ICd1bmRlZmluZWQnICYmIHNlbGYuTWF0aCA9PSBNYXRoID8gc2VsZiA6IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5pZih0eXBlb2YgX19nID09ICdudW1iZXInKV9fZyA9IGdsb2JhbDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZiIsInZhciBoYXNPd25Qcm9wZXJ0eSA9IHt9Lmhhc093blByb3BlcnR5O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCwga2V5KXtcbiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoaXQsIGtleSk7XG59OyIsInZhciBkUCAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJylcbiAgLCBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZnVuY3Rpb24ob2JqZWN0LCBrZXksIHZhbHVlKXtcbiAgcmV0dXJuIGRQLmYob2JqZWN0LCBrZXksIGNyZWF0ZURlc2MoMSwgdmFsdWUpKTtcbn0gOiBmdW5jdGlvbihvYmplY3QsIGtleSwgdmFsdWUpe1xuICBvYmplY3Rba2V5XSA9IHZhbHVlO1xuICByZXR1cm4gb2JqZWN0O1xufTsiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDsiLCJtb2R1bGUuZXhwb3J0cyA9ICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uKCl7XG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkocmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpKCdkaXYnKSwgJ2EnLCB7Z2V0OiBmdW5jdGlvbigpeyByZXR1cm4gNzsgfX0pLmEgIT0gNztcbn0pOyIsInZhciBpc09iamVjdCAgICAgICA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpXG4gICwgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19zZXQtcHJvdG8nKS5zZXQ7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHRoYXQsIHRhcmdldCwgQyl7XG4gIHZhciBQLCBTID0gdGFyZ2V0LmNvbnN0cnVjdG9yO1xuICBpZihTICE9PSBDICYmIHR5cGVvZiBTID09ICdmdW5jdGlvbicgJiYgKFAgPSBTLnByb3RvdHlwZSkgIT09IEMucHJvdG90eXBlICYmIGlzT2JqZWN0KFApICYmIHNldFByb3RvdHlwZU9mKXtcbiAgICBzZXRQcm90b3R5cGVPZih0aGF0LCBQKTtcbiAgfSByZXR1cm4gdGhhdDtcbn07IiwiLy8gZmFzdCBhcHBseSwgaHR0cDovL2pzcGVyZi5sbmtpdC5jb20vZmFzdC1hcHBseS81XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGZuLCBhcmdzLCB0aGF0KXtcbiAgdmFyIHVuID0gdGhhdCA9PT0gdW5kZWZpbmVkO1xuICBzd2l0Y2goYXJncy5sZW5ndGgpe1xuICAgIGNhc2UgMDogcmV0dXJuIHVuID8gZm4oKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0KTtcbiAgICBjYXNlIDE6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0pO1xuICAgIGNhc2UgMjogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSk7XG4gICAgY2FzZSAzOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKTtcbiAgICBjYXNlIDQ6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pO1xuICB9IHJldHVybiAgICAgICAgICAgICAgZm4uYXBwbHkodGhhdCwgYXJncyk7XG59OyIsIi8vIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgYW5kIG5vbi1lbnVtZXJhYmxlIG9sZCBWOCBzdHJpbmdzXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdCgneicpLnByb3BlcnR5SXNFbnVtZXJhYmxlKDApID8gT2JqZWN0IDogZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gY29mKGl0KSA9PSAnU3RyaW5nJyA/IGl0LnNwbGl0KCcnKSA6IE9iamVjdChpdCk7XG59OyIsIi8vIGNoZWNrIG9uIGRlZmF1bHQgQXJyYXkgaXRlcmF0b3JcbnZhciBJdGVyYXRvcnMgID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJylcbiAgLCBJVEVSQVRPUiAgID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJylcbiAgLCBBcnJheVByb3RvID0gQXJyYXkucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIGl0ICE9PSB1bmRlZmluZWQgJiYgKEl0ZXJhdG9ycy5BcnJheSA9PT0gaXQgfHwgQXJyYXlQcm90b1tJVEVSQVRPUl0gPT09IGl0KTtcbn07IiwiLy8gNy4yLjIgSXNBcnJheShhcmd1bWVudClcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiBpc0FycmF5KGFyZyl7XG4gIHJldHVybiBjb2YoYXJnKSA9PSAnQXJyYXknO1xufTsiLCIvLyAyMC4xLjIuMyBOdW1iZXIuaXNJbnRlZ2VyKG51bWJlcilcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpXG4gICwgZmxvb3IgICAgPSBNYXRoLmZsb29yO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0ludGVnZXIoaXQpe1xuICByZXR1cm4gIWlzT2JqZWN0KGl0KSAmJiBpc0Zpbml0ZShpdCkgJiYgZmxvb3IoaXQpID09PSBpdDtcbn07IiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiB0eXBlb2YgaXQgPT09ICdvYmplY3QnID8gaXQgIT09IG51bGwgOiB0eXBlb2YgaXQgPT09ICdmdW5jdGlvbic7XG59OyIsIi8vIDcuMi44IElzUmVnRXhwKGFyZ3VtZW50KVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JylcbiAgLCBjb2YgICAgICA9IHJlcXVpcmUoJy4vX2NvZicpXG4gICwgTUFUQ0ggICAgPSByZXF1aXJlKCcuL193a3MnKSgnbWF0Y2gnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICB2YXIgaXNSZWdFeHA7XG4gIHJldHVybiBpc09iamVjdChpdCkgJiYgKChpc1JlZ0V4cCA9IGl0W01BVENIXSkgIT09IHVuZGVmaW5lZCA/ICEhaXNSZWdFeHAgOiBjb2YoaXQpID09ICdSZWdFeHAnKTtcbn07IiwiLy8gY2FsbCBzb21ldGhpbmcgb24gaXRlcmF0b3Igc3RlcCB3aXRoIHNhZmUgY2xvc2luZyBvbiBlcnJvclxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0ZXJhdG9yLCBmbiwgdmFsdWUsIGVudHJpZXMpe1xuICB0cnkge1xuICAgIHJldHVybiBlbnRyaWVzID8gZm4oYW5PYmplY3QodmFsdWUpWzBdLCB2YWx1ZVsxXSkgOiBmbih2YWx1ZSk7XG4gIC8vIDcuNC42IEl0ZXJhdG9yQ2xvc2UoaXRlcmF0b3IsIGNvbXBsZXRpb24pXG4gIH0gY2F0Y2goZSl7XG4gICAgdmFyIHJldCA9IGl0ZXJhdG9yWydyZXR1cm4nXTtcbiAgICBpZihyZXQgIT09IHVuZGVmaW5lZClhbk9iamVjdChyZXQuY2FsbChpdGVyYXRvcikpO1xuICAgIHRocm93IGU7XG4gIH1cbn07IiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNyZWF0ZSAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpXG4gICwgZGVzY3JpcHRvciAgICAgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJylcbiAgLCBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJylcbiAgLCBJdGVyYXRvclByb3RvdHlwZSA9IHt9O1xuXG4vLyAyNS4xLjIuMS4xICVJdGVyYXRvclByb3RvdHlwZSVbQEBpdGVyYXRvcl0oKVxucmVxdWlyZSgnLi9faGlkZScpKEl0ZXJhdG9yUHJvdG90eXBlLCByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKSwgZnVuY3Rpb24oKXsgcmV0dXJuIHRoaXM7IH0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKENvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KXtcbiAgQ29uc3RydWN0b3IucHJvdG90eXBlID0gY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlLCB7bmV4dDogZGVzY3JpcHRvcigxLCBuZXh0KX0pO1xuICBzZXRUb1N0cmluZ1RhZyhDb25zdHJ1Y3RvciwgTkFNRSArICcgSXRlcmF0b3InKTtcbn07IiwiJ3VzZSBzdHJpY3QnO1xudmFyIExJQlJBUlkgICAgICAgID0gcmVxdWlyZSgnLi9fbGlicmFyeScpXG4gICwgJGV4cG9ydCAgICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIHJlZGVmaW5lICAgICAgID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKVxuICAsIGhpZGUgICAgICAgICAgID0gcmVxdWlyZSgnLi9faGlkZScpXG4gICwgaGFzICAgICAgICAgICAgPSByZXF1aXJlKCcuL19oYXMnKVxuICAsIEl0ZXJhdG9ycyAgICAgID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJylcbiAgLCAkaXRlckNyZWF0ZSAgICA9IHJlcXVpcmUoJy4vX2l0ZXItY3JlYXRlJylcbiAgLCBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJylcbiAgLCBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKVxuICAsIElURVJBVE9SICAgICAgID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJylcbiAgLCBCVUdHWSAgICAgICAgICA9ICEoW10ua2V5cyAmJiAnbmV4dCcgaW4gW10ua2V5cygpKSAvLyBTYWZhcmkgaGFzIGJ1Z2d5IGl0ZXJhdG9ycyB3L28gYG5leHRgXG4gICwgRkZfSVRFUkFUT1IgICAgPSAnQEBpdGVyYXRvcidcbiAgLCBLRVlTICAgICAgICAgICA9ICdrZXlzJ1xuICAsIFZBTFVFUyAgICAgICAgID0gJ3ZhbHVlcyc7XG5cbnZhciByZXR1cm5UaGlzID0gZnVuY3Rpb24oKXsgcmV0dXJuIHRoaXM7IH07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oQmFzZSwgTkFNRSwgQ29uc3RydWN0b3IsIG5leHQsIERFRkFVTFQsIElTX1NFVCwgRk9SQ0VEKXtcbiAgJGl0ZXJDcmVhdGUoQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpO1xuICB2YXIgZ2V0TWV0aG9kID0gZnVuY3Rpb24oa2luZCl7XG4gICAgaWYoIUJVR0dZICYmIGtpbmQgaW4gcHJvdG8pcmV0dXJuIHByb3RvW2tpbmRdO1xuICAgIHN3aXRjaChraW5kKXtcbiAgICAgIGNhc2UgS0VZUzogcmV0dXJuIGZ1bmN0aW9uIGtleXMoKXsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgICAgIGNhc2UgVkFMVUVTOiByZXR1cm4gZnVuY3Rpb24gdmFsdWVzKCl7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gICAgfSByZXR1cm4gZnVuY3Rpb24gZW50cmllcygpeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICB9O1xuICB2YXIgVEFHICAgICAgICA9IE5BTUUgKyAnIEl0ZXJhdG9yJ1xuICAgICwgREVGX1ZBTFVFUyA9IERFRkFVTFQgPT0gVkFMVUVTXG4gICAgLCBWQUxVRVNfQlVHID0gZmFsc2VcbiAgICAsIHByb3RvICAgICAgPSBCYXNlLnByb3RvdHlwZVxuICAgICwgJG5hdGl2ZSAgICA9IHByb3RvW0lURVJBVE9SXSB8fCBwcm90b1tGRl9JVEVSQVRPUl0gfHwgREVGQVVMVCAmJiBwcm90b1tERUZBVUxUXVxuICAgICwgJGRlZmF1bHQgICA9ICRuYXRpdmUgfHwgZ2V0TWV0aG9kKERFRkFVTFQpXG4gICAgLCAkZW50cmllcyAgID0gREVGQVVMVCA/ICFERUZfVkFMVUVTID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoJ2VudHJpZXMnKSA6IHVuZGVmaW5lZFxuICAgICwgJGFueU5hdGl2ZSA9IE5BTUUgPT0gJ0FycmF5JyA/IHByb3RvLmVudHJpZXMgfHwgJG5hdGl2ZSA6ICRuYXRpdmVcbiAgICAsIG1ldGhvZHMsIGtleSwgSXRlcmF0b3JQcm90b3R5cGU7XG4gIC8vIEZpeCBuYXRpdmVcbiAgaWYoJGFueU5hdGl2ZSl7XG4gICAgSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90b3R5cGVPZigkYW55TmF0aXZlLmNhbGwobmV3IEJhc2UpKTtcbiAgICBpZihJdGVyYXRvclByb3RvdHlwZSAhPT0gT2JqZWN0LnByb3RvdHlwZSl7XG4gICAgICAvLyBTZXQgQEB0b1N0cmluZ1RhZyB0byBuYXRpdmUgaXRlcmF0b3JzXG4gICAgICBzZXRUb1N0cmluZ1RhZyhJdGVyYXRvclByb3RvdHlwZSwgVEFHLCB0cnVlKTtcbiAgICAgIC8vIGZpeCBmb3Igc29tZSBvbGQgZW5naW5lc1xuICAgICAgaWYoIUxJQlJBUlkgJiYgIWhhcyhJdGVyYXRvclByb3RvdHlwZSwgSVRFUkFUT1IpKWhpZGUoSXRlcmF0b3JQcm90b3R5cGUsIElURVJBVE9SLCByZXR1cm5UaGlzKTtcbiAgICB9XG4gIH1cbiAgLy8gZml4IEFycmF5I3t2YWx1ZXMsIEBAaXRlcmF0b3J9Lm5hbWUgaW4gVjggLyBGRlxuICBpZihERUZfVkFMVUVTICYmICRuYXRpdmUgJiYgJG5hdGl2ZS5uYW1lICE9PSBWQUxVRVMpe1xuICAgIFZBTFVFU19CVUcgPSB0cnVlO1xuICAgICRkZWZhdWx0ID0gZnVuY3Rpb24gdmFsdWVzKCl7IHJldHVybiAkbmF0aXZlLmNhbGwodGhpcyk7IH07XG4gIH1cbiAgLy8gRGVmaW5lIGl0ZXJhdG9yXG4gIGlmKCghTElCUkFSWSB8fCBGT1JDRUQpICYmIChCVUdHWSB8fCBWQUxVRVNfQlVHIHx8ICFwcm90b1tJVEVSQVRPUl0pKXtcbiAgICBoaWRlKHByb3RvLCBJVEVSQVRPUiwgJGRlZmF1bHQpO1xuICB9XG4gIC8vIFBsdWcgZm9yIGxpYnJhcnlcbiAgSXRlcmF0b3JzW05BTUVdID0gJGRlZmF1bHQ7XG4gIEl0ZXJhdG9yc1tUQUddICA9IHJldHVyblRoaXM7XG4gIGlmKERFRkFVTFQpe1xuICAgIG1ldGhvZHMgPSB7XG4gICAgICB2YWx1ZXM6ICBERUZfVkFMVUVTID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoVkFMVUVTKSxcbiAgICAgIGtleXM6ICAgIElTX1NFVCAgICAgPyAkZGVmYXVsdCA6IGdldE1ldGhvZChLRVlTKSxcbiAgICAgIGVudHJpZXM6ICRlbnRyaWVzXG4gICAgfTtcbiAgICBpZihGT1JDRUQpZm9yKGtleSBpbiBtZXRob2RzKXtcbiAgICAgIGlmKCEoa2V5IGluIHByb3RvKSlyZWRlZmluZShwcm90bywga2V5LCBtZXRob2RzW2tleV0pO1xuICAgIH0gZWxzZSAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChCVUdHWSB8fCBWQUxVRVNfQlVHKSwgTkFNRSwgbWV0aG9kcyk7XG4gIH1cbiAgcmV0dXJuIG1ldGhvZHM7XG59OyIsInZhciBJVEVSQVRPUiAgICAgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKVxuICAsIFNBRkVfQ0xPU0lORyA9IGZhbHNlO1xuXG50cnkge1xuICB2YXIgcml0ZXIgPSBbN11bSVRFUkFUT1JdKCk7XG4gIHJpdGVyWydyZXR1cm4nXSA9IGZ1bmN0aW9uKCl7IFNBRkVfQ0xPU0lORyA9IHRydWU7IH07XG4gIEFycmF5LmZyb20ocml0ZXIsIGZ1bmN0aW9uKCl7IHRocm93IDI7IH0pO1xufSBjYXRjaChlKXsgLyogZW1wdHkgKi8gfVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGV4ZWMsIHNraXBDbG9zaW5nKXtcbiAgaWYoIXNraXBDbG9zaW5nICYmICFTQUZFX0NMT1NJTkcpcmV0dXJuIGZhbHNlO1xuICB2YXIgc2FmZSA9IGZhbHNlO1xuICB0cnkge1xuICAgIHZhciBhcnIgID0gWzddXG4gICAgICAsIGl0ZXIgPSBhcnJbSVRFUkFUT1JdKCk7XG4gICAgaXRlci5uZXh0ID0gZnVuY3Rpb24oKXsgcmV0dXJuIHtkb25lOiBzYWZlID0gdHJ1ZX07IH07XG4gICAgYXJyW0lURVJBVE9SXSA9IGZ1bmN0aW9uKCl7IHJldHVybiBpdGVyOyB9O1xuICAgIGV4ZWMoYXJyKTtcbiAgfSBjYXRjaChlKXsgLyogZW1wdHkgKi8gfVxuICByZXR1cm4gc2FmZTtcbn07IiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihkb25lLCB2YWx1ZSl7XG4gIHJldHVybiB7dmFsdWU6IHZhbHVlLCBkb25lOiAhIWRvbmV9O1xufTsiLCJtb2R1bGUuZXhwb3J0cyA9IHt9OyIsInZhciBnZXRLZXlzICAgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpXG4gICwgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvYmplY3QsIGVsKXtcbiAgdmFyIE8gICAgICA9IHRvSU9iamVjdChvYmplY3QpXG4gICAgLCBrZXlzICAgPSBnZXRLZXlzKE8pXG4gICAgLCBsZW5ndGggPSBrZXlzLmxlbmd0aFxuICAgICwgaW5kZXggID0gMFxuICAgICwga2V5O1xuICB3aGlsZShsZW5ndGggPiBpbmRleClpZihPW2tleSA9IGtleXNbaW5kZXgrK11dID09PSBlbClyZXR1cm4ga2V5O1xufTsiLCJtb2R1bGUuZXhwb3J0cyA9IGZhbHNlOyIsIi8vIDIwLjIuMi4xNCBNYXRoLmV4cG0xKHgpXG52YXIgJGV4cG0xID0gTWF0aC5leHBtMTtcbm1vZHVsZS5leHBvcnRzID0gKCEkZXhwbTFcbiAgLy8gT2xkIEZGIGJ1Z1xuICB8fCAkZXhwbTEoMTApID4gMjIwMjUuNDY1Nzk0ODA2NzE5IHx8ICRleHBtMSgxMCkgPCAyMjAyNS40NjU3OTQ4MDY3MTY1MTY4XG4gIC8vIFRvciBCcm93c2VyIGJ1Z1xuICB8fCAkZXhwbTEoLTJlLTE3KSAhPSAtMmUtMTdcbikgPyBmdW5jdGlvbiBleHBtMSh4KXtcbiAgcmV0dXJuICh4ID0gK3gpID09IDAgPyB4IDogeCA+IC0xZS02ICYmIHggPCAxZS02ID8geCArIHggKiB4IC8gMiA6IE1hdGguZXhwKHgpIC0gMTtcbn0gOiAkZXhwbTE7IiwiLy8gMjAuMi4yLjIwIE1hdGgubG9nMXAoeClcbm1vZHVsZS5leHBvcnRzID0gTWF0aC5sb2cxcCB8fCBmdW5jdGlvbiBsb2cxcCh4KXtcbiAgcmV0dXJuICh4ID0gK3gpID4gLTFlLTggJiYgeCA8IDFlLTggPyB4IC0geCAqIHggLyAyIDogTWF0aC5sb2coMSArIHgpO1xufTsiLCIvLyAyMC4yLjIuMjggTWF0aC5zaWduKHgpXG5tb2R1bGUuZXhwb3J0cyA9IE1hdGguc2lnbiB8fCBmdW5jdGlvbiBzaWduKHgpe1xuICByZXR1cm4gKHggPSAreCkgPT0gMCB8fCB4ICE9IHggPyB4IDogeCA8IDAgPyAtMSA6IDE7XG59OyIsInZhciBNRVRBICAgICA9IHJlcXVpcmUoJy4vX3VpZCcpKCdtZXRhJylcbiAgLCBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpXG4gICwgaGFzICAgICAgPSByZXF1aXJlKCcuL19oYXMnKVxuICAsIHNldERlc2MgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZlxuICAsIGlkICAgICAgID0gMDtcbnZhciBpc0V4dGVuc2libGUgPSBPYmplY3QuaXNFeHRlbnNpYmxlIHx8IGZ1bmN0aW9uKCl7XG4gIHJldHVybiB0cnVlO1xufTtcbnZhciBGUkVFWkUgPSAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbigpe1xuICByZXR1cm4gaXNFeHRlbnNpYmxlKE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh7fSkpO1xufSk7XG52YXIgc2V0TWV0YSA9IGZ1bmN0aW9uKGl0KXtcbiAgc2V0RGVzYyhpdCwgTUVUQSwge3ZhbHVlOiB7XG4gICAgaTogJ08nICsgKytpZCwgLy8gb2JqZWN0IElEXG4gICAgdzoge30gICAgICAgICAgLy8gd2VhayBjb2xsZWN0aW9ucyBJRHNcbiAgfX0pO1xufTtcbnZhciBmYXN0S2V5ID0gZnVuY3Rpb24oaXQsIGNyZWF0ZSl7XG4gIC8vIHJldHVybiBwcmltaXRpdmUgd2l0aCBwcmVmaXhcbiAgaWYoIWlzT2JqZWN0KGl0KSlyZXR1cm4gdHlwZW9mIGl0ID09ICdzeW1ib2wnID8gaXQgOiAodHlwZW9mIGl0ID09ICdzdHJpbmcnID8gJ1MnIDogJ1AnKSArIGl0O1xuICBpZighaGFzKGl0LCBNRVRBKSl7XG4gICAgLy8gY2FuJ3Qgc2V0IG1ldGFkYXRhIHRvIHVuY2F1Z2h0IGZyb3plbiBvYmplY3RcbiAgICBpZighaXNFeHRlbnNpYmxlKGl0KSlyZXR1cm4gJ0YnO1xuICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhXG4gICAgaWYoIWNyZWF0ZSlyZXR1cm4gJ0UnO1xuICAgIC8vIGFkZCBtaXNzaW5nIG1ldGFkYXRhXG4gICAgc2V0TWV0YShpdCk7XG4gIC8vIHJldHVybiBvYmplY3QgSURcbiAgfSByZXR1cm4gaXRbTUVUQV0uaTtcbn07XG52YXIgZ2V0V2VhayA9IGZ1bmN0aW9uKGl0LCBjcmVhdGUpe1xuICBpZighaGFzKGl0LCBNRVRBKSl7XG4gICAgLy8gY2FuJ3Qgc2V0IG1ldGFkYXRhIHRvIHVuY2F1Z2h0IGZyb3plbiBvYmplY3RcbiAgICBpZighaXNFeHRlbnNpYmxlKGl0KSlyZXR1cm4gdHJ1ZTtcbiAgICAvLyBub3QgbmVjZXNzYXJ5IHRvIGFkZCBtZXRhZGF0YVxuICAgIGlmKCFjcmVhdGUpcmV0dXJuIGZhbHNlO1xuICAgIC8vIGFkZCBtaXNzaW5nIG1ldGFkYXRhXG4gICAgc2V0TWV0YShpdCk7XG4gIC8vIHJldHVybiBoYXNoIHdlYWsgY29sbGVjdGlvbnMgSURzXG4gIH0gcmV0dXJuIGl0W01FVEFdLnc7XG59O1xuLy8gYWRkIG1ldGFkYXRhIG9uIGZyZWV6ZS1mYW1pbHkgbWV0aG9kcyBjYWxsaW5nXG52YXIgb25GcmVlemUgPSBmdW5jdGlvbihpdCl7XG4gIGlmKEZSRUVaRSAmJiBtZXRhLk5FRUQgJiYgaXNFeHRlbnNpYmxlKGl0KSAmJiAhaGFzKGl0LCBNRVRBKSlzZXRNZXRhKGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcbnZhciBtZXRhID0gbW9kdWxlLmV4cG9ydHMgPSB7XG4gIEtFWTogICAgICBNRVRBLFxuICBORUVEOiAgICAgZmFsc2UsXG4gIGZhc3RLZXk6ICBmYXN0S2V5LFxuICBnZXRXZWFrOiAgZ2V0V2VhayxcbiAgb25GcmVlemU6IG9uRnJlZXplXG59OyIsInZhciBNYXAgICAgID0gcmVxdWlyZSgnLi9lczYubWFwJylcbiAgLCAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBzaGFyZWQgID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ21ldGFkYXRhJylcbiAgLCBzdG9yZSAgID0gc2hhcmVkLnN0b3JlIHx8IChzaGFyZWQuc3RvcmUgPSBuZXcgKHJlcXVpcmUoJy4vZXM2LndlYWstbWFwJykpKTtcblxudmFyIGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAgPSBmdW5jdGlvbih0YXJnZXQsIHRhcmdldEtleSwgY3JlYXRlKXtcbiAgdmFyIHRhcmdldE1ldGFkYXRhID0gc3RvcmUuZ2V0KHRhcmdldCk7XG4gIGlmKCF0YXJnZXRNZXRhZGF0YSl7XG4gICAgaWYoIWNyZWF0ZSlyZXR1cm4gdW5kZWZpbmVkO1xuICAgIHN0b3JlLnNldCh0YXJnZXQsIHRhcmdldE1ldGFkYXRhID0gbmV3IE1hcCk7XG4gIH1cbiAgdmFyIGtleU1ldGFkYXRhID0gdGFyZ2V0TWV0YWRhdGEuZ2V0KHRhcmdldEtleSk7XG4gIGlmKCFrZXlNZXRhZGF0YSl7XG4gICAgaWYoIWNyZWF0ZSlyZXR1cm4gdW5kZWZpbmVkO1xuICAgIHRhcmdldE1ldGFkYXRhLnNldCh0YXJnZXRLZXksIGtleU1ldGFkYXRhID0gbmV3IE1hcCk7XG4gIH0gcmV0dXJuIGtleU1ldGFkYXRhO1xufTtcbnZhciBvcmRpbmFyeUhhc093bk1ldGFkYXRhID0gZnVuY3Rpb24oTWV0YWRhdGFLZXksIE8sIFApe1xuICB2YXIgbWV0YWRhdGFNYXAgPSBnZXRPckNyZWF0ZU1ldGFkYXRhTWFwKE8sIFAsIGZhbHNlKTtcbiAgcmV0dXJuIG1ldGFkYXRhTWFwID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IG1ldGFkYXRhTWFwLmhhcyhNZXRhZGF0YUtleSk7XG59O1xudmFyIG9yZGluYXJ5R2V0T3duTWV0YWRhdGEgPSBmdW5jdGlvbihNZXRhZGF0YUtleSwgTywgUCl7XG4gIHZhciBtZXRhZGF0YU1hcCA9IGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAoTywgUCwgZmFsc2UpO1xuICByZXR1cm4gbWV0YWRhdGFNYXAgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IG1ldGFkYXRhTWFwLmdldChNZXRhZGF0YUtleSk7XG59O1xudmFyIG9yZGluYXJ5RGVmaW5lT3duTWV0YWRhdGEgPSBmdW5jdGlvbihNZXRhZGF0YUtleSwgTWV0YWRhdGFWYWx1ZSwgTywgUCl7XG4gIGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAoTywgUCwgdHJ1ZSkuc2V0KE1ldGFkYXRhS2V5LCBNZXRhZGF0YVZhbHVlKTtcbn07XG52YXIgb3JkaW5hcnlPd25NZXRhZGF0YUtleXMgPSBmdW5jdGlvbih0YXJnZXQsIHRhcmdldEtleSl7XG4gIHZhciBtZXRhZGF0YU1hcCA9IGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAodGFyZ2V0LCB0YXJnZXRLZXksIGZhbHNlKVxuICAgICwga2V5cyAgICAgICAgPSBbXTtcbiAgaWYobWV0YWRhdGFNYXApbWV0YWRhdGFNYXAuZm9yRWFjaChmdW5jdGlvbihfLCBrZXkpeyBrZXlzLnB1c2goa2V5KTsgfSk7XG4gIHJldHVybiBrZXlzO1xufTtcbnZhciB0b01ldGFLZXkgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBpdCA9PT0gdW5kZWZpbmVkIHx8IHR5cGVvZiBpdCA9PSAnc3ltYm9sJyA/IGl0IDogU3RyaW5nKGl0KTtcbn07XG52YXIgZXhwID0gZnVuY3Rpb24oTyl7XG4gICRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIE8pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHN0b3JlOiBzdG9yZSxcbiAgbWFwOiBnZXRPckNyZWF0ZU1ldGFkYXRhTWFwLFxuICBoYXM6IG9yZGluYXJ5SGFzT3duTWV0YWRhdGEsXG4gIGdldDogb3JkaW5hcnlHZXRPd25NZXRhZGF0YSxcbiAgc2V0OiBvcmRpbmFyeURlZmluZU93bk1ldGFkYXRhLFxuICBrZXlzOiBvcmRpbmFyeU93bk1ldGFkYXRhS2V5cyxcbiAga2V5OiB0b01ldGFLZXksXG4gIGV4cDogZXhwXG59OyIsInZhciBnbG9iYWwgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKVxuICAsIG1hY3JvdGFzayA9IHJlcXVpcmUoJy4vX3Rhc2snKS5zZXRcbiAgLCBPYnNlcnZlciAgPSBnbG9iYWwuTXV0YXRpb25PYnNlcnZlciB8fCBnbG9iYWwuV2ViS2l0TXV0YXRpb25PYnNlcnZlclxuICAsIHByb2Nlc3MgICA9IGdsb2JhbC5wcm9jZXNzXG4gICwgUHJvbWlzZSAgID0gZ2xvYmFsLlByb21pc2VcbiAgLCBpc05vZGUgICAgPSByZXF1aXJlKCcuL19jb2YnKShwcm9jZXNzKSA9PSAncHJvY2Vzcyc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKXtcbiAgdmFyIGhlYWQsIGxhc3QsIG5vdGlmeTtcblxuICB2YXIgZmx1c2ggPSBmdW5jdGlvbigpe1xuICAgIHZhciBwYXJlbnQsIGZuO1xuICAgIGlmKGlzTm9kZSAmJiAocGFyZW50ID0gcHJvY2Vzcy5kb21haW4pKXBhcmVudC5leGl0KCk7XG4gICAgd2hpbGUoaGVhZCl7XG4gICAgICBmbiAgID0gaGVhZC5mbjtcbiAgICAgIGhlYWQgPSBoZWFkLm5leHQ7XG4gICAgICB0cnkge1xuICAgICAgICBmbigpO1xuICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgaWYoaGVhZClub3RpZnkoKTtcbiAgICAgICAgZWxzZSBsYXN0ID0gdW5kZWZpbmVkO1xuICAgICAgICB0aHJvdyBlO1xuICAgICAgfVxuICAgIH0gbGFzdCA9IHVuZGVmaW5lZDtcbiAgICBpZihwYXJlbnQpcGFyZW50LmVudGVyKCk7XG4gIH07XG5cbiAgLy8gTm9kZS5qc1xuICBpZihpc05vZGUpe1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uKCl7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGZsdXNoKTtcbiAgICB9O1xuICAvLyBicm93c2VycyB3aXRoIE11dGF0aW9uT2JzZXJ2ZXJcbiAgfSBlbHNlIGlmKE9ic2VydmVyKXtcbiAgICB2YXIgdG9nZ2xlID0gdHJ1ZVxuICAgICAgLCBub2RlICAgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnJyk7XG4gICAgbmV3IE9ic2VydmVyKGZsdXNoKS5vYnNlcnZlKG5vZGUsIHtjaGFyYWN0ZXJEYXRhOiB0cnVlfSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24oKXtcbiAgICAgIG5vZGUuZGF0YSA9IHRvZ2dsZSA9ICF0b2dnbGU7XG4gICAgfTtcbiAgLy8gZW52aXJvbm1lbnRzIHdpdGggbWF5YmUgbm9uLWNvbXBsZXRlbHkgY29ycmVjdCwgYnV0IGV4aXN0ZW50IFByb21pc2VcbiAgfSBlbHNlIGlmKFByb21pc2UgJiYgUHJvbWlzZS5yZXNvbHZlKXtcbiAgICB2YXIgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSgpO1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uKCl7XG4gICAgICBwcm9taXNlLnRoZW4oZmx1c2gpO1xuICAgIH07XG4gIC8vIGZvciBvdGhlciBlbnZpcm9ubWVudHMgLSBtYWNyb3Rhc2sgYmFzZWQgb246XG4gIC8vIC0gc2V0SW1tZWRpYXRlXG4gIC8vIC0gTWVzc2FnZUNoYW5uZWxcbiAgLy8gLSB3aW5kb3cucG9zdE1lc3NhZ1xuICAvLyAtIG9ucmVhZHlzdGF0ZWNoYW5nZVxuICAvLyAtIHNldFRpbWVvdXRcbiAgfSBlbHNlIHtcbiAgICBub3RpZnkgPSBmdW5jdGlvbigpe1xuICAgICAgLy8gc3RyYW5nZSBJRSArIHdlYnBhY2sgZGV2IHNlcnZlciBidWcgLSB1c2UgLmNhbGwoZ2xvYmFsKVxuICAgICAgbWFjcm90YXNrLmNhbGwoZ2xvYmFsLCBmbHVzaCk7XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbihmbil7XG4gICAgdmFyIHRhc2sgPSB7Zm46IGZuLCBuZXh0OiB1bmRlZmluZWR9O1xuICAgIGlmKGxhc3QpbGFzdC5uZXh0ID0gdGFzaztcbiAgICBpZighaGVhZCl7XG4gICAgICBoZWFkID0gdGFzaztcbiAgICAgIG5vdGlmeSgpO1xuICAgIH0gbGFzdCA9IHRhc2s7XG4gIH07XG59OyIsIid1c2Ugc3RyaWN0Jztcbi8vIDE5LjEuMi4xIE9iamVjdC5hc3NpZ24odGFyZ2V0LCBzb3VyY2UsIC4uLilcbnZhciBnZXRLZXlzICA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJylcbiAgLCBnT1BTICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJylcbiAgLCBwSUUgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKVxuICAsIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0JylcbiAgLCBJT2JqZWN0ICA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKVxuICAsICRhc3NpZ24gID0gT2JqZWN0LmFzc2lnbjtcblxuLy8gc2hvdWxkIHdvcmsgd2l0aCBzeW1ib2xzIGFuZCBzaG91bGQgaGF2ZSBkZXRlcm1pbmlzdGljIHByb3BlcnR5IG9yZGVyIChWOCBidWcpXG5tb2R1bGUuZXhwb3J0cyA9ICEkYXNzaWduIHx8IHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24oKXtcbiAgdmFyIEEgPSB7fVxuICAgICwgQiA9IHt9XG4gICAgLCBTID0gU3ltYm9sKClcbiAgICAsIEsgPSAnYWJjZGVmZ2hpamtsbW5vcHFyc3QnO1xuICBBW1NdID0gNztcbiAgSy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbihrKXsgQltrXSA9IGs7IH0pO1xuICByZXR1cm4gJGFzc2lnbih7fSwgQSlbU10gIT0gNyB8fCBPYmplY3Qua2V5cygkYXNzaWduKHt9LCBCKSkuam9pbignJykgIT0gSztcbn0pID8gZnVuY3Rpb24gYXNzaWduKHRhcmdldCwgc291cmNlKXsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICB2YXIgVCAgICAgPSB0b09iamVjdCh0YXJnZXQpXG4gICAgLCBhTGVuICA9IGFyZ3VtZW50cy5sZW5ndGhcbiAgICAsIGluZGV4ID0gMVxuICAgICwgZ2V0U3ltYm9scyA9IGdPUFMuZlxuICAgICwgaXNFbnVtICAgICA9IHBJRS5mO1xuICB3aGlsZShhTGVuID4gaW5kZXgpe1xuICAgIHZhciBTICAgICAgPSBJT2JqZWN0KGFyZ3VtZW50c1tpbmRleCsrXSlcbiAgICAgICwga2V5cyAgID0gZ2V0U3ltYm9scyA/IGdldEtleXMoUykuY29uY2F0KGdldFN5bWJvbHMoUykpIDogZ2V0S2V5cyhTKVxuICAgICAgLCBsZW5ndGggPSBrZXlzLmxlbmd0aFxuICAgICAgLCBqICAgICAgPSAwXG4gICAgICAsIGtleTtcbiAgICB3aGlsZShsZW5ndGggPiBqKWlmKGlzRW51bS5jYWxsKFMsIGtleSA9IGtleXNbaisrXSkpVFtrZXldID0gU1trZXldO1xuICB9IHJldHVybiBUO1xufSA6ICRhc3NpZ247IiwiLy8gMTkuMS4yLjIgLyAxNS4yLjMuNSBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG52YXIgYW5PYmplY3QgICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKVxuICAsIGRQcyAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwcycpXG4gICwgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJylcbiAgLCBJRV9QUk9UTyAgICA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKVxuICAsIEVtcHR5ICAgICAgID0gZnVuY3Rpb24oKXsgLyogZW1wdHkgKi8gfVxuICAsIFBST1RPVFlQRSAgID0gJ3Byb3RvdHlwZSc7XG5cbi8vIENyZWF0ZSBvYmplY3Qgd2l0aCBmYWtlIGBudWxsYCBwcm90b3R5cGU6IHVzZSBpZnJhbWUgT2JqZWN0IHdpdGggY2xlYXJlZCBwcm90b3R5cGVcbnZhciBjcmVhdGVEaWN0ID0gZnVuY3Rpb24oKXtcbiAgLy8gVGhyYXNoLCB3YXN0ZSBhbmQgc29kb215OiBJRSBHQyBidWdcbiAgdmFyIGlmcmFtZSA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnaWZyYW1lJylcbiAgICAsIGkgICAgICA9IGVudW1CdWdLZXlzLmxlbmd0aFxuICAgICwgbHQgICAgID0gJzwnXG4gICAgLCBndCAgICAgPSAnPidcbiAgICAsIGlmcmFtZURvY3VtZW50O1xuICBpZnJhbWUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgcmVxdWlyZSgnLi9faHRtbCcpLmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZS5zcmMgPSAnamF2YXNjcmlwdDonOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXNjcmlwdC11cmxcbiAgLy8gY3JlYXRlRGljdCA9IGlmcmFtZS5jb250ZW50V2luZG93Lk9iamVjdDtcbiAgLy8gaHRtbC5yZW1vdmVDaGlsZChpZnJhbWUpO1xuICBpZnJhbWVEb2N1bWVudCA9IGlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50O1xuICBpZnJhbWVEb2N1bWVudC5vcGVuKCk7XG4gIGlmcmFtZURvY3VtZW50LndyaXRlKGx0ICsgJ3NjcmlwdCcgKyBndCArICdkb2N1bWVudC5GPU9iamVjdCcgKyBsdCArICcvc2NyaXB0JyArIGd0KTtcbiAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTtcbiAgY3JlYXRlRGljdCA9IGlmcmFtZURvY3VtZW50LkY7XG4gIHdoaWxlKGktLSlkZWxldGUgY3JlYXRlRGljdFtQUk9UT1RZUEVdW2VudW1CdWdLZXlzW2ldXTtcbiAgcmV0dXJuIGNyZWF0ZURpY3QoKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmNyZWF0ZSB8fCBmdW5jdGlvbiBjcmVhdGUoTywgUHJvcGVydGllcyl7XG4gIHZhciByZXN1bHQ7XG4gIGlmKE8gIT09IG51bGwpe1xuICAgIEVtcHR5W1BST1RPVFlQRV0gPSBhbk9iamVjdChPKTtcbiAgICByZXN1bHQgPSBuZXcgRW1wdHk7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IG51bGw7XG4gICAgLy8gYWRkIFwiX19wcm90b19fXCIgZm9yIE9iamVjdC5nZXRQcm90b3R5cGVPZiBwb2x5ZmlsbFxuICAgIHJlc3VsdFtJRV9QUk9UT10gPSBPO1xuICB9IGVsc2UgcmVzdWx0ID0gY3JlYXRlRGljdCgpO1xuICByZXR1cm4gUHJvcGVydGllcyA9PT0gdW5kZWZpbmVkID8gcmVzdWx0IDogZFBzKHJlc3VsdCwgUHJvcGVydGllcyk7XG59O1xuIiwidmFyIGFuT2JqZWN0ICAgICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JylcbiAgLCBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJylcbiAgLCB0b1ByaW1pdGl2ZSAgICA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpXG4gICwgZFAgICAgICAgICAgICAgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG5cbmV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKXtcbiAgYW5PYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgYW5PYmplY3QoQXR0cmlidXRlcyk7XG4gIGlmKElFOF9ET01fREVGSU5FKXRyeSB7XG4gICAgcmV0dXJuIGRQKE8sIFAsIEF0dHJpYnV0ZXMpO1xuICB9IGNhdGNoKGUpeyAvKiBlbXB0eSAqLyB9XG4gIGlmKCdnZXQnIGluIEF0dHJpYnV0ZXMgfHwgJ3NldCcgaW4gQXR0cmlidXRlcyl0aHJvdyBUeXBlRXJyb3IoJ0FjY2Vzc29ycyBub3Qgc3VwcG9ydGVkIScpO1xuICBpZigndmFsdWUnIGluIEF0dHJpYnV0ZXMpT1tQXSA9IEF0dHJpYnV0ZXMudmFsdWU7XG4gIHJldHVybiBPO1xufTsiLCJ2YXIgZFAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKVxuICAsIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JylcbiAgLCBnZXRLZXlzICA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzIDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKXtcbiAgYW5PYmplY3QoTyk7XG4gIHZhciBrZXlzICAgPSBnZXRLZXlzKFByb3BlcnRpZXMpXG4gICAgLCBsZW5ndGggPSBrZXlzLmxlbmd0aFxuICAgICwgaSA9IDBcbiAgICAsIFA7XG4gIHdoaWxlKGxlbmd0aCA+IGkpZFAuZihPLCBQID0ga2V5c1tpKytdLCBQcm9wZXJ0aWVzW1BdKTtcbiAgcmV0dXJuIE87XG59OyIsIi8vIEZvcmNlZCByZXBsYWNlbWVudCBwcm90b3R5cGUgYWNjZXNzb3JzIG1ldGhvZHNcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fbGlicmFyeScpfHwgIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24oKXtcbiAgdmFyIEsgPSBNYXRoLnJhbmRvbSgpO1xuICAvLyBJbiBGRiB0aHJvd3Mgb25seSBkZWZpbmUgbWV0aG9kc1xuICBfX2RlZmluZVNldHRlcl9fLmNhbGwobnVsbCwgSywgZnVuY3Rpb24oKXsgLyogZW1wdHkgKi99KTtcbiAgZGVsZXRlIHJlcXVpcmUoJy4vX2dsb2JhbCcpW0tdO1xufSk7IiwidmFyIHBJRSAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpXG4gICwgY3JlYXRlRGVzYyAgICAgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJylcbiAgLCB0b0lPYmplY3QgICAgICA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKVxuICAsIHRvUHJpbWl0aXZlICAgID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJylcbiAgLCBoYXMgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpXG4gICwgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpXG4gICwgZ09QRCAgICAgICAgICAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZ09QRCA6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKXtcbiAgTyA9IHRvSU9iamVjdChPKTtcbiAgUCA9IHRvUHJpbWl0aXZlKFAsIHRydWUpO1xuICBpZihJRThfRE9NX0RFRklORSl0cnkge1xuICAgIHJldHVybiBnT1BEKE8sIFApO1xuICB9IGNhdGNoKGUpeyAvKiBlbXB0eSAqLyB9XG4gIGlmKGhhcyhPLCBQKSlyZXR1cm4gY3JlYXRlRGVzYyghcElFLmYuY2FsbChPLCBQKSwgT1tQXSk7XG59OyIsIi8vIGZhbGxiYWNrIGZvciBJRTExIGJ1Z2d5IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHdpdGggaWZyYW1lIGFuZCB3aW5kb3dcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0JylcbiAgLCBnT1BOICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmZcbiAgLCB0b1N0cmluZyAgPSB7fS50b1N0cmluZztcblxudmFyIHdpbmRvd05hbWVzID0gdHlwZW9mIHdpbmRvdyA9PSAnb2JqZWN0JyAmJiB3aW5kb3cgJiYgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXNcbiAgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh3aW5kb3cpIDogW107XG5cbnZhciBnZXRXaW5kb3dOYW1lcyA9IGZ1bmN0aW9uKGl0KXtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZ09QTihpdCk7XG4gIH0gY2F0Y2goZSl7XG4gICAgcmV0dXJuIHdpbmRvd05hbWVzLnNsaWNlKCk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzLmYgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKGl0KXtcbiAgcmV0dXJuIHdpbmRvd05hbWVzICYmIHRvU3RyaW5nLmNhbGwoaXQpID09ICdbb2JqZWN0IFdpbmRvd10nID8gZ2V0V2luZG93TmFtZXMoaXQpIDogZ09QTih0b0lPYmplY3QoaXQpKTtcbn07XG4iLCIvLyAxOS4xLjIuNyAvIDE1LjIuMy40IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pXG52YXIgJGtleXMgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzLWludGVybmFsJylcbiAgLCBoaWRkZW5LZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpLmNvbmNhdCgnbGVuZ3RoJywgJ3Byb3RvdHlwZScpO1xuXG5leHBvcnRzLmYgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB8fCBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKE8pe1xuICByZXR1cm4gJGtleXMoTywgaGlkZGVuS2V5cyk7XG59OyIsImV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7IiwiLy8gMTkuMS4yLjkgLyAxNS4yLjMuMiBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciBoYXMgICAgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpXG4gICwgdG9PYmplY3QgICAgPSByZXF1aXJlKCcuL190by1vYmplY3QnKVxuICAsIElFX1BST1RPICAgID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpXG4gICwgT2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5nZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbihPKXtcbiAgTyA9IHRvT2JqZWN0KE8pO1xuICBpZihoYXMoTywgSUVfUFJPVE8pKXJldHVybiBPW0lFX1BST1RPXTtcbiAgaWYodHlwZW9mIE8uY29uc3RydWN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBPIGluc3RhbmNlb2YgTy5jb25zdHJ1Y3Rvcil7XG4gICAgcmV0dXJuIE8uY29uc3RydWN0b3IucHJvdG90eXBlO1xuICB9IHJldHVybiBPIGluc3RhbmNlb2YgT2JqZWN0ID8gT2JqZWN0UHJvdG8gOiBudWxsO1xufTsiLCJ2YXIgaGFzICAgICAgICAgID0gcmVxdWlyZSgnLi9faGFzJylcbiAgLCB0b0lPYmplY3QgICAgPSByZXF1aXJlKCcuL190by1pb2JqZWN0JylcbiAgLCBhcnJheUluZGV4T2YgPSByZXF1aXJlKCcuL19hcnJheS1pbmNsdWRlcycpKGZhbHNlKVxuICAsIElFX1BST1RPICAgICA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvYmplY3QsIG5hbWVzKXtcbiAgdmFyIE8gICAgICA9IHRvSU9iamVjdChvYmplY3QpXG4gICAgLCBpICAgICAgPSAwXG4gICAgLCByZXN1bHQgPSBbXVxuICAgICwga2V5O1xuICBmb3Ioa2V5IGluIE8paWYoa2V5ICE9IElFX1BST1RPKWhhcyhPLCBrZXkpICYmIHJlc3VsdC5wdXNoKGtleSk7XG4gIC8vIERvbid0IGVudW0gYnVnICYgaGlkZGVuIGtleXNcbiAgd2hpbGUobmFtZXMubGVuZ3RoID4gaSlpZihoYXMoTywga2V5ID0gbmFtZXNbaSsrXSkpe1xuICAgIH5hcnJheUluZGV4T2YocmVzdWx0LCBrZXkpIHx8IHJlc3VsdC5wdXNoKGtleSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07IiwiLy8gMTkuMS4yLjE0IC8gMTUuMi4zLjE0IE9iamVjdC5rZXlzKE8pXG52YXIgJGtleXMgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cy1pbnRlcm5hbCcpXG4gICwgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24ga2V5cyhPKXtcbiAgcmV0dXJuICRrZXlzKE8sIGVudW1CdWdLZXlzKTtcbn07IiwiZXhwb3J0cy5mID0ge30ucHJvcGVydHlJc0VudW1lcmFibGU7IiwiLy8gbW9zdCBPYmplY3QgbWV0aG9kcyBieSBFUzYgc2hvdWxkIGFjY2VwdCBwcmltaXRpdmVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgY29yZSAgICA9IHJlcXVpcmUoJy4vX2NvcmUnKVxuICAsIGZhaWxzICAgPSByZXF1aXJlKCcuL19mYWlscycpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihLRVksIGV4ZWMpe1xuICB2YXIgZm4gID0gKGNvcmUuT2JqZWN0IHx8IHt9KVtLRVldIHx8IE9iamVjdFtLRVldXG4gICAgLCBleHAgPSB7fTtcbiAgZXhwW0tFWV0gPSBleGVjKGZuKTtcbiAgJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiBmYWlscyhmdW5jdGlvbigpeyBmbigxKTsgfSksICdPYmplY3QnLCBleHApO1xufTsiLCJ2YXIgZ2V0S2V5cyAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKVxuICAsIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKVxuICAsIGlzRW51bSAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKS5mO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpc0VudHJpZXMpe1xuICByZXR1cm4gZnVuY3Rpb24oaXQpe1xuICAgIHZhciBPICAgICAgPSB0b0lPYmplY3QoaXQpXG4gICAgICAsIGtleXMgICA9IGdldEtleXMoTylcbiAgICAgICwgbGVuZ3RoID0ga2V5cy5sZW5ndGhcbiAgICAgICwgaSAgICAgID0gMFxuICAgICAgLCByZXN1bHQgPSBbXVxuICAgICAgLCBrZXk7XG4gICAgd2hpbGUobGVuZ3RoID4gaSlpZihpc0VudW0uY2FsbChPLCBrZXkgPSBrZXlzW2krK10pKXtcbiAgICAgIHJlc3VsdC5wdXNoKGlzRW50cmllcyA/IFtrZXksIE9ba2V5XV0gOiBPW2tleV0pO1xuICAgIH0gcmV0dXJuIHJlc3VsdDtcbiAgfTtcbn07IiwiLy8gYWxsIG9iamVjdCBrZXlzLCBpbmNsdWRlcyBub24tZW51bWVyYWJsZSBhbmQgc3ltYm9sc1xudmFyIGdPUE4gICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKVxuICAsIGdPUFMgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKVxuICAsIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JylcbiAgLCBSZWZsZWN0ICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLlJlZmxlY3Q7XG5tb2R1bGUuZXhwb3J0cyA9IFJlZmxlY3QgJiYgUmVmbGVjdC5vd25LZXlzIHx8IGZ1bmN0aW9uIG93bktleXMoaXQpe1xuICB2YXIga2V5cyAgICAgICA9IGdPUE4uZihhbk9iamVjdChpdCkpXG4gICAgLCBnZXRTeW1ib2xzID0gZ09QUy5mO1xuICByZXR1cm4gZ2V0U3ltYm9scyA/IGtleXMuY29uY2F0KGdldFN5bWJvbHMoaXQpKSA6IGtleXM7XG59OyIsInZhciAkcGFyc2VGbG9hdCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLnBhcnNlRmxvYXRcbiAgLCAkdHJpbSAgICAgICA9IHJlcXVpcmUoJy4vX3N0cmluZy10cmltJykudHJpbTtcblxubW9kdWxlLmV4cG9ydHMgPSAxIC8gJHBhcnNlRmxvYXQocmVxdWlyZSgnLi9fc3RyaW5nLXdzJykgKyAnLTAnKSAhPT0gLUluZmluaXR5ID8gZnVuY3Rpb24gcGFyc2VGbG9hdChzdHIpe1xuICB2YXIgc3RyaW5nID0gJHRyaW0oU3RyaW5nKHN0ciksIDMpXG4gICAgLCByZXN1bHQgPSAkcGFyc2VGbG9hdChzdHJpbmcpO1xuICByZXR1cm4gcmVzdWx0ID09PSAwICYmIHN0cmluZy5jaGFyQXQoMCkgPT0gJy0nID8gLTAgOiByZXN1bHQ7XG59IDogJHBhcnNlRmxvYXQ7IiwidmFyICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLnBhcnNlSW50XG4gICwgJHRyaW0gICAgID0gcmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKS50cmltXG4gICwgd3MgICAgICAgID0gcmVxdWlyZSgnLi9fc3RyaW5nLXdzJylcbiAgLCBoZXggICAgICAgPSAvXltcXC0rXT8wW3hYXS87XG5cbm1vZHVsZS5leHBvcnRzID0gJHBhcnNlSW50KHdzICsgJzA4JykgIT09IDggfHwgJHBhcnNlSW50KHdzICsgJzB4MTYnKSAhPT0gMjIgPyBmdW5jdGlvbiBwYXJzZUludChzdHIsIHJhZGl4KXtcbiAgdmFyIHN0cmluZyA9ICR0cmltKFN0cmluZyhzdHIpLCAzKTtcbiAgcmV0dXJuICRwYXJzZUludChzdHJpbmcsIChyYWRpeCA+Pj4gMCkgfHwgKGhleC50ZXN0KHN0cmluZykgPyAxNiA6IDEwKSk7XG59IDogJHBhcnNlSW50OyIsIid1c2Ugc3RyaWN0JztcbnZhciBwYXRoICAgICAgPSByZXF1aXJlKCcuL19wYXRoJylcbiAgLCBpbnZva2UgICAgPSByZXF1aXJlKCcuL19pbnZva2UnKVxuICAsIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oLyogLi4ucGFyZ3MgKi8pe1xuICB2YXIgZm4gICAgID0gYUZ1bmN0aW9uKHRoaXMpXG4gICAgLCBsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoXG4gICAgLCBwYXJncyAgPSBBcnJheShsZW5ndGgpXG4gICAgLCBpICAgICAgPSAwXG4gICAgLCBfICAgICAgPSBwYXRoLl9cbiAgICAsIGhvbGRlciA9IGZhbHNlO1xuICB3aGlsZShsZW5ndGggPiBpKWlmKChwYXJnc1tpXSA9IGFyZ3VtZW50c1tpKytdKSA9PT0gXylob2xkZXIgPSB0cnVlO1xuICByZXR1cm4gZnVuY3Rpb24oLyogLi4uYXJncyAqLyl7XG4gICAgdmFyIHRoYXQgPSB0aGlzXG4gICAgICAsIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoXG4gICAgICAsIGogPSAwLCBrID0gMCwgYXJncztcbiAgICBpZighaG9sZGVyICYmICFhTGVuKXJldHVybiBpbnZva2UoZm4sIHBhcmdzLCB0aGF0KTtcbiAgICBhcmdzID0gcGFyZ3Muc2xpY2UoKTtcbiAgICBpZihob2xkZXIpZm9yKDtsZW5ndGggPiBqOyBqKyspaWYoYXJnc1tqXSA9PT0gXylhcmdzW2pdID0gYXJndW1lbnRzW2srK107XG4gICAgd2hpbGUoYUxlbiA+IGspYXJncy5wdXNoKGFyZ3VtZW50c1trKytdKTtcbiAgICByZXR1cm4gaW52b2tlKGZuLCBhcmdzLCB0aGF0KTtcbiAgfTtcbn07IiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19nbG9iYWwnKTsiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGJpdG1hcCwgdmFsdWUpe1xuICByZXR1cm4ge1xuICAgIGVudW1lcmFibGUgIDogIShiaXRtYXAgJiAxKSxcbiAgICBjb25maWd1cmFibGU6ICEoYml0bWFwICYgMiksXG4gICAgd3JpdGFibGUgICAgOiAhKGJpdG1hcCAmIDQpLFxuICAgIHZhbHVlICAgICAgIDogdmFsdWVcbiAgfTtcbn07IiwidmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odGFyZ2V0LCBzcmMsIHNhZmUpe1xuICBmb3IodmFyIGtleSBpbiBzcmMpcmVkZWZpbmUodGFyZ2V0LCBrZXksIHNyY1trZXldLCBzYWZlKTtcbiAgcmV0dXJuIHRhcmdldDtcbn07IiwidmFyIGdsb2JhbCAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpXG4gICwgaGlkZSAgICAgID0gcmVxdWlyZSgnLi9faGlkZScpXG4gICwgaGFzICAgICAgID0gcmVxdWlyZSgnLi9faGFzJylcbiAgLCBTUkMgICAgICAgPSByZXF1aXJlKCcuL191aWQnKSgnc3JjJylcbiAgLCBUT19TVFJJTkcgPSAndG9TdHJpbmcnXG4gICwgJHRvU3RyaW5nID0gRnVuY3Rpb25bVE9fU1RSSU5HXVxuICAsIFRQTCAgICAgICA9ICgnJyArICR0b1N0cmluZykuc3BsaXQoVE9fU1RSSU5HKTtcblxucmVxdWlyZSgnLi9fY29yZScpLmluc3BlY3RTb3VyY2UgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiAkdG9TdHJpbmcuY2FsbChpdCk7XG59O1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihPLCBrZXksIHZhbCwgc2FmZSl7XG4gIHZhciBpc0Z1bmN0aW9uID0gdHlwZW9mIHZhbCA9PSAnZnVuY3Rpb24nO1xuICBpZihpc0Z1bmN0aW9uKWhhcyh2YWwsICduYW1lJykgfHwgaGlkZSh2YWwsICduYW1lJywga2V5KTtcbiAgaWYoT1trZXldID09PSB2YWwpcmV0dXJuO1xuICBpZihpc0Z1bmN0aW9uKWhhcyh2YWwsIFNSQykgfHwgaGlkZSh2YWwsIFNSQywgT1trZXldID8gJycgKyBPW2tleV0gOiBUUEwuam9pbihTdHJpbmcoa2V5KSkpO1xuICBpZihPID09PSBnbG9iYWwpe1xuICAgIE9ba2V5XSA9IHZhbDtcbiAgfSBlbHNlIHtcbiAgICBpZighc2FmZSl7XG4gICAgICBkZWxldGUgT1trZXldO1xuICAgICAgaGlkZShPLCBrZXksIHZhbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmKE9ba2V5XSlPW2tleV0gPSB2YWw7XG4gICAgICBlbHNlIGhpZGUoTywga2V5LCB2YWwpO1xuICAgIH1cbiAgfVxuLy8gYWRkIGZha2UgRnVuY3Rpb24jdG9TdHJpbmcgZm9yIGNvcnJlY3Qgd29yayB3cmFwcGVkIG1ldGhvZHMgLyBjb25zdHJ1Y3RvcnMgd2l0aCBtZXRob2RzIGxpa2UgTG9EYXNoIGlzTmF0aXZlXG59KShGdW5jdGlvbi5wcm90b3R5cGUsIFRPX1NUUklORywgZnVuY3Rpb24gdG9TdHJpbmcoKXtcbiAgcmV0dXJuIHR5cGVvZiB0aGlzID09ICdmdW5jdGlvbicgJiYgdGhpc1tTUkNdIHx8ICR0b1N0cmluZy5jYWxsKHRoaXMpO1xufSk7IiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihyZWdFeHAsIHJlcGxhY2Upe1xuICB2YXIgcmVwbGFjZXIgPSByZXBsYWNlID09PSBPYmplY3QocmVwbGFjZSkgPyBmdW5jdGlvbihwYXJ0KXtcbiAgICByZXR1cm4gcmVwbGFjZVtwYXJ0XTtcbiAgfSA6IHJlcGxhY2U7XG4gIHJldHVybiBmdW5jdGlvbihpdCl7XG4gICAgcmV0dXJuIFN0cmluZyhpdCkucmVwbGFjZShyZWdFeHAsIHJlcGxhY2VyKTtcbiAgfTtcbn07IiwiLy8gNy4yLjkgU2FtZVZhbHVlKHgsIHkpXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5pcyB8fCBmdW5jdGlvbiBpcyh4LCB5KXtcbiAgcmV0dXJuIHggPT09IHkgPyB4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geSA6IHggIT0geCAmJiB5ICE9IHk7XG59OyIsIi8vIFdvcmtzIHdpdGggX19wcm90b19fIG9ubHkuIE9sZCB2OCBjYW4ndCB3b3JrIHdpdGggbnVsbCBwcm90byBvYmplY3RzLlxuLyogZXNsaW50LWRpc2FibGUgbm8tcHJvdG8gKi9cbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpXG4gICwgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBjaGVjayA9IGZ1bmN0aW9uKE8sIHByb3RvKXtcbiAgYW5PYmplY3QoTyk7XG4gIGlmKCFpc09iamVjdChwcm90bykgJiYgcHJvdG8gIT09IG51bGwpdGhyb3cgVHlwZUVycm9yKHByb3RvICsgXCI6IGNhbid0IHNldCBhcyBwcm90b3R5cGUhXCIpO1xufTtcbm1vZHVsZS5leHBvcnRzID0ge1xuICBzZXQ6IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCAoJ19fcHJvdG9fXycgaW4ge30gPyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICAgZnVuY3Rpb24odGVzdCwgYnVnZ3ksIHNldCl7XG4gICAgICB0cnkge1xuICAgICAgICBzZXQgPSByZXF1aXJlKCcuL19jdHgnKShGdW5jdGlvbi5jYWxsLCByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmYoT2JqZWN0LnByb3RvdHlwZSwgJ19fcHJvdG9fXycpLnNldCwgMik7XG4gICAgICAgIHNldCh0ZXN0LCBbXSk7XG4gICAgICAgIGJ1Z2d5ID0gISh0ZXN0IGluc3RhbmNlb2YgQXJyYXkpO1xuICAgICAgfSBjYXRjaChlKXsgYnVnZ3kgPSB0cnVlOyB9XG4gICAgICByZXR1cm4gZnVuY3Rpb24gc2V0UHJvdG90eXBlT2YoTywgcHJvdG8pe1xuICAgICAgICBjaGVjayhPLCBwcm90byk7XG4gICAgICAgIGlmKGJ1Z2d5KU8uX19wcm90b19fID0gcHJvdG87XG4gICAgICAgIGVsc2Ugc2V0KE8sIHByb3RvKTtcbiAgICAgICAgcmV0dXJuIE87XG4gICAgICB9O1xuICAgIH0oe30sIGZhbHNlKSA6IHVuZGVmaW5lZCksXG4gIGNoZWNrOiBjaGVja1xufTsiLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsICAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKVxuICAsIGRQICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJylcbiAgLCBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJylcbiAgLCBTUEVDSUVTICAgICA9IHJlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oS0VZKXtcbiAgdmFyIEMgPSBnbG9iYWxbS0VZXTtcbiAgaWYoREVTQ1JJUFRPUlMgJiYgQyAmJiAhQ1tTUEVDSUVTXSlkUC5mKEMsIFNQRUNJRVMsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpeyByZXR1cm4gdGhpczsgfVxuICB9KTtcbn07IiwidmFyIGRlZiA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmZcbiAgLCBoYXMgPSByZXF1aXJlKCcuL19oYXMnKVxuICAsIFRBRyA9IHJlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0LCB0YWcsIHN0YXQpe1xuICBpZihpdCAmJiAhaGFzKGl0ID0gc3RhdCA/IGl0IDogaXQucHJvdG90eXBlLCBUQUcpKWRlZihpdCwgVEFHLCB7Y29uZmlndXJhYmxlOiB0cnVlLCB2YWx1ZTogdGFnfSk7XG59OyIsInZhciBzaGFyZWQgPSByZXF1aXJlKCcuL19zaGFyZWQnKSgna2V5cycpXG4gICwgdWlkICAgID0gcmVxdWlyZSgnLi9fdWlkJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGtleSl7XG4gIHJldHVybiBzaGFyZWRba2V5XSB8fCAoc2hhcmVkW2tleV0gPSB1aWQoa2V5KSk7XG59OyIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKVxuICAsIFNIQVJFRCA9ICdfX2NvcmUtanNfc2hhcmVkX18nXG4gICwgc3RvcmUgID0gZ2xvYmFsW1NIQVJFRF0gfHwgKGdsb2JhbFtTSEFSRURdID0ge30pO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihrZXkpe1xuICByZXR1cm4gc3RvcmVba2V5XSB8fCAoc3RvcmVba2V5XSA9IHt9KTtcbn07IiwiLy8gNy4zLjIwIFNwZWNpZXNDb25zdHJ1Y3RvcihPLCBkZWZhdWx0Q29uc3RydWN0b3IpXG52YXIgYW5PYmplY3QgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JylcbiAgLCBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJylcbiAgLCBTUEVDSUVTICAgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihPLCBEKXtcbiAgdmFyIEMgPSBhbk9iamVjdChPKS5jb25zdHJ1Y3RvciwgUztcbiAgcmV0dXJuIEMgPT09IHVuZGVmaW5lZCB8fCAoUyA9IGFuT2JqZWN0KEMpW1NQRUNJRVNdKSA9PSB1bmRlZmluZWQgPyBEIDogYUZ1bmN0aW9uKFMpO1xufTsiLCJ2YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1ldGhvZCwgYXJnKXtcbiAgcmV0dXJuICEhbWV0aG9kICYmIGZhaWxzKGZ1bmN0aW9uKCl7XG4gICAgYXJnID8gbWV0aG9kLmNhbGwobnVsbCwgZnVuY3Rpb24oKXt9LCAxKSA6IG1ldGhvZC5jYWxsKG51bGwpO1xuICB9KTtcbn07IiwidmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKVxuICAsIGRlZmluZWQgICA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbi8vIHRydWUgIC0+IFN0cmluZyNhdFxuLy8gZmFsc2UgLT4gU3RyaW5nI2NvZGVQb2ludEF0XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKFRPX1NUUklORyl7XG4gIHJldHVybiBmdW5jdGlvbih0aGF0LCBwb3Mpe1xuICAgIHZhciBzID0gU3RyaW5nKGRlZmluZWQodGhhdCkpXG4gICAgICAsIGkgPSB0b0ludGVnZXIocG9zKVxuICAgICAgLCBsID0gcy5sZW5ndGhcbiAgICAgICwgYSwgYjtcbiAgICBpZihpIDwgMCB8fCBpID49IGwpcmV0dXJuIFRPX1NUUklORyA/ICcnIDogdW5kZWZpbmVkO1xuICAgIGEgPSBzLmNoYXJDb2RlQXQoaSk7XG4gICAgcmV0dXJuIGEgPCAweGQ4MDAgfHwgYSA+IDB4ZGJmZiB8fCBpICsgMSA9PT0gbCB8fCAoYiA9IHMuY2hhckNvZGVBdChpICsgMSkpIDwgMHhkYzAwIHx8IGIgPiAweGRmZmZcbiAgICAgID8gVE9fU1RSSU5HID8gcy5jaGFyQXQoaSkgOiBhXG4gICAgICA6IFRPX1NUUklORyA/IHMuc2xpY2UoaSwgaSArIDIpIDogKGEgLSAweGQ4MDAgPDwgMTApICsgKGIgLSAweGRjMDApICsgMHgxMDAwMDtcbiAgfTtcbn07IiwiLy8gaGVscGVyIGZvciBTdHJpbmcje3N0YXJ0c1dpdGgsIGVuZHNXaXRoLCBpbmNsdWRlc31cbnZhciBpc1JlZ0V4cCA9IHJlcXVpcmUoJy4vX2lzLXJlZ2V4cCcpXG4gICwgZGVmaW5lZCAgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odGhhdCwgc2VhcmNoU3RyaW5nLCBOQU1FKXtcbiAgaWYoaXNSZWdFeHAoc2VhcmNoU3RyaW5nKSl0aHJvdyBUeXBlRXJyb3IoJ1N0cmluZyMnICsgTkFNRSArIFwiIGRvZXNuJ3QgYWNjZXB0IHJlZ2V4IVwiKTtcbiAgcmV0dXJuIFN0cmluZyhkZWZpbmVkKHRoYXQpKTtcbn07IiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIGZhaWxzICAgPSByZXF1aXJlKCcuL19mYWlscycpXG4gICwgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKVxuICAsIHF1b3QgICAgPSAvXCIvZztcbi8vIEIuMi4zLjIuMSBDcmVhdGVIVE1MKHN0cmluZywgdGFnLCBhdHRyaWJ1dGUsIHZhbHVlKVxudmFyIGNyZWF0ZUhUTUwgPSBmdW5jdGlvbihzdHJpbmcsIHRhZywgYXR0cmlidXRlLCB2YWx1ZSkge1xuICB2YXIgUyAgPSBTdHJpbmcoZGVmaW5lZChzdHJpbmcpKVxuICAgICwgcDEgPSAnPCcgKyB0YWc7XG4gIGlmKGF0dHJpYnV0ZSAhPT0gJycpcDEgKz0gJyAnICsgYXR0cmlidXRlICsgJz1cIicgKyBTdHJpbmcodmFsdWUpLnJlcGxhY2UocXVvdCwgJyZxdW90OycpICsgJ1wiJztcbiAgcmV0dXJuIHAxICsgJz4nICsgUyArICc8LycgKyB0YWcgKyAnPic7XG59O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihOQU1FLCBleGVjKXtcbiAgdmFyIE8gPSB7fTtcbiAgT1tOQU1FXSA9IGV4ZWMoY3JlYXRlSFRNTCk7XG4gICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZmFpbHMoZnVuY3Rpb24oKXtcbiAgICB2YXIgdGVzdCA9ICcnW05BTUVdKCdcIicpO1xuICAgIHJldHVybiB0ZXN0ICE9PSB0ZXN0LnRvTG93ZXJDYXNlKCkgfHwgdGVzdC5zcGxpdCgnXCInKS5sZW5ndGggPiAzO1xuICB9KSwgJ1N0cmluZycsIE8pO1xufTsiLCIvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1zdHJpbmctcGFkLXN0YXJ0LWVuZFxudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJylcbiAgLCByZXBlYXQgICA9IHJlcXVpcmUoJy4vX3N0cmluZy1yZXBlYXQnKVxuICAsIGRlZmluZWQgID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHRoYXQsIG1heExlbmd0aCwgZmlsbFN0cmluZywgbGVmdCl7XG4gIHZhciBTICAgICAgICAgICAgPSBTdHJpbmcoZGVmaW5lZCh0aGF0KSlcbiAgICAsIHN0cmluZ0xlbmd0aCA9IFMubGVuZ3RoXG4gICAgLCBmaWxsU3RyICAgICAgPSBmaWxsU3RyaW5nID09PSB1bmRlZmluZWQgPyAnICcgOiBTdHJpbmcoZmlsbFN0cmluZylcbiAgICAsIGludE1heExlbmd0aCA9IHRvTGVuZ3RoKG1heExlbmd0aCk7XG4gIGlmKGludE1heExlbmd0aCA8PSBzdHJpbmdMZW5ndGggfHwgZmlsbFN0ciA9PSAnJylyZXR1cm4gUztcbiAgdmFyIGZpbGxMZW4gPSBpbnRNYXhMZW5ndGggLSBzdHJpbmdMZW5ndGhcbiAgICAsIHN0cmluZ0ZpbGxlciA9IHJlcGVhdC5jYWxsKGZpbGxTdHIsIE1hdGguY2VpbChmaWxsTGVuIC8gZmlsbFN0ci5sZW5ndGgpKTtcbiAgaWYoc3RyaW5nRmlsbGVyLmxlbmd0aCA+IGZpbGxMZW4pc3RyaW5nRmlsbGVyID0gc3RyaW5nRmlsbGVyLnNsaWNlKDAsIGZpbGxMZW4pO1xuICByZXR1cm4gbGVmdCA/IHN0cmluZ0ZpbGxlciArIFMgOiBTICsgc3RyaW5nRmlsbGVyO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJylcbiAgLCBkZWZpbmVkICAgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcmVwZWF0KGNvdW50KXtcbiAgdmFyIHN0ciA9IFN0cmluZyhkZWZpbmVkKHRoaXMpKVxuICAgICwgcmVzID0gJydcbiAgICAsIG4gICA9IHRvSW50ZWdlcihjb3VudCk7XG4gIGlmKG4gPCAwIHx8IG4gPT0gSW5maW5pdHkpdGhyb3cgUmFuZ2VFcnJvcihcIkNvdW50IGNhbid0IGJlIG5lZ2F0aXZlXCIpO1xuICBmb3IoO24gPiAwOyAobiA+Pj49IDEpICYmIChzdHIgKz0gc3RyKSlpZihuICYgMSlyZXMgKz0gc3RyO1xuICByZXR1cm4gcmVzO1xufTsiLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKVxuICAsIGZhaWxzICAgPSByZXF1aXJlKCcuL19mYWlscycpXG4gICwgc3BhY2VzICA9IHJlcXVpcmUoJy4vX3N0cmluZy13cycpXG4gICwgc3BhY2UgICA9ICdbJyArIHNwYWNlcyArICddJ1xuICAsIG5vbiAgICAgPSAnXFx1MjAwYlxcdTAwODUnXG4gICwgbHRyaW0gICA9IFJlZ0V4cCgnXicgKyBzcGFjZSArIHNwYWNlICsgJyonKVxuICAsIHJ0cmltICAgPSBSZWdFeHAoc3BhY2UgKyBzcGFjZSArICcqJCcpO1xuXG52YXIgZXhwb3J0ZXIgPSBmdW5jdGlvbihLRVksIGV4ZWMsIEFMSUFTKXtcbiAgdmFyIGV4cCAgID0ge307XG4gIHZhciBGT1JDRSA9IGZhaWxzKGZ1bmN0aW9uKCl7XG4gICAgcmV0dXJuICEhc3BhY2VzW0tFWV0oKSB8fCBub25bS0VZXSgpICE9IG5vbjtcbiAgfSk7XG4gIHZhciBmbiA9IGV4cFtLRVldID0gRk9SQ0UgPyBleGVjKHRyaW0pIDogc3BhY2VzW0tFWV07XG4gIGlmKEFMSUFTKWV4cFtBTElBU10gPSBmbjtcbiAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBGT1JDRSwgJ1N0cmluZycsIGV4cCk7XG59O1xuXG4vLyAxIC0+IFN0cmluZyN0cmltTGVmdFxuLy8gMiAtPiBTdHJpbmcjdHJpbVJpZ2h0XG4vLyAzIC0+IFN0cmluZyN0cmltXG52YXIgdHJpbSA9IGV4cG9ydGVyLnRyaW0gPSBmdW5jdGlvbihzdHJpbmcsIFRZUEUpe1xuICBzdHJpbmcgPSBTdHJpbmcoZGVmaW5lZChzdHJpbmcpKTtcbiAgaWYoVFlQRSAmIDEpc3RyaW5nID0gc3RyaW5nLnJlcGxhY2UobHRyaW0sICcnKTtcbiAgaWYoVFlQRSAmIDIpc3RyaW5nID0gc3RyaW5nLnJlcGxhY2UocnRyaW0sICcnKTtcbiAgcmV0dXJuIHN0cmluZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZXI7IiwibW9kdWxlLmV4cG9ydHMgPSAnXFx4MDlcXHgwQVxceDBCXFx4MENcXHgwRFxceDIwXFx4QTBcXHUxNjgwXFx1MTgwRVxcdTIwMDBcXHUyMDAxXFx1MjAwMlxcdTIwMDMnICtcbiAgJ1xcdTIwMDRcXHUyMDA1XFx1MjAwNlxcdTIwMDdcXHUyMDA4XFx1MjAwOVxcdTIwMEFcXHUyMDJGXFx1MjA1RlxcdTMwMDBcXHUyMDI4XFx1MjAyOVxcdUZFRkYnOyIsInZhciBjdHggICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19jdHgnKVxuICAsIGludm9rZSAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2ludm9rZScpXG4gICwgaHRtbCAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9faHRtbCcpXG4gICwgY2VsICAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpXG4gICwgZ2xvYmFsICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJylcbiAgLCBwcm9jZXNzICAgICAgICAgICAgPSBnbG9iYWwucHJvY2Vzc1xuICAsIHNldFRhc2sgICAgICAgICAgICA9IGdsb2JhbC5zZXRJbW1lZGlhdGVcbiAgLCBjbGVhclRhc2sgICAgICAgICAgPSBnbG9iYWwuY2xlYXJJbW1lZGlhdGVcbiAgLCBNZXNzYWdlQ2hhbm5lbCAgICAgPSBnbG9iYWwuTWVzc2FnZUNoYW5uZWxcbiAgLCBjb3VudGVyICAgICAgICAgICAgPSAwXG4gICwgcXVldWUgICAgICAgICAgICAgID0ge31cbiAgLCBPTlJFQURZU1RBVEVDSEFOR0UgPSAnb25yZWFkeXN0YXRlY2hhbmdlJ1xuICAsIGRlZmVyLCBjaGFubmVsLCBwb3J0O1xudmFyIHJ1biA9IGZ1bmN0aW9uKCl7XG4gIHZhciBpZCA9ICt0aGlzO1xuICBpZihxdWV1ZS5oYXNPd25Qcm9wZXJ0eShpZCkpe1xuICAgIHZhciBmbiA9IHF1ZXVlW2lkXTtcbiAgICBkZWxldGUgcXVldWVbaWRdO1xuICAgIGZuKCk7XG4gIH1cbn07XG52YXIgbGlzdGVuZXIgPSBmdW5jdGlvbihldmVudCl7XG4gIHJ1bi5jYWxsKGV2ZW50LmRhdGEpO1xufTtcbi8vIE5vZGUuanMgMC45KyAmIElFMTArIGhhcyBzZXRJbW1lZGlhdGUsIG90aGVyd2lzZTpcbmlmKCFzZXRUYXNrIHx8ICFjbGVhclRhc2spe1xuICBzZXRUYXNrID0gZnVuY3Rpb24gc2V0SW1tZWRpYXRlKGZuKXtcbiAgICB2YXIgYXJncyA9IFtdLCBpID0gMTtcbiAgICB3aGlsZShhcmd1bWVudHMubGVuZ3RoID4gaSlhcmdzLnB1c2goYXJndW1lbnRzW2krK10pO1xuICAgIHF1ZXVlWysrY291bnRlcl0gPSBmdW5jdGlvbigpe1xuICAgICAgaW52b2tlKHR5cGVvZiBmbiA9PSAnZnVuY3Rpb24nID8gZm4gOiBGdW5jdGlvbihmbiksIGFyZ3MpO1xuICAgIH07XG4gICAgZGVmZXIoY291bnRlcik7XG4gICAgcmV0dXJuIGNvdW50ZXI7XG4gIH07XG4gIGNsZWFyVGFzayA9IGZ1bmN0aW9uIGNsZWFySW1tZWRpYXRlKGlkKXtcbiAgICBkZWxldGUgcXVldWVbaWRdO1xuICB9O1xuICAvLyBOb2RlLmpzIDAuOC1cbiAgaWYocmVxdWlyZSgnLi9fY29mJykocHJvY2VzcykgPT0gJ3Byb2Nlc3MnKXtcbiAgICBkZWZlciA9IGZ1bmN0aW9uKGlkKXtcbiAgICAgIHByb2Nlc3MubmV4dFRpY2soY3R4KHJ1biwgaWQsIDEpKTtcbiAgICB9O1xuICAvLyBCcm93c2VycyB3aXRoIE1lc3NhZ2VDaGFubmVsLCBpbmNsdWRlcyBXZWJXb3JrZXJzXG4gIH0gZWxzZSBpZihNZXNzYWdlQ2hhbm5lbCl7XG4gICAgY2hhbm5lbCA9IG5ldyBNZXNzYWdlQ2hhbm5lbDtcbiAgICBwb3J0ICAgID0gY2hhbm5lbC5wb3J0MjtcbiAgICBjaGFubmVsLnBvcnQxLm9ubWVzc2FnZSA9IGxpc3RlbmVyO1xuICAgIGRlZmVyID0gY3R4KHBvcnQucG9zdE1lc3NhZ2UsIHBvcnQsIDEpO1xuICAvLyBCcm93c2VycyB3aXRoIHBvc3RNZXNzYWdlLCBza2lwIFdlYldvcmtlcnNcbiAgLy8gSUU4IGhhcyBwb3N0TWVzc2FnZSwgYnV0IGl0J3Mgc3luYyAmIHR5cGVvZiBpdHMgcG9zdE1lc3NhZ2UgaXMgJ29iamVjdCdcbiAgfSBlbHNlIGlmKGdsb2JhbC5hZGRFdmVudExpc3RlbmVyICYmIHR5cGVvZiBwb3N0TWVzc2FnZSA9PSAnZnVuY3Rpb24nICYmICFnbG9iYWwuaW1wb3J0U2NyaXB0cyl7XG4gICAgZGVmZXIgPSBmdW5jdGlvbihpZCl7XG4gICAgICBnbG9iYWwucG9zdE1lc3NhZ2UoaWQgKyAnJywgJyonKTtcbiAgICB9O1xuICAgIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgbGlzdGVuZXIsIGZhbHNlKTtcbiAgLy8gSUU4LVxuICB9IGVsc2UgaWYoT05SRUFEWVNUQVRFQ0hBTkdFIGluIGNlbCgnc2NyaXB0Jykpe1xuICAgIGRlZmVyID0gZnVuY3Rpb24oaWQpe1xuICAgICAgaHRtbC5hcHBlbmRDaGlsZChjZWwoJ3NjcmlwdCcpKVtPTlJFQURZU1RBVEVDSEFOR0VdID0gZnVuY3Rpb24oKXtcbiAgICAgICAgaHRtbC5yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICAgICAgcnVuLmNhbGwoaWQpO1xuICAgICAgfTtcbiAgICB9O1xuICAvLyBSZXN0IG9sZCBicm93c2Vyc1xuICB9IGVsc2Uge1xuICAgIGRlZmVyID0gZnVuY3Rpb24oaWQpe1xuICAgICAgc2V0VGltZW91dChjdHgocnVuLCBpZCwgMSksIDApO1xuICAgIH07XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0ge1xuICBzZXQ6ICAgc2V0VGFzayxcbiAgY2xlYXI6IGNsZWFyVGFza1xufTsiLCJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpXG4gICwgbWF4ICAgICAgID0gTWF0aC5tYXhcbiAgLCBtaW4gICAgICAgPSBNYXRoLm1pbjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaW5kZXgsIGxlbmd0aCl7XG4gIGluZGV4ID0gdG9JbnRlZ2VyKGluZGV4KTtcbiAgcmV0dXJuIGluZGV4IDwgMCA/IG1heChpbmRleCArIGxlbmd0aCwgMCkgOiBtaW4oaW5kZXgsIGxlbmd0aCk7XG59OyIsIi8vIDcuMS40IFRvSW50ZWdlclxudmFyIGNlaWwgID0gTWF0aC5jZWlsXG4gICwgZmxvb3IgPSBNYXRoLmZsb29yO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBpc05hTihpdCA9ICtpdCkgPyAwIDogKGl0ID4gMCA/IGZsb29yIDogY2VpbCkoaXQpO1xufTsiLCIvLyB0byBpbmRleGVkIG9iamVjdCwgdG9PYmplY3Qgd2l0aCBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIHN0cmluZ3NcbnZhciBJT2JqZWN0ID0gcmVxdWlyZSgnLi9faW9iamVjdCcpXG4gICwgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gSU9iamVjdChkZWZpbmVkKGl0KSk7XG59OyIsIi8vIDcuMS4xNSBUb0xlbmd0aFxudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKVxuICAsIG1pbiAgICAgICA9IE1hdGgubWluO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBpdCA+IDAgPyBtaW4odG9JbnRlZ2VyKGl0KSwgMHgxZmZmZmZmZmZmZmZmZikgOiAwOyAvLyBwb3coMiwgNTMpIC0gMSA9PSA5MDA3MTk5MjU0NzQwOTkxXG59OyIsIi8vIDcuMS4xMyBUb09iamVjdChhcmd1bWVudClcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBPYmplY3QoZGVmaW5lZChpdCkpO1xufTsiLCIvLyA3LjEuMSBUb1ByaW1pdGl2ZShpbnB1dCBbLCBQcmVmZXJyZWRUeXBlXSlcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuLy8gaW5zdGVhZCBvZiB0aGUgRVM2IHNwZWMgdmVyc2lvbiwgd2UgZGlkbid0IGltcGxlbWVudCBAQHRvUHJpbWl0aXZlIGNhc2Vcbi8vIGFuZCB0aGUgc2Vjb25kIGFyZ3VtZW50IC0gZmxhZyAtIHByZWZlcnJlZCB0eXBlIGlzIGEgc3RyaW5nXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0LCBTKXtcbiAgaWYoIWlzT2JqZWN0KGl0KSlyZXR1cm4gaXQ7XG4gIHZhciBmbiwgdmFsO1xuICBpZihTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKXJldHVybiB2YWw7XG4gIGlmKHR5cGVvZiAoZm4gPSBpdC52YWx1ZU9mKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpcmV0dXJuIHZhbDtcbiAgaWYoIVMgJiYgdHlwZW9mIChmbiA9IGl0LnRvU3RyaW5nKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpcmV0dXJuIHZhbDtcbiAgdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlXCIpO1xufTsiLCIndXNlIHN0cmljdCc7XG5pZihyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpKXtcbiAgdmFyIExJQlJBUlkgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19saWJyYXJ5JylcbiAgICAsIGdsb2JhbCAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKVxuICAgICwgZmFpbHMgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2ZhaWxzJylcbiAgICAsICRleHBvcnQgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAgICwgJHR5cGVkICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX3R5cGVkJylcbiAgICAsICRidWZmZXIgICAgICAgICAgICAgPSByZXF1aXJlKCcuL190eXBlZC1idWZmZXInKVxuICAgICwgY3R4ICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2N0eCcpXG4gICAgLCBhbkluc3RhbmNlICAgICAgICAgID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKVxuICAgICwgcHJvcGVydHlEZXNjICAgICAgICA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKVxuICAgICwgaGlkZSAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2hpZGUnKVxuICAgICwgcmVkZWZpbmVBbGwgICAgICAgICA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpXG4gICAgLCB0b0ludGVnZXIgICAgICAgICAgID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpXG4gICAgLCB0b0xlbmd0aCAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJylcbiAgICAsIHRvSW5kZXggICAgICAgICAgICAgPSByZXF1aXJlKCcuL190by1pbmRleCcpXG4gICAgLCB0b1ByaW1pdGl2ZSAgICAgICAgID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJylcbiAgICAsIGhhcyAgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19oYXMnKVxuICAgICwgc2FtZSAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX3NhbWUtdmFsdWUnKVxuICAgICwgY2xhc3NvZiAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKVxuICAgICwgaXNPYmplY3QgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpXG4gICAgLCB0b09iamVjdCAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0JylcbiAgICAsIGlzQXJyYXlJdGVyICAgICAgICAgPSByZXF1aXJlKCcuL19pcy1hcnJheS1pdGVyJylcbiAgICAsIGNyZWF0ZSAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJylcbiAgICAsIGdldFByb3RvdHlwZU9mICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJylcbiAgICAsIGdPUE4gICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmZcbiAgICAsIGdldEl0ZXJGbiAgICAgICAgICAgPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpXG4gICAgLCB1aWQgICAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fdWlkJylcbiAgICAsIHdrcyAgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL193a3MnKVxuICAgICwgY3JlYXRlQXJyYXlNZXRob2QgICA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKVxuICAgICwgY3JlYXRlQXJyYXlJbmNsdWRlcyA9IHJlcXVpcmUoJy4vX2FycmF5LWluY2x1ZGVzJylcbiAgICAsIHNwZWNpZXNDb25zdHJ1Y3RvciAgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJylcbiAgICAsIEFycmF5SXRlcmF0b3JzICAgICAgPSByZXF1aXJlKCcuL2VzNi5hcnJheS5pdGVyYXRvcicpXG4gICAgLCBJdGVyYXRvcnMgICAgICAgICAgID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJylcbiAgICAsICRpdGVyRGV0ZWN0ICAgICAgICAgPSByZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpXG4gICAgLCBzZXRTcGVjaWVzICAgICAgICAgID0gcmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKVxuICAgICwgYXJyYXlGaWxsICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2FycmF5LWZpbGwnKVxuICAgICwgYXJyYXlDb3B5V2l0aGluICAgICA9IHJlcXVpcmUoJy4vX2FycmF5LWNvcHktd2l0aGluJylcbiAgICAsICREUCAgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKVxuICAgICwgJEdPUEQgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJylcbiAgICAsIGRQICAgICAgICAgICAgICAgICAgPSAkRFAuZlxuICAgICwgZ09QRCAgICAgICAgICAgICAgICA9ICRHT1BELmZcbiAgICAsIFJhbmdlRXJyb3IgICAgICAgICAgPSBnbG9iYWwuUmFuZ2VFcnJvclxuICAgICwgVHlwZUVycm9yICAgICAgICAgICA9IGdsb2JhbC5UeXBlRXJyb3JcbiAgICAsIFVpbnQ4QXJyYXkgICAgICAgICAgPSBnbG9iYWwuVWludDhBcnJheVxuICAgICwgQVJSQVlfQlVGRkVSICAgICAgICA9ICdBcnJheUJ1ZmZlcidcbiAgICAsIFNIQVJFRF9CVUZGRVIgICAgICAgPSAnU2hhcmVkJyArIEFSUkFZX0JVRkZFUlxuICAgICwgQllURVNfUEVSX0VMRU1FTlQgICA9ICdCWVRFU19QRVJfRUxFTUVOVCdcbiAgICAsIFBST1RPVFlQRSAgICAgICAgICAgPSAncHJvdG90eXBlJ1xuICAgICwgQXJyYXlQcm90byAgICAgICAgICA9IEFycmF5W1BST1RPVFlQRV1cbiAgICAsICRBcnJheUJ1ZmZlciAgICAgICAgPSAkYnVmZmVyLkFycmF5QnVmZmVyXG4gICAgLCAkRGF0YVZpZXcgICAgICAgICAgID0gJGJ1ZmZlci5EYXRhVmlld1xuICAgICwgYXJyYXlGb3JFYWNoICAgICAgICA9IGNyZWF0ZUFycmF5TWV0aG9kKDApXG4gICAgLCBhcnJheUZpbHRlciAgICAgICAgID0gY3JlYXRlQXJyYXlNZXRob2QoMilcbiAgICAsIGFycmF5U29tZSAgICAgICAgICAgPSBjcmVhdGVBcnJheU1ldGhvZCgzKVxuICAgICwgYXJyYXlFdmVyeSAgICAgICAgICA9IGNyZWF0ZUFycmF5TWV0aG9kKDQpXG4gICAgLCBhcnJheUZpbmQgICAgICAgICAgID0gY3JlYXRlQXJyYXlNZXRob2QoNSlcbiAgICAsIGFycmF5RmluZEluZGV4ICAgICAgPSBjcmVhdGVBcnJheU1ldGhvZCg2KVxuICAgICwgYXJyYXlJbmNsdWRlcyAgICAgICA9IGNyZWF0ZUFycmF5SW5jbHVkZXModHJ1ZSlcbiAgICAsIGFycmF5SW5kZXhPZiAgICAgICAgPSBjcmVhdGVBcnJheUluY2x1ZGVzKGZhbHNlKVxuICAgICwgYXJyYXlWYWx1ZXMgICAgICAgICA9IEFycmF5SXRlcmF0b3JzLnZhbHVlc1xuICAgICwgYXJyYXlLZXlzICAgICAgICAgICA9IEFycmF5SXRlcmF0b3JzLmtleXNcbiAgICAsIGFycmF5RW50cmllcyAgICAgICAgPSBBcnJheUl0ZXJhdG9ycy5lbnRyaWVzXG4gICAgLCBhcnJheUxhc3RJbmRleE9mICAgID0gQXJyYXlQcm90by5sYXN0SW5kZXhPZlxuICAgICwgYXJyYXlSZWR1Y2UgICAgICAgICA9IEFycmF5UHJvdG8ucmVkdWNlXG4gICAgLCBhcnJheVJlZHVjZVJpZ2h0ICAgID0gQXJyYXlQcm90by5yZWR1Y2VSaWdodFxuICAgICwgYXJyYXlKb2luICAgICAgICAgICA9IEFycmF5UHJvdG8uam9pblxuICAgICwgYXJyYXlTb3J0ICAgICAgICAgICA9IEFycmF5UHJvdG8uc29ydFxuICAgICwgYXJyYXlTbGljZSAgICAgICAgICA9IEFycmF5UHJvdG8uc2xpY2VcbiAgICAsIGFycmF5VG9TdHJpbmcgICAgICAgPSBBcnJheVByb3RvLnRvU3RyaW5nXG4gICAgLCBhcnJheVRvTG9jYWxlU3RyaW5nID0gQXJyYXlQcm90by50b0xvY2FsZVN0cmluZ1xuICAgICwgSVRFUkFUT1IgICAgICAgICAgICA9IHdrcygnaXRlcmF0b3InKVxuICAgICwgVEFHICAgICAgICAgICAgICAgICA9IHdrcygndG9TdHJpbmdUYWcnKVxuICAgICwgVFlQRURfQ09OU1RSVUNUT1IgICA9IHVpZCgndHlwZWRfY29uc3RydWN0b3InKVxuICAgICwgREVGX0NPTlNUUlVDVE9SICAgICA9IHVpZCgnZGVmX2NvbnN0cnVjdG9yJylcbiAgICAsIEFMTF9DT05TVFJVQ1RPUlMgICAgPSAkdHlwZWQuQ09OU1RSXG4gICAgLCBUWVBFRF9BUlJBWSAgICAgICAgID0gJHR5cGVkLlRZUEVEXG4gICAgLCBWSUVXICAgICAgICAgICAgICAgID0gJHR5cGVkLlZJRVdcbiAgICAsIFdST05HX0xFTkdUSCAgICAgICAgPSAnV3JvbmcgbGVuZ3RoISc7XG5cbiAgdmFyICRtYXAgPSBjcmVhdGVBcnJheU1ldGhvZCgxLCBmdW5jdGlvbihPLCBsZW5ndGgpe1xuICAgIHJldHVybiBhbGxvY2F0ZShzcGVjaWVzQ29uc3RydWN0b3IoTywgT1tERUZfQ09OU1RSVUNUT1JdKSwgbGVuZ3RoKTtcbiAgfSk7XG5cbiAgdmFyIExJVFRMRV9FTkRJQU4gPSBmYWlscyhmdW5jdGlvbigpe1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShuZXcgVWludDE2QXJyYXkoWzFdKS5idWZmZXIpWzBdID09PSAxO1xuICB9KTtcblxuICB2YXIgRk9SQ0VEX1NFVCA9ICEhVWludDhBcnJheSAmJiAhIVVpbnQ4QXJyYXlbUFJPVE9UWVBFXS5zZXQgJiYgZmFpbHMoZnVuY3Rpb24oKXtcbiAgICBuZXcgVWludDhBcnJheSgxKS5zZXQoe30pO1xuICB9KTtcblxuICB2YXIgc3RyaWN0VG9MZW5ndGggPSBmdW5jdGlvbihpdCwgU0FNRSl7XG4gICAgaWYoaXQgPT09IHVuZGVmaW5lZCl0aHJvdyBUeXBlRXJyb3IoV1JPTkdfTEVOR1RIKTtcbiAgICB2YXIgbnVtYmVyID0gK2l0XG4gICAgICAsIGxlbmd0aCA9IHRvTGVuZ3RoKGl0KTtcbiAgICBpZihTQU1FICYmICFzYW1lKG51bWJlciwgbGVuZ3RoKSl0aHJvdyBSYW5nZUVycm9yKFdST05HX0xFTkdUSCk7XG4gICAgcmV0dXJuIGxlbmd0aDtcbiAgfTtcblxuICB2YXIgdG9PZmZzZXQgPSBmdW5jdGlvbihpdCwgQllURVMpe1xuICAgIHZhciBvZmZzZXQgPSB0b0ludGVnZXIoaXQpO1xuICAgIGlmKG9mZnNldCA8IDAgfHwgb2Zmc2V0ICUgQllURVMpdGhyb3cgUmFuZ2VFcnJvcignV3Jvbmcgb2Zmc2V0IScpO1xuICAgIHJldHVybiBvZmZzZXQ7XG4gIH07XG5cbiAgdmFyIHZhbGlkYXRlID0gZnVuY3Rpb24oaXQpe1xuICAgIGlmKGlzT2JqZWN0KGl0KSAmJiBUWVBFRF9BUlJBWSBpbiBpdClyZXR1cm4gaXQ7XG4gICAgdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYSB0eXBlZCBhcnJheSEnKTtcbiAgfTtcblxuICB2YXIgYWxsb2NhdGUgPSBmdW5jdGlvbihDLCBsZW5ndGgpe1xuICAgIGlmKCEoaXNPYmplY3QoQykgJiYgVFlQRURfQ09OU1RSVUNUT1IgaW4gQykpe1xuICAgICAgdGhyb3cgVHlwZUVycm9yKCdJdCBpcyBub3QgYSB0eXBlZCBhcnJheSBjb25zdHJ1Y3RvciEnKTtcbiAgICB9IHJldHVybiBuZXcgQyhsZW5ndGgpO1xuICB9O1xuXG4gIHZhciBzcGVjaWVzRnJvbUxpc3QgPSBmdW5jdGlvbihPLCBsaXN0KXtcbiAgICByZXR1cm4gZnJvbUxpc3Qoc3BlY2llc0NvbnN0cnVjdG9yKE8sIE9bREVGX0NPTlNUUlVDVE9SXSksIGxpc3QpO1xuICB9O1xuXG4gIHZhciBmcm9tTGlzdCA9IGZ1bmN0aW9uKEMsIGxpc3Qpe1xuICAgIHZhciBpbmRleCAgPSAwXG4gICAgICAsIGxlbmd0aCA9IGxpc3QubGVuZ3RoXG4gICAgICAsIHJlc3VsdCA9IGFsbG9jYXRlKEMsIGxlbmd0aCk7XG4gICAgd2hpbGUobGVuZ3RoID4gaW5kZXgpcmVzdWx0W2luZGV4XSA9IGxpc3RbaW5kZXgrK107XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICB2YXIgYWRkR2V0dGVyID0gZnVuY3Rpb24oaXQsIGtleSwgaW50ZXJuYWwpe1xuICAgIGRQKGl0LCBrZXksIHtnZXQ6IGZ1bmN0aW9uKCl7IHJldHVybiB0aGlzLl9kW2ludGVybmFsXTsgfX0pO1xuICB9O1xuXG4gIHZhciAkZnJvbSA9IGZ1bmN0aW9uIGZyb20oc291cmNlIC8qLCBtYXBmbiwgdGhpc0FyZyAqLyl7XG4gICAgdmFyIE8gICAgICAgPSB0b09iamVjdChzb3VyY2UpXG4gICAgICAsIGFMZW4gICAgPSBhcmd1bWVudHMubGVuZ3RoXG4gICAgICAsIG1hcGZuICAgPSBhTGVuID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZFxuICAgICAgLCBtYXBwaW5nID0gbWFwZm4gIT09IHVuZGVmaW5lZFxuICAgICAgLCBpdGVyRm4gID0gZ2V0SXRlckZuKE8pXG4gICAgICAsIGksIGxlbmd0aCwgdmFsdWVzLCByZXN1bHQsIHN0ZXAsIGl0ZXJhdG9yO1xuICAgIGlmKGl0ZXJGbiAhPSB1bmRlZmluZWQgJiYgIWlzQXJyYXlJdGVyKGl0ZXJGbikpe1xuICAgICAgZm9yKGl0ZXJhdG9yID0gaXRlckZuLmNhbGwoTyksIHZhbHVlcyA9IFtdLCBpID0gMDsgIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lOyBpKyspe1xuICAgICAgICB2YWx1ZXMucHVzaChzdGVwLnZhbHVlKTtcbiAgICAgIH0gTyA9IHZhbHVlcztcbiAgICB9XG4gICAgaWYobWFwcGluZyAmJiBhTGVuID4gMiltYXBmbiA9IGN0eChtYXBmbiwgYXJndW1lbnRzWzJdLCAyKTtcbiAgICBmb3IoaSA9IDAsIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKSwgcmVzdWx0ID0gYWxsb2NhdGUodGhpcywgbGVuZ3RoKTsgbGVuZ3RoID4gaTsgaSsrKXtcbiAgICAgIHJlc3VsdFtpXSA9IG1hcHBpbmcgPyBtYXBmbihPW2ldLCBpKSA6IE9baV07XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgdmFyICRvZiA9IGZ1bmN0aW9uIG9mKC8qLi4uaXRlbXMqLyl7XG4gICAgdmFyIGluZGV4ICA9IDBcbiAgICAgICwgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aFxuICAgICAgLCByZXN1bHQgPSBhbGxvY2F0ZSh0aGlzLCBsZW5ndGgpO1xuICAgIHdoaWxlKGxlbmd0aCA+IGluZGV4KXJlc3VsdFtpbmRleF0gPSBhcmd1bWVudHNbaW5kZXgrK107XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICAvLyBpT1MgU2FmYXJpIDYueCBmYWlscyBoZXJlXG4gIHZhciBUT19MT0NBTEVfQlVHID0gISFVaW50OEFycmF5ICYmIGZhaWxzKGZ1bmN0aW9uKCl7IGFycmF5VG9Mb2NhbGVTdHJpbmcuY2FsbChuZXcgVWludDhBcnJheSgxKSk7IH0pO1xuXG4gIHZhciAkdG9Mb2NhbGVTdHJpbmcgPSBmdW5jdGlvbiB0b0xvY2FsZVN0cmluZygpe1xuICAgIHJldHVybiBhcnJheVRvTG9jYWxlU3RyaW5nLmFwcGx5KFRPX0xPQ0FMRV9CVUcgPyBhcnJheVNsaWNlLmNhbGwodmFsaWRhdGUodGhpcykpIDogdmFsaWRhdGUodGhpcyksIGFyZ3VtZW50cyk7XG4gIH07XG5cbiAgdmFyIHByb3RvID0ge1xuICAgIGNvcHlXaXRoaW46IGZ1bmN0aW9uIGNvcHlXaXRoaW4odGFyZ2V0LCBzdGFydCAvKiwgZW5kICovKXtcbiAgICAgIHJldHVybiBhcnJheUNvcHlXaXRoaW4uY2FsbCh2YWxpZGF0ZSh0aGlzKSwgdGFyZ2V0LCBzdGFydCwgYXJndW1lbnRzLmxlbmd0aCA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgZXZlcnk6IGZ1bmN0aW9uIGV2ZXJ5KGNhbGxiYWNrZm4gLyosIHRoaXNBcmcgKi8pe1xuICAgICAgcmV0dXJuIGFycmF5RXZlcnkodmFsaWRhdGUodGhpcyksIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGZpbGw6IGZ1bmN0aW9uIGZpbGwodmFsdWUgLyosIHN0YXJ0LCBlbmQgKi8peyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICByZXR1cm4gYXJyYXlGaWxsLmFwcGx5KHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgZmlsdGVyOiBmdW5jdGlvbiBmaWx0ZXIoY2FsbGJhY2tmbiAvKiwgdGhpc0FyZyAqLyl7XG4gICAgICByZXR1cm4gc3BlY2llc0Zyb21MaXN0KHRoaXMsIGFycmF5RmlsdGVyKHZhbGlkYXRlKHRoaXMpLCBjYWxsYmFja2ZuLFxuICAgICAgICBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCkpO1xuICAgIH0sXG4gICAgZmluZDogZnVuY3Rpb24gZmluZChwcmVkaWNhdGUgLyosIHRoaXNBcmcgKi8pe1xuICAgICAgcmV0dXJuIGFycmF5RmluZCh2YWxpZGF0ZSh0aGlzKSwgcHJlZGljYXRlLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBmaW5kSW5kZXg6IGZ1bmN0aW9uIGZpbmRJbmRleChwcmVkaWNhdGUgLyosIHRoaXNBcmcgKi8pe1xuICAgICAgcmV0dXJuIGFycmF5RmluZEluZGV4KHZhbGlkYXRlKHRoaXMpLCBwcmVkaWNhdGUsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goY2FsbGJhY2tmbiAvKiwgdGhpc0FyZyAqLyl7XG4gICAgICBhcnJheUZvckVhY2godmFsaWRhdGUodGhpcyksIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGluZGV4T2Y6IGZ1bmN0aW9uIGluZGV4T2Yoc2VhcmNoRWxlbWVudCAvKiwgZnJvbUluZGV4ICovKXtcbiAgICAgIHJldHVybiBhcnJheUluZGV4T2YodmFsaWRhdGUodGhpcyksIHNlYXJjaEVsZW1lbnQsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGluY2x1ZGVzOiBmdW5jdGlvbiBpbmNsdWRlcyhzZWFyY2hFbGVtZW50IC8qLCBmcm9tSW5kZXggKi8pe1xuICAgICAgcmV0dXJuIGFycmF5SW5jbHVkZXModmFsaWRhdGUodGhpcyksIHNlYXJjaEVsZW1lbnQsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGpvaW46IGZ1bmN0aW9uIGpvaW4oc2VwYXJhdG9yKXsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgICAgcmV0dXJuIGFycmF5Sm9pbi5hcHBseSh2YWxpZGF0ZSh0aGlzKSwgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIGxhc3RJbmRleE9mOiBmdW5jdGlvbiBsYXN0SW5kZXhPZihzZWFyY2hFbGVtZW50IC8qLCBmcm9tSW5kZXggKi8peyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICByZXR1cm4gYXJyYXlMYXN0SW5kZXhPZi5hcHBseSh2YWxpZGF0ZSh0aGlzKSwgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIG1hcDogZnVuY3Rpb24gbWFwKG1hcGZuIC8qLCB0aGlzQXJnICovKXtcbiAgICAgIHJldHVybiAkbWFwKHZhbGlkYXRlKHRoaXMpLCBtYXBmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgcmVkdWNlOiBmdW5jdGlvbiByZWR1Y2UoY2FsbGJhY2tmbiAvKiwgaW5pdGlhbFZhbHVlICovKXsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgICAgcmV0dXJuIGFycmF5UmVkdWNlLmFwcGx5KHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgcmVkdWNlUmlnaHQ6IGZ1bmN0aW9uIHJlZHVjZVJpZ2h0KGNhbGxiYWNrZm4gLyosIGluaXRpYWxWYWx1ZSAqLyl7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICAgIHJldHVybiBhcnJheVJlZHVjZVJpZ2h0LmFwcGx5KHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgcmV2ZXJzZTogZnVuY3Rpb24gcmV2ZXJzZSgpe1xuICAgICAgdmFyIHRoYXQgICA9IHRoaXNcbiAgICAgICAgLCBsZW5ndGggPSB2YWxpZGF0ZSh0aGF0KS5sZW5ndGhcbiAgICAgICAgLCBtaWRkbGUgPSBNYXRoLmZsb29yKGxlbmd0aCAvIDIpXG4gICAgICAgICwgaW5kZXggID0gMFxuICAgICAgICAsIHZhbHVlO1xuICAgICAgd2hpbGUoaW5kZXggPCBtaWRkbGUpe1xuICAgICAgICB2YWx1ZSAgICAgICAgID0gdGhhdFtpbmRleF07XG4gICAgICAgIHRoYXRbaW5kZXgrK10gPSB0aGF0Wy0tbGVuZ3RoXTtcbiAgICAgICAgdGhhdFtsZW5ndGhdICA9IHZhbHVlO1xuICAgICAgfSByZXR1cm4gdGhhdDtcbiAgICB9LFxuICAgIHNvbWU6IGZ1bmN0aW9uIHNvbWUoY2FsbGJhY2tmbiAvKiwgdGhpc0FyZyAqLyl7XG4gICAgICByZXR1cm4gYXJyYXlTb21lKHZhbGlkYXRlKHRoaXMpLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBzb3J0OiBmdW5jdGlvbiBzb3J0KGNvbXBhcmVmbil7XG4gICAgICByZXR1cm4gYXJyYXlTb3J0LmNhbGwodmFsaWRhdGUodGhpcyksIGNvbXBhcmVmbik7XG4gICAgfSxcbiAgICBzdWJhcnJheTogZnVuY3Rpb24gc3ViYXJyYXkoYmVnaW4sIGVuZCl7XG4gICAgICB2YXIgTyAgICAgID0gdmFsaWRhdGUodGhpcylcbiAgICAgICAgLCBsZW5ndGggPSBPLmxlbmd0aFxuICAgICAgICAsICRiZWdpbiA9IHRvSW5kZXgoYmVnaW4sIGxlbmd0aCk7XG4gICAgICByZXR1cm4gbmV3IChzcGVjaWVzQ29uc3RydWN0b3IoTywgT1tERUZfQ09OU1RSVUNUT1JdKSkoXG4gICAgICAgIE8uYnVmZmVyLFxuICAgICAgICBPLmJ5dGVPZmZzZXQgKyAkYmVnaW4gKiBPLkJZVEVTX1BFUl9FTEVNRU5ULFxuICAgICAgICB0b0xlbmd0aCgoZW5kID09PSB1bmRlZmluZWQgPyBsZW5ndGggOiB0b0luZGV4KGVuZCwgbGVuZ3RoKSkgLSAkYmVnaW4pXG4gICAgICApO1xuICAgIH1cbiAgfTtcblxuICB2YXIgJHNsaWNlID0gZnVuY3Rpb24gc2xpY2Uoc3RhcnQsIGVuZCl7XG4gICAgcmV0dXJuIHNwZWNpZXNGcm9tTGlzdCh0aGlzLCBhcnJheVNsaWNlLmNhbGwodmFsaWRhdGUodGhpcyksIHN0YXJ0LCBlbmQpKTtcbiAgfTtcblxuICB2YXIgJHNldCA9IGZ1bmN0aW9uIHNldChhcnJheUxpa2UgLyosIG9mZnNldCAqLyl7XG4gICAgdmFsaWRhdGUodGhpcyk7XG4gICAgdmFyIG9mZnNldCA9IHRvT2Zmc2V0KGFyZ3VtZW50c1sxXSwgMSlcbiAgICAgICwgbGVuZ3RoID0gdGhpcy5sZW5ndGhcbiAgICAgICwgc3JjICAgID0gdG9PYmplY3QoYXJyYXlMaWtlKVxuICAgICAgLCBsZW4gICAgPSB0b0xlbmd0aChzcmMubGVuZ3RoKVxuICAgICAgLCBpbmRleCAgPSAwO1xuICAgIGlmKGxlbiArIG9mZnNldCA+IGxlbmd0aCl0aHJvdyBSYW5nZUVycm9yKFdST05HX0xFTkdUSCk7XG4gICAgd2hpbGUoaW5kZXggPCBsZW4pdGhpc1tvZmZzZXQgKyBpbmRleF0gPSBzcmNbaW5kZXgrK107XG4gIH07XG5cbiAgdmFyICRpdGVyYXRvcnMgPSB7XG4gICAgZW50cmllczogZnVuY3Rpb24gZW50cmllcygpe1xuICAgICAgcmV0dXJuIGFycmF5RW50cmllcy5jYWxsKHZhbGlkYXRlKHRoaXMpKTtcbiAgICB9LFxuICAgIGtleXM6IGZ1bmN0aW9uIGtleXMoKXtcbiAgICAgIHJldHVybiBhcnJheUtleXMuY2FsbCh2YWxpZGF0ZSh0aGlzKSk7XG4gICAgfSxcbiAgICB2YWx1ZXM6IGZ1bmN0aW9uIHZhbHVlcygpe1xuICAgICAgcmV0dXJuIGFycmF5VmFsdWVzLmNhbGwodmFsaWRhdGUodGhpcykpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaXNUQUluZGV4ID0gZnVuY3Rpb24odGFyZ2V0LCBrZXkpe1xuICAgIHJldHVybiBpc09iamVjdCh0YXJnZXQpXG4gICAgICAmJiB0YXJnZXRbVFlQRURfQVJSQVldXG4gICAgICAmJiB0eXBlb2Yga2V5ICE9ICdzeW1ib2wnXG4gICAgICAmJiBrZXkgaW4gdGFyZ2V0XG4gICAgICAmJiBTdHJpbmcoK2tleSkgPT0gU3RyaW5nKGtleSk7XG4gIH07XG4gIHZhciAkZ2V0RGVzYyA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSl7XG4gICAgcmV0dXJuIGlzVEFJbmRleCh0YXJnZXQsIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSkpXG4gICAgICA/IHByb3BlcnR5RGVzYygyLCB0YXJnZXRba2V5XSlcbiAgICAgIDogZ09QRCh0YXJnZXQsIGtleSk7XG4gIH07XG4gIHZhciAkc2V0RGVzYyA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBkZXNjKXtcbiAgICBpZihpc1RBSW5kZXgodGFyZ2V0LCBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpKVxuICAgICAgJiYgaXNPYmplY3QoZGVzYylcbiAgICAgICYmIGhhcyhkZXNjLCAndmFsdWUnKVxuICAgICAgJiYgIWhhcyhkZXNjLCAnZ2V0JylcbiAgICAgICYmICFoYXMoZGVzYywgJ3NldCcpXG4gICAgICAvLyBUT0RPOiBhZGQgdmFsaWRhdGlvbiBkZXNjcmlwdG9yIHcvbyBjYWxsaW5nIGFjY2Vzc29yc1xuICAgICAgJiYgIWRlc2MuY29uZmlndXJhYmxlXG4gICAgICAmJiAoIWhhcyhkZXNjLCAnd3JpdGFibGUnKSB8fCBkZXNjLndyaXRhYmxlKVxuICAgICAgJiYgKCFoYXMoZGVzYywgJ2VudW1lcmFibGUnKSB8fCBkZXNjLmVudW1lcmFibGUpXG4gICAgKXtcbiAgICAgIHRhcmdldFtrZXldID0gZGVzYy52YWx1ZTtcbiAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgfSBlbHNlIHJldHVybiBkUCh0YXJnZXQsIGtleSwgZGVzYyk7XG4gIH07XG5cbiAgaWYoIUFMTF9DT05TVFJVQ1RPUlMpe1xuICAgICRHT1BELmYgPSAkZ2V0RGVzYztcbiAgICAkRFAuZiAgID0gJHNldERlc2M7XG4gIH1cblxuICAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFBTExfQ09OU1RSVUNUT1JTLCAnT2JqZWN0Jywge1xuICAgIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogJGdldERlc2MsXG4gICAgZGVmaW5lUHJvcGVydHk6ICAgICAgICAgICAkc2V0RGVzY1xuICB9KTtcblxuICBpZihmYWlscyhmdW5jdGlvbigpeyBhcnJheVRvU3RyaW5nLmNhbGwoe30pOyB9KSl7XG4gICAgYXJyYXlUb1N0cmluZyA9IGFycmF5VG9Mb2NhbGVTdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpe1xuICAgICAgcmV0dXJuIGFycmF5Sm9pbi5jYWxsKHRoaXMpO1xuICAgIH1cbiAgfVxuXG4gIHZhciAkVHlwZWRBcnJheVByb3RvdHlwZSQgPSByZWRlZmluZUFsbCh7fSwgcHJvdG8pO1xuICByZWRlZmluZUFsbCgkVHlwZWRBcnJheVByb3RvdHlwZSQsICRpdGVyYXRvcnMpO1xuICBoaWRlKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgSVRFUkFUT1IsICRpdGVyYXRvcnMudmFsdWVzKTtcbiAgcmVkZWZpbmVBbGwoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCB7XG4gICAgc2xpY2U6ICAgICAgICAgICRzbGljZSxcbiAgICBzZXQ6ICAgICAgICAgICAgJHNldCxcbiAgICBjb25zdHJ1Y3RvcjogICAgZnVuY3Rpb24oKXsgLyogbm9vcCAqLyB9LFxuICAgIHRvU3RyaW5nOiAgICAgICBhcnJheVRvU3RyaW5nLFxuICAgIHRvTG9jYWxlU3RyaW5nOiAkdG9Mb2NhbGVTdHJpbmdcbiAgfSk7XG4gIGFkZEdldHRlcigkVHlwZWRBcnJheVByb3RvdHlwZSQsICdidWZmZXInLCAnYicpO1xuICBhZGRHZXR0ZXIoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCAnYnl0ZU9mZnNldCcsICdvJyk7XG4gIGFkZEdldHRlcigkVHlwZWRBcnJheVByb3RvdHlwZSQsICdieXRlTGVuZ3RoJywgJ2wnKTtcbiAgYWRkR2V0dGVyKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgJ2xlbmd0aCcsICdlJyk7XG4gIGRQKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgVEFHLCB7XG4gICAgZ2V0OiBmdW5jdGlvbigpeyByZXR1cm4gdGhpc1tUWVBFRF9BUlJBWV07IH1cbiAgfSk7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihLRVksIEJZVEVTLCB3cmFwcGVyLCBDTEFNUEVEKXtcbiAgICBDTEFNUEVEID0gISFDTEFNUEVEO1xuICAgIHZhciBOQU1FICAgICAgID0gS0VZICsgKENMQU1QRUQgPyAnQ2xhbXBlZCcgOiAnJykgKyAnQXJyYXknXG4gICAgICAsIElTTlRfVUlOVDggPSBOQU1FICE9ICdVaW50OEFycmF5J1xuICAgICAgLCBHRVRURVIgICAgID0gJ2dldCcgKyBLRVlcbiAgICAgICwgU0VUVEVSICAgICA9ICdzZXQnICsgS0VZXG4gICAgICAsIFR5cGVkQXJyYXkgPSBnbG9iYWxbTkFNRV1cbiAgICAgICwgQmFzZSAgICAgICA9IFR5cGVkQXJyYXkgfHwge31cbiAgICAgICwgVEFDICAgICAgICA9IFR5cGVkQXJyYXkgJiYgZ2V0UHJvdG90eXBlT2YoVHlwZWRBcnJheSlcbiAgICAgICwgRk9SQ0VEICAgICA9ICFUeXBlZEFycmF5IHx8ICEkdHlwZWQuQUJWXG4gICAgICAsIE8gICAgICAgICAgPSB7fVxuICAgICAgLCBUeXBlZEFycmF5UHJvdG90eXBlID0gVHlwZWRBcnJheSAmJiBUeXBlZEFycmF5W1BST1RPVFlQRV07XG4gICAgdmFyIGdldHRlciA9IGZ1bmN0aW9uKHRoYXQsIGluZGV4KXtcbiAgICAgIHZhciBkYXRhID0gdGhhdC5fZDtcbiAgICAgIHJldHVybiBkYXRhLnZbR0VUVEVSXShpbmRleCAqIEJZVEVTICsgZGF0YS5vLCBMSVRUTEVfRU5ESUFOKTtcbiAgICB9O1xuICAgIHZhciBzZXR0ZXIgPSBmdW5jdGlvbih0aGF0LCBpbmRleCwgdmFsdWUpe1xuICAgICAgdmFyIGRhdGEgPSB0aGF0Ll9kO1xuICAgICAgaWYoQ0xBTVBFRCl2YWx1ZSA9ICh2YWx1ZSA9IE1hdGgucm91bmQodmFsdWUpKSA8IDAgPyAwIDogdmFsdWUgPiAweGZmID8gMHhmZiA6IHZhbHVlICYgMHhmZjtcbiAgICAgIGRhdGEudltTRVRURVJdKGluZGV4ICogQllURVMgKyBkYXRhLm8sIHZhbHVlLCBMSVRUTEVfRU5ESUFOKTtcbiAgICB9O1xuICAgIHZhciBhZGRFbGVtZW50ID0gZnVuY3Rpb24odGhhdCwgaW5kZXgpe1xuICAgICAgZFAodGhhdCwgaW5kZXgsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xuICAgICAgICAgIHJldHVybiBnZXR0ZXIodGhpcywgaW5kZXgpO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKXtcbiAgICAgICAgICByZXR1cm4gc2V0dGVyKHRoaXMsIGluZGV4LCB2YWx1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgIH0pO1xuICAgIH07XG4gICAgaWYoRk9SQ0VEKXtcbiAgICAgIFR5cGVkQXJyYXkgPSB3cmFwcGVyKGZ1bmN0aW9uKHRoYXQsIGRhdGEsICRvZmZzZXQsICRsZW5ndGgpe1xuICAgICAgICBhbkluc3RhbmNlKHRoYXQsIFR5cGVkQXJyYXksIE5BTUUsICdfZCcpO1xuICAgICAgICB2YXIgaW5kZXggID0gMFxuICAgICAgICAgICwgb2Zmc2V0ID0gMFxuICAgICAgICAgICwgYnVmZmVyLCBieXRlTGVuZ3RoLCBsZW5ndGgsIGtsYXNzO1xuICAgICAgICBpZighaXNPYmplY3QoZGF0YSkpe1xuICAgICAgICAgIGxlbmd0aCAgICAgPSBzdHJpY3RUb0xlbmd0aChkYXRhLCB0cnVlKVxuICAgICAgICAgIGJ5dGVMZW5ndGggPSBsZW5ndGggKiBCWVRFUztcbiAgICAgICAgICBidWZmZXIgICAgID0gbmV3ICRBcnJheUJ1ZmZlcihieXRlTGVuZ3RoKTtcbiAgICAgICAgfSBlbHNlIGlmKGRhdGEgaW5zdGFuY2VvZiAkQXJyYXlCdWZmZXIgfHwgKGtsYXNzID0gY2xhc3NvZihkYXRhKSkgPT0gQVJSQVlfQlVGRkVSIHx8IGtsYXNzID09IFNIQVJFRF9CVUZGRVIpe1xuICAgICAgICAgIGJ1ZmZlciA9IGRhdGE7XG4gICAgICAgICAgb2Zmc2V0ID0gdG9PZmZzZXQoJG9mZnNldCwgQllURVMpO1xuICAgICAgICAgIHZhciAkbGVuID0gZGF0YS5ieXRlTGVuZ3RoO1xuICAgICAgICAgIGlmKCRsZW5ndGggPT09IHVuZGVmaW5lZCl7XG4gICAgICAgICAgICBpZigkbGVuICUgQllURVMpdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpO1xuICAgICAgICAgICAgYnl0ZUxlbmd0aCA9ICRsZW4gLSBvZmZzZXQ7XG4gICAgICAgICAgICBpZihieXRlTGVuZ3RoIDwgMCl0aHJvdyBSYW5nZUVycm9yKFdST05HX0xFTkdUSCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGJ5dGVMZW5ndGggPSB0b0xlbmd0aCgkbGVuZ3RoKSAqIEJZVEVTO1xuICAgICAgICAgICAgaWYoYnl0ZUxlbmd0aCArIG9mZnNldCA+ICRsZW4pdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBsZW5ndGggPSBieXRlTGVuZ3RoIC8gQllURVM7XG4gICAgICAgIH0gZWxzZSBpZihUWVBFRF9BUlJBWSBpbiBkYXRhKXtcbiAgICAgICAgICByZXR1cm4gZnJvbUxpc3QoVHlwZWRBcnJheSwgZGF0YSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuICRmcm9tLmNhbGwoVHlwZWRBcnJheSwgZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgaGlkZSh0aGF0LCAnX2QnLCB7XG4gICAgICAgICAgYjogYnVmZmVyLFxuICAgICAgICAgIG86IG9mZnNldCxcbiAgICAgICAgICBsOiBieXRlTGVuZ3RoLFxuICAgICAgICAgIGU6IGxlbmd0aCxcbiAgICAgICAgICB2OiBuZXcgJERhdGFWaWV3KGJ1ZmZlcilcbiAgICAgICAgfSk7XG4gICAgICAgIHdoaWxlKGluZGV4IDwgbGVuZ3RoKWFkZEVsZW1lbnQodGhhdCwgaW5kZXgrKyk7XG4gICAgICB9KTtcbiAgICAgIFR5cGVkQXJyYXlQcm90b3R5cGUgPSBUeXBlZEFycmF5W1BST1RPVFlQRV0gPSBjcmVhdGUoJFR5cGVkQXJyYXlQcm90b3R5cGUkKTtcbiAgICAgIGhpZGUoVHlwZWRBcnJheVByb3RvdHlwZSwgJ2NvbnN0cnVjdG9yJywgVHlwZWRBcnJheSk7XG4gICAgfSBlbHNlIGlmKCEkaXRlckRldGVjdChmdW5jdGlvbihpdGVyKXtcbiAgICAgIC8vIFY4IHdvcmtzIHdpdGggaXRlcmF0b3JzLCBidXQgZmFpbHMgaW4gbWFueSBvdGhlciBjYXNlc1xuICAgICAgLy8gaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQ1NTJcbiAgICAgIG5ldyBUeXBlZEFycmF5KG51bGwpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgICAgbmV3IFR5cGVkQXJyYXkoaXRlcik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgfSwgdHJ1ZSkpe1xuICAgICAgVHlwZWRBcnJheSA9IHdyYXBwZXIoZnVuY3Rpb24odGhhdCwgZGF0YSwgJG9mZnNldCwgJGxlbmd0aCl7XG4gICAgICAgIGFuSW5zdGFuY2UodGhhdCwgVHlwZWRBcnJheSwgTkFNRSk7XG4gICAgICAgIHZhciBrbGFzcztcbiAgICAgICAgLy8gYHdzYCBtb2R1bGUgYnVnLCB0ZW1wb3JhcmlseSByZW1vdmUgdmFsaWRhdGlvbiBsZW5ndGggZm9yIFVpbnQ4QXJyYXlcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3dlYnNvY2tldHMvd3MvcHVsbC82NDVcbiAgICAgICAgaWYoIWlzT2JqZWN0KGRhdGEpKXJldHVybiBuZXcgQmFzZShzdHJpY3RUb0xlbmd0aChkYXRhLCBJU05UX1VJTlQ4KSk7XG4gICAgICAgIGlmKGRhdGEgaW5zdGFuY2VvZiAkQXJyYXlCdWZmZXIgfHwgKGtsYXNzID0gY2xhc3NvZihkYXRhKSkgPT0gQVJSQVlfQlVGRkVSIHx8IGtsYXNzID09IFNIQVJFRF9CVUZGRVIpe1xuICAgICAgICAgIHJldHVybiAkbGVuZ3RoICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgID8gbmV3IEJhc2UoZGF0YSwgdG9PZmZzZXQoJG9mZnNldCwgQllURVMpLCAkbGVuZ3RoKVxuICAgICAgICAgICAgOiAkb2Zmc2V0ICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgPyBuZXcgQmFzZShkYXRhLCB0b09mZnNldCgkb2Zmc2V0LCBCWVRFUykpXG4gICAgICAgICAgICAgIDogbmV3IEJhc2UoZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYoVFlQRURfQVJSQVkgaW4gZGF0YSlyZXR1cm4gZnJvbUxpc3QoVHlwZWRBcnJheSwgZGF0YSk7XG4gICAgICAgIHJldHVybiAkZnJvbS5jYWxsKFR5cGVkQXJyYXksIGRhdGEpO1xuICAgICAgfSk7XG4gICAgICBhcnJheUZvckVhY2goVEFDICE9PSBGdW5jdGlvbi5wcm90b3R5cGUgPyBnT1BOKEJhc2UpLmNvbmNhdChnT1BOKFRBQykpIDogZ09QTihCYXNlKSwgZnVuY3Rpb24oa2V5KXtcbiAgICAgICAgaWYoIShrZXkgaW4gVHlwZWRBcnJheSkpaGlkZShUeXBlZEFycmF5LCBrZXksIEJhc2Vba2V5XSk7XG4gICAgICB9KTtcbiAgICAgIFR5cGVkQXJyYXlbUFJPVE9UWVBFXSA9IFR5cGVkQXJyYXlQcm90b3R5cGU7XG4gICAgICBpZighTElCUkFSWSlUeXBlZEFycmF5UHJvdG90eXBlLmNvbnN0cnVjdG9yID0gVHlwZWRBcnJheTtcbiAgICB9XG4gICAgdmFyICRuYXRpdmVJdGVyYXRvciAgID0gVHlwZWRBcnJheVByb3RvdHlwZVtJVEVSQVRPUl1cbiAgICAgICwgQ09SUkVDVF9JVEVSX05BTUUgPSAhISRuYXRpdmVJdGVyYXRvciAmJiAoJG5hdGl2ZUl0ZXJhdG9yLm5hbWUgPT0gJ3ZhbHVlcycgfHwgJG5hdGl2ZUl0ZXJhdG9yLm5hbWUgPT0gdW5kZWZpbmVkKVxuICAgICAgLCAkaXRlcmF0b3IgICAgICAgICA9ICRpdGVyYXRvcnMudmFsdWVzO1xuICAgIGhpZGUoVHlwZWRBcnJheSwgVFlQRURfQ09OU1RSVUNUT1IsIHRydWUpO1xuICAgIGhpZGUoVHlwZWRBcnJheVByb3RvdHlwZSwgVFlQRURfQVJSQVksIE5BTUUpO1xuICAgIGhpZGUoVHlwZWRBcnJheVByb3RvdHlwZSwgVklFVywgdHJ1ZSk7XG4gICAgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCBERUZfQ09OU1RSVUNUT1IsIFR5cGVkQXJyYXkpO1xuXG4gICAgaWYoQ0xBTVBFRCA/IG5ldyBUeXBlZEFycmF5KDEpW1RBR10gIT0gTkFNRSA6ICEoVEFHIGluIFR5cGVkQXJyYXlQcm90b3R5cGUpKXtcbiAgICAgIGRQKFR5cGVkQXJyYXlQcm90b3R5cGUsIFRBRywge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uKCl7IHJldHVybiBOQU1FOyB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBPW05BTUVdID0gVHlwZWRBcnJheTtcblxuICAgICRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogKFR5cGVkQXJyYXkgIT0gQmFzZSksIE8pO1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LlMsIE5BTUUsIHtcbiAgICAgIEJZVEVTX1BFUl9FTEVNRU5UOiBCWVRFUyxcbiAgICAgIGZyb206ICRmcm9tLFxuICAgICAgb2Y6ICRvZlxuICAgIH0pO1xuXG4gICAgaWYoIShCWVRFU19QRVJfRUxFTUVOVCBpbiBUeXBlZEFycmF5UHJvdG90eXBlKSloaWRlKFR5cGVkQXJyYXlQcm90b3R5cGUsIEJZVEVTX1BFUl9FTEVNRU5ULCBCWVRFUyk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUCwgTkFNRSwgcHJvdG8pO1xuXG4gICAgc2V0U3BlY2llcyhOQU1FKTtcblxuICAgICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogRk9SQ0VEX1NFVCwgTkFNRSwge3NldDogJHNldH0pO1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhQ09SUkVDVF9JVEVSX05BTUUsIE5BTUUsICRpdGVyYXRvcnMpO1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoVHlwZWRBcnJheVByb3RvdHlwZS50b1N0cmluZyAhPSBhcnJheVRvU3RyaW5nKSwgTkFNRSwge3RvU3RyaW5nOiBhcnJheVRvU3RyaW5nfSk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIGZhaWxzKGZ1bmN0aW9uKCl7XG4gICAgICBuZXcgVHlwZWRBcnJheSgxKS5zbGljZSgpO1xuICAgIH0pLCBOQU1FLCB7c2xpY2U6ICRzbGljZX0pO1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoZmFpbHMoZnVuY3Rpb24oKXtcbiAgICAgIHJldHVybiBbMSwgMl0udG9Mb2NhbGVTdHJpbmcoKSAhPSBuZXcgVHlwZWRBcnJheShbMSwgMl0pLnRvTG9jYWxlU3RyaW5nKClcbiAgICB9KSB8fCAhZmFpbHMoZnVuY3Rpb24oKXtcbiAgICAgIFR5cGVkQXJyYXlQcm90b3R5cGUudG9Mb2NhbGVTdHJpbmcuY2FsbChbMSwgMl0pO1xuICAgIH0pKSwgTkFNRSwge3RvTG9jYWxlU3RyaW5nOiAkdG9Mb2NhbGVTdHJpbmd9KTtcblxuICAgIEl0ZXJhdG9yc1tOQU1FXSA9IENPUlJFQ1RfSVRFUl9OQU1FID8gJG5hdGl2ZUl0ZXJhdG9yIDogJGl0ZXJhdG9yO1xuICAgIGlmKCFMSUJSQVJZICYmICFDT1JSRUNUX0lURVJfTkFNRSloaWRlKFR5cGVkQXJyYXlQcm90b3R5cGUsIElURVJBVE9SLCAkaXRlcmF0b3IpO1xuICB9O1xufSBlbHNlIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKXsgLyogZW1wdHkgKi8gfTsiLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsICAgICAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKVxuICAsIERFU0NSSVBUT1JTICAgID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKVxuICAsIExJQlJBUlkgICAgICAgID0gcmVxdWlyZSgnLi9fbGlicmFyeScpXG4gICwgJHR5cGVkICAgICAgICAgPSByZXF1aXJlKCcuL190eXBlZCcpXG4gICwgaGlkZSAgICAgICAgICAgPSByZXF1aXJlKCcuL19oaWRlJylcbiAgLCByZWRlZmluZUFsbCAgICA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpXG4gICwgZmFpbHMgICAgICAgICAgPSByZXF1aXJlKCcuL19mYWlscycpXG4gICwgYW5JbnN0YW5jZSAgICAgPSByZXF1aXJlKCcuL19hbi1pbnN0YW5jZScpXG4gICwgdG9JbnRlZ2VyICAgICAgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJylcbiAgLCB0b0xlbmd0aCAgICAgICA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpXG4gICwgZ09QTiAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmZcbiAgLCBkUCAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmZcbiAgLCBhcnJheUZpbGwgICAgICA9IHJlcXVpcmUoJy4vX2FycmF5LWZpbGwnKVxuICAsIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKVxuICAsIEFSUkFZX0JVRkZFUiAgID0gJ0FycmF5QnVmZmVyJ1xuICAsIERBVEFfVklFVyAgICAgID0gJ0RhdGFWaWV3J1xuICAsIFBST1RPVFlQRSAgICAgID0gJ3Byb3RvdHlwZSdcbiAgLCBXUk9OR19MRU5HVEggICA9ICdXcm9uZyBsZW5ndGghJ1xuICAsIFdST05HX0lOREVYICAgID0gJ1dyb25nIGluZGV4ISdcbiAgLCAkQXJyYXlCdWZmZXIgICA9IGdsb2JhbFtBUlJBWV9CVUZGRVJdXG4gICwgJERhdGFWaWV3ICAgICAgPSBnbG9iYWxbREFUQV9WSUVXXVxuICAsIE1hdGggICAgICAgICAgID0gZ2xvYmFsLk1hdGhcbiAgLCBSYW5nZUVycm9yICAgICA9IGdsb2JhbC5SYW5nZUVycm9yXG4gICwgSW5maW5pdHkgICAgICAgPSBnbG9iYWwuSW5maW5pdHlcbiAgLCBCYXNlQnVmZmVyICAgICA9ICRBcnJheUJ1ZmZlclxuICAsIGFicyAgICAgICAgICAgID0gTWF0aC5hYnNcbiAgLCBwb3cgICAgICAgICAgICA9IE1hdGgucG93XG4gICwgZmxvb3IgICAgICAgICAgPSBNYXRoLmZsb29yXG4gICwgbG9nICAgICAgICAgICAgPSBNYXRoLmxvZ1xuICAsIExOMiAgICAgICAgICAgID0gTWF0aC5MTjJcbiAgLCBCVUZGRVIgICAgICAgICA9ICdidWZmZXInXG4gICwgQllURV9MRU5HVEggICAgPSAnYnl0ZUxlbmd0aCdcbiAgLCBCWVRFX09GRlNFVCAgICA9ICdieXRlT2Zmc2V0J1xuICAsICRCVUZGRVIgICAgICAgID0gREVTQ1JJUFRPUlMgPyAnX2InIDogQlVGRkVSXG4gICwgJExFTkdUSCAgICAgICAgPSBERVNDUklQVE9SUyA/ICdfbCcgOiBCWVRFX0xFTkdUSFxuICAsICRPRkZTRVQgICAgICAgID0gREVTQ1JJUFRPUlMgPyAnX28nIDogQllURV9PRkZTRVQ7XG5cbi8vIElFRUU3NTQgY29udmVyc2lvbnMgYmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL2Zlcm9zcy9pZWVlNzU0XG52YXIgcGFja0lFRUU3NTQgPSBmdW5jdGlvbih2YWx1ZSwgbUxlbiwgbkJ5dGVzKXtcbiAgdmFyIGJ1ZmZlciA9IEFycmF5KG5CeXRlcylcbiAgICAsIGVMZW4gICA9IG5CeXRlcyAqIDggLSBtTGVuIC0gMVxuICAgICwgZU1heCAgID0gKDEgPDwgZUxlbikgLSAxXG4gICAgLCBlQmlhcyAgPSBlTWF4ID4+IDFcbiAgICAsIHJ0ICAgICA9IG1MZW4gPT09IDIzID8gcG93KDIsIC0yNCkgLSBwb3coMiwgLTc3KSA6IDBcbiAgICAsIGkgICAgICA9IDBcbiAgICAsIHMgICAgICA9IHZhbHVlIDwgMCB8fCB2YWx1ZSA9PT0gMCAmJiAxIC8gdmFsdWUgPCAwID8gMSA6IDBcbiAgICAsIGUsIG0sIGM7XG4gIHZhbHVlID0gYWJzKHZhbHVlKVxuICBpZih2YWx1ZSAhPSB2YWx1ZSB8fCB2YWx1ZSA9PT0gSW5maW5pdHkpe1xuICAgIG0gPSB2YWx1ZSAhPSB2YWx1ZSA/IDEgOiAwO1xuICAgIGUgPSBlTWF4O1xuICB9IGVsc2Uge1xuICAgIGUgPSBmbG9vcihsb2codmFsdWUpIC8gTE4yKTtcbiAgICBpZih2YWx1ZSAqIChjID0gcG93KDIsIC1lKSkgPCAxKXtcbiAgICAgIGUtLTtcbiAgICAgIGMgKj0gMjtcbiAgICB9XG4gICAgaWYoZSArIGVCaWFzID49IDEpe1xuICAgICAgdmFsdWUgKz0gcnQgLyBjO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSArPSBydCAqIHBvdygyLCAxIC0gZUJpYXMpO1xuICAgIH1cbiAgICBpZih2YWx1ZSAqIGMgPj0gMil7XG4gICAgICBlKys7XG4gICAgICBjIC89IDI7XG4gICAgfVxuICAgIGlmKGUgKyBlQmlhcyA+PSBlTWF4KXtcbiAgICAgIG0gPSAwO1xuICAgICAgZSA9IGVNYXg7XG4gICAgfSBlbHNlIGlmKGUgKyBlQmlhcyA+PSAxKXtcbiAgICAgIG0gPSAodmFsdWUgKiBjIC0gMSkgKiBwb3coMiwgbUxlbik7XG4gICAgICBlID0gZSArIGVCaWFzO1xuICAgIH0gZWxzZSB7XG4gICAgICBtID0gdmFsdWUgKiBwb3coMiwgZUJpYXMgLSAxKSAqIHBvdygyLCBtTGVuKTtcbiAgICAgIGUgPSAwO1xuICAgIH1cbiAgfVxuICBmb3IoOyBtTGVuID49IDg7IGJ1ZmZlcltpKytdID0gbSAmIDI1NSwgbSAvPSAyNTYsIG1MZW4gLT0gOCk7XG4gIGUgPSBlIDw8IG1MZW4gfCBtO1xuICBlTGVuICs9IG1MZW47XG4gIGZvcig7IGVMZW4gPiAwOyBidWZmZXJbaSsrXSA9IGUgJiAyNTUsIGUgLz0gMjU2LCBlTGVuIC09IDgpO1xuICBidWZmZXJbLS1pXSB8PSBzICogMTI4O1xuICByZXR1cm4gYnVmZmVyO1xufTtcbnZhciB1bnBhY2tJRUVFNzU0ID0gZnVuY3Rpb24oYnVmZmVyLCBtTGVuLCBuQnl0ZXMpe1xuICB2YXIgZUxlbiAgPSBuQnl0ZXMgKiA4IC0gbUxlbiAtIDFcbiAgICAsIGVNYXggID0gKDEgPDwgZUxlbikgLSAxXG4gICAgLCBlQmlhcyA9IGVNYXggPj4gMVxuICAgICwgbkJpdHMgPSBlTGVuIC0gN1xuICAgICwgaSAgICAgPSBuQnl0ZXMgLSAxXG4gICAgLCBzICAgICA9IGJ1ZmZlcltpLS1dXG4gICAgLCBlICAgICA9IHMgJiAxMjdcbiAgICAsIG07XG4gIHMgPj49IDc7XG4gIGZvcig7IG5CaXRzID4gMDsgZSA9IGUgKiAyNTYgKyBidWZmZXJbaV0sIGktLSwgbkJpdHMgLT0gOCk7XG4gIG0gPSBlICYgKDEgPDwgLW5CaXRzKSAtIDE7XG4gIGUgPj49IC1uQml0cztcbiAgbkJpdHMgKz0gbUxlbjtcbiAgZm9yKDsgbkJpdHMgPiAwOyBtID0gbSAqIDI1NiArIGJ1ZmZlcltpXSwgaS0tLCBuQml0cyAtPSA4KTtcbiAgaWYoZSA9PT0gMCl7XG4gICAgZSA9IDEgLSBlQmlhcztcbiAgfSBlbHNlIGlmKGUgPT09IGVNYXgpe1xuICAgIHJldHVybiBtID8gTmFOIDogcyA/IC1JbmZpbml0eSA6IEluZmluaXR5O1xuICB9IGVsc2Uge1xuICAgIG0gPSBtICsgcG93KDIsIG1MZW4pO1xuICAgIGUgPSBlIC0gZUJpYXM7XG4gIH0gcmV0dXJuIChzID8gLTEgOiAxKSAqIG0gKiBwb3coMiwgZSAtIG1MZW4pO1xufTtcblxudmFyIHVucGFja0kzMiA9IGZ1bmN0aW9uKGJ5dGVzKXtcbiAgcmV0dXJuIGJ5dGVzWzNdIDw8IDI0IHwgYnl0ZXNbMl0gPDwgMTYgfCBieXRlc1sxXSA8PCA4IHwgYnl0ZXNbMF07XG59O1xudmFyIHBhY2tJOCA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIFtpdCAmIDB4ZmZdO1xufTtcbnZhciBwYWNrSTE2ID0gZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gW2l0ICYgMHhmZiwgaXQgPj4gOCAmIDB4ZmZdO1xufTtcbnZhciBwYWNrSTMyID0gZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gW2l0ICYgMHhmZiwgaXQgPj4gOCAmIDB4ZmYsIGl0ID4+IDE2ICYgMHhmZiwgaXQgPj4gMjQgJiAweGZmXTtcbn07XG52YXIgcGFja0Y2NCA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIHBhY2tJRUVFNzU0KGl0LCA1MiwgOCk7XG59O1xudmFyIHBhY2tGMzIgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBwYWNrSUVFRTc1NChpdCwgMjMsIDQpO1xufTtcblxudmFyIGFkZEdldHRlciA9IGZ1bmN0aW9uKEMsIGtleSwgaW50ZXJuYWwpe1xuICBkUChDW1BST1RPVFlQRV0sIGtleSwge2dldDogZnVuY3Rpb24oKXsgcmV0dXJuIHRoaXNbaW50ZXJuYWxdOyB9fSk7XG59O1xuXG52YXIgZ2V0ID0gZnVuY3Rpb24odmlldywgYnl0ZXMsIGluZGV4LCBpc0xpdHRsZUVuZGlhbil7XG4gIHZhciBudW1JbmRleCA9ICtpbmRleFxuICAgICwgaW50SW5kZXggPSB0b0ludGVnZXIobnVtSW5kZXgpO1xuICBpZihudW1JbmRleCAhPSBpbnRJbmRleCB8fCBpbnRJbmRleCA8IDAgfHwgaW50SW5kZXggKyBieXRlcyA+IHZpZXdbJExFTkdUSF0pdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19JTkRFWCk7XG4gIHZhciBzdG9yZSA9IHZpZXdbJEJVRkZFUl0uX2JcbiAgICAsIHN0YXJ0ID0gaW50SW5kZXggKyB2aWV3WyRPRkZTRVRdXG4gICAgLCBwYWNrICA9IHN0b3JlLnNsaWNlKHN0YXJ0LCBzdGFydCArIGJ5dGVzKTtcbiAgcmV0dXJuIGlzTGl0dGxlRW5kaWFuID8gcGFjayA6IHBhY2sucmV2ZXJzZSgpO1xufTtcbnZhciBzZXQgPSBmdW5jdGlvbih2aWV3LCBieXRlcywgaW5kZXgsIGNvbnZlcnNpb24sIHZhbHVlLCBpc0xpdHRsZUVuZGlhbil7XG4gIHZhciBudW1JbmRleCA9ICtpbmRleFxuICAgICwgaW50SW5kZXggPSB0b0ludGVnZXIobnVtSW5kZXgpO1xuICBpZihudW1JbmRleCAhPSBpbnRJbmRleCB8fCBpbnRJbmRleCA8IDAgfHwgaW50SW5kZXggKyBieXRlcyA+IHZpZXdbJExFTkdUSF0pdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19JTkRFWCk7XG4gIHZhciBzdG9yZSA9IHZpZXdbJEJVRkZFUl0uX2JcbiAgICAsIHN0YXJ0ID0gaW50SW5kZXggKyB2aWV3WyRPRkZTRVRdXG4gICAgLCBwYWNrICA9IGNvbnZlcnNpb24oK3ZhbHVlKTtcbiAgZm9yKHZhciBpID0gMDsgaSA8IGJ5dGVzOyBpKyspc3RvcmVbc3RhcnQgKyBpXSA9IHBhY2tbaXNMaXR0bGVFbmRpYW4gPyBpIDogYnl0ZXMgLSBpIC0gMV07XG59O1xuXG52YXIgdmFsaWRhdGVBcnJheUJ1ZmZlckFyZ3VtZW50cyA9IGZ1bmN0aW9uKHRoYXQsIGxlbmd0aCl7XG4gIGFuSW5zdGFuY2UodGhhdCwgJEFycmF5QnVmZmVyLCBBUlJBWV9CVUZGRVIpO1xuICB2YXIgbnVtYmVyTGVuZ3RoID0gK2xlbmd0aFxuICAgICwgYnl0ZUxlbmd0aCAgID0gdG9MZW5ndGgobnVtYmVyTGVuZ3RoKTtcbiAgaWYobnVtYmVyTGVuZ3RoICE9IGJ5dGVMZW5ndGgpdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpO1xuICByZXR1cm4gYnl0ZUxlbmd0aDtcbn07XG5cbmlmKCEkdHlwZWQuQUJWKXtcbiAgJEFycmF5QnVmZmVyID0gZnVuY3Rpb24gQXJyYXlCdWZmZXIobGVuZ3RoKXtcbiAgICB2YXIgYnl0ZUxlbmd0aCA9IHZhbGlkYXRlQXJyYXlCdWZmZXJBcmd1bWVudHModGhpcywgbGVuZ3RoKTtcbiAgICB0aGlzLl9iICAgICAgID0gYXJyYXlGaWxsLmNhbGwoQXJyYXkoYnl0ZUxlbmd0aCksIDApO1xuICAgIHRoaXNbJExFTkdUSF0gPSBieXRlTGVuZ3RoO1xuICB9O1xuXG4gICREYXRhVmlldyA9IGZ1bmN0aW9uIERhdGFWaWV3KGJ1ZmZlciwgYnl0ZU9mZnNldCwgYnl0ZUxlbmd0aCl7XG4gICAgYW5JbnN0YW5jZSh0aGlzLCAkRGF0YVZpZXcsIERBVEFfVklFVyk7XG4gICAgYW5JbnN0YW5jZShidWZmZXIsICRBcnJheUJ1ZmZlciwgREFUQV9WSUVXKTtcbiAgICB2YXIgYnVmZmVyTGVuZ3RoID0gYnVmZmVyWyRMRU5HVEhdXG4gICAgICAsIG9mZnNldCAgICAgICA9IHRvSW50ZWdlcihieXRlT2Zmc2V0KTtcbiAgICBpZihvZmZzZXQgPCAwIHx8IG9mZnNldCA+IGJ1ZmZlckxlbmd0aCl0aHJvdyBSYW5nZUVycm9yKCdXcm9uZyBvZmZzZXQhJyk7XG4gICAgYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGggPT09IHVuZGVmaW5lZCA/IGJ1ZmZlckxlbmd0aCAtIG9mZnNldCA6IHRvTGVuZ3RoKGJ5dGVMZW5ndGgpO1xuICAgIGlmKG9mZnNldCArIGJ5dGVMZW5ndGggPiBidWZmZXJMZW5ndGgpdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpO1xuICAgIHRoaXNbJEJVRkZFUl0gPSBidWZmZXI7XG4gICAgdGhpc1skT0ZGU0VUXSA9IG9mZnNldDtcbiAgICB0aGlzWyRMRU5HVEhdID0gYnl0ZUxlbmd0aDtcbiAgfTtcblxuICBpZihERVNDUklQVE9SUyl7XG4gICAgYWRkR2V0dGVyKCRBcnJheUJ1ZmZlciwgQllURV9MRU5HVEgsICdfbCcpO1xuICAgIGFkZEdldHRlcigkRGF0YVZpZXcsIEJVRkZFUiwgJ19iJyk7XG4gICAgYWRkR2V0dGVyKCREYXRhVmlldywgQllURV9MRU5HVEgsICdfbCcpO1xuICAgIGFkZEdldHRlcigkRGF0YVZpZXcsIEJZVEVfT0ZGU0VULCAnX28nKTtcbiAgfVxuXG4gIHJlZGVmaW5lQWxsKCREYXRhVmlld1tQUk9UT1RZUEVdLCB7XG4gICAgZ2V0SW50ODogZnVuY3Rpb24gZ2V0SW50OChieXRlT2Zmc2V0KXtcbiAgICAgIHJldHVybiBnZXQodGhpcywgMSwgYnl0ZU9mZnNldClbMF0gPDwgMjQgPj4gMjQ7XG4gICAgfSxcbiAgICBnZXRVaW50ODogZnVuY3Rpb24gZ2V0VWludDgoYnl0ZU9mZnNldCl7XG4gICAgICByZXR1cm4gZ2V0KHRoaXMsIDEsIGJ5dGVPZmZzZXQpWzBdO1xuICAgIH0sXG4gICAgZ2V0SW50MTY6IGZ1bmN0aW9uIGdldEludDE2KGJ5dGVPZmZzZXQgLyosIGxpdHRsZUVuZGlhbiAqLyl7XG4gICAgICB2YXIgYnl0ZXMgPSBnZXQodGhpcywgMiwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKTtcbiAgICAgIHJldHVybiAoYnl0ZXNbMV0gPDwgOCB8IGJ5dGVzWzBdKSA8PCAxNiA+PiAxNjtcbiAgICB9LFxuICAgIGdldFVpbnQxNjogZnVuY3Rpb24gZ2V0VWludDE2KGJ5dGVPZmZzZXQgLyosIGxpdHRsZUVuZGlhbiAqLyl7XG4gICAgICB2YXIgYnl0ZXMgPSBnZXQodGhpcywgMiwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKTtcbiAgICAgIHJldHVybiBieXRlc1sxXSA8PCA4IHwgYnl0ZXNbMF07XG4gICAgfSxcbiAgICBnZXRJbnQzMjogZnVuY3Rpb24gZ2V0SW50MzIoYnl0ZU9mZnNldCAvKiwgbGl0dGxlRW5kaWFuICovKXtcbiAgICAgIHJldHVybiB1bnBhY2tJMzIoZ2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSkpO1xuICAgIH0sXG4gICAgZ2V0VWludDMyOiBmdW5jdGlvbiBnZXRVaW50MzIoYnl0ZU9mZnNldCAvKiwgbGl0dGxlRW5kaWFuICovKXtcbiAgICAgIHJldHVybiB1bnBhY2tJMzIoZ2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSkpID4+PiAwO1xuICAgIH0sXG4gICAgZ2V0RmxvYXQzMjogZnVuY3Rpb24gZ2V0RmxvYXQzMihieXRlT2Zmc2V0IC8qLCBsaXR0bGVFbmRpYW4gKi8pe1xuICAgICAgcmV0dXJuIHVucGFja0lFRUU3NTQoZ2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSksIDIzLCA0KTtcbiAgICB9LFxuICAgIGdldEZsb2F0NjQ6IGZ1bmN0aW9uIGdldEZsb2F0NjQoYnl0ZU9mZnNldCAvKiwgbGl0dGxlRW5kaWFuICovKXtcbiAgICAgIHJldHVybiB1bnBhY2tJRUVFNzU0KGdldCh0aGlzLCA4LCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pLCA1MiwgOCk7XG4gICAgfSxcbiAgICBzZXRJbnQ4OiBmdW5jdGlvbiBzZXRJbnQ4KGJ5dGVPZmZzZXQsIHZhbHVlKXtcbiAgICAgIHNldCh0aGlzLCAxLCBieXRlT2Zmc2V0LCBwYWNrSTgsIHZhbHVlKTtcbiAgICB9LFxuICAgIHNldFVpbnQ4OiBmdW5jdGlvbiBzZXRVaW50OChieXRlT2Zmc2V0LCB2YWx1ZSl7XG4gICAgICBzZXQodGhpcywgMSwgYnl0ZU9mZnNldCwgcGFja0k4LCB2YWx1ZSk7XG4gICAgfSxcbiAgICBzZXRJbnQxNjogZnVuY3Rpb24gc2V0SW50MTYoYnl0ZU9mZnNldCwgdmFsdWUgLyosIGxpdHRsZUVuZGlhbiAqLyl7XG4gICAgICBzZXQodGhpcywgMiwgYnl0ZU9mZnNldCwgcGFja0kxNiwgdmFsdWUsIGFyZ3VtZW50c1syXSk7XG4gICAgfSxcbiAgICBzZXRVaW50MTY6IGZ1bmN0aW9uIHNldFVpbnQxNihieXRlT2Zmc2V0LCB2YWx1ZSAvKiwgbGl0dGxlRW5kaWFuICovKXtcbiAgICAgIHNldCh0aGlzLCAyLCBieXRlT2Zmc2V0LCBwYWNrSTE2LCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldEludDMyOiBmdW5jdGlvbiBzZXRJbnQzMihieXRlT2Zmc2V0LCB2YWx1ZSAvKiwgbGl0dGxlRW5kaWFuICovKXtcbiAgICAgIHNldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBwYWNrSTMyLCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldFVpbnQzMjogZnVuY3Rpb24gc2V0VWludDMyKGJ5dGVPZmZzZXQsIHZhbHVlIC8qLCBsaXR0bGVFbmRpYW4gKi8pe1xuICAgICAgc2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIHBhY2tJMzIsIHZhbHVlLCBhcmd1bWVudHNbMl0pO1xuICAgIH0sXG4gICAgc2V0RmxvYXQzMjogZnVuY3Rpb24gc2V0RmxvYXQzMihieXRlT2Zmc2V0LCB2YWx1ZSAvKiwgbGl0dGxlRW5kaWFuICovKXtcbiAgICAgIHNldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBwYWNrRjMyLCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldEZsb2F0NjQ6IGZ1bmN0aW9uIHNldEZsb2F0NjQoYnl0ZU9mZnNldCwgdmFsdWUgLyosIGxpdHRsZUVuZGlhbiAqLyl7XG4gICAgICBzZXQodGhpcywgOCwgYnl0ZU9mZnNldCwgcGFja0Y2NCwgdmFsdWUsIGFyZ3VtZW50c1syXSk7XG4gICAgfVxuICB9KTtcbn0gZWxzZSB7XG4gIGlmKCFmYWlscyhmdW5jdGlvbigpe1xuICAgIG5ldyAkQXJyYXlCdWZmZXI7ICAgICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICB9KSB8fCAhZmFpbHMoZnVuY3Rpb24oKXtcbiAgICBuZXcgJEFycmF5QnVmZmVyKC41KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgfSkpe1xuICAgICRBcnJheUJ1ZmZlciA9IGZ1bmN0aW9uIEFycmF5QnVmZmVyKGxlbmd0aCl7XG4gICAgICByZXR1cm4gbmV3IEJhc2VCdWZmZXIodmFsaWRhdGVBcnJheUJ1ZmZlckFyZ3VtZW50cyh0aGlzLCBsZW5ndGgpKTtcbiAgICB9O1xuICAgIHZhciBBcnJheUJ1ZmZlclByb3RvID0gJEFycmF5QnVmZmVyW1BST1RPVFlQRV0gPSBCYXNlQnVmZmVyW1BST1RPVFlQRV07XG4gICAgZm9yKHZhciBrZXlzID0gZ09QTihCYXNlQnVmZmVyKSwgaiA9IDAsIGtleTsga2V5cy5sZW5ndGggPiBqOyApe1xuICAgICAgaWYoISgoa2V5ID0ga2V5c1tqKytdKSBpbiAkQXJyYXlCdWZmZXIpKWhpZGUoJEFycmF5QnVmZmVyLCBrZXksIEJhc2VCdWZmZXJba2V5XSk7XG4gICAgfTtcbiAgICBpZighTElCUkFSWSlBcnJheUJ1ZmZlclByb3RvLmNvbnN0cnVjdG9yID0gJEFycmF5QnVmZmVyO1xuICB9XG4gIC8vIGlPUyBTYWZhcmkgNy54IGJ1Z1xuICB2YXIgdmlldyA9IG5ldyAkRGF0YVZpZXcobmV3ICRBcnJheUJ1ZmZlcigyKSlcbiAgICAsICRzZXRJbnQ4ID0gJERhdGFWaWV3W1BST1RPVFlQRV0uc2V0SW50ODtcbiAgdmlldy5zZXRJbnQ4KDAsIDIxNDc0ODM2NDgpO1xuICB2aWV3LnNldEludDgoMSwgMjE0NzQ4MzY0OSk7XG4gIGlmKHZpZXcuZ2V0SW50OCgwKSB8fCAhdmlldy5nZXRJbnQ4KDEpKXJlZGVmaW5lQWxsKCREYXRhVmlld1tQUk9UT1RZUEVdLCB7XG4gICAgc2V0SW50ODogZnVuY3Rpb24gc2V0SW50OChieXRlT2Zmc2V0LCB2YWx1ZSl7XG4gICAgICAkc2V0SW50OC5jYWxsKHRoaXMsIGJ5dGVPZmZzZXQsIHZhbHVlIDw8IDI0ID4+IDI0KTtcbiAgICB9LFxuICAgIHNldFVpbnQ4OiBmdW5jdGlvbiBzZXRVaW50OChieXRlT2Zmc2V0LCB2YWx1ZSl7XG4gICAgICAkc2V0SW50OC5jYWxsKHRoaXMsIGJ5dGVPZmZzZXQsIHZhbHVlIDw8IDI0ID4+IDI0KTtcbiAgICB9XG4gIH0sIHRydWUpO1xufVxuc2V0VG9TdHJpbmdUYWcoJEFycmF5QnVmZmVyLCBBUlJBWV9CVUZGRVIpO1xuc2V0VG9TdHJpbmdUYWcoJERhdGFWaWV3LCBEQVRBX1ZJRVcpO1xuaGlkZSgkRGF0YVZpZXdbUFJPVE9UWVBFXSwgJHR5cGVkLlZJRVcsIHRydWUpO1xuZXhwb3J0c1tBUlJBWV9CVUZGRVJdID0gJEFycmF5QnVmZmVyO1xuZXhwb3J0c1tEQVRBX1ZJRVddID0gJERhdGFWaWV3OyIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKVxuICAsIGhpZGUgICA9IHJlcXVpcmUoJy4vX2hpZGUnKVxuICAsIHVpZCAgICA9IHJlcXVpcmUoJy4vX3VpZCcpXG4gICwgVFlQRUQgID0gdWlkKCd0eXBlZF9hcnJheScpXG4gICwgVklFVyAgID0gdWlkKCd2aWV3JylcbiAgLCBBQlYgICAgPSAhIShnbG9iYWwuQXJyYXlCdWZmZXIgJiYgZ2xvYmFsLkRhdGFWaWV3KVxuICAsIENPTlNUUiA9IEFCVlxuICAsIGkgPSAwLCBsID0gOSwgVHlwZWQ7XG5cbnZhciBUeXBlZEFycmF5Q29uc3RydWN0b3JzID0gKFxuICAnSW50OEFycmF5LFVpbnQ4QXJyYXksVWludDhDbGFtcGVkQXJyYXksSW50MTZBcnJheSxVaW50MTZBcnJheSxJbnQzMkFycmF5LFVpbnQzMkFycmF5LEZsb2F0MzJBcnJheSxGbG9hdDY0QXJyYXknXG4pLnNwbGl0KCcsJyk7XG5cbndoaWxlKGkgPCBsKXtcbiAgaWYoVHlwZWQgPSBnbG9iYWxbVHlwZWRBcnJheUNvbnN0cnVjdG9yc1tpKytdXSl7XG4gICAgaGlkZShUeXBlZC5wcm90b3R5cGUsIFRZUEVELCB0cnVlKTtcbiAgICBoaWRlKFR5cGVkLnByb3RvdHlwZSwgVklFVywgdHJ1ZSk7XG4gIH0gZWxzZSBDT05TVFIgPSBmYWxzZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIEFCVjogICAgQUJWLFxuICBDT05TVFI6IENPTlNUUixcbiAgVFlQRUQ6ICBUWVBFRCxcbiAgVklFVzogICBWSUVXXG59OyIsInZhciBpZCA9IDBcbiAgLCBweCA9IE1hdGgucmFuZG9tKCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGtleSl7XG4gIHJldHVybiAnU3ltYm9sKCcuY29uY2F0KGtleSA9PT0gdW5kZWZpbmVkID8gJycgOiBrZXksICcpXycsICgrK2lkICsgcHgpLnRvU3RyaW5nKDM2KSk7XG59OyIsInZhciBnbG9iYWwgICAgICAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpXG4gICwgY29yZSAgICAgICAgICAgPSByZXF1aXJlKCcuL19jb3JlJylcbiAgLCBMSUJSQVJZICAgICAgICA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKVxuICAsIHdrc0V4dCAgICAgICAgID0gcmVxdWlyZSgnLi9fd2tzLWV4dCcpXG4gICwgZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihuYW1lKXtcbiAgdmFyICRTeW1ib2wgPSBjb3JlLlN5bWJvbCB8fCAoY29yZS5TeW1ib2wgPSBMSUJSQVJZID8ge30gOiBnbG9iYWwuU3ltYm9sIHx8IHt9KTtcbiAgaWYobmFtZS5jaGFyQXQoMCkgIT0gJ18nICYmICEobmFtZSBpbiAkU3ltYm9sKSlkZWZpbmVQcm9wZXJ0eSgkU3ltYm9sLCBuYW1lLCB7dmFsdWU6IHdrc0V4dC5mKG5hbWUpfSk7XG59OyIsImV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX3drcycpOyIsInZhciBzdG9yZSAgICAgID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ3drcycpXG4gICwgdWlkICAgICAgICA9IHJlcXVpcmUoJy4vX3VpZCcpXG4gICwgU3ltYm9sICAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLlN5bWJvbFxuICAsIFVTRV9TWU1CT0wgPSB0eXBlb2YgU3ltYm9sID09ICdmdW5jdGlvbic7XG5cbnZhciAkZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obmFtZSl7XG4gIHJldHVybiBzdG9yZVtuYW1lXSB8fCAoc3RvcmVbbmFtZV0gPVxuICAgIFVTRV9TWU1CT0wgJiYgU3ltYm9sW25hbWVdIHx8IChVU0VfU1lNQk9MID8gU3ltYm9sIDogdWlkKSgnU3ltYm9sLicgKyBuYW1lKSk7XG59O1xuXG4kZXhwb3J0cy5zdG9yZSA9IHN0b3JlOyIsInZhciBjbGFzc29mICAgPSByZXF1aXJlKCcuL19jbGFzc29mJylcbiAgLCBJVEVSQVRPUiAgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKVxuICAsIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb3JlJykuZ2V0SXRlcmF0b3JNZXRob2QgPSBmdW5jdGlvbihpdCl7XG4gIGlmKGl0ICE9IHVuZGVmaW5lZClyZXR1cm4gaXRbSVRFUkFUT1JdXG4gICAgfHwgaXRbJ0BAaXRlcmF0b3InXVxuICAgIHx8IEl0ZXJhdG9yc1tjbGFzc29mKGl0KV07XG59OyIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9iZW5qYW1pbmdyL1JleEV4cC5lc2NhcGVcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCAkcmUgICAgID0gcmVxdWlyZSgnLi9fcmVwbGFjZXInKSgvW1xcXFxeJCorPy4oKXxbXFxde31dL2csICdcXFxcJCYnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWdFeHAnLCB7ZXNjYXBlOiBmdW5jdGlvbiBlc2NhcGUoaXQpeyByZXR1cm4gJHJlKGl0KTsgfX0pO1xuIiwiLy8gMjIuMS4zLjMgQXJyYXkucHJvdG90eXBlLmNvcHlXaXRoaW4odGFyZ2V0LCBzdGFydCwgZW5kID0gdGhpcy5sZW5ndGgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5Jywge2NvcHlXaXRoaW46IHJlcXVpcmUoJy4vX2FycmF5LWNvcHktd2l0aGluJyl9KTtcblxucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoJ2NvcHlXaXRoaW4nKTsiLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgJGV2ZXJ5ICA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSg0KTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLmV2ZXJ5LCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuNSAvIDE1LjQuNC4xNiBBcnJheS5wcm90b3R5cGUuZXZlcnkoY2FsbGJhY2tmbiBbLCB0aGlzQXJnXSlcbiAgZXZlcnk6IGZ1bmN0aW9uIGV2ZXJ5KGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKXtcbiAgICByZXR1cm4gJGV2ZXJ5KHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50c1sxXSk7XG4gIH1cbn0pOyIsIi8vIDIyLjEuMy42IEFycmF5LnByb3RvdHlwZS5maWxsKHZhbHVlLCBzdGFydCA9IDAsIGVuZCA9IHRoaXMubGVuZ3RoKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdBcnJheScsIHtmaWxsOiByZXF1aXJlKCcuL19hcnJheS1maWxsJyl9KTtcblxucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoJ2ZpbGwnKTsiLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgJGZpbHRlciA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSgyKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLmZpbHRlciwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjcgLyAxNS40LjQuMjAgQXJyYXkucHJvdG90eXBlLmZpbHRlcihjYWxsYmFja2ZuIFssIHRoaXNBcmddKVxuICBmaWx0ZXI6IGZ1bmN0aW9uIGZpbHRlcihjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLyl7XG4gICAgcmV0dXJuICRmaWx0ZXIodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7IiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjIuMS4zLjkgQXJyYXkucHJvdG90eXBlLmZpbmRJbmRleChwcmVkaWNhdGUsIHRoaXNBcmcgPSB1bmRlZmluZWQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgJGZpbmQgICA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSg2KVxuICAsIEtFWSAgICAgPSAnZmluZEluZGV4J1xuICAsIGZvcmNlZCAgPSB0cnVlO1xuLy8gU2hvdWxkbid0IHNraXAgaG9sZXNcbmlmKEtFWSBpbiBbXSlBcnJheSgxKVtLRVldKGZ1bmN0aW9uKCl7IGZvcmNlZCA9IGZhbHNlOyB9KTtcbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZm9yY2VkLCAnQXJyYXknLCB7XG4gIGZpbmRJbmRleDogZnVuY3Rpb24gZmluZEluZGV4KGNhbGxiYWNrZm4vKiwgdGhhdCA9IHVuZGVmaW5lZCAqLyl7XG4gICAgcmV0dXJuICRmaW5kKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKShLRVkpOyIsIid1c2Ugc3RyaWN0Jztcbi8vIDIyLjEuMy44IEFycmF5LnByb3RvdHlwZS5maW5kKHByZWRpY2F0ZSwgdGhpc0FyZyA9IHVuZGVmaW5lZClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCAkZmluZCAgID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDUpXG4gICwgS0VZICAgICA9ICdmaW5kJ1xuICAsIGZvcmNlZCAgPSB0cnVlO1xuLy8gU2hvdWxkbid0IHNraXAgaG9sZXNcbmlmKEtFWSBpbiBbXSlBcnJheSgxKVtLRVldKGZ1bmN0aW9uKCl7IGZvcmNlZCA9IGZhbHNlOyB9KTtcbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZm9yY2VkLCAnQXJyYXknLCB7XG4gIGZpbmQ6IGZ1bmN0aW9uIGZpbmQoY2FsbGJhY2tmbi8qLCB0aGF0ID0gdW5kZWZpbmVkICovKXtcbiAgICByZXR1cm4gJGZpbmQodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICB9XG59KTtcbnJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpKEtFWSk7IiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCAkZm9yRWFjaCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSgwKVxuICAsIFNUUklDVCAgID0gcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLmZvckVhY2gsIHRydWUpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFTVFJJQ1QsICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjEwIC8gMTUuNC40LjE4IEFycmF5LnByb3RvdHlwZS5mb3JFYWNoKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pe1xuICAgIHJldHVybiAkZm9yRWFjaCh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pO1xuICB9XG59KTsiLCIndXNlIHN0cmljdCc7XG52YXIgY3R4ICAgICAgICAgICAgPSByZXF1aXJlKCcuL19jdHgnKVxuICAsICRleHBvcnQgICAgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCB0b09iamVjdCAgICAgICA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpXG4gICwgY2FsbCAgICAgICAgICAgPSByZXF1aXJlKCcuL19pdGVyLWNhbGwnKVxuICAsIGlzQXJyYXlJdGVyICAgID0gcmVxdWlyZSgnLi9faXMtYXJyYXktaXRlcicpXG4gICwgdG9MZW5ndGggICAgICAgPSByZXF1aXJlKCcuL190by1sZW5ndGgnKVxuICAsIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fY3JlYXRlLXByb3BlcnR5JylcbiAgLCBnZXRJdGVyRm4gICAgICA9IHJlcXVpcmUoJy4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX2l0ZXItZGV0ZWN0JykoZnVuY3Rpb24oaXRlcil7IEFycmF5LmZyb20oaXRlcik7IH0pLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMi4xIEFycmF5LmZyb20oYXJyYXlMaWtlLCBtYXBmbiA9IHVuZGVmaW5lZCwgdGhpc0FyZyA9IHVuZGVmaW5lZClcbiAgZnJvbTogZnVuY3Rpb24gZnJvbShhcnJheUxpa2UvKiwgbWFwZm4gPSB1bmRlZmluZWQsIHRoaXNBcmcgPSB1bmRlZmluZWQqLyl7XG4gICAgdmFyIE8gICAgICAgPSB0b09iamVjdChhcnJheUxpa2UpXG4gICAgICAsIEMgICAgICAgPSB0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nID8gdGhpcyA6IEFycmF5XG4gICAgICAsIGFMZW4gICAgPSBhcmd1bWVudHMubGVuZ3RoXG4gICAgICAsIG1hcGZuICAgPSBhTGVuID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZFxuICAgICAgLCBtYXBwaW5nID0gbWFwZm4gIT09IHVuZGVmaW5lZFxuICAgICAgLCBpbmRleCAgID0gMFxuICAgICAgLCBpdGVyRm4gID0gZ2V0SXRlckZuKE8pXG4gICAgICAsIGxlbmd0aCwgcmVzdWx0LCBzdGVwLCBpdGVyYXRvcjtcbiAgICBpZihtYXBwaW5nKW1hcGZuID0gY3R4KG1hcGZuLCBhTGVuID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZCwgMik7XG4gICAgLy8gaWYgb2JqZWN0IGlzbid0IGl0ZXJhYmxlIG9yIGl0J3MgYXJyYXkgd2l0aCBkZWZhdWx0IGl0ZXJhdG9yIC0gdXNlIHNpbXBsZSBjYXNlXG4gICAgaWYoaXRlckZuICE9IHVuZGVmaW5lZCAmJiAhKEMgPT0gQXJyYXkgJiYgaXNBcnJheUl0ZXIoaXRlckZuKSkpe1xuICAgICAgZm9yKGl0ZXJhdG9yID0gaXRlckZuLmNhbGwoTyksIHJlc3VsdCA9IG5ldyBDOyAhKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmU7IGluZGV4Kyspe1xuICAgICAgICBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBtYXBwaW5nID8gY2FsbChpdGVyYXRvciwgbWFwZm4sIFtzdGVwLnZhbHVlLCBpbmRleF0sIHRydWUpIDogc3RlcC52YWx1ZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgICAgIGZvcihyZXN1bHQgPSBuZXcgQyhsZW5ndGgpOyBsZW5ndGggPiBpbmRleDsgaW5kZXgrKyl7XG4gICAgICAgIGNyZWF0ZVByb3BlcnR5KHJlc3VsdCwgaW5kZXgsIG1hcHBpbmcgPyBtYXBmbihPW2luZGV4XSwgaW5kZXgpIDogT1tpbmRleF0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXN1bHQubGVuZ3RoID0gaW5kZXg7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCAgICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgJGluZGV4T2YgICAgICA9IHJlcXVpcmUoJy4vX2FycmF5LWluY2x1ZGVzJykoZmFsc2UpXG4gICwgJG5hdGl2ZSAgICAgICA9IFtdLmluZGV4T2ZcbiAgLCBORUdBVElWRV9aRVJPID0gISEkbmF0aXZlICYmIDEgLyBbMV0uaW5kZXhPZigxLCAtMCkgPCAwO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChORUdBVElWRV9aRVJPIHx8ICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoJG5hdGl2ZSkpLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMy4xMSAvIDE1LjQuNC4xNCBBcnJheS5wcm90b3R5cGUuaW5kZXhPZihzZWFyY2hFbGVtZW50IFssIGZyb21JbmRleF0pXG4gIGluZGV4T2Y6IGZ1bmN0aW9uIGluZGV4T2Yoc2VhcmNoRWxlbWVudCAvKiwgZnJvbUluZGV4ID0gMCAqLyl7XG4gICAgcmV0dXJuIE5FR0FUSVZFX1pFUk9cbiAgICAgIC8vIGNvbnZlcnQgLTAgdG8gKzBcbiAgICAgID8gJG5hdGl2ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IDBcbiAgICAgIDogJGluZGV4T2YodGhpcywgc2VhcmNoRWxlbWVudCwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7IiwiLy8gMjIuMS4yLjIgLyAxNS40LjMuMiBBcnJheS5pc0FycmF5KGFyZylcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnQXJyYXknLCB7aXNBcnJheTogcmVxdWlyZSgnLi9faXMtYXJyYXknKX0pOyIsIid1c2Ugc3RyaWN0JztcbnZhciBhZGRUb1Vuc2NvcGFibGVzID0gcmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJylcbiAgLCBzdGVwICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9faXRlci1zdGVwJylcbiAgLCBJdGVyYXRvcnMgICAgICAgID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJylcbiAgLCB0b0lPYmplY3QgICAgICAgID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xuXG4vLyAyMi4xLjMuNCBBcnJheS5wcm90b3R5cGUuZW50cmllcygpXG4vLyAyMi4xLjMuMTMgQXJyYXkucHJvdG90eXBlLmtleXMoKVxuLy8gMjIuMS4zLjI5IEFycmF5LnByb3RvdHlwZS52YWx1ZXMoKVxuLy8gMjIuMS4zLjMwIEFycmF5LnByb3RvdHlwZVtAQGl0ZXJhdG9yXSgpXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJykoQXJyYXksICdBcnJheScsIGZ1bmN0aW9uKGl0ZXJhdGVkLCBraW5kKXtcbiAgdGhpcy5fdCA9IHRvSU9iamVjdChpdGVyYXRlZCk7IC8vIHRhcmdldFxuICB0aGlzLl9pID0gMDsgICAgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuICB0aGlzLl9rID0ga2luZDsgICAgICAgICAgICAgICAgLy8ga2luZFxuLy8gMjIuMS41LjIuMSAlQXJyYXlJdGVyYXRvclByb3RvdHlwZSUubmV4dCgpXG59LCBmdW5jdGlvbigpe1xuICB2YXIgTyAgICAgPSB0aGlzLl90XG4gICAgLCBraW5kICA9IHRoaXMuX2tcbiAgICAsIGluZGV4ID0gdGhpcy5faSsrO1xuICBpZighTyB8fCBpbmRleCA+PSBPLmxlbmd0aCl7XG4gICAgdGhpcy5fdCA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gc3RlcCgxKTtcbiAgfVxuICBpZihraW5kID09ICdrZXlzJyAgKXJldHVybiBzdGVwKDAsIGluZGV4KTtcbiAgaWYoa2luZCA9PSAndmFsdWVzJylyZXR1cm4gc3RlcCgwLCBPW2luZGV4XSk7XG4gIHJldHVybiBzdGVwKDAsIFtpbmRleCwgT1tpbmRleF1dKTtcbn0sICd2YWx1ZXMnKTtcblxuLy8gYXJndW1lbnRzTGlzdFtAQGl0ZXJhdG9yXSBpcyAlQXJyYXlQcm90b192YWx1ZXMlICg5LjQuNC42LCA5LjQuNC43KVxuSXRlcmF0b3JzLkFyZ3VtZW50cyA9IEl0ZXJhdG9ycy5BcnJheTtcblxuYWRkVG9VbnNjb3BhYmxlcygna2V5cycpO1xuYWRkVG9VbnNjb3BhYmxlcygndmFsdWVzJyk7XG5hZGRUb1Vuc2NvcGFibGVzKCdlbnRyaWVzJyk7IiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjIuMS4zLjEzIEFycmF5LnByb3RvdHlwZS5qb2luKHNlcGFyYXRvcilcbnZhciAkZXhwb3J0ICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKVxuICAsIGFycmF5Sm9pbiA9IFtdLmpvaW47XG5cbi8vIGZhbGxiYWNrIGZvciBub3QgYXJyYXktbGlrZSBzdHJpbmdzXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChyZXF1aXJlKCcuL19pb2JqZWN0JykgIT0gT2JqZWN0IHx8ICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoYXJyYXlKb2luKSksICdBcnJheScsIHtcbiAgam9pbjogZnVuY3Rpb24gam9pbihzZXBhcmF0b3Ipe1xuICAgIHJldHVybiBhcnJheUpvaW4uY2FsbCh0b0lPYmplY3QodGhpcyksIHNlcGFyYXRvciA9PT0gdW5kZWZpbmVkID8gJywnIDogc2VwYXJhdG9yKTtcbiAgfVxufSk7IiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIHRvSU9iamVjdCAgICAgPSByZXF1aXJlKCcuL190by1pb2JqZWN0JylcbiAgLCB0b0ludGVnZXIgICAgID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpXG4gICwgdG9MZW5ndGggICAgICA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpXG4gICwgJG5hdGl2ZSAgICAgICA9IFtdLmxhc3RJbmRleE9mXG4gICwgTkVHQVRJVkVfWkVSTyA9ICEhJG5hdGl2ZSAmJiAxIC8gWzFdLmxhc3RJbmRleE9mKDEsIC0wKSA8IDA7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKE5FR0FUSVZFX1pFUk8gfHwgIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKSgkbmF0aXZlKSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjE0IC8gMTUuNC40LjE1IEFycmF5LnByb3RvdHlwZS5sYXN0SW5kZXhPZihzZWFyY2hFbGVtZW50IFssIGZyb21JbmRleF0pXG4gIGxhc3RJbmRleE9mOiBmdW5jdGlvbiBsYXN0SW5kZXhPZihzZWFyY2hFbGVtZW50IC8qLCBmcm9tSW5kZXggPSBAWyotMV0gKi8pe1xuICAgIC8vIGNvbnZlcnQgLTAgdG8gKzBcbiAgICBpZihORUdBVElWRV9aRVJPKXJldHVybiAkbmF0aXZlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgMDtcbiAgICB2YXIgTyAgICAgID0gdG9JT2JqZWN0KHRoaXMpXG4gICAgICAsIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKVxuICAgICAgLCBpbmRleCAgPSBsZW5ndGggLSAxO1xuICAgIGlmKGFyZ3VtZW50cy5sZW5ndGggPiAxKWluZGV4ID0gTWF0aC5taW4oaW5kZXgsIHRvSW50ZWdlcihhcmd1bWVudHNbMV0pKTtcbiAgICBpZihpbmRleCA8IDApaW5kZXggPSBsZW5ndGggKyBpbmRleDtcbiAgICBmb3IoO2luZGV4ID49IDA7IGluZGV4LS0paWYoaW5kZXggaW4gTylpZihPW2luZGV4XSA9PT0gc2VhcmNoRWxlbWVudClyZXR1cm4gaW5kZXggfHwgMDtcbiAgICByZXR1cm4gLTE7XG4gIH1cbn0pOyIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCAkbWFwICAgID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDEpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoW10ubWFwLCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMTUgLyAxNS40LjQuMTkgQXJyYXkucHJvdG90eXBlLm1hcChjYWxsYmFja2ZuIFssIHRoaXNBcmddKVxuICBtYXA6IGZ1bmN0aW9uIG1hcChjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLyl7XG4gICAgcmV0dXJuICRtYXAodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7IiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgICAgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBjcmVhdGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX2NyZWF0ZS1wcm9wZXJ0eScpO1xuXG4vLyBXZWJLaXQgQXJyYXkub2YgaXNuJ3QgZ2VuZXJpY1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uKCl7XG4gIGZ1bmN0aW9uIEYoKXt9XG4gIHJldHVybiAhKEFycmF5Lm9mLmNhbGwoRikgaW5zdGFuY2VvZiBGKTtcbn0pLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMi4zIEFycmF5Lm9mKCAuLi5pdGVtcylcbiAgb2Y6IGZ1bmN0aW9uIG9mKC8qIC4uLmFyZ3MgKi8pe1xuICAgIHZhciBpbmRleCAgPSAwXG4gICAgICAsIGFMZW4gICA9IGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgICwgcmVzdWx0ID0gbmV3ICh0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nID8gdGhpcyA6IEFycmF5KShhTGVuKTtcbiAgICB3aGlsZShhTGVuID4gaW5kZXgpY3JlYXRlUHJvcGVydHkocmVzdWx0LCBpbmRleCwgYXJndW1lbnRzW2luZGV4KytdKTtcbiAgICByZXN1bHQubGVuZ3RoID0gYUxlbjtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59KTsiLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgJHJlZHVjZSA9IHJlcXVpcmUoJy4vX2FycmF5LXJlZHVjZScpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoW10ucmVkdWNlUmlnaHQsIHRydWUpLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMy4xOSAvIDE1LjQuNC4yMiBBcnJheS5wcm90b3R5cGUucmVkdWNlUmlnaHQoY2FsbGJhY2tmbiBbLCBpbml0aWFsVmFsdWVdKVxuICByZWR1Y2VSaWdodDogZnVuY3Rpb24gcmVkdWNlUmlnaHQoY2FsbGJhY2tmbiAvKiAsIGluaXRpYWxWYWx1ZSAqLyl7XG4gICAgcmV0dXJuICRyZWR1Y2UodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCwgYXJndW1lbnRzWzFdLCB0cnVlKTtcbiAgfVxufSk7IiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsICRyZWR1Y2UgPSByZXF1aXJlKCcuL19hcnJheS1yZWR1Y2UnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLnJlZHVjZSwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjE4IC8gMTUuNC40LjIxIEFycmF5LnByb3RvdHlwZS5yZWR1Y2UoY2FsbGJhY2tmbiBbLCBpbml0aWFsVmFsdWVdKVxuICByZWR1Y2U6IGZ1bmN0aW9uIHJlZHVjZShjYWxsYmFja2ZuIC8qICwgaW5pdGlhbFZhbHVlICovKXtcbiAgICByZXR1cm4gJHJlZHVjZSh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoLCBhcmd1bWVudHNbMV0sIGZhbHNlKTtcbiAgfVxufSk7IiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIGh0bWwgICAgICAgPSByZXF1aXJlKCcuL19odG1sJylcbiAgLCBjb2YgICAgICAgID0gcmVxdWlyZSgnLi9fY29mJylcbiAgLCB0b0luZGV4ICAgID0gcmVxdWlyZSgnLi9fdG8taW5kZXgnKVxuICAsIHRvTGVuZ3RoICAgPSByZXF1aXJlKCcuL190by1sZW5ndGgnKVxuICAsIGFycmF5U2xpY2UgPSBbXS5zbGljZTtcblxuLy8gZmFsbGJhY2sgZm9yIG5vdCBhcnJheS1saWtlIEVTMyBzdHJpbmdzIGFuZCBET00gb2JqZWN0c1xuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uKCl7XG4gIGlmKGh0bWwpYXJyYXlTbGljZS5jYWxsKGh0bWwpO1xufSksICdBcnJheScsIHtcbiAgc2xpY2U6IGZ1bmN0aW9uIHNsaWNlKGJlZ2luLCBlbmQpe1xuICAgIHZhciBsZW4gICA9IHRvTGVuZ3RoKHRoaXMubGVuZ3RoKVxuICAgICAgLCBrbGFzcyA9IGNvZih0aGlzKTtcbiAgICBlbmQgPSBlbmQgPT09IHVuZGVmaW5lZCA/IGxlbiA6IGVuZDtcbiAgICBpZihrbGFzcyA9PSAnQXJyYXknKXJldHVybiBhcnJheVNsaWNlLmNhbGwodGhpcywgYmVnaW4sIGVuZCk7XG4gICAgdmFyIHN0YXJ0ICA9IHRvSW5kZXgoYmVnaW4sIGxlbilcbiAgICAgICwgdXBUbyAgID0gdG9JbmRleChlbmQsIGxlbilcbiAgICAgICwgc2l6ZSAgID0gdG9MZW5ndGgodXBUbyAtIHN0YXJ0KVxuICAgICAgLCBjbG9uZWQgPSBBcnJheShzaXplKVxuICAgICAgLCBpICAgICAgPSAwO1xuICAgIGZvcig7IGkgPCBzaXplOyBpKyspY2xvbmVkW2ldID0ga2xhc3MgPT0gJ1N0cmluZydcbiAgICAgID8gdGhpcy5jaGFyQXQoc3RhcnQgKyBpKVxuICAgICAgOiB0aGlzW3N0YXJ0ICsgaV07XG4gICAgcmV0dXJuIGNsb25lZDtcbiAgfVxufSk7IiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsICRzb21lICAgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5zb21lLCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMjMgLyAxNS40LjQuMTcgQXJyYXkucHJvdG90eXBlLnNvbWUoY2FsbGJhY2tmbiBbLCB0aGlzQXJnXSlcbiAgc29tZTogZnVuY3Rpb24gc29tZShjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLyl7XG4gICAgcmV0dXJuICRzb21lKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50c1sxXSk7XG4gIH1cbn0pOyIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKVxuICAsIHRvT2JqZWN0ICA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpXG4gICwgZmFpbHMgICAgID0gcmVxdWlyZSgnLi9fZmFpbHMnKVxuICAsICRzb3J0ICAgICA9IFtdLnNvcnRcbiAgLCB0ZXN0ICAgICAgPSBbMSwgMiwgM107XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKGZhaWxzKGZ1bmN0aW9uKCl7XG4gIC8vIElFOC1cbiAgdGVzdC5zb3J0KHVuZGVmaW5lZCk7XG59KSB8fCAhZmFpbHMoZnVuY3Rpb24oKXtcbiAgLy8gVjggYnVnXG4gIHRlc3Quc29ydChudWxsKTtcbiAgLy8gT2xkIFdlYktpdFxufSkgfHwgIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKSgkc29ydCkpLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMy4yNSBBcnJheS5wcm90b3R5cGUuc29ydChjb21wYXJlZm4pXG4gIHNvcnQ6IGZ1bmN0aW9uIHNvcnQoY29tcGFyZWZuKXtcbiAgICByZXR1cm4gY29tcGFyZWZuID09PSB1bmRlZmluZWRcbiAgICAgID8gJHNvcnQuY2FsbCh0b09iamVjdCh0aGlzKSlcbiAgICAgIDogJHNvcnQuY2FsbCh0b09iamVjdCh0aGlzKSwgYUZ1bmN0aW9uKGNvbXBhcmVmbikpO1xuICB9XG59KTsiLCJyZXF1aXJlKCcuL19zZXQtc3BlY2llcycpKCdBcnJheScpOyIsIi8vIDIwLjMuMy4xIC8gMTUuOS40LjQgRGF0ZS5ub3coKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdEYXRlJywge25vdzogZnVuY3Rpb24oKXsgcmV0dXJuIG5ldyBEYXRlKCkuZ2V0VGltZSgpOyB9fSk7IiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjAuMy40LjM2IC8gMTUuOS41LjQzIERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nKClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBmYWlscyAgID0gcmVxdWlyZSgnLi9fZmFpbHMnKVxuICAsIGdldFRpbWUgPSBEYXRlLnByb3RvdHlwZS5nZXRUaW1lO1xuXG52YXIgbHogPSBmdW5jdGlvbihudW0pe1xuICByZXR1cm4gbnVtID4gOSA/IG51bSA6ICcwJyArIG51bTtcbn07XG5cbi8vIFBoYW50b21KUyAvIG9sZCBXZWJLaXQgaGFzIGEgYnJva2VuIGltcGxlbWVudGF0aW9uc1xuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoZmFpbHMoZnVuY3Rpb24oKXtcbiAgcmV0dXJuIG5ldyBEYXRlKC01ZTEzIC0gMSkudG9JU09TdHJpbmcoKSAhPSAnMDM4NS0wNy0yNVQwNzowNjozOS45OTlaJztcbn0pIHx8ICFmYWlscyhmdW5jdGlvbigpe1xuICBuZXcgRGF0ZShOYU4pLnRvSVNPU3RyaW5nKCk7XG59KSksICdEYXRlJywge1xuICB0b0lTT1N0cmluZzogZnVuY3Rpb24gdG9JU09TdHJpbmcoKXtcbiAgICBpZighaXNGaW5pdGUoZ2V0VGltZS5jYWxsKHRoaXMpKSl0aHJvdyBSYW5nZUVycm9yKCdJbnZhbGlkIHRpbWUgdmFsdWUnKTtcbiAgICB2YXIgZCA9IHRoaXNcbiAgICAgICwgeSA9IGQuZ2V0VVRDRnVsbFllYXIoKVxuICAgICAgLCBtID0gZC5nZXRVVENNaWxsaXNlY29uZHMoKVxuICAgICAgLCBzID0geSA8IDAgPyAnLScgOiB5ID4gOTk5OSA/ICcrJyA6ICcnO1xuICAgIHJldHVybiBzICsgKCcwMDAwMCcgKyBNYXRoLmFicyh5KSkuc2xpY2UocyA/IC02IDogLTQpICtcbiAgICAgICctJyArIGx6KGQuZ2V0VVRDTW9udGgoKSArIDEpICsgJy0nICsgbHooZC5nZXRVVENEYXRlKCkpICtcbiAgICAgICdUJyArIGx6KGQuZ2V0VVRDSG91cnMoKSkgKyAnOicgKyBseihkLmdldFVUQ01pbnV0ZXMoKSkgK1xuICAgICAgJzonICsgbHooZC5nZXRVVENTZWNvbmRzKCkpICsgJy4nICsgKG0gPiA5OSA/IG0gOiAnMCcgKyBseihtKSkgKyAnWic7XG4gIH1cbn0pOyIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgdG9PYmplY3QgICAgPSByZXF1aXJlKCcuL190by1vYmplY3QnKVxuICAsIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbigpe1xuICByZXR1cm4gbmV3IERhdGUoTmFOKS50b0pTT04oKSAhPT0gbnVsbCB8fCBEYXRlLnByb3RvdHlwZS50b0pTT04uY2FsbCh7dG9JU09TdHJpbmc6IGZ1bmN0aW9uKCl7IHJldHVybiAxOyB9fSkgIT09IDE7XG59KSwgJ0RhdGUnLCB7XG4gIHRvSlNPTjogZnVuY3Rpb24gdG9KU09OKGtleSl7XG4gICAgdmFyIE8gID0gdG9PYmplY3QodGhpcylcbiAgICAgICwgcHYgPSB0b1ByaW1pdGl2ZShPKTtcbiAgICByZXR1cm4gdHlwZW9mIHB2ID09ICdudW1iZXInICYmICFpc0Zpbml0ZShwdikgPyBudWxsIDogTy50b0lTT1N0cmluZygpO1xuICB9XG59KTsiLCJ2YXIgVE9fUFJJTUlUSVZFID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvUHJpbWl0aXZlJylcbiAgLCBwcm90byAgICAgICAgPSBEYXRlLnByb3RvdHlwZTtcblxuaWYoIShUT19QUklNSVRJVkUgaW4gcHJvdG8pKXJlcXVpcmUoJy4vX2hpZGUnKShwcm90bywgVE9fUFJJTUlUSVZFLCByZXF1aXJlKCcuL19kYXRlLXRvLXByaW1pdGl2ZScpKTsiLCJ2YXIgRGF0ZVByb3RvICAgID0gRGF0ZS5wcm90b3R5cGVcbiAgLCBJTlZBTElEX0RBVEUgPSAnSW52YWxpZCBEYXRlJ1xuICAsIFRPX1NUUklORyAgICA9ICd0b1N0cmluZydcbiAgLCAkdG9TdHJpbmcgICAgPSBEYXRlUHJvdG9bVE9fU1RSSU5HXVxuICAsIGdldFRpbWUgICAgICA9IERhdGVQcm90by5nZXRUaW1lO1xuaWYobmV3IERhdGUoTmFOKSArICcnICE9IElOVkFMSURfREFURSl7XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoRGF0ZVByb3RvLCBUT19TVFJJTkcsIGZ1bmN0aW9uIHRvU3RyaW5nKCl7XG4gICAgdmFyIHZhbHVlID0gZ2V0VGltZS5jYWxsKHRoaXMpO1xuICAgIHJldHVybiB2YWx1ZSA9PT0gdmFsdWUgPyAkdG9TdHJpbmcuY2FsbCh0aGlzKSA6IElOVkFMSURfREFURTtcbiAgfSk7XG59IiwiLy8gMTkuMi4zLjIgLyAxNS4zLjQuNSBGdW5jdGlvbi5wcm90b3R5cGUuYmluZCh0aGlzQXJnLCBhcmdzLi4uKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdGdW5jdGlvbicsIHtiaW5kOiByZXF1aXJlKCcuL19iaW5kJyl9KTsiLCIndXNlIHN0cmljdCc7XG52YXIgaXNPYmplY3QgICAgICAgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKVxuICAsIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpXG4gICwgSEFTX0lOU1RBTkNFICAgPSByZXF1aXJlKCcuL193a3MnKSgnaGFzSW5zdGFuY2UnKVxuICAsIEZ1bmN0aW9uUHJvdG8gID0gRnVuY3Rpb24ucHJvdG90eXBlO1xuLy8gMTkuMi4zLjYgRnVuY3Rpb24ucHJvdG90eXBlW0BAaGFzSW5zdGFuY2VdKFYpXG5pZighKEhBU19JTlNUQU5DRSBpbiBGdW5jdGlvblByb3RvKSlyZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mKEZ1bmN0aW9uUHJvdG8sIEhBU19JTlNUQU5DRSwge3ZhbHVlOiBmdW5jdGlvbihPKXtcbiAgaWYodHlwZW9mIHRoaXMgIT0gJ2Z1bmN0aW9uJyB8fCAhaXNPYmplY3QoTykpcmV0dXJuIGZhbHNlO1xuICBpZighaXNPYmplY3QodGhpcy5wcm90b3R5cGUpKXJldHVybiBPIGluc3RhbmNlb2YgdGhpcztcbiAgLy8gZm9yIGVudmlyb25tZW50IHcvbyBuYXRpdmUgYEBAaGFzSW5zdGFuY2VgIGxvZ2ljIGVub3VnaCBgaW5zdGFuY2VvZmAsIGJ1dCBhZGQgdGhpczpcbiAgd2hpbGUoTyA9IGdldFByb3RvdHlwZU9mKE8pKWlmKHRoaXMucHJvdG90eXBlID09PSBPKXJldHVybiB0cnVlO1xuICByZXR1cm4gZmFsc2U7XG59fSk7IiwidmFyIGRQICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mXG4gICwgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKVxuICAsIGhhcyAgICAgICAgPSByZXF1aXJlKCcuL19oYXMnKVxuICAsIEZQcm90byAgICAgPSBGdW5jdGlvbi5wcm90b3R5cGVcbiAgLCBuYW1lUkUgICAgID0gL15cXHMqZnVuY3Rpb24gKFteIChdKikvXG4gICwgTkFNRSAgICAgICA9ICduYW1lJztcblxudmFyIGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGUgfHwgZnVuY3Rpb24oKXtcbiAgcmV0dXJuIHRydWU7XG59O1xuXG4vLyAxOS4yLjQuMiBuYW1lXG5OQU1FIGluIEZQcm90byB8fCByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmIGRQKEZQcm90bywgTkFNRSwge1xuICBjb25maWd1cmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24oKXtcbiAgICB0cnkge1xuICAgICAgdmFyIHRoYXQgPSB0aGlzXG4gICAgICAgICwgbmFtZSA9ICgnJyArIHRoYXQpLm1hdGNoKG5hbWVSRSlbMV07XG4gICAgICBoYXModGhhdCwgTkFNRSkgfHwgIWlzRXh0ZW5zaWJsZSh0aGF0KSB8fCBkUCh0aGF0LCBOQU1FLCBjcmVhdGVEZXNjKDUsIG5hbWUpKTtcbiAgICAgIHJldHVybiBuYW1lO1xuICAgIH0gY2F0Y2goZSl7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuICB9XG59KTsiLCIndXNlIHN0cmljdCc7XG52YXIgc3Ryb25nID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbi1zdHJvbmcnKTtcblxuLy8gMjMuMSBNYXAgT2JqZWN0c1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uJykoJ01hcCcsIGZ1bmN0aW9uKGdldCl7XG4gIHJldHVybiBmdW5jdGlvbiBNYXAoKXsgcmV0dXJuIGdldCh0aGlzLCBhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7IH07XG59LCB7XG4gIC8vIDIzLjEuMy42IE1hcC5wcm90b3R5cGUuZ2V0KGtleSlcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoa2V5KXtcbiAgICB2YXIgZW50cnkgPSBzdHJvbmcuZ2V0RW50cnkodGhpcywga2V5KTtcbiAgICByZXR1cm4gZW50cnkgJiYgZW50cnkudjtcbiAgfSxcbiAgLy8gMjMuMS4zLjkgTWFwLnByb3RvdHlwZS5zZXQoa2V5LCB2YWx1ZSlcbiAgc2V0OiBmdW5jdGlvbiBzZXQoa2V5LCB2YWx1ZSl7XG4gICAgcmV0dXJuIHN0cm9uZy5kZWYodGhpcywga2V5ID09PSAwID8gMCA6IGtleSwgdmFsdWUpO1xuICB9XG59LCBzdHJvbmcsIHRydWUpOyIsIi8vIDIwLjIuMi4zIE1hdGguYWNvc2goeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBsb2cxcCAgID0gcmVxdWlyZSgnLi9fbWF0aC1sb2cxcCcpXG4gICwgc3FydCAgICA9IE1hdGguc3FydFxuICAsICRhY29zaCAgPSBNYXRoLmFjb3NoO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoJGFjb3NoXG4gIC8vIFY4IGJ1ZzogaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTM1MDlcbiAgJiYgTWF0aC5mbG9vcigkYWNvc2goTnVtYmVyLk1BWF9WQUxVRSkpID09IDcxMFxuICAvLyBUb3IgQnJvd3NlciBidWc6IE1hdGguYWNvc2goSW5maW5pdHkpIC0+IE5hTiBcbiAgJiYgJGFjb3NoKEluZmluaXR5KSA9PSBJbmZpbml0eVxuKSwgJ01hdGgnLCB7XG4gIGFjb3NoOiBmdW5jdGlvbiBhY29zaCh4KXtcbiAgICByZXR1cm4gKHggPSAreCkgPCAxID8gTmFOIDogeCA+IDk0OTA2MjY1LjYyNDI1MTU2XG4gICAgICA/IE1hdGgubG9nKHgpICsgTWF0aC5MTjJcbiAgICAgIDogbG9nMXAoeCAtIDEgKyBzcXJ0KHggLSAxKSAqIHNxcnQoeCArIDEpKTtcbiAgfVxufSk7IiwiLy8gMjAuMi4yLjUgTWF0aC5hc2luaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsICRhc2luaCAgPSBNYXRoLmFzaW5oO1xuXG5mdW5jdGlvbiBhc2luaCh4KXtcbiAgcmV0dXJuICFpc0Zpbml0ZSh4ID0gK3gpIHx8IHggPT0gMCA/IHggOiB4IDwgMCA/IC1hc2luaCgteCkgOiBNYXRoLmxvZyh4ICsgTWF0aC5zcXJ0KHggKiB4ICsgMSkpO1xufVxuXG4vLyBUb3IgQnJvd3NlciBidWc6IE1hdGguYXNpbmgoMCkgLT4gLTAgXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoJGFzaW5oICYmIDEgLyAkYXNpbmgoMCkgPiAwKSwgJ01hdGgnLCB7YXNpbmg6IGFzaW5ofSk7IiwiLy8gMjAuMi4yLjcgTWF0aC5hdGFuaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsICRhdGFuaCAgPSBNYXRoLmF0YW5oO1xuXG4vLyBUb3IgQnJvd3NlciBidWc6IE1hdGguYXRhbmgoLTApIC0+IDAgXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoJGF0YW5oICYmIDEgLyAkYXRhbmgoLTApIDwgMCksICdNYXRoJywge1xuICBhdGFuaDogZnVuY3Rpb24gYXRhbmgoeCl7XG4gICAgcmV0dXJuICh4ID0gK3gpID09IDAgPyB4IDogTWF0aC5sb2coKDEgKyB4KSAvICgxIC0geCkpIC8gMjtcbiAgfVxufSk7IiwiLy8gMjAuMi4yLjkgTWF0aC5jYnJ0KHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgc2lnbiAgICA9IHJlcXVpcmUoJy4vX21hdGgtc2lnbicpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGNicnQ6IGZ1bmN0aW9uIGNicnQoeCl7XG4gICAgcmV0dXJuIHNpZ24oeCA9ICt4KSAqIE1hdGgucG93KE1hdGguYWJzKHgpLCAxIC8gMyk7XG4gIH1cbn0pOyIsIi8vIDIwLjIuMi4xMSBNYXRoLmNsejMyKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGNsejMyOiBmdW5jdGlvbiBjbHozMih4KXtcbiAgICByZXR1cm4gKHggPj4+PSAwKSA/IDMxIC0gTWF0aC5mbG9vcihNYXRoLmxvZyh4ICsgMC41KSAqIE1hdGguTE9HMkUpIDogMzI7XG4gIH1cbn0pOyIsIi8vIDIwLjIuMi4xMiBNYXRoLmNvc2goeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBleHAgICAgID0gTWF0aC5leHA7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgY29zaDogZnVuY3Rpb24gY29zaCh4KXtcbiAgICByZXR1cm4gKGV4cCh4ID0gK3gpICsgZXhwKC14KSkgLyAyO1xuICB9XG59KTsiLCIvLyAyMC4yLjIuMTQgTWF0aC5leHBtMSh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsICRleHBtMSAgPSByZXF1aXJlKCcuL19tYXRoLWV4cG0xJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKCRleHBtMSAhPSBNYXRoLmV4cG0xKSwgJ01hdGgnLCB7ZXhwbTE6ICRleHBtMX0pOyIsIi8vIDIwLjIuMi4xNiBNYXRoLmZyb3VuZCh4KVxudmFyICRleHBvcnQgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgc2lnbiAgICAgID0gcmVxdWlyZSgnLi9fbWF0aC1zaWduJylcbiAgLCBwb3cgICAgICAgPSBNYXRoLnBvd1xuICAsIEVQU0lMT04gICA9IHBvdygyLCAtNTIpXG4gICwgRVBTSUxPTjMyID0gcG93KDIsIC0yMylcbiAgLCBNQVgzMiAgICAgPSBwb3coMiwgMTI3KSAqICgyIC0gRVBTSUxPTjMyKVxuICAsIE1JTjMyICAgICA9IHBvdygyLCAtMTI2KTtcblxudmFyIHJvdW5kVGllc1RvRXZlbiA9IGZ1bmN0aW9uKG4pe1xuICByZXR1cm4gbiArIDEgLyBFUFNJTE9OIC0gMSAvIEVQU0lMT047XG59O1xuXG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgZnJvdW5kOiBmdW5jdGlvbiBmcm91bmQoeCl7XG4gICAgdmFyICRhYnMgID0gTWF0aC5hYnMoeClcbiAgICAgICwgJHNpZ24gPSBzaWduKHgpXG4gICAgICAsIGEsIHJlc3VsdDtcbiAgICBpZigkYWJzIDwgTUlOMzIpcmV0dXJuICRzaWduICogcm91bmRUaWVzVG9FdmVuKCRhYnMgLyBNSU4zMiAvIEVQU0lMT04zMikgKiBNSU4zMiAqIEVQU0lMT04zMjtcbiAgICBhID0gKDEgKyBFUFNJTE9OMzIgLyBFUFNJTE9OKSAqICRhYnM7XG4gICAgcmVzdWx0ID0gYSAtIChhIC0gJGFicyk7XG4gICAgaWYocmVzdWx0ID4gTUFYMzIgfHwgcmVzdWx0ICE9IHJlc3VsdClyZXR1cm4gJHNpZ24gKiBJbmZpbml0eTtcbiAgICByZXR1cm4gJHNpZ24gKiByZXN1bHQ7XG4gIH1cbn0pOyIsIi8vIDIwLjIuMi4xNyBNYXRoLmh5cG90KFt2YWx1ZTFbLCB2YWx1ZTJbLCDigKYgXV1dKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIGFicyAgICAgPSBNYXRoLmFicztcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBoeXBvdDogZnVuY3Rpb24gaHlwb3QodmFsdWUxLCB2YWx1ZTIpeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgdmFyIHN1bSAgPSAwXG4gICAgICAsIGkgICAgPSAwXG4gICAgICAsIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoXG4gICAgICAsIGxhcmcgPSAwXG4gICAgICAsIGFyZywgZGl2O1xuICAgIHdoaWxlKGkgPCBhTGVuKXtcbiAgICAgIGFyZyA9IGFicyhhcmd1bWVudHNbaSsrXSk7XG4gICAgICBpZihsYXJnIDwgYXJnKXtcbiAgICAgICAgZGl2ICA9IGxhcmcgLyBhcmc7XG4gICAgICAgIHN1bSAgPSBzdW0gKiBkaXYgKiBkaXYgKyAxO1xuICAgICAgICBsYXJnID0gYXJnO1xuICAgICAgfSBlbHNlIGlmKGFyZyA+IDApe1xuICAgICAgICBkaXYgID0gYXJnIC8gbGFyZztcbiAgICAgICAgc3VtICs9IGRpdiAqIGRpdjtcbiAgICAgIH0gZWxzZSBzdW0gKz0gYXJnO1xuICAgIH1cbiAgICByZXR1cm4gbGFyZyA9PT0gSW5maW5pdHkgPyBJbmZpbml0eSA6IGxhcmcgKiBNYXRoLnNxcnQoc3VtKTtcbiAgfVxufSk7IiwiLy8gMjAuMi4yLjE4IE1hdGguaW11bCh4LCB5KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsICRpbXVsICAgPSBNYXRoLmltdWw7XG5cbi8vIHNvbWUgV2ViS2l0IHZlcnNpb25zIGZhaWxzIHdpdGggYmlnIG51bWJlcnMsIHNvbWUgaGFzIHdyb25nIGFyaXR5XG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24oKXtcbiAgcmV0dXJuICRpbXVsKDB4ZmZmZmZmZmYsIDUpICE9IC01IHx8ICRpbXVsLmxlbmd0aCAhPSAyO1xufSksICdNYXRoJywge1xuICBpbXVsOiBmdW5jdGlvbiBpbXVsKHgsIHkpe1xuICAgIHZhciBVSU5UMTYgPSAweGZmZmZcbiAgICAgICwgeG4gPSAreFxuICAgICAgLCB5biA9ICt5XG4gICAgICAsIHhsID0gVUlOVDE2ICYgeG5cbiAgICAgICwgeWwgPSBVSU5UMTYgJiB5bjtcbiAgICByZXR1cm4gMCB8IHhsICogeWwgKyAoKFVJTlQxNiAmIHhuID4+PiAxNikgKiB5bCArIHhsICogKFVJTlQxNiAmIHluID4+PiAxNikgPDwgMTYgPj4+IDApO1xuICB9XG59KTsiLCIvLyAyMC4yLjIuMjEgTWF0aC5sb2cxMCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBsb2cxMDogZnVuY3Rpb24gbG9nMTAoeCl7XG4gICAgcmV0dXJuIE1hdGgubG9nKHgpIC8gTWF0aC5MTjEwO1xuICB9XG59KTsiLCIvLyAyMC4yLjIuMjAgTWF0aC5sb2cxcCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge2xvZzFwOiByZXF1aXJlKCcuL19tYXRoLWxvZzFwJyl9KTsiLCIvLyAyMC4yLjIuMjIgTWF0aC5sb2cyKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGxvZzI6IGZ1bmN0aW9uIGxvZzIoeCl7XG4gICAgcmV0dXJuIE1hdGgubG9nKHgpIC8gTWF0aC5MTjI7XG4gIH1cbn0pOyIsIi8vIDIwLjIuMi4yOCBNYXRoLnNpZ24oeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtzaWduOiByZXF1aXJlKCcuL19tYXRoLXNpZ24nKX0pOyIsIi8vIDIwLjIuMi4zMCBNYXRoLnNpbmgoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBleHBtMSAgID0gcmVxdWlyZSgnLi9fbWF0aC1leHBtMScpXG4gICwgZXhwICAgICA9IE1hdGguZXhwO1xuXG4vLyBWOCBuZWFyIENocm9taXVtIDM4IGhhcyBhIHByb2JsZW0gd2l0aCB2ZXJ5IHNtYWxsIG51bWJlcnNcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbigpe1xuICByZXR1cm4gIU1hdGguc2luaCgtMmUtMTcpICE9IC0yZS0xNztcbn0pLCAnTWF0aCcsIHtcbiAgc2luaDogZnVuY3Rpb24gc2luaCh4KXtcbiAgICByZXR1cm4gTWF0aC5hYnMoeCA9ICt4KSA8IDFcbiAgICAgID8gKGV4cG0xKHgpIC0gZXhwbTEoLXgpKSAvIDJcbiAgICAgIDogKGV4cCh4IC0gMSkgLSBleHAoLXggLSAxKSkgKiAoTWF0aC5FIC8gMik7XG4gIH1cbn0pOyIsIi8vIDIwLjIuMi4zMyBNYXRoLnRhbmgoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBleHBtMSAgID0gcmVxdWlyZSgnLi9fbWF0aC1leHBtMScpXG4gICwgZXhwICAgICA9IE1hdGguZXhwO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIHRhbmg6IGZ1bmN0aW9uIHRhbmgoeCl7XG4gICAgdmFyIGEgPSBleHBtMSh4ID0gK3gpXG4gICAgICAsIGIgPSBleHBtMSgteCk7XG4gICAgcmV0dXJuIGEgPT0gSW5maW5pdHkgPyAxIDogYiA9PSBJbmZpbml0eSA/IC0xIDogKGEgLSBiKSAvIChleHAoeCkgKyBleHAoLXgpKTtcbiAgfVxufSk7IiwiLy8gMjAuMi4yLjM0IE1hdGgudHJ1bmMoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgdHJ1bmM6IGZ1bmN0aW9uIHRydW5jKGl0KXtcbiAgICByZXR1cm4gKGl0ID4gMCA/IE1hdGguZmxvb3IgOiBNYXRoLmNlaWwpKGl0KTtcbiAgfVxufSk7IiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJylcbiAgLCBoYXMgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpXG4gICwgY29mICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19jb2YnKVxuICAsIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi9faW5oZXJpdC1pZi1yZXF1aXJlZCcpXG4gICwgdG9QcmltaXRpdmUgICAgICAgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKVxuICAsIGZhaWxzICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fZmFpbHMnKVxuICAsIGdPUE4gICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mXG4gICwgZ09QRCAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmZcbiAgLCBkUCAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmZcbiAgLCAkdHJpbSAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX3N0cmluZy10cmltJykudHJpbVxuICAsIE5VTUJFUiAgICAgICAgICAgID0gJ051bWJlcidcbiAgLCAkTnVtYmVyICAgICAgICAgICA9IGdsb2JhbFtOVU1CRVJdXG4gICwgQmFzZSAgICAgICAgICAgICAgPSAkTnVtYmVyXG4gICwgcHJvdG8gICAgICAgICAgICAgPSAkTnVtYmVyLnByb3RvdHlwZVxuICAvLyBPcGVyYSB+MTIgaGFzIGJyb2tlbiBPYmplY3QjdG9TdHJpbmdcbiAgLCBCUk9LRU5fQ09GICAgICAgICA9IGNvZihyZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJykocHJvdG8pKSA9PSBOVU1CRVJcbiAgLCBUUklNICAgICAgICAgICAgICA9ICd0cmltJyBpbiBTdHJpbmcucHJvdG90eXBlO1xuXG4vLyA3LjEuMyBUb051bWJlcihhcmd1bWVudClcbnZhciB0b051bWJlciA9IGZ1bmN0aW9uKGFyZ3VtZW50KXtcbiAgdmFyIGl0ID0gdG9QcmltaXRpdmUoYXJndW1lbnQsIGZhbHNlKTtcbiAgaWYodHlwZW9mIGl0ID09ICdzdHJpbmcnICYmIGl0Lmxlbmd0aCA+IDIpe1xuICAgIGl0ID0gVFJJTSA/IGl0LnRyaW0oKSA6ICR0cmltKGl0LCAzKTtcbiAgICB2YXIgZmlyc3QgPSBpdC5jaGFyQ29kZUF0KDApXG4gICAgICAsIHRoaXJkLCByYWRpeCwgbWF4Q29kZTtcbiAgICBpZihmaXJzdCA9PT0gNDMgfHwgZmlyc3QgPT09IDQ1KXtcbiAgICAgIHRoaXJkID0gaXQuY2hhckNvZGVBdCgyKTtcbiAgICAgIGlmKHRoaXJkID09PSA4OCB8fCB0aGlyZCA9PT0gMTIwKXJldHVybiBOYU47IC8vIE51bWJlcignKzB4MScpIHNob3VsZCBiZSBOYU4sIG9sZCBWOCBmaXhcbiAgICB9IGVsc2UgaWYoZmlyc3QgPT09IDQ4KXtcbiAgICAgIHN3aXRjaChpdC5jaGFyQ29kZUF0KDEpKXtcbiAgICAgICAgY2FzZSA2NiA6IGNhc2UgOTggIDogcmFkaXggPSAyOyBtYXhDb2RlID0gNDk7IGJyZWFrOyAvLyBmYXN0IGVxdWFsIC9eMGJbMDFdKyQvaVxuICAgICAgICBjYXNlIDc5IDogY2FzZSAxMTEgOiByYWRpeCA9IDg7IG1heENvZGUgPSA1NTsgYnJlYWs7IC8vIGZhc3QgZXF1YWwgL14wb1swLTddKyQvaVxuICAgICAgICBkZWZhdWx0IDogcmV0dXJuICtpdDtcbiAgICAgIH1cbiAgICAgIGZvcih2YXIgZGlnaXRzID0gaXQuc2xpY2UoMiksIGkgPSAwLCBsID0gZGlnaXRzLmxlbmd0aCwgY29kZTsgaSA8IGw7IGkrKyl7XG4gICAgICAgIGNvZGUgPSBkaWdpdHMuY2hhckNvZGVBdChpKTtcbiAgICAgICAgLy8gcGFyc2VJbnQgcGFyc2VzIGEgc3RyaW5nIHRvIGEgZmlyc3QgdW5hdmFpbGFibGUgc3ltYm9sXG4gICAgICAgIC8vIGJ1dCBUb051bWJlciBzaG91bGQgcmV0dXJuIE5hTiBpZiBhIHN0cmluZyBjb250YWlucyB1bmF2YWlsYWJsZSBzeW1ib2xzXG4gICAgICAgIGlmKGNvZGUgPCA0OCB8fCBjb2RlID4gbWF4Q29kZSlyZXR1cm4gTmFOO1xuICAgICAgfSByZXR1cm4gcGFyc2VJbnQoZGlnaXRzLCByYWRpeCk7XG4gICAgfVxuICB9IHJldHVybiAraXQ7XG59O1xuXG5pZighJE51bWJlcignIDBvMScpIHx8ICEkTnVtYmVyKCcwYjEnKSB8fCAkTnVtYmVyKCcrMHgxJykpe1xuICAkTnVtYmVyID0gZnVuY3Rpb24gTnVtYmVyKHZhbHVlKXtcbiAgICB2YXIgaXQgPSBhcmd1bWVudHMubGVuZ3RoIDwgMSA/IDAgOiB2YWx1ZVxuICAgICAgLCB0aGF0ID0gdGhpcztcbiAgICByZXR1cm4gdGhhdCBpbnN0YW5jZW9mICROdW1iZXJcbiAgICAgIC8vIGNoZWNrIG9uIDEuLmNvbnN0cnVjdG9yKGZvbykgY2FzZVxuICAgICAgJiYgKEJST0tFTl9DT0YgPyBmYWlscyhmdW5jdGlvbigpeyBwcm90by52YWx1ZU9mLmNhbGwodGhhdCk7IH0pIDogY29mKHRoYXQpICE9IE5VTUJFUilcbiAgICAgICAgPyBpbmhlcml0SWZSZXF1aXJlZChuZXcgQmFzZSh0b051bWJlcihpdCkpLCB0aGF0LCAkTnVtYmVyKSA6IHRvTnVtYmVyKGl0KTtcbiAgfTtcbiAgZm9yKHZhciBrZXlzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IGdPUE4oQmFzZSkgOiAoXG4gICAgLy8gRVMzOlxuICAgICdNQVhfVkFMVUUsTUlOX1ZBTFVFLE5hTixORUdBVElWRV9JTkZJTklUWSxQT1NJVElWRV9JTkZJTklUWSwnICtcbiAgICAvLyBFUzYgKGluIGNhc2UsIGlmIG1vZHVsZXMgd2l0aCBFUzYgTnVtYmVyIHN0YXRpY3MgcmVxdWlyZWQgYmVmb3JlKTpcbiAgICAnRVBTSUxPTixpc0Zpbml0ZSxpc0ludGVnZXIsaXNOYU4saXNTYWZlSW50ZWdlcixNQVhfU0FGRV9JTlRFR0VSLCcgK1xuICAgICdNSU5fU0FGRV9JTlRFR0VSLHBhcnNlRmxvYXQscGFyc2VJbnQsaXNJbnRlZ2VyJ1xuICApLnNwbGl0KCcsJyksIGogPSAwLCBrZXk7IGtleXMubGVuZ3RoID4gajsgaisrKXtcbiAgICBpZihoYXMoQmFzZSwga2V5ID0ga2V5c1tqXSkgJiYgIWhhcygkTnVtYmVyLCBrZXkpKXtcbiAgICAgIGRQKCROdW1iZXIsIGtleSwgZ09QRChCYXNlLCBrZXkpKTtcbiAgICB9XG4gIH1cbiAgJE51bWJlci5wcm90b3R5cGUgPSBwcm90bztcbiAgcHJvdG8uY29uc3RydWN0b3IgPSAkTnVtYmVyO1xuICByZXF1aXJlKCcuL19yZWRlZmluZScpKGdsb2JhbCwgTlVNQkVSLCAkTnVtYmVyKTtcbn0iLCIvLyAyMC4xLjIuMSBOdW1iZXIuRVBTSUxPTlxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7RVBTSUxPTjogTWF0aC5wb3coMiwgLTUyKX0pOyIsIi8vIDIwLjEuMi4yIE51bWJlci5pc0Zpbml0ZShudW1iZXIpXG52YXIgJGV4cG9ydCAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBfaXNGaW5pdGUgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5pc0Zpbml0ZTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7XG4gIGlzRmluaXRlOiBmdW5jdGlvbiBpc0Zpbml0ZShpdCl7XG4gICAgcmV0dXJuIHR5cGVvZiBpdCA9PSAnbnVtYmVyJyAmJiBfaXNGaW5pdGUoaXQpO1xuICB9XG59KTsiLCIvLyAyMC4xLjIuMyBOdW1iZXIuaXNJbnRlZ2VyKG51bWJlcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywge2lzSW50ZWdlcjogcmVxdWlyZSgnLi9faXMtaW50ZWdlcicpfSk7IiwiLy8gMjAuMS4yLjQgTnVtYmVyLmlzTmFOKG51bWJlcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywge1xuICBpc05hTjogZnVuY3Rpb24gaXNOYU4obnVtYmVyKXtcbiAgICByZXR1cm4gbnVtYmVyICE9IG51bWJlcjtcbiAgfVxufSk7IiwiLy8gMjAuMS4yLjUgTnVtYmVyLmlzU2FmZUludGVnZXIobnVtYmVyKVxudmFyICRleHBvcnQgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgaXNJbnRlZ2VyID0gcmVxdWlyZSgnLi9faXMtaW50ZWdlcicpXG4gICwgYWJzICAgICAgID0gTWF0aC5hYnM7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywge1xuICBpc1NhZmVJbnRlZ2VyOiBmdW5jdGlvbiBpc1NhZmVJbnRlZ2VyKG51bWJlcil7XG4gICAgcmV0dXJuIGlzSW50ZWdlcihudW1iZXIpICYmIGFicyhudW1iZXIpIDw9IDB4MWZmZmZmZmZmZmZmZmY7XG4gIH1cbn0pOyIsIi8vIDIwLjEuMi42IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHtNQVhfU0FGRV9JTlRFR0VSOiAweDFmZmZmZmZmZmZmZmZmfSk7IiwiLy8gMjAuMS4yLjEwIE51bWJlci5NSU5fU0FGRV9JTlRFR0VSXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHtNSU5fU0FGRV9JTlRFR0VSOiAtMHgxZmZmZmZmZmZmZmZmZn0pOyIsInZhciAkZXhwb3J0ICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgJHBhcnNlRmxvYXQgPSByZXF1aXJlKCcuL19wYXJzZS1mbG9hdCcpO1xuLy8gMjAuMS4yLjEyIE51bWJlci5wYXJzZUZsb2F0KHN0cmluZylcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKE51bWJlci5wYXJzZUZsb2F0ICE9ICRwYXJzZUZsb2F0KSwgJ051bWJlcicsIHtwYXJzZUZsb2F0OiAkcGFyc2VGbG9hdH0pOyIsInZhciAkZXhwb3J0ICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX3BhcnNlLWludCcpO1xuLy8gMjAuMS4yLjEzIE51bWJlci5wYXJzZUludChzdHJpbmcsIHJhZGl4KVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoTnVtYmVyLnBhcnNlSW50ICE9ICRwYXJzZUludCksICdOdW1iZXInLCB7cGFyc2VJbnQ6ICRwYXJzZUludH0pOyIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIHRvSW50ZWdlciAgICA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKVxuICAsIGFOdW1iZXJWYWx1ZSA9IHJlcXVpcmUoJy4vX2EtbnVtYmVyLXZhbHVlJylcbiAgLCByZXBlYXQgICAgICAgPSByZXF1aXJlKCcuL19zdHJpbmctcmVwZWF0JylcbiAgLCAkdG9GaXhlZCAgICAgPSAxLi50b0ZpeGVkXG4gICwgZmxvb3IgICAgICAgID0gTWF0aC5mbG9vclxuICAsIGRhdGEgICAgICAgICA9IFswLCAwLCAwLCAwLCAwLCAwXVxuICAsIEVSUk9SICAgICAgICA9ICdOdW1iZXIudG9GaXhlZDogaW5jb3JyZWN0IGludm9jYXRpb24hJ1xuICAsIFpFUk8gICAgICAgICA9ICcwJztcblxudmFyIG11bHRpcGx5ID0gZnVuY3Rpb24obiwgYyl7XG4gIHZhciBpICA9IC0xXG4gICAgLCBjMiA9IGM7XG4gIHdoaWxlKCsraSA8IDYpe1xuICAgIGMyICs9IG4gKiBkYXRhW2ldO1xuICAgIGRhdGFbaV0gPSBjMiAlIDFlNztcbiAgICBjMiA9IGZsb29yKGMyIC8gMWU3KTtcbiAgfVxufTtcbnZhciBkaXZpZGUgPSBmdW5jdGlvbihuKXtcbiAgdmFyIGkgPSA2XG4gICAgLCBjID0gMDtcbiAgd2hpbGUoLS1pID49IDApe1xuICAgIGMgKz0gZGF0YVtpXTtcbiAgICBkYXRhW2ldID0gZmxvb3IoYyAvIG4pO1xuICAgIGMgPSAoYyAlIG4pICogMWU3O1xuICB9XG59O1xudmFyIG51bVRvU3RyaW5nID0gZnVuY3Rpb24oKXtcbiAgdmFyIGkgPSA2XG4gICAgLCBzID0gJyc7XG4gIHdoaWxlKC0taSA+PSAwKXtcbiAgICBpZihzICE9PSAnJyB8fCBpID09PSAwIHx8IGRhdGFbaV0gIT09IDApe1xuICAgICAgdmFyIHQgPSBTdHJpbmcoZGF0YVtpXSk7XG4gICAgICBzID0gcyA9PT0gJycgPyB0IDogcyArIHJlcGVhdC5jYWxsKFpFUk8sIDcgLSB0Lmxlbmd0aCkgKyB0O1xuICAgIH1cbiAgfSByZXR1cm4gcztcbn07XG52YXIgcG93ID0gZnVuY3Rpb24oeCwgbiwgYWNjKXtcbiAgcmV0dXJuIG4gPT09IDAgPyBhY2MgOiBuICUgMiA9PT0gMSA/IHBvdyh4LCBuIC0gMSwgYWNjICogeCkgOiBwb3coeCAqIHgsIG4gLyAyLCBhY2MpO1xufTtcbnZhciBsb2cgPSBmdW5jdGlvbih4KXtcbiAgdmFyIG4gID0gMFxuICAgICwgeDIgPSB4O1xuICB3aGlsZSh4MiA+PSA0MDk2KXtcbiAgICBuICs9IDEyO1xuICAgIHgyIC89IDQwOTY7XG4gIH1cbiAgd2hpbGUoeDIgPj0gMil7XG4gICAgbiAgKz0gMTtcbiAgICB4MiAvPSAyO1xuICB9IHJldHVybiBuO1xufTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoISEkdG9GaXhlZCAmJiAoXG4gIDAuMDAwMDgudG9GaXhlZCgzKSAhPT0gJzAuMDAwJyB8fFxuICAwLjkudG9GaXhlZCgwKSAhPT0gJzEnIHx8XG4gIDEuMjU1LnRvRml4ZWQoMikgIT09ICcxLjI1JyB8fFxuICAxMDAwMDAwMDAwMDAwMDAwMTI4Li50b0ZpeGVkKDApICE9PSAnMTAwMDAwMDAwMDAwMDAwMDEyOCdcbikgfHwgIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24oKXtcbiAgLy8gVjggfiBBbmRyb2lkIDQuMy1cbiAgJHRvRml4ZWQuY2FsbCh7fSk7XG59KSksICdOdW1iZXInLCB7XG4gIHRvRml4ZWQ6IGZ1bmN0aW9uIHRvRml4ZWQoZnJhY3Rpb25EaWdpdHMpe1xuICAgIHZhciB4ID0gYU51bWJlclZhbHVlKHRoaXMsIEVSUk9SKVxuICAgICAgLCBmID0gdG9JbnRlZ2VyKGZyYWN0aW9uRGlnaXRzKVxuICAgICAgLCBzID0gJydcbiAgICAgICwgbSA9IFpFUk9cbiAgICAgICwgZSwgeiwgaiwgaztcbiAgICBpZihmIDwgMCB8fCBmID4gMjApdGhyb3cgUmFuZ2VFcnJvcihFUlJPUik7XG4gICAgaWYoeCAhPSB4KXJldHVybiAnTmFOJztcbiAgICBpZih4IDw9IC0xZTIxIHx8IHggPj0gMWUyMSlyZXR1cm4gU3RyaW5nKHgpO1xuICAgIGlmKHggPCAwKXtcbiAgICAgIHMgPSAnLSc7XG4gICAgICB4ID0gLXg7XG4gICAgfVxuICAgIGlmKHggPiAxZS0yMSl7XG4gICAgICBlID0gbG9nKHggKiBwb3coMiwgNjksIDEpKSAtIDY5O1xuICAgICAgeiA9IGUgPCAwID8geCAqIHBvdygyLCAtZSwgMSkgOiB4IC8gcG93KDIsIGUsIDEpO1xuICAgICAgeiAqPSAweDEwMDAwMDAwMDAwMDAwO1xuICAgICAgZSA9IDUyIC0gZTtcbiAgICAgIGlmKGUgPiAwKXtcbiAgICAgICAgbXVsdGlwbHkoMCwgeik7XG4gICAgICAgIGogPSBmO1xuICAgICAgICB3aGlsZShqID49IDcpe1xuICAgICAgICAgIG11bHRpcGx5KDFlNywgMCk7XG4gICAgICAgICAgaiAtPSA3O1xuICAgICAgICB9XG4gICAgICAgIG11bHRpcGx5KHBvdygxMCwgaiwgMSksIDApO1xuICAgICAgICBqID0gZSAtIDE7XG4gICAgICAgIHdoaWxlKGogPj0gMjMpe1xuICAgICAgICAgIGRpdmlkZSgxIDw8IDIzKTtcbiAgICAgICAgICBqIC09IDIzO1xuICAgICAgICB9XG4gICAgICAgIGRpdmlkZSgxIDw8IGopO1xuICAgICAgICBtdWx0aXBseSgxLCAxKTtcbiAgICAgICAgZGl2aWRlKDIpO1xuICAgICAgICBtID0gbnVtVG9TdHJpbmcoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG11bHRpcGx5KDAsIHopO1xuICAgICAgICBtdWx0aXBseSgxIDw8IC1lLCAwKTtcbiAgICAgICAgbSA9IG51bVRvU3RyaW5nKCkgKyByZXBlYXQuY2FsbChaRVJPLCBmKTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYoZiA+IDApe1xuICAgICAgayA9IG0ubGVuZ3RoO1xuICAgICAgbSA9IHMgKyAoayA8PSBmID8gJzAuJyArIHJlcGVhdC5jYWxsKFpFUk8sIGYgLSBrKSArIG0gOiBtLnNsaWNlKDAsIGsgLSBmKSArICcuJyArIG0uc2xpY2UoayAtIGYpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHMgKyBtO1xuICAgIH0gcmV0dXJuIG07XG4gIH1cbn0pOyIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsICRmYWlscyAgICAgICA9IHJlcXVpcmUoJy4vX2ZhaWxzJylcbiAgLCBhTnVtYmVyVmFsdWUgPSByZXF1aXJlKCcuL19hLW51bWJlci12YWx1ZScpXG4gICwgJHRvUHJlY2lzaW9uID0gMS4udG9QcmVjaXNpb247XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKCRmYWlscyhmdW5jdGlvbigpe1xuICAvLyBJRTctXG4gIHJldHVybiAkdG9QcmVjaXNpb24uY2FsbCgxLCB1bmRlZmluZWQpICE9PSAnMSc7XG59KSB8fCAhJGZhaWxzKGZ1bmN0aW9uKCl7XG4gIC8vIFY4IH4gQW5kcm9pZCA0LjMtXG4gICR0b1ByZWNpc2lvbi5jYWxsKHt9KTtcbn0pKSwgJ051bWJlcicsIHtcbiAgdG9QcmVjaXNpb246IGZ1bmN0aW9uIHRvUHJlY2lzaW9uKHByZWNpc2lvbil7XG4gICAgdmFyIHRoYXQgPSBhTnVtYmVyVmFsdWUodGhpcywgJ051bWJlciN0b1ByZWNpc2lvbjogaW5jb3JyZWN0IGludm9jYXRpb24hJyk7XG4gICAgcmV0dXJuIHByZWNpc2lvbiA9PT0gdW5kZWZpbmVkID8gJHRvUHJlY2lzaW9uLmNhbGwodGhhdCkgOiAkdG9QcmVjaXNpb24uY2FsbCh0aGF0LCBwcmVjaXNpb24pOyBcbiAgfVxufSk7IiwiLy8gMTkuMS4zLjEgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHNvdXJjZSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GLCAnT2JqZWN0Jywge2Fzc2lnbjogcmVxdWlyZSgnLi9fb2JqZWN0LWFzc2lnbicpfSk7IiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuLy8gMTkuMS4yLjIgLyAxNS4yLjMuNSBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHtjcmVhdGU6IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKX0pOyIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4vLyAxOS4xLjIuMyAvIDE1LjIuMy43IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpLCAnT2JqZWN0Jywge2RlZmluZVByb3BlcnRpZXM6IHJlcXVpcmUoJy4vX29iamVjdC1kcHMnKX0pOyIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4vLyAxOS4xLjIuNCAvIDE1LjIuMy42IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSwgJ09iamVjdCcsIHtkZWZpbmVQcm9wZXJ0eTogcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZn0pOyIsIi8vIDE5LjEuMi41IE9iamVjdC5mcmVlemUoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpXG4gICwgbWV0YSAgICAgPSByZXF1aXJlKCcuL19tZXRhJykub25GcmVlemU7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnZnJlZXplJywgZnVuY3Rpb24oJGZyZWV6ZSl7XG4gIHJldHVybiBmdW5jdGlvbiBmcmVlemUoaXQpe1xuICAgIHJldHVybiAkZnJlZXplICYmIGlzT2JqZWN0KGl0KSA/ICRmcmVlemUobWV0YShpdCkpIDogaXQ7XG4gIH07XG59KTsiLCIvLyAxOS4xLjIuNiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApXG52YXIgdG9JT2JqZWN0ICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKVxuICAsICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmY7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yJywgZnVuY3Rpb24oKXtcbiAgcmV0dXJuIGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihpdCwga2V5KXtcbiAgICByZXR1cm4gJGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0b0lPYmplY3QoaXQpLCBrZXkpO1xuICB9O1xufSk7IiwiLy8gMTkuMS4yLjcgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnZ2V0T3duUHJvcGVydHlOYW1lcycsIGZ1bmN0aW9uKCl7XG4gIHJldHVybiByZXF1aXJlKCcuL19vYmplY3QtZ29wbi1leHQnKS5mO1xufSk7IiwiLy8gMTkuMS4yLjkgT2JqZWN0LmdldFByb3RvdHlwZU9mKE8pXG52YXIgdG9PYmplY3QgICAgICAgID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0JylcbiAgLCAkZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnZ2V0UHJvdG90eXBlT2YnLCBmdW5jdGlvbigpe1xuICByZXR1cm4gZnVuY3Rpb24gZ2V0UHJvdG90eXBlT2YoaXQpe1xuICAgIHJldHVybiAkZ2V0UHJvdG90eXBlT2YodG9PYmplY3QoaXQpKTtcbiAgfTtcbn0pOyIsIi8vIDE5LjEuMi4xMSBPYmplY3QuaXNFeHRlbnNpYmxlKE8pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdpc0V4dGVuc2libGUnLCBmdW5jdGlvbigkaXNFeHRlbnNpYmxlKXtcbiAgcmV0dXJuIGZ1bmN0aW9uIGlzRXh0ZW5zaWJsZShpdCl7XG4gICAgcmV0dXJuIGlzT2JqZWN0KGl0KSA/ICRpc0V4dGVuc2libGUgPyAkaXNFeHRlbnNpYmxlKGl0KSA6IHRydWUgOiBmYWxzZTtcbiAgfTtcbn0pOyIsIi8vIDE5LjEuMi4xMiBPYmplY3QuaXNGcm96ZW4oTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2lzRnJvemVuJywgZnVuY3Rpb24oJGlzRnJvemVuKXtcbiAgcmV0dXJuIGZ1bmN0aW9uIGlzRnJvemVuKGl0KXtcbiAgICByZXR1cm4gaXNPYmplY3QoaXQpID8gJGlzRnJvemVuID8gJGlzRnJvemVuKGl0KSA6IGZhbHNlIDogdHJ1ZTtcbiAgfTtcbn0pOyIsIi8vIDE5LjEuMi4xMyBPYmplY3QuaXNTZWFsZWQoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2lzU2VhbGVkJywgZnVuY3Rpb24oJGlzU2VhbGVkKXtcbiAgcmV0dXJuIGZ1bmN0aW9uIGlzU2VhbGVkKGl0KXtcbiAgICByZXR1cm4gaXNPYmplY3QoaXQpID8gJGlzU2VhbGVkID8gJGlzU2VhbGVkKGl0KSA6IGZhbHNlIDogdHJ1ZTtcbiAgfTtcbn0pOyIsIi8vIDE5LjEuMy4xMCBPYmplY3QuaXModmFsdWUxLCB2YWx1ZTIpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7aXM6IHJlcXVpcmUoJy4vX3NhbWUtdmFsdWUnKX0pOyIsIi8vIDE5LjEuMi4xNCBPYmplY3Qua2V5cyhPKVxudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0JylcbiAgLCAka2V5cyAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgna2V5cycsIGZ1bmN0aW9uKCl7XG4gIHJldHVybiBmdW5jdGlvbiBrZXlzKGl0KXtcbiAgICByZXR1cm4gJGtleXModG9PYmplY3QoaXQpKTtcbiAgfTtcbn0pOyIsIi8vIDE5LjEuMi4xNSBPYmplY3QucHJldmVudEV4dGVuc2lvbnMoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpXG4gICwgbWV0YSAgICAgPSByZXF1aXJlKCcuL19tZXRhJykub25GcmVlemU7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgncHJldmVudEV4dGVuc2lvbnMnLCBmdW5jdGlvbigkcHJldmVudEV4dGVuc2lvbnMpe1xuICByZXR1cm4gZnVuY3Rpb24gcHJldmVudEV4dGVuc2lvbnMoaXQpe1xuICAgIHJldHVybiAkcHJldmVudEV4dGVuc2lvbnMgJiYgaXNPYmplY3QoaXQpID8gJHByZXZlbnRFeHRlbnNpb25zKG1ldGEoaXQpKSA6IGl0O1xuICB9O1xufSk7IiwiLy8gMTkuMS4yLjE3IE9iamVjdC5zZWFsKE8pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKVxuICAsIG1ldGEgICAgID0gcmVxdWlyZSgnLi9fbWV0YScpLm9uRnJlZXplO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ3NlYWwnLCBmdW5jdGlvbigkc2VhbCl7XG4gIHJldHVybiBmdW5jdGlvbiBzZWFsKGl0KXtcbiAgICByZXR1cm4gJHNlYWwgJiYgaXNPYmplY3QoaXQpID8gJHNlYWwobWV0YShpdCkpIDogaXQ7XG4gIH07XG59KTsiLCIvLyAxOS4xLjMuMTkgT2JqZWN0LnNldFByb3RvdHlwZU9mKE8sIHByb3RvKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge3NldFByb3RvdHlwZU9mOiByZXF1aXJlKCcuL19zZXQtcHJvdG8nKS5zZXR9KTsiLCIndXNlIHN0cmljdCc7XG4vLyAxOS4xLjMuNiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKClcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpXG4gICwgdGVzdCAgICA9IHt9O1xudGVzdFtyZXF1aXJlKCcuL193a3MnKSgndG9TdHJpbmdUYWcnKV0gPSAneic7XG5pZih0ZXN0ICsgJycgIT0gJ1tvYmplY3Qgel0nKXtcbiAgcmVxdWlyZSgnLi9fcmVkZWZpbmUnKShPYmplY3QucHJvdG90eXBlLCAndG9TdHJpbmcnLCBmdW5jdGlvbiB0b1N0cmluZygpe1xuICAgIHJldHVybiAnW29iamVjdCAnICsgY2xhc3NvZih0aGlzKSArICddJztcbiAgfSwgdHJ1ZSk7XG59IiwidmFyICRleHBvcnQgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCAkcGFyc2VGbG9hdCA9IHJlcXVpcmUoJy4vX3BhcnNlLWZsb2F0Jyk7XG4vLyAxOC4yLjQgcGFyc2VGbG9hdChzdHJpbmcpXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuRiAqIChwYXJzZUZsb2F0ICE9ICRwYXJzZUZsb2F0KSwge3BhcnNlRmxvYXQ6ICRwYXJzZUZsb2F0fSk7IiwidmFyICRleHBvcnQgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgJHBhcnNlSW50ID0gcmVxdWlyZSgnLi9fcGFyc2UtaW50Jyk7XG4vLyAxOC4yLjUgcGFyc2VJbnQoc3RyaW5nLCByYWRpeClcbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5GICogKHBhcnNlSW50ICE9ICRwYXJzZUludCksIHtwYXJzZUludDogJHBhcnNlSW50fSk7IiwiJ3VzZSBzdHJpY3QnO1xudmFyIExJQlJBUlkgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKVxuICAsIGdsb2JhbCAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpXG4gICwgY3R4ICAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fY3R4JylcbiAgLCBjbGFzc29mICAgICAgICAgICAgPSByZXF1aXJlKCcuL19jbGFzc29mJylcbiAgLCAkZXhwb3J0ICAgICAgICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIGlzT2JqZWN0ICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpXG4gICwgYUZ1bmN0aW9uICAgICAgICAgID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpXG4gICwgYW5JbnN0YW5jZSAgICAgICAgID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKVxuICAsIGZvck9mICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2Zvci1vZicpXG4gICwgc3BlY2llc0NvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi9fc3BlY2llcy1jb25zdHJ1Y3RvcicpXG4gICwgdGFzayAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fdGFzaycpLnNldFxuICAsIG1pY3JvdGFzayAgICAgICAgICA9IHJlcXVpcmUoJy4vX21pY3JvdGFzaycpKClcbiAgLCBQUk9NSVNFICAgICAgICAgICAgPSAnUHJvbWlzZSdcbiAgLCBUeXBlRXJyb3IgICAgICAgICAgPSBnbG9iYWwuVHlwZUVycm9yXG4gICwgcHJvY2VzcyAgICAgICAgICAgID0gZ2xvYmFsLnByb2Nlc3NcbiAgLCAkUHJvbWlzZSAgICAgICAgICAgPSBnbG9iYWxbUFJPTUlTRV1cbiAgLCBwcm9jZXNzICAgICAgICAgICAgPSBnbG9iYWwucHJvY2Vzc1xuICAsIGlzTm9kZSAgICAgICAgICAgICA9IGNsYXNzb2YocHJvY2VzcykgPT0gJ3Byb2Nlc3MnXG4gICwgZW1wdHkgICAgICAgICAgICAgID0gZnVuY3Rpb24oKXsgLyogZW1wdHkgKi8gfVxuICAsIEludGVybmFsLCBHZW5lcmljUHJvbWlzZUNhcGFiaWxpdHksIFdyYXBwZXI7XG5cbnZhciBVU0VfTkFUSVZFID0gISFmdW5jdGlvbigpe1xuICB0cnkge1xuICAgIC8vIGNvcnJlY3Qgc3ViY2xhc3Npbmcgd2l0aCBAQHNwZWNpZXMgc3VwcG9ydFxuICAgIHZhciBwcm9taXNlICAgICA9ICRQcm9taXNlLnJlc29sdmUoMSlcbiAgICAgICwgRmFrZVByb21pc2UgPSAocHJvbWlzZS5jb25zdHJ1Y3RvciA9IHt9KVtyZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpXSA9IGZ1bmN0aW9uKGV4ZWMpeyBleGVjKGVtcHR5LCBlbXB0eSk7IH07XG4gICAgLy8gdW5oYW5kbGVkIHJlamVjdGlvbnMgdHJhY2tpbmcgc3VwcG9ydCwgTm9kZUpTIFByb21pc2Ugd2l0aG91dCBpdCBmYWlscyBAQHNwZWNpZXMgdGVzdFxuICAgIHJldHVybiAoaXNOb2RlIHx8IHR5cGVvZiBQcm9taXNlUmVqZWN0aW9uRXZlbnQgPT0gJ2Z1bmN0aW9uJykgJiYgcHJvbWlzZS50aGVuKGVtcHR5KSBpbnN0YW5jZW9mIEZha2VQcm9taXNlO1xuICB9IGNhdGNoKGUpeyAvKiBlbXB0eSAqLyB9XG59KCk7XG5cbi8vIGhlbHBlcnNcbnZhciBzYW1lQ29uc3RydWN0b3IgPSBmdW5jdGlvbihhLCBiKXtcbiAgLy8gd2l0aCBsaWJyYXJ5IHdyYXBwZXIgc3BlY2lhbCBjYXNlXG4gIHJldHVybiBhID09PSBiIHx8IGEgPT09ICRQcm9taXNlICYmIGIgPT09IFdyYXBwZXI7XG59O1xudmFyIGlzVGhlbmFibGUgPSBmdW5jdGlvbihpdCl7XG4gIHZhciB0aGVuO1xuICByZXR1cm4gaXNPYmplY3QoaXQpICYmIHR5cGVvZiAodGhlbiA9IGl0LnRoZW4pID09ICdmdW5jdGlvbicgPyB0aGVuIDogZmFsc2U7XG59O1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5ID0gZnVuY3Rpb24oQyl7XG4gIHJldHVybiBzYW1lQ29uc3RydWN0b3IoJFByb21pc2UsIEMpXG4gICAgPyBuZXcgUHJvbWlzZUNhcGFiaWxpdHkoQylcbiAgICA6IG5ldyBHZW5lcmljUHJvbWlzZUNhcGFiaWxpdHkoQyk7XG59O1xudmFyIFByb21pc2VDYXBhYmlsaXR5ID0gR2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5ID0gZnVuY3Rpb24oQyl7XG4gIHZhciByZXNvbHZlLCByZWplY3Q7XG4gIHRoaXMucHJvbWlzZSA9IG5ldyBDKGZ1bmN0aW9uKCQkcmVzb2x2ZSwgJCRyZWplY3Qpe1xuICAgIGlmKHJlc29sdmUgIT09IHVuZGVmaW5lZCB8fCByZWplY3QgIT09IHVuZGVmaW5lZCl0aHJvdyBUeXBlRXJyb3IoJ0JhZCBQcm9taXNlIGNvbnN0cnVjdG9yJyk7XG4gICAgcmVzb2x2ZSA9ICQkcmVzb2x2ZTtcbiAgICByZWplY3QgID0gJCRyZWplY3Q7XG4gIH0pO1xuICB0aGlzLnJlc29sdmUgPSBhRnVuY3Rpb24ocmVzb2x2ZSk7XG4gIHRoaXMucmVqZWN0ICA9IGFGdW5jdGlvbihyZWplY3QpO1xufTtcbnZhciBwZXJmb3JtID0gZnVuY3Rpb24oZXhlYyl7XG4gIHRyeSB7XG4gICAgZXhlYygpO1xuICB9IGNhdGNoKGUpe1xuICAgIHJldHVybiB7ZXJyb3I6IGV9O1xuICB9XG59O1xudmFyIG5vdGlmeSA9IGZ1bmN0aW9uKHByb21pc2UsIGlzUmVqZWN0KXtcbiAgaWYocHJvbWlzZS5fbilyZXR1cm47XG4gIHByb21pc2UuX24gPSB0cnVlO1xuICB2YXIgY2hhaW4gPSBwcm9taXNlLl9jO1xuICBtaWNyb3Rhc2soZnVuY3Rpb24oKXtcbiAgICB2YXIgdmFsdWUgPSBwcm9taXNlLl92XG4gICAgICAsIG9rICAgID0gcHJvbWlzZS5fcyA9PSAxXG4gICAgICAsIGkgICAgID0gMDtcbiAgICB2YXIgcnVuID0gZnVuY3Rpb24ocmVhY3Rpb24pe1xuICAgICAgdmFyIGhhbmRsZXIgPSBvayA/IHJlYWN0aW9uLm9rIDogcmVhY3Rpb24uZmFpbFxuICAgICAgICAsIHJlc29sdmUgPSByZWFjdGlvbi5yZXNvbHZlXG4gICAgICAgICwgcmVqZWN0ICA9IHJlYWN0aW9uLnJlamVjdFxuICAgICAgICAsIGRvbWFpbiAgPSByZWFjdGlvbi5kb21haW5cbiAgICAgICAgLCByZXN1bHQsIHRoZW47XG4gICAgICB0cnkge1xuICAgICAgICBpZihoYW5kbGVyKXtcbiAgICAgICAgICBpZighb2spe1xuICAgICAgICAgICAgaWYocHJvbWlzZS5faCA9PSAyKW9uSGFuZGxlVW5oYW5kbGVkKHByb21pc2UpO1xuICAgICAgICAgICAgcHJvbWlzZS5faCA9IDE7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmKGhhbmRsZXIgPT09IHRydWUpcmVzdWx0ID0gdmFsdWU7XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZihkb21haW4pZG9tYWluLmVudGVyKCk7XG4gICAgICAgICAgICByZXN1bHQgPSBoYW5kbGVyKHZhbHVlKTtcbiAgICAgICAgICAgIGlmKGRvbWFpbilkb21haW4uZXhpdCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZihyZXN1bHQgPT09IHJlYWN0aW9uLnByb21pc2Upe1xuICAgICAgICAgICAgcmVqZWN0KFR5cGVFcnJvcignUHJvbWlzZS1jaGFpbiBjeWNsZScpKTtcbiAgICAgICAgICB9IGVsc2UgaWYodGhlbiA9IGlzVGhlbmFibGUocmVzdWx0KSl7XG4gICAgICAgICAgICB0aGVuLmNhbGwocmVzdWx0LCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgIH0gZWxzZSByZXNvbHZlKHJlc3VsdCk7XG4gICAgICAgIH0gZWxzZSByZWplY3QodmFsdWUpO1xuICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgfVxuICAgIH07XG4gICAgd2hpbGUoY2hhaW4ubGVuZ3RoID4gaSlydW4oY2hhaW5baSsrXSk7IC8vIHZhcmlhYmxlIGxlbmd0aCAtIGNhbid0IHVzZSBmb3JFYWNoXG4gICAgcHJvbWlzZS5fYyA9IFtdO1xuICAgIHByb21pc2UuX24gPSBmYWxzZTtcbiAgICBpZihpc1JlamVjdCAmJiAhcHJvbWlzZS5faClvblVuaGFuZGxlZChwcm9taXNlKTtcbiAgfSk7XG59O1xudmFyIG9uVW5oYW5kbGVkID0gZnVuY3Rpb24ocHJvbWlzZSl7XG4gIHRhc2suY2FsbChnbG9iYWwsIGZ1bmN0aW9uKCl7XG4gICAgdmFyIHZhbHVlID0gcHJvbWlzZS5fdlxuICAgICAgLCBhYnJ1cHQsIGhhbmRsZXIsIGNvbnNvbGU7XG4gICAgaWYoaXNVbmhhbmRsZWQocHJvbWlzZSkpe1xuICAgICAgYWJydXB0ID0gcGVyZm9ybShmdW5jdGlvbigpe1xuICAgICAgICBpZihpc05vZGUpe1xuICAgICAgICAgIHByb2Nlc3MuZW1pdCgndW5oYW5kbGVkUmVqZWN0aW9uJywgdmFsdWUsIHByb21pc2UpO1xuICAgICAgICB9IGVsc2UgaWYoaGFuZGxlciA9IGdsb2JhbC5vbnVuaGFuZGxlZHJlamVjdGlvbil7XG4gICAgICAgICAgaGFuZGxlcih7cHJvbWlzZTogcHJvbWlzZSwgcmVhc29uOiB2YWx1ZX0pO1xuICAgICAgICB9IGVsc2UgaWYoKGNvbnNvbGUgPSBnbG9iYWwuY29uc29sZSkgJiYgY29uc29sZS5lcnJvcil7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignVW5oYW5kbGVkIHByb21pc2UgcmVqZWN0aW9uJywgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIC8vIEJyb3dzZXJzIHNob3VsZCBub3QgdHJpZ2dlciBgcmVqZWN0aW9uSGFuZGxlZGAgZXZlbnQgaWYgaXQgd2FzIGhhbmRsZWQgaGVyZSwgTm9kZUpTIC0gc2hvdWxkXG4gICAgICBwcm9taXNlLl9oID0gaXNOb2RlIHx8IGlzVW5oYW5kbGVkKHByb21pc2UpID8gMiA6IDE7XG4gICAgfSBwcm9taXNlLl9hID0gdW5kZWZpbmVkO1xuICAgIGlmKGFicnVwdCl0aHJvdyBhYnJ1cHQuZXJyb3I7XG4gIH0pO1xufTtcbnZhciBpc1VuaGFuZGxlZCA9IGZ1bmN0aW9uKHByb21pc2Upe1xuICBpZihwcm9taXNlLl9oID09IDEpcmV0dXJuIGZhbHNlO1xuICB2YXIgY2hhaW4gPSBwcm9taXNlLl9hIHx8IHByb21pc2UuX2NcbiAgICAsIGkgICAgID0gMFxuICAgICwgcmVhY3Rpb247XG4gIHdoaWxlKGNoYWluLmxlbmd0aCA+IGkpe1xuICAgIHJlYWN0aW9uID0gY2hhaW5baSsrXTtcbiAgICBpZihyZWFjdGlvbi5mYWlsIHx8ICFpc1VuaGFuZGxlZChyZWFjdGlvbi5wcm9taXNlKSlyZXR1cm4gZmFsc2U7XG4gIH0gcmV0dXJuIHRydWU7XG59O1xudmFyIG9uSGFuZGxlVW5oYW5kbGVkID0gZnVuY3Rpb24ocHJvbWlzZSl7XG4gIHRhc2suY2FsbChnbG9iYWwsIGZ1bmN0aW9uKCl7XG4gICAgdmFyIGhhbmRsZXI7XG4gICAgaWYoaXNOb2RlKXtcbiAgICAgIHByb2Nlc3MuZW1pdCgncmVqZWN0aW9uSGFuZGxlZCcsIHByb21pc2UpO1xuICAgIH0gZWxzZSBpZihoYW5kbGVyID0gZ2xvYmFsLm9ucmVqZWN0aW9uaGFuZGxlZCl7XG4gICAgICBoYW5kbGVyKHtwcm9taXNlOiBwcm9taXNlLCByZWFzb246IHByb21pc2UuX3Z9KTtcbiAgICB9XG4gIH0pO1xufTtcbnZhciAkcmVqZWN0ID0gZnVuY3Rpb24odmFsdWUpe1xuICB2YXIgcHJvbWlzZSA9IHRoaXM7XG4gIGlmKHByb21pc2UuX2QpcmV0dXJuO1xuICBwcm9taXNlLl9kID0gdHJ1ZTtcbiAgcHJvbWlzZSA9IHByb21pc2UuX3cgfHwgcHJvbWlzZTsgLy8gdW53cmFwXG4gIHByb21pc2UuX3YgPSB2YWx1ZTtcbiAgcHJvbWlzZS5fcyA9IDI7XG4gIGlmKCFwcm9taXNlLl9hKXByb21pc2UuX2EgPSBwcm9taXNlLl9jLnNsaWNlKCk7XG4gIG5vdGlmeShwcm9taXNlLCB0cnVlKTtcbn07XG52YXIgJHJlc29sdmUgPSBmdW5jdGlvbih2YWx1ZSl7XG4gIHZhciBwcm9taXNlID0gdGhpc1xuICAgICwgdGhlbjtcbiAgaWYocHJvbWlzZS5fZClyZXR1cm47XG4gIHByb21pc2UuX2QgPSB0cnVlO1xuICBwcm9taXNlID0gcHJvbWlzZS5fdyB8fCBwcm9taXNlOyAvLyB1bndyYXBcbiAgdHJ5IHtcbiAgICBpZihwcm9taXNlID09PSB2YWx1ZSl0aHJvdyBUeXBlRXJyb3IoXCJQcm9taXNlIGNhbid0IGJlIHJlc29sdmVkIGl0c2VsZlwiKTtcbiAgICBpZih0aGVuID0gaXNUaGVuYWJsZSh2YWx1ZSkpe1xuICAgICAgbWljcm90YXNrKGZ1bmN0aW9uKCl7XG4gICAgICAgIHZhciB3cmFwcGVyID0ge193OiBwcm9taXNlLCBfZDogZmFsc2V9OyAvLyB3cmFwXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgdGhlbi5jYWxsKHZhbHVlLCBjdHgoJHJlc29sdmUsIHdyYXBwZXIsIDEpLCBjdHgoJHJlamVjdCwgd3JhcHBlciwgMSkpO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICRyZWplY3QuY2FsbCh3cmFwcGVyLCBlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb21pc2UuX3YgPSB2YWx1ZTtcbiAgICAgIHByb21pc2UuX3MgPSAxO1xuICAgICAgbm90aWZ5KHByb21pc2UsIGZhbHNlKTtcbiAgICB9XG4gIH0gY2F0Y2goZSl7XG4gICAgJHJlamVjdC5jYWxsKHtfdzogcHJvbWlzZSwgX2Q6IGZhbHNlfSwgZSk7IC8vIHdyYXBcbiAgfVxufTtcblxuLy8gY29uc3RydWN0b3IgcG9seWZpbGxcbmlmKCFVU0VfTkFUSVZFKXtcbiAgLy8gMjUuNC4zLjEgUHJvbWlzZShleGVjdXRvcilcbiAgJFByb21pc2UgPSBmdW5jdGlvbiBQcm9taXNlKGV4ZWN1dG9yKXtcbiAgICBhbkluc3RhbmNlKHRoaXMsICRQcm9taXNlLCBQUk9NSVNFLCAnX2gnKTtcbiAgICBhRnVuY3Rpb24oZXhlY3V0b3IpO1xuICAgIEludGVybmFsLmNhbGwodGhpcyk7XG4gICAgdHJ5IHtcbiAgICAgIGV4ZWN1dG9yKGN0eCgkcmVzb2x2ZSwgdGhpcywgMSksIGN0eCgkcmVqZWN0LCB0aGlzLCAxKSk7XG4gICAgfSBjYXRjaChlcnIpe1xuICAgICAgJHJlamVjdC5jYWxsKHRoaXMsIGVycik7XG4gICAgfVxuICB9O1xuICBJbnRlcm5hbCA9IGZ1bmN0aW9uIFByb21pc2UoZXhlY3V0b3Ipe1xuICAgIHRoaXMuX2MgPSBbXTsgICAgICAgICAgICAgLy8gPC0gYXdhaXRpbmcgcmVhY3Rpb25zXG4gICAgdGhpcy5fYSA9IHVuZGVmaW5lZDsgICAgICAvLyA8LSBjaGVja2VkIGluIGlzVW5oYW5kbGVkIHJlYWN0aW9uc1xuICAgIHRoaXMuX3MgPSAwOyAgICAgICAgICAgICAgLy8gPC0gc3RhdGVcbiAgICB0aGlzLl9kID0gZmFsc2U7ICAgICAgICAgIC8vIDwtIGRvbmVcbiAgICB0aGlzLl92ID0gdW5kZWZpbmVkOyAgICAgIC8vIDwtIHZhbHVlXG4gICAgdGhpcy5faCA9IDA7ICAgICAgICAgICAgICAvLyA8LSByZWplY3Rpb24gc3RhdGUsIDAgLSBkZWZhdWx0LCAxIC0gaGFuZGxlZCwgMiAtIHVuaGFuZGxlZFxuICAgIHRoaXMuX24gPSBmYWxzZTsgICAgICAgICAgLy8gPC0gbm90aWZ5XG4gIH07XG4gIEludGVybmFsLnByb3RvdHlwZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpKCRQcm9taXNlLnByb3RvdHlwZSwge1xuICAgIC8vIDI1LjQuNS4zIFByb21pc2UucHJvdG90eXBlLnRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpXG4gICAgdGhlbjogZnVuY3Rpb24gdGhlbihvbkZ1bGZpbGxlZCwgb25SZWplY3RlZCl7XG4gICAgICB2YXIgcmVhY3Rpb24gICAgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eShzcGVjaWVzQ29uc3RydWN0b3IodGhpcywgJFByb21pc2UpKTtcbiAgICAgIHJlYWN0aW9uLm9rICAgICA9IHR5cGVvZiBvbkZ1bGZpbGxlZCA9PSAnZnVuY3Rpb24nID8gb25GdWxmaWxsZWQgOiB0cnVlO1xuICAgICAgcmVhY3Rpb24uZmFpbCAgID0gdHlwZW9mIG9uUmVqZWN0ZWQgPT0gJ2Z1bmN0aW9uJyAmJiBvblJlamVjdGVkO1xuICAgICAgcmVhY3Rpb24uZG9tYWluID0gaXNOb2RlID8gcHJvY2Vzcy5kb21haW4gOiB1bmRlZmluZWQ7XG4gICAgICB0aGlzLl9jLnB1c2gocmVhY3Rpb24pO1xuICAgICAgaWYodGhpcy5fYSl0aGlzLl9hLnB1c2gocmVhY3Rpb24pO1xuICAgICAgaWYodGhpcy5fcylub3RpZnkodGhpcywgZmFsc2UpO1xuICAgICAgcmV0dXJuIHJlYWN0aW9uLnByb21pc2U7XG4gICAgfSxcbiAgICAvLyAyNS40LjUuMSBQcm9taXNlLnByb3RvdHlwZS5jYXRjaChvblJlamVjdGVkKVxuICAgICdjYXRjaCc6IGZ1bmN0aW9uKG9uUmVqZWN0ZWQpe1xuICAgICAgcmV0dXJuIHRoaXMudGhlbih1bmRlZmluZWQsIG9uUmVqZWN0ZWQpO1xuICAgIH1cbiAgfSk7XG4gIFByb21pc2VDYXBhYmlsaXR5ID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgcHJvbWlzZSAgPSBuZXcgSW50ZXJuYWw7XG4gICAgdGhpcy5wcm9taXNlID0gcHJvbWlzZTtcbiAgICB0aGlzLnJlc29sdmUgPSBjdHgoJHJlc29sdmUsIHByb21pc2UsIDEpO1xuICAgIHRoaXMucmVqZWN0ICA9IGN0eCgkcmVqZWN0LCBwcm9taXNlLCAxKTtcbiAgfTtcbn1cblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwge1Byb21pc2U6ICRQcm9taXNlfSk7XG5yZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpKCRQcm9taXNlLCBQUk9NSVNFKTtcbnJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoUFJPTUlTRSk7XG5XcmFwcGVyID0gcmVxdWlyZSgnLi9fY29yZScpW1BST01JU0VdO1xuXG4vLyBzdGF0aWNzXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCBQUk9NSVNFLCB7XG4gIC8vIDI1LjQuNC41IFByb21pc2UucmVqZWN0KHIpXG4gIHJlamVjdDogZnVuY3Rpb24gcmVqZWN0KHIpe1xuICAgIHZhciBjYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkodGhpcylcbiAgICAgICwgJCRyZWplY3QgICA9IGNhcGFiaWxpdHkucmVqZWN0O1xuICAgICQkcmVqZWN0KHIpO1xuICAgIHJldHVybiBjYXBhYmlsaXR5LnByb21pc2U7XG4gIH1cbn0pO1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoTElCUkFSWSB8fCAhVVNFX05BVElWRSksIFBST01JU0UsIHtcbiAgLy8gMjUuNC40LjYgUHJvbWlzZS5yZXNvbHZlKHgpXG4gIHJlc29sdmU6IGZ1bmN0aW9uIHJlc29sdmUoeCl7XG4gICAgLy8gaW5zdGFuY2VvZiBpbnN0ZWFkIG9mIGludGVybmFsIHNsb3QgY2hlY2sgYmVjYXVzZSB3ZSBzaG91bGQgZml4IGl0IHdpdGhvdXQgcmVwbGFjZW1lbnQgbmF0aXZlIFByb21pc2UgY29yZVxuICAgIGlmKHggaW5zdGFuY2VvZiAkUHJvbWlzZSAmJiBzYW1lQ29uc3RydWN0b3IoeC5jb25zdHJ1Y3RvciwgdGhpcykpcmV0dXJuIHg7XG4gICAgdmFyIGNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eSh0aGlzKVxuICAgICAgLCAkJHJlc29sdmUgID0gY2FwYWJpbGl0eS5yZXNvbHZlO1xuICAgICQkcmVzb2x2ZSh4KTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9XG59KTtcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIShVU0VfTkFUSVZFICYmIHJlcXVpcmUoJy4vX2l0ZXItZGV0ZWN0JykoZnVuY3Rpb24oaXRlcil7XG4gICRQcm9taXNlLmFsbChpdGVyKVsnY2F0Y2gnXShlbXB0eSk7XG59KSksIFBST01JU0UsIHtcbiAgLy8gMjUuNC40LjEgUHJvbWlzZS5hbGwoaXRlcmFibGUpXG4gIGFsbDogZnVuY3Rpb24gYWxsKGl0ZXJhYmxlKXtcbiAgICB2YXIgQyAgICAgICAgICA9IHRoaXNcbiAgICAgICwgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KEMpXG4gICAgICAsIHJlc29sdmUgICAgPSBjYXBhYmlsaXR5LnJlc29sdmVcbiAgICAgICwgcmVqZWN0ICAgICA9IGNhcGFiaWxpdHkucmVqZWN0O1xuICAgIHZhciBhYnJ1cHQgPSBwZXJmb3JtKGZ1bmN0aW9uKCl7XG4gICAgICB2YXIgdmFsdWVzICAgID0gW11cbiAgICAgICAgLCBpbmRleCAgICAgPSAwXG4gICAgICAgICwgcmVtYWluaW5nID0gMTtcbiAgICAgIGZvck9mKGl0ZXJhYmxlLCBmYWxzZSwgZnVuY3Rpb24ocHJvbWlzZSl7XG4gICAgICAgIHZhciAkaW5kZXggICAgICAgID0gaW5kZXgrK1xuICAgICAgICAgICwgYWxyZWFkeUNhbGxlZCA9IGZhbHNlO1xuICAgICAgICB2YWx1ZXMucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICByZW1haW5pbmcrKztcbiAgICAgICAgQy5yZXNvbHZlKHByb21pc2UpLnRoZW4oZnVuY3Rpb24odmFsdWUpe1xuICAgICAgICAgIGlmKGFscmVhZHlDYWxsZWQpcmV0dXJuO1xuICAgICAgICAgIGFscmVhZHlDYWxsZWQgID0gdHJ1ZTtcbiAgICAgICAgICB2YWx1ZXNbJGluZGV4XSA9IHZhbHVlO1xuICAgICAgICAgIC0tcmVtYWluaW5nIHx8IHJlc29sdmUodmFsdWVzKTtcbiAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgICAgLS1yZW1haW5pbmcgfHwgcmVzb2x2ZSh2YWx1ZXMpO1xuICAgIH0pO1xuICAgIGlmKGFicnVwdClyZWplY3QoYWJydXB0LmVycm9yKTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9LFxuICAvLyAyNS40LjQuNCBQcm9taXNlLnJhY2UoaXRlcmFibGUpXG4gIHJhY2U6IGZ1bmN0aW9uIHJhY2UoaXRlcmFibGUpe1xuICAgIHZhciBDICAgICAgICAgID0gdGhpc1xuICAgICAgLCBjYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkoQylcbiAgICAgICwgcmVqZWN0ICAgICA9IGNhcGFiaWxpdHkucmVqZWN0O1xuICAgIHZhciBhYnJ1cHQgPSBwZXJmb3JtKGZ1bmN0aW9uKCl7XG4gICAgICBmb3JPZihpdGVyYWJsZSwgZmFsc2UsIGZ1bmN0aW9uKHByb21pc2Upe1xuICAgICAgICBDLnJlc29sdmUocHJvbWlzZSkudGhlbihjYXBhYmlsaXR5LnJlc29sdmUsIHJlamVjdCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBpZihhYnJ1cHQpcmVqZWN0KGFicnVwdC5lcnJvcik7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfVxufSk7IiwiLy8gMjYuMS4xIFJlZmxlY3QuYXBwbHkodGFyZ2V0LCB0aGlzQXJndW1lbnQsIGFyZ3VtZW50c0xpc3QpXG52YXIgJGV4cG9ydCAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJylcbiAgLCBhbk9iamVjdCAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKVxuICAsIHJBcHBseSAgICA9IChyZXF1aXJlKCcuL19nbG9iYWwnKS5SZWZsZWN0IHx8IHt9KS5hcHBseVxuICAsIGZBcHBseSAgICA9IEZ1bmN0aW9uLmFwcGx5O1xuLy8gTVMgRWRnZSBhcmd1bWVudHNMaXN0IGFyZ3VtZW50IGlzIG9wdGlvbmFsXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uKCl7XG4gIHJBcHBseShmdW5jdGlvbigpe30pO1xufSksICdSZWZsZWN0Jywge1xuICBhcHBseTogZnVuY3Rpb24gYXBwbHkodGFyZ2V0LCB0aGlzQXJndW1lbnQsIGFyZ3VtZW50c0xpc3Qpe1xuICAgIHZhciBUID0gYUZ1bmN0aW9uKHRhcmdldClcbiAgICAgICwgTCA9IGFuT2JqZWN0KGFyZ3VtZW50c0xpc3QpO1xuICAgIHJldHVybiByQXBwbHkgPyByQXBwbHkoVCwgdGhpc0FyZ3VtZW50LCBMKSA6IGZBcHBseS5jYWxsKFQsIHRoaXNBcmd1bWVudCwgTCk7XG4gIH1cbn0pOyIsIi8vIDI2LjEuMiBSZWZsZWN0LmNvbnN0cnVjdCh0YXJnZXQsIGFyZ3VtZW50c0xpc3QgWywgbmV3VGFyZ2V0XSlcbnZhciAkZXhwb3J0ICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBjcmVhdGUgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpXG4gICwgYUZ1bmN0aW9uICA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKVxuICAsIGFuT2JqZWN0ICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKVxuICAsIGlzT2JqZWN0ICAgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKVxuICAsIGZhaWxzICAgICAgPSByZXF1aXJlKCcuL19mYWlscycpXG4gICwgYmluZCAgICAgICA9IHJlcXVpcmUoJy4vX2JpbmQnKVxuICAsIHJDb25zdHJ1Y3QgPSAocmVxdWlyZSgnLi9fZ2xvYmFsJykuUmVmbGVjdCB8fCB7fSkuY29uc3RydWN0O1xuXG4vLyBNUyBFZGdlIHN1cHBvcnRzIG9ubHkgMiBhcmd1bWVudHMgYW5kIGFyZ3VtZW50c0xpc3QgYXJndW1lbnQgaXMgb3B0aW9uYWxcbi8vIEZGIE5pZ2h0bHkgc2V0cyB0aGlyZCBhcmd1bWVudCBhcyBgbmV3LnRhcmdldGAsIGJ1dCBkb2VzIG5vdCBjcmVhdGUgYHRoaXNgIGZyb20gaXRcbnZhciBORVdfVEFSR0VUX0JVRyA9IGZhaWxzKGZ1bmN0aW9uKCl7XG4gIGZ1bmN0aW9uIEYoKXt9XG4gIHJldHVybiAhKHJDb25zdHJ1Y3QoZnVuY3Rpb24oKXt9LCBbXSwgRikgaW5zdGFuY2VvZiBGKTtcbn0pO1xudmFyIEFSR1NfQlVHID0gIWZhaWxzKGZ1bmN0aW9uKCl7XG4gIHJDb25zdHJ1Y3QoZnVuY3Rpb24oKXt9KTtcbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIChORVdfVEFSR0VUX0JVRyB8fCBBUkdTX0JVRyksICdSZWZsZWN0Jywge1xuICBjb25zdHJ1Y3Q6IGZ1bmN0aW9uIGNvbnN0cnVjdChUYXJnZXQsIGFyZ3MgLyosIG5ld1RhcmdldCovKXtcbiAgICBhRnVuY3Rpb24oVGFyZ2V0KTtcbiAgICBhbk9iamVjdChhcmdzKTtcbiAgICB2YXIgbmV3VGFyZ2V0ID0gYXJndW1lbnRzLmxlbmd0aCA8IDMgPyBUYXJnZXQgOiBhRnVuY3Rpb24oYXJndW1lbnRzWzJdKTtcbiAgICBpZihBUkdTX0JVRyAmJiAhTkVXX1RBUkdFVF9CVUcpcmV0dXJuIHJDb25zdHJ1Y3QoVGFyZ2V0LCBhcmdzLCBuZXdUYXJnZXQpO1xuICAgIGlmKFRhcmdldCA9PSBuZXdUYXJnZXQpe1xuICAgICAgLy8gdy9vIGFsdGVyZWQgbmV3VGFyZ2V0LCBvcHRpbWl6YXRpb24gZm9yIDAtNCBhcmd1bWVudHNcbiAgICAgIHN3aXRjaChhcmdzLmxlbmd0aCl7XG4gICAgICAgIGNhc2UgMDogcmV0dXJuIG5ldyBUYXJnZXQ7XG4gICAgICAgIGNhc2UgMTogcmV0dXJuIG5ldyBUYXJnZXQoYXJnc1swXSk7XG4gICAgICAgIGNhc2UgMjogcmV0dXJuIG5ldyBUYXJnZXQoYXJnc1swXSwgYXJnc1sxXSk7XG4gICAgICAgIGNhc2UgMzogcmV0dXJuIG5ldyBUYXJnZXQoYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG4gICAgICAgIGNhc2UgNDogcmV0dXJuIG5ldyBUYXJnZXQoYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSwgYXJnc1szXSk7XG4gICAgICB9XG4gICAgICAvLyB3L28gYWx0ZXJlZCBuZXdUYXJnZXQsIGxvdCBvZiBhcmd1bWVudHMgY2FzZVxuICAgICAgdmFyICRhcmdzID0gW251bGxdO1xuICAgICAgJGFyZ3MucHVzaC5hcHBseSgkYXJncywgYXJncyk7XG4gICAgICByZXR1cm4gbmV3IChiaW5kLmFwcGx5KFRhcmdldCwgJGFyZ3MpKTtcbiAgICB9XG4gICAgLy8gd2l0aCBhbHRlcmVkIG5ld1RhcmdldCwgbm90IHN1cHBvcnQgYnVpbHQtaW4gY29uc3RydWN0b3JzXG4gICAgdmFyIHByb3RvICAgID0gbmV3VGFyZ2V0LnByb3RvdHlwZVxuICAgICAgLCBpbnN0YW5jZSA9IGNyZWF0ZShpc09iamVjdChwcm90bykgPyBwcm90byA6IE9iamVjdC5wcm90b3R5cGUpXG4gICAgICAsIHJlc3VsdCAgID0gRnVuY3Rpb24uYXBwbHkuY2FsbChUYXJnZXQsIGluc3RhbmNlLCBhcmdzKTtcbiAgICByZXR1cm4gaXNPYmplY3QocmVzdWx0KSA/IHJlc3VsdCA6IGluc3RhbmNlO1xuICB9XG59KTsiLCIvLyAyNi4xLjMgUmVmbGVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5S2V5LCBhdHRyaWJ1dGVzKVxudmFyIGRQICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJylcbiAgLCAkZXhwb3J0ICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgYW5PYmplY3QgICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKVxuICAsIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG5cbi8vIE1TIEVkZ2UgaGFzIGJyb2tlbiBSZWZsZWN0LmRlZmluZVByb3BlcnR5IC0gdGhyb3dpbmcgaW5zdGVhZCBvZiByZXR1cm5pbmcgZmFsc2VcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbigpe1xuICBSZWZsZWN0LmRlZmluZVByb3BlcnR5KGRQLmYoe30sIDEsIHt2YWx1ZTogMX0pLCAxLCB7dmFsdWU6IDJ9KTtcbn0pLCAnUmVmbGVjdCcsIHtcbiAgZGVmaW5lUHJvcGVydHk6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KHRhcmdldCwgcHJvcGVydHlLZXksIGF0dHJpYnV0ZXMpe1xuICAgIGFuT2JqZWN0KHRhcmdldCk7XG4gICAgcHJvcGVydHlLZXkgPSB0b1ByaW1pdGl2ZShwcm9wZXJ0eUtleSwgdHJ1ZSk7XG4gICAgYW5PYmplY3QoYXR0cmlidXRlcyk7XG4gICAgdHJ5IHtcbiAgICAgIGRQLmYodGFyZ2V0LCBwcm9wZXJ0eUtleSwgYXR0cmlidXRlcyk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoKGUpe1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxufSk7IiwiLy8gMjYuMS40IFJlZmxlY3QuZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eUtleSlcbnZhciAkZXhwb3J0ICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgZ09QRCAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmZcbiAgLCBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7XG4gIGRlbGV0ZVByb3BlcnR5OiBmdW5jdGlvbiBkZWxldGVQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5S2V5KXtcbiAgICB2YXIgZGVzYyA9IGdPUEQoYW5PYmplY3QodGFyZ2V0KSwgcHJvcGVydHlLZXkpO1xuICAgIHJldHVybiBkZXNjICYmICFkZXNjLmNvbmZpZ3VyYWJsZSA/IGZhbHNlIDogZGVsZXRlIHRhcmdldFtwcm9wZXJ0eUtleV07XG4gIH1cbn0pOyIsIid1c2Ugc3RyaWN0Jztcbi8vIDI2LjEuNSBSZWZsZWN0LmVudW1lcmF0ZSh0YXJnZXQpXG52YXIgJGV4cG9ydCAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgRW51bWVyYXRlID0gZnVuY3Rpb24oaXRlcmF0ZWQpe1xuICB0aGlzLl90ID0gYW5PYmplY3QoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuICB2YXIga2V5cyA9IHRoaXMuX2sgPSBbXSAgICAgICAvLyBrZXlzXG4gICAgLCBrZXk7XG4gIGZvcihrZXkgaW4gaXRlcmF0ZWQpa2V5cy5wdXNoKGtleSk7XG59O1xucmVxdWlyZSgnLi9faXRlci1jcmVhdGUnKShFbnVtZXJhdGUsICdPYmplY3QnLCBmdW5jdGlvbigpe1xuICB2YXIgdGhhdCA9IHRoaXNcbiAgICAsIGtleXMgPSB0aGF0Ll9rXG4gICAgLCBrZXk7XG4gIGRvIHtcbiAgICBpZih0aGF0Ll9pID49IGtleXMubGVuZ3RoKXJldHVybiB7dmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZX07XG4gIH0gd2hpbGUoISgoa2V5ID0ga2V5c1t0aGF0Ll9pKytdKSBpbiB0aGF0Ll90KSk7XG4gIHJldHVybiB7dmFsdWU6IGtleSwgZG9uZTogZmFsc2V9O1xufSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgZW51bWVyYXRlOiBmdW5jdGlvbiBlbnVtZXJhdGUodGFyZ2V0KXtcbiAgICByZXR1cm4gbmV3IEVudW1lcmF0ZSh0YXJnZXQpO1xuICB9XG59KTsiLCIvLyAyNi4xLjcgUmVmbGVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBwcm9wZXJ0eUtleSlcbnZhciBnT1BEICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJylcbiAgLCAkZXhwb3J0ICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIHByb3BlcnR5S2V5KXtcbiAgICByZXR1cm4gZ09QRC5mKGFuT2JqZWN0KHRhcmdldCksIHByb3BlcnR5S2V5KTtcbiAgfVxufSk7IiwiLy8gMjYuMS44IFJlZmxlY3QuZ2V0UHJvdG90eXBlT2YodGFyZ2V0KVxudmFyICRleHBvcnQgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBnZXRQcm90byA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKVxuICAsIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgZ2V0UHJvdG90eXBlT2Y6IGZ1bmN0aW9uIGdldFByb3RvdHlwZU9mKHRhcmdldCl7XG4gICAgcmV0dXJuIGdldFByb3RvKGFuT2JqZWN0KHRhcmdldCkpO1xuICB9XG59KTsiLCIvLyAyNi4xLjYgUmVmbGVjdC5nZXQodGFyZ2V0LCBwcm9wZXJ0eUtleSBbLCByZWNlaXZlcl0pXG52YXIgZ09QRCAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpXG4gICwgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJylcbiAgLCBoYXMgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpXG4gICwgJGV4cG9ydCAgICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIGlzT2JqZWN0ICAgICAgID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JylcbiAgLCBhbk9iamVjdCAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xuXG5mdW5jdGlvbiBnZXQodGFyZ2V0LCBwcm9wZXJ0eUtleS8qLCByZWNlaXZlciovKXtcbiAgdmFyIHJlY2VpdmVyID0gYXJndW1lbnRzLmxlbmd0aCA8IDMgPyB0YXJnZXQgOiBhcmd1bWVudHNbMl1cbiAgICAsIGRlc2MsIHByb3RvO1xuICBpZihhbk9iamVjdCh0YXJnZXQpID09PSByZWNlaXZlcilyZXR1cm4gdGFyZ2V0W3Byb3BlcnR5S2V5XTtcbiAgaWYoZGVzYyA9IGdPUEQuZih0YXJnZXQsIHByb3BlcnR5S2V5KSlyZXR1cm4gaGFzKGRlc2MsICd2YWx1ZScpXG4gICAgPyBkZXNjLnZhbHVlXG4gICAgOiBkZXNjLmdldCAhPT0gdW5kZWZpbmVkXG4gICAgICA/IGRlc2MuZ2V0LmNhbGwocmVjZWl2ZXIpXG4gICAgICA6IHVuZGVmaW5lZDtcbiAgaWYoaXNPYmplY3QocHJvdG8gPSBnZXRQcm90b3R5cGVPZih0YXJnZXQpKSlyZXR1cm4gZ2V0KHByb3RvLCBwcm9wZXJ0eUtleSwgcmVjZWl2ZXIpO1xufVxuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7Z2V0OiBnZXR9KTsiLCIvLyAyNi4xLjkgUmVmbGVjdC5oYXModGFyZ2V0LCBwcm9wZXJ0eUtleSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgaGFzOiBmdW5jdGlvbiBoYXModGFyZ2V0LCBwcm9wZXJ0eUtleSl7XG4gICAgcmV0dXJuIHByb3BlcnR5S2V5IGluIHRhcmdldDtcbiAgfVxufSk7IiwiLy8gMjYuMS4xMCBSZWZsZWN0LmlzRXh0ZW5zaWJsZSh0YXJnZXQpXG52YXIgJGV4cG9ydCAgICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgYW5PYmplY3QgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpXG4gICwgJGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGU7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgaXNFeHRlbnNpYmxlOiBmdW5jdGlvbiBpc0V4dGVuc2libGUodGFyZ2V0KXtcbiAgICBhbk9iamVjdCh0YXJnZXQpO1xuICAgIHJldHVybiAkaXNFeHRlbnNpYmxlID8gJGlzRXh0ZW5zaWJsZSh0YXJnZXQpIDogdHJ1ZTtcbiAgfVxufSk7IiwiLy8gMjYuMS4xMSBSZWZsZWN0Lm93bktleXModGFyZ2V0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge293bktleXM6IHJlcXVpcmUoJy4vX293bi1rZXlzJyl9KTsiLCIvLyAyNi4xLjEyIFJlZmxlY3QucHJldmVudEV4dGVuc2lvbnModGFyZ2V0KVxudmFyICRleHBvcnQgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgYW5PYmplY3QgICAgICAgICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JylcbiAgLCAkcHJldmVudEV4dGVuc2lvbnMgPSBPYmplY3QucHJldmVudEV4dGVuc2lvbnM7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgcHJldmVudEV4dGVuc2lvbnM6IGZ1bmN0aW9uIHByZXZlbnRFeHRlbnNpb25zKHRhcmdldCl7XG4gICAgYW5PYmplY3QodGFyZ2V0KTtcbiAgICB0cnkge1xuICAgICAgaWYoJHByZXZlbnRFeHRlbnNpb25zKSRwcmV2ZW50RXh0ZW5zaW9ucyh0YXJnZXQpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaChlKXtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbn0pOyIsIi8vIDI2LjEuMTQgUmVmbGVjdC5zZXRQcm90b3R5cGVPZih0YXJnZXQsIHByb3RvKVxudmFyICRleHBvcnQgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBzZXRQcm90byA9IHJlcXVpcmUoJy4vX3NldC1wcm90bycpO1xuXG5pZihzZXRQcm90bykkZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7XG4gIHNldFByb3RvdHlwZU9mOiBmdW5jdGlvbiBzZXRQcm90b3R5cGVPZih0YXJnZXQsIHByb3RvKXtcbiAgICBzZXRQcm90by5jaGVjayh0YXJnZXQsIHByb3RvKTtcbiAgICB0cnkge1xuICAgICAgc2V0UHJvdG8uc2V0KHRhcmdldCwgcHJvdG8pO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaChlKXtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbn0pOyIsIi8vIDI2LjEuMTMgUmVmbGVjdC5zZXQodGFyZ2V0LCBwcm9wZXJ0eUtleSwgViBbLCByZWNlaXZlcl0pXG52YXIgZFAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKVxuICAsIGdPUEQgICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKVxuICAsIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpXG4gICwgaGFzICAgICAgICAgICAgPSByZXF1aXJlKCcuL19oYXMnKVxuICAsICRleHBvcnQgICAgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBjcmVhdGVEZXNjICAgICA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKVxuICAsIGFuT2JqZWN0ICAgICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JylcbiAgLCBpc09iamVjdCAgICAgICA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5mdW5jdGlvbiBzZXQodGFyZ2V0LCBwcm9wZXJ0eUtleSwgVi8qLCByZWNlaXZlciovKXtcbiAgdmFyIHJlY2VpdmVyID0gYXJndW1lbnRzLmxlbmd0aCA8IDQgPyB0YXJnZXQgOiBhcmd1bWVudHNbM11cbiAgICAsIG93bkRlc2MgID0gZ09QRC5mKGFuT2JqZWN0KHRhcmdldCksIHByb3BlcnR5S2V5KVxuICAgICwgZXhpc3RpbmdEZXNjcmlwdG9yLCBwcm90bztcbiAgaWYoIW93bkRlc2Mpe1xuICAgIGlmKGlzT2JqZWN0KHByb3RvID0gZ2V0UHJvdG90eXBlT2YodGFyZ2V0KSkpe1xuICAgICAgcmV0dXJuIHNldChwcm90bywgcHJvcGVydHlLZXksIFYsIHJlY2VpdmVyKTtcbiAgICB9XG4gICAgb3duRGVzYyA9IGNyZWF0ZURlc2MoMCk7XG4gIH1cbiAgaWYoaGFzKG93bkRlc2MsICd2YWx1ZScpKXtcbiAgICBpZihvd25EZXNjLndyaXRhYmxlID09PSBmYWxzZSB8fCAhaXNPYmplY3QocmVjZWl2ZXIpKXJldHVybiBmYWxzZTtcbiAgICBleGlzdGluZ0Rlc2NyaXB0b3IgPSBnT1BELmYocmVjZWl2ZXIsIHByb3BlcnR5S2V5KSB8fCBjcmVhdGVEZXNjKDApO1xuICAgIGV4aXN0aW5nRGVzY3JpcHRvci52YWx1ZSA9IFY7XG4gICAgZFAuZihyZWNlaXZlciwgcHJvcGVydHlLZXksIGV4aXN0aW5nRGVzY3JpcHRvcik7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgcmV0dXJuIG93bkRlc2Muc2V0ID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IChvd25EZXNjLnNldC5jYWxsKHJlY2VpdmVyLCBWKSwgdHJ1ZSk7XG59XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtzZXQ6IHNldH0pOyIsInZhciBnbG9iYWwgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpXG4gICwgaW5oZXJpdElmUmVxdWlyZWQgPSByZXF1aXJlKCcuL19pbmhlcml0LWlmLXJlcXVpcmVkJylcbiAgLCBkUCAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmZcbiAgLCBnT1BOICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZlxuICAsIGlzUmVnRXhwICAgICAgICAgID0gcmVxdWlyZSgnLi9faXMtcmVnZXhwJylcbiAgLCAkZmxhZ3MgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2ZsYWdzJylcbiAgLCAkUmVnRXhwICAgICAgICAgICA9IGdsb2JhbC5SZWdFeHBcbiAgLCBCYXNlICAgICAgICAgICAgICA9ICRSZWdFeHBcbiAgLCBwcm90byAgICAgICAgICAgICA9ICRSZWdFeHAucHJvdG90eXBlXG4gICwgcmUxICAgICAgICAgICAgICAgPSAvYS9nXG4gICwgcmUyICAgICAgICAgICAgICAgPSAvYS9nXG4gIC8vIFwibmV3XCIgY3JlYXRlcyBhIG5ldyBvYmplY3QsIG9sZCB3ZWJraXQgYnVnZ3kgaGVyZVxuICAsIENPUlJFQ1RfTkVXICAgICAgID0gbmV3ICRSZWdFeHAocmUxKSAhPT0gcmUxO1xuXG5pZihyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmICghQ09SUkVDVF9ORVcgfHwgcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbigpe1xuICByZTJbcmVxdWlyZSgnLi9fd2tzJykoJ21hdGNoJyldID0gZmFsc2U7XG4gIC8vIFJlZ0V4cCBjb25zdHJ1Y3RvciBjYW4gYWx0ZXIgZmxhZ3MgYW5kIElzUmVnRXhwIHdvcmtzIGNvcnJlY3Qgd2l0aCBAQG1hdGNoXG4gIHJldHVybiAkUmVnRXhwKHJlMSkgIT0gcmUxIHx8ICRSZWdFeHAocmUyKSA9PSByZTIgfHwgJFJlZ0V4cChyZTEsICdpJykgIT0gJy9hL2knO1xufSkpKXtcbiAgJFJlZ0V4cCA9IGZ1bmN0aW9uIFJlZ0V4cChwLCBmKXtcbiAgICB2YXIgdGlSRSA9IHRoaXMgaW5zdGFuY2VvZiAkUmVnRXhwXG4gICAgICAsIHBpUkUgPSBpc1JlZ0V4cChwKVxuICAgICAgLCBmaVUgID0gZiA9PT0gdW5kZWZpbmVkO1xuICAgIHJldHVybiAhdGlSRSAmJiBwaVJFICYmIHAuY29uc3RydWN0b3IgPT09ICRSZWdFeHAgJiYgZmlVID8gcFxuICAgICAgOiBpbmhlcml0SWZSZXF1aXJlZChDT1JSRUNUX05FV1xuICAgICAgICA/IG5ldyBCYXNlKHBpUkUgJiYgIWZpVSA/IHAuc291cmNlIDogcCwgZilcbiAgICAgICAgOiBCYXNlKChwaVJFID0gcCBpbnN0YW5jZW9mICRSZWdFeHApID8gcC5zb3VyY2UgOiBwLCBwaVJFICYmIGZpVSA/ICRmbGFncy5jYWxsKHApIDogZilcbiAgICAgICwgdGlSRSA/IHRoaXMgOiBwcm90bywgJFJlZ0V4cCk7XG4gIH07XG4gIHZhciBwcm94eSA9IGZ1bmN0aW9uKGtleSl7XG4gICAga2V5IGluICRSZWdFeHAgfHwgZFAoJFJlZ0V4cCwga2V5LCB7XG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICBnZXQ6IGZ1bmN0aW9uKCl7IHJldHVybiBCYXNlW2tleV07IH0sXG4gICAgICBzZXQ6IGZ1bmN0aW9uKGl0KXsgQmFzZVtrZXldID0gaXQ7IH1cbiAgICB9KTtcbiAgfTtcbiAgZm9yKHZhciBrZXlzID0gZ09QTihCYXNlKSwgaSA9IDA7IGtleXMubGVuZ3RoID4gaTsgKXByb3h5KGtleXNbaSsrXSk7XG4gIHByb3RvLmNvbnN0cnVjdG9yID0gJFJlZ0V4cDtcbiAgJFJlZ0V4cC5wcm90b3R5cGUgPSBwcm90bztcbiAgcmVxdWlyZSgnLi9fcmVkZWZpbmUnKShnbG9iYWwsICdSZWdFeHAnLCAkUmVnRXhwKTtcbn1cblxucmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKSgnUmVnRXhwJyk7IiwiLy8gMjEuMi41LjMgZ2V0IFJlZ0V4cC5wcm90b3R5cGUuZmxhZ3MoKVxuaWYocmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSAmJiAvLi9nLmZsYWdzICE9ICdnJylyZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mKFJlZ0V4cC5wcm90b3R5cGUsICdmbGFncycsIHtcbiAgY29uZmlndXJhYmxlOiB0cnVlLFxuICBnZXQ6IHJlcXVpcmUoJy4vX2ZsYWdzJylcbn0pOyIsIi8vIEBAbWF0Y2ggbG9naWNcbnJlcXVpcmUoJy4vX2ZpeC1yZS13a3MnKSgnbWF0Y2gnLCAxLCBmdW5jdGlvbihkZWZpbmVkLCBNQVRDSCwgJG1hdGNoKXtcbiAgLy8gMjEuMS4zLjExIFN0cmluZy5wcm90b3R5cGUubWF0Y2gocmVnZXhwKVxuICByZXR1cm4gW2Z1bmN0aW9uIG1hdGNoKHJlZ2V4cCl7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgIHZhciBPICA9IGRlZmluZWQodGhpcylcbiAgICAgICwgZm4gPSByZWdleHAgPT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogcmVnZXhwW01BVENIXTtcbiAgICByZXR1cm4gZm4gIT09IHVuZGVmaW5lZCA/IGZuLmNhbGwocmVnZXhwLCBPKSA6IG5ldyBSZWdFeHAocmVnZXhwKVtNQVRDSF0oU3RyaW5nKE8pKTtcbiAgfSwgJG1hdGNoXTtcbn0pOyIsIi8vIEBAcmVwbGFjZSBsb2dpY1xucmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdyZXBsYWNlJywgMiwgZnVuY3Rpb24oZGVmaW5lZCwgUkVQTEFDRSwgJHJlcGxhY2Upe1xuICAvLyAyMS4xLjMuMTQgU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlKHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpXG4gIHJldHVybiBbZnVuY3Rpb24gcmVwbGFjZShzZWFyY2hWYWx1ZSwgcmVwbGFjZVZhbHVlKXtcbiAgICAndXNlIHN0cmljdCc7XG4gICAgdmFyIE8gID0gZGVmaW5lZCh0aGlzKVxuICAgICAgLCBmbiA9IHNlYXJjaFZhbHVlID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHNlYXJjaFZhbHVlW1JFUExBQ0VdO1xuICAgIHJldHVybiBmbiAhPT0gdW5kZWZpbmVkXG4gICAgICA/IGZuLmNhbGwoc2VhcmNoVmFsdWUsIE8sIHJlcGxhY2VWYWx1ZSlcbiAgICAgIDogJHJlcGxhY2UuY2FsbChTdHJpbmcoTyksIHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpO1xuICB9LCAkcmVwbGFjZV07XG59KTsiLCIvLyBAQHNlYXJjaCBsb2dpY1xucmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdzZWFyY2gnLCAxLCBmdW5jdGlvbihkZWZpbmVkLCBTRUFSQ0gsICRzZWFyY2gpe1xuICAvLyAyMS4xLjMuMTUgU3RyaW5nLnByb3RvdHlwZS5zZWFyY2gocmVnZXhwKVxuICByZXR1cm4gW2Z1bmN0aW9uIHNlYXJjaChyZWdleHApe1xuICAgICd1c2Ugc3RyaWN0JztcbiAgICB2YXIgTyAgPSBkZWZpbmVkKHRoaXMpXG4gICAgICAsIGZuID0gcmVnZXhwID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHJlZ2V4cFtTRUFSQ0hdO1xuICAgIHJldHVybiBmbiAhPT0gdW5kZWZpbmVkID8gZm4uY2FsbChyZWdleHAsIE8pIDogbmV3IFJlZ0V4cChyZWdleHApW1NFQVJDSF0oU3RyaW5nKE8pKTtcbiAgfSwgJHNlYXJjaF07XG59KTsiLCIvLyBAQHNwbGl0IGxvZ2ljXG5yZXF1aXJlKCcuL19maXgtcmUtd2tzJykoJ3NwbGl0JywgMiwgZnVuY3Rpb24oZGVmaW5lZCwgU1BMSVQsICRzcGxpdCl7XG4gICd1c2Ugc3RyaWN0JztcbiAgdmFyIGlzUmVnRXhwICAgPSByZXF1aXJlKCcuL19pcy1yZWdleHAnKVxuICAgICwgX3NwbGl0ICAgICA9ICRzcGxpdFxuICAgICwgJHB1c2ggICAgICA9IFtdLnB1c2hcbiAgICAsICRTUExJVCAgICAgPSAnc3BsaXQnXG4gICAgLCBMRU5HVEggICAgID0gJ2xlbmd0aCdcbiAgICAsIExBU1RfSU5ERVggPSAnbGFzdEluZGV4JztcbiAgaWYoXG4gICAgJ2FiYmMnWyRTUExJVF0oLyhiKSovKVsxXSA9PSAnYycgfHxcbiAgICAndGVzdCdbJFNQTElUXSgvKD86KS8sIC0xKVtMRU5HVEhdICE9IDQgfHxcbiAgICAnYWInWyRTUExJVF0oLyg/OmFiKSovKVtMRU5HVEhdICE9IDIgfHxcbiAgICAnLidbJFNQTElUXSgvKC4/KSguPykvKVtMRU5HVEhdICE9IDQgfHxcbiAgICAnLidbJFNQTElUXSgvKCkoKS8pW0xFTkdUSF0gPiAxIHx8XG4gICAgJydbJFNQTElUXSgvLj8vKVtMRU5HVEhdXG4gICl7XG4gICAgdmFyIE5QQ0cgPSAvKCk/Py8uZXhlYygnJylbMV0gPT09IHVuZGVmaW5lZDsgLy8gbm9ucGFydGljaXBhdGluZyBjYXB0dXJpbmcgZ3JvdXBcbiAgICAvLyBiYXNlZCBvbiBlczUtc2hpbSBpbXBsZW1lbnRhdGlvbiwgbmVlZCB0byByZXdvcmsgaXRcbiAgICAkc3BsaXQgPSBmdW5jdGlvbihzZXBhcmF0b3IsIGxpbWl0KXtcbiAgICAgIHZhciBzdHJpbmcgPSBTdHJpbmcodGhpcyk7XG4gICAgICBpZihzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCAmJiBsaW1pdCA9PT0gMClyZXR1cm4gW107XG4gICAgICAvLyBJZiBgc2VwYXJhdG9yYCBpcyBub3QgYSByZWdleCwgdXNlIG5hdGl2ZSBzcGxpdFxuICAgICAgaWYoIWlzUmVnRXhwKHNlcGFyYXRvcikpcmV0dXJuIF9zcGxpdC5jYWxsKHN0cmluZywgc2VwYXJhdG9yLCBsaW1pdCk7XG4gICAgICB2YXIgb3V0cHV0ID0gW107XG4gICAgICB2YXIgZmxhZ3MgPSAoc2VwYXJhdG9yLmlnbm9yZUNhc2UgPyAnaScgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgKHNlcGFyYXRvci5tdWx0aWxpbmUgPyAnbScgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgKHNlcGFyYXRvci51bmljb2RlID8gJ3UnIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChzZXBhcmF0b3Iuc3RpY2t5ID8gJ3knIDogJycpO1xuICAgICAgdmFyIGxhc3RMYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIHNwbGl0TGltaXQgPSBsaW1pdCA9PT0gdW5kZWZpbmVkID8gNDI5NDk2NzI5NSA6IGxpbWl0ID4+PiAwO1xuICAgICAgLy8gTWFrZSBgZ2xvYmFsYCBhbmQgYXZvaWQgYGxhc3RJbmRleGAgaXNzdWVzIGJ5IHdvcmtpbmcgd2l0aCBhIGNvcHlcbiAgICAgIHZhciBzZXBhcmF0b3JDb3B5ID0gbmV3IFJlZ0V4cChzZXBhcmF0b3Iuc291cmNlLCBmbGFncyArICdnJyk7XG4gICAgICB2YXIgc2VwYXJhdG9yMiwgbWF0Y2gsIGxhc3RJbmRleCwgbGFzdExlbmd0aCwgaTtcbiAgICAgIC8vIERvZXNuJ3QgbmVlZCBmbGFncyBneSwgYnV0IHRoZXkgZG9uJ3QgaHVydFxuICAgICAgaWYoIU5QQ0cpc2VwYXJhdG9yMiA9IG5ldyBSZWdFeHAoJ14nICsgc2VwYXJhdG9yQ29weS5zb3VyY2UgKyAnJCg/IVxcXFxzKScsIGZsYWdzKTtcbiAgICAgIHdoaWxlKG1hdGNoID0gc2VwYXJhdG9yQ29weS5leGVjKHN0cmluZykpe1xuICAgICAgICAvLyBgc2VwYXJhdG9yQ29weS5sYXN0SW5kZXhgIGlzIG5vdCByZWxpYWJsZSBjcm9zcy1icm93c2VyXG4gICAgICAgIGxhc3RJbmRleCA9IG1hdGNoLmluZGV4ICsgbWF0Y2hbMF1bTEVOR1RIXTtcbiAgICAgICAgaWYobGFzdEluZGV4ID4gbGFzdExhc3RJbmRleCl7XG4gICAgICAgICAgb3V0cHV0LnB1c2goc3RyaW5nLnNsaWNlKGxhc3RMYXN0SW5kZXgsIG1hdGNoLmluZGV4KSk7XG4gICAgICAgICAgLy8gRml4IGJyb3dzZXJzIHdob3NlIGBleGVjYCBtZXRob2RzIGRvbid0IGNvbnNpc3RlbnRseSByZXR1cm4gYHVuZGVmaW5lZGAgZm9yIE5QQ0dcbiAgICAgICAgICBpZighTlBDRyAmJiBtYXRjaFtMRU5HVEhdID4gMSltYXRjaFswXS5yZXBsYWNlKHNlcGFyYXRvcjIsIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICBmb3IoaSA9IDE7IGkgPCBhcmd1bWVudHNbTEVOR1RIXSAtIDI7IGkrKylpZihhcmd1bWVudHNbaV0gPT09IHVuZGVmaW5lZCltYXRjaFtpXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBpZihtYXRjaFtMRU5HVEhdID4gMSAmJiBtYXRjaC5pbmRleCA8IHN0cmluZ1tMRU5HVEhdKSRwdXNoLmFwcGx5KG91dHB1dCwgbWF0Y2guc2xpY2UoMSkpO1xuICAgICAgICAgIGxhc3RMZW5ndGggPSBtYXRjaFswXVtMRU5HVEhdO1xuICAgICAgICAgIGxhc3RMYXN0SW5kZXggPSBsYXN0SW5kZXg7XG4gICAgICAgICAgaWYob3V0cHV0W0xFTkdUSF0gPj0gc3BsaXRMaW1pdClicmVhaztcbiAgICAgICAgfVxuICAgICAgICBpZihzZXBhcmF0b3JDb3B5W0xBU1RfSU5ERVhdID09PSBtYXRjaC5pbmRleClzZXBhcmF0b3JDb3B5W0xBU1RfSU5ERVhdKys7IC8vIEF2b2lkIGFuIGluZmluaXRlIGxvb3BcbiAgICAgIH1cbiAgICAgIGlmKGxhc3RMYXN0SW5kZXggPT09IHN0cmluZ1tMRU5HVEhdKXtcbiAgICAgICAgaWYobGFzdExlbmd0aCB8fCAhc2VwYXJhdG9yQ29weS50ZXN0KCcnKSlvdXRwdXQucHVzaCgnJyk7XG4gICAgICB9IGVsc2Ugb3V0cHV0LnB1c2goc3RyaW5nLnNsaWNlKGxhc3RMYXN0SW5kZXgpKTtcbiAgICAgIHJldHVybiBvdXRwdXRbTEVOR1RIXSA+IHNwbGl0TGltaXQgPyBvdXRwdXQuc2xpY2UoMCwgc3BsaXRMaW1pdCkgOiBvdXRwdXQ7XG4gICAgfTtcbiAgLy8gQ2hha3JhLCBWOFxuICB9IGVsc2UgaWYoJzAnWyRTUExJVF0odW5kZWZpbmVkLCAwKVtMRU5HVEhdKXtcbiAgICAkc3BsaXQgPSBmdW5jdGlvbihzZXBhcmF0b3IsIGxpbWl0KXtcbiAgICAgIHJldHVybiBzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCAmJiBsaW1pdCA9PT0gMCA/IFtdIDogX3NwbGl0LmNhbGwodGhpcywgc2VwYXJhdG9yLCBsaW1pdCk7XG4gICAgfTtcbiAgfVxuICAvLyAyMS4xLjMuMTcgU3RyaW5nLnByb3RvdHlwZS5zcGxpdChzZXBhcmF0b3IsIGxpbWl0KVxuICByZXR1cm4gW2Z1bmN0aW9uIHNwbGl0KHNlcGFyYXRvciwgbGltaXQpe1xuICAgIHZhciBPICA9IGRlZmluZWQodGhpcylcbiAgICAgICwgZm4gPSBzZXBhcmF0b3IgPT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogc2VwYXJhdG9yW1NQTElUXTtcbiAgICByZXR1cm4gZm4gIT09IHVuZGVmaW5lZCA/IGZuLmNhbGwoc2VwYXJhdG9yLCBPLCBsaW1pdCkgOiAkc3BsaXQuY2FsbChTdHJpbmcoTyksIHNlcGFyYXRvciwgbGltaXQpO1xuICB9LCAkc3BsaXRdO1xufSk7IiwiJ3VzZSBzdHJpY3QnO1xucmVxdWlyZSgnLi9lczYucmVnZXhwLmZsYWdzJyk7XG52YXIgYW5PYmplY3QgICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKVxuICAsICRmbGFncyAgICAgID0gcmVxdWlyZSgnLi9fZmxhZ3MnKVxuICAsIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKVxuICAsIFRPX1NUUklORyAgID0gJ3RvU3RyaW5nJ1xuICAsICR0b1N0cmluZyAgID0gLy4vW1RPX1NUUklOR107XG5cbnZhciBkZWZpbmUgPSBmdW5jdGlvbihmbil7XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoUmVnRXhwLnByb3RvdHlwZSwgVE9fU1RSSU5HLCBmbiwgdHJ1ZSk7XG59O1xuXG4vLyAyMS4yLjUuMTQgUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZygpXG5pZihyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uKCl7IHJldHVybiAkdG9TdHJpbmcuY2FsbCh7c291cmNlOiAnYScsIGZsYWdzOiAnYid9KSAhPSAnL2EvYic7IH0pKXtcbiAgZGVmaW5lKGZ1bmN0aW9uIHRvU3RyaW5nKCl7XG4gICAgdmFyIFIgPSBhbk9iamVjdCh0aGlzKTtcbiAgICByZXR1cm4gJy8nLmNvbmNhdChSLnNvdXJjZSwgJy8nLFxuICAgICAgJ2ZsYWdzJyBpbiBSID8gUi5mbGFncyA6ICFERVNDUklQVE9SUyAmJiBSIGluc3RhbmNlb2YgUmVnRXhwID8gJGZsYWdzLmNhbGwoUikgOiB1bmRlZmluZWQpO1xuICB9KTtcbi8vIEZGNDQtIFJlZ0V4cCN0b1N0cmluZyBoYXMgYSB3cm9uZyBuYW1lXG59IGVsc2UgaWYoJHRvU3RyaW5nLm5hbWUgIT0gVE9fU1RSSU5HKXtcbiAgZGVmaW5lKGZ1bmN0aW9uIHRvU3RyaW5nKCl7XG4gICAgcmV0dXJuICR0b1N0cmluZy5jYWxsKHRoaXMpO1xuICB9KTtcbn0iLCIndXNlIHN0cmljdCc7XG52YXIgc3Ryb25nID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbi1zdHJvbmcnKTtcblxuLy8gMjMuMiBTZXQgT2JqZWN0c1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uJykoJ1NldCcsIGZ1bmN0aW9uKGdldCl7XG4gIHJldHVybiBmdW5jdGlvbiBTZXQoKXsgcmV0dXJuIGdldCh0aGlzLCBhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7IH07XG59LCB7XG4gIC8vIDIzLjIuMy4xIFNldC5wcm90b3R5cGUuYWRkKHZhbHVlKVxuICBhZGQ6IGZ1bmN0aW9uIGFkZCh2YWx1ZSl7XG4gICAgcmV0dXJuIHN0cm9uZy5kZWYodGhpcywgdmFsdWUgPSB2YWx1ZSA9PT0gMCA/IDAgOiB2YWx1ZSwgdmFsdWUpO1xuICB9XG59LCBzdHJvbmcpOyIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjIgU3RyaW5nLnByb3RvdHlwZS5hbmNob3IobmFtZSlcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2FuY2hvcicsIGZ1bmN0aW9uKGNyZWF0ZUhUTUwpe1xuICByZXR1cm4gZnVuY3Rpb24gYW5jaG9yKG5hbWUpe1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdhJywgJ25hbWUnLCBuYW1lKTtcbiAgfVxufSk7IiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMyBTdHJpbmcucHJvdG90eXBlLmJpZygpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdiaWcnLCBmdW5jdGlvbihjcmVhdGVIVE1MKXtcbiAgcmV0dXJuIGZ1bmN0aW9uIGJpZygpe1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdiaWcnLCAnJywgJycpO1xuICB9XG59KTsiLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy40IFN0cmluZy5wcm90b3R5cGUuYmxpbmsoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnYmxpbmsnLCBmdW5jdGlvbihjcmVhdGVIVE1MKXtcbiAgcmV0dXJuIGZ1bmN0aW9uIGJsaW5rKCl7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2JsaW5rJywgJycsICcnKTtcbiAgfVxufSk7IiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuNSBTdHJpbmcucHJvdG90eXBlLmJvbGQoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnYm9sZCcsIGZ1bmN0aW9uKGNyZWF0ZUhUTUwpe1xuICByZXR1cm4gZnVuY3Rpb24gYm9sZCgpe1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdiJywgJycsICcnKTtcbiAgfVxufSk7IiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsICRhdCAgICAgPSByZXF1aXJlKCcuL19zdHJpbmctYXQnKShmYWxzZSk7XG4kZXhwb3J0KCRleHBvcnQuUCwgJ1N0cmluZycsIHtcbiAgLy8gMjEuMS4zLjMgU3RyaW5nLnByb3RvdHlwZS5jb2RlUG9pbnRBdChwb3MpXG4gIGNvZGVQb2ludEF0OiBmdW5jdGlvbiBjb2RlUG9pbnRBdChwb3Mpe1xuICAgIHJldHVybiAkYXQodGhpcywgcG9zKTtcbiAgfVxufSk7IiwiLy8gMjEuMS4zLjYgU3RyaW5nLnByb3RvdHlwZS5lbmRzV2l0aChzZWFyY2hTdHJpbmcgWywgZW5kUG9zaXRpb25dKVxuJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgdG9MZW5ndGggID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJylcbiAgLCBjb250ZXh0ICAgPSByZXF1aXJlKCcuL19zdHJpbmctY29udGV4dCcpXG4gICwgRU5EU19XSVRIID0gJ2VuZHNXaXRoJ1xuICAsICRlbmRzV2l0aCA9ICcnW0VORFNfV0lUSF07XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMtaXMtcmVnZXhwJykoRU5EU19XSVRIKSwgJ1N0cmluZycsIHtcbiAgZW5kc1dpdGg6IGZ1bmN0aW9uIGVuZHNXaXRoKHNlYXJjaFN0cmluZyAvKiwgZW5kUG9zaXRpb24gPSBAbGVuZ3RoICovKXtcbiAgICB2YXIgdGhhdCA9IGNvbnRleHQodGhpcywgc2VhcmNoU3RyaW5nLCBFTkRTX1dJVEgpXG4gICAgICAsIGVuZFBvc2l0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWRcbiAgICAgICwgbGVuICAgID0gdG9MZW5ndGgodGhhdC5sZW5ndGgpXG4gICAgICAsIGVuZCAgICA9IGVuZFBvc2l0aW9uID09PSB1bmRlZmluZWQgPyBsZW4gOiBNYXRoLm1pbih0b0xlbmd0aChlbmRQb3NpdGlvbiksIGxlbilcbiAgICAgICwgc2VhcmNoID0gU3RyaW5nKHNlYXJjaFN0cmluZyk7XG4gICAgcmV0dXJuICRlbmRzV2l0aFxuICAgICAgPyAkZW5kc1dpdGguY2FsbCh0aGF0LCBzZWFyY2gsIGVuZClcbiAgICAgIDogdGhhdC5zbGljZShlbmQgLSBzZWFyY2gubGVuZ3RoLCBlbmQpID09PSBzZWFyY2g7XG4gIH1cbn0pOyIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjYgU3RyaW5nLnByb3RvdHlwZS5maXhlZCgpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdmaXhlZCcsIGZ1bmN0aW9uKGNyZWF0ZUhUTUwpe1xuICByZXR1cm4gZnVuY3Rpb24gZml4ZWQoKXtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAndHQnLCAnJywgJycpO1xuICB9XG59KTsiLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy43IFN0cmluZy5wcm90b3R5cGUuZm9udGNvbG9yKGNvbG9yKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnZm9udGNvbG9yJywgZnVuY3Rpb24oY3JlYXRlSFRNTCl7XG4gIHJldHVybiBmdW5jdGlvbiBmb250Y29sb3IoY29sb3Ipe1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdmb250JywgJ2NvbG9yJywgY29sb3IpO1xuICB9XG59KTsiLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy44IFN0cmluZy5wcm90b3R5cGUuZm9udHNpemUoc2l6ZSlcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2ZvbnRzaXplJywgZnVuY3Rpb24oY3JlYXRlSFRNTCl7XG4gIHJldHVybiBmdW5jdGlvbiBmb250c2l6ZShzaXplKXtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnZm9udCcsICdzaXplJywgc2l6ZSk7XG4gIH1cbn0pOyIsInZhciAkZXhwb3J0ICAgICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgdG9JbmRleCAgICAgICAgPSByZXF1aXJlKCcuL190by1pbmRleCcpXG4gICwgZnJvbUNoYXJDb2RlICAgPSBTdHJpbmcuZnJvbUNoYXJDb2RlXG4gICwgJGZyb21Db2RlUG9pbnQgPSBTdHJpbmcuZnJvbUNvZGVQb2ludDtcblxuLy8gbGVuZ3RoIHNob3VsZCBiZSAxLCBvbGQgRkYgcHJvYmxlbVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoISEkZnJvbUNvZGVQb2ludCAmJiAkZnJvbUNvZGVQb2ludC5sZW5ndGggIT0gMSksICdTdHJpbmcnLCB7XG4gIC8vIDIxLjEuMi4yIFN0cmluZy5mcm9tQ29kZVBvaW50KC4uLmNvZGVQb2ludHMpXG4gIGZyb21Db2RlUG9pbnQ6IGZ1bmN0aW9uIGZyb21Db2RlUG9pbnQoeCl7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICB2YXIgcmVzICA9IFtdXG4gICAgICAsIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoXG4gICAgICAsIGkgICAgPSAwXG4gICAgICAsIGNvZGU7XG4gICAgd2hpbGUoYUxlbiA+IGkpe1xuICAgICAgY29kZSA9ICthcmd1bWVudHNbaSsrXTtcbiAgICAgIGlmKHRvSW5kZXgoY29kZSwgMHgxMGZmZmYpICE9PSBjb2RlKXRocm93IFJhbmdlRXJyb3IoY29kZSArICcgaXMgbm90IGEgdmFsaWQgY29kZSBwb2ludCcpO1xuICAgICAgcmVzLnB1c2goY29kZSA8IDB4MTAwMDBcbiAgICAgICAgPyBmcm9tQ2hhckNvZGUoY29kZSlcbiAgICAgICAgOiBmcm9tQ2hhckNvZGUoKChjb2RlIC09IDB4MTAwMDApID4+IDEwKSArIDB4ZDgwMCwgY29kZSAlIDB4NDAwICsgMHhkYzAwKVxuICAgICAgKTtcbiAgICB9IHJldHVybiByZXMuam9pbignJyk7XG4gIH1cbn0pOyIsIi8vIDIxLjEuMy43IFN0cmluZy5wcm90b3R5cGUuaW5jbHVkZXMoc2VhcmNoU3RyaW5nLCBwb3NpdGlvbiA9IDApXG4ndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIGNvbnRleHQgID0gcmVxdWlyZSgnLi9fc3RyaW5nLWNvbnRleHQnKVxuICAsIElOQ0xVREVTID0gJ2luY2x1ZGVzJztcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscy1pcy1yZWdleHAnKShJTkNMVURFUyksICdTdHJpbmcnLCB7XG4gIGluY2x1ZGVzOiBmdW5jdGlvbiBpbmNsdWRlcyhzZWFyY2hTdHJpbmcgLyosIHBvc2l0aW9uID0gMCAqLyl7XG4gICAgcmV0dXJuICEhfmNvbnRleHQodGhpcywgc2VhcmNoU3RyaW5nLCBJTkNMVURFUylcbiAgICAgIC5pbmRleE9mKHNlYXJjaFN0cmluZywgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICB9XG59KTsiLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy45IFN0cmluZy5wcm90b3R5cGUuaXRhbGljcygpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdpdGFsaWNzJywgZnVuY3Rpb24oY3JlYXRlSFRNTCl7XG4gIHJldHVybiBmdW5jdGlvbiBpdGFsaWNzKCl7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2knLCAnJywgJycpO1xuICB9XG59KTsiLCIndXNlIHN0cmljdCc7XG52YXIgJGF0ICA9IHJlcXVpcmUoJy4vX3N0cmluZy1hdCcpKHRydWUpO1xuXG4vLyAyMS4xLjMuMjcgU3RyaW5nLnByb3RvdHlwZVtAQGl0ZXJhdG9yXSgpXG5yZXF1aXJlKCcuL19pdGVyLWRlZmluZScpKFN0cmluZywgJ1N0cmluZycsIGZ1bmN0aW9uKGl0ZXJhdGVkKXtcbiAgdGhpcy5fdCA9IFN0cmluZyhpdGVyYXRlZCk7IC8vIHRhcmdldFxuICB0aGlzLl9pID0gMDsgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuLy8gMjEuMS41LjIuMSAlU3RyaW5nSXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24oKXtcbiAgdmFyIE8gICAgID0gdGhpcy5fdFxuICAgICwgaW5kZXggPSB0aGlzLl9pXG4gICAgLCBwb2ludDtcbiAgaWYoaW5kZXggPj0gTy5sZW5ndGgpcmV0dXJuIHt2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlfTtcbiAgcG9pbnQgPSAkYXQoTywgaW5kZXgpO1xuICB0aGlzLl9pICs9IHBvaW50Lmxlbmd0aDtcbiAgcmV0dXJuIHt2YWx1ZTogcG9pbnQsIGRvbmU6IGZhbHNlfTtcbn0pOyIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjEwIFN0cmluZy5wcm90b3R5cGUubGluayh1cmwpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdsaW5rJywgZnVuY3Rpb24oY3JlYXRlSFRNTCl7XG4gIHJldHVybiBmdW5jdGlvbiBsaW5rKHVybCl7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2EnLCAnaHJlZicsIHVybCk7XG4gIH1cbn0pOyIsInZhciAkZXhwb3J0ICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKVxuICAsIHRvTGVuZ3RoICA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1N0cmluZycsIHtcbiAgLy8gMjEuMS4yLjQgU3RyaW5nLnJhdyhjYWxsU2l0ZSwgLi4uc3Vic3RpdHV0aW9ucylcbiAgcmF3OiBmdW5jdGlvbiByYXcoY2FsbFNpdGUpe1xuICAgIHZhciB0cGwgID0gdG9JT2JqZWN0KGNhbGxTaXRlLnJhdylcbiAgICAgICwgbGVuICA9IHRvTGVuZ3RoKHRwbC5sZW5ndGgpXG4gICAgICAsIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoXG4gICAgICAsIHJlcyAgPSBbXVxuICAgICAgLCBpICAgID0gMDtcbiAgICB3aGlsZShsZW4gPiBpKXtcbiAgICAgIHJlcy5wdXNoKFN0cmluZyh0cGxbaSsrXSkpO1xuICAgICAgaWYoaSA8IGFMZW4pcmVzLnB1c2goU3RyaW5nKGFyZ3VtZW50c1tpXSkpO1xuICAgIH0gcmV0dXJuIHJlcy5qb2luKCcnKTtcbiAgfVxufSk7IiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdTdHJpbmcnLCB7XG4gIC8vIDIxLjEuMy4xMyBTdHJpbmcucHJvdG90eXBlLnJlcGVhdChjb3VudClcbiAgcmVwZWF0OiByZXF1aXJlKCcuL19zdHJpbmctcmVwZWF0Jylcbn0pOyIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjExIFN0cmluZy5wcm90b3R5cGUuc21hbGwoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc21hbGwnLCBmdW5jdGlvbihjcmVhdGVIVE1MKXtcbiAgcmV0dXJuIGZ1bmN0aW9uIHNtYWxsKCl7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3NtYWxsJywgJycsICcnKTtcbiAgfVxufSk7IiwiLy8gMjEuMS4zLjE4IFN0cmluZy5wcm90b3R5cGUuc3RhcnRzV2l0aChzZWFyY2hTdHJpbmcgWywgcG9zaXRpb24gXSlcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgdG9MZW5ndGggICAgPSByZXF1aXJlKCcuL190by1sZW5ndGgnKVxuICAsIGNvbnRleHQgICAgID0gcmVxdWlyZSgnLi9fc3RyaW5nLWNvbnRleHQnKVxuICAsIFNUQVJUU19XSVRIID0gJ3N0YXJ0c1dpdGgnXG4gICwgJHN0YXJ0c1dpdGggPSAnJ1tTVEFSVFNfV0lUSF07XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMtaXMtcmVnZXhwJykoU1RBUlRTX1dJVEgpLCAnU3RyaW5nJywge1xuICBzdGFydHNXaXRoOiBmdW5jdGlvbiBzdGFydHNXaXRoKHNlYXJjaFN0cmluZyAvKiwgcG9zaXRpb24gPSAwICovKXtcbiAgICB2YXIgdGhhdCAgID0gY29udGV4dCh0aGlzLCBzZWFyY2hTdHJpbmcsIFNUQVJUU19XSVRIKVxuICAgICAgLCBpbmRleCAgPSB0b0xlbmd0aChNYXRoLm1pbihhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCwgdGhhdC5sZW5ndGgpKVxuICAgICAgLCBzZWFyY2ggPSBTdHJpbmcoc2VhcmNoU3RyaW5nKTtcbiAgICByZXR1cm4gJHN0YXJ0c1dpdGhcbiAgICAgID8gJHN0YXJ0c1dpdGguY2FsbCh0aGF0LCBzZWFyY2gsIGluZGV4KVxuICAgICAgOiB0aGF0LnNsaWNlKGluZGV4LCBpbmRleCArIHNlYXJjaC5sZW5ndGgpID09PSBzZWFyY2g7XG4gIH1cbn0pOyIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjEyIFN0cmluZy5wcm90b3R5cGUuc3RyaWtlKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ3N0cmlrZScsIGZ1bmN0aW9uKGNyZWF0ZUhUTUwpe1xuICByZXR1cm4gZnVuY3Rpb24gc3RyaWtlKCl7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3N0cmlrZScsICcnLCAnJyk7XG4gIH1cbn0pOyIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjEzIFN0cmluZy5wcm90b3R5cGUuc3ViKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ3N1YicsIGZ1bmN0aW9uKGNyZWF0ZUhUTUwpe1xuICByZXR1cm4gZnVuY3Rpb24gc3ViKCl7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3N1YicsICcnLCAnJyk7XG4gIH1cbn0pOyIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjE0IFN0cmluZy5wcm90b3R5cGUuc3VwKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ3N1cCcsIGZ1bmN0aW9uKGNyZWF0ZUhUTUwpe1xuICByZXR1cm4gZnVuY3Rpb24gc3VwKCl7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3N1cCcsICcnLCAnJyk7XG4gIH1cbn0pOyIsIid1c2Ugc3RyaWN0Jztcbi8vIDIxLjEuMy4yNSBTdHJpbmcucHJvdG90eXBlLnRyaW0oKVxucmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKSgndHJpbScsIGZ1bmN0aW9uKCR0cmltKXtcbiAgcmV0dXJuIGZ1bmN0aW9uIHRyaW0oKXtcbiAgICByZXR1cm4gJHRyaW0odGhpcywgMyk7XG4gIH07XG59KTsiLCIndXNlIHN0cmljdCc7XG4vLyBFQ01BU2NyaXB0IDYgc3ltYm9scyBzaGltXG52YXIgZ2xvYmFsICAgICAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKVxuICAsIGhhcyAgICAgICAgICAgID0gcmVxdWlyZSgnLi9faGFzJylcbiAgLCBERVNDUklQVE9SUyAgICA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJylcbiAgLCAkZXhwb3J0ICAgICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgcmVkZWZpbmUgICAgICAgPSByZXF1aXJlKCcuL19yZWRlZmluZScpXG4gICwgTUVUQSAgICAgICAgICAgPSByZXF1aXJlKCcuL19tZXRhJykuS0VZXG4gICwgJGZhaWxzICAgICAgICAgPSByZXF1aXJlKCcuL19mYWlscycpXG4gICwgc2hhcmVkICAgICAgICAgPSByZXF1aXJlKCcuL19zaGFyZWQnKVxuICAsIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKVxuICAsIHVpZCAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fdWlkJylcbiAgLCB3a3MgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX3drcycpXG4gICwgd2tzRXh0ICAgICAgICAgPSByZXF1aXJlKCcuL193a3MtZXh0JylcbiAgLCB3a3NEZWZpbmUgICAgICA9IHJlcXVpcmUoJy4vX3drcy1kZWZpbmUnKVxuICAsIGtleU9mICAgICAgICAgID0gcmVxdWlyZSgnLi9fa2V5b2YnKVxuICAsIGVudW1LZXlzICAgICAgID0gcmVxdWlyZSgnLi9fZW51bS1rZXlzJylcbiAgLCBpc0FycmF5ICAgICAgICA9IHJlcXVpcmUoJy4vX2lzLWFycmF5JylcbiAgLCBhbk9iamVjdCAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpXG4gICwgdG9JT2JqZWN0ICAgICAgPSByZXF1aXJlKCcuL190by1pb2JqZWN0JylcbiAgLCB0b1ByaW1pdGl2ZSAgICA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpXG4gICwgY3JlYXRlRGVzYyAgICAgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJylcbiAgLCBfY3JlYXRlICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKVxuICAsIGdPUE5FeHQgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4tZXh0JylcbiAgLCAkR09QRCAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJylcbiAgLCAkRFAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpXG4gICwgJGtleXMgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpXG4gICwgZ09QRCAgICAgICAgICAgPSAkR09QRC5mXG4gICwgZFAgICAgICAgICAgICAgPSAkRFAuZlxuICAsIGdPUE4gICAgICAgICAgID0gZ09QTkV4dC5mXG4gICwgJFN5bWJvbCAgICAgICAgPSBnbG9iYWwuU3ltYm9sXG4gICwgJEpTT04gICAgICAgICAgPSBnbG9iYWwuSlNPTlxuICAsIF9zdHJpbmdpZnkgICAgID0gJEpTT04gJiYgJEpTT04uc3RyaW5naWZ5XG4gICwgUFJPVE9UWVBFICAgICAgPSAncHJvdG90eXBlJ1xuICAsIEhJRERFTiAgICAgICAgID0gd2tzKCdfaGlkZGVuJylcbiAgLCBUT19QUklNSVRJVkUgICA9IHdrcygndG9QcmltaXRpdmUnKVxuICAsIGlzRW51bSAgICAgICAgID0ge30ucHJvcGVydHlJc0VudW1lcmFibGVcbiAgLCBTeW1ib2xSZWdpc3RyeSA9IHNoYXJlZCgnc3ltYm9sLXJlZ2lzdHJ5JylcbiAgLCBBbGxTeW1ib2xzICAgICA9IHNoYXJlZCgnc3ltYm9scycpXG4gICwgT1BTeW1ib2xzICAgICAgPSBzaGFyZWQoJ29wLXN5bWJvbHMnKVxuICAsIE9iamVjdFByb3RvICAgID0gT2JqZWN0W1BST1RPVFlQRV1cbiAgLCBVU0VfTkFUSVZFICAgICA9IHR5cGVvZiAkU3ltYm9sID09ICdmdW5jdGlvbidcbiAgLCBRT2JqZWN0ICAgICAgICA9IGdsb2JhbC5RT2JqZWN0O1xuLy8gRG9uJ3QgdXNlIHNldHRlcnMgaW4gUXQgU2NyaXB0LCBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMTczXG52YXIgc2V0dGVyID0gIVFPYmplY3QgfHwgIVFPYmplY3RbUFJPVE9UWVBFXSB8fCAhUU9iamVjdFtQUk9UT1RZUEVdLmZpbmRDaGlsZDtcblxuLy8gZmFsbGJhY2sgZm9yIG9sZCBBbmRyb2lkLCBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9Njg3XG52YXIgc2V0U3ltYm9sRGVzYyA9IERFU0NSSVBUT1JTICYmICRmYWlscyhmdW5jdGlvbigpe1xuICByZXR1cm4gX2NyZWF0ZShkUCh7fSwgJ2EnLCB7XG4gICAgZ2V0OiBmdW5jdGlvbigpeyByZXR1cm4gZFAodGhpcywgJ2EnLCB7dmFsdWU6IDd9KS5hOyB9XG4gIH0pKS5hICE9IDc7XG59KSA/IGZ1bmN0aW9uKGl0LCBrZXksIEQpe1xuICB2YXIgcHJvdG9EZXNjID0gZ09QRChPYmplY3RQcm90bywga2V5KTtcbiAgaWYocHJvdG9EZXNjKWRlbGV0ZSBPYmplY3RQcm90b1trZXldO1xuICBkUChpdCwga2V5LCBEKTtcbiAgaWYocHJvdG9EZXNjICYmIGl0ICE9PSBPYmplY3RQcm90bylkUChPYmplY3RQcm90bywga2V5LCBwcm90b0Rlc2MpO1xufSA6IGRQO1xuXG52YXIgd3JhcCA9IGZ1bmN0aW9uKHRhZyl7XG4gIHZhciBzeW0gPSBBbGxTeW1ib2xzW3RhZ10gPSBfY3JlYXRlKCRTeW1ib2xbUFJPVE9UWVBFXSk7XG4gIHN5bS5fayA9IHRhZztcbiAgcmV0dXJuIHN5bTtcbn07XG5cbnZhciBpc1N5bWJvbCA9IFVTRV9OQVRJVkUgJiYgdHlwZW9mICRTeW1ib2wuaXRlcmF0b3IgPT0gJ3N5bWJvbCcgPyBmdW5jdGlvbihpdCl7XG4gIHJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCc7XG59IDogZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gaXQgaW5zdGFuY2VvZiAkU3ltYm9sO1xufTtcblxudmFyICRkZWZpbmVQcm9wZXJ0eSA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KGl0LCBrZXksIEQpe1xuICBpZihpdCA9PT0gT2JqZWN0UHJvdG8pJGRlZmluZVByb3BlcnR5KE9QU3ltYm9scywga2V5LCBEKTtcbiAgYW5PYmplY3QoaXQpO1xuICBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpO1xuICBhbk9iamVjdChEKTtcbiAgaWYoaGFzKEFsbFN5bWJvbHMsIGtleSkpe1xuICAgIGlmKCFELmVudW1lcmFibGUpe1xuICAgICAgaWYoIWhhcyhpdCwgSElEREVOKSlkUChpdCwgSElEREVOLCBjcmVhdGVEZXNjKDEsIHt9KSk7XG4gICAgICBpdFtISURERU5dW2tleV0gPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZihoYXMoaXQsIEhJRERFTikgJiYgaXRbSElEREVOXVtrZXldKWl0W0hJRERFTl1ba2V5XSA9IGZhbHNlO1xuICAgICAgRCA9IF9jcmVhdGUoRCwge2VudW1lcmFibGU6IGNyZWF0ZURlc2MoMCwgZmFsc2UpfSk7XG4gICAgfSByZXR1cm4gc2V0U3ltYm9sRGVzYyhpdCwga2V5LCBEKTtcbiAgfSByZXR1cm4gZFAoaXQsIGtleSwgRCk7XG59O1xudmFyICRkZWZpbmVQcm9wZXJ0aWVzID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyhpdCwgUCl7XG4gIGFuT2JqZWN0KGl0KTtcbiAgdmFyIGtleXMgPSBlbnVtS2V5cyhQID0gdG9JT2JqZWN0KFApKVxuICAgICwgaSAgICA9IDBcbiAgICAsIGwgPSBrZXlzLmxlbmd0aFxuICAgICwga2V5O1xuICB3aGlsZShsID4gaSkkZGVmaW5lUHJvcGVydHkoaXQsIGtleSA9IGtleXNbaSsrXSwgUFtrZXldKTtcbiAgcmV0dXJuIGl0O1xufTtcbnZhciAkY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGl0LCBQKXtcbiAgcmV0dXJuIFAgPT09IHVuZGVmaW5lZCA/IF9jcmVhdGUoaXQpIDogJGRlZmluZVByb3BlcnRpZXMoX2NyZWF0ZShpdCksIFApO1xufTtcbnZhciAkcHJvcGVydHlJc0VudW1lcmFibGUgPSBmdW5jdGlvbiBwcm9wZXJ0eUlzRW51bWVyYWJsZShrZXkpe1xuICB2YXIgRSA9IGlzRW51bS5jYWxsKHRoaXMsIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSkpO1xuICBpZih0aGlzID09PSBPYmplY3RQcm90byAmJiBoYXMoQWxsU3ltYm9scywga2V5KSAmJiAhaGFzKE9QU3ltYm9scywga2V5KSlyZXR1cm4gZmFsc2U7XG4gIHJldHVybiBFIHx8ICFoYXModGhpcywga2V5KSB8fCAhaGFzKEFsbFN5bWJvbHMsIGtleSkgfHwgaGFzKHRoaXMsIEhJRERFTikgJiYgdGhpc1tISURERU5dW2tleV0gPyBFIDogdHJ1ZTtcbn07XG52YXIgJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihpdCwga2V5KXtcbiAgaXQgID0gdG9JT2JqZWN0KGl0KTtcbiAga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKTtcbiAgaWYoaXQgPT09IE9iamVjdFByb3RvICYmIGhhcyhBbGxTeW1ib2xzLCBrZXkpICYmICFoYXMoT1BTeW1ib2xzLCBrZXkpKXJldHVybjtcbiAgdmFyIEQgPSBnT1BEKGl0LCBrZXkpO1xuICBpZihEICYmIGhhcyhBbGxTeW1ib2xzLCBrZXkpICYmICEoaGFzKGl0LCBISURERU4pICYmIGl0W0hJRERFTl1ba2V5XSkpRC5lbnVtZXJhYmxlID0gdHJ1ZTtcbiAgcmV0dXJuIEQ7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eU5hbWVzID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhpdCl7XG4gIHZhciBuYW1lcyAgPSBnT1BOKHRvSU9iamVjdChpdCkpXG4gICAgLCByZXN1bHQgPSBbXVxuICAgICwgaSAgICAgID0gMFxuICAgICwga2V5O1xuICB3aGlsZShuYW1lcy5sZW5ndGggPiBpKXtcbiAgICBpZighaGFzKEFsbFN5bWJvbHMsIGtleSA9IG5hbWVzW2krK10pICYmIGtleSAhPSBISURERU4gJiYga2V5ICE9IE1FVEEpcmVzdWx0LnB1c2goa2V5KTtcbiAgfSByZXR1cm4gcmVzdWx0O1xufTtcbnZhciAkZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGl0KXtcbiAgdmFyIElTX09QICA9IGl0ID09PSBPYmplY3RQcm90b1xuICAgICwgbmFtZXMgID0gZ09QTihJU19PUCA/IE9QU3ltYm9scyA6IHRvSU9iamVjdChpdCkpXG4gICAgLCByZXN1bHQgPSBbXVxuICAgICwgaSAgICAgID0gMFxuICAgICwga2V5O1xuICB3aGlsZShuYW1lcy5sZW5ndGggPiBpKXtcbiAgICBpZihoYXMoQWxsU3ltYm9scywga2V5ID0gbmFtZXNbaSsrXSkgJiYgKElTX09QID8gaGFzKE9iamVjdFByb3RvLCBrZXkpIDogdHJ1ZSkpcmVzdWx0LnB1c2goQWxsU3ltYm9sc1trZXldKTtcbiAgfSByZXR1cm4gcmVzdWx0O1xufTtcblxuLy8gMTkuNC4xLjEgU3ltYm9sKFtkZXNjcmlwdGlvbl0pXG5pZighVVNFX05BVElWRSl7XG4gICRTeW1ib2wgPSBmdW5jdGlvbiBTeW1ib2woKXtcbiAgICBpZih0aGlzIGluc3RhbmNlb2YgJFN5bWJvbCl0aHJvdyBUeXBlRXJyb3IoJ1N5bWJvbCBpcyBub3QgYSBjb25zdHJ1Y3RvciEnKTtcbiAgICB2YXIgdGFnID0gdWlkKGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTtcbiAgICB2YXIgJHNldCA9IGZ1bmN0aW9uKHZhbHVlKXtcbiAgICAgIGlmKHRoaXMgPT09IE9iamVjdFByb3RvKSRzZXQuY2FsbChPUFN5bWJvbHMsIHZhbHVlKTtcbiAgICAgIGlmKGhhcyh0aGlzLCBISURERU4pICYmIGhhcyh0aGlzW0hJRERFTl0sIHRhZykpdGhpc1tISURERU5dW3RhZ10gPSBmYWxzZTtcbiAgICAgIHNldFN5bWJvbERlc2ModGhpcywgdGFnLCBjcmVhdGVEZXNjKDEsIHZhbHVlKSk7XG4gICAgfTtcbiAgICBpZihERVNDUklQVE9SUyAmJiBzZXR0ZXIpc2V0U3ltYm9sRGVzYyhPYmplY3RQcm90bywgdGFnLCB7Y29uZmlndXJhYmxlOiB0cnVlLCBzZXQ6ICRzZXR9KTtcbiAgICByZXR1cm4gd3JhcCh0YWcpO1xuICB9O1xuICByZWRlZmluZSgkU3ltYm9sW1BST1RPVFlQRV0sICd0b1N0cmluZycsIGZ1bmN0aW9uIHRvU3RyaW5nKCl7XG4gICAgcmV0dXJuIHRoaXMuX2s7XG4gIH0pO1xuXG4gICRHT1BELmYgPSAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuICAkRFAuZiAgID0gJGRlZmluZVByb3BlcnR5O1xuICByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmYgPSBnT1BORXh0LmYgPSAkZ2V0T3duUHJvcGVydHlOYW1lcztcbiAgcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpLmYgID0gJHByb3BlcnR5SXNFbnVtZXJhYmxlO1xuICByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpLmYgPSAkZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xuXG4gIGlmKERFU0NSSVBUT1JTICYmICFyZXF1aXJlKCcuL19saWJyYXJ5Jykpe1xuICAgIHJlZGVmaW5lKE9iamVjdFByb3RvLCAncHJvcGVydHlJc0VudW1lcmFibGUnLCAkcHJvcGVydHlJc0VudW1lcmFibGUsIHRydWUpO1xuICB9XG5cbiAgd2tzRXh0LmYgPSBmdW5jdGlvbihuYW1lKXtcbiAgICByZXR1cm4gd3JhcCh3a3MobmFtZSkpO1xuICB9XG59XG5cbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsIHtTeW1ib2w6ICRTeW1ib2x9KTtcblxuZm9yKHZhciBzeW1ib2xzID0gKFxuICAvLyAxOS40LjIuMiwgMTkuNC4yLjMsIDE5LjQuMi40LCAxOS40LjIuNiwgMTkuNC4yLjgsIDE5LjQuMi45LCAxOS40LjIuMTAsIDE5LjQuMi4xMSwgMTkuNC4yLjEyLCAxOS40LjIuMTMsIDE5LjQuMi4xNFxuICAnaGFzSW5zdGFuY2UsaXNDb25jYXRTcHJlYWRhYmxlLGl0ZXJhdG9yLG1hdGNoLHJlcGxhY2Usc2VhcmNoLHNwZWNpZXMsc3BsaXQsdG9QcmltaXRpdmUsdG9TdHJpbmdUYWcsdW5zY29wYWJsZXMnXG4pLnNwbGl0KCcsJyksIGkgPSAwOyBzeW1ib2xzLmxlbmd0aCA+IGk7ICl3a3Moc3ltYm9sc1tpKytdKTtcblxuZm9yKHZhciBzeW1ib2xzID0gJGtleXMod2tzLnN0b3JlKSwgaSA9IDA7IHN5bWJvbHMubGVuZ3RoID4gaTsgKXdrc0RlZmluZShzeW1ib2xzW2krK10pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCAnU3ltYm9sJywge1xuICAvLyAxOS40LjIuMSBTeW1ib2wuZm9yKGtleSlcbiAgJ2Zvcic6IGZ1bmN0aW9uKGtleSl7XG4gICAgcmV0dXJuIGhhcyhTeW1ib2xSZWdpc3RyeSwga2V5ICs9ICcnKVxuICAgICAgPyBTeW1ib2xSZWdpc3RyeVtrZXldXG4gICAgICA6IFN5bWJvbFJlZ2lzdHJ5W2tleV0gPSAkU3ltYm9sKGtleSk7XG4gIH0sXG4gIC8vIDE5LjQuMi41IFN5bWJvbC5rZXlGb3Ioc3ltKVxuICBrZXlGb3I6IGZ1bmN0aW9uIGtleUZvcihrZXkpe1xuICAgIGlmKGlzU3ltYm9sKGtleSkpcmV0dXJuIGtleU9mKFN5bWJvbFJlZ2lzdHJ5LCBrZXkpO1xuICAgIHRocm93IFR5cGVFcnJvcihrZXkgKyAnIGlzIG5vdCBhIHN5bWJvbCEnKTtcbiAgfSxcbiAgdXNlU2V0dGVyOiBmdW5jdGlvbigpeyBzZXR0ZXIgPSB0cnVlOyB9LFxuICB1c2VTaW1wbGU6IGZ1bmN0aW9uKCl7IHNldHRlciA9IGZhbHNlOyB9XG59KTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgJ09iamVjdCcsIHtcbiAgLy8gMTkuMS4yLjIgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxuICBjcmVhdGU6ICRjcmVhdGUsXG4gIC8vIDE5LjEuMi40IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKVxuICBkZWZpbmVQcm9wZXJ0eTogJGRlZmluZVByb3BlcnR5LFxuICAvLyAxOS4xLjIuMyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKVxuICBkZWZpbmVQcm9wZXJ0aWVzOiAkZGVmaW5lUHJvcGVydGllcyxcbiAgLy8gMTkuMS4yLjYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKVxuICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6ICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsXG4gIC8vIDE5LjEuMi43IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pXG4gIGdldE93blByb3BlcnR5TmFtZXM6ICRnZXRPd25Qcm9wZXJ0eU5hbWVzLFxuICAvLyAxOS4xLjIuOCBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKE8pXG4gIGdldE93blByb3BlcnR5U3ltYm9sczogJGdldE93blByb3BlcnR5U3ltYm9sc1xufSk7XG5cbi8vIDI0LjMuMiBKU09OLnN0cmluZ2lmeSh2YWx1ZSBbLCByZXBsYWNlciBbLCBzcGFjZV1dKVxuJEpTT04gJiYgJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoIVVTRV9OQVRJVkUgfHwgJGZhaWxzKGZ1bmN0aW9uKCl7XG4gIHZhciBTID0gJFN5bWJvbCgpO1xuICAvLyBNUyBFZGdlIGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyB7fVxuICAvLyBXZWJLaXQgY29udmVydHMgc3ltYm9sIHZhbHVlcyB0byBKU09OIGFzIG51bGxcbiAgLy8gVjggdGhyb3dzIG9uIGJveGVkIHN5bWJvbHNcbiAgcmV0dXJuIF9zdHJpbmdpZnkoW1NdKSAhPSAnW251bGxdJyB8fCBfc3RyaW5naWZ5KHthOiBTfSkgIT0gJ3t9JyB8fCBfc3RyaW5naWZ5KE9iamVjdChTKSkgIT0gJ3t9Jztcbn0pKSwgJ0pTT04nLCB7XG4gIHN0cmluZ2lmeTogZnVuY3Rpb24gc3RyaW5naWZ5KGl0KXtcbiAgICBpZihpdCA9PT0gdW5kZWZpbmVkIHx8IGlzU3ltYm9sKGl0KSlyZXR1cm47IC8vIElFOCByZXR1cm5zIHN0cmluZyBvbiB1bmRlZmluZWRcbiAgICB2YXIgYXJncyA9IFtpdF1cbiAgICAgICwgaSAgICA9IDFcbiAgICAgICwgcmVwbGFjZXIsICRyZXBsYWNlcjtcbiAgICB3aGlsZShhcmd1bWVudHMubGVuZ3RoID4gaSlhcmdzLnB1c2goYXJndW1lbnRzW2krK10pO1xuICAgIHJlcGxhY2VyID0gYXJnc1sxXTtcbiAgICBpZih0eXBlb2YgcmVwbGFjZXIgPT0gJ2Z1bmN0aW9uJykkcmVwbGFjZXIgPSByZXBsYWNlcjtcbiAgICBpZigkcmVwbGFjZXIgfHwgIWlzQXJyYXkocmVwbGFjZXIpKXJlcGxhY2VyID0gZnVuY3Rpb24oa2V5LCB2YWx1ZSl7XG4gICAgICBpZigkcmVwbGFjZXIpdmFsdWUgPSAkcmVwbGFjZXIuY2FsbCh0aGlzLCBrZXksIHZhbHVlKTtcbiAgICAgIGlmKCFpc1N5bWJvbCh2YWx1ZSkpcmV0dXJuIHZhbHVlO1xuICAgIH07XG4gICAgYXJnc1sxXSA9IHJlcGxhY2VyO1xuICAgIHJldHVybiBfc3RyaW5naWZ5LmFwcGx5KCRKU09OLCBhcmdzKTtcbiAgfVxufSk7XG5cbi8vIDE5LjQuMy40IFN5bWJvbC5wcm90b3R5cGVbQEB0b1ByaW1pdGl2ZV0oaGludClcbiRTeW1ib2xbUFJPVE9UWVBFXVtUT19QUklNSVRJVkVdIHx8IHJlcXVpcmUoJy4vX2hpZGUnKSgkU3ltYm9sW1BST1RPVFlQRV0sIFRPX1BSSU1JVElWRSwgJFN5bWJvbFtQUk9UT1RZUEVdLnZhbHVlT2YpO1xuLy8gMTkuNC4zLjUgU3ltYm9sLnByb3RvdHlwZVtAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoJFN5bWJvbCwgJ1N5bWJvbCcpO1xuLy8gMjAuMi4xLjkgTWF0aFtAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoTWF0aCwgJ01hdGgnLCB0cnVlKTtcbi8vIDI0LjMuMyBKU09OW0BAdG9TdHJpbmdUYWddXG5zZXRUb1N0cmluZ1RhZyhnbG9iYWwuSlNPTiwgJ0pTT04nLCB0cnVlKTsiLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCAgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCAkdHlwZWQgICAgICAgPSByZXF1aXJlKCcuL190eXBlZCcpXG4gICwgYnVmZmVyICAgICAgID0gcmVxdWlyZSgnLi9fdHlwZWQtYnVmZmVyJylcbiAgLCBhbk9iamVjdCAgICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKVxuICAsIHRvSW5kZXggICAgICA9IHJlcXVpcmUoJy4vX3RvLWluZGV4JylcbiAgLCB0b0xlbmd0aCAgICAgPSByZXF1aXJlKCcuL190by1sZW5ndGgnKVxuICAsIGlzT2JqZWN0ICAgICA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpXG4gICwgQXJyYXlCdWZmZXIgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuQXJyYXlCdWZmZXJcbiAgLCBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJylcbiAgLCAkQXJyYXlCdWZmZXIgPSBidWZmZXIuQXJyYXlCdWZmZXJcbiAgLCAkRGF0YVZpZXcgICAgPSBidWZmZXIuRGF0YVZpZXdcbiAgLCAkaXNWaWV3ICAgICAgPSAkdHlwZWQuQUJWICYmIEFycmF5QnVmZmVyLmlzVmlld1xuICAsICRzbGljZSAgICAgICA9ICRBcnJheUJ1ZmZlci5wcm90b3R5cGUuc2xpY2VcbiAgLCBWSUVXICAgICAgICAgPSAkdHlwZWQuVklFV1xuICAsIEFSUkFZX0JVRkZFUiA9ICdBcnJheUJ1ZmZlcic7XG5cbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogKEFycmF5QnVmZmVyICE9PSAkQXJyYXlCdWZmZXIpLCB7QXJyYXlCdWZmZXI6ICRBcnJheUJ1ZmZlcn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEkdHlwZWQuQ09OU1RSLCBBUlJBWV9CVUZGRVIsIHtcbiAgLy8gMjQuMS4zLjEgQXJyYXlCdWZmZXIuaXNWaWV3KGFyZylcbiAgaXNWaWV3OiBmdW5jdGlvbiBpc1ZpZXcoaXQpe1xuICAgIHJldHVybiAkaXNWaWV3ICYmICRpc1ZpZXcoaXQpIHx8IGlzT2JqZWN0KGl0KSAmJiBWSUVXIGluIGl0O1xuICB9XG59KTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LlUgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uKCl7XG4gIHJldHVybiAhbmV3ICRBcnJheUJ1ZmZlcigyKS5zbGljZSgxLCB1bmRlZmluZWQpLmJ5dGVMZW5ndGg7XG59KSwgQVJSQVlfQlVGRkVSLCB7XG4gIC8vIDI0LjEuNC4zIEFycmF5QnVmZmVyLnByb3RvdHlwZS5zbGljZShzdGFydCwgZW5kKVxuICBzbGljZTogZnVuY3Rpb24gc2xpY2Uoc3RhcnQsIGVuZCl7XG4gICAgaWYoJHNsaWNlICE9PSB1bmRlZmluZWQgJiYgZW5kID09PSB1bmRlZmluZWQpcmV0dXJuICRzbGljZS5jYWxsKGFuT2JqZWN0KHRoaXMpLCBzdGFydCk7IC8vIEZGIGZpeFxuICAgIHZhciBsZW4gICAgPSBhbk9iamVjdCh0aGlzKS5ieXRlTGVuZ3RoXG4gICAgICAsIGZpcnN0ICA9IHRvSW5kZXgoc3RhcnQsIGxlbilcbiAgICAgICwgZmluYWwgID0gdG9JbmRleChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbiA6IGVuZCwgbGVuKVxuICAgICAgLCByZXN1bHQgPSBuZXcgKHNwZWNpZXNDb25zdHJ1Y3Rvcih0aGlzLCAkQXJyYXlCdWZmZXIpKSh0b0xlbmd0aChmaW5hbCAtIGZpcnN0KSlcbiAgICAgICwgdmlld1MgID0gbmV3ICREYXRhVmlldyh0aGlzKVxuICAgICAgLCB2aWV3VCAgPSBuZXcgJERhdGFWaWV3KHJlc3VsdClcbiAgICAgICwgaW5kZXggID0gMDtcbiAgICB3aGlsZShmaXJzdCA8IGZpbmFsKXtcbiAgICAgIHZpZXdULnNldFVpbnQ4KGluZGV4KyssIHZpZXdTLmdldFVpbnQ4KGZpcnN0KyspKTtcbiAgICB9IHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuXG5yZXF1aXJlKCcuL19zZXQtc3BlY2llcycpKEFSUkFZX0JVRkZFUik7IiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3R5cGVkJykuQUJWLCB7XG4gIERhdGFWaWV3OiByZXF1aXJlKCcuL190eXBlZC1idWZmZXInKS5EYXRhVmlld1xufSk7IiwicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnRmxvYXQzMicsIDQsIGZ1bmN0aW9uKGluaXQpe1xuICByZXR1cm4gZnVuY3Rpb24gRmxvYXQzMkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCl7XG4gICAgcmV0dXJuIGluaXQodGhpcywgZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKTtcbiAgfTtcbn0pOyIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ0Zsb2F0NjQnLCA4LCBmdW5jdGlvbihpbml0KXtcbiAgcmV0dXJuIGZ1bmN0aW9uIEZsb2F0NjRBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpe1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTsiLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdJbnQxNicsIDIsIGZ1bmN0aW9uKGluaXQpe1xuICByZXR1cm4gZnVuY3Rpb24gSW50MTZBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpe1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTsiLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdJbnQzMicsIDQsIGZ1bmN0aW9uKGluaXQpe1xuICByZXR1cm4gZnVuY3Rpb24gSW50MzJBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpe1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTsiLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdJbnQ4JywgMSwgZnVuY3Rpb24oaW5pdCl7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQ4QXJyYXkoZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKXtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7IiwicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnVWludDE2JywgMiwgZnVuY3Rpb24oaW5pdCl7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50MTZBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpe1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTsiLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdVaW50MzInLCA0LCBmdW5jdGlvbihpbml0KXtcbiAgcmV0dXJuIGZ1bmN0aW9uIFVpbnQzMkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCl7XG4gICAgcmV0dXJuIGluaXQodGhpcywgZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKTtcbiAgfTtcbn0pOyIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ1VpbnQ4JywgMSwgZnVuY3Rpb24oaW5pdCl7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50OEFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCl7XG4gICAgcmV0dXJuIGluaXQodGhpcywgZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKTtcbiAgfTtcbn0pOyIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ1VpbnQ4JywgMSwgZnVuY3Rpb24oaW5pdCl7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50OENsYW1wZWRBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpe1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59LCB0cnVlKTsiLCIndXNlIHN0cmljdCc7XG52YXIgZWFjaCAgICAgICAgID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDApXG4gICwgcmVkZWZpbmUgICAgID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKVxuICAsIG1ldGEgICAgICAgICA9IHJlcXVpcmUoJy4vX21ldGEnKVxuICAsIGFzc2lnbiAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1hc3NpZ24nKVxuICAsIHdlYWsgICAgICAgICA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24td2VhaycpXG4gICwgaXNPYmplY3QgICAgID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JylcbiAgLCBnZXRXZWFrICAgICAgPSBtZXRhLmdldFdlYWtcbiAgLCBpc0V4dGVuc2libGUgPSBPYmplY3QuaXNFeHRlbnNpYmxlXG4gICwgdW5jYXVnaHRGcm96ZW5TdG9yZSA9IHdlYWsudWZzdG9yZVxuICAsIHRtcCAgICAgICAgICA9IHt9XG4gICwgSW50ZXJuYWxNYXA7XG5cbnZhciB3cmFwcGVyID0gZnVuY3Rpb24oZ2V0KXtcbiAgcmV0dXJuIGZ1bmN0aW9uIFdlYWtNYXAoKXtcbiAgICByZXR1cm4gZ2V0KHRoaXMsIGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTtcbiAgfTtcbn07XG5cbnZhciBtZXRob2RzID0ge1xuICAvLyAyMy4zLjMuMyBXZWFrTWFwLnByb3RvdHlwZS5nZXQoa2V5KVxuICBnZXQ6IGZ1bmN0aW9uIGdldChrZXkpe1xuICAgIGlmKGlzT2JqZWN0KGtleSkpe1xuICAgICAgdmFyIGRhdGEgPSBnZXRXZWFrKGtleSk7XG4gICAgICBpZihkYXRhID09PSB0cnVlKXJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHRoaXMpLmdldChrZXkpO1xuICAgICAgcmV0dXJuIGRhdGEgPyBkYXRhW3RoaXMuX2ldIDogdW5kZWZpbmVkO1xuICAgIH1cbiAgfSxcbiAgLy8gMjMuMy4zLjUgV2Vha01hcC5wcm90b3R5cGUuc2V0KGtleSwgdmFsdWUpXG4gIHNldDogZnVuY3Rpb24gc2V0KGtleSwgdmFsdWUpe1xuICAgIHJldHVybiB3ZWFrLmRlZih0aGlzLCBrZXksIHZhbHVlKTtcbiAgfVxufTtcblxuLy8gMjMuMyBXZWFrTWFwIE9iamVjdHNcbnZhciAkV2Vha01hcCA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbicpKCdXZWFrTWFwJywgd3JhcHBlciwgbWV0aG9kcywgd2VhaywgdHJ1ZSwgdHJ1ZSk7XG5cbi8vIElFMTEgV2Vha01hcCBmcm96ZW4ga2V5cyBmaXhcbmlmKG5ldyAkV2Vha01hcCgpLnNldCgoT2JqZWN0LmZyZWV6ZSB8fCBPYmplY3QpKHRtcCksIDcpLmdldCh0bXApICE9IDcpe1xuICBJbnRlcm5hbE1hcCA9IHdlYWsuZ2V0Q29uc3RydWN0b3Iod3JhcHBlcik7XG4gIGFzc2lnbihJbnRlcm5hbE1hcC5wcm90b3R5cGUsIG1ldGhvZHMpO1xuICBtZXRhLk5FRUQgPSB0cnVlO1xuICBlYWNoKFsnZGVsZXRlJywgJ2hhcycsICdnZXQnLCAnc2V0J10sIGZ1bmN0aW9uKGtleSl7XG4gICAgdmFyIHByb3RvICA9ICRXZWFrTWFwLnByb3RvdHlwZVxuICAgICAgLCBtZXRob2QgPSBwcm90b1trZXldO1xuICAgIHJlZGVmaW5lKHByb3RvLCBrZXksIGZ1bmN0aW9uKGEsIGIpe1xuICAgICAgLy8gc3RvcmUgZnJvemVuIG9iamVjdHMgb24gaW50ZXJuYWwgd2Vha21hcCBzaGltXG4gICAgICBpZihpc09iamVjdChhKSAmJiAhaXNFeHRlbnNpYmxlKGEpKXtcbiAgICAgICAgaWYoIXRoaXMuX2YpdGhpcy5fZiA9IG5ldyBJbnRlcm5hbE1hcDtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuX2Zba2V5XShhLCBiKTtcbiAgICAgICAgcmV0dXJuIGtleSA9PSAnc2V0JyA/IHRoaXMgOiByZXN1bHQ7XG4gICAgICAvLyBzdG9yZSBhbGwgdGhlIHJlc3Qgb24gbmF0aXZlIHdlYWttYXBcbiAgICAgIH0gcmV0dXJuIG1ldGhvZC5jYWxsKHRoaXMsIGEsIGIpO1xuICAgIH0pO1xuICB9KTtcbn0iLCIndXNlIHN0cmljdCc7XG52YXIgd2VhayA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24td2VhaycpO1xuXG4vLyAyMy40IFdlYWtTZXQgT2JqZWN0c1xucmVxdWlyZSgnLi9fY29sbGVjdGlvbicpKCdXZWFrU2V0JywgZnVuY3Rpb24oZ2V0KXtcbiAgcmV0dXJuIGZ1bmN0aW9uIFdlYWtTZXQoKXsgcmV0dXJuIGdldCh0aGlzLCBhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7IH07XG59LCB7XG4gIC8vIDIzLjQuMy4xIFdlYWtTZXQucHJvdG90eXBlLmFkZCh2YWx1ZSlcbiAgYWRkOiBmdW5jdGlvbiBhZGQodmFsdWUpe1xuICAgIHJldHVybiB3ZWFrLmRlZih0aGlzLCB2YWx1ZSwgdHJ1ZSk7XG4gIH1cbn0sIHdlYWssIGZhbHNlLCB0cnVlKTsiLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9BcnJheS5wcm90b3R5cGUuaW5jbHVkZXNcbnZhciAkZXhwb3J0ICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsICRpbmNsdWRlcyA9IHJlcXVpcmUoJy4vX2FycmF5LWluY2x1ZGVzJykodHJ1ZSk7XG5cbiRleHBvcnQoJGV4cG9ydC5QLCAnQXJyYXknLCB7XG4gIGluY2x1ZGVzOiBmdW5jdGlvbiBpbmNsdWRlcyhlbCAvKiwgZnJvbUluZGV4ID0gMCAqLyl7XG4gICAgcmV0dXJuICRpbmNsdWRlcyh0aGlzLCBlbCwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICB9XG59KTtcblxucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoJ2luY2x1ZGVzJyk7IiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3J3YWxkcm9uL3RjMzktbm90ZXMvYmxvYi9tYXN0ZXIvZXM2LzIwMTQtMDkvc2VwdC0yNS5tZCM1MTAtZ2xvYmFsYXNhcC1mb3ItZW5xdWV1aW5nLWEtbWljcm90YXNrXG52YXIgJGV4cG9ydCAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBtaWNyb3Rhc2sgPSByZXF1aXJlKCcuL19taWNyb3Rhc2snKSgpXG4gICwgcHJvY2VzcyAgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykucHJvY2Vzc1xuICAsIGlzTm9kZSAgICA9IHJlcXVpcmUoJy4vX2NvZicpKHByb2Nlc3MpID09ICdwcm9jZXNzJztcblxuJGV4cG9ydCgkZXhwb3J0LkcsIHtcbiAgYXNhcDogZnVuY3Rpb24gYXNhcChmbil7XG4gICAgdmFyIGRvbWFpbiA9IGlzTm9kZSAmJiBwcm9jZXNzLmRvbWFpbjtcbiAgICBtaWNyb3Rhc2soZG9tYWluID8gZG9tYWluLmJpbmQoZm4pIDogZm4pO1xuICB9XG59KTsiLCIvLyBodHRwczovL2dpdGh1Yi5jb20vbGpoYXJiL3Byb3Bvc2FsLWlzLWVycm9yXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgY29mICAgICA9IHJlcXVpcmUoJy4vX2NvZicpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ0Vycm9yJywge1xuICBpc0Vycm9yOiBmdW5jdGlvbiBpc0Vycm9yKGl0KXtcbiAgICByZXR1cm4gY29mKGl0KSA9PT0gJ0Vycm9yJztcbiAgfVxufSk7IiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL0RhdmlkQnJ1YW50L01hcC1TZXQucHJvdG90eXBlLnRvSlNPTlxudmFyICRleHBvcnQgID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5SLCAnTWFwJywge3RvSlNPTjogcmVxdWlyZSgnLi9fY29sbGVjdGlvbi10by1qc29uJykoJ01hcCcpfSk7IiwiLy8gaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vQnJlbmRhbkVpY2gvNDI5NGQ1YzIxMmE2ZDIyNTQ3MDNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgaWFkZGg6IGZ1bmN0aW9uIGlhZGRoKHgwLCB4MSwgeTAsIHkxKXtcbiAgICB2YXIgJHgwID0geDAgPj4+IDBcbiAgICAgICwgJHgxID0geDEgPj4+IDBcbiAgICAgICwgJHkwID0geTAgPj4+IDA7XG4gICAgcmV0dXJuICR4MSArICh5MSA+Pj4gMCkgKyAoKCR4MCAmICR5MCB8ICgkeDAgfCAkeTApICYgfigkeDAgKyAkeTAgPj4+IDApKSA+Pj4gMzEpIHwgMDtcbiAgfVxufSk7IiwiLy8gaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vQnJlbmRhbkVpY2gvNDI5NGQ1YzIxMmE2ZDIyNTQ3MDNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgaW11bGg6IGZ1bmN0aW9uIGltdWxoKHUsIHYpe1xuICAgIHZhciBVSU5UMTYgPSAweGZmZmZcbiAgICAgICwgJHUgPSArdVxuICAgICAgLCAkdiA9ICt2XG4gICAgICAsIHUwID0gJHUgJiBVSU5UMTZcbiAgICAgICwgdjAgPSAkdiAmIFVJTlQxNlxuICAgICAgLCB1MSA9ICR1ID4+IDE2XG4gICAgICAsIHYxID0gJHYgPj4gMTZcbiAgICAgICwgdCAgPSAodTEgKiB2MCA+Pj4gMCkgKyAodTAgKiB2MCA+Pj4gMTYpO1xuICAgIHJldHVybiB1MSAqIHYxICsgKHQgPj4gMTYpICsgKCh1MCAqIHYxID4+PiAwKSArICh0ICYgVUlOVDE2KSA+PiAxNik7XG4gIH1cbn0pOyIsIi8vIGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL0JyZW5kYW5FaWNoLzQyOTRkNWMyMTJhNmQyMjU0NzAzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGlzdWJoOiBmdW5jdGlvbiBpc3ViaCh4MCwgeDEsIHkwLCB5MSl7XG4gICAgdmFyICR4MCA9IHgwID4+PiAwXG4gICAgICAsICR4MSA9IHgxID4+PiAwXG4gICAgICAsICR5MCA9IHkwID4+PiAwO1xuICAgIHJldHVybiAkeDEgLSAoeTEgPj4+IDApIC0gKCh+JHgwICYgJHkwIHwgfigkeDAgXiAkeTApICYgJHgwIC0gJHkwID4+PiAwKSA+Pj4gMzEpIHwgMDtcbiAgfVxufSk7IiwiLy8gaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vQnJlbmRhbkVpY2gvNDI5NGQ1YzIxMmE2ZDIyNTQ3MDNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgdW11bGg6IGZ1bmN0aW9uIHVtdWxoKHUsIHYpe1xuICAgIHZhciBVSU5UMTYgPSAweGZmZmZcbiAgICAgICwgJHUgPSArdVxuICAgICAgLCAkdiA9ICt2XG4gICAgICAsIHUwID0gJHUgJiBVSU5UMTZcbiAgICAgICwgdjAgPSAkdiAmIFVJTlQxNlxuICAgICAgLCB1MSA9ICR1ID4+PiAxNlxuICAgICAgLCB2MSA9ICR2ID4+PiAxNlxuICAgICAgLCB0ICA9ICh1MSAqIHYwID4+PiAwKSArICh1MCAqIHYwID4+PiAxNik7XG4gICAgcmV0dXJuIHUxICogdjEgKyAodCA+Pj4gMTYpICsgKCh1MCAqIHYxID4+PiAwKSArICh0ICYgVUlOVDE2KSA+Pj4gMTYpO1xuICB9XG59KTsiLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCAgICAgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCB0b09iamVjdCAgICAgICAgPSByZXF1aXJlKCcuL190by1vYmplY3QnKVxuICAsIGFGdW5jdGlvbiAgICAgICA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKVxuICAsICRkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xuXG4vLyBCLjIuMi4yIE9iamVjdC5wcm90b3R5cGUuX19kZWZpbmVHZXR0ZXJfXyhQLCBnZXR0ZXIpXG5yZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmICRleHBvcnQoJGV4cG9ydC5QICsgcmVxdWlyZSgnLi9fb2JqZWN0LWZvcmNlZC1wYW0nKSwgJ09iamVjdCcsIHtcbiAgX19kZWZpbmVHZXR0ZXJfXzogZnVuY3Rpb24gX19kZWZpbmVHZXR0ZXJfXyhQLCBnZXR0ZXIpe1xuICAgICRkZWZpbmVQcm9wZXJ0eS5mKHRvT2JqZWN0KHRoaXMpLCBQLCB7Z2V0OiBhRnVuY3Rpb24oZ2V0dGVyKSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlfSk7XG4gIH1cbn0pOyIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ICAgICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIHRvT2JqZWN0ICAgICAgICA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpXG4gICwgYUZ1bmN0aW9uICAgICAgID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpXG4gICwgJGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG5cbi8vIEIuMi4yLjMgT2JqZWN0LnByb3RvdHlwZS5fX2RlZmluZVNldHRlcl9fKFAsIHNldHRlcilcbnJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgJGV4cG9ydCgkZXhwb3J0LlAgKyByZXF1aXJlKCcuL19vYmplY3QtZm9yY2VkLXBhbScpLCAnT2JqZWN0Jywge1xuICBfX2RlZmluZVNldHRlcl9fOiBmdW5jdGlvbiBfX2RlZmluZVNldHRlcl9fKFAsIHNldHRlcil7XG4gICAgJGRlZmluZVByb3BlcnR5LmYodG9PYmplY3QodGhpcyksIFAsIHtzZXQ6IGFGdW5jdGlvbihzZXR0ZXIpLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWV9KTtcbiAgfVxufSk7IiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtb2JqZWN0LXZhbHVlcy1lbnRyaWVzXG52YXIgJGV4cG9ydCAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsICRlbnRyaWVzID0gcmVxdWlyZSgnLi9fb2JqZWN0LXRvLWFycmF5JykodHJ1ZSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge1xuICBlbnRyaWVzOiBmdW5jdGlvbiBlbnRyaWVzKGl0KXtcbiAgICByZXR1cm4gJGVudHJpZXMoaXQpO1xuICB9XG59KTsiLCIvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYmplY3QtZ2V0b3ducHJvcGVydHlkZXNjcmlwdG9yc1xudmFyICRleHBvcnQgICAgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBvd25LZXlzICAgICAgICA9IHJlcXVpcmUoJy4vX293bi1rZXlzJylcbiAgLCB0b0lPYmplY3QgICAgICA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKVxuICAsIGdPUEQgICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKVxuICAsIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fY3JlYXRlLXByb3BlcnR5Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge1xuICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzOiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKG9iamVjdCl7XG4gICAgdmFyIE8gICAgICAgPSB0b0lPYmplY3Qob2JqZWN0KVxuICAgICAgLCBnZXREZXNjID0gZ09QRC5mXG4gICAgICAsIGtleXMgICAgPSBvd25LZXlzKE8pXG4gICAgICAsIHJlc3VsdCAgPSB7fVxuICAgICAgLCBpICAgICAgID0gMFxuICAgICAgLCBrZXk7XG4gICAgd2hpbGUoa2V5cy5sZW5ndGggPiBpKWNyZWF0ZVByb3BlcnR5KHJlc3VsdCwga2V5ID0ga2V5c1tpKytdLCBnZXREZXNjKE8sIGtleSkpO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pOyIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ICAgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIHRvT2JqZWN0ICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpXG4gICwgdG9QcmltaXRpdmUgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJylcbiAgLCBnZXRQcm90b3R5cGVPZiAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJylcbiAgLCBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmY7XG5cbi8vIEIuMi4yLjQgT2JqZWN0LnByb3RvdHlwZS5fX2xvb2t1cEdldHRlcl9fKFApXG5yZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmICRleHBvcnQoJGV4cG9ydC5QICsgcmVxdWlyZSgnLi9fb2JqZWN0LWZvcmNlZC1wYW0nKSwgJ09iamVjdCcsIHtcbiAgX19sb29rdXBHZXR0ZXJfXzogZnVuY3Rpb24gX19sb29rdXBHZXR0ZXJfXyhQKXtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KHRoaXMpXG4gICAgICAsIEsgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKVxuICAgICAgLCBEO1xuICAgIGRvIHtcbiAgICAgIGlmKEQgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgSykpcmV0dXJuIEQuZ2V0O1xuICAgIH0gd2hpbGUoTyA9IGdldFByb3RvdHlwZU9mKE8pKTtcbiAgfVxufSk7IiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgdG9PYmplY3QgICAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0JylcbiAgLCB0b1ByaW1pdGl2ZSAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKVxuICAsIGdldFByb3RvdHlwZU9mICAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKVxuICAsIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcblxuLy8gQi4yLjIuNSBPYmplY3QucHJvdG90eXBlLl9fbG9va3VwU2V0dGVyX18oUClcbnJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgJGV4cG9ydCgkZXhwb3J0LlAgKyByZXF1aXJlKCcuL19vYmplY3QtZm9yY2VkLXBhbScpLCAnT2JqZWN0Jywge1xuICBfX2xvb2t1cFNldHRlcl9fOiBmdW5jdGlvbiBfX2xvb2t1cFNldHRlcl9fKFApe1xuICAgIHZhciBPID0gdG9PYmplY3QodGhpcylcbiAgICAgICwgSyA9IHRvUHJpbWl0aXZlKFAsIHRydWUpXG4gICAgICAsIEQ7XG4gICAgZG8ge1xuICAgICAgaWYoRCA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBLKSlyZXR1cm4gRC5zZXQ7XG4gICAgfSB3aGlsZShPID0gZ2V0UHJvdG90eXBlT2YoTykpO1xuICB9XG59KTsiLCIvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYmplY3QtdmFsdWVzLWVudHJpZXNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCAkdmFsdWVzID0gcmVxdWlyZSgnLi9fb2JqZWN0LXRvLWFycmF5JykoZmFsc2UpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHtcbiAgdmFsdWVzOiBmdW5jdGlvbiB2YWx1ZXMoaXQpe1xuICAgIHJldHVybiAkdmFsdWVzKGl0KTtcbiAgfVxufSk7IiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3plbnBhcnNpbmcvZXMtb2JzZXJ2YWJsZVxudmFyICRleHBvcnQgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBnbG9iYWwgICAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpXG4gICwgY29yZSAgICAgICAgPSByZXF1aXJlKCcuL19jb3JlJylcbiAgLCBtaWNyb3Rhc2sgICA9IHJlcXVpcmUoJy4vX21pY3JvdGFzaycpKClcbiAgLCBPQlNFUlZBQkxFICA9IHJlcXVpcmUoJy4vX3drcycpKCdvYnNlcnZhYmxlJylcbiAgLCBhRnVuY3Rpb24gICA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKVxuICAsIGFuT2JqZWN0ICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JylcbiAgLCBhbkluc3RhbmNlICA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJylcbiAgLCByZWRlZmluZUFsbCA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpXG4gICwgaGlkZSAgICAgICAgPSByZXF1aXJlKCcuL19oaWRlJylcbiAgLCBmb3JPZiAgICAgICA9IHJlcXVpcmUoJy4vX2Zvci1vZicpXG4gICwgUkVUVVJOICAgICAgPSBmb3JPZi5SRVRVUk47XG5cbnZhciBnZXRNZXRob2QgPSBmdW5jdGlvbihmbil7XG4gIHJldHVybiBmbiA9PSBudWxsID8gdW5kZWZpbmVkIDogYUZ1bmN0aW9uKGZuKTtcbn07XG5cbnZhciBjbGVhbnVwU3Vic2NyaXB0aW9uID0gZnVuY3Rpb24oc3Vic2NyaXB0aW9uKXtcbiAgdmFyIGNsZWFudXAgPSBzdWJzY3JpcHRpb24uX2M7XG4gIGlmKGNsZWFudXApe1xuICAgIHN1YnNjcmlwdGlvbi5fYyA9IHVuZGVmaW5lZDtcbiAgICBjbGVhbnVwKCk7XG4gIH1cbn07XG5cbnZhciBzdWJzY3JpcHRpb25DbG9zZWQgPSBmdW5jdGlvbihzdWJzY3JpcHRpb24pe1xuICByZXR1cm4gc3Vic2NyaXB0aW9uLl9vID09PSB1bmRlZmluZWQ7XG59O1xuXG52YXIgY2xvc2VTdWJzY3JpcHRpb24gPSBmdW5jdGlvbihzdWJzY3JpcHRpb24pe1xuICBpZighc3Vic2NyaXB0aW9uQ2xvc2VkKHN1YnNjcmlwdGlvbikpe1xuICAgIHN1YnNjcmlwdGlvbi5fbyA9IHVuZGVmaW5lZDtcbiAgICBjbGVhbnVwU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7XG4gIH1cbn07XG5cbnZhciBTdWJzY3JpcHRpb24gPSBmdW5jdGlvbihvYnNlcnZlciwgc3Vic2NyaWJlcil7XG4gIGFuT2JqZWN0KG9ic2VydmVyKTtcbiAgdGhpcy5fYyA9IHVuZGVmaW5lZDtcbiAgdGhpcy5fbyA9IG9ic2VydmVyO1xuICBvYnNlcnZlciA9IG5ldyBTdWJzY3JpcHRpb25PYnNlcnZlcih0aGlzKTtcbiAgdHJ5IHtcbiAgICB2YXIgY2xlYW51cCAgICAgID0gc3Vic2NyaWJlcihvYnNlcnZlcilcbiAgICAgICwgc3Vic2NyaXB0aW9uID0gY2xlYW51cDtcbiAgICBpZihjbGVhbnVwICE9IG51bGwpe1xuICAgICAgaWYodHlwZW9mIGNsZWFudXAudW5zdWJzY3JpYmUgPT09ICdmdW5jdGlvbicpY2xlYW51cCA9IGZ1bmN0aW9uKCl7IHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpOyB9O1xuICAgICAgZWxzZSBhRnVuY3Rpb24oY2xlYW51cCk7XG4gICAgICB0aGlzLl9jID0gY2xlYW51cDtcbiAgICB9XG4gIH0gY2F0Y2goZSl7XG4gICAgb2JzZXJ2ZXIuZXJyb3IoZSk7XG4gICAgcmV0dXJuO1xuICB9IGlmKHN1YnNjcmlwdGlvbkNsb3NlZCh0aGlzKSljbGVhbnVwU3Vic2NyaXB0aW9uKHRoaXMpO1xufTtcblxuU3Vic2NyaXB0aW9uLnByb3RvdHlwZSA9IHJlZGVmaW5lQWxsKHt9LCB7XG4gIHVuc3Vic2NyaWJlOiBmdW5jdGlvbiB1bnN1YnNjcmliZSgpeyBjbG9zZVN1YnNjcmlwdGlvbih0aGlzKTsgfVxufSk7XG5cbnZhciBTdWJzY3JpcHRpb25PYnNlcnZlciA9IGZ1bmN0aW9uKHN1YnNjcmlwdGlvbil7XG4gIHRoaXMuX3MgPSBzdWJzY3JpcHRpb247XG59O1xuXG5TdWJzY3JpcHRpb25PYnNlcnZlci5wcm90b3R5cGUgPSByZWRlZmluZUFsbCh7fSwge1xuICBuZXh0OiBmdW5jdGlvbiBuZXh0KHZhbHVlKXtcbiAgICB2YXIgc3Vic2NyaXB0aW9uID0gdGhpcy5fcztcbiAgICBpZighc3Vic2NyaXB0aW9uQ2xvc2VkKHN1YnNjcmlwdGlvbikpe1xuICAgICAgdmFyIG9ic2VydmVyID0gc3Vic2NyaXB0aW9uLl9vO1xuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIG0gPSBnZXRNZXRob2Qob2JzZXJ2ZXIubmV4dCk7XG4gICAgICAgIGlmKG0pcmV0dXJuIG0uY2FsbChvYnNlcnZlciwgdmFsdWUpO1xuICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjbG9zZVN1YnNjcmlwdGlvbihzdWJzY3JpcHRpb24pO1xuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIGVycm9yOiBmdW5jdGlvbiBlcnJvcih2YWx1ZSl7XG4gICAgdmFyIHN1YnNjcmlwdGlvbiA9IHRoaXMuX3M7XG4gICAgaWYoc3Vic2NyaXB0aW9uQ2xvc2VkKHN1YnNjcmlwdGlvbikpdGhyb3cgdmFsdWU7XG4gICAgdmFyIG9ic2VydmVyID0gc3Vic2NyaXB0aW9uLl9vO1xuICAgIHN1YnNjcmlwdGlvbi5fbyA9IHVuZGVmaW5lZDtcbiAgICB0cnkge1xuICAgICAgdmFyIG0gPSBnZXRNZXRob2Qob2JzZXJ2ZXIuZXJyb3IpO1xuICAgICAgaWYoIW0pdGhyb3cgdmFsdWU7XG4gICAgICB2YWx1ZSA9IG0uY2FsbChvYnNlcnZlciwgdmFsdWUpO1xuICAgIH0gY2F0Y2goZSl7XG4gICAgICB0cnkge1xuICAgICAgICBjbGVhbnVwU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICB0aHJvdyBlO1xuICAgICAgfVxuICAgIH0gY2xlYW51cFN1YnNjcmlwdGlvbihzdWJzY3JpcHRpb24pO1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfSxcbiAgY29tcGxldGU6IGZ1bmN0aW9uIGNvbXBsZXRlKHZhbHVlKXtcbiAgICB2YXIgc3Vic2NyaXB0aW9uID0gdGhpcy5fcztcbiAgICBpZighc3Vic2NyaXB0aW9uQ2xvc2VkKHN1YnNjcmlwdGlvbikpe1xuICAgICAgdmFyIG9ic2VydmVyID0gc3Vic2NyaXB0aW9uLl9vO1xuICAgICAgc3Vic2NyaXB0aW9uLl9vID0gdW5kZWZpbmVkO1xuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIG0gPSBnZXRNZXRob2Qob2JzZXJ2ZXIuY29tcGxldGUpO1xuICAgICAgICB2YWx1ZSA9IG0gPyBtLmNhbGwob2JzZXJ2ZXIsIHZhbHVlKSA6IHVuZGVmaW5lZDtcbiAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY2xlYW51cFN1YnNjcmlwdGlvbihzdWJzY3JpcHRpb24pO1xuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICAgIH0gY2xlYW51cFN1YnNjcmlwdGlvbihzdWJzY3JpcHRpb24pO1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgfVxufSk7XG5cbnZhciAkT2JzZXJ2YWJsZSA9IGZ1bmN0aW9uIE9ic2VydmFibGUoc3Vic2NyaWJlcil7XG4gIGFuSW5zdGFuY2UodGhpcywgJE9ic2VydmFibGUsICdPYnNlcnZhYmxlJywgJ19mJykuX2YgPSBhRnVuY3Rpb24oc3Vic2NyaWJlcik7XG59O1xuXG5yZWRlZmluZUFsbCgkT2JzZXJ2YWJsZS5wcm90b3R5cGUsIHtcbiAgc3Vic2NyaWJlOiBmdW5jdGlvbiBzdWJzY3JpYmUob2JzZXJ2ZXIpe1xuICAgIHJldHVybiBuZXcgU3Vic2NyaXB0aW9uKG9ic2VydmVyLCB0aGlzLl9mKTtcbiAgfSxcbiAgZm9yRWFjaDogZnVuY3Rpb24gZm9yRWFjaChmbil7XG4gICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgIHJldHVybiBuZXcgKGNvcmUuUHJvbWlzZSB8fCBnbG9iYWwuUHJvbWlzZSkoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KXtcbiAgICAgIGFGdW5jdGlvbihmbik7XG4gICAgICB2YXIgc3Vic2NyaXB0aW9uID0gdGhhdC5zdWJzY3JpYmUoe1xuICAgICAgICBuZXh0IDogZnVuY3Rpb24odmFsdWUpe1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gZm4odmFsdWUpO1xuICAgICAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgICBzdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yOiByZWplY3QsXG4gICAgICAgIGNvbXBsZXRlOiByZXNvbHZlXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufSk7XG5cbnJlZGVmaW5lQWxsKCRPYnNlcnZhYmxlLCB7XG4gIGZyb206IGZ1bmN0aW9uIGZyb20oeCl7XG4gICAgdmFyIEMgPSB0eXBlb2YgdGhpcyA9PT0gJ2Z1bmN0aW9uJyA/IHRoaXMgOiAkT2JzZXJ2YWJsZTtcbiAgICB2YXIgbWV0aG9kID0gZ2V0TWV0aG9kKGFuT2JqZWN0KHgpW09CU0VSVkFCTEVdKTtcbiAgICBpZihtZXRob2Qpe1xuICAgICAgdmFyIG9ic2VydmFibGUgPSBhbk9iamVjdChtZXRob2QuY2FsbCh4KSk7XG4gICAgICByZXR1cm4gb2JzZXJ2YWJsZS5jb25zdHJ1Y3RvciA9PT0gQyA/IG9ic2VydmFibGUgOiBuZXcgQyhmdW5jdGlvbihvYnNlcnZlcil7XG4gICAgICAgIHJldHVybiBvYnNlcnZhYmxlLnN1YnNjcmliZShvYnNlcnZlcik7XG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBDKGZ1bmN0aW9uKG9ic2VydmVyKXtcbiAgICAgIHZhciBkb25lID0gZmFsc2U7XG4gICAgICBtaWNyb3Rhc2soZnVuY3Rpb24oKXtcbiAgICAgICAgaWYoIWRvbmUpe1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZihmb3JPZih4LCBmYWxzZSwgZnVuY3Rpb24oaXQpe1xuICAgICAgICAgICAgICBvYnNlcnZlci5uZXh0KGl0KTtcbiAgICAgICAgICAgICAgaWYoZG9uZSlyZXR1cm4gUkVUVVJOO1xuICAgICAgICAgICAgfSkgPT09IFJFVFVSTilyZXR1cm47XG4gICAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAgIGlmKGRvbmUpdGhyb3cgZTtcbiAgICAgICAgICAgIG9ic2VydmVyLmVycm9yKGUpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH0gb2JzZXJ2ZXIuY29tcGxldGUoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oKXsgZG9uZSA9IHRydWU7IH07XG4gICAgfSk7XG4gIH0sXG4gIG9mOiBmdW5jdGlvbiBvZigpe1xuICAgIGZvcih2YXIgaSA9IDAsIGwgPSBhcmd1bWVudHMubGVuZ3RoLCBpdGVtcyA9IEFycmF5KGwpOyBpIDwgbDspaXRlbXNbaV0gPSBhcmd1bWVudHNbaSsrXTtcbiAgICByZXR1cm4gbmV3ICh0eXBlb2YgdGhpcyA9PT0gJ2Z1bmN0aW9uJyA/IHRoaXMgOiAkT2JzZXJ2YWJsZSkoZnVuY3Rpb24ob2JzZXJ2ZXIpe1xuICAgICAgdmFyIGRvbmUgPSBmYWxzZTtcbiAgICAgIG1pY3JvdGFzayhmdW5jdGlvbigpe1xuICAgICAgICBpZighZG9uZSl7XG4gICAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgKytpKXtcbiAgICAgICAgICAgIG9ic2VydmVyLm5leHQoaXRlbXNbaV0pO1xuICAgICAgICAgICAgaWYoZG9uZSlyZXR1cm47XG4gICAgICAgICAgfSBvYnNlcnZlci5jb21wbGV0ZSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBmdW5jdGlvbigpeyBkb25lID0gdHJ1ZTsgfTtcbiAgICB9KTtcbiAgfVxufSk7XG5cbmhpZGUoJE9ic2VydmFibGUucHJvdG90eXBlLCBPQlNFUlZBQkxFLCBmdW5jdGlvbigpeyByZXR1cm4gdGhpczsgfSk7XG5cbiRleHBvcnQoJGV4cG9ydC5HLCB7T2JzZXJ2YWJsZTogJE9ic2VydmFibGV9KTtcblxucmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKSgnT2JzZXJ2YWJsZScpOyIsInZhciBtZXRhZGF0YSAgICAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fbWV0YWRhdGEnKVxuICAsIGFuT2JqZWN0ICAgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKVxuICAsIHRvTWV0YUtleSAgICAgICAgICAgICAgICAgPSBtZXRhZGF0YS5rZXlcbiAgLCBvcmRpbmFyeURlZmluZU93bk1ldGFkYXRhID0gbWV0YWRhdGEuc2V0O1xuXG5tZXRhZGF0YS5leHAoe2RlZmluZU1ldGFkYXRhOiBmdW5jdGlvbiBkZWZpbmVNZXRhZGF0YShtZXRhZGF0YUtleSwgbWV0YWRhdGFWYWx1ZSwgdGFyZ2V0LCB0YXJnZXRLZXkpe1xuICBvcmRpbmFyeURlZmluZU93bk1ldGFkYXRhKG1ldGFkYXRhS2V5LCBtZXRhZGF0YVZhbHVlLCBhbk9iamVjdCh0YXJnZXQpLCB0b01ldGFLZXkodGFyZ2V0S2V5KSk7XG59fSk7IiwidmFyIG1ldGFkYXRhICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19tZXRhZGF0YScpXG4gICwgYW5PYmplY3QgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpXG4gICwgdG9NZXRhS2V5ICAgICAgICAgICAgICA9IG1ldGFkYXRhLmtleVxuICAsIGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAgPSBtZXRhZGF0YS5tYXBcbiAgLCBzdG9yZSAgICAgICAgICAgICAgICAgID0gbWV0YWRhdGEuc3RvcmU7XG5cbm1ldGFkYXRhLmV4cCh7ZGVsZXRlTWV0YWRhdGE6IGZ1bmN0aW9uIGRlbGV0ZU1ldGFkYXRhKG1ldGFkYXRhS2V5LCB0YXJnZXQgLyosIHRhcmdldEtleSAqLyl7XG4gIHZhciB0YXJnZXRLZXkgICA9IGFyZ3VtZW50cy5sZW5ndGggPCAzID8gdW5kZWZpbmVkIDogdG9NZXRhS2V5KGFyZ3VtZW50c1syXSlcbiAgICAsIG1ldGFkYXRhTWFwID0gZ2V0T3JDcmVhdGVNZXRhZGF0YU1hcChhbk9iamVjdCh0YXJnZXQpLCB0YXJnZXRLZXksIGZhbHNlKTtcbiAgaWYobWV0YWRhdGFNYXAgPT09IHVuZGVmaW5lZCB8fCAhbWV0YWRhdGFNYXBbJ2RlbGV0ZSddKG1ldGFkYXRhS2V5KSlyZXR1cm4gZmFsc2U7XG4gIGlmKG1ldGFkYXRhTWFwLnNpemUpcmV0dXJuIHRydWU7XG4gIHZhciB0YXJnZXRNZXRhZGF0YSA9IHN0b3JlLmdldCh0YXJnZXQpO1xuICB0YXJnZXRNZXRhZGF0YVsnZGVsZXRlJ10odGFyZ2V0S2V5KTtcbiAgcmV0dXJuICEhdGFyZ2V0TWV0YWRhdGEuc2l6ZSB8fCBzdG9yZVsnZGVsZXRlJ10odGFyZ2V0KTtcbn19KTsiLCJ2YXIgU2V0ICAgICAgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL2VzNi5zZXQnKVxuICAsIGZyb20gICAgICAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fYXJyYXktZnJvbS1pdGVyYWJsZScpXG4gICwgbWV0YWRhdGEgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19tZXRhZGF0YScpXG4gICwgYW5PYmplY3QgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKVxuICAsIGdldFByb3RvdHlwZU9mICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpXG4gICwgb3JkaW5hcnlPd25NZXRhZGF0YUtleXMgPSBtZXRhZGF0YS5rZXlzXG4gICwgdG9NZXRhS2V5ICAgICAgICAgICAgICAgPSBtZXRhZGF0YS5rZXk7XG5cbnZhciBvcmRpbmFyeU1ldGFkYXRhS2V5cyA9IGZ1bmN0aW9uKE8sIFApe1xuICB2YXIgb0tleXMgID0gb3JkaW5hcnlPd25NZXRhZGF0YUtleXMoTywgUClcbiAgICAsIHBhcmVudCA9IGdldFByb3RvdHlwZU9mKE8pO1xuICBpZihwYXJlbnQgPT09IG51bGwpcmV0dXJuIG9LZXlzO1xuICB2YXIgcEtleXMgID0gb3JkaW5hcnlNZXRhZGF0YUtleXMocGFyZW50LCBQKTtcbiAgcmV0dXJuIHBLZXlzLmxlbmd0aCA/IG9LZXlzLmxlbmd0aCA/IGZyb20obmV3IFNldChvS2V5cy5jb25jYXQocEtleXMpKSkgOiBwS2V5cyA6IG9LZXlzO1xufTtcblxubWV0YWRhdGEuZXhwKHtnZXRNZXRhZGF0YUtleXM6IGZ1bmN0aW9uIGdldE1ldGFkYXRhS2V5cyh0YXJnZXQgLyosIHRhcmdldEtleSAqLyl7XG4gIHJldHVybiBvcmRpbmFyeU1ldGFkYXRhS2V5cyhhbk9iamVjdCh0YXJnZXQpLCBhcmd1bWVudHMubGVuZ3RoIDwgMiA/IHVuZGVmaW5lZCA6IHRvTWV0YUtleShhcmd1bWVudHNbMV0pKTtcbn19KTsiLCJ2YXIgbWV0YWRhdGEgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX21ldGFkYXRhJylcbiAgLCBhbk9iamVjdCAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JylcbiAgLCBnZXRQcm90b3R5cGVPZiAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpXG4gICwgb3JkaW5hcnlIYXNPd25NZXRhZGF0YSA9IG1ldGFkYXRhLmhhc1xuICAsIG9yZGluYXJ5R2V0T3duTWV0YWRhdGEgPSBtZXRhZGF0YS5nZXRcbiAgLCB0b01ldGFLZXkgICAgICAgICAgICAgID0gbWV0YWRhdGEua2V5O1xuXG52YXIgb3JkaW5hcnlHZXRNZXRhZGF0YSA9IGZ1bmN0aW9uKE1ldGFkYXRhS2V5LCBPLCBQKXtcbiAgdmFyIGhhc093biA9IG9yZGluYXJ5SGFzT3duTWV0YWRhdGEoTWV0YWRhdGFLZXksIE8sIFApO1xuICBpZihoYXNPd24pcmV0dXJuIG9yZGluYXJ5R2V0T3duTWV0YWRhdGEoTWV0YWRhdGFLZXksIE8sIFApO1xuICB2YXIgcGFyZW50ID0gZ2V0UHJvdG90eXBlT2YoTyk7XG4gIHJldHVybiBwYXJlbnQgIT09IG51bGwgPyBvcmRpbmFyeUdldE1ldGFkYXRhKE1ldGFkYXRhS2V5LCBwYXJlbnQsIFApIDogdW5kZWZpbmVkO1xufTtcblxubWV0YWRhdGEuZXhwKHtnZXRNZXRhZGF0YTogZnVuY3Rpb24gZ2V0TWV0YWRhdGEobWV0YWRhdGFLZXksIHRhcmdldCAvKiwgdGFyZ2V0S2V5ICovKXtcbiAgcmV0dXJuIG9yZGluYXJ5R2V0TWV0YWRhdGEobWV0YWRhdGFLZXksIGFuT2JqZWN0KHRhcmdldCksIGFyZ3VtZW50cy5sZW5ndGggPCAzID8gdW5kZWZpbmVkIDogdG9NZXRhS2V5KGFyZ3VtZW50c1syXSkpO1xufX0pOyIsInZhciBtZXRhZGF0YSAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX21ldGFkYXRhJylcbiAgLCBhbk9iamVjdCAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpXG4gICwgb3JkaW5hcnlPd25NZXRhZGF0YUtleXMgPSBtZXRhZGF0YS5rZXlzXG4gICwgdG9NZXRhS2V5ICAgICAgICAgICAgICAgPSBtZXRhZGF0YS5rZXk7XG5cbm1ldGFkYXRhLmV4cCh7Z2V0T3duTWV0YWRhdGFLZXlzOiBmdW5jdGlvbiBnZXRPd25NZXRhZGF0YUtleXModGFyZ2V0IC8qLCB0YXJnZXRLZXkgKi8pe1xuICByZXR1cm4gb3JkaW5hcnlPd25NZXRhZGF0YUtleXMoYW5PYmplY3QodGFyZ2V0KSwgYXJndW1lbnRzLmxlbmd0aCA8IDIgPyB1bmRlZmluZWQgOiB0b01ldGFLZXkoYXJndW1lbnRzWzFdKSk7XG59fSk7IiwidmFyIG1ldGFkYXRhICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19tZXRhZGF0YScpXG4gICwgYW5PYmplY3QgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpXG4gICwgb3JkaW5hcnlHZXRPd25NZXRhZGF0YSA9IG1ldGFkYXRhLmdldFxuICAsIHRvTWV0YUtleSAgICAgICAgICAgICAgPSBtZXRhZGF0YS5rZXk7XG5cbm1ldGFkYXRhLmV4cCh7Z2V0T3duTWV0YWRhdGE6IGZ1bmN0aW9uIGdldE93bk1ldGFkYXRhKG1ldGFkYXRhS2V5LCB0YXJnZXQgLyosIHRhcmdldEtleSAqLyl7XG4gIHJldHVybiBvcmRpbmFyeUdldE93bk1ldGFkYXRhKG1ldGFkYXRhS2V5LCBhbk9iamVjdCh0YXJnZXQpXG4gICAgLCBhcmd1bWVudHMubGVuZ3RoIDwgMyA/IHVuZGVmaW5lZCA6IHRvTWV0YUtleShhcmd1bWVudHNbMl0pKTtcbn19KTsiLCJ2YXIgbWV0YWRhdGEgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX21ldGFkYXRhJylcbiAgLCBhbk9iamVjdCAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JylcbiAgLCBnZXRQcm90b3R5cGVPZiAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpXG4gICwgb3JkaW5hcnlIYXNPd25NZXRhZGF0YSA9IG1ldGFkYXRhLmhhc1xuICAsIHRvTWV0YUtleSAgICAgICAgICAgICAgPSBtZXRhZGF0YS5rZXk7XG5cbnZhciBvcmRpbmFyeUhhc01ldGFkYXRhID0gZnVuY3Rpb24oTWV0YWRhdGFLZXksIE8sIFApe1xuICB2YXIgaGFzT3duID0gb3JkaW5hcnlIYXNPd25NZXRhZGF0YShNZXRhZGF0YUtleSwgTywgUCk7XG4gIGlmKGhhc093bilyZXR1cm4gdHJ1ZTtcbiAgdmFyIHBhcmVudCA9IGdldFByb3RvdHlwZU9mKE8pO1xuICByZXR1cm4gcGFyZW50ICE9PSBudWxsID8gb3JkaW5hcnlIYXNNZXRhZGF0YShNZXRhZGF0YUtleSwgcGFyZW50LCBQKSA6IGZhbHNlO1xufTtcblxubWV0YWRhdGEuZXhwKHtoYXNNZXRhZGF0YTogZnVuY3Rpb24gaGFzTWV0YWRhdGEobWV0YWRhdGFLZXksIHRhcmdldCAvKiwgdGFyZ2V0S2V5ICovKXtcbiAgcmV0dXJuIG9yZGluYXJ5SGFzTWV0YWRhdGEobWV0YWRhdGFLZXksIGFuT2JqZWN0KHRhcmdldCksIGFyZ3VtZW50cy5sZW5ndGggPCAzID8gdW5kZWZpbmVkIDogdG9NZXRhS2V5KGFyZ3VtZW50c1syXSkpO1xufX0pOyIsInZhciBtZXRhZGF0YSAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fbWV0YWRhdGEnKVxuICAsIGFuT2JqZWN0ICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKVxuICAsIG9yZGluYXJ5SGFzT3duTWV0YWRhdGEgPSBtZXRhZGF0YS5oYXNcbiAgLCB0b01ldGFLZXkgICAgICAgICAgICAgID0gbWV0YWRhdGEua2V5O1xuXG5tZXRhZGF0YS5leHAoe2hhc093bk1ldGFkYXRhOiBmdW5jdGlvbiBoYXNPd25NZXRhZGF0YShtZXRhZGF0YUtleSwgdGFyZ2V0IC8qLCB0YXJnZXRLZXkgKi8pe1xuICByZXR1cm4gb3JkaW5hcnlIYXNPd25NZXRhZGF0YShtZXRhZGF0YUtleSwgYW5PYmplY3QodGFyZ2V0KVxuICAgICwgYXJndW1lbnRzLmxlbmd0aCA8IDMgPyB1bmRlZmluZWQgOiB0b01ldGFLZXkoYXJndW1lbnRzWzJdKSk7XG59fSk7IiwidmFyIG1ldGFkYXRhICAgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19tZXRhZGF0YScpXG4gICwgYW5PYmplY3QgICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpXG4gICwgYUZ1bmN0aW9uICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKVxuICAsIHRvTWV0YUtleSAgICAgICAgICAgICAgICAgPSBtZXRhZGF0YS5rZXlcbiAgLCBvcmRpbmFyeURlZmluZU93bk1ldGFkYXRhID0gbWV0YWRhdGEuc2V0O1xuXG5tZXRhZGF0YS5leHAoe21ldGFkYXRhOiBmdW5jdGlvbiBtZXRhZGF0YShtZXRhZGF0YUtleSwgbWV0YWRhdGFWYWx1ZSl7XG4gIHJldHVybiBmdW5jdGlvbiBkZWNvcmF0b3IodGFyZ2V0LCB0YXJnZXRLZXkpe1xuICAgIG9yZGluYXJ5RGVmaW5lT3duTWV0YWRhdGEoXG4gICAgICBtZXRhZGF0YUtleSwgbWV0YWRhdGFWYWx1ZSxcbiAgICAgICh0YXJnZXRLZXkgIT09IHVuZGVmaW5lZCA/IGFuT2JqZWN0IDogYUZ1bmN0aW9uKSh0YXJnZXQpLFxuICAgICAgdG9NZXRhS2V5KHRhcmdldEtleSlcbiAgICApO1xuICB9O1xufX0pOyIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9EYXZpZEJydWFudC9NYXAtU2V0LnByb3RvdHlwZS50b0pTT05cbnZhciAkZXhwb3J0ICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuUiwgJ1NldCcsIHt0b0pTT046IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24tdG8tanNvbicpKCdTZXQnKX0pOyIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRoaWFzYnluZW5zL1N0cmluZy5wcm90b3R5cGUuYXRcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCAkYXQgICAgID0gcmVxdWlyZSgnLi9fc3RyaW5nLWF0JykodHJ1ZSk7XG5cbiRleHBvcnQoJGV4cG9ydC5QLCAnU3RyaW5nJywge1xuICBhdDogZnVuY3Rpb24gYXQocG9zKXtcbiAgICByZXR1cm4gJGF0KHRoaXMsIHBvcyk7XG4gIH1cbn0pOyIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vU3RyaW5nLnByb3RvdHlwZS5tYXRjaEFsbC9cbnZhciAkZXhwb3J0ICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgZGVmaW5lZCAgICAgPSByZXF1aXJlKCcuL19kZWZpbmVkJylcbiAgLCB0b0xlbmd0aCAgICA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpXG4gICwgaXNSZWdFeHAgICAgPSByZXF1aXJlKCcuL19pcy1yZWdleHAnKVxuICAsIGdldEZsYWdzICAgID0gcmVxdWlyZSgnLi9fZmxhZ3MnKVxuICAsIFJlZ0V4cFByb3RvID0gUmVnRXhwLnByb3RvdHlwZTtcblxudmFyICRSZWdFeHBTdHJpbmdJdGVyYXRvciA9IGZ1bmN0aW9uKHJlZ2V4cCwgc3RyaW5nKXtcbiAgdGhpcy5fciA9IHJlZ2V4cDtcbiAgdGhpcy5fcyA9IHN0cmluZztcbn07XG5cbnJlcXVpcmUoJy4vX2l0ZXItY3JlYXRlJykoJFJlZ0V4cFN0cmluZ0l0ZXJhdG9yLCAnUmVnRXhwIFN0cmluZycsIGZ1bmN0aW9uIG5leHQoKXtcbiAgdmFyIG1hdGNoID0gdGhpcy5fci5leGVjKHRoaXMuX3MpO1xuICByZXR1cm4ge3ZhbHVlOiBtYXRjaCwgZG9uZTogbWF0Y2ggPT09IG51bGx9O1xufSk7XG5cbiRleHBvcnQoJGV4cG9ydC5QLCAnU3RyaW5nJywge1xuICBtYXRjaEFsbDogZnVuY3Rpb24gbWF0Y2hBbGwocmVnZXhwKXtcbiAgICBkZWZpbmVkKHRoaXMpO1xuICAgIGlmKCFpc1JlZ0V4cChyZWdleHApKXRocm93IFR5cGVFcnJvcihyZWdleHAgKyAnIGlzIG5vdCBhIHJlZ2V4cCEnKTtcbiAgICB2YXIgUyAgICAgPSBTdHJpbmcodGhpcylcbiAgICAgICwgZmxhZ3MgPSAnZmxhZ3MnIGluIFJlZ0V4cFByb3RvID8gU3RyaW5nKHJlZ2V4cC5mbGFncykgOiBnZXRGbGFncy5jYWxsKHJlZ2V4cClcbiAgICAgICwgcnggICAgPSBuZXcgUmVnRXhwKHJlZ2V4cC5zb3VyY2UsIH5mbGFncy5pbmRleE9mKCdnJykgPyBmbGFncyA6ICdnJyArIGZsYWdzKTtcbiAgICByeC5sYXN0SW5kZXggPSB0b0xlbmd0aChyZWdleHAubGFzdEluZGV4KTtcbiAgICByZXR1cm4gbmV3ICRSZWdFeHBTdHJpbmdJdGVyYXRvcihyeCwgUyk7XG4gIH1cbn0pOyIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLXN0cmluZy1wYWQtc3RhcnQtZW5kXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgJHBhZCAgICA9IHJlcXVpcmUoJy4vX3N0cmluZy1wYWQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdTdHJpbmcnLCB7XG4gIHBhZEVuZDogZnVuY3Rpb24gcGFkRW5kKG1heExlbmd0aCAvKiwgZmlsbFN0cmluZyA9ICcgJyAqLyl7XG4gICAgcmV0dXJuICRwYWQodGhpcywgbWF4TGVuZ3RoLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCwgZmFsc2UpO1xuICB9XG59KTsiLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1zdHJpbmctcGFkLXN0YXJ0LWVuZFxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsICRwYWQgICAgPSByZXF1aXJlKCcuL19zdHJpbmctcGFkJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QLCAnU3RyaW5nJywge1xuICBwYWRTdGFydDogZnVuY3Rpb24gcGFkU3RhcnQobWF4TGVuZ3RoIC8qLCBmaWxsU3RyaW5nID0gJyAnICovKXtcbiAgICByZXR1cm4gJHBhZCh0aGlzLCBtYXhMZW5ndGgsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkLCB0cnVlKTtcbiAgfVxufSk7IiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3NlYm1hcmtiYWdlL2VjbWFzY3JpcHQtc3RyaW5nLWxlZnQtcmlnaHQtdHJpbVxucmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKSgndHJpbUxlZnQnLCBmdW5jdGlvbigkdHJpbSl7XG4gIHJldHVybiBmdW5jdGlvbiB0cmltTGVmdCgpe1xuICAgIHJldHVybiAkdHJpbSh0aGlzLCAxKTtcbiAgfTtcbn0sICd0cmltU3RhcnQnKTsiLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vc2VibWFya2JhZ2UvZWNtYXNjcmlwdC1zdHJpbmctbGVmdC1yaWdodC10cmltXG5yZXF1aXJlKCcuL19zdHJpbmctdHJpbScpKCd0cmltUmlnaHQnLCBmdW5jdGlvbigkdHJpbSl7XG4gIHJldHVybiBmdW5jdGlvbiB0cmltUmlnaHQoKXtcbiAgICByZXR1cm4gJHRyaW0odGhpcywgMik7XG4gIH07XG59LCAndHJpbUVuZCcpOyIsInJlcXVpcmUoJy4vX3drcy1kZWZpbmUnKSgnYXN5bmNJdGVyYXRvcicpOyIsInJlcXVpcmUoJy4vX3drcy1kZWZpbmUnKSgnb2JzZXJ2YWJsZScpOyIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9samhhcmIvcHJvcG9zYWwtZ2xvYmFsXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1N5c3RlbScsIHtnbG9iYWw6IHJlcXVpcmUoJy4vX2dsb2JhbCcpfSk7IiwidmFyICRpdGVyYXRvcnMgICAgPSByZXF1aXJlKCcuL2VzNi5hcnJheS5pdGVyYXRvcicpXG4gICwgcmVkZWZpbmUgICAgICA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJylcbiAgLCBnbG9iYWwgICAgICAgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJylcbiAgLCBoaWRlICAgICAgICAgID0gcmVxdWlyZSgnLi9faGlkZScpXG4gICwgSXRlcmF0b3JzICAgICA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpXG4gICwgd2tzICAgICAgICAgICA9IHJlcXVpcmUoJy4vX3drcycpXG4gICwgSVRFUkFUT1IgICAgICA9IHdrcygnaXRlcmF0b3InKVxuICAsIFRPX1NUUklOR19UQUcgPSB3a3MoJ3RvU3RyaW5nVGFnJylcbiAgLCBBcnJheVZhbHVlcyAgID0gSXRlcmF0b3JzLkFycmF5O1xuXG5mb3IodmFyIGNvbGxlY3Rpb25zID0gWydOb2RlTGlzdCcsICdET01Ub2tlbkxpc3QnLCAnTWVkaWFMaXN0JywgJ1N0eWxlU2hlZXRMaXN0JywgJ0NTU1J1bGVMaXN0J10sIGkgPSAwOyBpIDwgNTsgaSsrKXtcbiAgdmFyIE5BTUUgICAgICAgPSBjb2xsZWN0aW9uc1tpXVxuICAgICwgQ29sbGVjdGlvbiA9IGdsb2JhbFtOQU1FXVxuICAgICwgcHJvdG8gICAgICA9IENvbGxlY3Rpb24gJiYgQ29sbGVjdGlvbi5wcm90b3R5cGVcbiAgICAsIGtleTtcbiAgaWYocHJvdG8pe1xuICAgIGlmKCFwcm90b1tJVEVSQVRPUl0paGlkZShwcm90bywgSVRFUkFUT1IsIEFycmF5VmFsdWVzKTtcbiAgICBpZighcHJvdG9bVE9fU1RSSU5HX1RBR10paGlkZShwcm90bywgVE9fU1RSSU5HX1RBRywgTkFNRSk7XG4gICAgSXRlcmF0b3JzW05BTUVdID0gQXJyYXlWYWx1ZXM7XG4gICAgZm9yKGtleSBpbiAkaXRlcmF0b3JzKWlmKCFwcm90b1trZXldKXJlZGVmaW5lKHByb3RvLCBrZXksICRpdGVyYXRvcnNba2V5XSwgdHJ1ZSk7XG4gIH1cbn0iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgJHRhc2sgICA9IHJlcXVpcmUoJy4vX3Rhc2snKTtcbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5CLCB7XG4gIHNldEltbWVkaWF0ZTogICAkdGFzay5zZXQsXG4gIGNsZWFySW1tZWRpYXRlOiAkdGFzay5jbGVhclxufSk7IiwiLy8gaWU5LSBzZXRUaW1lb3V0ICYgc2V0SW50ZXJ2YWwgYWRkaXRpb25hbCBwYXJhbWV0ZXJzIGZpeFxudmFyIGdsb2JhbCAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKVxuICAsICRleHBvcnQgICAgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIGludm9rZSAgICAgPSByZXF1aXJlKCcuL19pbnZva2UnKVxuICAsIHBhcnRpYWwgICAgPSByZXF1aXJlKCcuL19wYXJ0aWFsJylcbiAgLCBuYXZpZ2F0b3IgID0gZ2xvYmFsLm5hdmlnYXRvclxuICAsIE1TSUUgICAgICAgPSAhIW5hdmlnYXRvciAmJiAvTVNJRSAuXFwuLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpOyAvLyA8LSBkaXJ0eSBpZTktIGNoZWNrXG52YXIgd3JhcCA9IGZ1bmN0aW9uKHNldCl7XG4gIHJldHVybiBNU0lFID8gZnVuY3Rpb24oZm4sIHRpbWUgLyosIC4uLmFyZ3MgKi8pe1xuICAgIHJldHVybiBzZXQoaW52b2tlKFxuICAgICAgcGFydGlhbCxcbiAgICAgIFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAyKSxcbiAgICAgIHR5cGVvZiBmbiA9PSAnZnVuY3Rpb24nID8gZm4gOiBGdW5jdGlvbihmbilcbiAgICApLCB0aW1lKTtcbiAgfSA6IHNldDtcbn07XG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuQiArICRleHBvcnQuRiAqIE1TSUUsIHtcbiAgc2V0VGltZW91dDogIHdyYXAoZ2xvYmFsLnNldFRpbWVvdXQpLFxuICBzZXRJbnRlcnZhbDogd3JhcChnbG9iYWwuc2V0SW50ZXJ2YWwpXG59KTsiLCJyZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN5bWJvbCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuY3JlYXRlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHknKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0aWVzJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmtleXMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktbmFtZXMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmZyZWV6ZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3Quc2VhbCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QucHJldmVudC1leHRlbnNpb25zJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5pcy1mcm96ZW4nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmlzLXNlYWxlZCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuaXMtZXh0ZW5zaWJsZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuYXNzaWduJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5pcycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmZ1bmN0aW9uLmJpbmQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuZnVuY3Rpb24ubmFtZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5mdW5jdGlvbi5oYXMtaW5zdGFuY2UnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucGFyc2UtaW50Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnBhcnNlLWZsb2F0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5jb25zdHJ1Y3RvcicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5udW1iZXIudG8tZml4ZWQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubnVtYmVyLnRvLXByZWNpc2lvbicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5udW1iZXIuZXBzaWxvbicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5udW1iZXIuaXMtZmluaXRlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5pcy1pbnRlZ2VyJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5pcy1uYW4nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubnVtYmVyLmlzLXNhZmUtaW50ZWdlcicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5udW1iZXIubWF4LXNhZmUtaW50ZWdlcicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5udW1iZXIubWluLXNhZmUtaW50ZWdlcicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5udW1iZXIucGFyc2UtZmxvYXQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubnVtYmVyLnBhcnNlLWludCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmFjb3NoJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguYXNpbmgnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC5hdGFuaCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmNicnQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC5jbHozMicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmNvc2gnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC5leHBtMScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmZyb3VuZCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmh5cG90Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguaW11bCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmxvZzEwJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGgubG9nMXAnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC5sb2cyJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguc2lnbicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLnNpbmgnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC50YW5oJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGgudHJ1bmMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmZyb20tY29kZS1wb2ludCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcucmF3Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy50cmltJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvcicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcuY29kZS1wb2ludC1hdCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcuZW5kcy13aXRoJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5pbmNsdWRlcycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcucmVwZWF0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5zdGFydHMtd2l0aCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcuYW5jaG9yJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5iaWcnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmJsaW5rJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5ib2xkJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5maXhlZCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udGNvbG9yJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5mb250c2l6ZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRhbGljcycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcubGluaycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcuc21hbGwnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLnN0cmlrZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcuc3ViJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5zdXAnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuZGF0ZS5ub3cnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuZGF0ZS50by1qc29uJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmRhdGUudG8taXNvLXN0cmluZycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5kYXRlLnRvLXN0cmluZycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5kYXRlLnRvLXByaW1pdGl2ZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5pcy1hcnJheScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5mcm9tJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5Lm9mJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmpvaW4nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuc2xpY2UnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuc29ydCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5mb3ItZWFjaCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5tYXAnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuZmlsdGVyJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LnNvbWUnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuZXZlcnknKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkucmVkdWNlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LnJlZHVjZS1yaWdodCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5pbmRleC1vZicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5sYXN0LWluZGV4LW9mJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmNvcHktd2l0aGluJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmZpbGwnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuZmluZCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5maW5kLWluZGV4Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LnNwZWNpZXMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVnZXhwLmNvbnN0cnVjdG9yJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZ2V4cC50by1zdHJpbmcnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVnZXhwLmZsYWdzJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZ2V4cC5tYXRjaCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWdleHAucmVwbGFjZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWdleHAuc2VhcmNoJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZ2V4cC5zcGxpdCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5wcm9taXNlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hcCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zZXQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYud2Vhay1tYXAnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYud2Vhay1zZXQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQuYXJyYXktYnVmZmVyJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnR5cGVkLmRhdGEtdmlldycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi50eXBlZC5pbnQ4LWFycmF5Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnR5cGVkLnVpbnQ4LWFycmF5Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnR5cGVkLnVpbnQ4LWNsYW1wZWQtYXJyYXknKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQuaW50MTYtYXJyYXknKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQudWludDE2LWFycmF5Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnR5cGVkLmludDMyLWFycmF5Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnR5cGVkLnVpbnQzMi1hcnJheScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi50eXBlZC5mbG9hdDMyLWFycmF5Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnR5cGVkLmZsb2F0NjQtYXJyYXknKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVmbGVjdC5hcHBseScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmNvbnN0cnVjdCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmRlZmluZS1wcm9wZXJ0eScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmRlbGV0ZS1wcm9wZXJ0eScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmVudW1lcmF0ZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmdldCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmdldC1wcm90b3R5cGUtb2YnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVmbGVjdC5oYXMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVmbGVjdC5pcy1leHRlbnNpYmxlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3Qub3duLWtleXMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVmbGVjdC5wcmV2ZW50LWV4dGVuc2lvbnMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVmbGVjdC5zZXQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVmbGVjdC5zZXQtcHJvdG90eXBlLW9mJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LmFycmF5LmluY2x1ZGVzJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnN0cmluZy5hdCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5zdHJpbmcucGFkLXN0YXJ0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnN0cmluZy5wYWQtZW5kJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnN0cmluZy50cmltLWxlZnQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuc3RyaW5nLnRyaW0tcmlnaHQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuc3RyaW5nLm1hdGNoLWFsbCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuc3ltYm9sLm9ic2VydmFibGUnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcub2JqZWN0LnZhbHVlcycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5vYmplY3QuZW50cmllcycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5vYmplY3QuZGVmaW5lLWdldHRlcicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5vYmplY3QuZGVmaW5lLXNldHRlcicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5vYmplY3QubG9va3VwLWdldHRlcicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5vYmplY3QubG9va3VwLXNldHRlcicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5tYXAudG8tanNvbicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5zZXQudG8tanNvbicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5zeXN0ZW0uZ2xvYmFsJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LmVycm9yLmlzLWVycm9yJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm1hdGguaWFkZGgnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcubWF0aC5pc3ViaCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5tYXRoLmltdWxoJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm1hdGgudW11bGgnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcucmVmbGVjdC5kZWZpbmUtbWV0YWRhdGEnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcucmVmbGVjdC5kZWxldGUtbWV0YWRhdGEnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcucmVmbGVjdC5nZXQtbWV0YWRhdGEnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcucmVmbGVjdC5nZXQtbWV0YWRhdGEta2V5cycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmdldC1vd24tbWV0YWRhdGEnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcucmVmbGVjdC5nZXQtb3duLW1ldGFkYXRhLWtleXMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcucmVmbGVjdC5oYXMtbWV0YWRhdGEnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcucmVmbGVjdC5oYXMtb3duLW1ldGFkYXRhJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnJlZmxlY3QubWV0YWRhdGEnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuYXNhcCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5vYnNlcnZhYmxlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvd2ViLnRpbWVycycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL3dlYi5pbW1lZGlhdGUnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbW9kdWxlcy9fY29yZScpOyIsIi8vIHNoaW0gZm9yIHVzaW5nIHByb2Nlc3MgaW4gYnJvd3NlclxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG4vLyBjYWNoZWQgZnJvbSB3aGF0ZXZlciBnbG9iYWwgaXMgcHJlc2VudCBzbyB0aGF0IHRlc3QgcnVubmVycyB0aGF0IHN0dWIgaXRcbi8vIGRvbid0IGJyZWFrIHRoaW5ncy4gIEJ1dCB3ZSBuZWVkIHRvIHdyYXAgaXQgaW4gYSB0cnkgY2F0Y2ggaW4gY2FzZSBpdCBpc1xuLy8gd3JhcHBlZCBpbiBzdHJpY3QgbW9kZSBjb2RlIHdoaWNoIGRvZXNuJ3QgZGVmaW5lIGFueSBnbG9iYWxzLiAgSXQncyBpbnNpZGUgYVxuLy8gZnVuY3Rpb24gYmVjYXVzZSB0cnkvY2F0Y2hlcyBkZW9wdGltaXplIGluIGNlcnRhaW4gZW5naW5lcy5cblxudmFyIGNhY2hlZFNldFRpbWVvdXQ7XG52YXIgY2FjaGVkQ2xlYXJUaW1lb3V0O1xuXG5mdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCkge1xuICAgIHRocm93IG5ldyBFcnJvcignc2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCAoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbihmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZXRUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhclRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgfVxufSAoKSlcbmZ1bmN0aW9uIHJ1blRpbWVvdXQoZnVuKSB7XG4gICAgaWYgKGNhY2hlZFNldFRpbWVvdXQgPT09IHNldFRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIC8vIGlmIHNldFRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRTZXRUaW1lb3V0ID09PSBkZWZhdWx0U2V0VGltb3V0IHx8ICFjYWNoZWRTZXRUaW1lb3V0KSAmJiBzZXRUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfSBjYXRjaChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLCBmdW4sIDApO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3JcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwodGhpcywgZnVuLCAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQobWFya2VyKSB7XG4gICAgaWYgKGNhY2hlZENsZWFyVGltZW91dCA9PT0gY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIC8vIGlmIGNsZWFyVGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZENsZWFyVGltZW91dCA9PT0gZGVmYXVsdENsZWFyVGltZW91dCB8fCAhY2FjaGVkQ2xlYXJUaW1lb3V0KSAmJiBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0ICB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKG51bGwsIG1hcmtlcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3IuXG4gICAgICAgICAgICAvLyBTb21lIHZlcnNpb25zIG9mIEkuRS4gaGF2ZSBkaWZmZXJlbnQgcnVsZXMgZm9yIGNsZWFyVGltZW91dCB2cyBzZXRUaW1lb3V0XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwodGhpcywgbWFya2VyKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbn1cbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGlmICghZHJhaW5pbmcgfHwgIWN1cnJlbnRRdWV1ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB9XG4gICAgY3VycmVudFF1ZXVlID0gbnVsbDtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIHJ1bkNsZWFyVGltZW91dCh0aW1lb3V0KTtcbn1cblxucHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7XG4gICAgICAgIHJ1blRpbWVvdXQoZHJhaW5RdWV1ZSk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZE9uY2VMaXN0ZW5lciA9IG5vb3A7XG5cbnByb2Nlc3MubGlzdGVuZXJzID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIFtdIH1cblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG5wcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9O1xucHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcbnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBodHRwczovL3Jhdy5naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL21hc3Rlci9MSUNFTlNFIGZpbGUuIEFuXG4gKiBhZGRpdGlvbmFsIGdyYW50IG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW5cbiAqIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4hKGZ1bmN0aW9uKGdsb2JhbCkge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgT3AgPSBPYmplY3QucHJvdG90eXBlO1xuICB2YXIgaGFzT3duID0gT3AuaGFzT3duUHJvcGVydHk7XG4gIHZhciB1bmRlZmluZWQ7IC8vIE1vcmUgY29tcHJlc3NpYmxlIHRoYW4gdm9pZCAwLlxuICB2YXIgJFN5bWJvbCA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiA/IFN5bWJvbCA6IHt9O1xuICB2YXIgaXRlcmF0b3JTeW1ib2wgPSAkU3ltYm9sLml0ZXJhdG9yIHx8IFwiQEBpdGVyYXRvclwiO1xuICB2YXIgYXN5bmNJdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuYXN5bmNJdGVyYXRvciB8fCBcIkBAYXN5bmNJdGVyYXRvclwiO1xuICB2YXIgdG9TdHJpbmdUYWdTeW1ib2wgPSAkU3ltYm9sLnRvU3RyaW5nVGFnIHx8IFwiQEB0b1N0cmluZ1RhZ1wiO1xuXG4gIHZhciBpbk1vZHVsZSA9IHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCI7XG4gIHZhciBydW50aW1lID0gZ2xvYmFsLnJlZ2VuZXJhdG9yUnVudGltZTtcbiAgaWYgKHJ1bnRpbWUpIHtcbiAgICBpZiAoaW5Nb2R1bGUpIHtcbiAgICAgIC8vIElmIHJlZ2VuZXJhdG9yUnVudGltZSBpcyBkZWZpbmVkIGdsb2JhbGx5IGFuZCB3ZSdyZSBpbiBhIG1vZHVsZSxcbiAgICAgIC8vIG1ha2UgdGhlIGV4cG9ydHMgb2JqZWN0IGlkZW50aWNhbCB0byByZWdlbmVyYXRvclJ1bnRpbWUuXG4gICAgICBtb2R1bGUuZXhwb3J0cyA9IHJ1bnRpbWU7XG4gICAgfVxuICAgIC8vIERvbid0IGJvdGhlciBldmFsdWF0aW5nIHRoZSByZXN0IG9mIHRoaXMgZmlsZSBpZiB0aGUgcnVudGltZSB3YXNcbiAgICAvLyBhbHJlYWR5IGRlZmluZWQgZ2xvYmFsbHkuXG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gRGVmaW5lIHRoZSBydW50aW1lIGdsb2JhbGx5IChhcyBleHBlY3RlZCBieSBnZW5lcmF0ZWQgY29kZSkgYXMgZWl0aGVyXG4gIC8vIG1vZHVsZS5leHBvcnRzIChpZiB3ZSdyZSBpbiBhIG1vZHVsZSkgb3IgYSBuZXcsIGVtcHR5IG9iamVjdC5cbiAgcnVudGltZSA9IGdsb2JhbC5yZWdlbmVyYXRvclJ1bnRpbWUgPSBpbk1vZHVsZSA/IG1vZHVsZS5leHBvcnRzIDoge307XG5cbiAgZnVuY3Rpb24gd3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCkge1xuICAgIC8vIElmIG91dGVyRm4gcHJvdmlkZWQgYW5kIG91dGVyRm4ucHJvdG90eXBlIGlzIGEgR2VuZXJhdG9yLCB0aGVuIG91dGVyRm4ucHJvdG90eXBlIGluc3RhbmNlb2YgR2VuZXJhdG9yLlxuICAgIHZhciBwcm90b0dlbmVyYXRvciA9IG91dGVyRm4gJiYgb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IgPyBvdXRlckZuIDogR2VuZXJhdG9yO1xuICAgIHZhciBnZW5lcmF0b3IgPSBPYmplY3QuY3JlYXRlKHByb3RvR2VuZXJhdG9yLnByb3RvdHlwZSk7XG4gICAgdmFyIGNvbnRleHQgPSBuZXcgQ29udGV4dCh0cnlMb2NzTGlzdCB8fCBbXSk7XG5cbiAgICAvLyBUaGUgLl9pbnZva2UgbWV0aG9kIHVuaWZpZXMgdGhlIGltcGxlbWVudGF0aW9ucyBvZiB0aGUgLm5leHQsXG4gICAgLy8gLnRocm93LCBhbmQgLnJldHVybiBtZXRob2RzLlxuICAgIGdlbmVyYXRvci5faW52b2tlID0gbWFrZUludm9rZU1ldGhvZChpbm5lckZuLCBzZWxmLCBjb250ZXh0KTtcblxuICAgIHJldHVybiBnZW5lcmF0b3I7XG4gIH1cbiAgcnVudGltZS53cmFwID0gd3JhcDtcblxuICAvLyBUcnkvY2F0Y2ggaGVscGVyIHRvIG1pbmltaXplIGRlb3B0aW1pemF0aW9ucy4gUmV0dXJucyBhIGNvbXBsZXRpb25cbiAgLy8gcmVjb3JkIGxpa2UgY29udGV4dC50cnlFbnRyaWVzW2ldLmNvbXBsZXRpb24uIFRoaXMgaW50ZXJmYWNlIGNvdWxkXG4gIC8vIGhhdmUgYmVlbiAoYW5kIHdhcyBwcmV2aW91c2x5KSBkZXNpZ25lZCB0byB0YWtlIGEgY2xvc3VyZSB0byBiZVxuICAvLyBpbnZva2VkIHdpdGhvdXQgYXJndW1lbnRzLCBidXQgaW4gYWxsIHRoZSBjYXNlcyB3ZSBjYXJlIGFib3V0IHdlXG4gIC8vIGFscmVhZHkgaGF2ZSBhbiBleGlzdGluZyBtZXRob2Qgd2Ugd2FudCB0byBjYWxsLCBzbyB0aGVyZSdzIG5vIG5lZWRcbiAgLy8gdG8gY3JlYXRlIGEgbmV3IGZ1bmN0aW9uIG9iamVjdC4gV2UgY2FuIGV2ZW4gZ2V0IGF3YXkgd2l0aCBhc3N1bWluZ1xuICAvLyB0aGUgbWV0aG9kIHRha2VzIGV4YWN0bHkgb25lIGFyZ3VtZW50LCBzaW5jZSB0aGF0IGhhcHBlbnMgdG8gYmUgdHJ1ZVxuICAvLyBpbiBldmVyeSBjYXNlLCBzbyB3ZSBkb24ndCBoYXZlIHRvIHRvdWNoIHRoZSBhcmd1bWVudHMgb2JqZWN0LiBUaGVcbiAgLy8gb25seSBhZGRpdGlvbmFsIGFsbG9jYXRpb24gcmVxdWlyZWQgaXMgdGhlIGNvbXBsZXRpb24gcmVjb3JkLCB3aGljaFxuICAvLyBoYXMgYSBzdGFibGUgc2hhcGUgYW5kIHNvIGhvcGVmdWxseSBzaG91bGQgYmUgY2hlYXAgdG8gYWxsb2NhdGUuXG4gIGZ1bmN0aW9uIHRyeUNhdGNoKGZuLCBvYmosIGFyZykge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4geyB0eXBlOiBcIm5vcm1hbFwiLCBhcmc6IGZuLmNhbGwob2JqLCBhcmcpIH07XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICByZXR1cm4geyB0eXBlOiBcInRocm93XCIsIGFyZzogZXJyIH07XG4gICAgfVxuICB9XG5cbiAgdmFyIEdlblN0YXRlU3VzcGVuZGVkU3RhcnQgPSBcInN1c3BlbmRlZFN0YXJ0XCI7XG4gIHZhciBHZW5TdGF0ZVN1c3BlbmRlZFlpZWxkID0gXCJzdXNwZW5kZWRZaWVsZFwiO1xuICB2YXIgR2VuU3RhdGVFeGVjdXRpbmcgPSBcImV4ZWN1dGluZ1wiO1xuICB2YXIgR2VuU3RhdGVDb21wbGV0ZWQgPSBcImNvbXBsZXRlZFwiO1xuXG4gIC8vIFJldHVybmluZyB0aGlzIG9iamVjdCBmcm9tIHRoZSBpbm5lckZuIGhhcyB0aGUgc2FtZSBlZmZlY3QgYXNcbiAgLy8gYnJlYWtpbmcgb3V0IG9mIHRoZSBkaXNwYXRjaCBzd2l0Y2ggc3RhdGVtZW50LlxuICB2YXIgQ29udGludWVTZW50aW5lbCA9IHt9O1xuXG4gIC8vIER1bW15IGNvbnN0cnVjdG9yIGZ1bmN0aW9ucyB0aGF0IHdlIHVzZSBhcyB0aGUgLmNvbnN0cnVjdG9yIGFuZFxuICAvLyAuY29uc3RydWN0b3IucHJvdG90eXBlIHByb3BlcnRpZXMgZm9yIGZ1bmN0aW9ucyB0aGF0IHJldHVybiBHZW5lcmF0b3JcbiAgLy8gb2JqZWN0cy4gRm9yIGZ1bGwgc3BlYyBjb21wbGlhbmNlLCB5b3UgbWF5IHdpc2ggdG8gY29uZmlndXJlIHlvdXJcbiAgLy8gbWluaWZpZXIgbm90IHRvIG1hbmdsZSB0aGUgbmFtZXMgb2YgdGhlc2UgdHdvIGZ1bmN0aW9ucy5cbiAgZnVuY3Rpb24gR2VuZXJhdG9yKCkge31cbiAgZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb24oKSB7fVxuICBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSgpIHt9XG5cbiAgLy8gVGhpcyBpcyBhIHBvbHlmaWxsIGZvciAlSXRlcmF0b3JQcm90b3R5cGUlIGZvciBlbnZpcm9ubWVudHMgdGhhdFxuICAvLyBkb24ndCBuYXRpdmVseSBzdXBwb3J0IGl0LlxuICB2YXIgSXRlcmF0b3JQcm90b3R5cGUgPSB7fTtcbiAgSXRlcmF0b3JQcm90b3R5cGVbaXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIHZhciBnZXRQcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbiAgdmFyIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG8gJiYgZ2V0UHJvdG8oZ2V0UHJvdG8odmFsdWVzKFtdKSkpO1xuICBpZiAoTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgJiZcbiAgICAgIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlICE9PSBPcCAmJlxuICAgICAgaGFzT3duLmNhbGwoTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUsIGl0ZXJhdG9yU3ltYm9sKSkge1xuICAgIC8vIFRoaXMgZW52aXJvbm1lbnQgaGFzIGEgbmF0aXZlICVJdGVyYXRvclByb3RvdHlwZSU7IHVzZSBpdCBpbnN0ZWFkXG4gICAgLy8gb2YgdGhlIHBvbHlmaWxsLlxuICAgIEl0ZXJhdG9yUHJvdG90eXBlID0gTmF0aXZlSXRlcmF0b3JQcm90b3R5cGU7XG4gIH1cblxuICB2YXIgR3AgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZS5wcm90b3R5cGUgPVxuICAgIEdlbmVyYXRvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlKTtcbiAgR2VuZXJhdG9yRnVuY3Rpb24ucHJvdG90eXBlID0gR3AuY29uc3RydWN0b3IgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZTtcbiAgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUuY29uc3RydWN0b3IgPSBHZW5lcmF0b3JGdW5jdGlvbjtcbiAgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGVbdG9TdHJpbmdUYWdTeW1ib2xdID1cbiAgICBHZW5lcmF0b3JGdW5jdGlvbi5kaXNwbGF5TmFtZSA9IFwiR2VuZXJhdG9yRnVuY3Rpb25cIjtcblxuICAvLyBIZWxwZXIgZm9yIGRlZmluaW5nIHRoZSAubmV4dCwgLnRocm93LCBhbmQgLnJldHVybiBtZXRob2RzIG9mIHRoZVxuICAvLyBJdGVyYXRvciBpbnRlcmZhY2UgaW4gdGVybXMgb2YgYSBzaW5nbGUgLl9pbnZva2UgbWV0aG9kLlxuICBmdW5jdGlvbiBkZWZpbmVJdGVyYXRvck1ldGhvZHMocHJvdG90eXBlKSB7XG4gICAgW1wibmV4dFwiLCBcInRocm93XCIsIFwicmV0dXJuXCJdLmZvckVhY2goZnVuY3Rpb24obWV0aG9kKSB7XG4gICAgICBwcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKGFyZykge1xuICAgICAgICByZXR1cm4gdGhpcy5faW52b2tlKG1ldGhvZCwgYXJnKTtcbiAgICAgIH07XG4gICAgfSk7XG4gIH1cblxuICBydW50aW1lLmlzR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbihnZW5GdW4pIHtcbiAgICB2YXIgY3RvciA9IHR5cGVvZiBnZW5GdW4gPT09IFwiZnVuY3Rpb25cIiAmJiBnZW5GdW4uY29uc3RydWN0b3I7XG4gICAgcmV0dXJuIGN0b3JcbiAgICAgID8gY3RvciA9PT0gR2VuZXJhdG9yRnVuY3Rpb24gfHxcbiAgICAgICAgLy8gRm9yIHRoZSBuYXRpdmUgR2VuZXJhdG9yRnVuY3Rpb24gY29uc3RydWN0b3IsIHRoZSBiZXN0IHdlIGNhblxuICAgICAgICAvLyBkbyBpcyB0byBjaGVjayBpdHMgLm5hbWUgcHJvcGVydHkuXG4gICAgICAgIChjdG9yLmRpc3BsYXlOYW1lIHx8IGN0b3IubmFtZSkgPT09IFwiR2VuZXJhdG9yRnVuY3Rpb25cIlxuICAgICAgOiBmYWxzZTtcbiAgfTtcblxuICBydW50aW1lLm1hcmsgPSBmdW5jdGlvbihnZW5GdW4pIHtcbiAgICBpZiAoT2JqZWN0LnNldFByb3RvdHlwZU9mKSB7XG4gICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YoZ2VuRnVuLCBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdlbkZ1bi5fX3Byb3RvX18gPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZTtcbiAgICAgIGlmICghKHRvU3RyaW5nVGFnU3ltYm9sIGluIGdlbkZ1bikpIHtcbiAgICAgICAgZ2VuRnVuW3RvU3RyaW5nVGFnU3ltYm9sXSA9IFwiR2VuZXJhdG9yRnVuY3Rpb25cIjtcbiAgICAgIH1cbiAgICB9XG4gICAgZ2VuRnVuLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoR3ApO1xuICAgIHJldHVybiBnZW5GdW47XG4gIH07XG5cbiAgLy8gV2l0aGluIHRoZSBib2R5IG9mIGFueSBhc3luYyBmdW5jdGlvbiwgYGF3YWl0IHhgIGlzIHRyYW5zZm9ybWVkIHRvXG4gIC8vIGB5aWVsZCByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoeClgLCBzbyB0aGF0IHRoZSBydW50aW1lIGNhbiB0ZXN0XG4gIC8vIGBoYXNPd24uY2FsbCh2YWx1ZSwgXCJfX2F3YWl0XCIpYCB0byBkZXRlcm1pbmUgaWYgdGhlIHlpZWxkZWQgdmFsdWUgaXNcbiAgLy8gbWVhbnQgdG8gYmUgYXdhaXRlZC5cbiAgcnVudGltZS5hd3JhcCA9IGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiB7IF9fYXdhaXQ6IGFyZyB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIEFzeW5jSXRlcmF0b3IoZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gaW52b2tlKG1ldGhvZCwgYXJnLCByZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChnZW5lcmF0b3JbbWV0aG9kXSwgZ2VuZXJhdG9yLCBhcmcpO1xuICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgcmVqZWN0KHJlY29yZC5hcmcpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHJlY29yZC5hcmc7XG4gICAgICAgIHZhciB2YWx1ZSA9IHJlc3VsdC52YWx1ZTtcbiAgICAgICAgaWYgKHZhbHVlICYmXG4gICAgICAgICAgICB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgICAgIGhhc093bi5jYWxsKHZhbHVlLCBcIl9fYXdhaXRcIikpIHtcbiAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHZhbHVlLl9fYXdhaXQpLnRoZW4oZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIGludm9rZShcIm5leHRcIiwgdmFsdWUsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgICBpbnZva2UoXCJ0aHJvd1wiLCBlcnIsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKGZ1bmN0aW9uKHVud3JhcHBlZCkge1xuICAgICAgICAgIC8vIFdoZW4gYSB5aWVsZGVkIFByb21pc2UgaXMgcmVzb2x2ZWQsIGl0cyBmaW5hbCB2YWx1ZSBiZWNvbWVzXG4gICAgICAgICAgLy8gdGhlIC52YWx1ZSBvZiB0aGUgUHJvbWlzZTx7dmFsdWUsZG9uZX0+IHJlc3VsdCBmb3IgdGhlXG4gICAgICAgICAgLy8gY3VycmVudCBpdGVyYXRpb24uIElmIHRoZSBQcm9taXNlIGlzIHJlamVjdGVkLCBob3dldmVyLCB0aGVcbiAgICAgICAgICAvLyByZXN1bHQgZm9yIHRoaXMgaXRlcmF0aW9uIHdpbGwgYmUgcmVqZWN0ZWQgd2l0aCB0aGUgc2FtZVxuICAgICAgICAgIC8vIHJlYXNvbi4gTm90ZSB0aGF0IHJlamVjdGlvbnMgb2YgeWllbGRlZCBQcm9taXNlcyBhcmUgbm90XG4gICAgICAgICAgLy8gdGhyb3duIGJhY2sgaW50byB0aGUgZ2VuZXJhdG9yIGZ1bmN0aW9uLCBhcyBpcyB0aGUgY2FzZVxuICAgICAgICAgIC8vIHdoZW4gYW4gYXdhaXRlZCBQcm9taXNlIGlzIHJlamVjdGVkLiBUaGlzIGRpZmZlcmVuY2UgaW5cbiAgICAgICAgICAvLyBiZWhhdmlvciBiZXR3ZWVuIHlpZWxkIGFuZCBhd2FpdCBpcyBpbXBvcnRhbnQsIGJlY2F1c2UgaXRcbiAgICAgICAgICAvLyBhbGxvd3MgdGhlIGNvbnN1bWVyIHRvIGRlY2lkZSB3aGF0IHRvIGRvIHdpdGggdGhlIHlpZWxkZWRcbiAgICAgICAgICAvLyByZWplY3Rpb24gKHN3YWxsb3cgaXQgYW5kIGNvbnRpbnVlLCBtYW51YWxseSAudGhyb3cgaXQgYmFja1xuICAgICAgICAgIC8vIGludG8gdGhlIGdlbmVyYXRvciwgYWJhbmRvbiBpdGVyYXRpb24sIHdoYXRldmVyKS4gV2l0aFxuICAgICAgICAgIC8vIGF3YWl0LCBieSBjb250cmFzdCwgdGhlcmUgaXMgbm8gb3Bwb3J0dW5pdHkgdG8gZXhhbWluZSB0aGVcbiAgICAgICAgICAvLyByZWplY3Rpb24gcmVhc29uIG91dHNpZGUgdGhlIGdlbmVyYXRvciBmdW5jdGlvbiwgc28gdGhlXG4gICAgICAgICAgLy8gb25seSBvcHRpb24gaXMgdG8gdGhyb3cgaXQgZnJvbSB0aGUgYXdhaXQgZXhwcmVzc2lvbiwgYW5kXG4gICAgICAgICAgLy8gbGV0IHRoZSBnZW5lcmF0b3IgZnVuY3Rpb24gaGFuZGxlIHRoZSBleGNlcHRpb24uXG4gICAgICAgICAgcmVzdWx0LnZhbHVlID0gdW53cmFwcGVkO1xuICAgICAgICAgIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGdsb2JhbC5wcm9jZXNzID09PSBcIm9iamVjdFwiICYmIGdsb2JhbC5wcm9jZXNzLmRvbWFpbikge1xuICAgICAgaW52b2tlID0gZ2xvYmFsLnByb2Nlc3MuZG9tYWluLmJpbmQoaW52b2tlKTtcbiAgICB9XG5cbiAgICB2YXIgcHJldmlvdXNQcm9taXNlO1xuXG4gICAgZnVuY3Rpb24gZW5xdWV1ZShtZXRob2QsIGFyZykge1xuICAgICAgZnVuY3Rpb24gY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcHJldmlvdXNQcm9taXNlID1cbiAgICAgICAgLy8gSWYgZW5xdWV1ZSBoYXMgYmVlbiBjYWxsZWQgYmVmb3JlLCB0aGVuIHdlIHdhbnQgdG8gd2FpdCB1bnRpbFxuICAgICAgICAvLyBhbGwgcHJldmlvdXMgUHJvbWlzZXMgaGF2ZSBiZWVuIHJlc29sdmVkIGJlZm9yZSBjYWxsaW5nIGludm9rZSxcbiAgICAgICAgLy8gc28gdGhhdCByZXN1bHRzIGFyZSBhbHdheXMgZGVsaXZlcmVkIGluIHRoZSBjb3JyZWN0IG9yZGVyLiBJZlxuICAgICAgICAvLyBlbnF1ZXVlIGhhcyBub3QgYmVlbiBjYWxsZWQgYmVmb3JlLCB0aGVuIGl0IGlzIGltcG9ydGFudCB0b1xuICAgICAgICAvLyBjYWxsIGludm9rZSBpbW1lZGlhdGVseSwgd2l0aG91dCB3YWl0aW5nIG9uIGEgY2FsbGJhY2sgdG8gZmlyZSxcbiAgICAgICAgLy8gc28gdGhhdCB0aGUgYXN5bmMgZ2VuZXJhdG9yIGZ1bmN0aW9uIGhhcyB0aGUgb3Bwb3J0dW5pdHkgdG8gZG9cbiAgICAgICAgLy8gYW55IG5lY2Vzc2FyeSBzZXR1cCBpbiBhIHByZWRpY3RhYmxlIHdheS4gVGhpcyBwcmVkaWN0YWJpbGl0eVxuICAgICAgICAvLyBpcyB3aHkgdGhlIFByb21pc2UgY29uc3RydWN0b3Igc3luY2hyb25vdXNseSBpbnZva2VzIGl0c1xuICAgICAgICAvLyBleGVjdXRvciBjYWxsYmFjaywgYW5kIHdoeSBhc3luYyBmdW5jdGlvbnMgc3luY2hyb25vdXNseVxuICAgICAgICAvLyBleGVjdXRlIGNvZGUgYmVmb3JlIHRoZSBmaXJzdCBhd2FpdC4gU2luY2Ugd2UgaW1wbGVtZW50IHNpbXBsZVxuICAgICAgICAvLyBhc3luYyBmdW5jdGlvbnMgaW4gdGVybXMgb2YgYXN5bmMgZ2VuZXJhdG9ycywgaXQgaXMgZXNwZWNpYWxseVxuICAgICAgICAvLyBpbXBvcnRhbnQgdG8gZ2V0IHRoaXMgcmlnaHQsIGV2ZW4gdGhvdWdoIGl0IHJlcXVpcmVzIGNhcmUuXG4gICAgICAgIHByZXZpb3VzUHJvbWlzZSA/IHByZXZpb3VzUHJvbWlzZS50aGVuKFxuICAgICAgICAgIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnLFxuICAgICAgICAgIC8vIEF2b2lkIHByb3BhZ2F0aW5nIGZhaWx1cmVzIHRvIFByb21pc2VzIHJldHVybmVkIGJ5IGxhdGVyXG4gICAgICAgICAgLy8gaW52b2NhdGlvbnMgb2YgdGhlIGl0ZXJhdG9yLlxuICAgICAgICAgIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnXG4gICAgICAgICkgOiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpO1xuICAgIH1cblxuICAgIC8vIERlZmluZSB0aGUgdW5pZmllZCBoZWxwZXIgbWV0aG9kIHRoYXQgaXMgdXNlZCB0byBpbXBsZW1lbnQgLm5leHQsXG4gICAgLy8gLnRocm93LCBhbmQgLnJldHVybiAoc2VlIGRlZmluZUl0ZXJhdG9yTWV0aG9kcykuXG4gICAgdGhpcy5faW52b2tlID0gZW5xdWV1ZTtcbiAgfVxuXG4gIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhBc3luY0l0ZXJhdG9yLnByb3RvdHlwZSk7XG4gIEFzeW5jSXRlcmF0b3IucHJvdG90eXBlW2FzeW5jSXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuICBydW50aW1lLkFzeW5jSXRlcmF0b3IgPSBBc3luY0l0ZXJhdG9yO1xuXG4gIC8vIE5vdGUgdGhhdCBzaW1wbGUgYXN5bmMgZnVuY3Rpb25zIGFyZSBpbXBsZW1lbnRlZCBvbiB0b3Agb2ZcbiAgLy8gQXN5bmNJdGVyYXRvciBvYmplY3RzOyB0aGV5IGp1c3QgcmV0dXJuIGEgUHJvbWlzZSBmb3IgdGhlIHZhbHVlIG9mXG4gIC8vIHRoZSBmaW5hbCByZXN1bHQgcHJvZHVjZWQgYnkgdGhlIGl0ZXJhdG9yLlxuICBydW50aW1lLmFzeW5jID0gZnVuY3Rpb24oaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpIHtcbiAgICB2YXIgaXRlciA9IG5ldyBBc3luY0l0ZXJhdG9yKFxuICAgICAgd3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdClcbiAgICApO1xuXG4gICAgcmV0dXJuIHJ1bnRpbWUuaXNHZW5lcmF0b3JGdW5jdGlvbihvdXRlckZuKVxuICAgICAgPyBpdGVyIC8vIElmIG91dGVyRm4gaXMgYSBnZW5lcmF0b3IsIHJldHVybiB0aGUgZnVsbCBpdGVyYXRvci5cbiAgICAgIDogaXRlci5uZXh0KCkudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0LmRvbmUgPyByZXN1bHQudmFsdWUgOiBpdGVyLm5leHQoKTtcbiAgICAgICAgfSk7XG4gIH07XG5cbiAgZnVuY3Rpb24gbWFrZUludm9rZU1ldGhvZChpbm5lckZuLCBzZWxmLCBjb250ZXh0KSB7XG4gICAgdmFyIHN0YXRlID0gR2VuU3RhdGVTdXNwZW5kZWRTdGFydDtcblxuICAgIHJldHVybiBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcpIHtcbiAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVFeGVjdXRpbmcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgcnVubmluZ1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZUNvbXBsZXRlZCkge1xuICAgICAgICBpZiAobWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICB0aHJvdyBhcmc7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBCZSBmb3JnaXZpbmcsIHBlciAyNS4zLjMuMy4zIG9mIHRoZSBzcGVjOlxuICAgICAgICAvLyBodHRwczovL3Blb3BsZS5tb3ppbGxhLm9yZy9+am9yZW5kb3JmZi9lczYtZHJhZnQuaHRtbCNzZWMtZ2VuZXJhdG9ycmVzdW1lXG4gICAgICAgIHJldHVybiBkb25lUmVzdWx0KCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnRleHQubWV0aG9kID0gbWV0aG9kO1xuICAgICAgY29udGV4dC5hcmcgPSBhcmc7XG5cbiAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIHZhciBkZWxlZ2F0ZSA9IGNvbnRleHQuZGVsZWdhdGU7XG4gICAgICAgIGlmIChkZWxlZ2F0ZSkge1xuICAgICAgICAgIHZhciBkZWxlZ2F0ZVJlc3VsdCA9IG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpO1xuICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKGRlbGVnYXRlUmVzdWx0ID09PSBDb250aW51ZVNlbnRpbmVsKSBjb250aW51ZTtcbiAgICAgICAgICAgIHJldHVybiBkZWxlZ2F0ZVJlc3VsdDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwibmV4dFwiKSB7XG4gICAgICAgICAgLy8gU2V0dGluZyBjb250ZXh0Ll9zZW50IGZvciBsZWdhY3kgc3VwcG9ydCBvZiBCYWJlbCdzXG4gICAgICAgICAgLy8gZnVuY3Rpb24uc2VudCBpbXBsZW1lbnRhdGlvbi5cbiAgICAgICAgICBjb250ZXh0LnNlbnQgPSBjb250ZXh0Ll9zZW50ID0gY29udGV4dC5hcmc7XG5cbiAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0KSB7XG4gICAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkO1xuICAgICAgICAgICAgdGhyb3cgY29udGV4dC5hcmc7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZyk7XG5cbiAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJyZXR1cm5cIikge1xuICAgICAgICAgIGNvbnRleHQuYWJydXB0KFwicmV0dXJuXCIsIGNvbnRleHQuYXJnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN0YXRlID0gR2VuU3RhdGVFeGVjdXRpbmc7XG5cbiAgICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuICAgICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwibm9ybWFsXCIpIHtcbiAgICAgICAgICAvLyBJZiBhbiBleGNlcHRpb24gaXMgdGhyb3duIGZyb20gaW5uZXJGbiwgd2UgbGVhdmUgc3RhdGUgPT09XG4gICAgICAgICAgLy8gR2VuU3RhdGVFeGVjdXRpbmcgYW5kIGxvb3AgYmFjayBmb3IgYW5vdGhlciBpbnZvY2F0aW9uLlxuICAgICAgICAgIHN0YXRlID0gY29udGV4dC5kb25lXG4gICAgICAgICAgICA/IEdlblN0YXRlQ29tcGxldGVkXG4gICAgICAgICAgICA6IEdlblN0YXRlU3VzcGVuZGVkWWllbGQ7XG5cbiAgICAgICAgICBpZiAocmVjb3JkLmFyZyA9PT0gQ29udGludWVTZW50aW5lbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiByZWNvcmQuYXJnLFxuICAgICAgICAgICAgZG9uZTogY29udGV4dC5kb25lXG4gICAgICAgICAgfTtcblxuICAgICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkO1xuICAgICAgICAgIC8vIERpc3BhdGNoIHRoZSBleGNlcHRpb24gYnkgbG9vcGluZyBiYWNrIGFyb3VuZCB0byB0aGVcbiAgICAgICAgICAvLyBjb250ZXh0LmRpc3BhdGNoRXhjZXB0aW9uKGNvbnRleHQuYXJnKSBjYWxsIGFib3ZlLlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH1cblxuICAvLyBDYWxsIGRlbGVnYXRlLml0ZXJhdG9yW2NvbnRleHQubWV0aG9kXShjb250ZXh0LmFyZykgYW5kIGhhbmRsZSB0aGVcbiAgLy8gcmVzdWx0LCBlaXRoZXIgYnkgcmV0dXJuaW5nIGEgeyB2YWx1ZSwgZG9uZSB9IHJlc3VsdCBmcm9tIHRoZVxuICAvLyBkZWxlZ2F0ZSBpdGVyYXRvciwgb3IgYnkgbW9kaWZ5aW5nIGNvbnRleHQubWV0aG9kIGFuZCBjb250ZXh0LmFyZyxcbiAgLy8gc2V0dGluZyBjb250ZXh0LmRlbGVnYXRlIHRvIG51bGwsIGFuZCByZXR1cm5pbmcgdGhlIENvbnRpbnVlU2VudGluZWwuXG4gIGZ1bmN0aW9uIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpIHtcbiAgICB2YXIgbWV0aG9kID0gZGVsZWdhdGUuaXRlcmF0b3JbY29udGV4dC5tZXRob2RdO1xuICAgIGlmIChtZXRob2QgPT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gQSAudGhyb3cgb3IgLnJldHVybiB3aGVuIHRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBoYXMgbm8gLnRocm93XG4gICAgICAvLyBtZXRob2QgYWx3YXlzIHRlcm1pbmF0ZXMgdGhlIHlpZWxkKiBsb29wLlxuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG5cbiAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIGlmIChkZWxlZ2F0ZS5pdGVyYXRvci5yZXR1cm4pIHtcbiAgICAgICAgICAvLyBJZiB0aGUgZGVsZWdhdGUgaXRlcmF0b3IgaGFzIGEgcmV0dXJuIG1ldGhvZCwgZ2l2ZSBpdCBhXG4gICAgICAgICAgLy8gY2hhbmNlIHRvIGNsZWFuIHVwLlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJyZXR1cm5cIjtcbiAgICAgICAgICBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KTtcblxuICAgICAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgICAvLyBJZiBtYXliZUludm9rZURlbGVnYXRlKGNvbnRleHQpIGNoYW5nZWQgY29udGV4dC5tZXRob2QgZnJvbVxuICAgICAgICAgICAgLy8gXCJyZXR1cm5cIiB0byBcInRocm93XCIsIGxldCB0aGF0IG92ZXJyaWRlIHRoZSBUeXBlRXJyb3IgYmVsb3cuXG4gICAgICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgICAgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFxuICAgICAgICAgIFwiVGhlIGl0ZXJhdG9yIGRvZXMgbm90IHByb3ZpZGUgYSAndGhyb3cnIG1ldGhvZFwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKG1ldGhvZCwgZGVsZWdhdGUuaXRlcmF0b3IsIGNvbnRleHQuYXJnKTtcblxuICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgIGNvbnRleHQuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgdmFyIGluZm8gPSByZWNvcmQuYXJnO1xuXG4gICAgaWYgKCEgaW5mbykge1xuICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICBjb250ZXh0LmFyZyA9IG5ldyBUeXBlRXJyb3IoXCJpdGVyYXRvciByZXN1bHQgaXMgbm90IGFuIG9iamVjdFwiKTtcbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgaWYgKGluZm8uZG9uZSkge1xuICAgICAgLy8gQXNzaWduIHRoZSByZXN1bHQgb2YgdGhlIGZpbmlzaGVkIGRlbGVnYXRlIHRvIHRoZSB0ZW1wb3JhcnlcbiAgICAgIC8vIHZhcmlhYmxlIHNwZWNpZmllZCBieSBkZWxlZ2F0ZS5yZXN1bHROYW1lIChzZWUgZGVsZWdhdGVZaWVsZCkuXG4gICAgICBjb250ZXh0W2RlbGVnYXRlLnJlc3VsdE5hbWVdID0gaW5mby52YWx1ZTtcblxuICAgICAgLy8gUmVzdW1lIGV4ZWN1dGlvbiBhdCB0aGUgZGVzaXJlZCBsb2NhdGlvbiAoc2VlIGRlbGVnYXRlWWllbGQpLlxuICAgICAgY29udGV4dC5uZXh0ID0gZGVsZWdhdGUubmV4dExvYztcblxuICAgICAgLy8gSWYgY29udGV4dC5tZXRob2Qgd2FzIFwidGhyb3dcIiBidXQgdGhlIGRlbGVnYXRlIGhhbmRsZWQgdGhlXG4gICAgICAvLyBleGNlcHRpb24sIGxldCB0aGUgb3V0ZXIgZ2VuZXJhdG9yIHByb2NlZWQgbm9ybWFsbHkuIElmXG4gICAgICAvLyBjb250ZXh0Lm1ldGhvZCB3YXMgXCJuZXh0XCIsIGZvcmdldCBjb250ZXh0LmFyZyBzaW5jZSBpdCBoYXMgYmVlblxuICAgICAgLy8gXCJjb25zdW1lZFwiIGJ5IHRoZSBkZWxlZ2F0ZSBpdGVyYXRvci4gSWYgY29udGV4dC5tZXRob2Qgd2FzXG4gICAgICAvLyBcInJldHVyblwiLCBhbGxvdyB0aGUgb3JpZ2luYWwgLnJldHVybiBjYWxsIHRvIGNvbnRpbnVlIGluIHRoZVxuICAgICAgLy8gb3V0ZXIgZ2VuZXJhdG9yLlxuICAgICAgaWYgKGNvbnRleHQubWV0aG9kICE9PSBcInJldHVyblwiKSB7XG4gICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFJlLXlpZWxkIHRoZSByZXN1bHQgcmV0dXJuZWQgYnkgdGhlIGRlbGVnYXRlIG1ldGhvZC5cbiAgICAgIHJldHVybiBpbmZvO1xuICAgIH1cblxuICAgIC8vIFRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBpcyBmaW5pc2hlZCwgc28gZm9yZ2V0IGl0IGFuZCBjb250aW51ZSB3aXRoXG4gICAgLy8gdGhlIG91dGVyIGdlbmVyYXRvci5cbiAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcbiAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgfVxuXG4gIC8vIERlZmluZSBHZW5lcmF0b3IucHJvdG90eXBlLntuZXh0LHRocm93LHJldHVybn0gaW4gdGVybXMgb2YgdGhlXG4gIC8vIHVuaWZpZWQgLl9pbnZva2UgaGVscGVyIG1ldGhvZC5cbiAgZGVmaW5lSXRlcmF0b3JNZXRob2RzKEdwKTtcblxuICBHcFt0b1N0cmluZ1RhZ1N5bWJvbF0gPSBcIkdlbmVyYXRvclwiO1xuXG4gIC8vIEEgR2VuZXJhdG9yIHNob3VsZCBhbHdheXMgcmV0dXJuIGl0c2VsZiBhcyB0aGUgaXRlcmF0b3Igb2JqZWN0IHdoZW4gdGhlXG4gIC8vIEBAaXRlcmF0b3IgZnVuY3Rpb24gaXMgY2FsbGVkIG9uIGl0LiBTb21lIGJyb3dzZXJzJyBpbXBsZW1lbnRhdGlvbnMgb2YgdGhlXG4gIC8vIGl0ZXJhdG9yIHByb3RvdHlwZSBjaGFpbiBpbmNvcnJlY3RseSBpbXBsZW1lbnQgdGhpcywgY2F1c2luZyB0aGUgR2VuZXJhdG9yXG4gIC8vIG9iamVjdCB0byBub3QgYmUgcmV0dXJuZWQgZnJvbSB0aGlzIGNhbGwuIFRoaXMgZW5zdXJlcyB0aGF0IGRvZXNuJ3QgaGFwcGVuLlxuICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL2lzc3Vlcy8yNzQgZm9yIG1vcmUgZGV0YWlscy5cbiAgR3BbaXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgR3AudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJbb2JqZWN0IEdlbmVyYXRvcl1cIjtcbiAgfTtcblxuICBmdW5jdGlvbiBwdXNoVHJ5RW50cnkobG9jcykge1xuICAgIHZhciBlbnRyeSA9IHsgdHJ5TG9jOiBsb2NzWzBdIH07XG5cbiAgICBpZiAoMSBpbiBsb2NzKSB7XG4gICAgICBlbnRyeS5jYXRjaExvYyA9IGxvY3NbMV07XG4gICAgfVxuXG4gICAgaWYgKDIgaW4gbG9jcykge1xuICAgICAgZW50cnkuZmluYWxseUxvYyA9IGxvY3NbMl07XG4gICAgICBlbnRyeS5hZnRlckxvYyA9IGxvY3NbM107XG4gICAgfVxuXG4gICAgdGhpcy50cnlFbnRyaWVzLnB1c2goZW50cnkpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVzZXRUcnlFbnRyeShlbnRyeSkge1xuICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uIHx8IHt9O1xuICAgIHJlY29yZC50eXBlID0gXCJub3JtYWxcIjtcbiAgICBkZWxldGUgcmVjb3JkLmFyZztcbiAgICBlbnRyeS5jb21wbGV0aW9uID0gcmVjb3JkO1xuICB9XG5cbiAgZnVuY3Rpb24gQ29udGV4dCh0cnlMb2NzTGlzdCkge1xuICAgIC8vIFRoZSByb290IGVudHJ5IG9iamVjdCAoZWZmZWN0aXZlbHkgYSB0cnkgc3RhdGVtZW50IHdpdGhvdXQgYSBjYXRjaFxuICAgIC8vIG9yIGEgZmluYWxseSBibG9jaykgZ2l2ZXMgdXMgYSBwbGFjZSB0byBzdG9yZSB2YWx1ZXMgdGhyb3duIGZyb21cbiAgICAvLyBsb2NhdGlvbnMgd2hlcmUgdGhlcmUgaXMgbm8gZW5jbG9zaW5nIHRyeSBzdGF0ZW1lbnQuXG4gICAgdGhpcy50cnlFbnRyaWVzID0gW3sgdHJ5TG9jOiBcInJvb3RcIiB9XTtcbiAgICB0cnlMb2NzTGlzdC5mb3JFYWNoKHB1c2hUcnlFbnRyeSwgdGhpcyk7XG4gICAgdGhpcy5yZXNldCh0cnVlKTtcbiAgfVxuXG4gIHJ1bnRpbWUua2V5cyA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHZhciBrZXlzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuICAgICAga2V5cy5wdXNoKGtleSk7XG4gICAgfVxuICAgIGtleXMucmV2ZXJzZSgpO1xuXG4gICAgLy8gUmF0aGVyIHRoYW4gcmV0dXJuaW5nIGFuIG9iamVjdCB3aXRoIGEgbmV4dCBtZXRob2QsIHdlIGtlZXBcbiAgICAvLyB0aGluZ3Mgc2ltcGxlIGFuZCByZXR1cm4gdGhlIG5leHQgZnVuY3Rpb24gaXRzZWxmLlxuICAgIHJldHVybiBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgd2hpbGUgKGtleXMubGVuZ3RoKSB7XG4gICAgICAgIHZhciBrZXkgPSBrZXlzLnBvcCgpO1xuICAgICAgICBpZiAoa2V5IGluIG9iamVjdCkge1xuICAgICAgICAgIG5leHQudmFsdWUgPSBrZXk7XG4gICAgICAgICAgbmV4dC5kb25lID0gZmFsc2U7XG4gICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gVG8gYXZvaWQgY3JlYXRpbmcgYW4gYWRkaXRpb25hbCBvYmplY3QsIHdlIGp1c3QgaGFuZyB0aGUgLnZhbHVlXG4gICAgICAvLyBhbmQgLmRvbmUgcHJvcGVydGllcyBvZmYgdGhlIG5leHQgZnVuY3Rpb24gb2JqZWN0IGl0c2VsZi4gVGhpc1xuICAgICAgLy8gYWxzbyBlbnN1cmVzIHRoYXQgdGhlIG1pbmlmaWVyIHdpbGwgbm90IGFub255bWl6ZSB0aGUgZnVuY3Rpb24uXG4gICAgICBuZXh0LmRvbmUgPSB0cnVlO1xuICAgICAgcmV0dXJuIG5leHQ7XG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiB2YWx1ZXMoaXRlcmFibGUpIHtcbiAgICBpZiAoaXRlcmFibGUpIHtcbiAgICAgIHZhciBpdGVyYXRvck1ldGhvZCA9IGl0ZXJhYmxlW2l0ZXJhdG9yU3ltYm9sXTtcbiAgICAgIGlmIChpdGVyYXRvck1ldGhvZCkge1xuICAgICAgICByZXR1cm4gaXRlcmF0b3JNZXRob2QuY2FsbChpdGVyYWJsZSk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgaXRlcmFibGUubmV4dCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBpdGVyYWJsZTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFpc05hTihpdGVyYWJsZS5sZW5ndGgpKSB7XG4gICAgICAgIHZhciBpID0gLTEsIG5leHQgPSBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICAgIHdoaWxlICgrK2kgPCBpdGVyYWJsZS5sZW5ndGgpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd24uY2FsbChpdGVyYWJsZSwgaSkpIHtcbiAgICAgICAgICAgICAgbmV4dC52YWx1ZSA9IGl0ZXJhYmxlW2ldO1xuICAgICAgICAgICAgICBuZXh0LmRvbmUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgbmV4dC52YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBuZXh0LmRvbmUgPSB0cnVlO1xuXG4gICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIG5leHQubmV4dCA9IG5leHQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmV0dXJuIGFuIGl0ZXJhdG9yIHdpdGggbm8gdmFsdWVzLlxuICAgIHJldHVybiB7IG5leHQ6IGRvbmVSZXN1bHQgfTtcbiAgfVxuICBydW50aW1lLnZhbHVlcyA9IHZhbHVlcztcblxuICBmdW5jdGlvbiBkb25lUmVzdWx0KCkge1xuICAgIHJldHVybiB7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfTtcbiAgfVxuXG4gIENvbnRleHQucHJvdG90eXBlID0ge1xuICAgIGNvbnN0cnVjdG9yOiBDb250ZXh0LFxuXG4gICAgcmVzZXQ6IGZ1bmN0aW9uKHNraXBUZW1wUmVzZXQpIHtcbiAgICAgIHRoaXMucHJldiA9IDA7XG4gICAgICB0aGlzLm5leHQgPSAwO1xuICAgICAgLy8gUmVzZXR0aW5nIGNvbnRleHQuX3NlbnQgZm9yIGxlZ2FjeSBzdXBwb3J0IG9mIEJhYmVsJ3NcbiAgICAgIC8vIGZ1bmN0aW9uLnNlbnQgaW1wbGVtZW50YXRpb24uXG4gICAgICB0aGlzLnNlbnQgPSB0aGlzLl9zZW50ID0gdW5kZWZpbmVkO1xuICAgICAgdGhpcy5kb25lID0gZmFsc2U7XG4gICAgICB0aGlzLmRlbGVnYXRlID0gbnVsbDtcblxuICAgICAgdGhpcy5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgIHRoaXMuYXJnID0gdW5kZWZpbmVkO1xuXG4gICAgICB0aGlzLnRyeUVudHJpZXMuZm9yRWFjaChyZXNldFRyeUVudHJ5KTtcblxuICAgICAgaWYgKCFza2lwVGVtcFJlc2V0KSB7XG4gICAgICAgIGZvciAodmFyIG5hbWUgaW4gdGhpcykge1xuICAgICAgICAgIC8vIE5vdCBzdXJlIGFib3V0IHRoZSBvcHRpbWFsIG9yZGVyIG9mIHRoZXNlIGNvbmRpdGlvbnM6XG4gICAgICAgICAgaWYgKG5hbWUuY2hhckF0KDApID09PSBcInRcIiAmJlxuICAgICAgICAgICAgICBoYXNPd24uY2FsbCh0aGlzLCBuYW1lKSAmJlxuICAgICAgICAgICAgICAhaXNOYU4oK25hbWUuc2xpY2UoMSkpKSB7XG4gICAgICAgICAgICB0aGlzW25hbWVdID0gdW5kZWZpbmVkO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuZG9uZSA9IHRydWU7XG5cbiAgICAgIHZhciByb290RW50cnkgPSB0aGlzLnRyeUVudHJpZXNbMF07XG4gICAgICB2YXIgcm9vdFJlY29yZCA9IHJvb3RFbnRyeS5jb21wbGV0aW9uO1xuICAgICAgaWYgKHJvb3RSZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIHRocm93IHJvb3RSZWNvcmQuYXJnO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5ydmFsO1xuICAgIH0sXG5cbiAgICBkaXNwYXRjaEV4Y2VwdGlvbjogZnVuY3Rpb24oZXhjZXB0aW9uKSB7XG4gICAgICBpZiAodGhpcy5kb25lKSB7XG4gICAgICAgIHRocm93IGV4Y2VwdGlvbjtcbiAgICAgIH1cblxuICAgICAgdmFyIGNvbnRleHQgPSB0aGlzO1xuICAgICAgZnVuY3Rpb24gaGFuZGxlKGxvYywgY2F1Z2h0KSB7XG4gICAgICAgIHJlY29yZC50eXBlID0gXCJ0aHJvd1wiO1xuICAgICAgICByZWNvcmQuYXJnID0gZXhjZXB0aW9uO1xuICAgICAgICBjb250ZXh0Lm5leHQgPSBsb2M7XG5cbiAgICAgICAgaWYgKGNhdWdodCkge1xuICAgICAgICAgIC8vIElmIHRoZSBkaXNwYXRjaGVkIGV4Y2VwdGlvbiB3YXMgY2F1Z2h0IGJ5IGEgY2F0Y2ggYmxvY2ssXG4gICAgICAgICAgLy8gdGhlbiBsZXQgdGhhdCBjYXRjaCBibG9jayBoYW5kbGUgdGhlIGV4Y2VwdGlvbiBub3JtYWxseS5cbiAgICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICEhIGNhdWdodDtcbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uO1xuXG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPT09IFwicm9vdFwiKSB7XG4gICAgICAgICAgLy8gRXhjZXB0aW9uIHRocm93biBvdXRzaWRlIG9mIGFueSB0cnkgYmxvY2sgdGhhdCBjb3VsZCBoYW5kbGVcbiAgICAgICAgICAvLyBpdCwgc28gc2V0IHRoZSBjb21wbGV0aW9uIHZhbHVlIG9mIHRoZSBlbnRpcmUgZnVuY3Rpb24gdG9cbiAgICAgICAgICAvLyB0aHJvdyB0aGUgZXhjZXB0aW9uLlxuICAgICAgICAgIHJldHVybiBoYW5kbGUoXCJlbmRcIik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldikge1xuICAgICAgICAgIHZhciBoYXNDYXRjaCA9IGhhc093bi5jYWxsKGVudHJ5LCBcImNhdGNoTG9jXCIpO1xuICAgICAgICAgIHZhciBoYXNGaW5hbGx5ID0gaGFzT3duLmNhbGwoZW50cnksIFwiZmluYWxseUxvY1wiKTtcblxuICAgICAgICAgIGlmIChoYXNDYXRjaCAmJiBoYXNGaW5hbGx5KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5jYXRjaExvYywgdHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSBpZiAoaGFzQ2F0Y2gpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5jYXRjaExvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmNhdGNoTG9jLCB0cnVlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSBpZiAoaGFzRmluYWxseSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0cnkgc3RhdGVtZW50IHdpdGhvdXQgY2F0Y2ggb3IgZmluYWxseVwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgYWJydXB0OiBmdW5jdGlvbih0eXBlLCBhcmcpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldiAmJlxuICAgICAgICAgICAgaGFzT3duLmNhbGwoZW50cnksIFwiZmluYWxseUxvY1wiKSAmJlxuICAgICAgICAgICAgdGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgIHZhciBmaW5hbGx5RW50cnkgPSBlbnRyeTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoZmluYWxseUVudHJ5ICYmXG4gICAgICAgICAgKHR5cGUgPT09IFwiYnJlYWtcIiB8fFxuICAgICAgICAgICB0eXBlID09PSBcImNvbnRpbnVlXCIpICYmXG4gICAgICAgICAgZmluYWxseUVudHJ5LnRyeUxvYyA8PSBhcmcgJiZcbiAgICAgICAgICBhcmcgPD0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgLy8gSWdub3JlIHRoZSBmaW5hbGx5IGVudHJ5IGlmIGNvbnRyb2wgaXMgbm90IGp1bXBpbmcgdG8gYVxuICAgICAgICAvLyBsb2NhdGlvbiBvdXRzaWRlIHRoZSB0cnkvY2F0Y2ggYmxvY2suXG4gICAgICAgIGZpbmFsbHlFbnRyeSA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIHZhciByZWNvcmQgPSBmaW5hbGx5RW50cnkgPyBmaW5hbGx5RW50cnkuY29tcGxldGlvbiA6IHt9O1xuICAgICAgcmVjb3JkLnR5cGUgPSB0eXBlO1xuICAgICAgcmVjb3JkLmFyZyA9IGFyZztcblxuICAgICAgaWYgKGZpbmFsbHlFbnRyeSkge1xuICAgICAgICB0aGlzLm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICB0aGlzLm5leHQgPSBmaW5hbGx5RW50cnkuZmluYWxseUxvYztcbiAgICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmNvbXBsZXRlKHJlY29yZCk7XG4gICAgfSxcblxuICAgIGNvbXBsZXRlOiBmdW5jdGlvbihyZWNvcmQsIGFmdGVyTG9jKSB7XG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICB0aHJvdyByZWNvcmQuYXJnO1xuICAgICAgfVxuXG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwiYnJlYWtcIiB8fFxuICAgICAgICAgIHJlY29yZC50eXBlID09PSBcImNvbnRpbnVlXCIpIHtcbiAgICAgICAgdGhpcy5uZXh0ID0gcmVjb3JkLmFyZztcbiAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgdGhpcy5ydmFsID0gdGhpcy5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgICB0aGlzLm1ldGhvZCA9IFwicmV0dXJuXCI7XG4gICAgICAgIHRoaXMubmV4dCA9IFwiZW5kXCI7XG4gICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcIm5vcm1hbFwiICYmIGFmdGVyTG9jKSB7XG4gICAgICAgIHRoaXMubmV4dCA9IGFmdGVyTG9jO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9LFxuXG4gICAgZmluaXNoOiBmdW5jdGlvbihmaW5hbGx5TG9jKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LmZpbmFsbHlMb2MgPT09IGZpbmFsbHlMb2MpIHtcbiAgICAgICAgICB0aGlzLmNvbXBsZXRlKGVudHJ5LmNvbXBsZXRpb24sIGVudHJ5LmFmdGVyTG9jKTtcbiAgICAgICAgICByZXNldFRyeUVudHJ5KGVudHJ5KTtcbiAgICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBcImNhdGNoXCI6IGZ1bmN0aW9uKHRyeUxvYykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPT09IHRyeUxvYykge1xuICAgICAgICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uO1xuICAgICAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgICB2YXIgdGhyb3duID0gcmVjb3JkLmFyZztcbiAgICAgICAgICAgIHJlc2V0VHJ5RW50cnkoZW50cnkpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gdGhyb3duO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFRoZSBjb250ZXh0LmNhdGNoIG1ldGhvZCBtdXN0IG9ubHkgYmUgY2FsbGVkIHdpdGggYSBsb2NhdGlvblxuICAgICAgLy8gYXJndW1lbnQgdGhhdCBjb3JyZXNwb25kcyB0byBhIGtub3duIGNhdGNoIGJsb2NrLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaWxsZWdhbCBjYXRjaCBhdHRlbXB0XCIpO1xuICAgIH0sXG5cbiAgICBkZWxlZ2F0ZVlpZWxkOiBmdW5jdGlvbihpdGVyYWJsZSwgcmVzdWx0TmFtZSwgbmV4dExvYykge1xuICAgICAgdGhpcy5kZWxlZ2F0ZSA9IHtcbiAgICAgICAgaXRlcmF0b3I6IHZhbHVlcyhpdGVyYWJsZSksXG4gICAgICAgIHJlc3VsdE5hbWU6IHJlc3VsdE5hbWUsXG4gICAgICAgIG5leHRMb2M6IG5leHRMb2NcbiAgICAgIH07XG5cbiAgICAgIGlmICh0aGlzLm1ldGhvZCA9PT0gXCJuZXh0XCIpIHtcbiAgICAgICAgLy8gRGVsaWJlcmF0ZWx5IGZvcmdldCB0aGUgbGFzdCBzZW50IHZhbHVlIHNvIHRoYXQgd2UgZG9uJ3RcbiAgICAgICAgLy8gYWNjaWRlbnRhbGx5IHBhc3MgaXQgb24gdG8gdGhlIGRlbGVnYXRlLlxuICAgICAgICB0aGlzLmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuICB9O1xufSkoXG4gIC8vIEFtb25nIHRoZSB2YXJpb3VzIHRyaWNrcyBmb3Igb2J0YWluaW5nIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWxcbiAgLy8gb2JqZWN0LCB0aGlzIHNlZW1zIHRvIGJlIHRoZSBtb3N0IHJlbGlhYmxlIHRlY2huaXF1ZSB0aGF0IGRvZXMgbm90XG4gIC8vIHVzZSBpbmRpcmVjdCBldmFsICh3aGljaCB2aW9sYXRlcyBDb250ZW50IFNlY3VyaXR5IFBvbGljeSkuXG4gIHR5cGVvZiBnbG9iYWwgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwgOlxuICB0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiID8gd2luZG93IDpcbiAgdHlwZW9mIHNlbGYgPT09IFwib2JqZWN0XCIgPyBzZWxmIDogdGhpc1xuKTtcbiIsInZhciBWdWUgLy8gbGF0ZSBiaW5kXG52YXIgdmVyc2lvblxudmFyIG1hcCA9IHdpbmRvdy5fX1ZVRV9IT1RfTUFQX18gPSBPYmplY3QuY3JlYXRlKG51bGwpXG52YXIgaW5zdGFsbGVkID0gZmFsc2VcbnZhciBpc0Jyb3dzZXJpZnkgPSBmYWxzZVxudmFyIGluaXRIb29rTmFtZSA9ICdiZWZvcmVDcmVhdGUnXG5cbmV4cG9ydHMuaW5zdGFsbCA9IGZ1bmN0aW9uICh2dWUsIGJyb3dzZXJpZnkpIHtcbiAgaWYgKGluc3RhbGxlZCkgcmV0dXJuXG4gIGluc3RhbGxlZCA9IHRydWVcblxuICBWdWUgPSB2dWUuX19lc01vZHVsZSA/IHZ1ZS5kZWZhdWx0IDogdnVlXG4gIHZlcnNpb24gPSBWdWUudmVyc2lvbi5zcGxpdCgnLicpLm1hcChOdW1iZXIpXG4gIGlzQnJvd3NlcmlmeSA9IGJyb3dzZXJpZnlcblxuICAvLyBjb21wYXQgd2l0aCA8IDIuMC4wLWFscGhhLjdcbiAgaWYgKFZ1ZS5jb25maWcuX2xpZmVjeWNsZUhvb2tzLmluZGV4T2YoJ2luaXQnKSA+IC0xKSB7XG4gICAgaW5pdEhvb2tOYW1lID0gJ2luaXQnXG4gIH1cblxuICBleHBvcnRzLmNvbXBhdGlibGUgPSB2ZXJzaW9uWzBdID49IDJcbiAgaWYgKCFleHBvcnRzLmNvbXBhdGlibGUpIHtcbiAgICBjb25zb2xlLndhcm4oXG4gICAgICAnW0hNUl0gWW91IGFyZSB1c2luZyBhIHZlcnNpb24gb2YgdnVlLWhvdC1yZWxvYWQtYXBpIHRoYXQgaXMgJyArXG4gICAgICAnb25seSBjb21wYXRpYmxlIHdpdGggVnVlLmpzIGNvcmUgXjIuMC4wLidcbiAgICApXG4gICAgcmV0dXJuXG4gIH1cbn1cblxuLyoqXG4gKiBDcmVhdGUgYSByZWNvcmQgZm9yIGEgaG90IG1vZHVsZSwgd2hpY2gga2VlcHMgdHJhY2sgb2YgaXRzIGNvbnN0cnVjdG9yXG4gKiBhbmQgaW5zdGFuY2VzXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGlkXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICovXG5cbmV4cG9ydHMuY3JlYXRlUmVjb3JkID0gZnVuY3Rpb24gKGlkLCBvcHRpb25zKSB7XG4gIHZhciBDdG9yID0gbnVsbFxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBDdG9yID0gb3B0aW9uc1xuICAgIG9wdGlvbnMgPSBDdG9yLm9wdGlvbnNcbiAgfVxuICBtYWtlT3B0aW9uc0hvdChpZCwgb3B0aW9ucylcbiAgbWFwW2lkXSA9IHtcbiAgICBDdG9yOiBWdWUuZXh0ZW5kKG9wdGlvbnMpLFxuICAgIGluc3RhbmNlczogW11cbiAgfVxufVxuXG4vKipcbiAqIE1ha2UgYSBDb21wb25lbnQgb3B0aW9ucyBvYmplY3QgaG90LlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBpZFxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAqL1xuXG5mdW5jdGlvbiBtYWtlT3B0aW9uc0hvdCAoaWQsIG9wdGlvbnMpIHtcbiAgaW5qZWN0SG9vayhvcHRpb25zLCBpbml0SG9va05hbWUsIGZ1bmN0aW9uICgpIHtcbiAgICBtYXBbaWRdLmluc3RhbmNlcy5wdXNoKHRoaXMpXG4gIH0pXG4gIGluamVjdEhvb2sob3B0aW9ucywgJ2JlZm9yZURlc3Ryb3knLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGluc3RhbmNlcyA9IG1hcFtpZF0uaW5zdGFuY2VzXG4gICAgaW5zdGFuY2VzLnNwbGljZShpbnN0YW5jZXMuaW5kZXhPZih0aGlzKSwgMSlcbiAgfSlcbn1cblxuLyoqXG4gKiBJbmplY3QgYSBob29rIHRvIGEgaG90IHJlbG9hZGFibGUgY29tcG9uZW50IHNvIHRoYXRcbiAqIHdlIGNhbiBrZWVwIHRyYWNrIG9mIGl0LlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gaG9va1xuICovXG5cbmZ1bmN0aW9uIGluamVjdEhvb2sgKG9wdGlvbnMsIG5hbWUsIGhvb2spIHtcbiAgdmFyIGV4aXN0aW5nID0gb3B0aW9uc1tuYW1lXVxuICBvcHRpb25zW25hbWVdID0gZXhpc3RpbmdcbiAgICA/IEFycmF5LmlzQXJyYXkoZXhpc3RpbmcpXG4gICAgICA/IGV4aXN0aW5nLmNvbmNhdChob29rKVxuICAgICAgOiBbZXhpc3RpbmcsIGhvb2tdXG4gICAgOiBbaG9va11cbn1cblxuZnVuY3Rpb24gdHJ5V3JhcCAoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChpZCwgYXJnKSB7XG4gICAgdHJ5IHsgZm4oaWQsIGFyZykgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS5lcnJvcihlKVxuICAgICAgY29uc29sZS53YXJuKCdTb21ldGhpbmcgd2VudCB3cm9uZyBkdXJpbmcgVnVlIGNvbXBvbmVudCBob3QtcmVsb2FkLiBGdWxsIHJlbG9hZCByZXF1aXJlZC4nKVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnRzLnJlcmVuZGVyID0gdHJ5V3JhcChmdW5jdGlvbiAoaWQsIG9wdGlvbnMpIHtcbiAgdmFyIHJlY29yZCA9IG1hcFtpZF1cbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgcmVjb3JkLmluc3RhbmNlcy5zbGljZSgpLmZvckVhY2goZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gICAgICBpbnN0YW5jZS4kZm9yY2VVcGRhdGUoKVxuICAgIH0pXG4gICAgcmV0dXJuXG4gIH1cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgb3B0aW9ucyA9IG9wdGlvbnMub3B0aW9uc1xuICB9XG4gIHJlY29yZC5DdG9yLm9wdGlvbnMucmVuZGVyID0gb3B0aW9ucy5yZW5kZXJcbiAgcmVjb3JkLkN0b3Iub3B0aW9ucy5zdGF0aWNSZW5kZXJGbnMgPSBvcHRpb25zLnN0YXRpY1JlbmRlckZuc1xuICByZWNvcmQuaW5zdGFuY2VzLnNsaWNlKCkuZm9yRWFjaChmdW5jdGlvbiAoaW5zdGFuY2UpIHtcbiAgICBpbnN0YW5jZS4kb3B0aW9ucy5yZW5kZXIgPSBvcHRpb25zLnJlbmRlclxuICAgIGluc3RhbmNlLiRvcHRpb25zLnN0YXRpY1JlbmRlckZucyA9IG9wdGlvbnMuc3RhdGljUmVuZGVyRm5zXG4gICAgaW5zdGFuY2UuX3N0YXRpY1RyZWVzID0gW10gLy8gcmVzZXQgc3RhdGljIHRyZWVzXG4gICAgaW5zdGFuY2UuJGZvcmNlVXBkYXRlKClcbiAgfSlcbn0pXG5cbmV4cG9ydHMucmVsb2FkID0gdHJ5V3JhcChmdW5jdGlvbiAoaWQsIG9wdGlvbnMpIHtcbiAgdmFyIHJlY29yZCA9IG1hcFtpZF1cbiAgaWYgKG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIG9wdGlvbnMgPSBvcHRpb25zLm9wdGlvbnNcbiAgICB9XG4gICAgbWFrZU9wdGlvbnNIb3QoaWQsIG9wdGlvbnMpXG4gICAgaWYgKHZlcnNpb25bMV0gPCAyKSB7XG4gICAgICAvLyBwcmVzZXJ2ZSBwcmUgMi4yIGJlaGF2aW9yIGZvciBnbG9iYWwgbWl4aW4gaGFuZGxpbmdcbiAgICAgIHJlY29yZC5DdG9yLmV4dGVuZE9wdGlvbnMgPSBvcHRpb25zXG4gICAgfVxuICAgIHZhciBuZXdDdG9yID0gcmVjb3JkLkN0b3Iuc3VwZXIuZXh0ZW5kKG9wdGlvbnMpXG4gICAgcmVjb3JkLkN0b3Iub3B0aW9ucyA9IG5ld0N0b3Iub3B0aW9uc1xuICAgIHJlY29yZC5DdG9yLmNpZCA9IG5ld0N0b3IuY2lkXG4gICAgcmVjb3JkLkN0b3IucHJvdG90eXBlID0gbmV3Q3Rvci5wcm90b3R5cGVcbiAgICBpZiAobmV3Q3Rvci5yZWxlYXNlKSB7XG4gICAgICAvLyB0ZW1wb3JhcnkgZ2xvYmFsIG1peGluIHN0cmF0ZWd5IHVzZWQgaW4gPCAyLjAuMC1hbHBoYS42XG4gICAgICBuZXdDdG9yLnJlbGVhc2UoKVxuICAgIH1cbiAgfVxuICByZWNvcmQuaW5zdGFuY2VzLnNsaWNlKCkuZm9yRWFjaChmdW5jdGlvbiAoaW5zdGFuY2UpIHtcbiAgICBpZiAoaW5zdGFuY2UuJHZub2RlICYmIGluc3RhbmNlLiR2bm9kZS5jb250ZXh0KSB7XG4gICAgICBpbnN0YW5jZS4kdm5vZGUuY29udGV4dC4kZm9yY2VVcGRhdGUoKVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLndhcm4oJ1Jvb3Qgb3IgbWFudWFsbHkgbW91bnRlZCBpbnN0YW5jZSBtb2RpZmllZC4gRnVsbCByZWxvYWQgcmVxdWlyZWQuJylcbiAgICB9XG4gIH0pXG59KVxuIiwidmFyIGluc2VydGVkID0gZXhwb3J0cy5jYWNoZSA9IHt9XG5cbmZ1bmN0aW9uIG5vb3AgKCkge31cblxuZXhwb3J0cy5pbnNlcnQgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIGlmIChpbnNlcnRlZFtjc3NdKSByZXR1cm4gbm9vcFxuICBpbnNlcnRlZFtjc3NdID0gdHJ1ZVxuXG4gIHZhciBlbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKVxuICBlbGVtLnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0L2NzcycpXG5cbiAgaWYgKCd0ZXh0Q29udGVudCcgaW4gZWxlbSkge1xuICAgIGVsZW0udGV4dENvbnRlbnQgPSBjc3NcbiAgfSBlbHNlIHtcbiAgICBlbGVtLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzc1xuICB9XG5cbiAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXS5hcHBlbmRDaGlsZChlbGVtKVxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF0ucmVtb3ZlQ2hpbGQoZWxlbSlcbiAgICBpbnNlcnRlZFtjc3NdID0gZmFsc2VcbiAgfVxufVxuIiwidmFyIHBhZ2VzID0gW1xyXG4gICAgWydBMDFf5q2j5Zyo5Yid5aeL5YyW56Gs5Lu25qih5Z2XJywgJ0EwMV9Jbml0RGV2JyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9Jbml0RGV2LnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf6K6+5aSH5Yid5aeL5YyW5aSx6LSlJywgJ0EwMV9Jbml0RGV2RmFpbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9BMDFfSW5pdERldkZhaWwudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/kuqTmmJPov5vooYzkuK3mj5DnpLonLCAnQTAxX2NvbV9UcmFkaW5nJyxcclxuICAgICAgICAnUG9wdXAnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9BMDFfY29tX1RyYWRpbmcudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/kuqTmmJPnu5Pmnpzmj5DnpLrmmK/lkKbmiZPljbDlh63mnaEnLCAnQTAxX2NvbV90cmFuc1Jlc3VsdCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2NvbW1vbi9yZXN1bHQudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/lhazlhbHkv6Hmga/noa7orqTpobXpnaLmoLflvI8nLCAnY3VzX2NvbV9pbmZvcm1hdGlvbkNvbmZpcm0nLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vY3VzX2NvbV9pbmZvcm1hdGlvbkNvbmZpcm0udnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/lhazlhbHkv6Hmga/noa7orqTpobXpnaLkuKTliJfmoLflvI8nLCAnY29tX0RldGFpbF90YWJsZScsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2NvbW1vbi9jb21fRGV0YWlsX3RhYmxlLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf5pel5pyf5YWs5YWx5qC35byPJywgJ0EwMV9jb21fZGF0ZScsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2NvbW1vbi9jb21fZGF0ZS52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnQTAxX+S4i+aLieWFrOWFseagt+W8jycsICdBMDFfY29tX3NlbGVjdCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2NvbW1vbi9jb21fc2VsZWN0LnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf5Yib5bu65LiL5ouJ5YWs5YWx5qC35byPJywgJ0EwMV9jb21fbmV3U2VsZWN0JyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY29tbW9uL2NvbV9uZXdTZWxlY3QudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/mmL7npLrlhazlhbHplJnor6/kv6Hmga8t5pyJ5aOw6Z+zJywgJ0EwMV9TaG93UmVhc29uJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9TaG93UmVhc29uLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf5pi+56S65YWs5YWx6ZSZ6K+v5L+h5oGvLeaXoOWjsOmfsycsICdBMDFfU2hvd1JlYXNvbk5vU291bmQnLFxyXG4gICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9BMDFfU2hvd1JlYXNvbk5vU291bmQudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/mmL7npLrlhazlhbHplJnor6/kv6Hmga/lubbov5Tlm54nLCAnQTAxX1Nob3dSZWFzb25BbmRSZXR1cm4nLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX1Nob3dSZWFzb25BbmRSZXR1cm4udnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/mmL7npLrkuqTmmJPnu5PmnpzvvIjlhazlhbHvvIknLCAnQTAxX1Nob3dUcmFuc1Jlc3VsdCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9BMDFfU2hvd1RyYW5zUmVzdWx0LnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf5YaN5qyh5pi+56S65Lqk5piT57uT5p6c77yI5omT5Y2w5py65pWF6Zqc77yJJywgJ0EwMV9TaG93VHJhbnNSZXN1bHQ0UHJpbnRlckVycm9yJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9TaG93VHJhbnNSZXN1bHQ0UHJpbnRlckVycm9yLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf5pqC5YGc5pyN5Yqh5Y6f5ZugJywgJ0EwMV9PdXRTZXJ2aWNlUmVhc29uJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9PdXRTZXJ2aWNlUmVhc29uLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf5ZCe5Y2h5oqY57uT5p6cJywgJ0EwMV9FamVjdFJlc3VsdCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9BMDFfRWplY3RSZXN1bHQudnVlJylcclxuICAgIF0sICAgICBcclxuICAgIFsnQTAxX+S4u+WvhumSpeacquWKoOi9vScsICdBMDFfTXN0S2V5Tm90TG9hZCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9BMDFfTXN0S2V5Tm90TG9hZC52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnQTAxX+aJk+WNsOWHreadoScsICdBMDFfUHJpbnRSZWNlaXB0JyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9QcmludFJlY2VpcHQudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/miZPljbDlm57ljZUnLCAnQTAxX1ByaW50QTRIVE1MJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9QcmludEE0SFRNTC52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnQTAxX+i+k+WFpeW4kOWPt+WSjOWvhueggScsICdBMDFfSW5wdXRBY2NvdW50QW5kUGFzc3dvcmQnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX0lucHV0QWNjb3VudEFuZFBhc3N3b3JkLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf6YeN5paw6L6T5YWl5biQ5Y+35ZKM5a+G56CBJywgJ0EwMV9JbnB1dEFjY291bnRBbmRQYXNzd29yZEFnYWluJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9JbnB1dEFjY291bnRBbmRQYXNzd29yZEFnYWluLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf5q2j5Zyo6K+75Y2h4oCm4oCmJywgJ0EwMV9DYXJkUmVhZGluZycsXHJcbiAgICAgICAgJ1BvcHVwJywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX0NhcmRSZWFkaW5nLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf5q2j5Zyo6K+76K+B5Lu24oCm4oCmJywgJ0EwMV9JRENhcmRSZWFkaW5nJyxcclxuICAgICAgICAnUG9wdXAnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9BMDFfSURDYXJkUmVhZGluZy52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnQTAxX+ato+WcqOivu+aKmOKApuKApicsICdBMDFfUGFzc2Jvb2tSZWFkaW5nJyxcclxuICAgICAgICAnUG9wdXAnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9BMDFfUGFzc2Jvb2tSZWFkaW5nLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf6YCJ5oup5Lqk5piT5LuL6LSoKDTnp40pJywgJ0EwMV9DaG9vc2VNZWRpYVR5cGUnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX0Nob29zZU1lZGlhVHlwZS52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnQTAxX+i+k+WFpeivgeS7tuS/oeaBryhWaWV3KScsICdBMDFfaW5wdXRJRGluZm8nLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX2lucHV0SURpbmZvLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf6L6T5YWl6K+m57uG6K+B5Lu25L+h5oGvJywgJ0EwMV9JbnB1dE1vcmVJREluZm8nLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX0lucHV0TW9yZUlESW5mby52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnQTAxX+WbnuaYvuivpue7huivgeS7tuS/oeaBrycsICdBMDFfU2hvd01vcmVJREluZm8nLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX1Nob3dNb3JlSURJbmZvLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf5Yqo5oCB5pi+56S66I+c5Y2VJywgJ0EwMV9NZW51JyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9NZW51LnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf6YCJ5oup6K+B5Lu257G75Z6LJywgJ0EwMV9TZWxlY3REb2N1bWVudFR5cGUnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX1NlbGVjdERvY3VtZW50VHlwZS52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnQTAxX+mAieaLqeivgeS7tuexu+WeiyhBTEwpJywgJ0EwMV9TZWxlY3REb2N1bWVudFR5cGVBbGwnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX1NlbGVjdERvY3VtZW50VHlwZUFsbC52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnQTAxX+mAieaLqeivgeS7tuexu+WeizEo6aKE5Yig6ZmkKScsICcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9TZWxlY3REb2N1bWVudFR5cGUuaHRtbCcsXHJcbiAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1NlbGVjdERvY3VtZW50VHlwZS52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnQTAxX+mAieaLqeivgeS7tuexu+WeiyzkuI3lkKvpnZ7kuozku6Por4EnLCAnY3VzdF9jb21fU2VsZWN0U2hlbmZlbmd6aGVuZycsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9TZWxlY3RTaGVuZmVuZ3poZW5nLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf5Lq66IS46K+G5Yir6KeG6aKR5pi+56S66aG16Z2iJywgJ0EwMV9GYWNlQ2FtZXJhJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9GYWNlQ2FtZXJhLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf6YCA5Ye65Y2h5oqY6K+B5o+Q56S6JywgJ0EwMV9UYWtlQ2FyZE9yUGFzc2Jvb2snLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX1Rha2VDYXJkT3JQYXNzYm9vay52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnQTAxX+WbnuaUtuWNoeaKmOivgeaPkOekuicsICdBMDFfUmV0cmFjdENhcmRPclBhc3Nib29rJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9SZXRyYWN0Q2FyZE9yUGFzc2Jvb2sudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/mj5LlhaXpk7booYzljaHmj5DnpLonLCAnQTAxX0lucHV0Q2FyZE9yUGFzc2Jvb2snLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX0lucHV0Q2FyZE9yUGFzc2Jvb2sudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/mj5LlhaXpk7booYzljaHmj5DnpLoo6Z2e5qGM6Z2i5qy+KScsICdBMDFfSW5wdXRDYXJkT3JQYXNzYm9vazInLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX0lucHV0Q2FyZE9yUGFzc2Jvb2syLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf55S15a2Q562+5ZCN5byC5bi45piv5ZCm57un57ut5Lqk5piTJywgJ0EwMV9TaWduRXJyb3InLFxyXG4gICAgICAgICdQb3B1cCcsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9TaWduRXJyb3IudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/lpJblm73kurrlsYXnlZnor4HmmK/lkKbluKboiq/niYfmj5DnpLonLCAnQTAxX0ZvcmVpZ25lclRpcCcsXHJcbiAgICAgICAgJ1BvcHVwJywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX0ZvcmVpZ25lclRpcC52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnQTAxX+WbnuWNleaJk+WNsOaIkOWKnycsICdBMDFfSERQcmludE9LJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9IRFByaW50T0sudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/pq5jmi43ku6rmi43mkYTor4Hku7YnLCAnQTAxX0hpZ25DYW1UYWtlUGhvdG8nLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX0hpZ25DYW1UYWtlUGhvdG8udnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/lrqHmoLjpq5jmi43ku6rmi43mkYTor4Hku7YnLCAnQTAxX0F1dGhIaWdoQ2FtUGljJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9BdXRoSGlnaENhbVBpYy52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnQTAxX+WJjeerr+aMh+e6ueWuoeaguFBERicsICdBMDFfQXVkaXRvclZlcmlmeUlEUERGJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY29tbW9uL0EwMV9BdWRpdG9yVmVyaWZ5SURQREYudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/liY3nq6/mjIfnurnlrqHmoLjlrp7ml7bnmbvorrBQREYnLCAnQTAxX0F1ZGl0b3JWZXJpZnlJRFBERk1hcmtldGluZycsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2NvbW1vbi9BMDFfQXVkaXRvclZlcmlmeUlEUERGTWFya2V0aW5nLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf5YmN56uv5oyH57q55a6h5qC4Tm9QREYnLCAnQTAxX0F1ZGl0b3JWZXJpZnlJRE5vUERGJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY29tbW9uL0EwMV9BdWRpdG9yVmVyaWZ5SUROb1BERi52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnQTAxX+iPnOWNleS4i+i9vScsICdBMDFfRG93bmxvYWRNZW51JyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY29tbW9uL0EwMV9Eb3dubG9hZE1lbnUudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/lj4LmlbDkuIvovb0nLCAnQTAxX0Rvd25sb2FkUGFyYW1zJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY29tbW9uL0EwMV9Eb3dubG9hZFBhcmFtcy52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnQTAxX1VGaWxl5LiL6L29JywgJ0EwMV9Eb3dubG9hZFVGaWxlcycsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2NvbW1vbi9BMDFfRG93bmxvYWRVRmlsZXMudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/lr4bpkqXkuIvovb0nLCAnQTAxX0Rvd25sb2FkV29ya0tleScsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2NvbW1vbi9BMDFfRG93bmxvYWRXb3JrS2V5LnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf5Y+C5pWw5Yid5aeL5YyWJywgJ0EwMV9Jbml0aWFsaXplUGFyYW1zJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY29tbW9uL0EwMV9Jbml0aWFsaXplUGFyYW1zLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf5pWw5o2u5bqT57u05oqk5LitJywgJ0EwMV9EYXRhQmFzZU1nbicsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2NvbW1vbi9BMDFfRGF0YUJhc2VNZ24udnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/mlY/mhJ/kv6Hmga/nu7TmiqTkuK0nLCAnQTAxX1NlbnNpdGl2ZURhdGEnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jb21tb24vQTAxX1NlbnNpdGl2ZURhdGEudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/vvIjnlLPor7fkuabnrb7lkI3vvInnlLXlrZDnrb7lkI0nLCAnQTAxX0VTaWduJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9FU2lnbi52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnQTAxX+mdnuS6jOS7o+ivgeS7tuWkhOeQhicsICdBMDFfRGVhbE5pY3BDYXJkJyxcclxuICAgICAgICAnUG9wdXAnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9BMDFfRGVhbE5pY3BDYXJkLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf5o+Q56S66K+75Y+W6K+B5Lu2JywgJ0EwMV9OZWVkUmVhZENhcmRUaXAnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX05lZWRSZWFkQ2FyZFRpcC52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnQTAxX+W5v+WRiuWxj+etieW+hemhtemdoicsICdBMDFfV2FpdGluZ0ZvckFEJyxcclxuICAgICAgICAnUG9wdXAnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9BMDFfV2FpdGluZ0ZvckFELnZ1ZScpXHJcbiAgICBdLCAgICBcclxuICAgIFsn6ZiF6K+75Y2P6K6u44CQ5omA5pyJ44CRJywgJ0EwMV9TaG93QXBwbGljYXRpb24nLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX1Nob3dBcHBsaWNhdGlvbi52dWUnKVxyXG4gICAgXSxcclxuICAgIFsn5by65Yi25pi+56S65Lqk5piT57uT5p6cJywgJ0EwMV9Gb3JjZVNob3dSZVN1bHQnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX0ZvcmNlU2hvd1JlU3VsdC52dWUnKVxyXG4gICAgXSxcclxuICAgIFsn5piv5ZCm6YCA5Ye655m75b2V5qih5byPJywgJ2N1c3RfaXNMb2dvdXQnLFxyXG4gICAgICAgICdQb3B1cCcsIHJlcXVpcmUoJy4vY29tbW9uL2N1c3RfaXNMb2dvdXQudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+aPkuWFpemTtuihjOWNoeaPkOekuicsICdjdXN0X2NvbV9JbnB1dENhcmQnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fSW5wdXRDYXJkLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyfmmK/lkKbmiZPljbDlh63mnaEnLCAnY3VzdF9jb21fSXNQcmludFJlY2VpcHQnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fSXNQcmludFJlY2VpcHQudnVlJylcclxuICAgIF0sXHJcblxyXG4gICAgWyfmmoLlgZzmnI3liqEnLCAnLi9jdXN0X21haW5fT3V0U2VydmljZS5odG1sJywgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RfbWFpbl9PdXRTZXJ2aWNlLnZ1ZScpXSxcclxuICAgIFsn5pi+56S65L+h5oGvJywgJy4vY3VzdF9TaG93UmVhc29uLmh0bWwnLCAnVmlldycsIHJlcXVpcmUoJy4vY3VzdF9TaG93UmVhc29uLnZ1ZScpXSxcclxuXHJcbiAgICBbJ2NvbeaaguWBnOacjeWKoScsICcuL2NvbW1vbi9jdXN0X21haW5fT3V0U2VydmljZS5odG1sJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY29tbW9uL2N1c3RfbWFpbl9PdXRTZXJ2aWNlLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydjb23mmL7npLrkv6Hmga8nLCAnLi9jb21tb24vY3VzdF9TaG93UmVhc29uLmh0bWwnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jb21tb24vY3VzdF9TaG93UmVhc29uLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydjb23mraPlnKjlpITnkIYnLCAnLi9jb21tb24vY3VzdF9tYWluX1N5c2luZy5odG1sJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY29tbW9uL0EwMV9tYWluX1N5c2luZy52dWUnKVxyXG4gICAgXSxcclxuXHJcbiAgICBbJ+S4u+iPnOWNlScsICcuL2N1c3RvbWVyL2J1c2luZXNzL2N1c3RfYnVzX2luZGV4Lmh0bWwnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9idXNpbmVzcy9jdXN0X2J1c19pbmRleC52dWUnKVxyXG4gICAgXSxcclxuICAgIFsn56m66Zey5bm/5ZGKJywgJy4vY3VzdG9tZXIvYnVzaW5lc3MvY3VzdF9idXNfYWR2ZXJ0aXNlJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvYnVzaW5lc3MvY3VzdF9idXNfYWR2ZXJ0aXNlLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyfov47lrqInLCAnLi9jdXN0b21lci9idXNpbmVzcy9jdXN0X2J1c193ZWxjb21lJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvYnVzaW5lc3MvY3VzdF9idXNfd2VsY29tZS52dWUnKVxyXG4gICAgXSxcclxuXHJcbiAgICBbJ+W4g+WxgOekuuS+i+a1i+ivlScsICcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9MYXlvdXRNYWluRGVtby5odG1sJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX0xheW91dE1haW5EZW1vLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydQb3B1cOekuuS+i+a1i+ivlScsICcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9Qb3B1cERlbW8uaHRtbCcsXHJcbiAgICAgICAgJ1BvcHVwJywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fUG9wdXBEZW1vLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydEaWFsb2fnpLrkvovmtYvor5UnLCAnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fRGlhbG9nRGVtby5odG1sJyxcclxuICAgICAgICAnUG9wdXAnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9EaWFsb2dEZW1vLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydTd2lwZXLnpLrkvovmtYvor5UnLCAnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fU3dpcGVyRGVtby5odG1sJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1N3aXBlckRlbW8udnVlJylcclxuICAgIF0sXHJcbiAgICBbJ21hbnnmtYvor5UnLCAnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fTWFueURlbW8uaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9NYW55RGVtby52dWUnKVxyXG4gICAgXSxcclxuICAgIFsnZWNoYXJ0c+a1i+ivlScsICcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9FQ2hhcnRzRGVtby5odG1sJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX0VDaGFydHNEZW1vLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyfnlYzpnaLkuLvpopjliIfmjaInLCAnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fU3dpdGNoVGhlbWUnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fU3dpdGNoVGhlbWUudnVlJylcclxuICAgIF0sXHJcblxyXG4gICAgWyflvZXlhaXlhbbku5bor4Hku7botYTmlpknLCAnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fSW5zZXJ0T3RoZXJEb2N1bWVudEluZm8uaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9JbnNlcnRPdGhlckRvY3VtZW50SW5mby52dWUnKVxyXG4gICAgXSxcclxuICAgIFsn6IGU572R5qC45p+lJywgJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX05ldENoZWNrLmh0bWwnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fTmV0Q2hlY2sudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+aYr+WQpuaJk+WNsOWHreadoScsICcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9Jc1ByaW50UmVjZWlwdC5odG1sJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX0lzUHJpbnRSZWNlaXB0LnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyfnrKzkuIDmrKHovpPlhaXlr4bnoIEnLCAnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fSW5wdXRQYXNzd29yZC5odG1sJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX0lucHV0UGFzc3dvcmQudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+esrOS4gOasoei+k+WFpeWvhueggTInLCAnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fSW5wdXRQYXNzV29yZC5odG1sJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX0lucHV0UGFzc3dvcmQudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+esrOS6jOasoei+k+WFpeWvhueggScsICcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9JbnB1dFBhc3N3b3JkQWdhaW4uaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9JbnB1dFBhc3N3b3JkQWdhaW4udnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+WvhueggemUmeivr+aPkOekuu+8iOmdnuS4ieasoe+8iScsICcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9JbnB1dFBhc3N3b3JkRXJyb3IuaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9JbnB1dFBhc3N3b3JkRXJyb3IudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+i+k+WFpeivgeS7tuS/oeaBr++8iFBvcHVw77yJJywgJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX0lucHV0RG9jdW1lbnRJbmZvLmh0bWwnLFxyXG4gICAgICAgICdQb3B1cCcsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX0lucHV0RG9jdW1lbnRJbmZvLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyfmj5LlhaXpk7booYzljaHmj5DnpLonLCAnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fSW5wdXRDYXJkLmh0bWwnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fSW5wdXRDYXJkLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyflj5botbDpk7booYzljaHmj5DnpLonLCAnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fVGFrZUNhcmQuaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9UYWtlQ2FyZC52dWUnKVxyXG4gICAgXSxcclxuICAgIFsn5ZCe5Y2h5o+Q56S6JywgJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1JldHJhY3RDYXJkJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1JldHJhY3RDYXJkLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyflj5botbDor4Hku7bvvIjouqvku73or4HpnIDopoHkuKTkuKrvvIzlpLHotKXkuI7miJDlip/vvIknLCAnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fSURvdXQuaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9JRG91dC52dWUnKVxyXG4gICAgXSxcclxuICAgIFsn5Yi36K+B5Lu2JywgJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX0lEaW4uaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9JRGluLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyflrqHmoLjlkZjlrqHmoLgnLCAnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fVmVyaWZ5SWRlbnRpdHkuaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9WZXJpZnlJZGVudGl0eS52dWUnKVxyXG4gICAgXSxcclxuICAgIFsn5Z2Q5bit5a6h5qC477yI5Y2z5ZCO5Y+w5a6h5qC46Lqr5Lu977yJJywgJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1NlYXRWZXJpZnkuaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9TZWF0VmVyaWZ5LnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyfnp7vliqhQQUTlrqHmoLgnLCAnLi9jdXN0b21lci9jb21tb24vQ3VzdF9QYWRfQ2hlY2snLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQ3VzdF9QYWRfQ2hlY2sudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+S6pOaYk+i/m+ihjOS4reaPkOekuicsICcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9UcmFkaW5nLmh0bWwnLFxyXG4gICAgICAgICdQb3B1cCcsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1RyYWRpbmcudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+S6pOaYk+aIkOWKn+aPkOekuicsICcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9UcmFkZVN1Y2Nlc3MuaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9UcmFkZVN1Y2Nlc3MudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+S6pOaYk+Wksei0peaPkOekuicsICcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9UcmFkZUZhaWxlZC5odG1sJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1RyYWRlRmFpbGVkLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyflj5botbDlh63mnaHmj5DnpLonLCAnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fVGFrZVJlY2VpcHQuaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9UYWtlUmVjZWlwdC52dWUnKVxyXG4gICAgXSxcclxuXHJcbiAgICBbJ+WuoeaguOWRmOW9leWFpeaMh+e6uScsICcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9GaW5nZXJEaXN0aW5ndWlzaC5odG1sJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX0ZpbmdlckRpc3Rpbmd1aXNoLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyflrqHmoLjlkZjpgInmi6lPcui+k+WFpeaMh+e6uee8luWPtycsICcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9BdWRpdG9yVmVyaWZ5SUQuaHRtbCcsXHJcbiAgICAgICAgJ1BvcHVwJywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fQXVkaXRvclZlcmlmeUlELnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyfvvIjnlLPor7fkuabnrb7lkI3vvInlsZXnpLrnlLPor7fkuablj4rnrb7lkI3nu5PmnpwnLCAnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fU2hvd1NpZ25SZXN1bHQuaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9TaG93U2lnblJlc3VsdC52dWUnKVxyXG4gICAgXSxcclxuICAgIFsn77yI55Sz6K+35Lmm562+5ZCN77yJ5bGV56S655Sz6K+35Lmm5Y+K5o+Q56S6JywgJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1Nob3dBcHBsaWNhdGlvbi5odG1sJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1Nob3dBcHBsaWNhdGlvbi52dWUnKVxyXG4gICAgXSxcclxuICAgIFsn5omT5Y2w55Sz6K+35LmmJywgJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1ByaW50QXBwbGljYXRpb24uaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9QcmludEFwcGxpY2F0aW9uLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyflj5botbDnlLPor7fkuaYnLCAnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fVGFrZUFwcGxpY2F0aW9uLmh0bWwnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fVGFrZUFwcGxpY2F0aW9uLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyfmlL7lhaXnlLPor7fkuaYnLCAnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fUHV0QXBwbGljYXRpb24uaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9QdXRBcHBsaWNhdGlvbi52dWUnKVxyXG4gICAgXSxcclxuICAgIFsn77yI5Z+O5biC6YCJ5oup5Zmo77yJ55yB5biC5Yy65LiJ57qn6IGU5Yqo6YCJ5oupJywgJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX0NpdHlTZWxlY3Rvci5odG1sJyxcclxuICAgICAgICAnUG9wdXAnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9DaXR5U2VsZWN0b3IudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+aYr+WQpue7k+adn+S6pOaYk+aPkOekuuW8ueahhicsICcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9UcmFkZUZpbmlzaFRpcC5odG1sJyxcclxuICAgICAgICAnUG9wdXAnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9UcmFkZUZpbmlzaFRpcC52dWUnKVxyXG4gICAgXSxcclxuICAgIFsn5Lq66IS45a6h5qC457mB5b+Z5o+Q56S65by55qGGJywgJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1ZlcnRpZnlCdXN5VGlwLmh0bWwnLFxyXG4gICAgICAgICdQb3B1cCcsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1ZlcnRpZnlCdXN5VGlwLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyfmmL7npLrplJnor6/mj5DnpLrkv6Hmga8nLCAnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fU2hvd1JlYXNvbi5odG1sJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1Nob3dSZWFzb24udnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+aYvuekuumUmeivr+S/oeaBrycsICcuL2N1c3RvbWVyL2NvbW1vbi9DdXN0X1Nob3dSZWFzb24uaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9DdXN0X1Nob3dSZWFzb24udnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+S6pOaYk+aIkOWKn+aPkOekuicsICcuL2N1c3RfY29tX1RyYWRlU3VjY2Vzcy5odG1sJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1RyYWRlU3VjY2Vzcy52dWUnKVxyXG4gICAgXSxcclxuICAgIFsn6K+35Y+W6LWw5oKo55qE6ZO26KGM5Y2hJywgJy4vY3VzdF9jb21fVGFrZUNhcmQnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vY3VzdF9jb21fVGFrZUNhcmQudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+aYvuekuuWFrOWFseaIkOWKn+S/oeaBrycsICcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9UcmFkZVN1Y2Nlc3MuaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9UcmFkZVN1Y2Nlc3MudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+aYvuekuuWFrOWFsemUmeivr+S/oeaBrzEnLCAnLi9jdXN0b21lci9jb21tb24vQ3VzdF9TaG93UmVhc29uLmh0bWwnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQ3VzdF9TaG93UmVhc29uLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyfmmL7npLrlhazlhbHplJnor6/kv6Hmga8yJywgJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1Nob3dSZWFzb24uaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9DdXN0X1Nob3dSZWFzb24udnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+i+k+WFpeivgeS7tuS/oeaBr+S+i+WtkCcsICcuL2RlbW8vY29tX2lucHV0SURpbmZvLmh0bWwnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9kZW1vL2NvbV9pbnB1dElEaW5mby52dWUnKVxyXG4gICAgXSxcclxuICAgIFsn55CG6LSi5Lqn5ZOB6K6k6LStL+eUs+i0reS/oeaBr+Whq+WGmeS+i+WtkCcsICcuL2RlbW8vY29tX2J1eVByb2R1Y3RJbmZvLmh0bWwnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9kZW1vL2NvbV9idXlQcm9kdWN0SW5mby52dWUnKVxyXG4gICAgXSxcclxuICAgIFsn5YCf6K6w5Y2h5Lqk5piT5a6J5YWo6ZSBJywgJy4vZGVtby90cmFuX3NhZmV0eV9rZXkuaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2RlbW8vdHJhbl9zYWZldHlfa2V5LnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyfkuKrkurrnqI7mlLblsYXmsJHouqvku73lo7DmmI4nLCAnLi9kZW1vL2lkZW50aXR5X3N0YXRlbWVudC5odG1sJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vZGVtby9pZGVudGl0eV9zdGF0ZW1lbnQudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+a7muWKqOadoeS+i+WtkCcsICcuL2RlbW8vc2Nyb2xsLmh0bWwnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9kZW1vL3Njcm9sbC52dWUnKVxyXG4gICAgXSxcclxuICAgIFsn6L+O5a6iJywgJy4vZGVtby93ZWxjb21lLmh0bWwnLFxyXG4gICAgICAgICdWaWV3JywgcmVxdWlyZSgnLi9kZW1vL3dlbGNvbWUudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+eUn+aXpScsICcuL2RlbW8vYmlydGhkYXkuaHRtbCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2RlbW8vYmlydGhkYXkudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+aMgeacieWfuumHkeS6p+WTgeS/oeaBr+S+i+WtkCcsICcuL2RlbW8vY29tX2hvbGRGdW5kTGlzdC5odG1sJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vZGVtby9jb21faG9sZEZ1bmRMaXN0LnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWydBMDFf57K+5YeG6JCl6ZSAJywgJ2N1c3RfY29tX2lzTG9naW5PdXRBbmRTaG93U2FsZUluZm8nLFxyXG4gICAgICAgICdQb3B1cCcsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX2lzTG9naW5PdXRBbmRTaG93U2FsZUluZm8udnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/po47pmanor4TkvLDlt7Lov4fmnJ8nLCAnQTAxX1Jpc2tFeHBpcmVkVGlwJyxcclxuICAgICAgICAnUG9wdXAnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9BMDFfUmlza0V4cGlyZWRUaXAudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ0EwMV/po47pmanor4TkvLDmnKror4TkvLAnLCAnQTAxX05vdFJpc2tUaXAnLFxyXG4gICAgICAgICdQb3B1cCcsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9Ob3RSaXNrVGlwLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyfmmK/lkKbooaXnmbvmipgnLCAnY3VzdF9jb21fSWZCb251c1JlY29yZCcsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9JZkJvbnVzUmVjb3JkLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyfmmL7npLrniYjmnKzov4fkvY7mj5DnpLrpobXpnaInLCAnQTAxX1Nob3dWZXJzaW9uJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9TaG93VmVyc2lvbi52dWUnKVxyXG4gICAgXSxcclxuICAgIFsn5pi+56S65py65Zmo5pyq6YeN5ZCv6aG16Z2iJywgJ0EwMV9TaG93UmVib290VGVybScsXHJcbiAgICAgICAgJ1ZpZXcnLCByZXF1aXJlKCcuL2N1c3RvbWVyL2NvbW1vbi9BMDFfU2hvd1JlYm9vdFRlcm0udnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+aYvuekuuiuvuWkh+aVhemanOaIluacqumFjee9rumhtemdoicsICdBMDFfU2hvd0RldmljZUVycm9yJyxcclxuICAgICAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9TaG93RGV2aWNlRXJyb3IudnVlJylcclxuICAgIF0sXHJcbiAgICBbJ+aaguWBnOacjeWKoemhtemdoicsICdBMDFfT3V0U2VydmljZScsXHJcbiAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9PdXRTZXJ2aWNlLnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyfkv6Hmga/msrvnkIbmmL7npLrpobXpnaInLCAnQTAxX1Nob3dSZWFzb25Gb3JDdXN0TW50JyxcclxuICAgICdWaWV3JywgcmVxdWlyZSgnLi9jdXN0b21lci9jb21tb24vQTAxX1Nob3dSZWFzb25Gb3JDdXN0TW50LnZ1ZScpXHJcbiAgICBdLFxyXG4gICAgWyfmqKHns4rmo4DntKInLCAnQTAxX1NlYXJjaCcsXHJcbiAgICAnVmlldycsIHJlcXVpcmUoJy4vY3VzdG9tZXIvY29tbW9uL0EwMV9TZWFyY2gudnVlJylcclxuICAgIF1cclxuXVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcGFnZXMiLCJ2YXIgX192dWVpZnlfc3R5bGVfZGlzcG9zZV9fID0gcmVxdWlyZShcInZ1ZWlmeS9saWIvaW5zZXJ0LWNzc1wiKS5pbnNlcnQoXCIvKuaooeaAgeahhuaViOaenCovXFxyXFxuLngtbW9kYWwge1xcclxcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICAgIHdpZHRoOiA1NSU7XFxyXFxuICAgIGhlaWdodDogNjUlO1xcclxcbiAgICBtYXJnaW46IDEwJSBhdXRvO1xcclxcbiAgICBiYWNrZ3JvdW5kOiAjZTdmYWY4O1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xcclxcbn1cXHJcXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjgwcHgpIHsgXFxyXFxuLngtbW9kYWx7XFxyXFxuICAgaGVpZ2h0OiA2MCU7XFxyXFxufVxcclxcblxcclxcbn1cXHJcXG4ubW9kYWxfYnRuYm94e1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIGJvdHRvbTogMTAlO1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbn1cXHJcXG4ubW9kYWxfdGl0bGV7XFxyXFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gICAgd2lkdGg6IDkwJTtcXHJcXG4gICAgaGVpZ2h0OiAxMCU7XFxyXFxuICAgIG1hcmdpbjogMCBhdXRvO1xcclxcbiAgICBwYWRkaW5nOiAyOHB4IDEwcHggMTBweCAwcHg7XFxyXFxuICAgIGZvbnQtc2l6ZTogM3JlbTtcXHJcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXHJcXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNDQ0M7XFxyXFxufVxcclxcbi5tb2RhbCAubWRfY2VudGVyX3RpdGxle1xcclxcbiAgICB3aWR0aDogODAlO1xcclxcbiAgICBmb250LXNpemU6IDNyZW07XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgbWFyZ2luOiAyMCUgYXV0bztcXHJcXG59XFxyXFxuLm1vZGFsX3RpbWV7XFxyXFxuICAgIHdpZHRoOiA1NHB4O1xcclxcbiAgICBoZWlnaHQ6IDU0cHg7XFxyXFxuICAgIGxpbmUtaGVpZ2h0OiA1NHB4O1xcclxcbiAgICBtYXJnaW4tdG9wOjEwcHg7XFxyXFxuICAgIGJhY2tncm91bmQ6IHVybCguLi9pbWcvdGltZTEuZ2lmKSBuby1yZXBlYXQ7XFxyXFxuICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJSAxMDAlO1xcclxcbiAgICBjb2xvcjpyZWQ7XFxyXFxuICAgIGZvbnQtc2l6ZTogMi4zcmVtO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xcclxcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcXHJcXG4gICAgcmlnaHQ6MTAlO1xcclxcbiAgICB0b3A6NSU7XFxyXFxufVwiKVxudmFyIF9fdnVlX19vcHRpb25zX18gPSAodHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcImZ1bmN0aW9uXCI/IG1vZHVsZS5leHBvcnRzLm9wdGlvbnM6IG1vZHVsZS5leHBvcnRzKVxuaWYgKF9fdnVlX19vcHRpb25zX18uZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlaWZ5XSBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgYW5kIHNob3VsZCBiZSBkZWZpbmVkIGluIHBsYWluIGpzIGZpbGVzIHVzaW5nIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuX192dWVfX29wdGlvbnNfXy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljU3R5bGU6e1wid2lkdGhcIjpcIjEwMCVcIixcImhlaWdodFwiOlwiMTAwJVwifX0sW19jKF92bS4kcm9vdC5jdXJyZW50Vmlldyx7dGFnOlwiY29tcG9uZW50XCJ9KSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLHtzdGF0aWNTdHlsZTp7XCJkaXNwbGF5XCI6XCJub25lXCJ9LGF0dHJzOntcImlkXCI6XCJwYWdlUG9wdXBcIn19LFtfYyhfdm0uJHJvb3QuY3VycmVudFBvcHVwLHt0YWc6XCJjb21wb25lbnRcIn0pXSwxKSxfdm0uX3YoXCIgXCIpLF9jKCd4LWRlYnVnLXBhZ2UnKV0sMSl9XG5fX3Z1ZV9fb3B0aW9uc19fLnN0YXRpY1JlbmRlckZucyA9IFtdXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7ICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCB0cnVlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBtb2R1bGUuaG90LmRpc3Bvc2UoX192dWVpZnlfc3R5bGVfZGlzcG9zZV9fKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtZTFhYjgzMDRcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LWUxYWI4MzA0XCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH1cbn0pKCl9IiwiPHN0eWxlIHNjb3BlZD5cclxuLm5pY2Utc2VsZWN0IHtcclxuICAgIHdpZHRoOiA3MCU7XHJcbn1cclxuPC9zdHlsZT5cclxuXHJcbjx0ZW1wbGF0ZT5cclxuICAgIDxkaXY+XHJcbiAgICAgICAgPHgtaGVhZGVyPjwveC1oZWFkZXI+XHJcbiAgICAgICAgPEVNQkVEIG5hbWU9XCJWaWV3U291bmRcIiBTUkM9XCJ3YXYv6K+36IGU57O75a6h5qC45ZGY6L6T5YWl5oyH57q557yW5Y+3LndhdlwiIExvb3A9ZmFsc2UgQVVUT1NUQVJUPXRydWUgSGlkZGVuPXRydWUgTUFTVEVSU09VTkQ+PC9FTUJFRD5cclxuXHRcdDxtYWluIGNsYXNzPVwibWFpblwiPiAgICBcclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRlbnRfY1wiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRlbnRfbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbWcgaWQ9XCJJTUdcIiA6c3JjPVwiJHJvb3QuaW1nUGF0aCgnaW1nLycrJHJvb3QuZ2V0SW1nUGF0aCgpKydTY2FuRmluZ2VyLmdpZicpXCIgPlxyXG4gICAgICAgICAgICAgICAgPC9kaXYgPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRlbnRfclwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwicl90aXRsZVwiPuW3peS9nOS6uuWRmOWuoeaguDwvcD5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicl9jb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuaWNlLXNlbGVjdFwiIG5hbWU9XCJuaWNlLXNlbGVjdFwiIHN0eWxlPVwiei1pbmRleDoyMDA2MFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgaWQ9XCJhdWRpdG9yXCIgdHlwZT1cInRleHRcIiAgcmVhZG9ubHk+PC9wPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJfY29udGVudF9kaXYyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBpZD1cIkF1ZGl0VGlwc1wiPjwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxicj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJfY29udGVudF9kaXYzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGlkPVwiRXJyb3JJbmZvXCI+PC9wPiBcclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIDwhLS0gPGRpdiBpZD1cIm1hcmtldElkXCIgQGNsaWNrPVwibWFueVRlc3RcIj7kuJrnu6k8YnI+55m76K6wPGJyPue7tOaKpDwvZGl2PiDlrp7ml7bnmbvorrDpg6jliIbmtonlj4rlhazlhbHpobXpnaIs5pqC5pe25bGP6JS9LS0+XHJcblxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvbWFpbj5cclxuXHJcbiAgICAgICAgPHgtZGlhbG9nLXNlbGVjdE5vdyA6c2hvdz1cInNob3dNYXJrZXRlclwiIDpjaGlsZFNob3c9XCJzaG93UGVyc29uXCIgdGl0bGU9XCLokKXplIDkurrlkZhcIlxyXG5cdFx0XHQ6ZGF0YT1cIm1hcmtldGVyRGF0YVwiXHJcbiAgICAgICAgICAgIDp2YWx1ZT1cIm1hcmtldGVyQ29kZVwiXHJcblx0XHRcdEBjYW5jZWw9XCJvbk1hbnlDYW5jZWxcIiBAY29uZmlybT1cIm9uQ2hvb3NlTGV2ZWxcIiBAaW5zZXJ0TmFtZT1cIm9uSW5zZXJ0TmFtZVwiIDpjaGlsZERhdGE9XCJuYW1lNFZhbHVlXCIgPlxyXG5cdFx0PC94LWRpYWxvZy1zZWxlY3ROb3c+XHJcbiAgICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuPHNjcmlwdD4gXHJcbmltcG9ydCB7IG1hcFN0YXRlLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCcgXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBkYXRhICgpIHsgICAgICAgIFxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGdldEtleXM6IFsnRDAwX0QwMl9tYXJrZXRQZXJzb25JZExpc3QnXSxcclxuICAgICAgICAgICAgc2V0S2V5czogWydEMDBfRDAyX21hcmtldFBlcnNvbk5vdzEnLCdEMDBfRDAyX21hcmtldFBlcnNvbk5vdzInLCdEMDBfRDAyX21hcmtldFBlcnNvbk5vdzMnLCdEMDBfRDAyX21hcmtldFBlcnNvbk5vdzQnXSxcclxuXHRcdFx0aWlkOicnLFxyXG5cdFx0XHRzaG93TmFtZTonJyxcclxuICAgICAgICAgICAgbmFtZTRWYWx1ZTonJyxcclxuICAgICAgICAgICAgbmFtZTFWYWw6JycsXHJcbiAgICAgICAgICAgIG5hbWUyVmFsOicnLFxyXG4gICAgICAgICAgICBuYW1lM1ZhbDonJyxcclxuICAgICAgICAgICAgbmFtZTRWYWw6JycsXHJcblxyXG5cdFx0XHRtYXJrZXRlck5hbWU6IFwiXCIsXHJcblx0XHRcdG1hcmtldGVyQ29kZTogXCJcIixcclxuICAgICAgICAgICAgc2hvd01hcmtldGVyOiBmYWxzZSxcclxuICAgICAgICAgICAgc2hvd1BlcnNvbjpmYWxzZVxyXG4gICAgICAgIH1cclxuXHR9LFxyXG4gICAgbWV0aG9kczp7XHJcbiAgICBpbml0UGFnZSAoKSB7XHJcbiAgICAgICAgdGhpcy5pbml0UG9vbCh0aGlzLiRkYXRhKVxyXG5cdH0sXHJcblx0bWFueVRlc3QgKCkge1xyXG4gICAgICAgdGhpcy5zaG93TWFya2V0ZXIgPSB0cnVlO1xyXG4gICAgICAgc2V0VmFyKFwiRDAwX0QwMl9oYXNSZWdpc3RlZFwiLDEpOy8v6KGo56S66L+b6KGM5LqG5a6e5pe255m76K6wXHJcbiAgICB9LFxyXG4gICAgb25NYW55Q2FuY2VsICgpIHtcclxuICAgICAgIHRoaXMuc2hvd01hcmtldGVyID0gZmFsc2U7XHJcblxyXG4gICAgfSxcclxuICAgIG9uSW5zZXJ0TmFtZSgpe1xyXG4gICAgICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICAgICAgdm0uaWlkPWRvY3VtZW50LmFjdGl2ZUVsZW1lbnQuaWQ7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJcIit2bS5paWQrXCJcIikudmFsdWU9XCJcIjtcclxuLy8gXHRcdFx0YWxlcnQoXCLlvZPliY3ngrnlh7vnmoRpZFwiK3ZtLmlpZCk7XHJcbi8vIFx0XHRcdGFsZXJ0KFwi5byA5ZCv5by55qGGXCIpO1xyXG4gwqDCoMKgwqDCoMKgwqB2bS5zaG93UGVyc29uPXRydWU7XHJcbiAgICB9LFxyXG4gICAgb25DaG9vc2VMZXZlbCAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgICBcclxuXHQgICB0aGlzLm1hcmtldGVyQ29kZSA9IGl0ZW0udmFsdWU7XHJcblx0ICAgdGhpcy5tYXJrZXRlck5hbWUgPSBpdGVtLmtleTtcclxuXHQgIC8vYWxlcnQoaXRlbS5rZXkpO1xyXG5cdCAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiXCIrdGhpcy5paWQrXCJcIikudmFsdWU9XCJcIitpdGVtLmtleTtcclxuXHQgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlwiK3RoaXMuaWlkK1wiXCIpLm5hbWU9XCJcIitpdGVtLnZhbHVlO1xyXG4gICAgICAgdmFyIHRycj1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlwiK3RoaXMuaWlkK1wiXCIpLnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaW5wdXRcIik7XHJcbiAgICAgICB0cnJbM10ubmFtZT0kKFwiI2F1ZGl0b3JcIikuaHRtbCgpO1xyXG5cdCAgIGZvcih2YXIgaT0wO2k8dHJyLmxlbmd0aC0xO2krKyl7XHJcblx0XHQgICBpZih0cnJbaV0udmFsdWU9PVwiXCJ8fHRycltpXS52YWx1ZT09bnVsbCl7XHJcbiAgICAgICAgICAgICAgIHRycltpXS52YWx1ZT1pdGVtLmtleTtcclxuICAgICAgICAgICAgICAgdHJyW2ldLm5hbWU9aXRlbS52YWx1ZTtcclxuXHRcdCAgIH1cclxuICAgICAgIH1cclxuICAgICAgIHZhciBuYW1lMT10cnJbMF0ubmFtZStcInxcIit0cnJbMF0udmFsdWU7XHJcbiAgICAgICB2YXIgbmFtZTI9dHJyWzFdLm5hbWUrXCJ8XCIrdHJyWzFdLnZhbHVlO1xyXG4gICAgICAgdmFyIG5hbWUzPXRyclsyXS5uYW1lK1wifFwiK3RyclsyXS52YWx1ZTtcclxuICAgICAgIHZhciBuYW1lND10cnJbM10ubmFtZStcInxcIit0cnJbM10udmFsdWU7XHJcbiAgICAgICB0aGlzLm5hbWUxVmFsPW5hbWUxO1xyXG4gICAgICAgdGhpcy5uYW1lMlZhbD1uYW1lMjtcclxuICAgICAgIHRoaXMubmFtZTNWYWw9bmFtZTM7XHJcbiAgICAgICB0aGlzLm5hbWU0VmFsPW5hbWU0O1x0XHJcbiAgICAgICBzZXRWYXIoXCJEMDBfRDAyX21hcmtldFBlcnNvbk5vdzFcIixuYW1lMSk7XHJcbiAgICAgICBzZXRWYXIoXCJEMDBfRDAyX21hcmtldFBlcnNvbk5vdzJcIixuYW1lMik7XHJcbiAgICAgICBzZXRWYXIoXCJEMDBfRDAyX21hcmtldFBlcnNvbk5vdzNcIixuYW1lMyk7XHJcbiAgICAgICBzZXRWYXIoXCJEMDBfRDAyX21hcmtldFBlcnNvbk5vdzRcIixuYW1lNCk7XHJcbiAgICAvLyAgICBhbGVydCh0aGlzLm5hbWU0VmFsdWUpO1xyXG4gICAgLy8gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuYW1lNFwiKS52YWx1ZT10aGlzLm5hbWU0VmFsdWU7XHJcbiAgICB0aGlzLnNob3dQZXJzb249ZmFsc2U7XHJcblx0dGhpcy5zaG93TWFya2V0ZXIgPSB0cnVlO1xyXG4gICAgfSxcclxuXHQgIG9uQ2FuY2VsICgpIHtcclxuICAgICAgIHRoaXMuc2hvd01hcmtldGVyID0gZmFsc2U7XHJcbiAgICB9LFxyXG4gICAgLi4ubWFwQWN0aW9ucyhbJ2luaXRQb29sJywgJ2ZldGNoJywgJ3N1Ym1pdCcsICdvbkNhbmNlbCcsICdvbkNvbnRpbnVlJ10pXHJcbn0sXHJcbiAgICBjcmVhdGVkICgpe8KgwqDCoFxyXG4gICAgwqDCoMKgwqB2YXIgdm0gPSB0aGlzO1xyXG4gICAgwqDCoMKgwqDCoMKgwqDCoC8v55uR5ZCs6KGM5LqL5Lu2XHJcbiAgICAgICAgdGhpcy4kcm9vdC4kb24oJ29uQ2xpY2tCdXR0b24nLCBvbkNsaWNrQnV0dG9uKTtcclxuICAgICAgICBmdW5jdGlvbiBvbkNsaWNrQnV0dG9uKHNlbCkgXHJcbiAgICAgICAge1xyXG4gICAgICAgIMKgwqDCoMKgwqB2bS5paWQ9ZG9jdW1lbnQuYWN0aXZlRWxlbWVudC5pZDtcclxuICAgICAgICDCoMKgwqDCoMKgwqDCoMKgdm0ubWFueVRlc3QoKTtcclxuICAgICAgICAgICAgIH07XHJcbiAgICB9LFxyXG4gICAgZGVzdHJveWVkICgpIFxyXG4gICAgeyBcclxuICAgICAgICB0aGlzLiRyb290LiRvZmYoJ29uQ2xpY2tCdXR0b24nKTsgXHJcbiAgICB9LFxyXG4gICAgbW91bnRlZCgpe1xyXG4gICAgICAgIHRoaXMuaW5pdFBvb2wodGhpcy4kZGF0YSk7XHJcbiAgICAgICAgdmFyIHZtPXRoaXM7XHJcbiAgICAgICAgdm0ubWFya2V0ZXJEYXRhPUpTT04ucGFyc2UoJ1t7XCJrZXlcIjpcIuWwj+mxvFwiLFwidmFsdWVcIjpcIjlcIn0se1wia2V5XCI6XCLlsI/psbxcIixcInZhbHVlXCI6XCI5XCJ9LHtcImtleVwiOlwi5bCP5ZGoXCIsXCJ2YWx1ZVwiOlwiOFwifSx7XCJrZXlcIjpcIumDkeWljlwiLFwidmFsdWVcIjpcIjdcIn0se1wia2V5XCI6XCLlvKDkuIlcIixcInZhbHVlXCI6XCIxXCJ9LHtcImtleVwiOlwi5p2O5ZubXCIsXCJ2YWx1ZVwiOlwiMlwifSx7XCJrZXlcIjpcIueOi+S6jFwiLFwidmFsdWVcIjpcIjNcIn0se1wia2V5XCI6XCLlsI/mmI5cIixcInZhbHVlXCI6XCI0XCJ9LHtcImtleVwiOlwi5p2O5ZubXCIsXCJ2YWx1ZVwiOlwiMlwifSx7XCJrZXlcIjpcIueOi+S6jFwiLFwidmFsdWVcIjpcIjNcIn0se1wia2V5XCI6XCLmnY7lm5tcIixcInZhbHVlXCI6XCIyXCJ9LHtcImtleVwiOlwi546L5LqMXCIsXCJ2YWx1ZVwiOlwiM1wifV0nKTtcclxuICAgIERhdGFUb29scy5nZXQoXCJHRF9BMDFfTWFuYWdlclVzZXJ8R0RfTWF4VGltZUZvckZpbmdlcnxHRF9Vc3JOdW18R0RfQTAxX01lbnVJRFwiLGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIHZhciBqc29uQXJyYXlEYXRhID1cIlwiO1xyXG4gICAgICAgIGlmICggZGF0YVswXSAhPSB1bmRlZmluZWQgJiYgZGF0YVswXSAhPSBudWxsICkgeyAgICAgICAgIFxyXG4gICAgICAgICAgICBqc29uQXJyYXlEYXRhID0gSlNPTi5wYXJzZShkYXRhWzBdKTtcclxuICAgICAgICAgICAgdmFyIGF1ZGl0b3JJZD1uZXcgQXJyYXkoKTtcclxuICAgICAgICAgICAgdmFyIGF1ZGl0b3JOYW1lPW5ldyBBcnJheSgpO1xyXG4gICAgICAgICAgICBpZihqc29uQXJyYXlEYXRhLmxlbmd0aCA9PSAwKXsvL+WIl+ihqOS4uuepulxyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfRXJyUmVhc29uXCIsXCJBdWRpdG9yTGlzdEVtcHR5XCIpO1xyXG4gICAgICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0FVRElUT1JFTVBUWVwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGpzb25BcnJheURhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGF1ZGl0b3JJZC5wdXNoKGpzb25BcnJheURhdGFbaV0udXNlck51bSk7XHJcbiAgICAgICAgICAgICAgICBhdWRpdG9yTmFtZS5wdXNoKGpzb25BcnJheURhdGFbaV0udXNlck51bSk7Ly/lj6rmmL7npLrnlKjmiLfnvJbnoIFcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjcmVhdGVTZWxlY3QoYXVkaXRvcklkLGF1ZGl0b3JOYW1lLFwiYXVkaXRvclwiKTsgICAgICAgXHJcbiAgICAgICAgICAgaWYoZGF0YVsyXSE9XCJcIiYmZGF0YVsyXSE9bnVsbCl7XHJcbiAgICAgICAgICAgICAgICAkKFwiI2F1ZGl0b3JcIikuaHRtbChkYXRhWzJdKTtcclxuICAgICAgICAgICAgICAgICQoXCIjYXVkaXRvclwiKS5hdHRyKCdkYXRhLXZhbHVlJyxkYXRhWzJdKTtcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX1Vzck51bVwiLGRhdGFbMl0pO1xyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQTAxX051bVVyQ2ZnXCIsZGF0YVsyXSk7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgJChcIiNhdWRpdG9yXCIpLmh0bWwoYXVkaXRvck5hbWVbMF0pO1xyXG4gICAgICAgICAgICAgICAgJChcIiNhdWRpdG9yXCIpLmF0dHIoJ2RhdGEtdmFsdWUnLGF1ZGl0b3JJZFswXSk7XHJcblxyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfVXNyTnVtXCIsYXVkaXRvck5hbWVbMF0pO1xyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQTAxX051bVVyQ2ZnXCIsYXVkaXRvck5hbWVbMF0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgIH1lbHNley8v5YiX6KGo5Li656m6XHJcbiAgICAgICAgICAgIHNldFZhcihcIkdEX0VyclJlYXNvblwiLFwiQXVkaXRvckxpc3RFbXB0eVwiKTtcclxuICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0FVRElUT1JFTVBUWVwiKTtcclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAvL+aPkOekuuS/oeaBr+WPguaVsOWMlu+8iOi9rOi0puWPljAwMDg377yM5YW25L2Z6buY6K6k6K6+572u77yJXHJcbiAgICAgICAgdmFyIHN0ck1lbnVJRCA9IGRhdGFbM107XHJcbiAgICAgICAgdmFyIHN0ck1zZ1RpcCA9IFwiXCI7XHJcbiAgICAgICAgdmFyIHN0ck1zZyA9IFwiXCI7XHJcbiAgICAgICAgaWYoc3RyTWVudUlEID09IFwiMDMwMDAxXCIpe1xyXG4gICAgICAgICAgICAvL2lmIChTaG93RGl2TGlzdCAhPSBcIlwiICYmIFNob3dEaXZMaXN0ICE9IG51bGwgJiYgU2hvd0Rpdkxpc3QgIT0gdW5kZWZpbmVkKXsgICBcclxuICAgICAgICAgICAgLy8gICAgdmFyIEpzb25Nc2dUaXAgPSBKU09OLnBhcnNlKFNob3dEaXZMaXN0KTtcclxuICAgICAgICAgICAgLy8gICAgZm9yKHZhciBpID0gMDtpPEpzb25Nc2dUaXAubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgICAgIC8vICAgICAgICBpZihKc29uTXNnVGlwW2ldWycwMDA4NyddICE9IFwiXCIgJiYgSnNvbk1zZ1RpcFtpXVsnMDAwODcnXSAhPSBudWxsICYmIEpzb25Nc2dUaXBbaV1bJzAwMDg3J10hPSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgLy8gICAgICAgICAgICBzdHJNc2dUaXAgPSBKc29uTXNnVGlwW2ldWycwMDA4NyddO1xyXG4gICAgICAgICAgICAvLyAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyAgICB9XHJcbiAgICAgICAgICAgIC8vfVxyXG4gICAgICAgICAgICAvL2lmKHN0ck1zZ1RpcCAhPSBcIlwiICYmIHN0ck1zZ1RpcCAhPSBudWxsICYmIHN0ck1zZ1RpcCAhPSB1bmRlZmluZWQpe1xyXG4gICAgICAgICAgICAvLyAgICB2YXIgc3RyTXNnVGlwQXJyYXkgPSBzdHJNc2dUaXAuc3BsaXQoXCJAQFwiKTtcclxuICAgICAgICAgICAgLy8gICAgZm9yICh2YXIgaT0wOyBpPHN0ck1zZ1RpcEFycmF5Lmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgLy8gICAgICAgIGlmKHN0ck1zZyA9PSBcIlwiKXtcclxuICAgICAgICAgICAgLy8gICAgICAgICAgICBzdHJNc2cgPSBzdHJNc2dUaXBBcnJheVtpXTtcclxuICAgICAgICAgICAgLy8gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgIHN0ck1zZyA9IHN0ck1zZyArIFwiPGJyPlwiICsgc3RyTXNnVGlwQXJyYXlbaV07XHJcbiAgICAgICAgICAgIC8vICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vICAgIH1cclxuICAgICAgICAgICAgLy99XHJcbiAgICAgICAgICAgIC8vaWYoc3RyTXNnICE9IFwiXCIgJiYgc3RyTXNnICE9IG51bGwgJiYgc3RyTXNnICE9IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgIC8vICAgICQoXCIjQXVkaXRUaXBzXCIpLmh0bWwoc3RyTXNnKTtcclxuICAgICAgICAgICAgLy99ZWxzZXtcclxuICAgICAgICAgICAgLy8gICAgJChcIiNBdWRpdFRpcHNcIikuaHRtbChcIjEu6K+35qC45a6e6K+l56yU5Lia5Yqh5piv5ZCm5Li65a6i5oi35pys5Lq65Yqe55CGXCIpO1xyXG4gICAgICAgICAgICAvL31cclxuICAgICAgICAgICAgJChcIiNBdWRpdFRpcHNcIikuaHRtbChcIjEu6K+35o+Q6YaS5a6i5oi35rOo5oSP6LWE6YeR5a6J5YWo77yM6LCo6Ziy55S15L+h6K+I6aqXPGJyPjIu5o+Q6YaS5a6i5oi35a6e5pe26L2s6LSm5LiN5Y+v5pKk6ZSAXCIpO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAkKFwiI0F1ZGl0VGlwc1wiKS5odG1sKFwiMS7or7fmoLjlrp7or6XnrJTkuJrliqHmmK/lkKbkuLrlrqLmiLfmnKzkurrlip7nkIZcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vICBhbGVydChcImRhdGExXCIrZGF0YVsxXSk7XHJcbiAgICAgICAgIGlmKGRhdGFbMV0gPT0gXCIxMFwiKVxyXG4gICAgICAgICB7XHJcbiAgICAgICAgICAgICQoXCIjRXJyb3JJbmZvXCIpLmh0bWwoXCLor7fpgInmi6nnlKjmiLflkI48YnI+6L+b6KGM5oyH57q556Gu6K6kXCIpO1xyXG4gICAgICAgICB9XHJcbiAgICAgICAgIGVsc2VcclxuICAgICAgICAge1xyXG4gICAgICAgICAgICAkKFwiI0Vycm9ySW5mb1wiKS5odG1sKFwi6K+36YeN5oyJ5oyH57q5PGJyPuWJqeS9measoeaVsO+8mlwiKyBkYXRhWzFdICtcIuasoVwiKTtcclxuICAgICAgICAgICAgJChcIiNFcnJvckluZm9cIikuY3NzKFwiY29sb3JcIixcInJlZFwiKTtcclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAvL+a4heepuueUqOaIt+S/oeaBryzph43mlrDpgInmi6lcclxuICAgICAgICAvL3NldFZhcihcIkdEX1Vzck51bVwiLFwiXCIpO1xyXG4gICAgICAgXHJcbiAgICAgICAgdmFyIG5vZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW25hbWU9XCJuaWNlLXNlbGVjdFwiXSBsaScpO1xyXG4gICAgICAgIGZvcih2YXIgaT0wOyBpPG5vZGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIG5vZGVzW2ldLm9uY2xpY2s9b25OaWNlU2VsZWN0TGlDbGljaztcclxuICAgICAgICB9XHJcbiAgICAgICAgZnVuY3Rpb24gb25OaWNlU2VsZWN0TGlDbGljayhlKXtcclxuICAgICAgICAgICAgICAgIC8vdmFyIHR4dCA9ICQodGhpcykudGV4dCgpO1xyXG4gICAgICAgICAgICAgICAgLy/kv53lrZjlrqHmoLjlkZjnvJbnoIFcclxuICAgICAgICAgICAgICAgIHZhciB2YWw9JCh0aGlzKS5hdHRyKFwiZGF0YS12YWx1ZVwiKTtcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX1Vzck51bVwiLHZhbCk7XHJcbiAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9BMDFfTnVtVXJDZmdcIix2YWwpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGluZGV4ID0gJCh0aGlzKS5pbmRleCgpO1xyXG5cclxuICAgICAgICAgICAgICAgIHZtLm5hbWU0VmFsdWU9anNvbkFycmF5RGF0YVtwYXJzZUludChpbmRleCldLnVzZXJOYW07XHJcbiAgICAgICAgICAgICAgICAvLyAgZm9yICh2YXIgaSA9IDA7IGkgPCBqc29uQXJyYXlEYXRhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgaWYoanNvbkFycmF5RGF0YVtpXS51c2VyTnVtID09IHZhbCl7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIGFsZXJ0KGpzb25BcnJheURhdGFbaV0udXNlck5hbSk7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIHZtLm5hbWU0VmFsdWUgPSBqc29uQXJyYXlEYXRhW2ldLnVzZXJOYW07XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAgICAgICAgIC8vIH1cclxuICAgICAgICAgICAgICAgICB2bS5uYW1lNFZhbD12YWwrXCJ8XCIrdm0ubmFtZTRWYWx1ZTtcclxuICAgICAgICAgICAgICAgICBzZXRWYXIoXCJEMDBfRDAyX21hcmtldFBlcnNvbk5vdzRcIix2bS5uYW1lNFZhbCk7XHJcbiAgICAgICAgICAgICAgICAvLyBhbGVydCh2bS5uYW1lNFZhbCk7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLy/liJ3lp4vljJbmk43kvZzkurrkurrlkI1cclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGpzb25BcnJheURhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgaWYoJChcIiNhdWRpdG9yXCIpLmh0bWwoKT09anNvbkFycmF5RGF0YVtpXS51c2VyTnVtKXtcclxuICAgICAgICAgICAgICAgICAgICB2bS5uYW1lNFZhbHVlPWpzb25BcnJheURhdGFbaV0udXNlck5hbTtcclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICBcclxuICAgICAgIFxyXG5cclxuXHJcbiAgICAgfSk7ICAgIFxyXG4gICAgLy8gIHZtLm5hbWU0VmFsdWU9JChcIiNhdWRpdG9yXCIpLmh0bWwoKTtcclxuICAgIC8vICAkKFwiI2F1ZGl0b3JcIikucGFyZW50KCkuZmluZChcImxpXCIpLmNsaWNrKGZ1bmN0aW9uKCl7XHJcbiAgICAvLyAgICAgIHZhciBub3dWYWw9JChcIiNhdWRpdG9yXCIpLmh0bWwoKTtcclxuICAgIC8vICAgICAgaWYodm0ubmFtZTRWYWx1ZSE9bm93VmFsKXtcclxuICAgIC8vICAgICAgICAgIHZtLm5hbWU0VmFsdWU9bm93VmFsO1xyXG4gICAgLy8gICAgICB9XHJcbiAgICAvLyAgfSk7ICAgXHJcbiB9Ly9tb3V0ZWTnu5PmnZ9cclxufVxyXG48L3NjcmlwdD4gIiwiPHN0eWxlIHNjb3BlZD4gXHJcbiAgICAubmljZS1zZWxlY3Qge1xyXG4gICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICB9XHJcbiAgICAjaW5wdXRQb3B1cCB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBib3R0b206IDAlO1xyXG4gICAgICAgIGxlZnQ6IDAlO1xyXG4gICAgICAgIC8qIHotaW5kZXg6IDMwMDA7ICovXHJcbiAgICAgICAgYmFja2dyb3VuZDogdXJsKCdpbWcv6aaW6aG15qih57OK6IOM5pmvLnBuZycpIG5vLXJlcGVhdDtcclxuICAgIH1cclxuLk1lZGlhUGlje1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIGhlaWdodDogODIlO1xyXG4gICAgbWFyZ2luOiAyJSBhdXRvO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn0gIFxyXG4uQ2FyZE1lZGlhe1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgd2lkdGg6IDQwJTtcclxuICAgIGhlaWdodDogODUlO1xyXG4gICAgbWFyZ2luOiAyJSBhdXRvO1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMDA4YjZlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCAxNnB4IDY1cHggLTEwcHggIzk5OTtcclxuICB9XHJcbi5DYXJkTWVkaWEub257XHJcbiAgYmFja2dyb3VuZDogcmdiYSgxMzAsIDIxOSwgMjA2LDAuNCk7XHJcbiB9XHJcbi5DYXJkTWVkaWEgaW1ne1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDpjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbi5DYXJkTWVkaWEgcCB7XHJcbiAgIGZvbnQtc2l6ZTogMi41cmVtO1xyXG4gICBtYXJnaW4tdG9wOi0xMHB4O1xyXG4gICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH1cclxuIC5DYXJkTWVkaWEgcCBzcGFue1xyXG4gICAgICBmb250LXNpemU6MS43cmVtO1xyXG4gICAgICB0ZXh0LWFsaWduOmxlZnQ7XHJcbiAgfVxyXG4gLngtbW9kYWx7XHJcbiAgICAgICAgd2lkdGg6NzUlO1xyXG4gICAgICAgIGhlaWdodDo3NSU7XHJcbiAgICAgICAgbWFyZ2luOiA2JSBhdXRvO1xyXG4gICAgfVxyXG4gLlJlc3VsdF90b3B7XHJcbiAgICBoZWlnaHQ6IDEyJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDo0MHB4O1xyXG59XHJcbiAuUmVzdWx0X3RvcCBwe1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBmb250LXNpemU6IDEuOHJlbTtcclxuICAgIH1cclxuIC5teWJ0bntcclxuICAgICAgICBtYXJnaW4tbGVmdDo0NSU7IFxyXG4gICAgfVxyXG4uZ3JhZGllbnR7IFxyXG4gICAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCByZ2IoMTg2LDIzOSwyNDYpLCByZ2IoMTQyLDIwMywyMTEpKTtcclxuICAgIGJhY2tncm91bmQ6IC1tb3otbGluZWFyLWdyYWRpZW50KHRvcCwgcmdiKDE4NiwyMzksMjQ2KSwgcmdiKDE0MiwyMDMsMjExKSk7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLHJnYigxODYsMjM5LDI0NiksIHJnYigxNDIsMjAzLDIxMSkpOyAgXHJcbiAgICAvKiBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoI0Q0RjdGRCwgIzk1RDVERik7IOagh+WHhueahOivreazlSAgKi9cclxufSBcclxuLmNsc0Zvcmt7XHJcbiAgICBtYXJnaW4tbGVmdDogOTIlO1xyXG4gICAgd2lkdGg6IDEwMHB4O1xyXG4gICAgaGVpZ2h0OiA5JTtcclxufVxyXG4uY2xzRm9yayBpbWd7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIHotaW5kZXg6IDEwMDtcclxuICAgIG1hcmdpbi1sZWZ0OiAzNnB4O1xyXG59XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkgYW5kICAobWF4LXdpZHRoOjEzODBweCkge1xyXG4gICAgLkNhcmRNZWRpYXtcclxuICAgICAgICBoZWlnaHQ6IDc4JTtcclxuICAgICAgICB3aWR0aDogNDUlO1xyXG4gICAgICAgIG1hcmdpbjogNCUgYXV0bztcclxuICAgIH1cclxuICAgIC5jbHNGb3JrIGltZ3tcclxuICAgICAgICB6LWluZGV4OiAxMDA7XHJcbiAgICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiA1cHg7ICBcclxuICAgIH1cclxufVxyXG48L3N0eWxlPlxyXG5cclxuPHRlbXBsYXRlPlxyXG4gICAgPGRpdj5cclxuICAgICAgICA8eC1oZWFkZXI+PC94LWhlYWRlcj5cclxuICAgICAgICA8RU1CRUQgbmFtZT1cIlZpZXdTb3VuZFwiIFNSQz1cIndhdi/or7fogZTns7vlrqHmoLjlkZjovpPlhaXmjIfnurnnvJblj7cud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPlxyXG5cdFx0PG1haW4gY2xhc3M9XCJtYWluXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250ZW50X2NcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250ZW50X2xcIj5cclxuICAgICAgICAgICAgICAgICAgICDkuJrliqHlhoXlrrnnoa7orqRcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwid2lkdGg6MTAwJTsgaGVpZ2h0OiA2MHJlbVwiPjwvZGl2PiAgXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ0bmJveFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuXCIgc3R5bGU9XCJtYXJnaW4tcmlnaHQ6MyU7bWFyZ2luLWxlZnQ6MyU7XCIgaWQ9XCJidG5fWm9vbU91dFwiPue8qeWwj++8iC3vvIk8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIHN0eWxlPVwibWFyZ2luLXJpZ2h0OjMlO21hcmdpbi1sZWZ0OjMlO1wiIGlkPVwiYnRuX1pvb21JblwiPuaUvuWkp++8iCvvvIk8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiICBpZD1cInJlU2lnbk5hbWVcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTttYXJnaW4tcmlnaHQ6MyU7bWFyZ2luLWxlZnQ6MyU7XCI+6YeN5paw562+5ZCNPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG5cIiAgaWQ9XCJPdGhlckJ1dHRvblwiIHN0eWxlPVwiZGlzcGxheTpub25lO21hcmdpbi1yaWdodDozJTttYXJnaW4tbGVmdDozJTtcIj48L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2ID4gXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udGVudF9yXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJyX3RpdGxlXCI+5bel5L2c5Lq65ZGY5a6h5qC4PC9wPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyX2NvbnRlbnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5pY2Utc2VsZWN0XCIgbmFtZT1cIm5pY2Utc2VsZWN0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBpZD1cImF1ZGl0b3JcIiB0eXBlPVwidGV4dFwiIHJlYWRvbmx5PjwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicl9jb250ZW50X2RpdjFcIj48aW1nIGlkPVwiSU1HXCIgIHNyYz1cIlwiID48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJfY29udGVudF9kaXYyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBpZD1cIkF1ZGl0VGlwc1wiPjwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxicj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJfY29udGVudF9kaXYzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGlkPVwiRXJyb3JJbmZvXCI+PC9wPiBcclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPCEtLSA8ZGl2IGlkPVwibWFya2V0SWRcIiBAY2xpY2s9XCJtYW55VGVzdFwiPuS4mue7qTxicj7nmbvorrA8YnI+57u05oqkPC9kaXY+ICAg5a6e5pe255m76K6w6YOo5YiG5pqC5pe25bGP6JS9IC0tPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGlkPVwiaW5wdXRQb3B1cFwiIHN0eWxlPVwiZGlzcGxheTpub25lOyBwb3NpdGlvbjogZml4ZWQ7XCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwieC1tb2RhbCBncmFkaWVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgQGNsaWNrPVwiT25DbG9zZVwiIHN0eWxlPVwibWFyZ2luLWxlZnQ6OTIlO2hlaWdodDoxMHB4O1wiID5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT1cInBhZGRpbmc6MTBweDtib3JkZXItcmFkaXVzOjEwcHhcIiA6c3JjID1cIidpbWcv5Yig6ZmkLnBuZydcIi8+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIk1lZGlhUGljXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJDYXJkTWVkaWFcIiBpZD1cIk1TQ2FyZFwiIHYtc2hvdz1cIlBhZ2UxXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGhlaWdodD1cIjM1JVwiIDpzcmM9XCJQaWNfVVJMXCIvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e3tyZWNvbXByY319PC9wPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+PHNwYW4+e3twcmNmZWF0dXJlfX3jgIJ7e21rdGV2ZW50fX3jgII8L3NwYW4+PC9wPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+6aKE5o6I5L+h5Z2H5YC877yaPGZvbnQgc3R5bGU9XCJjb2xvcjpyZWQ7XCI+e3tDcmVkaXRoaWdofX3lhYM8L2ZvbnQ+PC9wPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIkNhcmRNZWRpYVwiIHYtc2hvdz1cIlBhZ2UyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIDpzcmM9XCInLi9pbWcv5LqM57u056CBLeS4quS6uuaOjOmTti5wbmcnXCIvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgdi1odG1sPVwibWFya2V0aW5nVGV4dFwiPjwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9tYWluPlxyXG5cclxuICAgICAgICA8eC1kaWFsb2ctc2VsZWN0Tm93IDpzaG93PVwic2hvd01hcmtldGVyXCIgOmNoaWxkU2hvdz1cInNob3dQZXJzb25cIiB0aXRsZT1cIuiQpemUgOS6uuWRmFwiXHJcblx0XHRcdDpkYXRhPVwibWFya2V0ZXJEYXRhXCJcclxuICAgICAgICAgICAgOnZhbHVlPVwibWFya2V0ZXJDb2RlXCJcclxuXHRcdFx0QGNhbmNlbD1cIm9uTWFueUNhbmNlbFwiIEBjb25maXJtPVwib25DaG9vc2VMZXZlbFwiIEBpbnNlcnROYW1lPVwib25JbnNlcnROYW1lXCIgOmNoaWxkRGF0YT1cIm5hbWU0VmFsdWVcIiA+XHJcblx0XHQ8L3gtZGlhbG9nLXNlbGVjdE5vdz5cclxuICAgIDwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG48c2NyaXB0PlxyXG5pbXBvcnQgeyBtYXBTdGF0ZSwgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBkYXRhICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBQaWNfVVJMOlwiXCIsXHJcbiAgICAgICAgICAgIHJlY29tcHJjOlwiXCIsXHJcbiAgICAgICAgICAgIHByY2ZlYXR1cmU6XCJcIixcclxuICAgICAgICAgICAgbWt0ZXZlbnQ6XCJcIixcclxuICAgICAgICAgICAgQ3JlZGl0aGlnaDpcIlwiLFxyXG4gICAgICAgICAgICBMb2NhbFBpY19VUkw6XCIuL2ltZy/kuoznu7TnoIEt5Liq5Lq65o6M6ZO2LnBuZ1wiLFxyXG4gICAgICAgICAgICBDb2RQZGJyZWVkOltdLFxyXG4gICAgICAgICAgICBQYWdlMTp0cnVlLFxyXG4gICAgICAgICAgICBQYWdlMjp0cnVlLFxyXG4gICAgICAgICAgICBtYXJrZXRpbmdUZXh0OlwiXCIsXHJcbiAgICAgICAgICAgIG1hcmtldGluZ1RleHQxOlwi5byA6YCa55S15a2Q6ZO26KGM5Y+v5Zyo57q/5LiK5Lqr5Y+X55CG6LSi44CB6L2s6LSm44CB5p+l6K+i44CB5L+h55So5Y2h6L+Y5qy+44CB55Sf5rS757y06LS544CB5aSW5rGH562J5pyN5Yqh77yMPGZvbnQgc3R5bGUgPSdjb2xvcjpyZWQnPuaJi+e7rei0ueWFqOWFjTwvZm9udD7vvIzlhajmlrnpnaLmu6HotrPmgqjnmoTnlJ/mtLvmiYDpnIDvvIzlv6vmnaXlvIDpgJrlkKfvvIFcIixcclxuICAgICAgICAgICAgbWFya2V0aW5nVGV4dDI6XCLlvIDpgJrmtojmga/mnI3liqHlj6/lj4rml7bkuqvlj5fmgqjnmoTotKbmiLfliqjotKbpgJrnn6XvvIzlhajlpKnlgJnmnI3liqHvvIzlj4rml7blk43lupTvvIzkuLrmgqjmj5Dkvps3w5cyNOWwj+aXtueahOacjeWKoeOAglwiLFxyXG5cclxuICAgICAgICAgICAgZ2V0S2V5czogWydEMDBfRDAyX21hcmtldFBlcnNvbklkTGlzdCddLFxyXG4gICAgICAgICAgICBzZXRLZXlzOiBbJ0QwMF9EMDJfbWFya2V0UGVyc29uTm93MScsJ0QwMF9EMDJfbWFya2V0UGVyc29uTm93MicsJ0QwMF9EMDJfbWFya2V0UGVyc29uTm93MycsJ0QwMF9EMDJfbWFya2V0UGVyc29uTm93NCddLFxyXG5cdFx0XHRpaWQ6JycsXHJcblx0XHRcdHNob3dOYW1lOicnLFxyXG4gICAgICAgICAgICBuYW1lNFZhbHVlOicnLFxyXG4gICAgICAgICAgICBuYW1lMVZhbDonJyxcclxuICAgICAgICAgICAgbmFtZTJWYWw6JycsXHJcbiAgICAgICAgICAgIG5hbWUzVmFsOicnLFxyXG4gICAgICAgICAgICBuYW1lNFZhbDonJyxcclxuXHRcdFx0bWFya2V0ZXJOYW1lOiBcIlwiLFxyXG5cdFx0XHRtYXJrZXRlckNvZGU6IFwiXCIsXHJcbiAgICAgICAgICAgIHNob3dNYXJrZXRlcjogZmFsc2UsXHJcbiAgICAgICAgICAgIHNob3dQZXJzb246ZmFsc2VcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgY3JlYXRlZCAoKSB7XHRcclxuICAgICAgIHRoaXMuJHJvb3QuJG9uKCdiZWZvcmVRdWl0Jywgb25CZWZvcmVRdWl0KTtcclxuICAgICAgICBmdW5jdGlvbiBvbkJlZm9yZVF1aXQoKSB7XHJcbiAgICAgICAgICAgICQoXCIjUERGVmlld2VyXCIpLmF0dHIoJ2hlaWdodCcsIFwiMFwiKS5hdHRyKCd3aWR0aCcsIFwiMFwiKS5jc3MoJ2xlZnQnLFwiMjAlXCIpO1xyXG4gICAgICAgIH1cclxuXHRcdFxyXG5cdHRoaXMuJHJvb3QuJG9uKCdjYW5jZWxRdWl0Jywgb25DYW5jZWxRdWl0KTtcclxuICAgICAgICBmdW5jdGlvbiBvbkNhbmNlbFF1aXQoKSB7XHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQob25QREZWaWV3ZXIsIDUwMCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBvblBERlZpZXdlcigpe1xyXG4gICAgICAgICAgICAkKFwiI1BERlZpZXdlclwiKS5hdHRyKCdoZWlnaHQnLCBcIjYwJVwiKS5hdHRyKCd3aWR0aCcsIFwiNjAlXCIpLmNzcygnbGVmdCcsXCI4JVwiKTtcclxuICAgICAgICAgfTtcclxuXHRcdFxyXG5cdCB0aGlzLiRyb290LiRvbignc2FsZScsIG9uU2FsZSk7XHJcbiAgICAgICAgZnVuY3Rpb24gb25TYWxlKCkge1xyXG4gICAgICAgICAgICAkKFwiI1BERlZpZXdlclwiKS5hdHRyKCdoZWlnaHQnLCBcIjBcIikuYXR0cignd2lkdGgnLCBcIjBcIikuY3NzKCdsZWZ0JyxcIjIwJVwiKTtcclxuICAgICAgICAgICAgJChcIiNpbnB1dFBvcHVwXCIpLmNzcygnZGlzcGxheScsJ2Jsb2NrJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGJlZm9yZURlc3Ryb3koKXtcclxuICAgICAgICAkKFwiI1BERlZpZXdlclwiKS5hdHRyKCdoZWlnaHQnLCBcIjBcIikuYXR0cignd2lkdGgnLCBcIjBcIikuY3NzKCdsZWZ0JyxcIjIwJVwiKTtcclxuICAgIH0sXHJcbiAgICBkZXN0cm95ZWQgKCkgeyAgXHJcbiAgICAgICAgdGhpcy4kcm9vdC4kb2ZmKCdiZWZvcmVRdWl0Jyk7XHJcbiAgICAgICAgdGhpcy4kcm9vdC4kb2ZmKCdjYW5jZWxRdWl0Jyk7XHJcbiAgICAgICAgdGhpcy4kcm9vdC5TYWxlUHJvZFN1bSA9IFwiXCI7XHJcbiAgICAgICAgdGhpcy4kcm9vdC5zYWxlU2hvdyA9IGZhbHNlO1xyXG4gICAgfSxcclxuICAgIG1vdW50ZWQoKXtcclxuICAgICAgICB2YXIgblJldCA7XHJcblxyXG4gICAgICAgIHZhciBzdHJPbnRoZXJCdXR0b25OYW1lMSxzdHJPbnRoZXJCdXR0b25OYW1lMjtcclxuICAgICAgICB2YXIgc3RycGRmMSxzdHJwZGYyO1xyXG4gICAgICAgIHZhciBiQnV0dG9uID0gZmFsc2U7XHJcbiAgICAgICAgdmFyIHZtPXRoaXM7XHJcblxyXG4gICAgICAgIHZtLm1hcmtldGVyRGF0YT1KU09OLnBhcnNlKCdbe1wia2V5XCI6XCLlsI/psbxcIixcInZhbHVlXCI6XCI5XCJ9LHtcImtleVwiOlwi5bCP6bG8XCIsXCJ2YWx1ZVwiOlwiOVwifSx7XCJrZXlcIjpcIuWwj+WRqFwiLFwidmFsdWVcIjpcIjhcIn0se1wia2V5XCI6XCLpg5HlpY5cIixcInZhbHVlXCI6XCI3XCJ9LHtcImtleVwiOlwi5byg5LiJXCIsXCJ2YWx1ZVwiOlwiMVwifSx7XCJrZXlcIjpcIuadjuWbm1wiLFwidmFsdWVcIjpcIjJcIn0se1wia2V5XCI6XCLnjovkuoxcIixcInZhbHVlXCI6XCIzXCJ9LHtcImtleVwiOlwi5bCP5piOXCIsXCJ2YWx1ZVwiOlwiNFwifSx7XCJrZXlcIjpcIuadjuWbm1wiLFwidmFsdWVcIjpcIjJcIn0se1wia2V5XCI6XCLnjovkuoxcIixcInZhbHVlXCI6XCIzXCJ9LHtcImtleVwiOlwi5p2O5ZubXCIsXCJ2YWx1ZVwiOlwiMlwifSx7XCJrZXlcIjpcIueOi+S6jFwiLFwidmFsdWVcIjpcIjNcIn1dJyk7XHJcbiAgICBEYXRhVG9vbHMuZ2V0KFwiR0RfQTAxX01hbmFnZXJVc2VyfEdEX0EwMV9GaW5nZXJTaG93Q2FtcGljfEdEX01heFRpbWVGb3JGaW5nZXJ8R0RfQTAxX0VzaWduU3RhdGV8R0RfQTAxX01lbnVJRHxHRF9Vc3JOdW18R0RfQTAxX0J1c1RpcHxHRF9CMDFfVHJhbnNfU29sZGllclByb2Zlc3Npb25cIixmdW5jdGlvbihkYXRhKXtcclxuXHJcbiAgICAgICAgdmFyIHN0ck1lbnVJRCA9IGRhdGFbNF07XHJcbiAgICAgICAgaWYoc3RyTWVudUlEPT1cIjA5MDAwMVwiIHx8IHN0ck1lbnVJRD09XCIwOTAwMDNcIil7XHJcbiAgICAgICAgICAgIC8v5L+h55So5Y2h55Sz6K+3XHJcbiAgICAgICAgICAgIHN0ck9udGhlckJ1dHRvbk5hbWUxID0gXCLnlLPor7fooahcIjtcclxuICAgICAgICAgICAgc3RyT250aGVyQnV0dG9uTmFtZTIgPSBcIueUs+ivt+S5plwiO1xyXG4gICAgICAgICAgICBzdHJwZGYxID0gXCJDOlxcXFxjc2FwXFxcXE5pc3BcXFxcY29uZlxcXFxQREZzXFxcXE9wZW5DYXJkLnBkZlwiO1xyXG4gICAgICAgICAgICBzdHJwZGYyID0gXCJDOlxcXFxjc2FwXFxcXE5pc3BcXFxcY29uZlxcXFxQREZzXFxcXENyZWRpdEFwcGx5LnBkZlwiO1xyXG4gICAgICAgICAgICAkKFwiI090aGVyQnV0dG9uXCIpLmNzcyhcImRpc3BsYXlcIixcImlubGluZS1ibG9ja1wiKTtcclxuICAgICAgICAgICAgJChcIiNPdGhlckJ1dHRvblwiKS5odG1sKHN0ck9udGhlckJ1dHRvbk5hbWUxKTtcclxuICAgICAgICAgICAgblJldCA9IFBERlZpZXdlci5PcGVuRmlsZShzdHJwZGYxKTsgICAgIFxyXG4gICAgICAgIH1lbHNlIGlmKHN0ck1lbnVJRD09XCIwOTAwMDJcIil7XHJcbiAgICAgICAgICAgIC8v5L+h55So5Y2h546w6YeR5YiG5pyfXHJcbiAgICAgICAgICAgIG5SZXQgPSBQREZWaWV3ZXIuT3BlbkZpbGUoXCJDOlxcXFxjc2FwXFxcXE5pc3BcXFxcY29uZlxcXFxQREZzXFxcXDA5MDAwMi5wZGZcIik7ICAgICBcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgblJldCA9IFBERlZpZXdlci5PcGVuRmlsZShcIkM6XFxcXGNzYXBcXFxcTmlzcFxcXFxjb25mXFxcXFBERnNcXFxcT3BlbkNhcmQucGRmXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBQREZWaWV3ZXIuU2V0Vmlld0ZpdChcIjBcIik7XHJcbiAgICAgICAgLy9hbGVydChuUmV0KTtcclxuICAgICAgICBzZXRUaW1lb3V0KG9uVGltZW91dHNob3csIDUwMCApO1xyXG5cdFx0XHJcblx0XHRmdW5jdGlvbiBvblRpbWVvdXRzaG93KClcclxuXHRcdHtcclxuICAgICAgICAgICAgJChcIiNQREZWaWV3ZXJcIikuYXR0cignaGVpZ2h0JywgXCI2MCVcIikuYXR0cignd2lkdGgnLCBcIjYwJVwiKS5jc3MoJ2xlZnQnLFwiOCVcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICAgICBpZihkYXRhWzNdICE9IDApXHJcblx0XHRcdHtcclxuICAgICAgICAgICAgICAgICQoXCIjcmVTaWduTmFtZVwiKS5jc3MoXCJkaXNwbGF5XCIsXCJpbmxpbmUtYmxvY2tcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIGpzb25BcnJheURhdGEgPVwiXCI7XHJcbiAgICAgICAgICAgIGlmICggZGF0YVswXSAhPSB1bmRlZmluZWQgJiYgZGF0YVswXSAhPSBudWxsICkgeyAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAganNvbkFycmF5RGF0YSA9IEpTT04ucGFyc2UoZGF0YVswXSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXVkaXRvcklkPW5ldyBBcnJheSgpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGF1ZGl0b3JOYW1lPW5ldyBBcnJheSgpO1xyXG4gICAgICAgICAgICAgICAgaWYoanNvbkFycmF5RGF0YS5sZW5ndGggPT0gMCl7Ly/liJfooajkuLrnqbpcclxuICAgICAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9FcnJSZWFzb25cIixcIkF1ZGl0b3JMaXN0RW1wdHlcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0FVRElUT1JFTVBUWVwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwganNvbkFycmF5RGF0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGF1ZGl0b3JJZC5wdXNoKGpzb25BcnJheURhdGFbaV0udXNlck51bSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYXVkaXRvck5hbWUucHVzaChqc29uQXJyYXlEYXRhW2ldLnVzZXJOdW0pOy8v5Y+q5pi+56S655So5oi357yW56CBXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjcmVhdGVTZWxlY3QoYXVkaXRvcklkLGF1ZGl0b3JOYW1lLFwiYXVkaXRvclwiKTtcclxuICAgICAgICAgICAgICAgIGlmKGRhdGFbNV0hPVwiXCImJmRhdGFbNV0hPW51bGwpe1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjYXVkaXRvclwiKS5odG1sKGRhdGFbNV0pO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjYXVkaXRvclwiKS5hdHRyKCdkYXRhLXZhbHVlJyxkYXRhWzVdKTtcclxuICAgICAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9Vc3JOdW1cIixkYXRhWzVdKTtcclxuICAgICAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9BMDFfTnVtVXJDZmdcIixkYXRhWzVdKTtcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjYXVkaXRvclwiKS5odG1sKGF1ZGl0b3JOYW1lWzBdKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2F1ZGl0b3JcIikuYXR0cignZGF0YS12YWx1ZScsYXVkaXRvcklkWzBdKTtcclxuICAgICAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9Vc3JOdW1cIixhdWRpdG9yTmFtZVswXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQTAxX051bVVyQ2ZnXCIsYXVkaXRvck5hbWVbMF0pO1xyXG4gICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICB9ICBcclxuICAgICAgICAgICAgfWVsc2V7Ly/liJfooajkuLrnqbpcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0VyclJlYXNvblwiLFwiQXVkaXRvckxpc3RFbXB0eVwiKTtcclxuICAgICAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9BVURJVE9SRU1QVFlcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcGFnZUxvZyhcIlBhZ2UgR2V0VmFsdWVbR0RfQTAxX0ZpbmdlclNob3dDYW1waWNdOlwiK2RhdGFbMV0pO1xyXG4gICAgICAgICAgICAkKFwiI0lNR1wiKS5hdHRyKFwic3JjXCIsZGF0YVsxXSk7XHJcblxyXG4gICAgICAgICAgICAvL+aPkOekuuS/oeaBr+WPguaVsOWMlu+8iOi9rOi0puWPljAwMDYz77yM5YW25L2Z6buY6K6k6K6+572u77yJXHJcbiAgICAgICAgICAgIHZhciBzdHJNc2dUaXAgPSBcIlwiO1xyXG4gICAgICAgICAgICB2YXIgc3RyTXNnID0gXCJcIjtcclxuICAgICAgICAgICAgaWYoc3RyTWVudUlEID09IFwiMDMwMDAxXCIpe1xyXG4gICAgICAgICAgICAgICAgLy9pZiAoU2hvd0Rpdkxpc3QgIT0gXCJcIiAmJiBTaG93RGl2TGlzdCAhPSBudWxsICYmIFNob3dEaXZMaXN0ICE9IHVuZGVmaW5lZCl7ICAgXHJcbiAgICAgICAgICAgICAgICAvLyAgICB2YXIgSnNvbk1zZ1RpcCA9IEpTT04ucGFyc2UoU2hvd0Rpdkxpc3QpO1xyXG4gICAgICAgICAgICAgICAgLy8gICAgZm9yKHZhciBpID0gMDtpPEpzb25Nc2dUaXAubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgaWYoSnNvbk1zZ1RpcFtpXVsnMDAwNjMnXSAhPSBcIlwiICYmIEpzb25Nc2dUaXBbaV1bJzAwMDYzJ10gIT0gbnVsbCAmJiBKc29uTXNnVGlwW2ldWycwMDA2MyddIT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgIHN0ck1zZ1RpcCA9IEpzb25Nc2dUaXBbaV1bJzAwMDYzJ107XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy8gICAgfVxyXG4gICAgICAgICAgICAgICAgLy99XHJcbiAgICAgICAgICAgICAgICAvL2lmKHN0ck1zZ1RpcCAhPSBcIlwiICYmIHN0ck1zZ1RpcCAhPSBudWxsICYmIHN0ck1zZ1RpcCAhPSB1bmRlZmluZWQpe1xyXG4gICAgICAgICAgICAgICAgLy8gICAgdmFyIHN0ck1zZ1RpcEFycmF5ID0gc3RyTXNnVGlwLnNwbGl0KFwiQEBcIik7XHJcbiAgICAgICAgICAgICAgICAvLyAgICBmb3IgKHZhciBpPTA7IGk8c3RyTXNnVGlwQXJyYXkubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgIGlmKHN0ck1zZyA9PSBcIlwiKXtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICBzdHJNc2cgPSBzdHJNc2dUaXBBcnJheVtpXTtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgc3RyTXNnID0gc3RyTXNnICsgXCI8YnI+XCIgKyBzdHJNc2dUaXBBcnJheVtpXTtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvLyAgICB9XHJcbiAgICAgICAgICAgICAgICAvL31cclxuICAgICAgICAgICAgICAgIC8vaWYoc3RyTXNnICE9IFwiXCIgJiYgc3RyTXNnICE9IG51bGwgJiYgc3RyTXNnICE9IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAkKFwiI0F1ZGl0VGlwc1wiKS5odG1sKHN0ck1zZyk7XHJcbiAgICAgICAgICAgICAgICAvL31lbHNle1xyXG4gICAgICAgICAgICAgICAgLy8gICAgJChcIiNBdWRpdFRpcHNcIikuaHRtbChcIjEu6K+35qC45a6e6K+l56yU5Lia5Yqh5piv5ZCm5Li65a6i5oi35pys5Lq65Yqe55CGPGJyPjIu6K+356Gu6K6k5a6i5oi3562+5ZCN5piv5ZCm5YeG56GuXCIpO1xyXG4gICAgICAgICAgICAgICAgLy99XHJcbiAgICAgICAgICAgICAgICAkKFwiI0F1ZGl0VGlwc1wiKS5odG1sKFwiMS7or7fmj5DphpLlrqLmiLfms6jmhI/otYTph5HlronlhajvvIzosKjpmLLnlLXkv6Hor4jpqpc8YnI+Mi7or7fnoa7orqTlrqLmiLfnrb7lkI3mmK/lkKblh4bnoa48YnI+My7mj5DphpLlrqLmiLflrp7ml7bovazotKbkuI3lj6/mkqTplIBcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoKFwiMDEwMDAyXCIgPT0gc3RyTWVudUlEIHx8IFwiMDEwMDAxXCIgPT0gc3RyTWVudUlEIHx8IFwiMDYwMDAxXCIgPT0gc3RyTWVudUlEKSAmJiBcIjFcIiA9PSBkYXRhWzddKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAvL+i1hOaWmeS/ruaUuS/lvIDljaEv5Z+66YeR562+57qmQVBQ5LiU5Yab5Lq66IGM5Lia5Y+Y5pu0XHJcbiAgICAgICAgICAgICAgICAkKFwiI0F1ZGl0VGlwc1wiKS5odG1sKFwiMS7or7fmoLjlrp7or6XnrJTkuJrliqHmmK/lkKbkuLrlrqLmiLfmnKzkurrlip7nkIY8YnI+Mi7or7fnoa7orqTlrqLmiLfnrb7lkI3mmK/lkKblh4bnoa48YnI+My7ogYzkuJrmnInlj5jmm7TvvIzor7fmoLjlr7nlhpvkurrogYzkuJrkv6Hmga/vvIzlubbnlZnlrZjnm7jlhbPor4HmmI7mnZDmlplcIik7XHJcbiAgICAgICAgICAgICAgICAkKFwiI0F1ZGl0VGlwc1wiKS5jc3MoJ2ZvbnQtc2l6ZScsJzIuMHJlbScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgJChcIiNBdWRpdFRpcHNcIikuaHRtbChcIjEu6K+35qC45a6e6K+l56yU5Lia5Yqh5piv5ZCm5Li65a6i5oi35pys5Lq65Yqe55CGPGJyPjIu6K+356Gu6K6k5a6i5oi3562+5ZCN5piv5ZCm5YeG56GuXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vICBhbGVydChcImRhdGExXCIrZGF0YVsxXSk7XHJcbiAgICAgICAgICAgIGlmKGRhdGFbMl0gPT0gXCIxMFwiKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAkKFwiI0Vycm9ySW5mb1wiKS5odG1sKFwi6K+36YCJ5oup55So5oi35ZCOPGJyPui/m+ihjOaMh+e6ueehruiupFwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICQoXCIjRXJyb3JJbmZvXCIpLmh0bWwoXCLor7fph43mjInmjIfnurk8YnI+5Ymp5L2Z5qyh5pWw77yaXCIrIGRhdGFbMl0gK1wi5qyhXCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIiNFcnJvckluZm9cIikuY3NzKFwiY29sb3JcIixcInJlZFwiKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy/muIXnqbrnlKjmiLfkv6Hmga8s6YeN5paw6YCJ5oupXHJcbiAgICAgICAgICAgIC8vc2V0VmFyKFwiR0RfVXNyTnVtXCIsXCJcIik7XHJcbiAgICAgICAgICAgIHZhciBub2RlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tuYW1lPVwibmljZS1zZWxlY3RcIl0gbGknKTtcclxuICAgICAgICAgICAgZm9yKHZhciBpPTA7IGk8bm9kZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIG5vZGVzW2ldLm9uY2xpY2s9b25OaWNlU2VsZWN0TGlDbGljaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmdW5jdGlvbiBvbk5pY2VTZWxlY3RMaUNsaWNrKGUpe1xyXG4gICAgICAgICAgICAgICAgLy92YXIgdHh0ID0gJCh0aGlzKS50ZXh0KCk7XHJcbiAgICAgICAgICAgICAgICAvL+S/neWtmOWuoeaguOWRmOe8lueggVxyXG4gICAgICAgICAgICAgICAgdmFyIHZhbD0kKHRoaXMpLmF0dHIoXCJkYXRhLXZhbHVlXCIpO1xyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfVXNyTnVtXCIsdmFsKTtcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0EwMV9OdW1VckNmZ1wiLHZhbCk7XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIGluZGV4ID0gJCh0aGlzKS5pbmRleCgpO1xyXG5cclxuICAgICAgICAgICAgICAgIHZtLm5hbWU0VmFsdWU9anNvbkFycmF5RGF0YVtwYXJzZUludChpbmRleCldLnVzZXJOYW07XHJcbiAgICAgICAgICAgICAgICAvLyBmb3IgKHZhciBpID0gMDsgaSA8IGpzb25BcnJheURhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIC8vICAgICBpZihqc29uQXJyYXlEYXRhW2ldLnVzZXJOdW0gPT0gdmFsKXtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgYWxlcnQoanNvbkFycmF5RGF0YVtpXS51c2VyTmFtKTtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgdm0ubmFtZTRWYWx1ZSA9IGpzb25BcnJheURhdGFbaV0udXNlck5hbTtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICAgICAgdm0ubmFtZTRWYWw9dmFsK1wifFwiK3ZtLm5hbWU0VmFsdWU7XHJcbiAgICAgICAgICAgICAgICBzZXRWYXIoXCJEMDBfRDAyX21hcmtldFBlcnNvbk5vdzRcIix2bS5uYW1lNFZhbCk7XHJcblxyXG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLy8vLy8vLy8vLy8vLy/liJ3lp4vljJbmk43kvZzkurrkurrlkI0vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGpzb25BcnJheURhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgaWYoJChcIiNhdWRpdG9yXCIpLmh0bWwoKT09anNvbkFycmF5RGF0YVtpXS51c2VyTnVtKXtcclxuICAgICAgICAgICAgICAgICAgICB2bS5uYW1lNFZhbHVlPWpzb25BcnJheURhdGFbaV0udXNlck5hbTtcclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgIERhdGFUb29scy5nZXQoXCJHRF9BMDFfVHJhbnNfQ3JlZGl0aGlnaHxHRF9BMDFfVGNwQ2FyZF9EYXRhfEdEX0EwMV9UcmFuc19SZWNvbXByY3xHRF9BMDFfVHJhbnNfUmVjb21wcm9jY29yZHxHRF9BMDFfVHJhbnNfUHJjZmVhdHVyZXxHRF9BMDFfVHJhbnNfTWt0ZXZlbnRcIixmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBcclxuICAgICAgICAgICAgdm0ucmVjb21wcmMgICA9IGRhdGFbMl07ICAgICAvL+aOqOiNkOWNoeenjVxyXG4gICAgICAgICAgICB2bS5wcmNmZWF0dXJlID1kYXRhWzRdOyAgIC8v5Y2h56eN54m56ImyXHJcbiAgICAgICAgICAgIHZtLm1rdGV2ZW50ICAgPSBkYXRhWzVdOyAgICAgLy/okKXplIDmtLvliqhcclxuICAgICAgICAgICAgdm0uQ3JlZGl0aGlnaCA9IGRhdGFbMF07ICAgLy/pooTmjojkv6HlnYflgLxcclxuICAgICAgICAgICAgLy/lm77niYfot6/lvoRcclxuICAgICAgICAgICAgdm0uUGljX1VSTCA9IEdldFZsdVBpY1NyYyhkYXRhWzNdLGRhdGFbMV0pICsgZGF0YVszXSArIFwiLmpwZ1wiO1xyXG4gICAgXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIEdldFZsdVBpY1NyYyhzdHJQcm9kdWN0Q29yZCxzdHJKc29uRGF0YSl7XHJcblx0XHRcdC8v5qC55o2u5Lqn5ZOB5Luj56CB5p+l6K+i5Lqn5ZOB5Zu+54mH6Lev5b6EXHJcblx0XHRcdGlmIChcIlwiICE9IHN0ckpzb25EYXRhICYmIHVuZGVmaW5lZCAhPSBzdHJKc29uRGF0YSlcclxuXHRcdFx0e1xyXG5cdFx0XHRcdC8v6L2sSlNPTuWvueixoVxyXG5cdFx0XHRcdHZhciBqc29uRGF0YSA9IEpTT04ucGFyc2Uoc3RySnNvbkRhdGEpO1xyXG4gICAgICAgICAgICAgICAgLy/pgY3ljobmlbDmja7lrZflhbjkuK3nmoTmiYDmnInln7rph5HnsbvlnotcclxuXHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGpzb25EYXRhLmxlbmd0aDsgaSsrKVxyXG5cdFx0XHRcdHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoc3RyUHJvZHVjdENvcmQgPT0ganNvbkRhdGFbaV0uQ09EX1BEKVxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGpzb25EYXRhW2ldLlZMVV9QSUNfMTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xyXG5cdFx0fVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmVTaWduTmFtZVwiKS5vbmNsaWNrPW9uUmVTaWduTmFtZTtcclxuICAgICAgICBmdW5jdGlvbiBvblJlU2lnbk5hbWUoKXsgXHJcblx0XHRcdGV4aXRTY2VuZShcIlNUQV9SRVNJR05cIik7XHJcblx0XHR9XHJcbiAgICAgICAgLy/nvKnlsI9cclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bl9ab29tT3V0XCIpLm9uY2xpY2s9b25ab29tT3V0O1xyXG4gICAgICAgIGZ1bmN0aW9uIG9uWm9vbU91dCgpe1xyXG5cdFx0XHRQREZWaWV3ZXIuWm9vbU91dCgpOyAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICAvL+aUvuWkp1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX1pvb21JblwiKS5vbmNsaWNrPW9uWm9vbUluO1xyXG4gICAgICAgIGZ1bmN0aW9uIG9uWm9vbUluKCl7XHJcblx0XHRcdFBERlZpZXdlci5ab29tSW4oKTsgICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgLy/lhbbku5bmjInpkq5cclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIk90aGVyQnV0dG9uXCIpLm9uY2xpY2s9b25PbnRoZXI7XHJcbiAgICAgICAgZnVuY3Rpb24gb25PbnRoZXIoKXtcclxuICAgICAgICAgICAgJChcIiNPdGhlckJ1dHRvblwiKS5wcm9wKCdkaXNhYmxlZCcsIHRydWUpO1xyXG5cdFx0XHRpZihiQnV0dG9uKXtcclxuICAgICAgICAgICAgICAgICQoXCIjT3RoZXJCdXR0b25cIikuaHRtbChzdHJPbnRoZXJCdXR0b25OYW1lMSk7XHJcbiAgICAgICAgICAgICAgICBuUmV0ID0gUERGVmlld2VyLk9wZW5GaWxlKHN0cnBkZjEpOyAgIFxyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICQoXCIjT3RoZXJCdXR0b25cIikuaHRtbChzdHJPbnRoZXJCdXR0b25OYW1lMik7XHJcbiAgICAgICAgICAgICAgICBuUmV0ID0gUERGVmlld2VyLk9wZW5GaWxlKHN0cnBkZjIpOyAgIFxyXG4gICAgICAgICAgICB9ICBcclxuICAgICAgICAgICAgYkJ1dHRvbiA9ICFiQnV0dG9uO1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KFVuZGlzYWJsZWRCdXR0b24sIDIwMDApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmdW5jdGlvbiBVbmRpc2FibGVkQnV0dG9uKCl7XHJcbiAgICAgICAgICAgICQoXCIjT3RoZXJCdXR0b25cIikucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8v57K+5YeG6JCl6ZSA5aSE55CGXHJcbiAgICAgICAgRGF0YVRvb2xzLmdldChcIkdEX01hcmtldGluZ0FsbE51bWJlcnxHRF9BMDFfVHJhbnNfVGFnZmxnfEdEX0EwMV9Db2RQZGJyZWVkfEdEX0EwMV9Jc0xvZ2luXCIsZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgIHZhciBzdHJDb2RQZGJyZWVkID0gZGF0YVsyXS50cmltKCk7Ly/kuoznu7TnoIHmjqjpgIHlhoXlrrlcclxuICAgICAgICAgICAgaWYgKGRhdGFbM10gPT0gXCIxXCIpe1xyXG4gICAgICAgICAgICAgICAgLy/lj6rmnInnmbvlvZXmqKHlvI/miY3mnInooqvliqjokKXplIBcclxuICAgICAgICAgICAgICAgIC8v5pyJ6JCl6ZSA5Lqn5ZOBXHJcbiAgICAgICAgICAgICAgICBpZihwYXJzZUludChkYXRhWzBdKSA+PSAxKVxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIC8v6JCl6ZSA5Lqn5ZOB5pWw6YePPj0x5YiZ5Y+v54K55Ye7RW1haWzlm77niYdcclxuICAgICAgICAgICAgICAgICAgICBpZihcIk5cIiA9PSBkYXRhWzFdKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdm0uUGFnZTEgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2bS5QYWdlMSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBpZihzdHJDb2RQZGJyZWVkLmxlbmd0aCA+IDAgKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdm0uUGFnZTIgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2bS5QYWdlMiA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBpZihzdHJDb2RQZGJyZWVkLmluZGV4T2YoXCJQMDAwMTNcIikhPSAtMVxyXG4gICAgICAgICAgICAgICAgICAgICAgICYmIHN0ckNvZFBkYnJlZWQuaW5kZXhPZihcIlAwMDAwOFwiKSA9PSAtMSBcclxuICAgICAgICAgICAgICAgICAgICAgICAmJiBzdHJDb2RQZGJyZWVkLmluZGV4T2YoXCJQMDAwMDlcIikgPT0gLTEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2bS5tYXJrZXRpbmdUZXh0ID0gdm0ubWFya2V0aW5nVGV4dDI7ICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdm0ubWFya2V0aW5nVGV4dCA9IHZtLm1hcmtldGluZ1RleHQxOyAgICBcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgdm0uJHJvb3QuU2FsZVByb2RTdW0gPWRhdGFbMF07XHJcbiAgICAgICAgICAgICAgICAgICAgdm0uJHJvb3Quc2FsZVNob3cgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIHZtLiRyb290LlNhbGVQcm9kU3VtU2hvdyA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5lbWFpbGZcIikuY3NzKFwiZGlzcGxheVwiLFwiaW5saW5lLWJsb2NrXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuZW1haWxmXCIpLmNoaWxkcmVuKCkuaHRtbCh2bS4kcm9vdC5TYWxlUHJvZFN1bSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgdm0uJHJvb3QuU2FsZVByb2RTdW0gPSBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgIHZtLiRyb290LnNhbGVTaG93ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgdm0uJHJvb3QuU2FsZVByb2RTdW1TaG93ID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLmVtYWlsZlwiKS5jc3MoXCJkaXNwbGF5XCIsXCJub25lXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuZW1haWxmXCIpLmNoaWxkcmVuKCkuaHRtbCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5pbml0UGFnZSgpO1xyXG4gICAgfSxcclxuICAgIG1ldGhvZHM6IHtcclxuICAgICAgICBpbml0UGFnZSAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaW5pdFBvb2wodGhpcy4kZGF0YSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBPbkNsb3NlKCl7XHJcbiAgICAgICAgICAgICQoXCIjUERGVmlld2VyXCIpLmF0dHIoJ2hlaWdodCcsIFwiNjAlXCIpLmF0dHIoJ3dpZHRoJywgXCI2MCVcIikuY3NzKCdsZWZ0JyxcIjglXCIpO1xyXG4gICAgICAgICAgICAkKFwiI2lucHV0UG9wdXBcIikuY3NzKCdkaXNwbGF5Jywnbm9uZScpO1xyXG4gICAgICAgIH0sXHJcbiAgICBtYW55VGVzdCAoKSB7XHJcbiAgICAgICB0aGlzLnNob3dNYXJrZXRlciA9IHRydWU7XHJcbiAgICAgICBzZXRWYXIoXCJEMDBfRDAyX2hhc1JlZ2lzdGVkXCIsMSk7Ly/ooajnpLrov5vooYzkuoblrp7ml7bnmbvorrBcclxuICAgIH0sXHJcbiAgICBvbk1hbnlDYW5jZWwgKCkge1xyXG4gICAgICAgdGhpcy5zaG93TWFya2V0ZXIgPSBmYWxzZTtcclxuICAgIH0sXHJcbiAgICBvbkluc2VydE5hbWUoKXtcclxuICAgICAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgICAgIHZtLmlpZD1kb2N1bWVudC5hY3RpdmVFbGVtZW50LmlkO1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiXCIrdm0uaWlkK1wiXCIpLnZhbHVlPVwiXCI7XHJcbi8vIFx0XHRcdGFsZXJ0KFwi5b2T5YmN54K55Ye755qEaWRcIit2bS5paWQpO1xyXG4vLyBcdFx0XHRhbGVydChcIuW8gOWQr+W8ueahhlwiKTtcclxuIMKgwqDCoMKgwqDCoMKgdm0uc2hvd1BlcnNvbj10cnVlO1xyXG4gICAgfSxcclxuICAgIG9uQ2hvb3NlTGV2ZWwgKGluZGV4LCBpdGVtKSB7XHJcbiAgICAgICAgXHJcblx0ICAgdGhpcy5tYXJrZXRlckNvZGUgPSBpdGVtLnZhbHVlO1xyXG5cdCAgIHRoaXMubWFya2V0ZXJOYW1lID0gaXRlbS5rZXk7XHJcblx0ICAvL2FsZXJ0KGl0ZW0ua2V5KTtcclxuXHQgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlwiK3RoaXMuaWlkK1wiXCIpLnZhbHVlPVwiXCIraXRlbS5rZXk7XHJcblx0ICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJcIit0aGlzLmlpZCtcIlwiKS5uYW1lPVwiXCIraXRlbS52YWx1ZTtcclxuICAgICAgIHZhciB0cnI9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJcIit0aGlzLmlpZCtcIlwiKS5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImlucHV0XCIpO1xyXG4gICAgICAgdHJyWzNdLm5hbWU9JChcIiNhdWRpdG9yXCIpLmh0bWwoKTtcclxuXHQgICBmb3IodmFyIGk9MDtpPHRyci5sZW5ndGgtMTtpKyspe1xyXG5cdFx0ICAgaWYodHJyW2ldLnZhbHVlPT1cIlwifHx0cnJbaV0udmFsdWU9PW51bGwpe1xyXG4gICAgICAgICAgICAgICB0cnJbaV0udmFsdWU9aXRlbS5rZXk7XHJcbiAgICAgICAgICAgICAgIHRycltpXS5uYW1lPWl0ZW0udmFsdWU7XHJcblx0XHQgICB9XHJcbiAgICAgICB9XHJcbiAgICAgICB2YXIgbmFtZTE9dHJyWzBdLm5hbWUrXCJ8XCIrdHJyWzBdLnZhbHVlO1xyXG4gICAgICAgdmFyIG5hbWUyPXRyclsxXS5uYW1lK1wifFwiK3RyclsxXS52YWx1ZTtcclxuICAgICAgIHZhciBuYW1lMz10cnJbMl0ubmFtZStcInxcIit0cnJbMl0udmFsdWU7XHJcbiAgICAgICB2YXIgbmFtZTQ9dHJyWzNdLm5hbWUrXCJ8XCIrdHJyWzNdLnZhbHVlO1xyXG4gICAgICAgdGhpcy5uYW1lMVZhbD1uYW1lMTtcclxuICAgICAgIHRoaXMubmFtZTJWYWw9bmFtZTI7XHJcbiAgICAgICB0aGlzLm5hbWUzVmFsPW5hbWUzO1xyXG4gICAgICAgdGhpcy5uYW1lNFZhbD1uYW1lNDtcdFxyXG4gICAgICAgc2V0VmFyKFwiRDAwX0QwMl9tYXJrZXRQZXJzb25Ob3cxXCIsbmFtZTEpO1xyXG4gICAgICAgc2V0VmFyKFwiRDAwX0QwMl9tYXJrZXRQZXJzb25Ob3cyXCIsbmFtZTIpO1xyXG4gICAgICAgc2V0VmFyKFwiRDAwX0QwMl9tYXJrZXRQZXJzb25Ob3czXCIsbmFtZTMpO1xyXG4gICAgICAgc2V0VmFyKFwiRDAwX0QwMl9tYXJrZXRQZXJzb25Ob3c0XCIsbmFtZTQpO1xyXG4gICAgLy8gICAgYWxlcnQodGhpcy5uYW1lNFZhbHVlKTtcclxuICAgIC8vIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibmFtZTRcIikudmFsdWU9dGhpcy5uYW1lNFZhbHVlO1xyXG4gICAgdGhpcy5zaG93UGVyc29uPWZhbHNlO1xyXG5cdHRoaXMuc2hvd01hcmtldGVyID0gdHJ1ZTtcclxuICAgIH0sXHJcblx0ICBvbkNhbmNlbCAoKSB7XHJcbiAgICAgICB0aGlzLnNob3dNYXJrZXRlciA9IGZhbHNlO1xyXG4gICAgfSxcclxuICAgIC4uLm1hcEFjdGlvbnMoWydpbml0UG9vbCcsICdmZXRjaCcsICdzdWJtaXQnLCAnb25DYW5jZWwnLCAnb25Db250aW51ZScsJ2V4aXRTY2VuZSddKVxyXG4gICAgICAgLy8uLi5tYXBBY3Rpb25zKFsnaW5pdFBvb2wnLCdmZXRjaCcsJ2V4aXRTY2VuZSddKVxyXG4gICAgfSxcclxuICAgIHdhdGNoOntcclxuXHRcdHBvb2wodmFsdWUpe1xyXG4gICAgICAgICAgICAvL+ebkeWQrOaVsOaNruaxoOWPmOmHj+aYr+WQpuW3sui/lOWbnu+8jOS/neivgeaVsOaNruaxoOiOt+WPluaIkOWKn+WQjuWGjea4suafk+mhtemdolxyXG4gICAgICAgICAgICBpZih2YWx1ZS5oYXNPd25Qcm9wZXJ0eShcIkdEX0EwMV9UcmFuc19Na3RldmVudFwiKSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmluaXREYXRhKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblx0fVxyXG59XHJcbjwvc2NyaXB0PiAiLCI8c3R5bGUgc2NvcGVkPlxyXG4ubmljZS1zZWxlY3Qge1xyXG4gIHdpZHRoOiA3MCU7XHJcbn1cclxuI2lucHV0UG9wdXAge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgYm90dG9tOiAwJTtcclxuICBsZWZ0OiAwJTtcclxuICAvKiB6LWluZGV4OiAzMDAwOyAqL1xyXG4gIGJhY2tncm91bmQ6IHVybChcImltZy/pppbpobXmqKHns4rog4zmma8ucG5nXCIpIG5vLXJlcGVhdDtcclxufVxyXG4uTWVkaWFQaWMge1xyXG4gIHdpZHRoOiA4MCU7XHJcbiAgaGVpZ2h0OiA4MiU7XHJcbiAgbWFyZ2luOiAyJSBhdXRvO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuLkNhcmRNZWRpYSB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3aWR0aDogNDAlO1xyXG4gIGhlaWdodDogODUlO1xyXG4gIG1hcmdpbjogMiUgYXV0bztcclxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjMDA4YjZlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgYm94LXNoYWRvdzogMHB4IDE2cHggNjVweCAtMTBweCAjOTk5O1xyXG59XHJcbi5DYXJkTWVkaWEub24ge1xyXG4gIGJhY2tncm91bmQ6IHJnYmEoMTMwLCAyMTksIDIwNiwgMC40KTtcclxufVxyXG4uQ2FyZE1lZGlhIGltZyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbi5DYXJkTWVkaWEgcCB7XHJcbiAgZm9udC1zaXplOiAyLjVyZW07XHJcbiAgbWFyZ2luLXRvcDogLTEwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG4uQ2FyZE1lZGlhIHAgc3BhbiB7XHJcbiAgZm9udC1zaXplOiAxLjdyZW07XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5cclxuLngtbW9kYWx7XHJcbiAgd2lkdGg6NzUlO1xyXG4gIGhlaWdodDo3NSU7XHJcbiAgbWFyZ2luOiA2JSBhdXRvO1xyXG59XHJcbi54LW1vZGFsRm9yRDAyIHtcclxuICB3aWR0aDogNzUlO1xyXG4gIGhlaWdodDogNzUlO1xyXG4gIG1hcmdpbjogNiUgYXV0bztcclxufVxyXG4uUmVzdWx0X3RvcCB7XHJcbiAgaGVpZ2h0OiAxMiU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB0b3A6IDQwcHg7XHJcbn1cclxuLlJlc3VsdF90b3AgcCB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGZvbnQtc2l6ZTogMS44cmVtO1xyXG59XHJcbi5teWJ0biB7XHJcbiAgbWFyZ2luLWxlZnQ6IDQ1JTtcclxufVxyXG4uZ3JhZGllbnQge1xyXG4gIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KFxyXG4gICAgdG9wLFxyXG4gICAgcmdiKDE4NiwgMjM5LCAyNDYpLFxyXG4gICAgcmdiKDE0MiwgMjAzLCAyMTEpXHJcbiAgKTtcclxuICBiYWNrZ3JvdW5kOiAtbW96LWxpbmVhci1ncmFkaWVudCh0b3AsIHJnYigxODYsIDIzOSwgMjQ2KSwgcmdiKDE0MiwgMjAzLCAyMTEpKTtcclxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXHJcbiAgICB0byBib3R0b20sXHJcbiAgICByZ2IoMTg2LCAyMzksIDI0NiksXHJcbiAgICByZ2IoMTQyLCAyMDMsIDIxMSlcclxuICApO1xyXG4gIC8qIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjRDRGN0ZELCAjOTVENURGKTsg5qCH5YeG55qE6K+t5rOVICAqL1xyXG59XHJcbi5jbHNGb3JrIHtcclxuICBtYXJnaW4tbGVmdDogOTIlO1xyXG4gIHdpZHRoOiAxMDBweDtcclxuICBoZWlnaHQ6IDklO1xyXG59XHJcbi5jbHNGb3JrIGltZyB7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIHotaW5kZXg6IDEwMDtcclxuICBtYXJnaW4tbGVmdDogMzZweDtcclxufVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIGFuZCAobWF4LXdpZHRoOiAxMzgwcHgpIHtcclxuICAuQ2FyZE1lZGlhIHtcclxuICAgIGhlaWdodDogNzglO1xyXG4gICAgd2lkdGg6IDQ1JTtcclxuICAgIG1hcmdpbjogNCUgYXV0bztcclxuICB9XHJcbiAgLmNsc0ZvcmsgaW1nIHtcclxuICAgIHotaW5kZXg6IDEwMDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcclxuICB9XHJcbn1cclxuICAueC1tb2RhbEZvckQwMntcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICBoZWlnaHQ6IDM0JTtcclxuICAgIG1hcmdpbjogMTUlIGF1dG87XHJcbiAgICBtYXJnaW4tbGVmdDogNzIlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAxMHB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgei1pbmRleDogMzAwMDAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZmFmODtcclxuICAgIGJvcmRlci1yYWRpdXM6IDBweDsgXHJcbiAgfVxyXG4gIC5tYW55LWRpYWxvZyB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB6LWluZGV4OiAzMDAwMDA7XHJcbiAgICB3aWR0aDogMjglO1xyXG4gICAgaGVpZ2h0OiA0MCU7XHJcbiAgICByaWdodDogMCU7XHJcbiAgICBib3R0b206IDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZmFmODtcclxuICAgIGNvbG9yOiAjNjY2O1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG59XHJcblxyXG4uaW5wdXRfaW5mbyB7XHJcbiAgICB3aWR0aDogMjAwcHg7XHJcbiAgICBoZWlnaHQ6IDMwcHg7XHJcbn1cclxuI2NvbnRlbnQgbGkge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogMzAlO1xyXG4gICAgbWFyZ2luOiAwcHggMHB4O1xyXG59XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkgYW5kIChtYXgtd2lkdGg6IDEzMDBweCkge1xyXG5cclxuICAueC1tb2RhbEZvckQwMiB7XHJcbiAgICBtYXJnaW46IDIxJSBhdXRvO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDcyJTtcclxuICB9XHJcbn1cclxuXHJcblxyXG4jdGhlTWFya2V0SWQge1xyXG4gIC8qIHBvc2l0aW9uOiBhYnNvbHV0ZTsgKi9cclxuICB6LWluZGV4OiAyMDAwMDtcclxuICBib3R0b206IDI1JTtcclxuICByaWdodDogNSU7XHJcbiAgd2lkdGg6IDEyMHB4O1xyXG4gIGhlaWdodDogMTIwcHg7XHJcbiAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgZm9udC1zaXplOiAycmVtOyBcclxuICBjb2xvcjogIzAwOGI2ZTtcclxuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwyNTUsMjU1LDAuNSk7XHJcbiAgLW1vei1ib3JkZXItcmFkaXVzOiA1MHB4O1xyXG4gIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNTBweDtcclxuICBib3JkZXItcmFkaXVzOiAxMDAlO1xyXG4gIHZlcnRpY2FsLWFsaWduOm1pZGRsZTtcclxufVxyXG48L3N0eWxlPlxyXG5cclxuPHRlbXBsYXRlPlxyXG4gICAgPGRpdj5cclxuICAgICAgICA8eC1oZWFkZXI+PC94LWhlYWRlcj5cclxuICAgICAgICA8RU1CRUQgbmFtZT1cIlZpZXdTb3VuZFwiIFNSQz1cIndhdi/or7fogZTns7vlrqHmoLjlkZjovpPlhaXmjIfnurnnvJblj7cud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPlxyXG5cdFx0PG1haW4gY2xhc3M9XCJtYWluXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250ZW50X2NcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250ZW50X2xcIiBAY2xpY2s9XCJIaWRCRCgpXCI+XHJcbiAgICAgICAgICAgICAgICAgICAg5Lia5Yqh5YaF5a6556Gu6K6kXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cIndpZHRoOjEwMCU7IGhlaWdodDogNjByZW1cIj48L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidG5ib3hcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIHN0eWxlPVwibWFyZ2luLXJpZ2h0OjMlO21hcmdpbi1sZWZ0OjMlO1wiIGlkPVwiYnRuX1pvb21PdXRcIj7nvKnlsI/vvIgt77yJPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG5cIiBzdHlsZT1cIm1hcmdpbi1yaWdodDozJTttYXJnaW4tbGVmdDozJTtcIiBpZD1cImJ0bl9ab29tSW5cIj7mlL7lpKfvvIgr77yJPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG5cIiAgaWQ9XCJyZVNpZ25OYW1lXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7bWFyZ2luLXJpZ2h0OjMlO21hcmdpbi1sZWZ0OjMlO1wiPumHjeaWsOetvuWQjTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuXCIgIGlkPVwiT3RoZXJCdXR0b25cIiBzdHlsZT1cImRpc3BsYXk6bm9uZTttYXJnaW4tcmlnaHQ6MyU7bWFyZ2luLWxlZnQ6MyU7XCI+PC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2RpdiA+IFxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRlbnRfclwiIEBjbGljaz1cIkhpZEJEKClcIj5cclxuICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInJfdGl0bGVcIj7lt6XkvZzkurrlkZjlrqHmoLg8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJfY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmljZS1zZWxlY3RcIiBuYW1lPVwibmljZS1zZWxlY3RcIiBpZD1cIm5pY2Utc2VsZWN0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBpZD1cImF1ZGl0b3JcIiB0eXBlPVwidGV4dFwiIHJlYWRvbmx5PjwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicl9jb250ZW50X2RpdjFcIj48aW1nIGlkPVwiSU1HXCIgIHNyYz1cIlwiID48L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJfY29udGVudF9kaXYyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBpZD1cIkF1ZGl0VGlwc1wiPjwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxicj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJfY29udGVudF9kaXYzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGlkPVwiRXJyb3JJbmZvXCI+PC9wPiBcclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPCEtLSDlrp7ml7bnmbvorrDpg6jliIbmmoLml7blsY/olL0gXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD1cIm1hcmtldElkXCIgQGNsaWNrPVwibWFueVRlc3RcIj7nmbvorrA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInJfY29udGVudF9kaXY0XCItLT5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBpZD1cInRoZU1hcmtldElkXCIgQGNsaWNrPVwibWFueVRlc3RcIiB2LXNob3c9XCJpZlNob3dNYXJrZXRcIj7kuJrnu6k8YnI+55m76K6wPGJyPue7tOaKpDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBpZD1cImlucHV0UG9wdXBcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTsgcG9zaXRpb246IGZpeGVkO1wiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIngtbW9kYWwgZ3JhZGllbnRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IEBjbGljaz1cIk9uQ2xvc2VcIiBzdHlsZT1cIm1hcmdpbi1sZWZ0OjkyJTtoZWlnaHQ6MTBweDtcIiA+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3R5bGU9XCJwYWRkaW5nOjEwcHg7Ym9yZGVyLXJhZGl1czoxMHB4XCIgOnNyYyA9XCInaW1nL+WIoOmZpC5wbmcnXCIvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJNZWRpYVBpY1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiQ2FyZE1lZGlhXCIgaWQ9XCJNU0NhcmRcIiB2LXNob3c9XCJQYWdlMVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBoZWlnaHQ9XCIzNSVcIiA6c3JjPVwiUGljX1VSTFwiLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPnt7cmVjb21wcmN9fTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPjxzcGFuPnt7cHJjZmVhdHVyZX1944CCe3tta3RldmVudH1944CCPC9zcGFuPjwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPumihOaOiOS/oeWdh+WAvO+8mjxmb250IHN0eWxlPVwiY29sb3I6cmVkO1wiPnt7Q3JlZGl0aGlnaH195YWDPC9mb250PjwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJDYXJkTWVkaWFcIiB2LXNob3c9XCJQYWdlMlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyA6c3JjPVwiJy4vaW1nL+S6jOe7tOeggS3kuKrkurrmjozpk7YucG5nJ1wiLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIHYtaHRtbD1cIm1hcmtldGluZ1RleHRcIj48L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvbWFpbj5cclxuXHJcbiAgICAgICAgPCEtLSA6Y2hpbGRTaG93PVwic2hvd1BlcnNvblwiIFxyXG4gICAgICAgICBAaW5zZXJ0TmFtZT1cIm9uSW5zZXJ0TmFtZVwiIDpjaGlsZERhdGE9XCJuYW1lNFZhbHVlXCIgLS0+XHJcbiAgICAgICAgPHgtZGlhbG9nLXNlbGVjdEZvckQwMiA6c2hvdz1cInNob3dNYXJrZXRlclwiIHRpdGxlPVwi6JCl6ZSA5Lq65ZGYXCJcclxuXHRcdFx0OmRhdGE9XCJtYXJrZXRlckRhdGFcIlxyXG4gICAgICAgICAgICA6dmFsdWU9XCJtYXJrZXRlckNvZGVcIlxyXG5cdFx0XHRAY2FuY2VsPVwib25NYW55Q2FuY2VsXCIgQGNvbmZpcm09XCJvbkNob29zZUxldmVsXCI+XHJcblx0XHQ8L3gtZGlhbG9nLXNlbGVjdEZvckQwMj5cclxuXHJcbiAgICAgICAgPHRyYW5zaXRpb24gbmFtZT1cImZhZGVcIiBtb2RlPVwib3V0LWluXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImlucHV0UG9wdXBcIiB2LXNob3c9XCJQb3B1cFNob3dcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIngtbW9kYWxGb3JEMDJcIj5cclxuICAgICAgICAgICAgICAgIDxici8+XHJcbiAgICAgICAgICAgICAgICA8ZGl2PuS4u+iQpemUgOS6ujpcclxuICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJpbnB1dF9pbmZvXCIgaWQ9XCJuYW0wMVwiIEBjbGljaz1cImVudGVyTmFtKCcwJylcIiB2LW1vZGVsPVwibmFtZVZhbEFyclswXVwiLz48L2Rpdj48YnIvPlxyXG4gICAgICAgICAgICAgICAgPGRpdj7mrKHokKXplIDkuro6XHJcbiAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiaW5wdXRfaW5mb1wiIGlkPVwibmFtMDJcIiBAY2xpY2s9XCJlbnRlck5hbSgnMScpXCIgdi1tb2RlbD1cIm5hbWVWYWxBcnJbMV1cIi8+PC9kaXY+PGJyLz5cclxuICAgICAgICAgICAgICAgIDxkaXY+6L2sJm5ic3A75LuLJm5ic3A75Lq6Jm5ic3A7OlxyXG4gICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBjbGFzcz1cImlucHV0X2luZm9cIiBpZD1cIm5hbTAzXCIgQGNsaWNrPVwiZW50ZXJOYW0oJzInKVwiIHYtbW9kZWw9XCJuYW1lVmFsQXJyWzJdXCIvPjwvZGl2Pjxici8+XHJcbiAgICAgICAgICAgICAgICA8ZGl2PuaTjSZuYnNwO+S9nCZuYnNwO+S6uiZuYnNwOzpcclxuICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJpbnB1dF9pbmZvXCIgaWQ9XCJuYW0wNFwiIEBjbGljaz1cImVudGVyTmFtKCczJylcIiB2LW1vZGVsPVwibmFtZVZhbEFyclszXVwiLz48L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwhLS0gPGRpdj57e21hcmtldFBlcnNvbklkTGlzdH19PC9kaXY+IC0tPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ0bmJveFwiPjwhLS1tYXJnaW4tbGVmdDoxMCU7bWFyZ2luLXJpZ2h0OjEwJTstLT5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuXCIgc3R5bGU9XCJwYWRkaW5nOiAzcHggMTVweDtmb250LXNpemU6IDIuMHJlbVwiIEBjbGljaz1cIm9uQnRuQ2FuY2VsXCI+5Y+WJm5ic3A75raIPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIHN0eWxlPVwicGFkZGluZzogM3B4IDE1cHg7Zm9udC1zaXplOiAyLjByZW1cIiBAY2xpY2s9XCJvbkJ0bkNsZWFyXCI+5riFJm5ic3A756m6PC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIHN0eWxlPVwicGFkZGluZzogM3B4IDE1cHg7Zm9udC1zaXplOiAyLjByZW1cIiBAY2xpY2s9XCJvbkJ0blN1Ym1pdFwiIDpkaXNhYmxlZD1cImRpc2FibGVkU3VibWl0XCI+56GuJm5ic3A75a6aPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC90cmFuc2l0aW9uPlxyXG5cclxuICAgIDwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG48c2NyaXB0PlxyXG5pbXBvcnQgeyBtYXBTdGF0ZSwgbWFwQWN0aW9ucyB9IGZyb20gXCJ2dWV4XCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgZGF0YSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIFBpY19VUkw6IFwiXCIsXHJcbiAgICAgIHJlY29tcHJjOiBcIlwiLFxyXG4gICAgICBwcmNmZWF0dXJlOiBcIlwiLFxyXG4gICAgICBta3RldmVudDogXCJcIixcclxuICAgICAgQ3JlZGl0aGlnaDogXCJcIixcclxuICAgICAgTG9jYWxQaWNfVVJMOiBcIi4vaW1nL+S6jOe7tOeggS3kuKrkurrmjozpk7YucG5nXCIsXHJcbiAgICAgIENvZFBkYnJlZWQ6IFtdLFxyXG4gICAgICBQYWdlMTogdHJ1ZSxcclxuICAgICAgUGFnZTI6IHRydWUsXHJcbiAgICAgIG1hcmtldGluZ1RleHQ6IFwiXCIsXHJcbiAgICAgIG1hcmtldGluZ1RleHQxOlxyXG4gICAgICAgIFwi5byA6YCa55S15a2Q6ZO26KGM5Y+v5Zyo57q/5LiK5Lqr5Y+X55CG6LSi44CB6L2s6LSm44CB5p+l6K+i44CB5L+h55So5Y2h6L+Y5qy+44CB55Sf5rS757y06LS544CB5aSW5rGH562J5pyN5Yqh77yMPGZvbnQgc3R5bGUgPSdjb2xvcjpyZWQnPuaJi+e7rei0ueWFqOWFjTwvZm9udD7vvIzlhajmlrnpnaLmu6HotrPmgqjnmoTnlJ/mtLvmiYDpnIDvvIzlv6vmnaXlvIDpgJrlkKfvvIFcIixcclxuICAgICAgbWFya2V0aW5nVGV4dDI6IFwi5byA6YCa5raI5oGv5pyN5Yqh5Y+v5Y+K5pe25Lqr5Y+X5oKo55qE6LSm5oi35Yqo6LSm6YCa55+l77yM5YWo5aSp5YCZ5pyN5Yqh77yM5Y+K5pe25ZON5bqU77yM5Li65oKo5o+Q5L6bN8OXMjTlsI/ml7bnmoTmnI3liqHjgIJcIixcclxuXHJcbiAgICAgIGdldEtleXM6IFtcIkQwMF9EMDJfbWFya2V0UGVyc29uSWRMaXN0XCJdLFxyXG4gICAgICBzZXRLZXlzOiBbXHJcbiAgICAgICAgXCJEMDBfRDAyX21hcmtldFBlcnNvbk5vdzFcIixcclxuICAgICAgICBcIkQwMF9EMDJfbWFya2V0UGVyc29uTm93MlwiLFxyXG4gICAgICAgIFwiRDAwX0QwMl9tYXJrZXRQZXJzb25Ob3czXCIsXHJcbiAgICAgICAgXCJEMDBfRDAyX21hcmtldFBlcnNvbk5vdzRcIlxyXG4gICAgICBdLFxyXG4gICAgICBpaWQ6IFwiXCIsXHJcbiAgICAgIHNob3dOYW1lOiBcIlwiLFxyXG4gICAgICBuYW1lNFZhbHVlOiBcIlwiLFxyXG4gICAgICBuYW1lMVZhbDogXCJcIixcclxuICAgICAgbmFtZTJWYWw6IFwiXCIsXHJcbiAgICAgIG5hbWUzVmFsOiBcIlwiLFxyXG4gICAgICBuYW1lNFZhbDogXCJcIixcclxuICAgICAgbmFtZVZhbEFycjogW10sXHJcbiAgICAgIG1hcmtldGVyQXJyOiBbXSxcclxuICAgICAgbWFya2V0ZXJOYW1lOiBcIlwiLFxyXG4gICAgICBtYXJrZXRlckRhdGE6IFwiXCIsXHJcbiAgICAgIG1hcmtldGVyQ29kZTogXCJcIixcclxuICAgICAgbWFya2V0ZXJOdW06IDAsXHJcbiAgICAgIHNob3dNYXJrZXRlcjogZmFsc2UsXHJcbiAgICAgIHNob3dQZXJzb246IGZhbHNlLFxyXG4gICAgICBQb3B1cFNob3c6IGZhbHNlLFxyXG4gICAgICBtYXJrZXRQZXJzb25JZExpc3Q6IFwiXCIsXHJcbiAgICAgIEpzb25NYXJrZXRJbmZvTGlzdDpcIlwiLFxyXG4gICAgICBKc29uRGF0YUZvckRlZmF1bHQ6XCJcIixcclxuICAgICAgaWZIaWRkZW46ZmFsc2UsXHJcbiAgICAgIHRlbXBOYW06W10sXHJcbiAgICAgIHRlbXBNYXJrZXQ6W10sXHJcbiAgICAgIGlmU2hvd01hcmtldDpmYWxzZSxcclxuICAgIH07XHJcbiAgfSxcclxuICBjcmVhdGVkKCkge1xyXG4gICAgdGhpcy4kcm9vdC4kb24oXCJiZWZvcmVRdWl0XCIsIG9uQmVmb3JlUXVpdCk7XHJcbiAgICBmdW5jdGlvbiBvbkJlZm9yZVF1aXQoKSB7XHJcbiAgICAgICQoXCIjUERGVmlld2VyXCIpXHJcbiAgICAgICAgLmF0dHIoXCJoZWlnaHRcIiwgXCIwXCIpXHJcbiAgICAgICAgLmF0dHIoXCJ3aWR0aFwiLCBcIjBcIilcclxuICAgICAgICAuY3NzKFwibGVmdFwiLCBcIjIwJVwiKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLiRyb290LiRvbihcImNhbmNlbFF1aXRcIiwgb25DYW5jZWxRdWl0KTtcclxuICAgIGZ1bmN0aW9uIG9uQ2FuY2VsUXVpdCgpIHtcclxuICAgICAgc2V0VGltZW91dChvblBERlZpZXdlciwgNTAwKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBvblBERlZpZXdlcigpIHtcclxuICAgICAgJChcIiNQREZWaWV3ZXJcIilcclxuICAgICAgICAuYXR0cihcImhlaWdodFwiLCBcIjYwJVwiKVxyXG4gICAgICAgIC5hdHRyKFwid2lkdGhcIiwgXCI2MCVcIilcclxuICAgICAgICAuY3NzKFwibGVmdFwiLCBcIjglXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuJHJvb3QuJG9uKFwic2FsZVwiLCBvblNhbGUpO1xyXG4gICAgZnVuY3Rpb24gb25TYWxlKCkge1xyXG4gICAgICAkKFwiI1BERlZpZXdlclwiKVxyXG4gICAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIFwiMFwiKVxyXG4gICAgICAgIC5hdHRyKFwid2lkdGhcIiwgXCIwXCIpXHJcbiAgICAgICAgLmNzcyhcImxlZnRcIiwgXCIyMCVcIik7XHJcbiAgICAgICQoXCIjaW5wdXRQb3B1cFwiKS5jc3MoXCJkaXNwbGF5XCIsIFwiYmxvY2tcIik7XHJcbiAgICB9XHJcbiAgfSxcclxuICBiZWZvcmVEZXN0cm95KCkge1xyXG4gICAgJChcIiNQREZWaWV3ZXJcIilcclxuICAgICAgLmF0dHIoXCJoZWlnaHRcIiwgXCIwXCIpXHJcbiAgICAgIC5hdHRyKFwid2lkdGhcIiwgXCIwXCIpXHJcbiAgICAgIC5jc3MoXCJsZWZ0XCIsIFwiMjAlXCIpO1xyXG4gIH0sXHJcbiAgZGVzdHJveWVkKCkge1xyXG4gICAgdGhpcy4kcm9vdC4kb2ZmKFwiYmVmb3JlUXVpdFwiKTtcclxuICAgIHRoaXMuJHJvb3QuJG9mZihcImNhbmNlbFF1aXRcIik7XHJcbiAgICB0aGlzLiRyb290LlNhbGVQcm9kU3VtID0gXCJcIjtcclxuICAgIHRoaXMuJHJvb3Quc2FsZVNob3cgPSBmYWxzZTtcclxuICB9LFxyXG4gIG1vdW50ZWQoKSB7XHJcbiAgICB2YXIgblJldDtcclxuXHJcbiAgICB2YXIgc3RyT250aGVyQnV0dG9uTmFtZTEsIHN0ck9udGhlckJ1dHRvbk5hbWUyO1xyXG4gICAgdmFyIHN0cnBkZjEsIHN0cnBkZjI7XHJcbiAgICB2YXIgYkJ1dHRvbiA9IGZhbHNlO1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuXHJcbiAgICAgICAgLy8gYWxlcnQoXCJJblwiKTtcclxuIERhdGFUb29scy5nZXQoXHJcbiAgICAgIFwiRDAwX0QwMl9tYXJrZXRQZXJzb25JZExpc3R8RDAwX0QwMl9oYXNSZWdpc3RlZHxDX0EwMV9TWVNQUk1fMDAxNDNcIixcclxuICAgICAgZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgICAgIFxyXG4gICAgICAgIHNldFZhcihcIkQwMl9pZkF1ZGl0b3JcIixcIjFcIik7XHJcbiAgICAgICAgaWYoZGF0YVswXSAhPSBcIlwiKXtcclxuICAgICAgICAgIHZtLkpzb25NYXJrZXRJbmZvTGlzdCA9IEpTT04ucGFyc2UoZGF0YVswXSk7XHJcbiAgICAgICAgICB2bS5tYXJrZXRlckRhdGEgPSBKU09OLnBhcnNlKGRhdGFbMF0pO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgdm0uSnNvbk1hcmtldEluZm9MaXN0ID0gXCJcIjtcclxuICAgICAgICAgIHZtLm1hcmtldGVyRGF0YSA9IFwiXCI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICAgaWYoZGF0YVsxXSAhPSBcIjFcIil7XHJcbiAgICAgICAgICAgIHNldFZhcihcIkQwMF9EMDJfaGFzUmVnaXN0ZWRcIixcIjFcIik7Ly/ooajnpLrov5vooYzkuoblrp7ml7bnmbvorrBcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGlmKGRhdGFbMl0gPT0gXCIwXCIpe1xyXG4gICAgICAgICAgICB2bS5pZlNob3dNYXJrZXQgPSB0cnVlO1xyXG4gICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIHZtLmlmU2hvd01hcmtldCA9IGZhbHNlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICBcclxuICAgICAgICAvLyBhbGVydCh2bS5tYXJrZXRlckRhdGEpO1xyXG4gICAgICB9KTtcclxuICAgIC8vIHZtLm1hcmtldGVyRGF0YSA9IEpTT04ucGFyc2UoXHJcbiAgICAvLyAgICdbe1wia2V5XCI6XCLlsI/psbxcIixcInZhbHVlXCI6XCI5XCJ9LHtcImtleVwiOlwi5bCP6bG8XCIsXCJ2YWx1ZVwiOlwiOVwifSx7XCJrZXlcIjpcIuWwj+WRqFwiLFwidmFsdWVcIjpcIjhcIn0se1wia2V5XCI6XCLpg5HlpY5cIixcInZhbHVlXCI6XCI3XCJ9LHtcImtleVwiOlwi5byg5LiJXCIsXCJ2YWx1ZVwiOlwiMVwifSx7XCJrZXlcIjpcIuadjuWbm1wiLFwidmFsdWVcIjpcIjJcIn0se1wia2V5XCI6XCLnjovkuoxcIixcInZhbHVlXCI6XCIzXCJ9LHtcImtleVwiOlwi5bCP5piOXCIsXCJ2YWx1ZVwiOlwiNFwifSx7XCJrZXlcIjpcIuadjuWbm1wiLFwidmFsdWVcIjpcIjJcIn0se1wia2V5XCI6XCLnjovkuoxcIixcInZhbHVlXCI6XCIzXCJ9LHtcImtleVwiOlwi5p2O5ZubXCIsXCJ2YWx1ZVwiOlwiMlwifSx7XCJrZXlcIjpcIueOi+S6jFwiLFwidmFsdWVcIjpcIjNcIn1dJ1xyXG4gICAgLy8gKTtcclxuICAgIERhdGFUb29scy5nZXQoXHJcbiAgICAgIFwiR0RfQTAxX01hbmFnZXJVc2VyfEdEX0EwMV9GaW5nZXJTaG93Q2FtcGljfEdEX01heFRpbWVGb3JGaW5nZXJ8R0RfQTAxX0VzaWduU3RhdGV8R0RfQTAxX01lbnVJRHxHRF9Vc3JOdW18R0RfQTAxX0J1c1RpcHxHRF9CMDFfVHJhbnNfU29sZGllclByb2Zlc3Npb25cIixcclxuICAgICAgZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgICAgIHZhciBzdHJNZW51SUQgPSBkYXRhWzRdO1xyXG4gICAgICAgIGlmIChzdHJNZW51SUQgPT0gXCIwOTAwMDFcIiB8fCBzdHJNZW51SUQgPT0gXCIwOTAwMDNcIikge1xyXG4gICAgICAgICAgLy/kv6HnlKjljaHnlLPor7dcclxuICAgICAgICAgIHN0ck9udGhlckJ1dHRvbk5hbWUxID0gXCLnlLPor7fooahcIjtcclxuICAgICAgICAgIHN0ck9udGhlckJ1dHRvbk5hbWUyID0gXCLnlLPor7fkuaZcIjtcclxuICAgICAgICAgIHN0cnBkZjEgPSBcIkM6XFxcXGNzYXBcXFxcTmlzcFxcXFxjb25mXFxcXFBERnNcXFxcT3BlbkNhcmQucGRmXCI7XHJcbiAgICAgICAgICBzdHJwZGYyID0gXCJDOlxcXFxjc2FwXFxcXE5pc3BcXFxcY29uZlxcXFxQREZzXFxcXENyZWRpdEFwcGx5LnBkZlwiO1xyXG4gICAgICAgICAgJChcIiNPdGhlckJ1dHRvblwiKS5jc3MoXCJkaXNwbGF5XCIsIFwiaW5saW5lLWJsb2NrXCIpO1xyXG4gICAgICAgICAgJChcIiNPdGhlckJ1dHRvblwiKS5odG1sKHN0ck9udGhlckJ1dHRvbk5hbWUxKTtcclxuICAgICAgICAgIG5SZXQgPSBQREZWaWV3ZXIuT3BlbkZpbGUoc3RycGRmMSk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChzdHJNZW51SUQgPT0gXCIwOTAwMDJcIikge1xyXG4gICAgICAgICAgLy/kv6HnlKjljaHnjrDph5HliIbmnJ9cclxuICAgICAgICAgIG5SZXQgPSBQREZWaWV3ZXIuT3BlbkZpbGUoXCJDOlxcXFxjc2FwXFxcXE5pc3BcXFxcY29uZlxcXFxQREZzXFxcXDA5MDAwMi5wZGZcIik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIG5SZXQgPSBQREZWaWV3ZXIuT3BlbkZpbGUoXCJDOlxcXFxjc2FwXFxcXE5pc3BcXFxcY29uZlxcXFxQREZzXFxcXE9wZW5DYXJkLnBkZlwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgUERGVmlld2VyLlNldFZpZXdGaXQoXCIwXCIpO1xyXG4gICAgICAgIC8vYWxlcnQoblJldCk7XHJcbiAgICAgICAgc2V0VGltZW91dChvblRpbWVvdXRzaG93LCA1MDApO1xyXG5cclxuICAgICAgICBmdW5jdGlvbiBvblRpbWVvdXRzaG93KCkge1xyXG4gICAgICAgICAgJChcIiNQREZWaWV3ZXJcIilcclxuICAgICAgICAgICAgLmF0dHIoXCJoZWlnaHRcIiwgXCI2MCVcIilcclxuICAgICAgICAgICAgLmF0dHIoXCJ3aWR0aFwiLCBcIjYwJVwiKVxyXG4gICAgICAgICAgICAuY3NzKFwibGVmdFwiLCBcIjglXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoZGF0YVszXSAhPSAwKSB7XHJcbiAgICAgICAgICAkKFwiI3JlU2lnbk5hbWVcIikuY3NzKFwiZGlzcGxheVwiLCBcImlubGluZS1ibG9ja1wiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGpzb25BcnJheURhdGEgPSBcIlwiO1xyXG4gICAgICAgIGlmIChkYXRhWzBdICE9IHVuZGVmaW5lZCAmJiBkYXRhWzBdICE9IG51bGwpIHtcclxuICAgICAgICAgIGpzb25BcnJheURhdGEgPSBKU09OLnBhcnNlKGRhdGFbMF0pO1xyXG4gICAgICAgICAgdm0uSnNvbkRhdGFGb3JEZWZhdWx0ID0gSlNPTi5wYXJzZShkYXRhWzBdKTtcclxuICAgICAgICAgIHZhciBhdWRpdG9ySWQgPSBuZXcgQXJyYXkoKTtcclxuICAgICAgICAgIHZhciBhdWRpdG9yTmFtZSA9IG5ldyBBcnJheSgpO1xyXG4gICAgICAgICAgaWYgKGpzb25BcnJheURhdGEubGVuZ3RoID09IDApIHtcclxuICAgICAgICAgICAgLy/liJfooajkuLrnqbpcclxuICAgICAgICAgICAgc2V0VmFyKFwiR0RfRXJyUmVhc29uXCIsIFwiQXVkaXRvckxpc3RFbXB0eVwiKTtcclxuICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0FVRElUT1JFTVBUWVwiKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwganNvbkFycmF5RGF0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBhdWRpdG9ySWQucHVzaChqc29uQXJyYXlEYXRhW2ldLnVzZXJOdW0pO1xyXG4gICAgICAgICAgICBhdWRpdG9yTmFtZS5wdXNoKGpzb25BcnJheURhdGFbaV0udXNlck51bSk7IC8v5Y+q5pi+56S655So5oi357yW56CBXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBjcmVhdGVTZWxlY3QoYXVkaXRvcklkLCBhdWRpdG9yTmFtZSwgXCJhdWRpdG9yXCIpO1xyXG4gICAgICAgICAgXHJcbiAgICAgICAgICBmb3IodmFyIGkgPSAwO2k8anNvbkFycmF5RGF0YS5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgLy8gYWxlcnQoXCJqc29uQXJyYXlEYXRhW1wiK2krXCJdLnVzZXJOYW0gOiBcIitqc29uQXJyYXlEYXRhW2ldLnVzZXJOYW0pO1xyXG4gICAgICAgICAgICAvLyBhbGVydChcImF1ZGl0b3IgOiBcIiskKFwiI2F1ZGl0b3JcIikudGV4dCgpKTtcclxuICAgICAgICAgICAgaWYoJChcIiNhdWRpdG9yXCIpLnRleHQoKSA9PSBcIlwiKXtcclxuICAgICAgICAgICAgICB2bS5uYW1lNFZhbHVlID0ganNvbkFycmF5RGF0YVswXS51c2VyTmFtO1xyXG4gICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGpzb25BcnJheURhdGFbaV0udXNlck51bSA9PSAkKFwiI2F1ZGl0b3JcIikudGV4dCgpKXtcclxuICAgICAgICAgICAgICB2bS5uYW1lNFZhbHVlID0ganNvbkFycmF5RGF0YVtpXS51c2VyTmFtO1xyXG4gICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICB2bS5uYW1lVmFsQXJyWzBdICA9IHZtLm5hbWU0VmFsdWU7XHJcbiAgICAgICAgICB2bS50ZW1wTmFtWzBdID0gdm0ubmFtZVZhbEFyclswXTtcclxuXHJcbiAgICAgICAgICBpZiAoZGF0YVs1XSAhPSBcIlwiICYmIGRhdGFbNV0gIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAkKFwiI2F1ZGl0b3JcIikuaHRtbChkYXRhWzVdKTtcclxuICAgICAgICAgICAgJChcIiNhdWRpdG9yXCIpLmF0dHIoXCJkYXRhLXZhbHVlXCIsIGRhdGFbNV0pO1xyXG4gICAgICAgICAgICBzZXRWYXIoXCJHRF9Vc3JOdW1cIiwgZGF0YVs1XSk7XHJcbiAgICAgICAgICAgIHNldFZhcihcIkdEX0EwMV9OdW1VckNmZ1wiLCBkYXRhWzVdKTtcclxuXHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAkKFwiI2F1ZGl0b3JcIikuaHRtbChhdWRpdG9yTmFtZVswXSk7XHJcbiAgICAgICAgICAgICQoXCIjYXVkaXRvclwiKS5hdHRyKFwiZGF0YS12YWx1ZVwiLCBhdWRpdG9ySWRbMF0pO1xyXG4gICAgICAgICAgICBzZXRWYXIoXCJHRF9Vc3JOdW1cIiwgYXVkaXRvck5hbWVbMF0pO1xyXG4gICAgICAgICAgICBzZXRWYXIoXCJHRF9BMDFfTnVtVXJDZmdcIiwgYXVkaXRvck5hbWVbMF0pO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgLy/liJfooajkuLrnqbpcclxuICAgICAgICAgIHNldFZhcihcIkdEX0VyclJlYXNvblwiLCBcIkF1ZGl0b3JMaXN0RW1wdHlcIik7XHJcbiAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfQVVESVRPUkVNUFRZXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwYWdlTG9nKFwiUGFnZSBHZXRWYWx1ZVtHRF9BMDFfRmluZ2VyU2hvd0NhbXBpY106XCIgKyBkYXRhWzFdKTtcclxuICAgICAgICAkKFwiI0lNR1wiKS5hdHRyKFwic3JjXCIsIGRhdGFbMV0pO1xyXG5cclxuICAgICAgICAvL+aPkOekuuS/oeaBr+WPguaVsOWMlu+8iOi9rOi0puWPljAwMDYz77yM5YW25L2Z6buY6K6k6K6+572u77yJXHJcbiAgICAgICAgdmFyIHN0ck1zZ1RpcCA9IFwiXCI7XHJcbiAgICAgICAgdmFyIHN0ck1zZyA9IFwiXCI7XHJcbiAgICAgICAgaWYgKHN0ck1lbnVJRCA9PSBcIjAzMDAwMVwiKSB7XHJcbiAgICAgICAgICAvL2lmIChTaG93RGl2TGlzdCAhPSBcIlwiICYmIFNob3dEaXZMaXN0ICE9IG51bGwgJiYgU2hvd0Rpdkxpc3QgIT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgIC8vICAgIHZhciBKc29uTXNnVGlwID0gSlNPTi5wYXJzZShTaG93RGl2TGlzdCk7XHJcbiAgICAgICAgICAvLyAgICBmb3IodmFyIGkgPSAwO2k8SnNvbk1zZ1RpcC5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgIC8vICAgICAgICBpZihKc29uTXNnVGlwW2ldWycwMDA2MyddICE9IFwiXCIgJiYgSnNvbk1zZ1RpcFtpXVsnMDAwNjMnXSAhPSBudWxsICYmIEpzb25Nc2dUaXBbaV1bJzAwMDYzJ10hPSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgIC8vICAgICAgICAgICAgc3RyTXNnVGlwID0gSnNvbk1zZ1RpcFtpXVsnMDAwNjMnXTtcclxuICAgICAgICAgIC8vICAgICAgICB9XHJcbiAgICAgICAgICAvLyAgICB9XHJcbiAgICAgICAgICAvL31cclxuICAgICAgICAgIC8vaWYoc3RyTXNnVGlwICE9IFwiXCIgJiYgc3RyTXNnVGlwICE9IG51bGwgJiYgc3RyTXNnVGlwICE9IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAvLyAgICB2YXIgc3RyTXNnVGlwQXJyYXkgPSBzdHJNc2dUaXAuc3BsaXQoXCJAQFwiKTtcclxuICAgICAgICAgIC8vICAgIGZvciAodmFyIGk9MDsgaTxzdHJNc2dUaXBBcnJheS5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAvLyAgICAgICAgaWYoc3RyTXNnID09IFwiXCIpe1xyXG4gICAgICAgICAgLy8gICAgICAgICAgIHN0ck1zZyA9IHN0ck1zZ1RpcEFycmF5W2ldO1xyXG4gICAgICAgICAgLy8gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgLy8gICAgICAgICAgICBzdHJNc2cgPSBzdHJNc2cgKyBcIjxicj5cIiArIHN0ck1zZ1RpcEFycmF5W2ldO1xyXG4gICAgICAgICAgLy8gICAgICAgIH1cclxuICAgICAgICAgIC8vICAgIH1cclxuICAgICAgICAgIC8vfVxyXG4gICAgICAgICAgLy9pZihzdHJNc2cgIT0gXCJcIiAmJiBzdHJNc2cgIT0gbnVsbCAmJiBzdHJNc2cgIT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgIC8vICAgICQoXCIjQXVkaXRUaXBzXCIpLmh0bWwoc3RyTXNnKTtcclxuICAgICAgICAgIC8vfWVsc2V7XHJcbiAgICAgICAgICAvLyAgICAkKFwiI0F1ZGl0VGlwc1wiKS5odG1sKFwiMS7or7fmoLjlrp7or6XnrJTkuJrliqHmmK/lkKbkuLrlrqLmiLfmnKzkurrlip7nkIY8YnI+Mi7or7fnoa7orqTlrqLmiLfnrb7lkI3mmK/lkKblh4bnoa5cIik7XHJcbiAgICAgICAgICAvL31cclxuICAgICAgICAgICQoXCIjQXVkaXRUaXBzXCIpLmh0bWwoXHJcbiAgICAgICAgICAgIFwiMS7or7fmj5DphpLlrqLmiLfms6jmhI/otYTph5HlronlhajvvIzosKjpmLLnlLXkv6Hor4jpqpc8YnI+Mi7or7fnoa7orqTlrqLmiLfnrb7lkI3mmK/lkKblh4bnoa48YnI+My7mj5DphpLlrqLmiLflrp7ml7bovazotKbkuI3lj6/mkqTplIBcIlxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9IGVsc2UgaWYgKFxyXG4gICAgICAgICAgKFwiMDEwMDAyXCIgPT0gc3RyTWVudUlEIHx8XHJcbiAgICAgICAgICAgIFwiMDEwMDAxXCIgPT0gc3RyTWVudUlEIHx8XHJcbiAgICAgICAgICAgIFwiMDYwMDAxXCIgPT0gc3RyTWVudUlEKSAmJlxyXG4gICAgICAgICAgXCIxXCIgPT0gZGF0YVs3XVxyXG4gICAgICAgICkge1xyXG4gICAgICAgICAgLy/otYTmlpnkv67mlLkv5byA5Y2hL+WfuumHkeetvue6pkFQUOS4lOWGm+S6uuiBjOS4muWPmOabtFxyXG4gICAgICAgICAgJChcIiNBdWRpdFRpcHNcIikuaHRtbChcclxuICAgICAgICAgICAgXCIxLuivt+aguOWunuivpeeslOS4muWKoeaYr+WQpuS4uuWuouaIt+acrOS6uuWKnueQhjxicj4yLuivt+ehruiupOWuouaIt+etvuWQjeaYr+WQpuWHhuehrjxicj4zLuiBjOS4muacieWPmOabtO+8jOivt+aguOWvueWGm+S6uuiBjOS4muS/oeaBr++8jOW5tueVmeWtmOebuOWFs+ivgeaYjuadkOaWmVwiXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgICAgJChcIiNBdWRpdFRpcHNcIikuY3NzKFwiZm9udC1zaXplXCIsIFwiMi4wcmVtXCIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAkKFwiI0F1ZGl0VGlwc1wiKS5odG1sKFwiMS7or7fmoLjlrp7or6XnrJTkuJrliqHmmK/lkKbkuLrlrqLmiLfmnKzkurrlip7nkIY8YnI+Mi7or7fnoa7orqTlrqLmiLfnrb7lkI3mmK/lkKblh4bnoa5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vICBhbGVydChcImRhdGExXCIrZGF0YVsxXSk7XHJcbiAgICAgICAgaWYgKGRhdGFbMl0gPT0gXCIxMFwiKSB7XHJcbiAgICAgICAgICAkKFwiI0Vycm9ySW5mb1wiKS5odG1sKFwi6K+36YCJ5oup55So5oi35ZCOPGJyPui/m+ihjOaMh+e6ueehruiupFwiKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgJChcIiNFcnJvckluZm9cIikuaHRtbChcIuivt+mHjeaMieaMh+e6uTxicj7liankvZnmrKHmlbDvvJpcIiArIGRhdGFbMl0gKyBcIuasoVwiKTtcclxuICAgICAgICAgICQoXCIjRXJyb3JJbmZvXCIpLmNzcyhcImNvbG9yXCIsIFwicmVkXCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy/muIXnqbrnlKjmiLfkv6Hmga8s6YeN5paw6YCJ5oupXHJcbiAgICAgICAgLy9zZXRWYXIoXCJHRF9Vc3JOdW1cIixcIlwiKTtcclxuICAgICAgICB2YXIgbm9kZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbbmFtZT1cIm5pY2Utc2VsZWN0XCJdIGxpJyk7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBub2Rlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgbm9kZXNbaV0ub25jbGljayA9IG9uTmljZVNlbGVjdExpQ2xpY2s7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZ1bmN0aW9uIG9uTmljZVNlbGVjdExpQ2xpY2soZSkge1xyXG4gICAgICAgICAgLy92YXIgdHh0ID0gJCh0aGlzKS50ZXh0KCk7XHJcbiAgICAgICAgICAvL+S/neWtmOWuoeaguOWRmOe8lueggVxyXG4gICAgICAgICAgdmFyIHZhbCA9ICQodGhpcykuYXR0cihcImRhdGEtdmFsdWVcIik7XHJcbiAgICAgICAgICBzZXRWYXIoXCJHRF9Vc3JOdW1cIiwgdmFsKTtcclxuICAgICAgICAgIHNldFZhcihcIkdEX0EwMV9OdW1VckNmZ1wiLCB2YWwpO1xyXG5cclxuICAgICAgICAgIHZhciBpbmRleCA9ICQodGhpcykuaW5kZXgoKTtcclxuXHJcbiAgICAgICAgICB2bS5uYW1lNFZhbHVlID0ganNvbkFycmF5RGF0YVtwYXJzZUludChpbmRleCldLnVzZXJOYW07XHJcbiAgICAgICAgICAvLyBmb3IgKHZhciBpID0gMDsgaSA8IGpzb25BcnJheURhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIC8vICAgICBpZihqc29uQXJyYXlEYXRhW2ldLnVzZXJOdW0gPT0gdmFsKXtcclxuICAgICAgICAgIC8vICAgICAgICAgYWxlcnQoanNvbkFycmF5RGF0YVtpXS51c2VyTmFtKTtcclxuICAgICAgICAgIC8vICAgICAgICAgdm0ubmFtZTRWYWx1ZSA9IGpzb25BcnJheURhdGFbaV0udXNlck5hbTtcclxuICAgICAgICAgIC8vICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAvLyAgICAgfVxyXG4gICAgICAgICAgLy8gfSBcclxuICAgICAgICAgIHZtLm5hbWVWYWxBcnJbMF0gPSB2bS5uYW1lNFZhbHVlO1xyXG4gICAgICAgICAgdm0udGVtcE5hbVswXSA9IHZtLm5hbWVWYWxBcnJbMF07XHJcblxyXG4gICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8vLy8vLy8vLy8vLy8v5Yid5aeL5YyW5pON5L2c5Lq65Lq65ZCNLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuICAgICAgICAvLyBmb3IgKHZhciBpID0gMDsgaSA8IGpzb25BcnJheURhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAvLyAgIGlmICgkKFwiI2F1ZGl0b3JcIikuaHRtbCgpID09IGpzb25BcnJheURhdGFbaV0udXNlck51bSkge1xyXG4gICAgICAgIC8vICAgICB2bS5uYW1lNFZhbHVlID0ganNvbkFycmF5RGF0YVtpXS51c2VyTmFtO1xyXG4gICAgICAgIC8vICAgfVxyXG4gICAgICAgIC8vIH1cclxuICAgICAgfVxyXG4gICAgKTtcclxuICAgIERhdGFUb29scy5nZXQoXHJcbiAgICAgIFwiR0RfQTAxX1RyYW5zX0NyZWRpdGhpZ2h8R0RfQTAxX1RjcENhcmRfRGF0YXxHRF9BMDFfVHJhbnNfUmVjb21wcmN8R0RfQTAxX1RyYW5zX1JlY29tcHJvY2NvcmR8R0RfQTAxX1RyYW5zX1ByY2ZlYXR1cmV8R0RfQTAxX1RyYW5zX01rdGV2ZW50XCIsXHJcbiAgICAgIGZ1bmN0aW9uKGRhdGEpIHtcclxuICAgICAgICB2bS5yZWNvbXByYyA9IGRhdGFbMl07IC8v5o6o6I2Q5Y2h56eNXHJcbiAgICAgICAgdm0ucHJjZmVhdHVyZSA9IGRhdGFbNF07IC8v5Y2h56eN54m56ImyXHJcbiAgICAgICAgdm0ubWt0ZXZlbnQgPSBkYXRhWzVdOyAvL+iQpemUgOa0u+WKqFxyXG4gICAgICAgIHZtLkNyZWRpdGhpZ2ggPSBkYXRhWzBdOyAvL+mihOaOiOS/oeWdh+WAvFxyXG4gICAgICAgIC8v5Zu+54mH6Lev5b6EXHJcbiAgICAgICAgdm0uUGljX1VSTCA9IEdldFZsdVBpY1NyYyhkYXRhWzNdLCBkYXRhWzFdKSArIGRhdGFbM10gKyBcIi5qcGdcIjtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gR2V0Vmx1UGljU3JjKHN0clByb2R1Y3RDb3JkLCBzdHJKc29uRGF0YSkge1xyXG4gICAgICAgICAgLy/moLnmja7kuqflk4Hku6PnoIHmn6Xor6Lkuqflk4Hlm77niYfot6/lvoRcclxuICAgICAgICAgIGlmIChcIlwiICE9IHN0ckpzb25EYXRhICYmIHVuZGVmaW5lZCAhPSBzdHJKc29uRGF0YSkge1xyXG4gICAgICAgICAgICAvL+i9rEpTT07lr7nosaFcclxuICAgICAgICAgICAgdmFyIGpzb25EYXRhID0gSlNPTi5wYXJzZShzdHJKc29uRGF0YSk7XHJcbiAgICAgICAgICAgIC8v6YGN5Y6G5pWw5o2u5a2X5YW45Lit55qE5omA5pyJ5Z+66YeR57G75Z6LXHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwganNvbkRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICBpZiAoc3RyUHJvZHVjdENvcmQgPT0ganNvbkRhdGFbaV0uQ09EX1BEKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4ganNvbkRhdGFbaV0uVkxVX1BJQ18xO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgcmV0dXJuIFwiXCI7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICApO1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyZVNpZ25OYW1lXCIpLm9uY2xpY2sgPSBvblJlU2lnbk5hbWU7XHJcbiAgICBmdW5jdGlvbiBvblJlU2lnbk5hbWUoKSB7XHJcbiAgICAgIGV4aXRTY2VuZShcIlNUQV9SRVNJR05cIik7XHJcbiAgICB9XHJcbiAgICAvL+e8qeWwj1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fWm9vbU91dFwiKS5vbmNsaWNrID0gb25ab29tT3V0O1xyXG4gICAgZnVuY3Rpb24gb25ab29tT3V0KCkge1xyXG4gICAgICBQREZWaWV3ZXIuWm9vbU91dCgpO1xyXG4gICAgfVxyXG4gICAgLy/mlL7lpKdcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX1pvb21JblwiKS5vbmNsaWNrID0gb25ab29tSW47XHJcbiAgICBmdW5jdGlvbiBvblpvb21JbigpIHtcclxuICAgICAgUERGVmlld2VyLlpvb21JbigpO1xyXG4gICAgfVxyXG4gICAgLy/lhbbku5bmjInpkq5cclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiT3RoZXJCdXR0b25cIikub25jbGljayA9IG9uT250aGVyO1xyXG4gICAgZnVuY3Rpb24gb25PbnRoZXIoKSB7XHJcbiAgICAgICQoXCIjT3RoZXJCdXR0b25cIikucHJvcChcImRpc2FibGVkXCIsIHRydWUpO1xyXG4gICAgICBpZiAoYkJ1dHRvbikge1xyXG4gICAgICAgICQoXCIjT3RoZXJCdXR0b25cIikuaHRtbChzdHJPbnRoZXJCdXR0b25OYW1lMSk7XHJcbiAgICAgICAgblJldCA9IFBERlZpZXdlci5PcGVuRmlsZShzdHJwZGYxKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAkKFwiI090aGVyQnV0dG9uXCIpLmh0bWwoc3RyT250aGVyQnV0dG9uTmFtZTIpO1xyXG4gICAgICAgIG5SZXQgPSBQREZWaWV3ZXIuT3BlbkZpbGUoc3RycGRmMik7XHJcbiAgICAgIH1cclxuICAgICAgYkJ1dHRvbiA9ICFiQnV0dG9uO1xyXG4gICAgICBzZXRUaW1lb3V0KFVuZGlzYWJsZWRCdXR0b24sIDIwMDApO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gVW5kaXNhYmxlZEJ1dHRvbigpIHtcclxuICAgICAgJChcIiNPdGhlckJ1dHRvblwiKS5wcm9wKFwiZGlzYWJsZWRcIiwgZmFsc2UpO1xyXG4gICAgfVxyXG4gICAgLy/nsr7lh4bokKXplIDlpITnkIZcclxuICAgIERhdGFUb29scy5nZXQoXHJcbiAgICAgIFwiR0RfTWFya2V0aW5nQWxsTnVtYmVyfEdEX0EwMV9UcmFuc19UYWdmbGd8R0RfQTAxX0NvZFBkYnJlZWR8R0RfQTAxX0lzTG9naW5cIixcclxuICAgICAgZnVuY3Rpb24oZGF0YSkge1xyXG5cclxuICAgICAgICB2YXIgc3RyQ29kUGRicmVlZCA9IGRhdGFbMl0udHJpbSgpOyAvL+S6jOe7tOeggeaOqOmAgeWGheWuuVxyXG4gICAgICAgIGlmIChkYXRhWzNdID09IFwiMVwiKSB7XHJcbiAgICAgICAgICAvL+WPquacieeZu+W9leaooeW8j+aJjeacieiiq+WKqOiQpemUgFxyXG4gICAgICAgICAgLy/mnInokKXplIDkuqflk4FcclxuICAgICAgICAgIGlmIChwYXJzZUludChkYXRhWzBdKSA+PSAxKSB7XHJcbiAgICAgICAgICAgIC8v6JCl6ZSA5Lqn5ZOB5pWw6YePPj0x5YiZ5Y+v54K55Ye7RW1haWzlm77niYdcclxuICAgICAgICAgICAgaWYgKFwiTlwiID09IGRhdGFbMV0pIHtcclxuICAgICAgICAgICAgICB2bS5QYWdlMSA9IHRydWU7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgdm0uUGFnZTEgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoc3RyQ29kUGRicmVlZC5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgdm0uUGFnZTIgPSB0cnVlO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHZtLlBhZ2UyID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICAgIHN0ckNvZFBkYnJlZWQuaW5kZXhPZihcIlAwMDAxM1wiKSAhPSAtMSAmJlxyXG4gICAgICAgICAgICAgIHN0ckNvZFBkYnJlZWQuaW5kZXhPZihcIlAwMDAwOFwiKSA9PSAtMSAmJlxyXG4gICAgICAgICAgICAgIHN0ckNvZFBkYnJlZWQuaW5kZXhPZihcIlAwMDAwOVwiKSA9PSAtMVxyXG4gICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICB2bS5tYXJrZXRpbmdUZXh0ID0gdm0ubWFya2V0aW5nVGV4dDI7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgdm0ubWFya2V0aW5nVGV4dCA9IHZtLm1hcmtldGluZ1RleHQxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZtLiRyb290LlNhbGVQcm9kU3VtID0gZGF0YVswXTtcclxuICAgICAgICAgICAgdm0uJHJvb3Quc2FsZVNob3cgPSB0cnVlO1xyXG4gICAgICAgICAgICB2bS4kcm9vdC5TYWxlUHJvZFN1bVNob3cgPSB0cnVlO1xyXG4gICAgICAgICAgICAkKFwiLmVtYWlsZlwiKS5jc3MoXCJkaXNwbGF5XCIsIFwiaW5saW5lLWJsb2NrXCIpO1xyXG4gICAgICAgICAgICAkKFwiLmVtYWlsZlwiKVxyXG4gICAgICAgICAgICAgIC5jaGlsZHJlbigpXHJcbiAgICAgICAgICAgICAgLmh0bWwodm0uJHJvb3QuU2FsZVByb2RTdW0pO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdm0uJHJvb3QuU2FsZVByb2RTdW0gPSBcIlwiO1xyXG4gICAgICAgICAgICB2bS4kcm9vdC5zYWxlU2hvdyA9IGZhbHNlO1xyXG4gICAgICAgICAgICB2bS4kcm9vdC5TYWxlUHJvZFN1bVNob3cgPSB0cnVlO1xyXG4gICAgICAgICAgICAkKFwiLmVtYWlsZlwiKS5jc3MoXCJkaXNwbGF5XCIsIFwibm9uZVwiKTtcclxuICAgICAgICAgICAgJChcIi5lbWFpbGZcIilcclxuICAgICAgICAgICAgICAuY2hpbGRyZW4oKVxyXG4gICAgICAgICAgICAgIC5odG1sKCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICApO1xyXG4gICAgdGhpcy5pbml0UGFnZSgpO1xyXG4gIH0sXHJcbiAgbWV0aG9kczoge1xyXG4gICAgaW5pdFBhZ2UoKSB7XHJcbiAgICAgIHRoaXMuaW5pdFBvb2wodGhpcy4kZGF0YSk7XHJcbiAgICB9LFxyXG4gICAgT25DbG9zZSgpIHtcclxuICAgICAgJChcIiNQREZWaWV3ZXJcIilcclxuICAgICAgICAuYXR0cihcImhlaWdodFwiLCBcIjYwJVwiKVxyXG4gICAgICAgIC5hdHRyKFwid2lkdGhcIiwgXCI2MCVcIilcclxuICAgICAgICAuY3NzKFwibGVmdFwiLCBcIjglXCIpO1xyXG4gICAgICAkKFwiI2lucHV0UG9wdXBcIikuY3NzKFwiZGlzcGxheVwiLCBcIm5vbmVcIik7XHJcbiAgICB9LFxyXG4gICAgbWFueVRlc3QoKSB7XHJcbiAgICAgICAgICAvL+e9keaNt+i0t+WFs+mXre+8jOW+heWQjue7reS/ruaUuSEhIVxyXG4gICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuYW0wMlwiKS5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5hbTAzXCIpLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibmFtMDRcIikuZGlzYWJsZWQgPSB0cnVlO1xyXG5cclxuICAgICAgLy8gZm9yKHZhciBpID0gMDtpPHRoaXMuSnNvbkRhdGFGb3JEZWZhdWx0Lmxlbmd0aDtpKyspe1xyXG4gICAgICAvLyAgICAgLy8gYWxlcnQoXCJKc29uRGF0YUZvckRlZmF1bHRbXCIraStcIl0udXNlck5hbSA6IFwiK3RoaXMuSnNvbkRhdGFGb3JEZWZhdWx0W2ldLnVzZXJOYW0pO1xyXG4gICAgICAvLyAgICAgLy8gYWxlcnQoXCJuaWNlLXNlbGVjdCA6IFwiKyQoXCIjbmljZS1zZWxlY3RcIikuZmluZCgnLnNlbC10aXRsZScpLmh0bWwoKSk7XHJcbiAgICAgIC8vICAgICAgIGlmKHRoaXMuSnNvbkRhdGFGb3JEZWZhdWx0W2ldLnVzZXJOdW0gPT0gJChcIiNuaWNlLXNlbGVjdFwiKS5maW5kKCcuc2VsLXRpdGxlJykuaHRtbCgpKXtcclxuICAgICAgLy8gICAgICAgICB0aGlzLm5hbWU0VmFsdWUgPSB0aGlzLkpzb25EYXRhRm9yRGVmYXVsdFtpXS51c2VyTmFtO1xyXG4gICAgICAvLyAgICAgICAgIC8vIGFsZXJ0KFwidGhpcy5uYW1lNFZhbHVlIDogXCIrdGhpcy5uYW1lNFZhbHVlKTtcclxuICAgICAgLy8gICAgICAgICB0aGlzLm5hbWU0VmFsID0gdGhpcy5Kc29uRGF0YUZvckRlZmF1bHRbaV0udXNlck51bSArIFwifFwiICsgdGhpcy5uYW1lNFZhbHVlO1xyXG4gICAgICAvLyAgICAgICAgIC8vIGFsZXJ0KFwidGhpcy5uYW1lNFZhbCA6IFwiK3RoaXMubmFtZTRWYWwpO1xyXG4gICAgICAvLyAgICAgICAgIHRoaXMubmFtZVZhbEFyclswXSAgPSB0aGlzLm5hbWU0VmFsdWU7XHJcbiAgICAgIC8vICAgICAgICAgdGhpcy5tYXJrZXRlckFyclswXSA9IHRoaXMubmFtZTRWYWw7XHJcbiAgICAgIC8vICAgICAgICAgc2V0VmFyKFwiRDAwX0QwMl9tYXJrZXRQZXJzb25Ob3cxXCIsIHRoaXMubWFya2V0ZXJBcnJbMF0pO1xyXG4gICAgICAvLyAgICAgICAgIC8vIHRoaXMubmFtZVZhbEFyclszXSAgPSB0aGlzLm5hbWU0VmFsdWU7XHJcbiAgICAgIC8vICAgICAgICAgLy8gdGhpcy5tYXJrZXRlckFyclszXSA9IHRoaXMubmFtZTRWYWw7XHJcbiAgICAgIC8vICAgICAgICAgYnJlYWs7XHJcbiAgICAgIC8vICAgICAgIH1cclxuICAgICAgLy8gICAgIH1cclxuICAgICAgdGhpcy5tYXJrZXRQZXJzb25JZExpc3QgPSBcIlwiO1xyXG4gICAgLy8gICB2YXIgSnNvbk1hcmtldEluZm9MaXN0ID0gXCJcIjtcclxuICAgICAgdmFyIG51bSA9IHRoaXMuSnNvbk1hcmtldEluZm9MaXN0Lmxlbmd0aDtcclxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW07IGkrKykge1xyXG4gICAgICAgIHRoaXMubWFya2V0UGVyc29uSWRMaXN0ICs9IHRoaXMuSnNvbk1hcmtldEluZm9MaXN0W2ldLmtleTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy5Qb3B1cFNob3cgPSB0cnVlO1xyXG4gICAgICB0aGlzLnNob3dNYXJrZXRlciA9IHRydWU7XHJcbiAgICAgIHRoaXMuaWZIaWRkZW4gPSB0cnVlO1xyXG4gICAgICAvLyAgICB0aGlzLnNob3dNYXJrZXRlciA9IHRydWU7XHJcbiAgICAgIC8vICAgIHNldFZhcihcIkQwMF9EMDJfaGFzUmVnaXN0ZWRcIiwxKTsvL+ihqOekuui/m+ihjOS6huWunuaXtueZu+iusFxyXG4gICAgfSxcclxuICAgIGVudGVyTmFtKHZhbCkge1xyXG4gICAgICAvLyBhbGVydChcImluIGVudGVyTmFtIDogXCIgKyB2YWwpO1xyXG4gICAgICB0aGlzLm1hcmtldGVyTnVtID0gdmFsO1xyXG4gICAgICB0aGlzLmlmSGlkZGVuID0gdHJ1ZTtcclxuICAgICAgdGhpcy5Qb3B1cFNob3cgPSB0cnVlO1xyXG4gICAgICB0aGlzLnNob3dNYXJrZXRlciA9IHRydWU7XHJcbiAgICB9LFxyXG4gICAgb25CdG5TdWJtaXQoKSB7XHJcbiAgICAgIHRoaXMuUG9wdXBTaG93ID0gZmFsc2U7XHJcbiAgICAgIHRoaXMuc2hvd01hcmtldGVyID0gZmFsc2U7XHJcbiAgICAgIGZvcih2YXIgaSA9IDA7aSA8IDQ7aSsrKXtcclxuICAgICAgICBpZih0aGlzLm1hcmtldGVyQXJyW2ldID09IHVuZGVmaW5lZCB8fCB0aGlzLm1hcmtldGVyQXJyW2ldID09IFwidW5kZWZpbmVkXCIpe1xyXG4gICAgICAgICAgdGhpcy5tYXJrZXRlckFycltpXSA9IFwiXCI7Ly/mnKrlrprkuYnliJnkuIrpgIHnqbrlgLxcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy50ZW1wTmFtW2ldID0gdGhpcy5uYW1lVmFsQXJyW2ldO1xyXG4gICAgICAgIHRoaXMudGVtcE1hcmtldFtpXSA9IHRoaXMubWFya2V0ZXJBcnJbaV07XHJcbiAgICAgIH1cclxuICAgICAgaWYodGhpcy5uYW1lNFZhbHVlICE9IHRoaXMubWFya2V0ZXJBcnJbMF0pe1xyXG4gICAgICAgIHNldFZhcihcIkQwMl9pZkF1ZGl0b3JcIixcIjBcIik7XHJcbiAgICAgIH1cclxuICAgICAgc2V0VmFyKFwiRDAwX0QwMl9tYXJrZXRQZXJzb25Ob3cxXCIsIHRoaXMubWFya2V0ZXJBcnJbMF0pO1xyXG4gICAgICBzZXRWYXIoXCJEMDBfRDAyX21hcmtldFBlcnNvbk5vdzJcIiwgdGhpcy5tYXJrZXRlckFyclsxXSk7XHJcbiAgICAgIHNldFZhcihcIkQwMF9EMDJfbWFya2V0UGVyc29uTm93M1wiLCB0aGlzLm1hcmtldGVyQXJyWzJdKTtcclxuICAgICAgc2V0VmFyKFwiRDAwX0QwMl9tYXJrZXRQZXJzb25Ob3c0XCIsIHRoaXMubWFya2V0ZXJBcnJbM10pO1xyXG4gICAgfSxcclxuICAgIG9uQnRuQ2FuY2VsKCl7XHJcbiAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCA0O2krKyl7XHJcbiAgICAgICAgaWYodGhpcy5uYW1lVmFsQXJyW2ldICE9IHVuZGVmaW5lZCAmJiB0aGlzLnRlbXBOYW1baV0gIT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgIHRoaXMubmFtZVZhbEFycltpXSA9IHRoaXMudGVtcE5hbVtpXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYodGhpcy5tYXJrZXRlckFycltpXSAhPSB1bmRlZmluZWQgJiYgdGhpcy50ZW1wTWFya2V0W2ldICE9IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICB0aGlzLm1hcmtldGVyQXJyW2ldID0gdGhpcy50ZW1wTWFya2V0W2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICB0aGlzLlBvcHVwU2hvdyA9IGZhbHNlO1xyXG4gICAgICB0aGlzLnNob3dNYXJrZXRlciA9IGZhbHNlO1xyXG4gICAgICAgIC8vICQoXCIjUERGVmlld2VyXCIpLmNzcyhcImRpc3BsYXlcIixcImlubGluZS1ibG9ja1wiKTtcclxuICAgIH0sXHJcbiAgICBvbkJ0bkNsZWFyKCl7XHJcbiAgICAgIGZvcih2YXIgaSA9IDA7aSA8IDQ7aSsrKXtcclxuICAgICAgICAvLyB0aGlzLm1hcmtldGVyQXJyW2ldID09IFwiXCI7XHJcbiAgICAgICAgdGhpcy50ZW1wTmFtW2ldID0gXCJcIjtcclxuICAgICAgICB0aGlzLnRlbXBNYXJrZXRbaV0gPSBcIlwiO1xyXG4gICAgICAgIGlmKHRoaXMubmFtZVZhbEFycltpXSAhPSB1bmRlZmluZWQgJiYgdGhpcy5uYW1lVmFsQXJyW2ldICE9IFwidW5kZWZpbmVkXCIpe1xyXG4gICAgICAgICAgdGhpcy5uYW1lVmFsQXJyW2ldID0gXCJcIjtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgdGhpcy5Qb3B1cFNob3cgPSBmYWxzZTtcclxuICAgICAgICAgIHRoaXMuc2hvd01hcmtldGVyID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuUG9wdXBTaG93ID0gdHJ1ZTtcclxuICAgICAgdGhpcy5zaG93TWFya2V0ZXIgPSB0cnVlO1xyXG4gICAgfSxcclxuICAgIEhpZEJEKCl7XHJcbiAgICAgIGlmKHRoaXMuaWZIaWRkZW4gPT0gdHJ1ZSl7XHJcbiAgICAgICAgdGhpcy5pZkhpZGRlbiA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMub25CdG5DYW5jZWwoKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIG9uTWFueUNhbmNlbCgpIHtcclxuICAgICAgdGhpcy5zaG93TWFya2V0ZXIgPSBmYWxzZTtcclxuICAgIH0sXHJcbiAgICBvbkluc2VydE5hbWUoKSB7XHJcbiAgICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICAgIHZtLmlpZCA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQuaWQ7XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiXCIgKyB2bS5paWQgKyBcIlwiKS52YWx1ZSA9IFwiXCI7XHJcbiAgICAgIC8vIFx0XHRcdGFsZXJ0KFwi5b2T5YmN54K55Ye755qEaWRcIit2bS5paWQpO1xyXG4gICAgICAvLyBcdFx0XHRhbGVydChcIuW8gOWQr+W8ueahhlwiKTtcclxuICAgICAgdm0uc2hvd1BlcnNvbiA9IHRydWU7XHJcbiAgICB9LFxyXG4gICAgb25DaG9vc2VMZXZlbChpbmRleCwgaXRlbSkge1xyXG4gICAgICB0aGlzLm1hcmtldGVyQ29kZSA9IGl0ZW0udmFsdWU7XHJcbiAgICAgIHRoaXMubWFya2V0ZXJOYW1lID0gaXRlbS5rZXk7XHJcblxyXG4gICAgICAvLyBpZiAodGhpcy5tYXJrZXRlck51bSA9PSAxIHx8IHRoaXMubWFya2V0ZXJOdW0gPT0gMikge1xyXG4gICAgICAgIC8vIOS/neWtmOWOn+WQje+8jOS7peWkh+WPlua2iFxyXG4gICAgICAgIC8vIGlmKHRoaXMubmFtZVZhbEFyclt0aGlzLm1hcmtldGVyTnVtXSAhPSBcIlwiICYmIHRoaXMubmFtZVZhbEFyclt0aGlzLm1hcmtldGVyTnVtXSAhPSB1bmRlZmluZWQpe1xyXG4gICAgICAgIC8vICAgdGhpcy50ZW1wTmFtW3RoaXMubWFya2V0ZXJOdW1dID0gdGhpcy5uYW1lVmFsQXJyW3RoaXMubWFya2V0ZXJOdW1dO1xyXG4gICAgICAgIC8vIH1cclxuICAgICAgICAvLyBpZih0aGlzLm1hcmtldGVyQXJyW3RoaXMubWFya2V0ZXJOdW1dICE9IFwiXCIgJiYgdGhpcy5tYXJrZXRlckFyclt0aGlzLm1hcmtldGVyTnVtXSAhPSB1bmRlZmluZWQpe1xyXG4gICAgICAgIC8vICAgdGhpcy50ZW1wTWFya2V0W3RoaXMubWFya2V0ZXJOdW1dID0gdGhpcy5tYXJrZXRlckFyclt0aGlzLm1hcmtldGVyTnVtXTtcclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgdGhpcy5uYW1lVmFsQXJyW3RoaXMubWFya2V0ZXJOdW1dID0gaXRlbS5rZXk7XHJcbiAgICAgICAgdGhpcy5tYXJrZXRlckFyclt0aGlzLm1hcmtldGVyTnVtXSA9IGl0ZW0udmFsdWUgKyBcInxcIiArIGl0ZW0ua2V5O1xyXG4gICAgICAgIHRoaXMuaWZIaWRkZW4gPSB0cnVlO1xyXG4gICAgICAvLyB9XHJcbiAgICAgIC8vIHRoaXMubmFtZVZhbEFyclt0aGlzLm1hcmtldGVyTnVtXSA9IGl0ZW0ua2V5O1xyXG4gICAgICAvLyB0aGlzLm1hcmtldGVyQXJyW3RoaXMubWFya2V0ZXJOdW1dID0gaXRlbS52YWx1ZSArIFwifFwiICsgaXRlbS5rZXk7XHJcblxyXG4gICAgICB0aGlzLnNob3dQZXJzb24gPSBmYWxzZTtcclxuICAgICAgdGhpcy5zaG93TWFya2V0ZXIgPSB0cnVlO1xyXG4gICAgfSxcclxuICAgIG9uQ2FuY2VsKCkge1xyXG4gICAgICB0aGlzLnNob3dNYXJrZXRlciA9IGZhbHNlO1xyXG4gICAgICB0aGlzLlBvcHVwU2hvdyA9IGZhbHNlO1xyXG4gICAgfSxcclxuICAgIC4uLm1hcEFjdGlvbnMoW1xyXG4gICAgICBcImluaXRQb29sXCIsXHJcbiAgICAgIFwiZmV0Y2hcIixcclxuICAgICAgXCJzdWJtaXRcIixcclxuICAgICAgXCJvbkNhbmNlbFwiLFxyXG4gICAgICBcIm9uQ29udGludWVcIixcclxuICAgICAgXCJleGl0U2NlbmVcIlxyXG4gICAgXSlcclxuICAgIC8vLi4ubWFwQWN0aW9ucyhbJ2luaXRQb29sJywnZmV0Y2gnLCdleGl0U2NlbmUnXSlcclxuICB9LFxyXG4gIHdhdGNoOiB7XHJcbiAgICBwb29sKHZhbHVlKSB7XHJcbiAgICAgIC8v55uR5ZCs5pWw5o2u5rGg5Y+Y6YeP5piv5ZCm5bey6L+U5Zue77yM5L+d6K+B5pWw5o2u5rGg6I635Y+W5oiQ5Yqf5ZCO5YaN5riy5p+T6aG16Z2iXHJcbiAgICAgIGlmICh2YWx1ZS5oYXNPd25Qcm9wZXJ0eShcIkdEX0EwMV9UcmFuc19Na3RldmVudFwiKSkge1xyXG4gICAgICAgIHRoaXMuaW5pdERhdGEoKTtcclxuXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn07XHJcbjwvc2NyaXB0PiAiLCJ2YXIgX192dWVfX29wdGlvbnNfXyA9ICh0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09IFwiZnVuY3Rpb25cIj8gbW9kdWxlLmV4cG9ydHMub3B0aW9uczogbW9kdWxlLmV4cG9ydHMpXG5pZiAoX192dWVfX29wdGlvbnNfXy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWVpZnldIGZ1bmN0aW9uYWwgY29tcG9uZW50cyBhcmUgbm90IHN1cHBvcnRlZCBhbmQgc2hvdWxkIGJlIGRlZmluZWQgaW4gcGxhaW4ganMgZmlsZXMgdXNpbmcgcmVuZGVyIGZ1bmN0aW9ucy5cIil9XG5fX3Z1ZV9fb3B0aW9uc19fLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF92bS5fbSgwKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW2Z1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLFtfYygnaGVhZGVyJyx7c3RhdGljQ2xhc3M6XCJoZWFkZXJcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImhlYWRlcl9yaWdodGFyZWFcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInRpbWVcIixhdHRyczp7XCJpZFwiOlwiQ291bnREb3duXCJ9fSldKV0pLF92bS5fdihcIiBcIiksX2MoJ21haW4nLHtzdGF0aWNDbGFzczpcIm1haW5cIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInB1Yl9jb250ZW50XCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJwYW5lbFwifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczpcInRpdGxlXCJ9LFtfdm0uX3YoXCLkv6Hmga/mj5DnpLpcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdwJyx7c3RhdGljQ2xhc3M6XCJjZW50ZXJfdGl0bGVcIixhdHRyczp7XCJpZFwiOlwiTWFpbjFcIn19LFtfdm0uX3YoXCLmlbDmja7lupPnu7TmiqTkuK3vvIzor7fnqI3lgJkuLi5cIildKV0pXSldKV0pfV1cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHsgIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIHRydWUpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi0zM2M3YzM0NFwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtMzNjN2MzNDRcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfVxufSkoKX0iLCJ2YXIgX192dWVfX29wdGlvbnNfXyA9ICh0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09IFwiZnVuY3Rpb25cIj8gbW9kdWxlLmV4cG9ydHMub3B0aW9uczogbW9kdWxlLmV4cG9ydHMpXG5pZiAoX192dWVfX29wdGlvbnNfXy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWVpZnldIGZ1bmN0aW9uYWwgY29tcG9uZW50cyBhcmUgbm90IHN1cHBvcnRlZCBhbmQgc2hvdWxkIGJlIGRlZmluZWQgaW4gcGxhaW4ganMgZmlsZXMgdXNpbmcgcmVuZGVyIGZ1bmN0aW9ucy5cIil9XG5fX3Z1ZV9fb3B0aW9uc19fLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF92bS5fbSgwKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW2Z1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLFtfYygnaGVhZGVyJyx7c3RhdGljQ2xhc3M6XCJoZWFkZXJcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImhlYWRlcl9yaWdodGFyZWFcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInRpbWVcIixhdHRyczp7XCJpZFwiOlwiQ291bnREb3duXCJ9fSldKV0pLF92bS5fdihcIiBcIiksX2MoJ21haW4nLHtzdGF0aWNDbGFzczpcIm1haW5cIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInB1Yl9jb250ZW50XCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJwYW5lbFwifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczpcInRpdGxlXCJ9LFtfdm0uX3YoXCLkv6Hmga/mj5DnpLpcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdwJyx7c3RhdGljQ2xhc3M6XCJjZW50ZXJfdGl0bGVcIixhdHRyczp7XCJpZFwiOlwiTWFpbjFcIn19LFtfdm0uX3YoXCLoj5zljZXkuIvovb3kuK3vvIzor7fnqI3lgJkuLi5cIildKV0pXSldKV0pfV1cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHsgIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIHRydWUpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi02YzQ3ZTYxY1wiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtNmM0N2U2MWNcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfVxufSkoKX0iLCJ2YXIgX192dWVfX29wdGlvbnNfXyA9ICh0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09IFwiZnVuY3Rpb25cIj8gbW9kdWxlLmV4cG9ydHMub3B0aW9uczogbW9kdWxlLmV4cG9ydHMpXG5pZiAoX192dWVfX29wdGlvbnNfXy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWVpZnldIGZ1bmN0aW9uYWwgY29tcG9uZW50cyBhcmUgbm90IHN1cHBvcnRlZCBhbmQgc2hvdWxkIGJlIGRlZmluZWQgaW4gcGxhaW4ganMgZmlsZXMgdXNpbmcgcmVuZGVyIGZ1bmN0aW9ucy5cIil9XG5fX3Z1ZV9fb3B0aW9uc19fLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF92bS5fbSgwKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW2Z1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLFtfYygnaGVhZGVyJyx7c3RhdGljQ2xhc3M6XCJoZWFkZXJcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImhlYWRlcl9yaWdodGFyZWFcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInRpbWVcIixhdHRyczp7XCJpZFwiOlwiQ291bnREb3duXCJ9fSldKV0pLF92bS5fdihcIiBcIiksX2MoJ21haW4nLHtzdGF0aWNDbGFzczpcIm1haW5cIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInB1Yl9jb250ZW50XCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJwYW5lbFwifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczpcInRpdGxlXCJ9LFtfdm0uX3YoXCLkv6Hmga/mj5DnpLpcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdwJyx7c3RhdGljQ2xhc3M6XCJjZW50ZXJfdGl0bGVcIixhdHRyczp7XCJpZFwiOlwiTWFpbjFcIn19LFtfdm0uX3YoXCLkuJrliqHlj4LmlbDkuIvovb3kuK3vvIzor7fnqI3lgJkuLi5cIildKV0pXSldKV0pfV1cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHsgIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIHRydWUpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi0zNzk2NTJkOVwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtMzc5NjUyZDlcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfVxufSkoKX0iLCJ2YXIgX192dWVfX29wdGlvbnNfXyA9ICh0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09IFwiZnVuY3Rpb25cIj8gbW9kdWxlLmV4cG9ydHMub3B0aW9uczogbW9kdWxlLmV4cG9ydHMpXG5pZiAoX192dWVfX29wdGlvbnNfXy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWVpZnldIGZ1bmN0aW9uYWwgY29tcG9uZW50cyBhcmUgbm90IHN1cHBvcnRlZCBhbmQgc2hvdWxkIGJlIGRlZmluZWQgaW4gcGxhaW4ganMgZmlsZXMgdXNpbmcgcmVuZGVyIGZ1bmN0aW9ucy5cIil9XG5fX3Z1ZV9fb3B0aW9uc19fLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF92bS5fbSgwKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW2Z1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLFtfYygnaGVhZGVyJyx7c3RhdGljQ2xhc3M6XCJoZWFkZXJcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImhlYWRlcl9yaWdodGFyZWFcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInRpbWVcIixhdHRyczp7XCJpZFwiOlwiQ291bnREb3duXCJ9fSldKV0pLF92bS5fdihcIiBcIiksX2MoJ21haW4nLHtzdGF0aWNDbGFzczpcIm1haW5cIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInB1Yl9jb250ZW50XCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJwYW5lbFwifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczpcInRpdGxlXCJ9LFtfdm0uX3YoXCLkv6Hmga/mj5DnpLpcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdwJyx7c3RhdGljQ2xhc3M6XCJjZW50ZXJfdGl0bGVcIixhdHRyczp7XCJpZFwiOlwiTWFpbjFcIn19LFtfdm0uX3YoXCJVRmlsZeaWh+S7tuaJuemHj+S4i+i9veS4re+8jOivt+eojeWAmS4uLlwiKV0pXSldKV0pXSl9XVxuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkgeyAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgdHJ1ZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LTI5YmRmMzU2XCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi0yOWJkZjM1NlwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9XG59KSgpfSIsInZhciBfX3Z1ZV9fb3B0aW9uc19fID0gKHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJmdW5jdGlvblwiPyBtb2R1bGUuZXhwb3J0cy5vcHRpb25zOiBtb2R1bGUuZXhwb3J0cylcbmlmIChfX3Z1ZV9fb3B0aW9uc19fLmZ1bmN0aW9uYWwpIHtjb25zb2xlLmVycm9yKFwiW3Z1ZWlmeV0gZnVuY3Rpb25hbCBjb21wb25lbnRzIGFyZSBub3Qgc3VwcG9ydGVkIGFuZCBzaG91bGQgYmUgZGVmaW5lZCBpbiBwbGFpbiBqcyBmaWxlcyB1c2luZyByZW5kZXIgZnVuY3Rpb25zLlwiKX1cbl9fdnVlX19vcHRpb25zX18ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX3ZtLl9tKDApfVxuX192dWVfX29wdGlvbnNfXy5zdGF0aWNSZW5kZXJGbnMgPSBbZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2RpdicsW19jKCdoZWFkZXInLHtzdGF0aWNDbGFzczpcImhlYWRlclwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaGVhZGVyX3JpZ2h0YXJlYVwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwidGltZVwiLGF0dHJzOntcImlkXCI6XCJDb3VudERvd25cIn19KV0pXSksX3ZtLl92KFwiIFwiKSxfYygnbWFpbicse3N0YXRpY0NsYXNzOlwibWFpblwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwicHViX2NvbnRlbnRcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInBhbmVsXCJ9LFtfYygncCcse3N0YXRpY0NsYXNzOlwidGl0bGVcIn0sW192bS5fdihcIuS/oeaBr+aPkOekulwiKV0pLF92bS5fdihcIiBcIiksX2MoJ3AnLHtzdGF0aWNDbGFzczpcImNlbnRlcl90aXRsZVwiLGF0dHJzOntcImlkXCI6XCJNYWluMVwifX0sW192bS5fdihcIuW3peS9nOWvhumSpeS4i+i9veS4re+8jOivt+eojeWAmS4uLlwiKV0pXSldKV0pXSl9XVxuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkgeyAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgdHJ1ZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LTFkY2Q1MmNiXCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi0xZGNkNTJjYlwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9XG59KSgpfSIsInZhciBfX3Z1ZV9fb3B0aW9uc19fID0gKHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJmdW5jdGlvblwiPyBtb2R1bGUuZXhwb3J0cy5vcHRpb25zOiBtb2R1bGUuZXhwb3J0cylcbmlmIChfX3Z1ZV9fb3B0aW9uc19fLmZ1bmN0aW9uYWwpIHtjb25zb2xlLmVycm9yKFwiW3Z1ZWlmeV0gZnVuY3Rpb25hbCBjb21wb25lbnRzIGFyZSBub3Qgc3VwcG9ydGVkIGFuZCBzaG91bGQgYmUgZGVmaW5lZCBpbiBwbGFpbiBqcyBmaWxlcyB1c2luZyByZW5kZXIgZnVuY3Rpb25zLlwiKX1cbl9fdnVlX19vcHRpb25zX18ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX3ZtLl9tKDApfVxuX192dWVfX29wdGlvbnNfXy5zdGF0aWNSZW5kZXJGbnMgPSBbZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2RpdicsW19jKCdoZWFkZXInLHtzdGF0aWNDbGFzczpcImhlYWRlclwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaGVhZGVyX3JpZ2h0YXJlYVwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwidGltZVwiLGF0dHJzOntcImlkXCI6XCJDb3VudERvd25cIn19KV0pXSksX3ZtLl92KFwiIFwiKSxfYygnbWFpbicse3N0YXRpY0NsYXNzOlwibWFpblwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwicHViX2NvbnRlbnRcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInBhbmVsXCJ9LFtfYygncCcse3N0YXRpY0NsYXNzOlwidGl0bGVcIn0sW192bS5fdihcIuS/oeaBr+aPkOekulwiKV0pLF92bS5fdihcIiBcIiksX2MoJ3AnLHtzdGF0aWNDbGFzczpcImNlbnRlcl90aXRsZVwiLGF0dHJzOntcImlkXCI6XCJNYWluMVwifX0sW192bS5fdihcIuS4muWKoeWPguaVsOWIneWni+WMluS4re+8jOivt+eojeWAmS4uLlwiKV0pXSldKV0pXSl9XVxuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkgeyAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgdHJ1ZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LTM1OTFiMzIxXCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi0zNTkxYjMyMVwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9XG59KSgpfSIsInZhciBfX3Z1ZV9fb3B0aW9uc19fID0gKHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJmdW5jdGlvblwiPyBtb2R1bGUuZXhwb3J0cy5vcHRpb25zOiBtb2R1bGUuZXhwb3J0cylcbmlmIChfX3Z1ZV9fb3B0aW9uc19fLmZ1bmN0aW9uYWwpIHtjb25zb2xlLmVycm9yKFwiW3Z1ZWlmeV0gZnVuY3Rpb25hbCBjb21wb25lbnRzIGFyZSBub3Qgc3VwcG9ydGVkIGFuZCBzaG91bGQgYmUgZGVmaW5lZCBpbiBwbGFpbiBqcyBmaWxlcyB1c2luZyByZW5kZXIgZnVuY3Rpb25zLlwiKX1cbl9fdnVlX19vcHRpb25zX18ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX3ZtLl9tKDApfVxuX192dWVfX29wdGlvbnNfXy5zdGF0aWNSZW5kZXJGbnMgPSBbZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2RpdicsW19jKCdoZWFkZXInLHtzdGF0aWNDbGFzczpcImhlYWRlclwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaGVhZGVyX3JpZ2h0YXJlYVwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwidGltZVwiLGF0dHJzOntcImlkXCI6XCJDb3VudERvd25cIn19KV0pXSksX3ZtLl92KFwiIFwiKSxfYygnbWFpbicse3N0YXRpY0NsYXNzOlwibWFpblwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwicHViX2NvbnRlbnRcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInBhbmVsXCJ9LFtfYygncCcse3N0YXRpY0NsYXNzOlwidGl0bGVcIn0sW192bS5fdihcIuS/oeaBr+aPkOekulwiKV0pLF92bS5fdihcIiBcIiksX2MoJ3AnLHtzdGF0aWNDbGFzczpcImNlbnRlcl90aXRsZVwiLGF0dHJzOntcImlkXCI6XCJNYWluMVwifX0sW192bS5fdihcIuaVj+aEn+S/oeaBr+e7tOaKpOS4re+8jOivt+eojeWAmS4uLlwiKV0pXSldKV0pXSl9XVxuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkgeyAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgdHJ1ZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LWMxMjBlNmY2XCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi1jMTIwZTZmNlwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9XG59KSgpfSIsInZhciBfX3Z1ZWlmeV9zdHlsZV9kaXNwb3NlX18gPSByZXF1aXJlKFwidnVlaWZ5L2xpYi9pbnNlcnQtY3NzXCIpLmluc2VydChcImltZ1tkYXRhLXYtMjU5ZGJiNDBde1xcclxcbiAgICBkaXNwbGF5OiBibG9jaztcXHJcXG4gICAgbWFyZ2luOiBhdXRvO1xcclxcbiAgICBtYXJnaW4tdG9wOiA4JTtcXHJcXG4gICAgd2lkdGg6IDIwJTtcXHJcXG59XFxyXFxuLmNlbnRlcl90aXRsZVtkYXRhLXYtMjU5ZGJiNDBde1xcclxcbiAgICBtYXJnaW4tdG9wOiAwcHg7XFxyXFxufVwiKVxudmFyIF9fdnVlX19vcHRpb25zX18gPSAodHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcImZ1bmN0aW9uXCI/IG1vZHVsZS5leHBvcnRzLm9wdGlvbnM6IG1vZHVsZS5leHBvcnRzKVxuaWYgKF9fdnVlX19vcHRpb25zX18uZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlaWZ5XSBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgYW5kIHNob3VsZCBiZSBkZWZpbmVkIGluIHBsYWluIGpzIGZpbGVzIHVzaW5nIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuX192dWVfX29wdGlvbnNfXy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2JyxbX3ZtLl9tKDApLF92bS5fdihcIiBcIiksX2MoJ21haW4nLHtzdGF0aWNDbGFzczpcIm1haW5cIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcInB1Yl9jb250ZW50XCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJwYW5lbFwifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczpcInRpdGxlXCJ9LFtfdm0uX3YoXCLkv6Hmga/mj5DnpLpcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdpbWcnLHthdHRyczp7XCJzcmNcIjpfdm0uJHJvb3QuaW1nUGF0aCgnaW1nL2xvYWRpbmcuZ2lmJyl9fSksX3ZtLl92KFwiIFwiKSxfYygncCcse3N0YXRpY0NsYXNzOlwiY2VudGVyX3RpdGxlXCIsYXR0cnM6e1wiaWRcIjpcIk1haW4xXCJ9fSxbX3ZtLl92KFwi57O757uf5q2j5Zyo5aSE55CG77yM6K+356iN5YCZLi4uXCIpXSldKV0pXSldKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW2Z1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdoZWFkZXInLHtzdGF0aWNDbGFzczpcImhlYWRlclwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaGVhZGVyX3JpZ2h0YXJlYVwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwidGltZVwiLGF0dHJzOntcImlkXCI6XCJDb3VudERvd25cIn19KV0pXSl9XVxuX192dWVfX29wdGlvbnNfXy5fc2NvcGVJZCA9IFwiZGF0YS12LTI1OWRiYjQwXCJcbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHsgIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIHRydWUpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShfX3Z1ZWlmeV9zdHlsZV9kaXNwb3NlX18pXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi0yNTlkYmI0MFwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtMjU5ZGJiNDBcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfVxufSkoKX0iLCJ2YXIgX192dWVfX29wdGlvbnNfXyA9ICh0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09IFwiZnVuY3Rpb25cIj8gbW9kdWxlLmV4cG9ydHMub3B0aW9uczogbW9kdWxlLmV4cG9ydHMpXG5pZiAoX192dWVfX29wdGlvbnNfXy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWVpZnldIGZ1bmN0aW9uYWwgY29tcG9uZW50cyBhcmUgbm90IHN1cHBvcnRlZCBhbmQgc2hvdWxkIGJlIGRlZmluZWQgaW4gcGxhaW4ganMgZmlsZXMgdXNpbmcgcmVuZGVyIGZ1bmN0aW9ucy5cIil9XG5fX3Z1ZV9fb3B0aW9uc19fLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCd4LWxheW91dC1tYWluJyxbX2MoJ3AnLHtzdGF0aWNDbGFzczpcInRpdGxlXCJ9LFtfdm0uX3YoXCLln7rph5HlrprmipXnrb7nuqbkuqflk4Hor6bmg4VcIildKSxfdm0uX3YoXCIgXCIpLF9jKCd0YWJsZScse3N0YXRpY0NsYXNzOlwidGFiaW5mb19mb3JtXCJ9LFtfYygndHInLFtfYygndGQnLFtfdm0uX3YoXCLln7rph5Hku6PnoIHvvJpcIiksX2MoJ3NwYW4nLHthdHRyczp7XCJpZFwiOlwiZnVuZE5vXCJ9fSxbX3ZtLl92KFwiMTIzNFwiKV0pXSksX3ZtLl92KFwiIFwiKSxfYygndGQnLFtfdm0uX3YoXCLln7rph5HnsbvlnovvvJpcIiksX2MoJ3NwYW4nLHthdHRyczp7XCJpZFwiOlwiZnVuZFR5cGVcIn19LFtfdm0uX3YoXCLotKfluIFcIildKV0pXSksX3ZtLl92KFwiIFwiKSxfYygndHInLFtfYygndGQnLFtfdm0uX3YoXCLln7rph5HlkI3np7DvvJpcIiksX2MoJ3NwYW4nLHthdHRyczp7XCJpZFwiOlwiZnVuZE5hbWVcIn19LFtfdm0uX3YoXCLplb/lronotKfluIFE57G75Lu96aKdXCIpXSldKSxfdm0uX3YoXCIgXCIpLF9jKCd0ZCcsW192bS5fdihcIuaKlei1hOeuoeeQhuS6uu+8mlwiKSxfYygnc3Bhbicse2F0dHJzOntcImlkXCI6XCJtYW5hZ2VyXCJ9fSxbX3ZtLl92KFwi6ZW/5a6J5Z+66YeR566h55CG5pyJ6ZmQXCIpXSldKV0pLF92bS5fdihcIiBcIiksX2MoJ3RyJyxbX2MoJ3RkJyxbX3ZtLl92KFwi5Lqn5ZOB54q25oCB77yaXCIpLF9jKCdzcGFuJyx7YXR0cnM6e1wiaWRcIjpcInByb1N0YXR1c1wifX0sW192bS5fdihcIuato+W4uOW8gOaUvlwiKV0pXSksX3ZtLl92KFwiIFwiKSxfYygndGQnLFtfdm0uX3YoXCLlh4DlgLwv6Z2i5YC877yaXCIpLF9jKCdzcGFuJyx7YXR0cnM6e1wiaWRcIjpcImZhY2VWYWx1ZVwifX0sW192bS5fdihcIjEuMDAwXCIpXSldKV0pLF92bS5fdihcIiBcIiksX2MoJ3RyJyxbX2MoJ3RkJyxbX3ZtLl92KFwi5Z+66YeR6aOO6Zmp562J57qn77yaXCIpLF9jKCdzcGFuJyx7YXR0cnM6e1wiaWRcIjpcInJpc2tUeXBlXCJ9fSxbX3ZtLl92KFwi5L2OXCIpXSldKSxfdm0uX3YoXCIgXCIpLF9jKCd0ZCcsW192bS5fdihcIuWIhue6ouaWueW8j++8mlwiKSxfYygnc3Bhbicse2F0dHJzOntcImlkXCI6XCJkaXZpV2F5XCJ9fSxbX3ZtLl92KFwi57qi5Yip5YaN5oqV6LWEXCIpXSldKV0pLF92bS5fdihcIiBcIiksX2MoJ3RyJyxbX2MoJ3RkJyxbX3ZtLl92KFwi55Sz6LSt6LW354K56YeR6aKd77yaXCIpLF9jKCdzcGFuJyx7YXR0cnM6e1wiaWRcIjpcIm9yaWdpbk1vblwifX0sW192bS5fdihcIjUwMDAwMDBcIildKV0pLF92bS5fdihcIiBcIiksX2MoJ3RkJyxbX3ZtLl92KFwi55Sz6LSt6YCS5aKe6YeR6aKd77yaXCIpLF9jKCdzcGFuJyx7YXR0cnM6e1wiaWRcIjpcImluY3JlTW9uXCJ9fSxbX3ZtLl92KFwiMC4wMVwiKV0pXSldKSxfdm0uX3YoXCIgXCIpLF9jKCd0cicsW19jKCd0ZCcsW192bS5fdihcIuaZrumAmuWumuaKlei1t+eCuemHkemine+8mlwiKSxfYygnc3Bhbicse2F0dHJzOntcImlkXCI6XCJvcmlnaW5Nb25cIn19LFtfdm0uX3YoXCIzMDAuMDBcIildKV0pLF92bS5fdihcIiBcIiksX2MoJ3RkJyxbX3ZtLl92KFwi5a6a5oqV6YCS5aKe6YeR6aKd77yaXCIpLF9jKCdzcGFuJyx7YXR0cnM6e1wiaWRcIjpcImluY3JlTW9uXCJ9fSxbX3ZtLl92KFwiMTAwLjAwXCIpXSldKV0pXSksX3ZtLl92KFwiIFwiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJidG5ib3hcIn0sW19jKCdidXR0b24nLHtzdGF0aWNDbGFzczpcImJ0biBiYWNrYnRuXCIsYXR0cnM6e1wiaWRcIjpcImJ0bl9iYWNrXCJ9LG9uOntcImNsaWNrXCI6X3ZtLm9uQmFja319LFtfdm0uX3YoXCLkuIrCoOS4gMKg5q2lXCIpXSksX3ZtLl92KFwiIFwiKSxfYygnYnV0dG9uJyx7c3RhdGljQ2xhc3M6XCJidG4gc3VyZWJ0blwiLGF0dHJzOntcImlkXCI6XCJidG5faW52ZXN0XCJ9LG9uOntcImNsaWNrXCI6X3ZtLm9uTm9ybWFsSW52ZXN0fX0sW192bS5fdihcIuaZrumAmuWumuaKlVwiKV0pLF92bS5fdihcIiBcIiksX2MoJ2J1dHRvbicse3N0YXRpY0NsYXNzOlwiYnRuIHN1cmVidG5cIixhdHRyczp7XCJpZFwiOlwiYnRuX2ludmVzdEF1dG9cIn0sb246e1wiY2xpY2tcIjpfdm0ub25BdXRvSW52ZXN0fX0sW192bS5fdihcIuaZuuiDveWumuaKlVwiKV0pXSldKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW11cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHsgIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIHRydWUpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi0wZjlkMzFhOFwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtMGY5ZDMxYThcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfVxufSkoKX0iLCI8dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICA8dWwgY2xhc3M9XCJ1bF9SZXN1bHRcIj5cdFxyXG4gICAgICAgICAgICA8bGk+5byA5aeL5pel5pyf77yaPHNwYW4+PGlucHV0IHR5cGU9XCJ0ZXh0XCIgaWQ9XCJzdGFydFwiIGNsYXNzPVwiaW5wdXRfaW5mb1wiLz48L3NwYW4+PC9saT5cclxuICAgICAgICAgICAgPGxpPue7k+adn+aXpeacn++8mjxzcGFuPjxpbnB1dCB0eXBlPVwidGV4dFwiIGlkPVwiZW5kXCIgY2xhc3M9XCJpbnB1dF9pbmZvXCIvPjwvc3Bhbj48L2xpPlxyXG5cdFx0PC91bD5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiYnRuYm94XCI+XHJcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYmFja2J0blwiIGlkPVwiYnRuX2JhY2tcIj7lkKY8L2J1dHRvbj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBzdXJlYnRuXCIgaWQ9XCJidG5fc3VyZVwiPuaYrzwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PiBcclxuXHQ8L3gtbGF5b3V0LW1haW4+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PiBcclxuZXhwb3J0IGRlZmF1bHQge1xyXG5tb3VudGVkKCl7XHJcbiAgICAkKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgbmV3IERhdGVQaWNrZXIoKS5pbml0KHtpZCA6ICdzdGFydCd9KTtcclxuICAgICAgICBuZXcgRGF0ZVBpY2tlcigpLmluaXQoe2lkIDogJ2VuZCd9KTtcclxuICAgIH0pO1xyXG5cclxufVxyXG5cclxufVxyXG48L3NjcmlwdD4gIiwiPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHQgIFxyXG4gICAgICAgICAgPHAgY2xhc3M9XCJ0aXRsZVwiPui+k+WFpei9rOi0puS/oeaBrzwvcD5cclxuXHRcdFx0PGRpdiBjbGFzcz1cImluZm9fY29uZlwiPlxyXG5cdFx0XHRcdDx0YWJsZSBjbGFzcz1cImluZm9yX3RhYmxlXCI+XHJcblx0XHRcdFx0XHQ8dHI+XHJcblx0XHRcdFx0XHRcdDx0ZCBjbGFzcz1cImluZm9yX2xcIj7ovazlrZjnsbvlnovvvJo8L3RkPlxyXG5cdFx0XHRcdFx0XHQ8dGQgY2xhc3M9XCJpbmZvcl9yXCI+ICAgICAgICAgIFxyXG5cdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJuaWNlLXNlbGVjdFwiIG5hbWU9XCJuaWNlLXNlbGVjdFwiPlxyXG5cdFx0XHRcdFx0XHRcdFx0PHAgaWQ9XCJjcVR5cGVcIiB0eXBlPVwidGV4dFwiIHJlYWRvbmx5IGRhdGEtdmFsdWU9XCIxXCI+57qm5a6a6L2s5a2YPC9wPlxyXG5cdFx0XHRcdFx0XHRcdFx0PHVsIGlkPVwidWwxXCI+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxsaSBkYXRhLXZhbHVlPVwiMVwiPuS4ieS4quaciDwvbGk+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxsaSBkYXRhLXZhbHVlPVwiMlwiPuWFreS4quaciDwvbGk+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxsaSBkYXRhLXZhbHVlPVwiM1wiPuS5neS4quaciDwvbGk+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxsaSBkYXRhLXZhbHVlPVwiNFwiPuS4gOW5tDwvbGk+XHRcdFxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8bGkgZGF0YS12YWx1ZT1cIjFcIj7kuInkuKrmnIg8L2xpPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8bGkgZGF0YS12YWx1ZT1cIjJcIj7lha3kuKrmnIg8L2xpPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8bGkgZGF0YS12YWx1ZT1cIjNcIj7kuZ3kuKrmnIg8L2xpPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8bGkgZGF0YS12YWx1ZT1cIjRcIj7kuIDlubQ8L2xpPlx0XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxsaSBkYXRhLXZhbHVlPVwiMVwiPuS4ieS4quaciDwvbGk+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxsaSBkYXRhLXZhbHVlPVwiMlwiPuWFreS4quaciDwvbGk+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxsaSBkYXRhLXZhbHVlPVwiM1wiPuS5neS4quaciDwvbGk+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxsaSBkYXRhLXZhbHVlPVwiNFwiPuS4gOW5tDwvbGk+XHRcclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIxXCI+5LiJ5Liq5pyIPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIyXCI+5YWt5Liq5pyIPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIzXCI+5Lmd5Liq5pyIPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCI0XCI+5LiA5bm0PC9saT5cdFxyXG5cdFx0XHRcdFx0XHRcdFx0PC91bD5cclxuXHRcdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0PC90ZD5cclxuXHRcdFx0XHRcdDwvdHI+XHJcblx0XHRcdFx0XHQ8dHI+XHJcblx0XHRcdFx0XHRcdDx0ZCBjbGFzcz1cImluZm9yX2xcIj7lrZjmnJ/vvJo8L3RkPlxyXG5cdFx0XHRcdFx0XHQ8dGQgY2xhc3M9XCJpbmZvcl9yXCI+ICAgICAgICAgIFxyXG5cdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJuaWNlLXNlbGVjdFwiIG5hbWU9XCJuaWNlLXNlbGVjdFwiPlxyXG5cdFx0XHRcdFx0XHRcdFx0PHAgaWQ9XCJjcVwiIHR5cGU9XCJ0ZXh0XCIgcmVhZG9ubHk+PC9wPlxyXG5cdFx0PCEtLVx0XHRcdFx0XHRcdDx1bD5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIxXCI+5LiJ5Liq5pyIPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIyXCI+5YWt5Liq5pyIPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIzXCI+5Lmd5Liq5pyIPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCI0XCI+5LiA5bm0PC9saT5cdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRcdFx0XHQ8L3VsPlxyXG5cdFx0XHRcdFx0XHRcdFx0LS0+XHJcblx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdDwvdGQ+XHJcblx0XHRcdFx0XHQ8L3RyPlxyXG5cdFx0XHRcdDwvdGFibGU+IFxyXG5cdFx0XHRcdDxwIGNsYXNzPVwibm90aWNlXCI+5rip6aao5o+Q56S677ya5oKo55qE5a6i5oi35L+h5oGv5LiN5a6M5ZaE77yM6K+35pC65bim5pyJ5pWI6K+B5Lu25Yiw572R54K55Yqe55CG77yBPC9wPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHJcblx0XHQ8ZGl2IGNsYXNzPVwiYnRuYm94XCI+XHJcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYmFja2J0blwiIGlkPVwiYnRuX2JhY2tcIj7kuIrkuIDmraU8L2J1dHRvbj5cclxuICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG5cIiBpZD1cImJ0bl9zdXJlXCI+56Gu6K6kPC9idXR0b24+XHJcbiAgICAgICAgPC9kaXY+ICAgICBcclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cdCAgXHJcbjxzY3JpcHQ+IFxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiBtb3VudGVkKCl7XHJcblx0dmFyIGE9WzEsMiwzLDQsNSw2LDddO1xyXG5cdHZhciBiPVtcIjExMTExXCIsXCIyMjIyMlwiLFwiMzMzMzNcIixcIjQ0NDQ0XCIsXCI1NTU1XCIsXCIzMzMzMzMzM1wiLFwiMzQ0NDQ0NFwiXTtcclxuXHRjcmVhdGVTZWxlY3QoYSxiLFwiY3FcIik7XHJcblx0c2Nyb2xsQmFyKFwidWwxXCIpO1xyXG5cdG5ld1Njcm9sbEJhcihcImNxXCIpO1xyXG4gfVxyXG59XHJcbjwvc2NyaXB0PiBcdCIsIjx0ZW1wbGF0ZT5cclxuICAgIDx4LWxheW91dC1tYWluPlx0ICBcclxuICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj7ovpPlhaXovazotKbkv6Hmga88L3A+XHJcblx0XHRcdDxkaXYgY2xhc3M9XCJpbmZvX2NvbmZcIj5cclxuXHRcdFx0XHQ8dGFibGUgY2xhc3M9XCJpbmZvcl90YWJsZVwiPlxyXG5cdFx0XHRcdFx0PHRyPlxyXG5cdFx0XHRcdFx0XHQ8dGQgY2xhc3M9XCJpbmZvcl9sXCI+6L2s5a2Y57G75Z6L77yaPC90ZD5cclxuXHRcdFx0XHRcdFx0PHRkIGNsYXNzPVwiaW5mb3JfclwiPiAgICAgICAgICBcclxuXHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwibmljZS1zZWxlY3RcIiBuYW1lPVwibmljZS1zZWxlY3RcIj5cclxuXHRcdFx0XHRcdFx0XHRcdDxwIGlkPVwiY3FUeXBlXCIgdHlwZT1cInRleHRcIiByZWFkb25seSBkYXRhLXZhbHVlPVwiMVwiPue6puWumui9rOWtmDwvcD5cclxuXHRcdFx0XHRcdFx0XHRcdDx1bCBpZD0ndWwxJz5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIxXCI+57qm5a6a6L2s5a2YPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIyXCI+5LiN6L2s5a2YPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIxXCI+5LiJ5Liq5pyIPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIyXCI+5YWt5Liq5pyIPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIzXCI+5Lmd5Liq5pyIPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCI0XCI+5LiA5bm0PC9saT5cdFxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8bGkgZGF0YS12YWx1ZT1cIjFcIj7kuInkuKrmnIg8L2xpPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8bGkgZGF0YS12YWx1ZT1cIjJcIj7lha3kuKrmnIg8L2xpPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8bGkgZGF0YS12YWx1ZT1cIjNcIj7kuZ3kuKrmnIg8L2xpPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8bGkgZGF0YS12YWx1ZT1cIjRcIj7kuIDlubQ8L2xpPlx0XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxsaSBkYXRhLXZhbHVlPVwiMVwiPuS4ieS4quaciDwvbGk+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxsaSBkYXRhLXZhbHVlPVwiMlwiPuWFreS4quaciDwvbGk+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxsaSBkYXRhLXZhbHVlPVwiM1wiPuS5neS4quaciDwvbGk+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxsaSBkYXRhLXZhbHVlPVwiNFwiPuS4gOW5tDwvbGk+XHRcclxuXHRcdFx0XHRcdFx0XHRcdDwvdWw+XHJcblx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdDwvdGQ+XHJcblx0XHRcdFx0XHQ8L3RyPlxyXG5cdFx0XHRcdFx0PHRyPlxyXG5cdFx0XHRcdFx0XHQ8dGQgY2xhc3M9XCJpbmZvcl9sXCI+5a2Y5pyf77yaPC90ZD5cclxuXHRcdFx0XHRcdFx0PHRkIGNsYXNzPVwiaW5mb3JfclwiPiAgICAgICAgICBcclxuXHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwibmljZS1zZWxlY3RcIiBuYW1lPVwibmljZS1zZWxlY3RcIj5cclxuXHRcdFx0XHRcdFx0XHRcdDxwIGlkPVwiY3FcIiB0eXBlPVwidGV4dFwiIHJlYWRvbmx5IGRhdGEtdmFsdWU9XCIxXCI+5LiJ5Liq5pyIPC9wPlxyXG5cdFx0XHRcdFx0XHRcdFx0PHVsIGlkPXVsMj5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIxXCI+5LiJ5Liq5pyIPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIyXCI+5YWt5Liq5pyIPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIzXCI+5Lmd5Liq5pyIPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCI0XCI+5LiA5bm0PC9saT5cdFxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8bGkgZGF0YS12YWx1ZT1cIjFcIj7kuInkuKrmnIg8L2xpPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8bGkgZGF0YS12YWx1ZT1cIjJcIj7lha3kuKrmnIg8L2xpPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8bGkgZGF0YS12YWx1ZT1cIjNcIj7kuZ3kuKrmnIg8L2xpPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8bGkgZGF0YS12YWx1ZT1cIjRcIj7kuIDlubQ8L2xpPlx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIxXCI+5LiJ5Liq5pyIPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIyXCI+5YWt5Liq5pyIPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCIzXCI+5Lmd5Liq5pyIPC9saT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGxpIGRhdGEtdmFsdWU9XCI0XCI+5LiA5bm0PC9saT5cdFxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8bGkgZGF0YS12YWx1ZT1cIjFcIj7kuInkuKrmnIg8L2xpPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8bGkgZGF0YS12YWx1ZT1cIjJcIj7lha3kuKrmnIg8L2xpPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8bGkgZGF0YS12YWx1ZT1cIjNcIj7kuZ3kuKrmnIg8L2xpPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8bGkgZGF0YS12YWx1ZT1cIjRcIj7kuIDlubQ8L2xpPlx0XHJcblx0XHRcdFx0XHRcdFx0XHQ8L3VsPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdDwvdGQ+XHJcblx0XHRcdFx0XHQ8L3RyPlxyXG5cdFx0XHRcdDwvdGFibGU+IFxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDxkaXYgY2xhc3M9XCJidG5ib3hcIj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBiYWNrYnRuXCIgaWQ9XCJidG5fYmFja1wiPuS4iuS4gOatpTwvYnV0dG9uPlxyXG4gICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gc3VyZWJ0blwiIGlkPVwiYnRuX3N1cmVcIj7noa7orqQ8L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj4gICAgIFxyXG4gICAgPC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlx0ICBcclxuPHNjcmlwdD4gXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuIG1vdW50ZWQoKXtcclxuXHRpbml0aWFsaXplU2VsZWN0KCk7XHJcblx0c2V0VGltZW91dChzY3JvbGxCYXIoXCJ1bDFcIiksNTAwKTtcclxuXHRzZXRUaW1lb3V0KHNjcm9sbEJhcihcInVsMlwiKSw1MDApO1xyXG5cdFxyXG4gfVxyXG59XHJcbjwvc2NyaXB0PiBcdCIsIjx0ZW1wbGF0ZT5cclxuPGRpdj5cclxuICAgIDx4LWhlYWRlcj48L3gtaGVhZGVyPlxyXG4gICAgPG1haW4gY2xhc3M9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInB1Yl9jb250ZW50XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYW5lbFwiPlxyXG4gICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJ0aXRsZVwiPuS/oeaBr+aPkOekujwvcD5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwiY2VudGVyX3RpdGxlXCIgaWQ9XCJTaG93UmVhc29uXCI+5a+G56CB6ZSZ6K+vPC9wPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ0bmJveFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYmFja2J0biBkaXNwX25vbmVcIiBpZD1cImJ0bl9iYWNrXCI+5Y+WJm5ic3A7Jm5ic3A7Jm5ic3A75Y2hPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBzdXJlYnRuIGRpc3Bfbm9uZVwiIGlkPVwiYnRuX3N1cmVcIj7nu6cmbmJzcDsmbmJzcDsmbmJzcDvnu608L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvbWFpbj5cclxuICAgPCEtLSA8eC1mb290ZXI+PC94LWZvb3Rlcj4tLT5cclxuPC9kaXY+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBtb3VudGVkICgpIHtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bl9iYWNrXCIpLm9uY2xpY2s9b25CYWNrO1xyXG5cdCAgICBmdW5jdGlvbiBvbkJhY2soKXtcclxuXHRcdFx0b25DYW5jZWwoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fc3VyZVwiKS5vbmNsaWNrPW9uU3VyZTtcclxuXHRcdGZ1bmN0aW9uIG9uU3VyZSgpe1xyXG5cdFx0XHRvbkNvbnRpbnVlKCk7XHJcblx0XHR9XHJcbiAgICB9XHJcbn1cclxuPC9zY3JpcHQ+XHJcbiIsIjx0ZW1wbGF0ZT5cclxuICAgPGRpdiBjbGFzcz1cIngtbW9kYWxcIj5cclxuXHRcdDxwIGNsYXNzPVwidGl0bGVcIj7kv6Hmga/mj5DnpLo8L3A+XHJcblx0XHQ8cCBzdHlsZT1cInRleHQtYWxpZ246Y2VudGVyO2ZvbnQtc2l6ZToyLjdyZW07dG9wOjMwJTtwb3NpdGlvbjogcmVsYXRpdmU7XCI+5Lqk5piT57uT5p2f77yM5piv5ZCm57un57ut5Yqe55CG5Lia5Yqh77yfPC9wPlxyXG5cclxuXHRcdDxkaXYgY2xhc3M9XCJtb2RhbF9idG5ib3hcIj5cclxuXHRcdFx0PGJ1dHRvbiBjbGFzcz1cImJ0biBzdXJlYnRuXCIgaWQ9XCJidG5fYmFjazFcIj7nu5PmnZ/lip7nkIY8L2J1dHRvbj5cclxuXHRcdFx0PGJ1dHRvbiBjbGFzcz1cImJ0biBzdXJlYnRuXCIgaWQ9XCJidG5fc3VyZTFcIj7nu6fnu63lip7nkIY8L2J1dHRvbj5cclxuXHRcdDwvZGl2PlxyXG5cdDwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5cdG1vdW50ZWQgKCkge1xyXG5cdFx0Ly/ngrnlh7vlkKZcclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX2JhY2sxXCIpLm9uY2xpY2s9b25CYWNrO1xyXG4gICAgIFx0ZnVuY3Rpb24gb25CYWNrKCl7XHJcblx0XHRcdGV4aXRTY2VuZShcIlNUQV9DQU5DRUxcIik7XHJcbiAgICAgICAgfVxyXG5cdFx0Ly/ngrnlh7vmmK9cclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX3N1cmUxXCIpLm9uY2xpY2s9b25TdXJlO1xyXG5cdFx0ZnVuY3Rpb24gb25TdXJlKCl7XHJcbiAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9DT05USU5VRVwiKTtcclxuICAgICAgICB9XHJcblx0fVxyXG59XHJcbjwvc2NyaXB0PiIsIjx0ZW1wbGF0ZT5cclxuPGRpdj5cclxuICAgIDxoZWFkZXIgY2xhc3M9XCJoZWFkZXJcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZGVyX3JpZ2h0YXJlYVwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnRuX2V4aXRcIiBpZD1cImJ0bkV4aXRcIj48L2Rpdj5cclxuICAgICAgICAgICAgPCEtLeWAkuiuoeaXtiAtLT5cclxuICAgICAgICAgICAgPGRpdiBpZD1cIkNvdW50RG93blwiIGNsYXNzPVwidGltZVwiID48L2Rpdj4gICAgICAgICAgXHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2hlYWRlcj4gXHJcbiAgICA8ZGl2IGNsYXNzPVwicHViX2NvbnRlbnRcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhbmVsXCI+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRpdGxlXCI+5pys5py65pqC5YGc5pyN5YqhPC9wPlxyXG4gICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJjZW50ZXJfdGl0bGVcIiBpZD1cIlNob3dSZWFzb25cIj7mnKzmnLrmmoLlgZzmnI3liqE8L3A+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG48L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgbW91bnRlZCAoKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5FeGl0XCIpLm9uY2xpY2s9b25FeGl0O1xyXG5cdCAgICBmdW5jdGlvbiBvbkV4aXQoKXtcclxuXHRcdFx0ZXhpdFNjZW5lKFwiU1RBX0FETUlOXCIpO1xyXG5cdFx0fVxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuXHRcdDxwIGNsYXNzPVwidGl0bGVcIj7kuqTmmJPmiJDlip/vvIzmmK/lkKbmiZPljbDlh63mnaHvvJ88L3A+XHJcblx0XHQ8dWwgY2xhc3M9XCJ1bF9SZXN1bHRcIj5cdFxyXG5cdFx0XHQ8bGk+5Y+X55CG6LSm5oi377yaPHNwYW4gaWQ9XCJcIj57e319PC9zcGFuPjwvbGk+XHJcblx0XHRcdDxsaT7lrqLmiLflp5PlkI3vvJo8c3BhbiBpZD1cIlwiPnt7fX08L3NwYW4+PC9saT5cclxuXHRcdFx0PGxpPuS6pOaYk+e7iOerr++8mjxzcGFuIGlkPVwiXCI+e3t9fTwvc3Bhbj48L2xpPlxyXG5cdFx0XHQ8bGk+5Lqk5piT57G75Z6L77yaPHNwYW4gaWQ9XCJcIj57e319PC9zcGFuPjwvbGk+XHJcblx0XHRcdDxsaT7ln7rph5HlkI3np7DvvJo8c3BhbiBpZD1cIlwiPnt7fX08L3NwYW4+PC9saT5cclxuXHRcdFx0PGxpPuWfuumHkeS7o+egge+8mjxzcGFuIGlkPVwiXCI+e3t9fTwvc3Bhbj48L2xpPlxyXG5cdFx0XHQ8bGk+6LSt5Lmw6YeR6aKd77yaPHNwYW4gaWQ9XCJcIj57e319PC9zcGFuPjwvbGk+XHJcblx0XHRcdDxsaT7lrqLmiLfpo47pmannrYnnuqfvvJo8c3BhbiBpZD1cIlwiPnt7fX08L3NwYW4+PC9saT5cclxuXHRcdFx0PGxpPuS6pOaYk+aXtumXtO+8mjxzcGFuIGlkPVwiXCI+e3t9fTwvc3Bhbj48L2xpPlxyXG5cdFx0XHQ8bGk+5Lqk5piT57uT5p6c77yaPHNwYW4gaWQ9XCJcIj57e319PC9zcGFuPjwvbGk+XHJcblx0XHQ8L3VsPlxyXG5cdFx0ICAgPGRpdiBjbGFzcz1cImJ0bmJveFwiPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJhY2tidG5cIiBpZD1cImJ0bl9iYWNrXCI+5ZCmPC9idXR0b24+XHJcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gc3VyZWJ0blwiIGlkPVwiYnRuX3N1cmVcIj7mmK88L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj4gXHJcblx0PC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD4gXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHJcbn1cclxuPC9zY3JpcHQ+ICIsInZhciBfX3Z1ZV9fb3B0aW9uc19fID0gKHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJmdW5jdGlvblwiPyBtb2R1bGUuZXhwb3J0cy5vcHRpb25zOiBtb2R1bGUuZXhwb3J0cylcbmlmIChfX3Z1ZV9fb3B0aW9uc19fLmZ1bmN0aW9uYWwpIHtjb25zb2xlLmVycm9yKFwiW3Z1ZWlmeV0gZnVuY3Rpb25hbCBjb21wb25lbnRzIGFyZSBub3Qgc3VwcG9ydGVkIGFuZCBzaG91bGQgYmUgZGVmaW5lZCBpbiBwbGFpbiBqcyBmaWxlcyB1c2luZyByZW5kZXIgZnVuY3Rpb25zLlwiKX1cbl9fdnVlX19vcHRpb25zX18ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaGVhZGVyIGhlYWRlcl9iZ1wifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaGVhZGVyX3JpZ2h0YXJlYVwifSxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcIkhfYWRtX2luZm9cIn0sW19jKCdpbWcnLHthdHRyczp7XCJzcmNcIjpcImltZy9hZG0vbmFtZS5wbmdcIn19KSxfdm0uX3YoXCIgXCIpLF9jKCdzcGFuJyx7YXR0cnM6e1wiaWRcIjpcIkFkbWluTmFtZVwifX0sW192bS5fdihfdm0uX3MoX3ZtLiRyb290LkFkbWluTmFtZSkpXSldKSxfdm0uX3YoXCIgXCIpLF92bS5fbSgwKV0pXSl9XG5fX3Z1ZV9fb3B0aW9uc19fLnN0YXRpY1JlbmRlckZucyA9IFtmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiSF9hZG1faW5mb1wiLGF0dHJzOntcImlkXCI6XCJFeGl0QnRuXCJ9fSxbX2MoJ2ltZycse2F0dHJzOntcInNyY1wiOlwiaW1nL2FkbS9xdWl0LnBuZ1wifX0pLF92bS5fdihcIlxcclxcbiAgICAgICAgICAgIOWuieWFqOmAgOWHulxcclxcbiAgICAgICAgXCIpXSl9XVxuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkgeyAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgdHJ1ZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LTVlN2VlNzlhXCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi01ZTdlZTc5YVwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9XG59KSgpfSIsInZhciBfX3Z1ZV9fb3B0aW9uc19fID0gKHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJmdW5jdGlvblwiPyBtb2R1bGUuZXhwb3J0cy5vcHRpb25zOiBtb2R1bGUuZXhwb3J0cylcbmlmIChfX3Z1ZV9fb3B0aW9uc19fLmZ1bmN0aW9uYWwpIHtjb25zb2xlLmVycm9yKFwiW3Z1ZWlmeV0gZnVuY3Rpb25hbCBjb21wb25lbnRzIGFyZSBub3Qgc3VwcG9ydGVkIGFuZCBzaG91bGQgYmUgZGVmaW5lZCBpbiBwbGFpbiBqcyBmaWxlcyB1c2luZyByZW5kZXIgZnVuY3Rpb25zLlwiKX1cbl9fdnVlX19vcHRpb25zX18ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaGVhZGVyIGhlYWRlcl9iZ1wifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiaGVhZGVyX3JpZ2h0YXJlYVwifSxbX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcIkhfYWRtX2luZm9cIn0sW19jKCdpbWcnLHthdHRyczp7XCJzcmNcIjpcImltZy9hZG0vbmFtZS5wbmdcIn19KSxfdm0uX3YoXCIgXCIpLF9jKCdzcGFuJyx7YXR0cnM6e1wiaWRcIjpcIkFkbWluTmFtZVwifX0sW192bS5fdihfdm0uX3MoX3ZtLiRyb290LkFkbWluTmFtZSkpXSldKSxfdm0uX3YoXCIgXCIpLF92bS5fbSgwKV0pXSl9XG5fX3Z1ZV9fb3B0aW9uc19fLnN0YXRpY1JlbmRlckZucyA9IFtmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwiSF9hZG1faW5mb1wiLGF0dHJzOntcImlkXCI6XCJFeGl0QnRuXCJ9fSxbX2MoJ2ltZycse2F0dHJzOntcInNyY1wiOlwiaW1nL2FkbS9xdWl0LnBuZ1wifX0pLF92bS5fdihcIlxcclxcbiAgICAgICAgICAgIOWuieWFqOmAgOWHulxcclxcbiAgICAgICAgXCIpXSl9XVxuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkgeyAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgdHJ1ZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LTljOGI2NjM2XCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi05YzhiNjYzNlwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9XG59KSgpfSIsIi8qKlxyXG4gKiBWdWUtYXdlc29tZS1zd2lwZXJcclxuICogQGF1dGhvciBTdXJtb24ubWVcclxuICovXHJcblxyXG52YXIgU3dpcGVyID0gcmVxdWlyZSgnLi9zd2lwZXInKVxyXG52YXIgU3dpcGVyQ29tcG9uZW50ID0gcmVxdWlyZSgnLi9zcmMvc3dpcGVyLnZ1ZScpXHJcbnZhciBTbGlkZUNvbXBvbmVudCA9IHJlcXVpcmUoJy4vc3JjL3NsaWRlLnZ1ZScpXHJcblN3aXBlckNvbXBvbmVudCA9IFN3aXBlckNvbXBvbmVudC5kZWZhdWx0IHx8IFN3aXBlckNvbXBvbmVudFxyXG5TbGlkZUNvbXBvbmVudCA9IFNsaWRlQ29tcG9uZW50LmRlZmF1bHQgfHwgU2xpZGVDb21wb25lbnRcclxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XHJcblx0d2luZG93LlN3aXBlciA9IFN3aXBlclxyXG59XHJcblxyXG52YXIgc3dpcGVyID0ge1xyXG4gIHN3aXBlclNsaWRlOiBTbGlkZUNvbXBvbmVudCxcclxuICBzd2lwZXI6IFN3aXBlckNvbXBvbmVudCxcclxuICBzd2lwZXJQbHVnaW5zOiBTd2lwZXIucHJvdG90eXBlLnBsdWdpbnMsXHJcbiAgaW5zdGFsbDogZnVuY3Rpb24oVnVlKSB7XHJcbiAgICBWdWUuY29tcG9uZW50KFN3aXBlckNvbXBvbmVudC5uYW1lLCBTd2lwZXJDb21wb25lbnQpXHJcbiAgICBWdWUuY29tcG9uZW50KFNsaWRlQ29tcG9uZW50Lm5hbWUsIFNsaWRlQ29tcG9uZW50KVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBzd2lwZXJcclxuIiwiPHRlbXBsYXRlPlxyXG4gIDxkaXYgOmNsYXNzPVwic2xpZGVDbGFzc1wiPlxyXG4gICAgPHNsb3Q+PC9zbG90PlxyXG4gIDwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuICBleHBvcnQgZGVmYXVsdCB7XHJcbiAgICBuYW1lOiAnc3dpcGVyLXNsaWRlJyxcclxuICAgIGRhdGE6IGZ1bmN0aW9uKCkge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIHNsaWRlQ2xhc3M6ICdzd2lwZXItc2xpZGUnXHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICByZWFkeTogZnVuY3Rpb24oKSB7XHJcbiAgICAgIHRoaXMudXBkYXRlKClcclxuICAgIH0sXHJcbiAgICBtb3VudGVkOiBmdW5jdGlvbigpIHtcclxuICAgICAgdGhpcy51cGRhdGUoKVxyXG4gICAgICBpZiAodGhpcy4kcGFyZW50Lm9wdGlvbnMuc2xpZGVDbGFzcykge1xyXG4gICAgICAgIHRoaXMuc2xpZGVDbGFzcyA9IHRoaXMuJHBhcmVudC5vcHRpb25zLnNsaWRlQ2xhc3NcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIHVwZGF0ZWQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICB0aGlzLnVwZGF0ZSgpXHJcbiAgICB9LFxyXG4gICAgYXR0YWNoZWQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICB0aGlzLnVwZGF0ZSgpXHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGlmICh0aGlzLiRwYXJlbnQgJiYgdGhpcy4kcGFyZW50LnN3aXBlciAmJiB0aGlzLiRwYXJlbnQuc3dpcGVyLnVwZGF0ZSkge1xyXG4gICAgICAgICAgdGhpcy4kcGFyZW50LnN3aXBlci51cGRhdGUodHJ1ZSlcclxuICAgICAgICAgIGlmICh0aGlzLiRwYXJlbnQub3B0aW9ucy5sb29wKSB7XHJcbiAgICAgICAgICAgIHRoaXMuJHBhcmVudC5zd2lwZXIucmVMb29wKClcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbjwvc2NyaXB0PlxyXG4iLCI8dGVtcGxhdGU+XHJcbiAgPGRpdiBjbGFzcz1cInN3aXBlci1jb250YWluZXJcIj5cclxuICAgIDxzbG90IG5hbWU9XCJwYXJhbGxheC1iZ1wiPjwvc2xvdD5cclxuICAgIDxkaXYgOmNsYXNzPVwiZGVmYXVsdFN3aXBlckNsYXNzZXMud3JhcHBlckNsYXNzXCI+XHJcbiAgICAgIDxzbG90Pjwvc2xvdD5cclxuICAgIDwvZGl2PlxyXG4gICAgPHNsb3QgbmFtZT1cInBhZ2luYXRpb25cIj48L3Nsb3Q+XHJcbiAgICA8c2xvdCBuYW1lPVwiYnV0dG9uLXByZXZcIj48L3Nsb3Q+XHJcbiAgICA8c2xvdCBuYW1lPVwiYnV0dG9uLW5leHRcIj48L3Nsb3Q+XHJcbiAgICA8c2xvdCBuYW1lPVwic2Nyb2xsYmFyXCI+PC9zbG90PlxyXG4gIDwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuICB2YXIgYnJvd3NlciA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnXHJcbiAgaWYgKGJyb3dzZXIpIHdpbmRvdy5Td2lwZXIgPSByZXF1aXJlKCcuLi9zd2lwZXInKVxyXG4gIGV4cG9ydCBkZWZhdWx0IHtcclxuICAgIG5hbWU6ICdzd2lwZXInLFxyXG4gICAgcHJvcHM6IHtcclxuICAgICAgb3B0aW9uczoge1xyXG4gICAgICAgIHR5cGU6IE9iamVjdCxcclxuICAgICAgICBkZWZhdWx0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGF1dG9wbGF5OiAzNTAwXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICBub3ROZXh0VGljazoge1xyXG4gICAgICAgIHR5cGU6IEJvb2xlYW4sXHJcbiAgICAgICAgZGVmYXVsdDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBkYXRhOiBmdW5jdGlvbigpIHtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBkZWZhdWx0U3dpcGVyQ2xhc3Nlczoge1xyXG4gICAgICAgICAgd3JhcHBlckNsYXNzOiAnc3dpcGVyLXdyYXBwZXInXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgcmVhZHk6IGZ1bmN0aW9uKCkge1xyXG4gICAgICBpZiAoIXRoaXMuc3dpcGVyICYmIGJyb3dzZXIpIHtcclxuICAgICAgICB0aGlzLnN3aXBlciA9IG5ldyBTd2lwZXIodGhpcy4kZWwsIHRoaXMub3B0aW9ucylcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIG1vdW50ZWQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICB2YXIgc2VsZiA9IHRoaXNcclxuICAgICAgdmFyIG1vdW50ID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgaWYgKCFzZWxmLnN3aXBlciAmJiBicm93c2VyKSB7XHJcbiAgICAgICAgICBkZWxldGUgc2VsZi5vcHRpb25zLm5vdE5leHRUaWNrXHJcbiAgICAgICAgICB2YXIgc2V0Q2xhc3NOYW1lID0gZmFsc2VcclxuICAgICAgICAgIGZvcih2YXIgY2xhc3NOYW1lIGluIHNlbGYuZGVmYXVsdFN3aXBlckNsYXNzZXMpe1xyXG4gICAgICAgICAgICBpZiAoc2VsZi5kZWZhdWx0U3dpcGVyQ2xhc3Nlcy5oYXNPd25Qcm9wZXJ0eShjbGFzc05hbWUpKSB7XHJcbiAgICAgICAgICAgICAgaWYgKHNlbGYub3B0aW9uc1tjbGFzc05hbWVdKSB7XHJcbiAgICAgICAgICAgICAgICBzZXRDbGFzc05hbWUgPSB0cnVlXHJcbiAgICAgICAgICAgICAgICBzZWxmLmRlZmF1bHRTd2lwZXJDbGFzc2VzW2NsYXNzTmFtZV0gPSBzZWxmLm9wdGlvbnNbY2xhc3NOYW1lXVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgdmFyIG1vdW50SW5zdGFuY2UgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgc2VsZi5zd2lwZXIgPSBuZXcgU3dpcGVyKHNlbGYuJGVsLCBzZWxmLm9wdGlvbnMpXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBzZXRDbGFzc05hbWUgPyBzZWxmLiRuZXh0VGljayhtb3VudEluc3RhbmNlKSA6IG1vdW50SW5zdGFuY2UoKVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAodGhpcy5vcHRpb25zLm5vdE5leHRUaWNrIHx8IHRoaXMubm90TmV4dFRpY2spID8gbW91bnQoKSA6IHRoaXMuJG5leHRUaWNrKG1vdW50KVxyXG4gICAgfSxcclxuICAgIHVwZGF0ZWQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICBpZiAodGhpcy5zd2lwZXIpIHtcclxuICAgICAgICB0aGlzLnN3aXBlci51cGRhdGUoKVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24oKSB7XHJcbiAgICAgIGlmICh0aGlzLnN3aXBlcikge1xyXG4gICAgICAgIHRoaXMuc3dpcGVyLmRlc3Ryb3koKVxyXG4gICAgICAgIGRlbGV0ZSB0aGlzLnN3aXBlclxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG48L3NjcmlwdD5cclxuIiwiLyoqXG4gKiBTd2lwZXIgMy40LjJcbiAqIE1vc3QgbW9kZXJuIG1vYmlsZSB0b3VjaCBzbGlkZXIgYW5kIGZyYW1ld29yayB3aXRoIGhhcmR3YXJlIGFjY2VsZXJhdGVkIHRyYW5zaXRpb25zXG4gKiBcbiAqIGh0dHA6Ly93d3cuaWRhbmdlcm8udXMvc3dpcGVyL1xuICogXG4gKiBDb3B5cmlnaHQgMjAxNywgVmxhZGltaXIgS2hhcmxhbXBpZGlcbiAqIFRoZSBpRGFuZ2Vyby51c1xuICogaHR0cDovL3d3dy5pZGFuZ2Vyby51cy9cbiAqIFxuICogTGljZW5zZWQgdW5kZXIgTUlUXG4gKiBcbiAqIFJlbGVhc2VkIG9uOiBNYXJjaCAxMCwgMjAxN1xuICovXG4oZnVuY3Rpb24gKCkge1xuICAgICd1c2Ugc3RyaWN0JztcbiAgICB2YXIgJDtcblxuICAgIC8qPT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgU3dpcGVyXG4gICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbiAgICB2YXIgU3dpcGVyID0gZnVuY3Rpb24gKGNvbnRhaW5lciwgcGFyYW1zKSB7XG4gICAgICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiBTd2lwZXIpKSByZXR1cm4gbmV3IFN3aXBlcihjb250YWluZXIsIHBhcmFtcyk7XG4gICAgXG5cbiAgICAgICAgdmFyIGRlZmF1bHRzID0ge1xuICAgICAgICAgICAgZGlyZWN0aW9uOiAnaG9yaXpvbnRhbCcsXG4gICAgICAgICAgICB0b3VjaEV2ZW50c1RhcmdldDogJ2NvbnRhaW5lcicsXG4gICAgICAgICAgICBpbml0aWFsU2xpZGU6IDAsXG4gICAgICAgICAgICBzcGVlZDogMzAwLFxuICAgICAgICAgICAgLy8gYXV0b3BsYXlcbiAgICAgICAgICAgIGF1dG9wbGF5OiBmYWxzZSxcbiAgICAgICAgICAgIGF1dG9wbGF5RGlzYWJsZU9uSW50ZXJhY3Rpb246IHRydWUsXG4gICAgICAgICAgICBhdXRvcGxheVN0b3BPbkxhc3Q6IGZhbHNlLFxuICAgICAgICAgICAgLy8gVG8gc3VwcG9ydCBpT1MncyBzd2lwZS10by1nby1iYWNrIGdlc3R1cmUgKHdoZW4gYmVpbmcgdXNlZCBpbi1hcHAsIHdpdGggVUlXZWJWaWV3KS5cbiAgICAgICAgICAgIGlPU0VkZ2VTd2lwZURldGVjdGlvbjogZmFsc2UsXG4gICAgICAgICAgICBpT1NFZGdlU3dpcGVUaHJlc2hvbGQ6IDIwLFxuICAgICAgICAgICAgLy8gRnJlZSBtb2RlXG4gICAgICAgICAgICBmcmVlTW9kZTogZmFsc2UsXG4gICAgICAgICAgICBmcmVlTW9kZU1vbWVudHVtOiB0cnVlLFxuICAgICAgICAgICAgZnJlZU1vZGVNb21lbnR1bVJhdGlvOiAxLFxuICAgICAgICAgICAgZnJlZU1vZGVNb21lbnR1bUJvdW5jZTogdHJ1ZSxcbiAgICAgICAgICAgIGZyZWVNb2RlTW9tZW50dW1Cb3VuY2VSYXRpbzogMSxcbiAgICAgICAgICAgIGZyZWVNb2RlTW9tZW50dW1WZWxvY2l0eVJhdGlvOiAxLFxuICAgICAgICAgICAgZnJlZU1vZGVTdGlja3k6IGZhbHNlLFxuICAgICAgICAgICAgZnJlZU1vZGVNaW5pbXVtVmVsb2NpdHk6IDAuMDIsXG4gICAgICAgICAgICAvLyBBdXRvaGVpZ2h0XG4gICAgICAgICAgICBhdXRvSGVpZ2h0OiBmYWxzZSxcbiAgICAgICAgICAgIC8vIFNldCB3cmFwcGVyIHdpZHRoXG4gICAgICAgICAgICBzZXRXcmFwcGVyU2l6ZTogZmFsc2UsXG4gICAgICAgICAgICAvLyBWaXJ0dWFsIFRyYW5zbGF0ZVxuICAgICAgICAgICAgdmlydHVhbFRyYW5zbGF0ZTogZmFsc2UsXG4gICAgICAgICAgICAvLyBFZmZlY3RzXG4gICAgICAgICAgICBlZmZlY3Q6ICdzbGlkZScsIC8vICdzbGlkZScgb3IgJ2ZhZGUnIG9yICdjdWJlJyBvciAnY292ZXJmbG93JyBvciAnZmxpcCdcbiAgICAgICAgICAgIGNvdmVyZmxvdzoge1xuICAgICAgICAgICAgICAgIHJvdGF0ZTogNTAsXG4gICAgICAgICAgICAgICAgc3RyZXRjaDogMCxcbiAgICAgICAgICAgICAgICBkZXB0aDogMTAwLFxuICAgICAgICAgICAgICAgIG1vZGlmaWVyOiAxLFxuICAgICAgICAgICAgICAgIHNsaWRlU2hhZG93cyA6IHRydWVcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmbGlwOiB7XG4gICAgICAgICAgICAgICAgc2xpZGVTaGFkb3dzIDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBsaW1pdFJvdGF0aW9uOiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY3ViZToge1xuICAgICAgICAgICAgICAgIHNsaWRlU2hhZG93czogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzaGFkb3c6IHRydWUsXG4gICAgICAgICAgICAgICAgc2hhZG93T2Zmc2V0OiAyMCxcbiAgICAgICAgICAgICAgICBzaGFkb3dTY2FsZTogMC45NFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhZGU6IHtcbiAgICAgICAgICAgICAgICBjcm9zc0ZhZGU6IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLy8gUGFyYWxsYXhcbiAgICAgICAgICAgIHBhcmFsbGF4OiBmYWxzZSxcbiAgICAgICAgICAgIC8vIFpvb21cbiAgICAgICAgICAgIHpvb206IGZhbHNlLFxuICAgICAgICAgICAgem9vbU1heDogMyxcbiAgICAgICAgICAgIHpvb21NaW46IDEsXG4gICAgICAgICAgICB6b29tVG9nZ2xlOiB0cnVlLFxuICAgICAgICAgICAgLy8gU2Nyb2xsYmFyXG4gICAgICAgICAgICBzY3JvbGxiYXI6IG51bGwsXG4gICAgICAgICAgICBzY3JvbGxiYXJIaWRlOiB0cnVlLFxuICAgICAgICAgICAgc2Nyb2xsYmFyRHJhZ2dhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIHNjcm9sbGJhclNuYXBPblJlbGVhc2U6IGZhbHNlLFxuICAgICAgICAgICAgLy8gS2V5Ym9hcmQgTW91c2V3aGVlbFxuICAgICAgICAgICAga2V5Ym9hcmRDb250cm9sOiBmYWxzZSxcbiAgICAgICAgICAgIG1vdXNld2hlZWxDb250cm9sOiBmYWxzZSxcbiAgICAgICAgICAgIG1vdXNld2hlZWxSZWxlYXNlT25FZGdlczogZmFsc2UsXG4gICAgICAgICAgICBtb3VzZXdoZWVsSW52ZXJ0OiBmYWxzZSxcbiAgICAgICAgICAgIG1vdXNld2hlZWxGb3JjZVRvQXhpczogZmFsc2UsXG4gICAgICAgICAgICBtb3VzZXdoZWVsU2Vuc2l0aXZpdHk6IDEsXG4gICAgICAgICAgICBtb3VzZXdoZWVsRXZlbnRzVGFyZ2VkOiAnY29udGFpbmVyJyxcbiAgICAgICAgICAgIC8vIEhhc2ggTmF2aWdhdGlvblxuICAgICAgICAgICAgaGFzaG5hdjogZmFsc2UsXG4gICAgICAgICAgICBoYXNobmF2V2F0Y2hTdGF0ZTogZmFsc2UsXG4gICAgICAgICAgICAvLyBIaXN0b3J5XG4gICAgICAgICAgICBoaXN0b3J5OiBmYWxzZSxcbiAgICAgICAgICAgIC8vIENvbW1vbmcgTmF2IFN0YXRlXG4gICAgICAgICAgICByZXBsYWNlU3RhdGU6IGZhbHNlLFxuICAgICAgICAgICAgLy8gQnJlYWtwb2ludHNcbiAgICAgICAgICAgIGJyZWFrcG9pbnRzOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAvLyBTbGlkZXMgZ3JpZFxuICAgICAgICAgICAgc3BhY2VCZXR3ZWVuOiAwLFxuICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogMSxcbiAgICAgICAgICAgIHNsaWRlc1BlckNvbHVtbjogMSxcbiAgICAgICAgICAgIHNsaWRlc1BlckNvbHVtbkZpbGw6ICdjb2x1bW4nLFxuICAgICAgICAgICAgc2xpZGVzUGVyR3JvdXA6IDEsXG4gICAgICAgICAgICBjZW50ZXJlZFNsaWRlczogZmFsc2UsXG4gICAgICAgICAgICBzbGlkZXNPZmZzZXRCZWZvcmU6IDAsIC8vIGluIHB4XG4gICAgICAgICAgICBzbGlkZXNPZmZzZXRBZnRlcjogMCwgLy8gaW4gcHhcbiAgICAgICAgICAgIC8vIFJvdW5kIGxlbmd0aFxuICAgICAgICAgICAgcm91bmRMZW5ndGhzOiBmYWxzZSxcbiAgICAgICAgICAgIC8vIFRvdWNoZXNcbiAgICAgICAgICAgIHRvdWNoUmF0aW86IDEsXG4gICAgICAgICAgICB0b3VjaEFuZ2xlOiA0NSxcbiAgICAgICAgICAgIHNpbXVsYXRlVG91Y2g6IHRydWUsXG4gICAgICAgICAgICBzaG9ydFN3aXBlczogdHJ1ZSxcbiAgICAgICAgICAgIGxvbmdTd2lwZXM6IHRydWUsXG4gICAgICAgICAgICBsb25nU3dpcGVzUmF0aW86IDAuNSxcbiAgICAgICAgICAgIGxvbmdTd2lwZXNNczogMzAwLFxuICAgICAgICAgICAgZm9sbG93RmluZ2VyOiB0cnVlLFxuICAgICAgICAgICAgb25seUV4dGVybmFsOiBmYWxzZSxcbiAgICAgICAgICAgIHRocmVzaG9sZDogMCxcbiAgICAgICAgICAgIHRvdWNoTW92ZVN0b3BQcm9wYWdhdGlvbjogdHJ1ZSxcbiAgICAgICAgICAgIHRvdWNoUmVsZWFzZU9uRWRnZXM6IGZhbHNlLFxuICAgICAgICAgICAgLy8gVW5pcXVlIE5hdmlnYXRpb24gRWxlbWVudHNcbiAgICAgICAgICAgIHVuaXF1ZU5hdkVsZW1lbnRzOiB0cnVlLFxuICAgICAgICAgICAgLy8gUGFnaW5hdGlvblxuICAgICAgICAgICAgcGFnaW5hdGlvbjogbnVsbCxcbiAgICAgICAgICAgIHBhZ2luYXRpb25FbGVtZW50OiAnc3BhbicsXG4gICAgICAgICAgICBwYWdpbmF0aW9uQ2xpY2thYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIHBhZ2luYXRpb25IaWRlOiBmYWxzZSxcbiAgICAgICAgICAgIHBhZ2luYXRpb25CdWxsZXRSZW5kZXI6IG51bGwsXG4gICAgICAgICAgICBwYWdpbmF0aW9uUHJvZ3Jlc3NSZW5kZXI6IG51bGwsXG4gICAgICAgICAgICBwYWdpbmF0aW9uRnJhY3Rpb25SZW5kZXI6IG51bGwsXG4gICAgICAgICAgICBwYWdpbmF0aW9uQ3VzdG9tUmVuZGVyOiBudWxsLFxuICAgICAgICAgICAgcGFnaW5hdGlvblR5cGU6ICdidWxsZXRzJywgLy8gJ2J1bGxldHMnIG9yICdwcm9ncmVzcycgb3IgJ2ZyYWN0aW9uJyBvciAnY3VzdG9tJ1xuICAgICAgICAgICAgLy8gUmVzaXN0YW5jZVxuICAgICAgICAgICAgcmVzaXN0YW5jZTogdHJ1ZSxcbiAgICAgICAgICAgIHJlc2lzdGFuY2VSYXRpbzogMC44NSxcbiAgICAgICAgICAgIC8vIE5leHQvcHJldiBidXR0b25zXG4gICAgICAgICAgICBuZXh0QnV0dG9uOiBudWxsLFxuICAgICAgICAgICAgcHJldkJ1dHRvbjogbnVsbCxcbiAgICAgICAgICAgIC8vIFByb2dyZXNzXG4gICAgICAgICAgICB3YXRjaFNsaWRlc1Byb2dyZXNzOiBmYWxzZSxcbiAgICAgICAgICAgIHdhdGNoU2xpZGVzVmlzaWJpbGl0eTogZmFsc2UsXG4gICAgICAgICAgICAvLyBDdXJzb3JcbiAgICAgICAgICAgIGdyYWJDdXJzb3I6IGZhbHNlLFxuICAgICAgICAgICAgLy8gQ2xpY2tzXG4gICAgICAgICAgICBwcmV2ZW50Q2xpY2tzOiB0cnVlLFxuICAgICAgICAgICAgcHJldmVudENsaWNrc1Byb3BhZ2F0aW9uOiB0cnVlLFxuICAgICAgICAgICAgc2xpZGVUb0NsaWNrZWRTbGlkZTogZmFsc2UsXG4gICAgICAgICAgICAvLyBMYXp5IExvYWRpbmdcbiAgICAgICAgICAgIGxhenlMb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICAgIGxhenlMb2FkaW5nSW5QcmV2TmV4dDogZmFsc2UsXG4gICAgICAgICAgICBsYXp5TG9hZGluZ0luUHJldk5leHRBbW91bnQ6IDEsXG4gICAgICAgICAgICBsYXp5TG9hZGluZ09uVHJhbnNpdGlvblN0YXJ0OiBmYWxzZSxcbiAgICAgICAgICAgIC8vIEltYWdlc1xuICAgICAgICAgICAgcHJlbG9hZEltYWdlczogdHJ1ZSxcbiAgICAgICAgICAgIHVwZGF0ZU9uSW1hZ2VzUmVhZHk6IHRydWUsXG4gICAgICAgICAgICAvLyBsb29wXG4gICAgICAgICAgICBsb29wOiBmYWxzZSxcbiAgICAgICAgICAgIGxvb3BBZGRpdGlvbmFsU2xpZGVzOiAwLFxuICAgICAgICAgICAgbG9vcGVkU2xpZGVzOiBudWxsLFxuICAgICAgICAgICAgLy8gQ29udHJvbFxuICAgICAgICAgICAgY29udHJvbDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgY29udHJvbEludmVyc2U6IGZhbHNlLFxuICAgICAgICAgICAgY29udHJvbEJ5OiAnc2xpZGUnLCAvL29yICdjb250YWluZXInXG4gICAgICAgICAgICBub3JtYWxpemVTbGlkZUluZGV4OiB0cnVlLFxuICAgICAgICAgICAgLy8gU3dpcGluZy9ubyBzd2lwaW5nXG4gICAgICAgICAgICBhbGxvd1N3aXBlVG9QcmV2OiB0cnVlLFxuICAgICAgICAgICAgYWxsb3dTd2lwZVRvTmV4dDogdHJ1ZSxcbiAgICAgICAgICAgIHN3aXBlSGFuZGxlcjogbnVsbCwgLy8nLnN3aXBlLWhhbmRsZXInLFxuICAgICAgICAgICAgbm9Td2lwaW5nOiB0cnVlLFxuICAgICAgICAgICAgbm9Td2lwaW5nQ2xhc3M6ICdzd2lwZXItbm8tc3dpcGluZycsXG4gICAgICAgICAgICAvLyBQYXNzaXZlIExpc3RlbmVyc1xuICAgICAgICAgICAgcGFzc2l2ZUxpc3RlbmVyczogdHJ1ZSxcbiAgICAgICAgICAgIC8vIE5TXG4gICAgICAgICAgICBjb250YWluZXJNb2RpZmllckNsYXNzOiAnc3dpcGVyLWNvbnRhaW5lci0nLCAvLyBORVdcbiAgICAgICAgICAgIHNsaWRlQ2xhc3M6ICdzd2lwZXItc2xpZGUnLFxuICAgICAgICAgICAgc2xpZGVBY3RpdmVDbGFzczogJ3N3aXBlci1zbGlkZS1hY3RpdmUnLFxuICAgICAgICAgICAgc2xpZGVEdXBsaWNhdGVBY3RpdmVDbGFzczogJ3N3aXBlci1zbGlkZS1kdXBsaWNhdGUtYWN0aXZlJyxcbiAgICAgICAgICAgIHNsaWRlVmlzaWJsZUNsYXNzOiAnc3dpcGVyLXNsaWRlLXZpc2libGUnLFxuICAgICAgICAgICAgc2xpZGVEdXBsaWNhdGVDbGFzczogJ3N3aXBlci1zbGlkZS1kdXBsaWNhdGUnLFxuICAgICAgICAgICAgc2xpZGVOZXh0Q2xhc3M6ICdzd2lwZXItc2xpZGUtbmV4dCcsXG4gICAgICAgICAgICBzbGlkZUR1cGxpY2F0ZU5leHRDbGFzczogJ3N3aXBlci1zbGlkZS1kdXBsaWNhdGUtbmV4dCcsXG4gICAgICAgICAgICBzbGlkZVByZXZDbGFzczogJ3N3aXBlci1zbGlkZS1wcmV2JyxcbiAgICAgICAgICAgIHNsaWRlRHVwbGljYXRlUHJldkNsYXNzOiAnc3dpcGVyLXNsaWRlLWR1cGxpY2F0ZS1wcmV2JyxcbiAgICAgICAgICAgIHdyYXBwZXJDbGFzczogJ3N3aXBlci13cmFwcGVyJyxcbiAgICAgICAgICAgIGJ1bGxldENsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0JyxcbiAgICAgICAgICAgIGJ1bGxldEFjdGl2ZUNsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZScsXG4gICAgICAgICAgICBidXR0b25EaXNhYmxlZENsYXNzOiAnc3dpcGVyLWJ1dHRvbi1kaXNhYmxlZCcsXG4gICAgICAgICAgICBwYWdpbmF0aW9uQ3VycmVudENsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24tY3VycmVudCcsXG4gICAgICAgICAgICBwYWdpbmF0aW9uVG90YWxDbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLXRvdGFsJyxcbiAgICAgICAgICAgIHBhZ2luYXRpb25IaWRkZW5DbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLWhpZGRlbicsXG4gICAgICAgICAgICBwYWdpbmF0aW9uUHJvZ3Jlc3NiYXJDbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyJyxcbiAgICAgICAgICAgIHBhZ2luYXRpb25DbGlja2FibGVDbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLWNsaWNrYWJsZScsIC8vIE5FV1xuICAgICAgICAgICAgcGFnaW5hdGlvbk1vZGlmaWVyQ2xhc3M6ICdzd2lwZXItcGFnaW5hdGlvbi0nLCAvLyBORVdcbiAgICAgICAgICAgIGxhenlMb2FkaW5nQ2xhc3M6ICdzd2lwZXItbGF6eScsXG4gICAgICAgICAgICBsYXp5U3RhdHVzTG9hZGluZ0NsYXNzOiAnc3dpcGVyLWxhenktbG9hZGluZycsXG4gICAgICAgICAgICBsYXp5U3RhdHVzTG9hZGVkQ2xhc3M6ICdzd2lwZXItbGF6eS1sb2FkZWQnLFxuICAgICAgICAgICAgbGF6eVByZWxvYWRlckNsYXNzOiAnc3dpcGVyLWxhenktcHJlbG9hZGVyJyxcbiAgICAgICAgICAgIG5vdGlmaWNhdGlvbkNsYXNzOiAnc3dpcGVyLW5vdGlmaWNhdGlvbicsXG4gICAgICAgICAgICBwcmVsb2FkZXJDbGFzczogJ3ByZWxvYWRlcicsXG4gICAgICAgICAgICB6b29tQ29udGFpbmVyQ2xhc3M6ICdzd2lwZXItem9vbS1jb250YWluZXInLFxuICAgICAgICBcbiAgICAgICAgICAgIC8vIE9ic2VydmVyXG4gICAgICAgICAgICBvYnNlcnZlcjogZmFsc2UsXG4gICAgICAgICAgICBvYnNlcnZlUGFyZW50czogZmFsc2UsXG4gICAgICAgICAgICAvLyBBY2Nlc3NpYmlsaXR5XG4gICAgICAgICAgICBhMTF5OiBmYWxzZSxcbiAgICAgICAgICAgIHByZXZTbGlkZU1lc3NhZ2U6ICdQcmV2aW91cyBzbGlkZScsXG4gICAgICAgICAgICBuZXh0U2xpZGVNZXNzYWdlOiAnTmV4dCBzbGlkZScsXG4gICAgICAgICAgICBmaXJzdFNsaWRlTWVzc2FnZTogJ1RoaXMgaXMgdGhlIGZpcnN0IHNsaWRlJyxcbiAgICAgICAgICAgIGxhc3RTbGlkZU1lc3NhZ2U6ICdUaGlzIGlzIHRoZSBsYXN0IHNsaWRlJyxcbiAgICAgICAgICAgIHBhZ2luYXRpb25CdWxsZXRNZXNzYWdlOiAnR28gdG8gc2xpZGUge3tpbmRleH19JyxcbiAgICAgICAgICAgIC8vIENhbGxiYWNrc1xuICAgICAgICAgICAgcnVuQ2FsbGJhY2tzT25Jbml0OiB0cnVlXG4gICAgICAgICAgICAvKlxuICAgICAgICAgICAgQ2FsbGJhY2tzOlxuICAgICAgICAgICAgb25Jbml0OiBmdW5jdGlvbiAoc3dpcGVyKVxuICAgICAgICAgICAgb25EZXN0cm95OiBmdW5jdGlvbiAoc3dpcGVyKVxuICAgICAgICAgICAgb25CZWZvcmVSZXNpemU6IGZ1bmN0aW9uIChzd2lwZXIpXG4gICAgICAgICAgICBvbkFmdGVyUmVzaXplOiBmdW5jdGlvbiAoc3dpcGVyKVxuICAgICAgICAgICAgb25DbGljazogZnVuY3Rpb24gKHN3aXBlciwgZSlcbiAgICAgICAgICAgIG9uVGFwOiBmdW5jdGlvbiAoc3dpcGVyLCBlKVxuICAgICAgICAgICAgb25Eb3VibGVUYXA6IGZ1bmN0aW9uIChzd2lwZXIsIGUpXG4gICAgICAgICAgICBvblNsaWRlck1vdmU6IGZ1bmN0aW9uIChzd2lwZXIsIGUpXG4gICAgICAgICAgICBvblNsaWRlQ2hhbmdlU3RhcnQ6IGZ1bmN0aW9uIChzd2lwZXIpXG4gICAgICAgICAgICBvblNsaWRlQ2hhbmdlRW5kOiBmdW5jdGlvbiAoc3dpcGVyKVxuICAgICAgICAgICAgb25UcmFuc2l0aW9uU3RhcnQ6IGZ1bmN0aW9uIChzd2lwZXIpXG4gICAgICAgICAgICBvblRyYW5zaXRpb25FbmQ6IGZ1bmN0aW9uIChzd2lwZXIpXG4gICAgICAgICAgICBvbkltYWdlc1JlYWR5OiBmdW5jdGlvbiAoc3dpcGVyKVxuICAgICAgICAgICAgb25Qcm9ncmVzczogZnVuY3Rpb24gKHN3aXBlciwgcHJvZ3Jlc3MpXG4gICAgICAgICAgICBvblRvdWNoU3RhcnQ6IGZ1bmN0aW9uIChzd2lwZXIsIGUpXG4gICAgICAgICAgICBvblRvdWNoTW92ZTogZnVuY3Rpb24gKHN3aXBlciwgZSlcbiAgICAgICAgICAgIG9uVG91Y2hNb3ZlT3Bwb3NpdGU6IGZ1bmN0aW9uIChzd2lwZXIsIGUpXG4gICAgICAgICAgICBvblRvdWNoRW5kOiBmdW5jdGlvbiAoc3dpcGVyLCBlKVxuICAgICAgICAgICAgb25SZWFjaEJlZ2lubmluZzogZnVuY3Rpb24gKHN3aXBlcilcbiAgICAgICAgICAgIG9uUmVhY2hFbmQ6IGZ1bmN0aW9uIChzd2lwZXIpXG4gICAgICAgICAgICBvblNldFRyYW5zaXRpb246IGZ1bmN0aW9uIChzd2lwZXIsIGR1cmF0aW9uKVxuICAgICAgICAgICAgb25TZXRUcmFuc2xhdGU6IGZ1bmN0aW9uIChzd2lwZXIsIHRyYW5zbGF0ZSlcbiAgICAgICAgICAgIG9uQXV0b3BsYXlTdGFydDogZnVuY3Rpb24gKHN3aXBlcilcbiAgICAgICAgICAgIG9uQXV0b3BsYXlTdG9wOiBmdW5jdGlvbiAoc3dpcGVyKSxcbiAgICAgICAgICAgIG9uTGF6eUltYWdlTG9hZDogZnVuY3Rpb24gKHN3aXBlciwgc2xpZGUsIGltYWdlKVxuICAgICAgICAgICAgb25MYXp5SW1hZ2VSZWFkeTogZnVuY3Rpb24gKHN3aXBlciwgc2xpZGUsIGltYWdlKVxuICAgICAgICAgICAgb25LZXlQcmVzczogZnVuY3Rpb24gKHN3aXBlciwga2V5Q29kZSlcbiAgICAgICAgICAgICovXG4gICAgICAgIFxuICAgICAgICB9O1xuICAgICAgICB2YXIgaW5pdGlhbFZpcnR1YWxUcmFuc2xhdGUgPSBwYXJhbXMgJiYgcGFyYW1zLnZpcnR1YWxUcmFuc2xhdGU7XG4gICAgICAgIFxuICAgICAgICBwYXJhbXMgPSBwYXJhbXMgfHwge307XG4gICAgICAgIHZhciBvcmlnaW5hbFBhcmFtcyA9IHt9O1xuICAgICAgICBmb3IgKHZhciBwYXJhbSBpbiBwYXJhbXMpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFyYW1zW3BhcmFtXSA9PT0gJ29iamVjdCcgJiYgcGFyYW1zW3BhcmFtXSAhPT0gbnVsbCAmJiAhKHBhcmFtc1twYXJhbV0ubm9kZVR5cGUgfHwgcGFyYW1zW3BhcmFtXSA9PT0gd2luZG93IHx8IHBhcmFtc1twYXJhbV0gPT09IGRvY3VtZW50IHx8ICh0eXBlb2YgRG9tNyAhPT0gJ3VuZGVmaW5lZCcgJiYgcGFyYW1zW3BhcmFtXSBpbnN0YW5jZW9mIERvbTcpIHx8ICh0eXBlb2YgalF1ZXJ5ICE9PSAndW5kZWZpbmVkJyAmJiBwYXJhbXNbcGFyYW1dIGluc3RhbmNlb2YgalF1ZXJ5KSkpIHtcbiAgICAgICAgICAgICAgICBvcmlnaW5hbFBhcmFtc1twYXJhbV0gPSB7fTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBkZWVwUGFyYW0gaW4gcGFyYW1zW3BhcmFtXSkge1xuICAgICAgICAgICAgICAgICAgICBvcmlnaW5hbFBhcmFtc1twYXJhbV1bZGVlcFBhcmFtXSA9IHBhcmFtc1twYXJhbV1bZGVlcFBhcmFtXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBvcmlnaW5hbFBhcmFtc1twYXJhbV0gPSBwYXJhbXNbcGFyYW1dO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGRlZiBpbiBkZWZhdWx0cykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBwYXJhbXNbZGVmXSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICBwYXJhbXNbZGVmXSA9IGRlZmF1bHRzW2RlZl07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgcGFyYW1zW2RlZl0gPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgZGVlcERlZiBpbiBkZWZhdWx0c1tkZWZdKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcGFyYW1zW2RlZl1bZGVlcERlZl0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXNbZGVmXVtkZWVwRGVmXSA9IGRlZmF1bHRzW2RlZl1bZGVlcERlZl07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIFN3aXBlclxuICAgICAgICB2YXIgcyA9IHRoaXM7XG4gICAgICAgIFxuICAgICAgICAvLyBQYXJhbXNcbiAgICAgICAgcy5wYXJhbXMgPSBwYXJhbXM7XG4gICAgICAgIHMub3JpZ2luYWxQYXJhbXMgPSBvcmlnaW5hbFBhcmFtcztcbiAgICAgICAgXG4gICAgICAgIC8vIENsYXNzbmFtZVxuICAgICAgICBzLmNsYXNzTmFtZXMgPSBbXTtcbiAgICAgICAgLyo9PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgICAgICAgRG9tIExpYnJhcnkgYW5kIHBsdWdpbnNcbiAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgICAgICBpZiAodHlwZW9mICQgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBEb203ICE9PSAndW5kZWZpbmVkJyl7XG4gICAgICAgICAgICAkID0gRG9tNztcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mICQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIERvbTcgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgJCA9IHdpbmRvdy5Eb203IHx8IHdpbmRvdy5aZXB0byB8fCB3aW5kb3cualF1ZXJ5O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgJCA9IERvbTc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoISQpIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBFeHBvcnQgaXQgdG8gU3dpcGVyIGluc3RhbmNlXG4gICAgICAgIHMuJCA9ICQ7XG4gICAgICAgIFxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBCcmVha3BvaW50c1xuICAgICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG4gICAgICAgIHMuY3VycmVudEJyZWFrcG9pbnQgPSB1bmRlZmluZWQ7XG4gICAgICAgIHMuZ2V0QWN0aXZlQnJlYWtwb2ludCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIC8vR2V0IGJyZWFrcG9pbnQgZm9yIHdpbmRvdyB3aWR0aFxuICAgICAgICAgICAgaWYgKCFzLnBhcmFtcy5icmVha3BvaW50cykgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgdmFyIGJyZWFrcG9pbnQgPSBmYWxzZTtcbiAgICAgICAgICAgIHZhciBwb2ludHMgPSBbXSwgcG9pbnQ7XG4gICAgICAgICAgICBmb3IgKCBwb2ludCBpbiBzLnBhcmFtcy5icmVha3BvaW50cyApIHtcbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuYnJlYWtwb2ludHMuaGFzT3duUHJvcGVydHkocG9pbnQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHBvaW50cy5wdXNoKHBvaW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwb2ludHMuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICAgICAgICAgIHJldHVybiBwYXJzZUludChhLCAxMCkgPiBwYXJzZUludChiLCAxMCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcG9pbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgcG9pbnQgPSBwb2ludHNbaV07XG4gICAgICAgICAgICAgICAgaWYgKHBvaW50ID49IHdpbmRvdy5pbm5lcldpZHRoICYmICFicmVha3BvaW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrcG9pbnQgPSBwb2ludDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYnJlYWtwb2ludCB8fCAnbWF4JztcbiAgICAgICAgfTtcbiAgICAgICAgcy5zZXRCcmVha3BvaW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgLy9TZXQgYnJlYWtwb2ludCBmb3Igd2luZG93IHdpZHRoIGFuZCB1cGRhdGUgcGFyYW1ldGVyc1xuICAgICAgICAgICAgdmFyIGJyZWFrcG9pbnQgPSBzLmdldEFjdGl2ZUJyZWFrcG9pbnQoKTtcbiAgICAgICAgICAgIGlmIChicmVha3BvaW50ICYmIHMuY3VycmVudEJyZWFrcG9pbnQgIT09IGJyZWFrcG9pbnQpIHtcbiAgICAgICAgICAgICAgICB2YXIgYnJlYWtQb2ludHNQYXJhbXMgPSBicmVha3BvaW50IGluIHMucGFyYW1zLmJyZWFrcG9pbnRzID8gcy5wYXJhbXMuYnJlYWtwb2ludHNbYnJlYWtwb2ludF0gOiBzLm9yaWdpbmFsUGFyYW1zO1xuICAgICAgICAgICAgICAgIHZhciBuZWVkc1JlTG9vcCA9IHMucGFyYW1zLmxvb3AgJiYgKGJyZWFrUG9pbnRzUGFyYW1zLnNsaWRlc1BlclZpZXcgIT09IHMucGFyYW1zLnNsaWRlc1BlclZpZXcpO1xuICAgICAgICAgICAgICAgIGZvciAoIHZhciBwYXJhbSBpbiBicmVha1BvaW50c1BhcmFtcyApIHtcbiAgICAgICAgICAgICAgICAgICAgcy5wYXJhbXNbcGFyYW1dID0gYnJlYWtQb2ludHNQYXJhbXNbcGFyYW1dO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzLmN1cnJlbnRCcmVha3BvaW50ID0gYnJlYWtwb2ludDtcbiAgICAgICAgICAgICAgICBpZihuZWVkc1JlTG9vcCAmJiBzLmRlc3Ryb3lMb29wKSB7XG4gICAgICAgICAgICAgICAgICAgIHMucmVMb29wKHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgLy8gU2V0IGJyZWFrcG9pbnQgb24gbG9hZFxuICAgICAgICBpZiAocy5wYXJhbXMuYnJlYWtwb2ludHMpIHtcbiAgICAgICAgICAgIHMuc2V0QnJlYWtwb2ludCgpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBQcmVwYXJhdGlvbiAtIERlZmluZSBDb250YWluZXIsIFdyYXBwZXIgYW5kIFBhZ2luYXRpb25cbiAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgICAgICBzLmNvbnRhaW5lciA9ICQoY29udGFpbmVyKTtcbiAgICAgICAgaWYgKHMuY29udGFpbmVyLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgICAgICBpZiAocy5jb250YWluZXIubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgdmFyIHN3aXBlcnMgPSBbXTtcbiAgICAgICAgICAgIHMuY29udGFpbmVyLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBjb250YWluZXIgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHN3aXBlcnMucHVzaChuZXcgU3dpcGVyKHRoaXMsIHBhcmFtcykpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gc3dpcGVycztcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gU2F2ZSBpbnN0YW5jZSBpbiBjb250YWluZXIgSFRNTCBFbGVtZW50IGFuZCBpbiBkYXRhXG4gICAgICAgIHMuY29udGFpbmVyWzBdLnN3aXBlciA9IHM7XG4gICAgICAgIHMuY29udGFpbmVyLmRhdGEoJ3N3aXBlcicsIHMpO1xuICAgICAgICBcbiAgICAgICAgcy5jbGFzc05hbWVzLnB1c2gocy5wYXJhbXMuY29udGFpbmVyTW9kaWZpZXJDbGFzcyArIHMucGFyYW1zLmRpcmVjdGlvbik7XG4gICAgICAgIFxuICAgICAgICBpZiAocy5wYXJhbXMuZnJlZU1vZGUpIHtcbiAgICAgICAgICAgIHMuY2xhc3NOYW1lcy5wdXNoKHMucGFyYW1zLmNvbnRhaW5lck1vZGlmaWVyQ2xhc3MgKyAnZnJlZS1tb2RlJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFzLnN1cHBvcnQuZmxleGJveCkge1xuICAgICAgICAgICAgcy5jbGFzc05hbWVzLnB1c2gocy5wYXJhbXMuY29udGFpbmVyTW9kaWZpZXJDbGFzcyArICduby1mbGV4Ym94Jyk7XG4gICAgICAgICAgICBzLnBhcmFtcy5zbGlkZXNQZXJDb2x1bW4gPSAxO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzLnBhcmFtcy5hdXRvSGVpZ2h0KSB7XG4gICAgICAgICAgICBzLmNsYXNzTmFtZXMucHVzaChzLnBhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzICsgJ2F1dG9oZWlnaHQnKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBFbmFibGUgc2xpZGVzIHByb2dyZXNzIHdoZW4gcmVxdWlyZWRcbiAgICAgICAgaWYgKHMucGFyYW1zLnBhcmFsbGF4IHx8IHMucGFyYW1zLndhdGNoU2xpZGVzVmlzaWJpbGl0eSkge1xuICAgICAgICAgICAgcy5wYXJhbXMud2F0Y2hTbGlkZXNQcm9ncmVzcyA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgLy8gTWF4IHJlc2lzdGFuY2Ugd2hlbiB0b3VjaFJlbGVhc2VPbkVkZ2VzXG4gICAgICAgIGlmIChzLnBhcmFtcy50b3VjaFJlbGVhc2VPbkVkZ2VzKSB7XG4gICAgICAgICAgICBzLnBhcmFtcy5yZXNpc3RhbmNlUmF0aW8gPSAwO1xuICAgICAgICB9XG4gICAgICAgIC8vIENvdmVyZmxvdyAvIDNEXG4gICAgICAgIGlmIChbJ2N1YmUnLCAnY292ZXJmbG93JywgJ2ZsaXAnXS5pbmRleE9mKHMucGFyYW1zLmVmZmVjdCkgPj0gMCkge1xuICAgICAgICAgICAgaWYgKHMuc3VwcG9ydC50cmFuc2Zvcm1zM2QpIHtcbiAgICAgICAgICAgICAgICBzLnBhcmFtcy53YXRjaFNsaWRlc1Byb2dyZXNzID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBzLmNsYXNzTmFtZXMucHVzaChzLnBhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzICsgJzNkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzLnBhcmFtcy5lZmZlY3QgPSAnc2xpZGUnO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChzLnBhcmFtcy5lZmZlY3QgIT09ICdzbGlkZScpIHtcbiAgICAgICAgICAgIHMuY2xhc3NOYW1lcy5wdXNoKHMucGFyYW1zLmNvbnRhaW5lck1vZGlmaWVyQ2xhc3MgKyBzLnBhcmFtcy5lZmZlY3QpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzLnBhcmFtcy5lZmZlY3QgPT09ICdjdWJlJykge1xuICAgICAgICAgICAgcy5wYXJhbXMucmVzaXN0YW5jZVJhdGlvID0gMDtcbiAgICAgICAgICAgIHMucGFyYW1zLnNsaWRlc1BlclZpZXcgPSAxO1xuICAgICAgICAgICAgcy5wYXJhbXMuc2xpZGVzUGVyQ29sdW1uID0gMTtcbiAgICAgICAgICAgIHMucGFyYW1zLnNsaWRlc1Blckdyb3VwID0gMTtcbiAgICAgICAgICAgIHMucGFyYW1zLmNlbnRlcmVkU2xpZGVzID0gZmFsc2U7XG4gICAgICAgICAgICBzLnBhcmFtcy5zcGFjZUJldHdlZW4gPSAwO1xuICAgICAgICAgICAgcy5wYXJhbXMudmlydHVhbFRyYW5zbGF0ZSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHMucGFyYW1zLmVmZmVjdCA9PT0gJ2ZhZGUnIHx8IHMucGFyYW1zLmVmZmVjdCA9PT0gJ2ZsaXAnKSB7XG4gICAgICAgICAgICBzLnBhcmFtcy5zbGlkZXNQZXJWaWV3ID0gMTtcbiAgICAgICAgICAgIHMucGFyYW1zLnNsaWRlc1BlckNvbHVtbiA9IDE7XG4gICAgICAgICAgICBzLnBhcmFtcy5zbGlkZXNQZXJHcm91cCA9IDE7XG4gICAgICAgICAgICBzLnBhcmFtcy53YXRjaFNsaWRlc1Byb2dyZXNzID0gdHJ1ZTtcbiAgICAgICAgICAgIHMucGFyYW1zLnNwYWNlQmV0d2VlbiA9IDA7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGluaXRpYWxWaXJ0dWFsVHJhbnNsYXRlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIHMucGFyYW1zLnZpcnR1YWxUcmFuc2xhdGUgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBHcmFiIEN1cnNvclxuICAgICAgICBpZiAocy5wYXJhbXMuZ3JhYkN1cnNvciAmJiBzLnN1cHBvcnQudG91Y2gpIHtcbiAgICAgICAgICAgIHMucGFyYW1zLmdyYWJDdXJzb3IgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gV3JhcHBlclxuICAgICAgICBzLndyYXBwZXIgPSBzLmNvbnRhaW5lci5jaGlsZHJlbignLicgKyBzLnBhcmFtcy53cmFwcGVyQ2xhc3MpO1xuICAgICAgICBcbiAgICAgICAgLy8gUGFnaW5hdGlvblxuICAgICAgICBpZiAocy5wYXJhbXMucGFnaW5hdGlvbikge1xuICAgICAgICAgICAgcy5wYWdpbmF0aW9uQ29udGFpbmVyID0gJChzLnBhcmFtcy5wYWdpbmF0aW9uKTtcbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy51bmlxdWVOYXZFbGVtZW50cyAmJiB0eXBlb2Ygcy5wYXJhbXMucGFnaW5hdGlvbiA9PT0gJ3N0cmluZycgJiYgcy5wYWdpbmF0aW9uQ29udGFpbmVyLmxlbmd0aCA+IDEgJiYgcy5jb250YWluZXIuZmluZChzLnBhcmFtcy5wYWdpbmF0aW9uKS5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICBzLnBhZ2luYXRpb25Db250YWluZXIgPSBzLmNvbnRhaW5lci5maW5kKHMucGFyYW1zLnBhZ2luYXRpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5wYWdpbmF0aW9uVHlwZSA9PT0gJ2J1bGxldHMnICYmIHMucGFyYW1zLnBhZ2luYXRpb25DbGlja2FibGUpIHtcbiAgICAgICAgICAgICAgICBzLnBhZ2luYXRpb25Db250YWluZXIuYWRkQ2xhc3Mocy5wYXJhbXMucGFnaW5hdGlvbk1vZGlmaWVyQ2xhc3MgKyAnY2xpY2thYmxlJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzLnBhcmFtcy5wYWdpbmF0aW9uQ2xpY2thYmxlID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzLnBhZ2luYXRpb25Db250YWluZXIuYWRkQ2xhc3Mocy5wYXJhbXMucGFnaW5hdGlvbk1vZGlmaWVyQ2xhc3MgKyBzLnBhcmFtcy5wYWdpbmF0aW9uVHlwZSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gTmV4dC9QcmV2IEJ1dHRvbnNcbiAgICAgICAgaWYgKHMucGFyYW1zLm5leHRCdXR0b24gfHwgcy5wYXJhbXMucHJldkJ1dHRvbikge1xuICAgICAgICAgICAgaWYgKHMucGFyYW1zLm5leHRCdXR0b24pIHtcbiAgICAgICAgICAgICAgICBzLm5leHRCdXR0b24gPSAkKHMucGFyYW1zLm5leHRCdXR0b24pO1xuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy51bmlxdWVOYXZFbGVtZW50cyAmJiB0eXBlb2Ygcy5wYXJhbXMubmV4dEJ1dHRvbiA9PT0gJ3N0cmluZycgJiYgcy5uZXh0QnV0dG9uLmxlbmd0aCA+IDEgJiYgcy5jb250YWluZXIuZmluZChzLnBhcmFtcy5uZXh0QnV0dG9uKS5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgcy5uZXh0QnV0dG9uID0gcy5jb250YWluZXIuZmluZChzLnBhcmFtcy5uZXh0QnV0dG9uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMucHJldkJ1dHRvbikge1xuICAgICAgICAgICAgICAgIHMucHJldkJ1dHRvbiA9ICQocy5wYXJhbXMucHJldkJ1dHRvbik7XG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLnVuaXF1ZU5hdkVsZW1lbnRzICYmIHR5cGVvZiBzLnBhcmFtcy5wcmV2QnV0dG9uID09PSAnc3RyaW5nJyAmJiBzLnByZXZCdXR0b24ubGVuZ3RoID4gMSAmJiBzLmNvbnRhaW5lci5maW5kKHMucGFyYW1zLnByZXZCdXR0b24pLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgICAgICAgICBzLnByZXZCdXR0b24gPSBzLmNvbnRhaW5lci5maW5kKHMucGFyYW1zLnByZXZCdXR0b24pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gSXMgSG9yaXpvbnRhbFxuICAgICAgICBzLmlzSG9yaXpvbnRhbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBzLnBhcmFtcy5kaXJlY3Rpb24gPT09ICdob3Jpem9udGFsJztcbiAgICAgICAgfTtcbiAgICAgICAgLy8gcy5pc0ggPSBpc0g7XG4gICAgICAgIFxuICAgICAgICAvLyBSVExcbiAgICAgICAgcy5ydGwgPSBzLmlzSG9yaXpvbnRhbCgpICYmIChzLmNvbnRhaW5lclswXS5kaXIudG9Mb3dlckNhc2UoKSA9PT0gJ3J0bCcgfHwgcy5jb250YWluZXIuY3NzKCdkaXJlY3Rpb24nKSA9PT0gJ3J0bCcpO1xuICAgICAgICBpZiAocy5ydGwpIHtcbiAgICAgICAgICAgIHMuY2xhc3NOYW1lcy5wdXNoKHMucGFyYW1zLmNvbnRhaW5lck1vZGlmaWVyQ2xhc3MgKyAncnRsJyk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIFdyb25nIFJUTCBzdXBwb3J0XG4gICAgICAgIGlmIChzLnJ0bCkge1xuICAgICAgICAgICAgcy53cm9uZ1JUTCA9IHMud3JhcHBlci5jc3MoJ2Rpc3BsYXknKSA9PT0gJy13ZWJraXQtYm94JztcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gQ29sdW1uc1xuICAgICAgICBpZiAocy5wYXJhbXMuc2xpZGVzUGVyQ29sdW1uID4gMSkge1xuICAgICAgICAgICAgcy5jbGFzc05hbWVzLnB1c2gocy5wYXJhbXMuY29udGFpbmVyTW9kaWZpZXJDbGFzcyArICdtdWx0aXJvdycpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBDaGVjayBmb3IgQW5kcm9pZFxuICAgICAgICBpZiAocy5kZXZpY2UuYW5kcm9pZCkge1xuICAgICAgICAgICAgcy5jbGFzc05hbWVzLnB1c2gocy5wYXJhbXMuY29udGFpbmVyTW9kaWZpZXJDbGFzcyArICdhbmRyb2lkJyk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIEFkZCBjbGFzc2VzXG4gICAgICAgIHMuY29udGFpbmVyLmFkZENsYXNzKHMuY2xhc3NOYW1lcy5qb2luKCcgJykpO1xuICAgICAgICBcbiAgICAgICAgLy8gVHJhbnNsYXRlXG4gICAgICAgIHMudHJhbnNsYXRlID0gMDtcbiAgICAgICAgXG4gICAgICAgIC8vIFByb2dyZXNzXG4gICAgICAgIHMucHJvZ3Jlc3MgPSAwO1xuICAgICAgICBcbiAgICAgICAgLy8gVmVsb2NpdHlcbiAgICAgICAgcy52ZWxvY2l0eSA9IDA7XG4gICAgICAgIFxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBMb2NrcywgdW5sb2Nrc1xuICAgICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG4gICAgICAgIHMubG9ja1N3aXBlVG9OZXh0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcy5wYXJhbXMuYWxsb3dTd2lwZVRvTmV4dCA9IGZhbHNlO1xuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmFsbG93U3dpcGVUb1ByZXYgPT09IGZhbHNlICYmIHMucGFyYW1zLmdyYWJDdXJzb3IpIHtcbiAgICAgICAgICAgICAgICBzLnVuc2V0R3JhYkN1cnNvcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBzLmxvY2tTd2lwZVRvUHJldiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHMucGFyYW1zLmFsbG93U3dpcGVUb1ByZXYgPSBmYWxzZTtcbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5hbGxvd1N3aXBlVG9OZXh0ID09PSBmYWxzZSAmJiBzLnBhcmFtcy5ncmFiQ3Vyc29yKSB7XG4gICAgICAgICAgICAgICAgcy51bnNldEdyYWJDdXJzb3IoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgcy5sb2NrU3dpcGVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcy5wYXJhbXMuYWxsb3dTd2lwZVRvTmV4dCA9IHMucGFyYW1zLmFsbG93U3dpcGVUb1ByZXYgPSBmYWxzZTtcbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5ncmFiQ3Vyc29yKSBzLnVuc2V0R3JhYkN1cnNvcigpO1xuICAgICAgICB9O1xuICAgICAgICBzLnVubG9ja1N3aXBlVG9OZXh0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcy5wYXJhbXMuYWxsb3dTd2lwZVRvTmV4dCA9IHRydWU7XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMuYWxsb3dTd2lwZVRvUHJldiA9PT0gdHJ1ZSAmJiBzLnBhcmFtcy5ncmFiQ3Vyc29yKSB7XG4gICAgICAgICAgICAgICAgcy5zZXRHcmFiQ3Vyc29yKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHMudW5sb2NrU3dpcGVUb1ByZXYgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBzLnBhcmFtcy5hbGxvd1N3aXBlVG9QcmV2ID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5hbGxvd1N3aXBlVG9OZXh0ID09PSB0cnVlICYmIHMucGFyYW1zLmdyYWJDdXJzb3IpIHtcbiAgICAgICAgICAgICAgICBzLnNldEdyYWJDdXJzb3IoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgcy51bmxvY2tTd2lwZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBzLnBhcmFtcy5hbGxvd1N3aXBlVG9OZXh0ID0gcy5wYXJhbXMuYWxsb3dTd2lwZVRvUHJldiA9IHRydWU7XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMuZ3JhYkN1cnNvcikgcy5zZXRHcmFiQ3Vyc29yKCk7XG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBSb3VuZCBoZWxwZXJcbiAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgICAgICBmdW5jdGlvbiByb3VuZChhKSB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihhKTtcbiAgICAgICAgfVxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBTZXQgZ3JhYiBjdXJzb3JcbiAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgICAgICBzLnNldEdyYWJDdXJzb3IgPSBmdW5jdGlvbihtb3ZpbmcpIHtcbiAgICAgICAgICAgIHMuY29udGFpbmVyWzBdLnN0eWxlLmN1cnNvciA9ICdtb3ZlJztcbiAgICAgICAgICAgIHMuY29udGFpbmVyWzBdLnN0eWxlLmN1cnNvciA9IG1vdmluZyA/ICctd2Via2l0LWdyYWJiaW5nJyA6ICctd2Via2l0LWdyYWInO1xuICAgICAgICAgICAgcy5jb250YWluZXJbMF0uc3R5bGUuY3Vyc29yID0gbW92aW5nID8gJy1tb3otZ3JhYmJpbicgOiAnLW1vei1ncmFiJztcbiAgICAgICAgICAgIHMuY29udGFpbmVyWzBdLnN0eWxlLmN1cnNvciA9IG1vdmluZyA/ICdncmFiYmluZyc6ICdncmFiJztcbiAgICAgICAgfTtcbiAgICAgICAgcy51bnNldEdyYWJDdXJzb3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBzLmNvbnRhaW5lclswXS5zdHlsZS5jdXJzb3IgPSAnJztcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHMucGFyYW1zLmdyYWJDdXJzb3IpIHtcbiAgICAgICAgICAgIHMuc2V0R3JhYkN1cnNvcigpO1xuICAgICAgICB9XG4gICAgICAgIC8qPT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICAgICAgIFVwZGF0ZSBvbiBJbWFnZXMgUmVhZHlcbiAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgICAgICBzLmltYWdlc1RvTG9hZCA9IFtdO1xuICAgICAgICBzLmltYWdlc0xvYWRlZCA9IDA7XG4gICAgICAgIFxuICAgICAgICBzLmxvYWRJbWFnZSA9IGZ1bmN0aW9uIChpbWdFbGVtZW50LCBzcmMsIHNyY3NldCwgc2l6ZXMsIGNoZWNrRm9yQ29tcGxldGUsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICB2YXIgaW1hZ2U7XG4gICAgICAgICAgICBmdW5jdGlvbiBvblJlYWR5ICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWltZ0VsZW1lbnQuY29tcGxldGUgfHwgIWNoZWNrRm9yQ29tcGxldGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoc3JjKSB7XG4gICAgICAgICAgICAgICAgICAgIGltYWdlID0gbmV3IHdpbmRvdy5JbWFnZSgpO1xuICAgICAgICAgICAgICAgICAgICBpbWFnZS5vbmxvYWQgPSBvblJlYWR5O1xuICAgICAgICAgICAgICAgICAgICBpbWFnZS5vbmVycm9yID0gb25SZWFkeTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNpemVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbWFnZS5zaXplcyA9IHNpemVzO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChzcmNzZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlLnNyY3NldCA9IHNyY3NldDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoc3JjKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbWFnZS5zcmMgPSBzcmM7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBvblJlYWR5KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIH0gZWxzZSB7Ly9pbWFnZSBhbHJlYWR5IGxvYWRlZC4uLlxuICAgICAgICAgICAgICAgIG9uUmVhZHkoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgcy5wcmVsb2FkSW1hZ2VzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcy5pbWFnZXNUb0xvYWQgPSBzLmNvbnRhaW5lci5maW5kKCdpbWcnKTtcbiAgICAgICAgICAgIGZ1bmN0aW9uIF9vblJlYWR5KCkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcyA9PT0gJ3VuZGVmaW5lZCcgfHwgcyA9PT0gbnVsbCB8fCAhcykgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGlmIChzLmltYWdlc0xvYWRlZCAhPT0gdW5kZWZpbmVkKSBzLmltYWdlc0xvYWRlZCsrO1xuICAgICAgICAgICAgICAgIGlmIChzLmltYWdlc0xvYWRlZCA9PT0gcy5pbWFnZXNUb0xvYWQubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy51cGRhdGVPbkltYWdlc1JlYWR5KSBzLnVwZGF0ZSgpO1xuICAgICAgICAgICAgICAgICAgICBzLmVtaXQoJ29uSW1hZ2VzUmVhZHknLCBzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHMuaW1hZ2VzVG9Mb2FkLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgcy5sb2FkSW1hZ2Uocy5pbWFnZXNUb0xvYWRbaV0sIChzLmltYWdlc1RvTG9hZFtpXS5jdXJyZW50U3JjIHx8IHMuaW1hZ2VzVG9Mb2FkW2ldLmdldEF0dHJpYnV0ZSgnc3JjJykpLCAocy5pbWFnZXNUb0xvYWRbaV0uc3Jjc2V0IHx8IHMuaW1hZ2VzVG9Mb2FkW2ldLmdldEF0dHJpYnV0ZSgnc3Jjc2V0JykpLCBzLmltYWdlc1RvTG9hZFtpXS5zaXplcyB8fCBzLmltYWdlc1RvTG9hZFtpXS5nZXRBdHRyaWJ1dGUoJ3NpemVzJyksIHRydWUsIF9vblJlYWR5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgICAgIC8qPT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICAgICAgIEF1dG9wbGF5XG4gICAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbiAgICAgICAgcy5hdXRvcGxheVRpbWVvdXRJZCA9IHVuZGVmaW5lZDtcbiAgICAgICAgcy5hdXRvcGxheWluZyA9IGZhbHNlO1xuICAgICAgICBzLmF1dG9wbGF5UGF1c2VkID0gZmFsc2U7XG4gICAgICAgIGZ1bmN0aW9uIGF1dG9wbGF5KCkge1xuICAgICAgICAgICAgdmFyIGF1dG9wbGF5RGVsYXkgPSBzLnBhcmFtcy5hdXRvcGxheTtcbiAgICAgICAgICAgIHZhciBhY3RpdmVTbGlkZSA9IHMuc2xpZGVzLmVxKHMuYWN0aXZlSW5kZXgpO1xuICAgICAgICAgICAgaWYgKGFjdGl2ZVNsaWRlLmF0dHIoJ2RhdGEtc3dpcGVyLWF1dG9wbGF5JykpIHtcbiAgICAgICAgICAgICAgICBhdXRvcGxheURlbGF5ID0gYWN0aXZlU2xpZGUuYXR0cignZGF0YS1zd2lwZXItYXV0b3BsYXknKSB8fCBzLnBhcmFtcy5hdXRvcGxheTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHMuYXV0b3BsYXlUaW1lb3V0SWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMubG9vcCkge1xuICAgICAgICAgICAgICAgICAgICBzLmZpeExvb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgcy5fc2xpZGVOZXh0KCk7XG4gICAgICAgICAgICAgICAgICAgIHMuZW1pdCgnb25BdXRvcGxheScsIHMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFzLmlzRW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLl9zbGlkZU5leHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuZW1pdCgnb25BdXRvcGxheScsIHMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFwYXJhbXMuYXV0b3BsYXlTdG9wT25MYXN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcy5fc2xpZGVUbygwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzLmVtaXQoJ29uQXV0b3BsYXknLCBzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMuc3RvcEF1dG9wbGF5KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCBhdXRvcGxheURlbGF5KTtcbiAgICAgICAgfVxuICAgICAgICBzLnN0YXJ0QXV0b3BsYXkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHMuYXV0b3BsYXlUaW1lb3V0SWQgIT09ICd1bmRlZmluZWQnKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICBpZiAoIXMucGFyYW1zLmF1dG9wbGF5KSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICBpZiAocy5hdXRvcGxheWluZykgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgcy5hdXRvcGxheWluZyA9IHRydWU7XG4gICAgICAgICAgICBzLmVtaXQoJ29uQXV0b3BsYXlTdGFydCcsIHMpO1xuICAgICAgICAgICAgYXV0b3BsYXkoKTtcbiAgICAgICAgfTtcbiAgICAgICAgcy5zdG9wQXV0b3BsYXkgPSBmdW5jdGlvbiAoaW50ZXJuYWwpIHtcbiAgICAgICAgICAgIGlmICghcy5hdXRvcGxheVRpbWVvdXRJZCkgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKHMuYXV0b3BsYXlUaW1lb3V0SWQpIGNsZWFyVGltZW91dChzLmF1dG9wbGF5VGltZW91dElkKTtcbiAgICAgICAgICAgIHMuYXV0b3BsYXlpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIHMuYXV0b3BsYXlUaW1lb3V0SWQgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICBzLmVtaXQoJ29uQXV0b3BsYXlTdG9wJywgcyk7XG4gICAgICAgIH07XG4gICAgICAgIHMucGF1c2VBdXRvcGxheSA9IGZ1bmN0aW9uIChzcGVlZCkge1xuICAgICAgICAgICAgaWYgKHMuYXV0b3BsYXlQYXVzZWQpIHJldHVybjtcbiAgICAgICAgICAgIGlmIChzLmF1dG9wbGF5VGltZW91dElkKSBjbGVhclRpbWVvdXQocy5hdXRvcGxheVRpbWVvdXRJZCk7XG4gICAgICAgICAgICBzLmF1dG9wbGF5UGF1c2VkID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmIChzcGVlZCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHMuYXV0b3BsYXlQYXVzZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBhdXRvcGxheSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcy53cmFwcGVyLnRyYW5zaXRpb25FbmQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXMpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgcy5hdXRvcGxheVBhdXNlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXMuYXV0b3BsYXlpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuc3RvcEF1dG9wbGF5KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhdXRvcGxheSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIC8qPT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICAgICAgIE1pbi9NYXggVHJhbnNsYXRlXG4gICAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbiAgICAgICAgcy5taW5UcmFuc2xhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gKC1zLnNuYXBHcmlkWzBdKTtcbiAgICAgICAgfTtcbiAgICAgICAgcy5tYXhUcmFuc2xhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gKC1zLnNuYXBHcmlkW3Muc25hcEdyaWQubGVuZ3RoIC0gMV0pO1xuICAgICAgICB9O1xuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBTbGlkZXIvc2xpZGVzIHNpemVzXG4gICAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbiAgICAgICAgcy51cGRhdGVBdXRvSGVpZ2h0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGFjdGl2ZVNsaWRlcyA9IFtdO1xuICAgICAgICAgICAgdmFyIG5ld0hlaWdodCA9IDA7XG4gICAgICAgICAgICB2YXIgaTtcbiAgICAgICAgXG4gICAgICAgICAgICAvLyBGaW5kIHNsaWRlcyBjdXJyZW50bHkgaW4gdmlld1xuICAgICAgICAgICAgaWYocy5wYXJhbXMuc2xpZGVzUGVyVmlldyAhPT0gJ2F1dG8nICYmIHMucGFyYW1zLnNsaWRlc1BlclZpZXcgPiAxKSB7XG4gICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IE1hdGguY2VpbChzLnBhcmFtcy5zbGlkZXNQZXJWaWV3KTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpbmRleCA9IHMuYWN0aXZlSW5kZXggKyBpO1xuICAgICAgICAgICAgICAgICAgICBpZihpbmRleCA+IHMuc2xpZGVzLmxlbmd0aCkgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZVNsaWRlcy5wdXNoKHMuc2xpZGVzLmVxKGluZGV4KVswXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBhY3RpdmVTbGlkZXMucHVzaChzLnNsaWRlcy5lcShzLmFjdGl2ZUluZGV4KVswXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLy8gRmluZCBuZXcgaGVpZ2h0IGZyb20gaGVpZ2hlc3Qgc2xpZGUgaW4gdmlld1xuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGFjdGl2ZVNsaWRlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgYWN0aXZlU2xpZGVzW2ldICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgaGVpZ2h0ID0gYWN0aXZlU2xpZGVzW2ldLm9mZnNldEhlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgbmV3SGVpZ2h0ID0gaGVpZ2h0ID4gbmV3SGVpZ2h0ID8gaGVpZ2h0IDogbmV3SGVpZ2h0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAvLyBVcGRhdGUgSGVpZ2h0XG4gICAgICAgICAgICBpZiAobmV3SGVpZ2h0KSBzLndyYXBwZXIuY3NzKCdoZWlnaHQnLCBuZXdIZWlnaHQgKyAncHgnKTtcbiAgICAgICAgfTtcbiAgICAgICAgcy51cGRhdGVDb250YWluZXJTaXplID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHdpZHRoLCBoZWlnaHQ7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHMucGFyYW1zLndpZHRoICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIHdpZHRoID0gcy5wYXJhbXMud2lkdGg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB3aWR0aCA9IHMuY29udGFpbmVyWzBdLmNsaWVudFdpZHRoO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGVvZiBzLnBhcmFtcy5oZWlnaHQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgaGVpZ2h0ID0gcy5wYXJhbXMuaGVpZ2h0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaGVpZ2h0ID0gcy5jb250YWluZXJbMF0uY2xpZW50SGVpZ2h0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHdpZHRoID09PSAwICYmIHMuaXNIb3Jpem9udGFsKCkgfHwgaGVpZ2h0ID09PSAwICYmICFzLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIC8vU3VidHJhY3QgcGFkZGluZ3NcbiAgICAgICAgICAgIHdpZHRoID0gd2lkdGggLSBwYXJzZUludChzLmNvbnRhaW5lci5jc3MoJ3BhZGRpbmctbGVmdCcpLCAxMCkgLSBwYXJzZUludChzLmNvbnRhaW5lci5jc3MoJ3BhZGRpbmctcmlnaHQnKSwgMTApO1xuICAgICAgICAgICAgaGVpZ2h0ID0gaGVpZ2h0IC0gcGFyc2VJbnQocy5jb250YWluZXIuY3NzKCdwYWRkaW5nLXRvcCcpLCAxMCkgLSBwYXJzZUludChzLmNvbnRhaW5lci5jc3MoJ3BhZGRpbmctYm90dG9tJyksIDEwKTtcbiAgICAgICAgXG4gICAgICAgICAgICAvLyBTdG9yZSB2YWx1ZXNcbiAgICAgICAgICAgIHMud2lkdGggPSB3aWR0aDtcbiAgICAgICAgICAgIHMuaGVpZ2h0ID0gaGVpZ2h0O1xuICAgICAgICAgICAgcy5zaXplID0gcy5pc0hvcml6b250YWwoKSA/IHMud2lkdGggOiBzLmhlaWdodDtcbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgICAgIHMudXBkYXRlU2xpZGVzU2l6ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHMuc2xpZGVzID0gcy53cmFwcGVyLmNoaWxkcmVuKCcuJyArIHMucGFyYW1zLnNsaWRlQ2xhc3MpO1xuICAgICAgICAgICAgcy5zbmFwR3JpZCA9IFtdO1xuICAgICAgICAgICAgcy5zbGlkZXNHcmlkID0gW107XG4gICAgICAgICAgICBzLnNsaWRlc1NpemVzR3JpZCA9IFtdO1xuICAgICAgICBcbiAgICAgICAgICAgIHZhciBzcGFjZUJldHdlZW4gPSBzLnBhcmFtcy5zcGFjZUJldHdlZW4sXG4gICAgICAgICAgICAgICAgc2xpZGVQb3NpdGlvbiA9IC1zLnBhcmFtcy5zbGlkZXNPZmZzZXRCZWZvcmUsXG4gICAgICAgICAgICAgICAgaSxcbiAgICAgICAgICAgICAgICBwcmV2U2xpZGVTaXplID0gMCxcbiAgICAgICAgICAgICAgICBpbmRleCA9IDA7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHMuc2l6ZSA9PT0gJ3VuZGVmaW5lZCcpIHJldHVybjtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygc3BhY2VCZXR3ZWVuID09PSAnc3RyaW5nJyAmJiBzcGFjZUJldHdlZW4uaW5kZXhPZignJScpID49IDApIHtcbiAgICAgICAgICAgICAgICBzcGFjZUJldHdlZW4gPSBwYXJzZUZsb2F0KHNwYWNlQmV0d2Vlbi5yZXBsYWNlKCclJywgJycpKSAvIDEwMCAqIHMuc2l6ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBzLnZpcnR1YWxTaXplID0gLXNwYWNlQmV0d2VlbjtcbiAgICAgICAgICAgIC8vIHJlc2V0IG1hcmdpbnNcbiAgICAgICAgICAgIGlmIChzLnJ0bCkgcy5zbGlkZXMuY3NzKHttYXJnaW5MZWZ0OiAnJywgbWFyZ2luVG9wOiAnJ30pO1xuICAgICAgICAgICAgZWxzZSBzLnNsaWRlcy5jc3Moe21hcmdpblJpZ2h0OiAnJywgbWFyZ2luQm90dG9tOiAnJ30pO1xuICAgICAgICBcbiAgICAgICAgICAgIHZhciBzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzO1xuICAgICAgICAgICAgaWYgKHMucGFyYW1zLnNsaWRlc1BlckNvbHVtbiA+IDEpIHtcbiAgICAgICAgICAgICAgICBpZiAoTWF0aC5mbG9vcihzLnNsaWRlcy5sZW5ndGggLyBzLnBhcmFtcy5zbGlkZXNQZXJDb2x1bW4pID09PSBzLnNsaWRlcy5sZW5ndGggLyBzLnBhcmFtcy5zbGlkZXNQZXJDb2x1bW4pIHtcbiAgICAgICAgICAgICAgICAgICAgc2xpZGVzTnVtYmVyRXZlblRvUm93cyA9IHMuc2xpZGVzLmxlbmd0aDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHNsaWRlc051bWJlckV2ZW5Ub1Jvd3MgPSBNYXRoLmNlaWwocy5zbGlkZXMubGVuZ3RoIC8gcy5wYXJhbXMuc2xpZGVzUGVyQ29sdW1uKSAqIHMucGFyYW1zLnNsaWRlc1BlckNvbHVtbjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLnNsaWRlc1BlclZpZXcgIT09ICdhdXRvJyAmJiBzLnBhcmFtcy5zbGlkZXNQZXJDb2x1bW5GaWxsID09PSAncm93Jykge1xuICAgICAgICAgICAgICAgICAgICBzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzID0gTWF0aC5tYXgoc2xpZGVzTnVtYmVyRXZlblRvUm93cywgcy5wYXJhbXMuc2xpZGVzUGVyVmlldyAqIHMucGFyYW1zLnNsaWRlc1BlckNvbHVtbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIC8vIENhbGMgc2xpZGVzXG4gICAgICAgICAgICB2YXIgc2xpZGVTaXplO1xuICAgICAgICAgICAgdmFyIHNsaWRlc1BlckNvbHVtbiA9IHMucGFyYW1zLnNsaWRlc1BlckNvbHVtbjtcbiAgICAgICAgICAgIHZhciBzbGlkZXNQZXJSb3cgPSBzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzIC8gc2xpZGVzUGVyQ29sdW1uO1xuICAgICAgICAgICAgdmFyIG51bUZ1bGxDb2x1bW5zID0gc2xpZGVzUGVyUm93IC0gKHMucGFyYW1zLnNsaWRlc1BlckNvbHVtbiAqIHNsaWRlc1BlclJvdyAtIHMuc2xpZGVzLmxlbmd0aCk7XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcy5zbGlkZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBzbGlkZVNpemUgPSAwO1xuICAgICAgICAgICAgICAgIHZhciBzbGlkZSA9IHMuc2xpZGVzLmVxKGkpO1xuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5zbGlkZXNQZXJDb2x1bW4gPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFNldCBzbGlkZXMgb3JkZXJcbiAgICAgICAgICAgICAgICAgICAgdmFyIG5ld1NsaWRlT3JkZXJJbmRleDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNvbHVtbiwgcm93O1xuICAgICAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuc2xpZGVzUGVyQ29sdW1uRmlsbCA9PT0gJ2NvbHVtbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbHVtbiA9IE1hdGguZmxvb3IoaSAvIHNsaWRlc1BlckNvbHVtbik7XG4gICAgICAgICAgICAgICAgICAgICAgICByb3cgPSBpIC0gY29sdW1uICogc2xpZGVzUGVyQ29sdW1uO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbHVtbiA+IG51bUZ1bGxDb2x1bW5zIHx8IChjb2x1bW4gPT09IG51bUZ1bGxDb2x1bW5zICYmIHJvdyA9PT0gc2xpZGVzUGVyQ29sdW1uLTEpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCsrcm93ID49IHNsaWRlc1BlckNvbHVtbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3cgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW4rKztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdTbGlkZU9yZGVySW5kZXggPSBjb2x1bW4gKyByb3cgKiBzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzIC8gc2xpZGVzUGVyQ29sdW1uO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJy13ZWJraXQtYm94LW9yZGluYWwtZ3JvdXAnOiBuZXdTbGlkZU9yZGVySW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICctbW96LWJveC1vcmRpbmFsLWdyb3VwJzogbmV3U2xpZGVPcmRlckluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnLW1zLWZsZXgtb3JkZXInOiBuZXdTbGlkZU9yZGVySW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICctd2Via2l0LW9yZGVyJzogbmV3U2xpZGVPcmRlckluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnb3JkZXInOiBuZXdTbGlkZU9yZGVySW5kZXhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvdyA9IE1hdGguZmxvb3IoaSAvIHNsaWRlc1BlclJvdyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW4gPSBpIC0gcm93ICogc2xpZGVzUGVyUm93O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHNsaWRlXG4gICAgICAgICAgICAgICAgICAgICAgICAuY3NzKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdtYXJnaW4tJyArIChzLmlzSG9yaXpvbnRhbCgpID8gJ3RvcCcgOiAnbGVmdCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChyb3cgIT09IDAgJiYgcy5wYXJhbXMuc3BhY2VCZXR3ZWVuKSAmJiAocy5wYXJhbXMuc3BhY2VCZXR3ZWVuICsgJ3B4JylcbiAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCdkYXRhLXN3aXBlci1jb2x1bW4nLCBjb2x1bW4pXG4gICAgICAgICAgICAgICAgICAgICAgICAuYXR0cignZGF0YS1zd2lwZXItcm93Jywgcm93KTtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzbGlkZS5jc3MoJ2Rpc3BsYXknKSA9PT0gJ25vbmUnKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuc2xpZGVzUGVyVmlldyA9PT0gJ2F1dG8nKSB7XG4gICAgICAgICAgICAgICAgICAgIHNsaWRlU2l6ZSA9IHMuaXNIb3Jpem9udGFsKCkgPyBzbGlkZS5vdXRlcldpZHRoKHRydWUpIDogc2xpZGUub3V0ZXJIZWlnaHQodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5yb3VuZExlbmd0aHMpIHNsaWRlU2l6ZSA9IHJvdW5kKHNsaWRlU2l6ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzbGlkZVNpemUgPSAocy5zaXplIC0gKHMucGFyYW1zLnNsaWRlc1BlclZpZXcgLSAxKSAqIHNwYWNlQmV0d2VlbikgLyBzLnBhcmFtcy5zbGlkZXNQZXJWaWV3O1xuICAgICAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMucm91bmRMZW5ndGhzKSBzbGlkZVNpemUgPSByb3VuZChzbGlkZVNpemUpO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMuaXNIb3Jpem9udGFsKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuc2xpZGVzW2ldLnN0eWxlLndpZHRoID0gc2xpZGVTaXplICsgJ3B4JztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuc2xpZGVzW2ldLnN0eWxlLmhlaWdodCA9IHNsaWRlU2l6ZSArICdweCc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcy5zbGlkZXNbaV0uc3dpcGVyU2xpZGVTaXplID0gc2xpZGVTaXplO1xuICAgICAgICAgICAgICAgIHMuc2xpZGVzU2l6ZXNHcmlkLnB1c2goc2xpZGVTaXplKTtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5jZW50ZXJlZFNsaWRlcykge1xuICAgICAgICAgICAgICAgICAgICBzbGlkZVBvc2l0aW9uID0gc2xpZGVQb3NpdGlvbiArIHNsaWRlU2l6ZSAvIDIgKyBwcmV2U2xpZGVTaXplIC8gMiArIHNwYWNlQmV0d2VlbjtcbiAgICAgICAgICAgICAgICAgICAgaWYocHJldlNsaWRlU2l6ZSA9PT0gMCAmJiBpICE9PSAwKSBzbGlkZVBvc2l0aW9uID0gc2xpZGVQb3NpdGlvbiAtIHMuc2l6ZSAvIDIgLSBzcGFjZUJldHdlZW47XG4gICAgICAgICAgICAgICAgICAgIGlmIChpID09PSAwKSBzbGlkZVBvc2l0aW9uID0gc2xpZGVQb3NpdGlvbiAtIHMuc2l6ZSAvIDIgLSBzcGFjZUJldHdlZW47XG4gICAgICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyhzbGlkZVBvc2l0aW9uKSA8IDEgLyAxMDAwKSBzbGlkZVBvc2l0aW9uID0gMDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKChpbmRleCkgJSBzLnBhcmFtcy5zbGlkZXNQZXJHcm91cCA9PT0gMCkgcy5zbmFwR3JpZC5wdXNoKHNsaWRlUG9zaXRpb24pO1xuICAgICAgICAgICAgICAgICAgICBzLnNsaWRlc0dyaWQucHVzaChzbGlkZVBvc2l0aW9uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICgoaW5kZXgpICUgcy5wYXJhbXMuc2xpZGVzUGVyR3JvdXAgPT09IDApIHMuc25hcEdyaWQucHVzaChzbGlkZVBvc2l0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgcy5zbGlkZXNHcmlkLnB1c2goc2xpZGVQb3NpdGlvbik7XG4gICAgICAgICAgICAgICAgICAgIHNsaWRlUG9zaXRpb24gPSBzbGlkZVBvc2l0aW9uICsgc2xpZGVTaXplICsgc3BhY2VCZXR3ZWVuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAgICAgcy52aXJ0dWFsU2l6ZSArPSBzbGlkZVNpemUgKyBzcGFjZUJldHdlZW47XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIHByZXZTbGlkZVNpemUgPSBzbGlkZVNpemU7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIGluZGV4ICsrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcy52aXJ0dWFsU2l6ZSA9IE1hdGgubWF4KHMudmlydHVhbFNpemUsIHMuc2l6ZSkgKyBzLnBhcmFtcy5zbGlkZXNPZmZzZXRBZnRlcjtcbiAgICAgICAgICAgIHZhciBuZXdTbGlkZXNHcmlkO1xuICAgICAgICBcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICBzLnJ0bCAmJiBzLndyb25nUlRMICYmIChzLnBhcmFtcy5lZmZlY3QgPT09ICdzbGlkZScgfHwgcy5wYXJhbXMuZWZmZWN0ID09PSAnY292ZXJmbG93JykpIHtcbiAgICAgICAgICAgICAgICBzLndyYXBwZXIuY3NzKHt3aWR0aDogcy52aXJ0dWFsU2l6ZSArIHMucGFyYW1zLnNwYWNlQmV0d2VlbiArICdweCd9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghcy5zdXBwb3J0LmZsZXhib3ggfHwgcy5wYXJhbXMuc2V0V3JhcHBlclNpemUpIHtcbiAgICAgICAgICAgICAgICBpZiAocy5pc0hvcml6b250YWwoKSkgcy53cmFwcGVyLmNzcyh7d2lkdGg6IHMudmlydHVhbFNpemUgKyBzLnBhcmFtcy5zcGFjZUJldHdlZW4gKyAncHgnfSk7XG4gICAgICAgICAgICAgICAgZWxzZSBzLndyYXBwZXIuY3NzKHtoZWlnaHQ6IHMudmlydHVhbFNpemUgKyBzLnBhcmFtcy5zcGFjZUJldHdlZW4gKyAncHgnfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLnNsaWRlc1BlckNvbHVtbiA+IDEpIHtcbiAgICAgICAgICAgICAgICBzLnZpcnR1YWxTaXplID0gKHNsaWRlU2l6ZSArIHMucGFyYW1zLnNwYWNlQmV0d2VlbikgKiBzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzO1xuICAgICAgICAgICAgICAgIHMudmlydHVhbFNpemUgPSBNYXRoLmNlaWwocy52aXJ0dWFsU2l6ZSAvIHMucGFyYW1zLnNsaWRlc1BlckNvbHVtbikgLSBzLnBhcmFtcy5zcGFjZUJldHdlZW47XG4gICAgICAgICAgICAgICAgaWYgKHMuaXNIb3Jpem9udGFsKCkpIHMud3JhcHBlci5jc3Moe3dpZHRoOiBzLnZpcnR1YWxTaXplICsgcy5wYXJhbXMuc3BhY2VCZXR3ZWVuICsgJ3B4J30pO1xuICAgICAgICAgICAgICAgIGVsc2Ugcy53cmFwcGVyLmNzcyh7aGVpZ2h0OiBzLnZpcnR1YWxTaXplICsgcy5wYXJhbXMuc3BhY2VCZXR3ZWVuICsgJ3B4J30pO1xuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5jZW50ZXJlZFNsaWRlcykge1xuICAgICAgICAgICAgICAgICAgICBuZXdTbGlkZXNHcmlkID0gW107XG4gICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBzLnNuYXBHcmlkLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocy5zbmFwR3JpZFtpXSA8IHMudmlydHVhbFNpemUgKyBzLnNuYXBHcmlkWzBdKSBuZXdTbGlkZXNHcmlkLnB1c2gocy5zbmFwR3JpZFtpXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcy5zbmFwR3JpZCA9IG5ld1NsaWRlc0dyaWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIC8vIFJlbW92ZSBsYXN0IGdyaWQgZWxlbWVudHMgZGVwZW5kaW5nIG9uIHdpZHRoXG4gICAgICAgICAgICBpZiAoIXMucGFyYW1zLmNlbnRlcmVkU2xpZGVzKSB7XG4gICAgICAgICAgICAgICAgbmV3U2xpZGVzR3JpZCA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBzLnNuYXBHcmlkLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLnNuYXBHcmlkW2ldIDw9IHMudmlydHVhbFNpemUgLSBzLnNpemUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1NsaWRlc0dyaWQucHVzaChzLnNuYXBHcmlkW2ldKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzLnNuYXBHcmlkID0gbmV3U2xpZGVzR3JpZDtcbiAgICAgICAgICAgICAgICBpZiAoTWF0aC5mbG9vcihzLnZpcnR1YWxTaXplIC0gcy5zaXplKSAtIE1hdGguZmxvb3Iocy5zbmFwR3JpZFtzLnNuYXBHcmlkLmxlbmd0aCAtIDFdKSA+IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgcy5zbmFwR3JpZC5wdXNoKHMudmlydHVhbFNpemUgLSBzLnNpemUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzLnNuYXBHcmlkLmxlbmd0aCA9PT0gMCkgcy5zbmFwR3JpZCA9IFswXTtcbiAgICAgICAgXG4gICAgICAgICAgICBpZiAocy5wYXJhbXMuc3BhY2VCZXR3ZWVuICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgaWYgKHMuaXNIb3Jpem9udGFsKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMucnRsKSBzLnNsaWRlcy5jc3Moe21hcmdpbkxlZnQ6IHNwYWNlQmV0d2VlbiArICdweCd9KTtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBzLnNsaWRlcy5jc3Moe21hcmdpblJpZ2h0OiBzcGFjZUJldHdlZW4gKyAncHgnfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Ugcy5zbGlkZXMuY3NzKHttYXJnaW5Cb3R0b206IHNwYWNlQmV0d2VlbiArICdweCd9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy53YXRjaFNsaWRlc1Byb2dyZXNzKSB7XG4gICAgICAgICAgICAgICAgcy51cGRhdGVTbGlkZXNPZmZzZXQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgcy51cGRhdGVTbGlkZXNPZmZzZXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHMuc2xpZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgcy5zbGlkZXNbaV0uc3dpcGVyU2xpZGVPZmZzZXQgPSBzLmlzSG9yaXpvbnRhbCgpID8gcy5zbGlkZXNbaV0ub2Zmc2V0TGVmdCA6IHMuc2xpZGVzW2ldLm9mZnNldFRvcDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgICAgIC8qPT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICAgICAgIER5bmFtaWMgU2xpZGVzIFBlciBWaWV3XG4gICAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbiAgICAgICAgcy5jdXJyZW50U2xpZGVzUGVyVmlldyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBzcHYgPSAxLCBpLCBqO1xuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmNlbnRlcmVkU2xpZGVzKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNpemUgPSBzLnNsaWRlc1tzLmFjdGl2ZUluZGV4XS5zd2lwZXJTbGlkZVNpemU7XG4gICAgICAgICAgICAgICAgdmFyIGJyZWFrTG9vcDtcbiAgICAgICAgICAgICAgICBmb3IgKGkgPSBzLmFjdGl2ZUluZGV4ICsgMTsgaSA8IHMuc2xpZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLnNsaWRlc1tpXSAmJiAhYnJlYWtMb29wKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzaXplICs9IHMuc2xpZGVzW2ldLnN3aXBlclNsaWRlU2l6ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwdiArKztcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzaXplID4gcy5zaXplKSBicmVha0xvb3AgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZvciAoaiA9IHMuYWN0aXZlSW5kZXggLSAxOyBqID49IDA7IGotLSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAocy5zbGlkZXNbal0gJiYgIWJyZWFrTG9vcCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZSArPSBzLnNsaWRlc1tqXS5zd2lwZXJTbGlkZVNpemU7XG4gICAgICAgICAgICAgICAgICAgICAgICBzcHYgKys7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2l6ZSA+IHMuc2l6ZSkgYnJlYWtMb29wID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGZvciAoaSA9IHMuYWN0aXZlSW5kZXggKyAxOyBpIDwgcy5zbGlkZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMuc2xpZGVzR3JpZFtpXSAtIHMuc2xpZGVzR3JpZFtzLmFjdGl2ZUluZGV4XSA8IHMuc2l6ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3B2Kys7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gc3B2O1xuICAgICAgICB9O1xuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBTbGlkZXIvc2xpZGVzIHByb2dyZXNzXG4gICAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbiAgICAgICAgcy51cGRhdGVTbGlkZXNQcm9ncmVzcyA9IGZ1bmN0aW9uICh0cmFuc2xhdGUpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdHJhbnNsYXRlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0ZSA9IHMudHJhbnNsYXRlIHx8IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocy5zbGlkZXMubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgICAgICAgICBpZiAodHlwZW9mIHMuc2xpZGVzWzBdLnN3aXBlclNsaWRlT2Zmc2V0ID09PSAndW5kZWZpbmVkJykgcy51cGRhdGVTbGlkZXNPZmZzZXQoKTtcbiAgICAgICAgXG4gICAgICAgICAgICB2YXIgb2Zmc2V0Q2VudGVyID0gLXRyYW5zbGF0ZTtcbiAgICAgICAgICAgIGlmIChzLnJ0bCkgb2Zmc2V0Q2VudGVyID0gdHJhbnNsYXRlO1xuICAgICAgICBcbiAgICAgICAgICAgIC8vIFZpc2libGUgU2xpZGVzXG4gICAgICAgICAgICBzLnNsaWRlcy5yZW1vdmVDbGFzcyhzLnBhcmFtcy5zbGlkZVZpc2libGVDbGFzcyk7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHMuc2xpZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNsaWRlID0gcy5zbGlkZXNbaV07XG4gICAgICAgICAgICAgICAgdmFyIHNsaWRlUHJvZ3Jlc3MgPSAob2Zmc2V0Q2VudGVyICsgKHMucGFyYW1zLmNlbnRlcmVkU2xpZGVzID8gcy5taW5UcmFuc2xhdGUoKSA6IDApIC0gc2xpZGUuc3dpcGVyU2xpZGVPZmZzZXQpIC8gKHNsaWRlLnN3aXBlclNsaWRlU2l6ZSArIHMucGFyYW1zLnNwYWNlQmV0d2Vlbik7XG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLndhdGNoU2xpZGVzVmlzaWJpbGl0eSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2xpZGVCZWZvcmUgPSAtKG9mZnNldENlbnRlciAtIHNsaWRlLnN3aXBlclNsaWRlT2Zmc2V0KTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNsaWRlQWZ0ZXIgPSBzbGlkZUJlZm9yZSArIHMuc2xpZGVzU2l6ZXNHcmlkW2ldO1xuICAgICAgICAgICAgICAgICAgICB2YXIgaXNWaXNpYmxlID1cbiAgICAgICAgICAgICAgICAgICAgICAgIChzbGlkZUJlZm9yZSA+PSAwICYmIHNsaWRlQmVmb3JlIDwgcy5zaXplKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgKHNsaWRlQWZ0ZXIgPiAwICYmIHNsaWRlQWZ0ZXIgPD0gcy5zaXplKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgKHNsaWRlQmVmb3JlIDw9IDAgJiYgc2xpZGVBZnRlciA+PSBzLnNpemUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXNWaXNpYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLnNsaWRlcy5lcShpKS5hZGRDbGFzcyhzLnBhcmFtcy5zbGlkZVZpc2libGVDbGFzcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2xpZGUucHJvZ3Jlc3MgPSBzLnJ0bCA/IC1zbGlkZVByb2dyZXNzIDogc2xpZGVQcm9ncmVzcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgcy51cGRhdGVQcm9ncmVzcyA9IGZ1bmN0aW9uICh0cmFuc2xhdGUpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdHJhbnNsYXRlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0ZSA9IHMudHJhbnNsYXRlIHx8IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgdHJhbnNsYXRlc0RpZmYgPSBzLm1heFRyYW5zbGF0ZSgpIC0gcy5taW5UcmFuc2xhdGUoKTtcbiAgICAgICAgICAgIHZhciB3YXNCZWdpbm5pbmcgPSBzLmlzQmVnaW5uaW5nO1xuICAgICAgICAgICAgdmFyIHdhc0VuZCA9IHMuaXNFbmQ7XG4gICAgICAgICAgICBpZiAodHJhbnNsYXRlc0RpZmYgPT09IDApIHtcbiAgICAgICAgICAgICAgICBzLnByb2dyZXNzID0gMDtcbiAgICAgICAgICAgICAgICBzLmlzQmVnaW5uaW5nID0gcy5pc0VuZCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzLnByb2dyZXNzID0gKHRyYW5zbGF0ZSAtIHMubWluVHJhbnNsYXRlKCkpIC8gKHRyYW5zbGF0ZXNEaWZmKTtcbiAgICAgICAgICAgICAgICBzLmlzQmVnaW5uaW5nID0gcy5wcm9ncmVzcyA8PSAwO1xuICAgICAgICAgICAgICAgIHMuaXNFbmQgPSBzLnByb2dyZXNzID49IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocy5pc0JlZ2lubmluZyAmJiAhd2FzQmVnaW5uaW5nKSBzLmVtaXQoJ29uUmVhY2hCZWdpbm5pbmcnLCBzKTtcbiAgICAgICAgICAgIGlmIChzLmlzRW5kICYmICF3YXNFbmQpIHMuZW1pdCgnb25SZWFjaEVuZCcsIHMpO1xuICAgICAgICBcbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy53YXRjaFNsaWRlc1Byb2dyZXNzKSBzLnVwZGF0ZVNsaWRlc1Byb2dyZXNzKHRyYW5zbGF0ZSk7XG4gICAgICAgICAgICBzLmVtaXQoJ29uUHJvZ3Jlc3MnLCBzLCBzLnByb2dyZXNzKTtcbiAgICAgICAgfTtcbiAgICAgICAgcy51cGRhdGVBY3RpdmVJbmRleCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB0cmFuc2xhdGUgPSBzLnJ0bCA/IHMudHJhbnNsYXRlIDogLXMudHJhbnNsYXRlO1xuICAgICAgICAgICAgdmFyIG5ld0FjdGl2ZUluZGV4LCBpLCBzbmFwSW5kZXg7XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcy5zbGlkZXNHcmlkLmxlbmd0aDsgaSArKykge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygcy5zbGlkZXNHcmlkW2kgKyAxXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRyYW5zbGF0ZSA+PSBzLnNsaWRlc0dyaWRbaV0gJiYgdHJhbnNsYXRlIDwgcy5zbGlkZXNHcmlkW2kgKyAxXSAtIChzLnNsaWRlc0dyaWRbaSArIDFdIC0gcy5zbGlkZXNHcmlkW2ldKSAvIDIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0FjdGl2ZUluZGV4ID0gaTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICh0cmFuc2xhdGUgPj0gcy5zbGlkZXNHcmlkW2ldICYmIHRyYW5zbGF0ZSA8IHMuc2xpZGVzR3JpZFtpICsgMV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0FjdGl2ZUluZGV4ID0gaSArIDE7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0cmFuc2xhdGUgPj0gcy5zbGlkZXNHcmlkW2ldKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdBY3RpdmVJbmRleCA9IGk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBOb3JtYWxpemUgc2xpZGVJbmRleFxuICAgICAgICAgICAgaWYocy5wYXJhbXMubm9ybWFsaXplU2xpZGVJbmRleCl7XG4gICAgICAgICAgICAgICAgaWYgKG5ld0FjdGl2ZUluZGV4IDwgMCB8fCB0eXBlb2YgbmV3QWN0aXZlSW5kZXggPT09ICd1bmRlZmluZWQnKSBuZXdBY3RpdmVJbmRleCA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBmb3IgKGkgPSAwOyBpIDwgcy5zbGlkZXNHcmlkLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgLy8gaWYgKC0gdHJhbnNsYXRlID49IHMuc2xpZGVzR3JpZFtpXSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBuZXdBY3RpdmVJbmRleCA9IGk7XG4gICAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgc25hcEluZGV4ID0gTWF0aC5mbG9vcihuZXdBY3RpdmVJbmRleCAvIHMucGFyYW1zLnNsaWRlc1Blckdyb3VwKTtcbiAgICAgICAgICAgIGlmIChzbmFwSW5kZXggPj0gcy5zbmFwR3JpZC5sZW5ndGgpIHNuYXBJbmRleCA9IHMuc25hcEdyaWQubGVuZ3RoIC0gMTtcbiAgICAgICAgXG4gICAgICAgICAgICBpZiAobmV3QWN0aXZlSW5kZXggPT09IHMuYWN0aXZlSW5kZXgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzLnNuYXBJbmRleCA9IHNuYXBJbmRleDtcbiAgICAgICAgICAgIHMucHJldmlvdXNJbmRleCA9IHMuYWN0aXZlSW5kZXg7XG4gICAgICAgICAgICBzLmFjdGl2ZUluZGV4ID0gbmV3QWN0aXZlSW5kZXg7XG4gICAgICAgICAgICBzLnVwZGF0ZUNsYXNzZXMoKTtcbiAgICAgICAgICAgIHMudXBkYXRlUmVhbEluZGV4KCk7XG4gICAgICAgIH07XG4gICAgICAgIHMudXBkYXRlUmVhbEluZGV4ID0gZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHMucmVhbEluZGV4ID0gcGFyc2VJbnQocy5zbGlkZXMuZXEocy5hY3RpdmVJbmRleCkuYXR0cignZGF0YS1zd2lwZXItc2xpZGUtaW5kZXgnKSB8fCBzLmFjdGl2ZUluZGV4LCAxMCk7XG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBDbGFzc2VzXG4gICAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbiAgICAgICAgcy51cGRhdGVDbGFzc2VzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcy5zbGlkZXMucmVtb3ZlQ2xhc3Mocy5wYXJhbXMuc2xpZGVBY3RpdmVDbGFzcyArICcgJyArIHMucGFyYW1zLnNsaWRlTmV4dENsYXNzICsgJyAnICsgcy5wYXJhbXMuc2xpZGVQcmV2Q2xhc3MgKyAnICcgKyBzLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUFjdGl2ZUNsYXNzICsgJyAnICsgcy5wYXJhbXMuc2xpZGVEdXBsaWNhdGVOZXh0Q2xhc3MgKyAnICcgKyBzLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZVByZXZDbGFzcyk7XG4gICAgICAgICAgICB2YXIgYWN0aXZlU2xpZGUgPSBzLnNsaWRlcy5lcShzLmFjdGl2ZUluZGV4KTtcbiAgICAgICAgICAgIC8vIEFjdGl2ZSBjbGFzc2VzXG4gICAgICAgICAgICBhY3RpdmVTbGlkZS5hZGRDbGFzcyhzLnBhcmFtcy5zbGlkZUFjdGl2ZUNsYXNzKTtcbiAgICAgICAgICAgIGlmIChwYXJhbXMubG9vcCkge1xuICAgICAgICAgICAgICAgIC8vIER1cGxpY2F0ZSB0byBhbGwgbG9vcGVkIHNsaWRlc1xuICAgICAgICAgICAgICAgIGlmIChhY3RpdmVTbGlkZS5oYXNDbGFzcyhzLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKSkge1xuICAgICAgICAgICAgICAgICAgICBzLndyYXBwZXIuY2hpbGRyZW4oJy4nICsgcy5wYXJhbXMuc2xpZGVDbGFzcyArICc6bm90KC4nICsgcy5wYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcyArICcpW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVwiJyArIHMucmVhbEluZGV4ICsgJ1wiXScpLmFkZENsYXNzKHMucGFyYW1zLnNsaWRlRHVwbGljYXRlQWN0aXZlQ2xhc3MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcy53cmFwcGVyLmNoaWxkcmVuKCcuJyArIHMucGFyYW1zLnNsaWRlQ2xhc3MgKyAnLicgKyBzLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzICsgJ1tkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cIicgKyBzLnJlYWxJbmRleCArICdcIl0nKS5hZGRDbGFzcyhzLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUFjdGl2ZUNsYXNzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBOZXh0IFNsaWRlXG4gICAgICAgICAgICB2YXIgbmV4dFNsaWRlID0gYWN0aXZlU2xpZGUubmV4dCgnLicgKyBzLnBhcmFtcy5zbGlkZUNsYXNzKS5hZGRDbGFzcyhzLnBhcmFtcy5zbGlkZU5leHRDbGFzcyk7XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMubG9vcCAmJiBuZXh0U2xpZGUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgbmV4dFNsaWRlID0gcy5zbGlkZXMuZXEoMCk7XG4gICAgICAgICAgICAgICAgbmV4dFNsaWRlLmFkZENsYXNzKHMucGFyYW1zLnNsaWRlTmV4dENsYXNzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFByZXYgU2xpZGVcbiAgICAgICAgICAgIHZhciBwcmV2U2xpZGUgPSBhY3RpdmVTbGlkZS5wcmV2KCcuJyArIHMucGFyYW1zLnNsaWRlQ2xhc3MpLmFkZENsYXNzKHMucGFyYW1zLnNsaWRlUHJldkNsYXNzKTtcbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5sb29wICYmIHByZXZTbGlkZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICBwcmV2U2xpZGUgPSBzLnNsaWRlcy5lcSgtMSk7XG4gICAgICAgICAgICAgICAgcHJldlNsaWRlLmFkZENsYXNzKHMucGFyYW1zLnNsaWRlUHJldkNsYXNzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChwYXJhbXMubG9vcCkge1xuICAgICAgICAgICAgICAgIC8vIER1cGxpY2F0ZSB0byBhbGwgbG9vcGVkIHNsaWRlc1xuICAgICAgICAgICAgICAgIGlmIChuZXh0U2xpZGUuaGFzQ2xhc3Mocy5wYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcykpIHtcbiAgICAgICAgICAgICAgICAgICAgcy53cmFwcGVyLmNoaWxkcmVuKCcuJyArIHMucGFyYW1zLnNsaWRlQ2xhc3MgKyAnOm5vdCguJyArIHMucGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MgKyAnKVtkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cIicgKyBuZXh0U2xpZGUuYXR0cignZGF0YS1zd2lwZXItc2xpZGUtaW5kZXgnKSArICdcIl0nKS5hZGRDbGFzcyhzLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZU5leHRDbGFzcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzLndyYXBwZXIuY2hpbGRyZW4oJy4nICsgcy5wYXJhbXMuc2xpZGVDbGFzcyArICcuJyArIHMucGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MgKyAnW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVwiJyArIG5leHRTbGlkZS5hdHRyKCdkYXRhLXN3aXBlci1zbGlkZS1pbmRleCcpICsgJ1wiXScpLmFkZENsYXNzKHMucGFyYW1zLnNsaWRlRHVwbGljYXRlTmV4dENsYXNzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHByZXZTbGlkZS5oYXNDbGFzcyhzLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKSkge1xuICAgICAgICAgICAgICAgICAgICBzLndyYXBwZXIuY2hpbGRyZW4oJy4nICsgcy5wYXJhbXMuc2xpZGVDbGFzcyArICc6bm90KC4nICsgcy5wYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcyArICcpW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVwiJyArIHByZXZTbGlkZS5hdHRyKCdkYXRhLXN3aXBlci1zbGlkZS1pbmRleCcpICsgJ1wiXScpLmFkZENsYXNzKHMucGFyYW1zLnNsaWRlRHVwbGljYXRlUHJldkNsYXNzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHMud3JhcHBlci5jaGlsZHJlbignLicgKyBzLnBhcmFtcy5zbGlkZUNsYXNzICsgJy4nICsgcy5wYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcyArICdbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XCInICsgcHJldlNsaWRlLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JykgKyAnXCJdJykuYWRkQ2xhc3Mocy5wYXJhbXMuc2xpZGVEdXBsaWNhdGVQcmV2Q2xhc3MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAvLyBQYWdpbmF0aW9uXG4gICAgICAgICAgICBpZiAocy5wYWdpbmF0aW9uQ29udGFpbmVyICYmIHMucGFnaW5hdGlvbkNvbnRhaW5lci5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgLy8gQ3VycmVudC9Ub3RhbFxuICAgICAgICAgICAgICAgIHZhciBjdXJyZW50LFxuICAgICAgICAgICAgICAgICAgICB0b3RhbCA9IHMucGFyYW1zLmxvb3AgPyBNYXRoLmNlaWwoKHMuc2xpZGVzLmxlbmd0aCAtIHMubG9vcGVkU2xpZGVzICogMikgLyBzLnBhcmFtcy5zbGlkZXNQZXJHcm91cCkgOiBzLnNuYXBHcmlkLmxlbmd0aDtcbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMubG9vcCkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gTWF0aC5jZWlsKChzLmFjdGl2ZUluZGV4IC0gcy5sb29wZWRTbGlkZXMpL3MucGFyYW1zLnNsaWRlc1Blckdyb3VwKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnQgPiBzLnNsaWRlcy5sZW5ndGggLSAxIC0gcy5sb29wZWRTbGlkZXMgKiAyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gY3VycmVudCAtIChzLnNsaWRlcy5sZW5ndGggLSBzLmxvb3BlZFNsaWRlcyAqIDIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50ID4gdG90YWwgLSAxKSBjdXJyZW50ID0gY3VycmVudCAtIHRvdGFsO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudCA8IDAgJiYgcy5wYXJhbXMucGFnaW5hdGlvblR5cGUgIT09ICdidWxsZXRzJykgY3VycmVudCA9IHRvdGFsICsgY3VycmVudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygcy5zbmFwSW5kZXggIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gcy5zbmFwSW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gcy5hY3RpdmVJbmRleCB8fCAwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIFR5cGVzXG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLnBhZ2luYXRpb25UeXBlID09PSAnYnVsbGV0cycgJiYgcy5idWxsZXRzICYmIHMuYnVsbGV0cy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHMuYnVsbGV0cy5yZW1vdmVDbGFzcyhzLnBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLnBhZ2luYXRpb25Db250YWluZXIubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5idWxsZXRzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmluZGV4KCkgPT09IGN1cnJlbnQpICQodGhpcykuYWRkQ2xhc3Mocy5wYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLmJ1bGxldHMuZXEoY3VycmVudCkuYWRkQ2xhc3Mocy5wYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5wYWdpbmF0aW9uVHlwZSA9PT0gJ2ZyYWN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICBzLnBhZ2luYXRpb25Db250YWluZXIuZmluZCgnLicgKyBzLnBhcmFtcy5wYWdpbmF0aW9uQ3VycmVudENsYXNzKS50ZXh0KGN1cnJlbnQgKyAxKTtcbiAgICAgICAgICAgICAgICAgICAgcy5wYWdpbmF0aW9uQ29udGFpbmVyLmZpbmQoJy4nICsgcy5wYXJhbXMucGFnaW5hdGlvblRvdGFsQ2xhc3MpLnRleHQodG90YWwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMucGFnaW5hdGlvblR5cGUgPT09ICdwcm9ncmVzcycpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNjYWxlID0gKGN1cnJlbnQgKyAxKSAvIHRvdGFsLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2NhbGVYID0gc2NhbGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBzY2FsZVkgPSAxO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXMuaXNIb3Jpem9udGFsKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjYWxlWSA9IHNjYWxlO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2NhbGVYID0gMTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzLnBhZ2luYXRpb25Db250YWluZXIuZmluZCgnLicgKyBzLnBhcmFtcy5wYWdpbmF0aW9uUHJvZ3Jlc3NiYXJDbGFzcykudHJhbnNmb3JtKCd0cmFuc2xhdGUzZCgwLDAsMCkgc2NhbGVYKCcgKyBzY2FsZVggKyAnKSBzY2FsZVkoJyArIHNjYWxlWSArICcpJykudHJhbnNpdGlvbihzLnBhcmFtcy5zcGVlZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5wYWdpbmF0aW9uVHlwZSA9PT0gJ2N1c3RvbScgJiYgcy5wYXJhbXMucGFnaW5hdGlvbkN1c3RvbVJlbmRlcikge1xuICAgICAgICAgICAgICAgICAgICBzLnBhZ2luYXRpb25Db250YWluZXIuaHRtbChzLnBhcmFtcy5wYWdpbmF0aW9uQ3VzdG9tUmVuZGVyKHMsIGN1cnJlbnQgKyAxLCB0b3RhbCkpO1xuICAgICAgICAgICAgICAgICAgICBzLmVtaXQoJ29uUGFnaW5hdGlvblJlbmRlcmVkJywgcywgcy5wYWdpbmF0aW9uQ29udGFpbmVyWzBdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLy8gTmV4dC9hY3RpdmUgYnV0dG9uc1xuICAgICAgICAgICAgaWYgKCFzLnBhcmFtcy5sb29wKSB7XG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLnByZXZCdXR0b24gJiYgcy5wcmV2QnV0dG9uICYmIHMucHJldkJ1dHRvbi5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLmlzQmVnaW5uaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLnByZXZCdXR0b24uYWRkQ2xhc3Mocy5wYXJhbXMuYnV0dG9uRGlzYWJsZWRDbGFzcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuYTExeSAmJiBzLmExMXkpIHMuYTExeS5kaXNhYmxlKHMucHJldkJ1dHRvbik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLnByZXZCdXR0b24ucmVtb3ZlQ2xhc3Mocy5wYXJhbXMuYnV0dG9uRGlzYWJsZWRDbGFzcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuYTExeSAmJiBzLmExMXkpIHMuYTExeS5lbmFibGUocy5wcmV2QnV0dG9uKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMubmV4dEJ1dHRvbiAmJiBzLm5leHRCdXR0b24gJiYgcy5uZXh0QnV0dG9uLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMuaXNFbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMubmV4dEJ1dHRvbi5hZGRDbGFzcyhzLnBhcmFtcy5idXR0b25EaXNhYmxlZENsYXNzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5hMTF5ICYmIHMuYTExeSkgcy5hMTF5LmRpc2FibGUocy5uZXh0QnV0dG9uKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMubmV4dEJ1dHRvbi5yZW1vdmVDbGFzcyhzLnBhcmFtcy5idXR0b25EaXNhYmxlZENsYXNzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5hMTF5ICYmIHMuYTExeSkgcy5hMTF5LmVuYWJsZShzLm5leHRCdXR0b24pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBcbiAgICAgICAgLyo9PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgICAgICAgUGFnaW5hdGlvblxuICAgICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG4gICAgICAgIHMudXBkYXRlUGFnaW5hdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICghcy5wYXJhbXMucGFnaW5hdGlvbikgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKHMucGFnaW5hdGlvbkNvbnRhaW5lciAmJiBzLnBhZ2luYXRpb25Db250YWluZXIubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIHZhciBwYWdpbmF0aW9uSFRNTCA9ICcnO1xuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5wYWdpbmF0aW9uVHlwZSA9PT0gJ2J1bGxldHMnKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBudW1iZXJPZkJ1bGxldHMgPSBzLnBhcmFtcy5sb29wID8gTWF0aC5jZWlsKChzLnNsaWRlcy5sZW5ndGggLSBzLmxvb3BlZFNsaWRlcyAqIDIpIC8gcy5wYXJhbXMuc2xpZGVzUGVyR3JvdXApIDogcy5zbmFwR3JpZC5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbnVtYmVyT2ZCdWxsZXRzOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5wYWdpbmF0aW9uQnVsbGV0UmVuZGVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFnaW5hdGlvbkhUTUwgKz0gcy5wYXJhbXMucGFnaW5hdGlvbkJ1bGxldFJlbmRlcihzLCBpLCBzLnBhcmFtcy5idWxsZXRDbGFzcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWdpbmF0aW9uSFRNTCArPSAnPCcgKyBzLnBhcmFtcy5wYWdpbmF0aW9uRWxlbWVudCsnIGNsYXNzPVwiJyArIHMucGFyYW1zLmJ1bGxldENsYXNzICsgJ1wiPjwvJyArIHMucGFyYW1zLnBhZ2luYXRpb25FbGVtZW50ICsgJz4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHMucGFnaW5hdGlvbkNvbnRhaW5lci5odG1sKHBhZ2luYXRpb25IVE1MKTtcbiAgICAgICAgICAgICAgICAgICAgcy5idWxsZXRzID0gcy5wYWdpbmF0aW9uQ29udGFpbmVyLmZpbmQoJy4nICsgcy5wYXJhbXMuYnVsbGV0Q2xhc3MpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMucGFnaW5hdGlvbkNsaWNrYWJsZSAmJiBzLnBhcmFtcy5hMTF5ICYmIHMuYTExeSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5hMTF5LmluaXRQYWdpbmF0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLnBhZ2luYXRpb25UeXBlID09PSAnZnJhY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5wYWdpbmF0aW9uRnJhY3Rpb25SZW5kZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2luYXRpb25IVE1MID0gcy5wYXJhbXMucGFnaW5hdGlvbkZyYWN0aW9uUmVuZGVyKHMsIHMucGFyYW1zLnBhZ2luYXRpb25DdXJyZW50Q2xhc3MsIHMucGFyYW1zLnBhZ2luYXRpb25Ub3RhbENsYXNzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2luYXRpb25IVE1MID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPHNwYW4gY2xhc3M9XCInICsgcy5wYXJhbXMucGFnaW5hdGlvbkN1cnJlbnRDbGFzcyArICdcIj48L3NwYW4+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAvICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcz1cIicgKyBzLnBhcmFtcy5wYWdpbmF0aW9uVG90YWxDbGFzcysnXCI+PC9zcGFuPic7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcy5wYWdpbmF0aW9uQ29udGFpbmVyLmh0bWwocGFnaW5hdGlvbkhUTUwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMucGFnaW5hdGlvblR5cGUgPT09ICdwcm9ncmVzcycpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLnBhZ2luYXRpb25Qcm9ncmVzc1JlbmRlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFnaW5hdGlvbkhUTUwgPSBzLnBhcmFtcy5wYWdpbmF0aW9uUHJvZ3Jlc3NSZW5kZXIocywgcy5wYXJhbXMucGFnaW5hdGlvblByb2dyZXNzYmFyQ2xhc3MpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFnaW5hdGlvbkhUTUwgPSAnPHNwYW4gY2xhc3M9XCInICsgcy5wYXJhbXMucGFnaW5hdGlvblByb2dyZXNzYmFyQ2xhc3MgKyAnXCI+PC9zcGFuPic7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcy5wYWdpbmF0aW9uQ29udGFpbmVyLmh0bWwocGFnaW5hdGlvbkhUTUwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMucGFnaW5hdGlvblR5cGUgIT09ICdjdXN0b20nKSB7XG4gICAgICAgICAgICAgICAgICAgIHMuZW1pdCgnb25QYWdpbmF0aW9uUmVuZGVyZWQnLCBzLCBzLnBhZ2luYXRpb25Db250YWluZXJbMF0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgLyo9PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgICAgICAgQ29tbW9uIHVwZGF0ZSBtZXRob2RcbiAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgICAgICBzLnVwZGF0ZSA9IGZ1bmN0aW9uICh1cGRhdGVUcmFuc2xhdGUpIHtcbiAgICAgICAgICAgIGlmICghcykgcmV0dXJuO1xuICAgICAgICAgICAgcy51cGRhdGVDb250YWluZXJTaXplKCk7XG4gICAgICAgICAgICBzLnVwZGF0ZVNsaWRlc1NpemUoKTtcbiAgICAgICAgICAgIHMudXBkYXRlUHJvZ3Jlc3MoKTtcbiAgICAgICAgICAgIHMudXBkYXRlUGFnaW5hdGlvbigpO1xuICAgICAgICAgICAgcy51cGRhdGVDbGFzc2VzKCk7XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMuc2Nyb2xsYmFyICYmIHMuc2Nyb2xsYmFyKSB7XG4gICAgICAgICAgICAgICAgcy5zY3JvbGxiYXIuc2V0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgbmV3VHJhbnNsYXRlO1xuICAgICAgICAgICAgZnVuY3Rpb24gZm9yY2VTZXRUcmFuc2xhdGUoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRyYW5zbGF0ZSA9IHMucnRsID8gLXMudHJhbnNsYXRlIDogcy50cmFuc2xhdGU7XG4gICAgICAgICAgICAgICAgbmV3VHJhbnNsYXRlID0gTWF0aC5taW4oTWF0aC5tYXgocy50cmFuc2xhdGUsIHMubWF4VHJhbnNsYXRlKCkpLCBzLm1pblRyYW5zbGF0ZSgpKTtcbiAgICAgICAgICAgICAgICBzLnNldFdyYXBwZXJUcmFuc2xhdGUobmV3VHJhbnNsYXRlKTtcbiAgICAgICAgICAgICAgICBzLnVwZGF0ZUFjdGl2ZUluZGV4KCk7XG4gICAgICAgICAgICAgICAgcy51cGRhdGVDbGFzc2VzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodXBkYXRlVHJhbnNsYXRlKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRyYW5zbGF0ZWQ7XG4gICAgICAgICAgICAgICAgaWYgKHMuY29udHJvbGxlciAmJiBzLmNvbnRyb2xsZXIuc3BsaW5lKSB7XG4gICAgICAgICAgICAgICAgICAgIHMuY29udHJvbGxlci5zcGxpbmUgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5mcmVlTW9kZSkge1xuICAgICAgICAgICAgICAgICAgICBmb3JjZVNldFRyYW5zbGF0ZSgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuYXV0b0hlaWdodCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcy51cGRhdGVBdXRvSGVpZ2h0KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICgocy5wYXJhbXMuc2xpZGVzUGVyVmlldyA9PT0gJ2F1dG8nIHx8IHMucGFyYW1zLnNsaWRlc1BlclZpZXcgPiAxKSAmJiBzLmlzRW5kICYmICFzLnBhcmFtcy5jZW50ZXJlZFNsaWRlcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRlZCA9IHMuc2xpZGVUbyhzLnNsaWRlcy5sZW5ndGggLSAxLCAwLCBmYWxzZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGVkID0gcy5zbGlkZVRvKHMuYWN0aXZlSW5kZXgsIDAsIGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoIXRyYW5zbGF0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcmNlU2V0VHJhbnNsYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChzLnBhcmFtcy5hdXRvSGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgcy51cGRhdGVBdXRvSGVpZ2h0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBSZXNpemUgSGFuZGxlclxuICAgICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG4gICAgICAgIHMub25SZXNpemUgPSBmdW5jdGlvbiAoZm9yY2VVcGRhdGVQYWdpbmF0aW9uKSB7XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMub25CZWZvcmVSZXNpemUpIHMucGFyYW1zLm9uQmVmb3JlUmVzaXplKHMpO1xuICAgICAgICAgICAgLy9CcmVha3BvaW50c1xuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmJyZWFrcG9pbnRzKSB7XG4gICAgICAgICAgICAgICAgcy5zZXRCcmVha3BvaW50KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLy8gRGlzYWJsZSBsb2NrcyBvbiByZXNpemVcbiAgICAgICAgICAgIHZhciBhbGxvd1N3aXBlVG9QcmV2ID0gcy5wYXJhbXMuYWxsb3dTd2lwZVRvUHJldjtcbiAgICAgICAgICAgIHZhciBhbGxvd1N3aXBlVG9OZXh0ID0gcy5wYXJhbXMuYWxsb3dTd2lwZVRvTmV4dDtcbiAgICAgICAgICAgIHMucGFyYW1zLmFsbG93U3dpcGVUb1ByZXYgPSBzLnBhcmFtcy5hbGxvd1N3aXBlVG9OZXh0ID0gdHJ1ZTtcbiAgICAgICAgXG4gICAgICAgICAgICBzLnVwZGF0ZUNvbnRhaW5lclNpemUoKTtcbiAgICAgICAgICAgIHMudXBkYXRlU2xpZGVzU2l6ZSgpO1xuICAgICAgICAgICAgaWYgKHMucGFyYW1zLnNsaWRlc1BlclZpZXcgPT09ICdhdXRvJyB8fCBzLnBhcmFtcy5mcmVlTW9kZSB8fCBmb3JjZVVwZGF0ZVBhZ2luYXRpb24pIHMudXBkYXRlUGFnaW5hdGlvbigpO1xuICAgICAgICAgICAgaWYgKHMucGFyYW1zLnNjcm9sbGJhciAmJiBzLnNjcm9sbGJhcikge1xuICAgICAgICAgICAgICAgIHMuc2Nyb2xsYmFyLnNldCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHMuY29udHJvbGxlciAmJiBzLmNvbnRyb2xsZXIuc3BsaW5lKSB7XG4gICAgICAgICAgICAgICAgcy5jb250cm9sbGVyLnNwbGluZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBzbGlkZUNoYW5nZWRCeVNsaWRlVG8gPSBmYWxzZTtcbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5mcmVlTW9kZSkge1xuICAgICAgICAgICAgICAgIHZhciBuZXdUcmFuc2xhdGUgPSBNYXRoLm1pbihNYXRoLm1heChzLnRyYW5zbGF0ZSwgcy5tYXhUcmFuc2xhdGUoKSksIHMubWluVHJhbnNsYXRlKCkpO1xuICAgICAgICAgICAgICAgIHMuc2V0V3JhcHBlclRyYW5zbGF0ZShuZXdUcmFuc2xhdGUpO1xuICAgICAgICAgICAgICAgIHMudXBkYXRlQWN0aXZlSW5kZXgoKTtcbiAgICAgICAgICAgICAgICBzLnVwZGF0ZUNsYXNzZXMoKTtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLmF1dG9IZWlnaHQpIHtcbiAgICAgICAgICAgICAgICAgICAgcy51cGRhdGVBdXRvSGVpZ2h0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcy51cGRhdGVDbGFzc2VzKCk7XG4gICAgICAgICAgICAgICAgaWYgKChzLnBhcmFtcy5zbGlkZXNQZXJWaWV3ID09PSAnYXV0bycgfHwgcy5wYXJhbXMuc2xpZGVzUGVyVmlldyA+IDEpICYmIHMuaXNFbmQgJiYgIXMucGFyYW1zLmNlbnRlcmVkU2xpZGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIHNsaWRlQ2hhbmdlZEJ5U2xpZGVUbyA9IHMuc2xpZGVUbyhzLnNsaWRlcy5sZW5ndGggLSAxLCAwLCBmYWxzZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzbGlkZUNoYW5nZWRCeVNsaWRlVG8gPSBzLnNsaWRlVG8ocy5hY3RpdmVJbmRleCwgMCwgZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5sYXp5TG9hZGluZyAmJiAhc2xpZGVDaGFuZ2VkQnlTbGlkZVRvICYmIHMubGF6eSkge1xuICAgICAgICAgICAgICAgIHMubGF6eS5sb2FkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBSZXR1cm4gbG9ja3MgYWZ0ZXIgcmVzaXplXG4gICAgICAgICAgICBzLnBhcmFtcy5hbGxvd1N3aXBlVG9QcmV2ID0gYWxsb3dTd2lwZVRvUHJldjtcbiAgICAgICAgICAgIHMucGFyYW1zLmFsbG93U3dpcGVUb05leHQgPSBhbGxvd1N3aXBlVG9OZXh0O1xuICAgICAgICAgICAgaWYgKHMucGFyYW1zLm9uQWZ0ZXJSZXNpemUpIHMucGFyYW1zLm9uQWZ0ZXJSZXNpemUocyk7XG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBFdmVudHNcbiAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgICAgICBcbiAgICAgICAgLy9EZWZpbmUgVG91Y2ggRXZlbnRzXG4gICAgICAgIHMudG91Y2hFdmVudHNEZXNrdG9wID0ge3N0YXJ0OiAnbW91c2Vkb3duJywgbW92ZTogJ21vdXNlbW92ZScsIGVuZDogJ21vdXNldXAnfTtcbiAgICAgICAgaWYgKHdpbmRvdy5uYXZpZ2F0b3IucG9pbnRlckVuYWJsZWQpIHMudG91Y2hFdmVudHNEZXNrdG9wID0ge3N0YXJ0OiAncG9pbnRlcmRvd24nLCBtb3ZlOiAncG9pbnRlcm1vdmUnLCBlbmQ6ICdwb2ludGVydXAnfTtcbiAgICAgICAgZWxzZSBpZiAod2luZG93Lm5hdmlnYXRvci5tc1BvaW50ZXJFbmFibGVkKSBzLnRvdWNoRXZlbnRzRGVza3RvcCA9IHtzdGFydDogJ01TUG9pbnRlckRvd24nLCBtb3ZlOiAnTVNQb2ludGVyTW92ZScsIGVuZDogJ01TUG9pbnRlclVwJ307XG4gICAgICAgIHMudG91Y2hFdmVudHMgPSB7XG4gICAgICAgICAgICBzdGFydCA6IHMuc3VwcG9ydC50b3VjaCB8fCAhcy5wYXJhbXMuc2ltdWxhdGVUb3VjaCAgPyAndG91Y2hzdGFydCcgOiBzLnRvdWNoRXZlbnRzRGVza3RvcC5zdGFydCxcbiAgICAgICAgICAgIG1vdmUgOiBzLnN1cHBvcnQudG91Y2ggfHwgIXMucGFyYW1zLnNpbXVsYXRlVG91Y2ggPyAndG91Y2htb3ZlJyA6IHMudG91Y2hFdmVudHNEZXNrdG9wLm1vdmUsXG4gICAgICAgICAgICBlbmQgOiBzLnN1cHBvcnQudG91Y2ggfHwgIXMucGFyYW1zLnNpbXVsYXRlVG91Y2ggPyAndG91Y2hlbmQnIDogcy50b3VjaEV2ZW50c0Rlc2t0b3AuZW5kXG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgLy8gV1A4IFRvdWNoIEV2ZW50cyBGaXhcbiAgICAgICAgaWYgKHdpbmRvdy5uYXZpZ2F0b3IucG9pbnRlckVuYWJsZWQgfHwgd2luZG93Lm5hdmlnYXRvci5tc1BvaW50ZXJFbmFibGVkKSB7XG4gICAgICAgICAgICAocy5wYXJhbXMudG91Y2hFdmVudHNUYXJnZXQgPT09ICdjb250YWluZXInID8gcy5jb250YWluZXIgOiBzLndyYXBwZXIpLmFkZENsYXNzKCdzd2lwZXItd3A4LScgKyBzLnBhcmFtcy5kaXJlY3Rpb24pO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBBdHRhY2gvZGV0YWNoIGV2ZW50c1xuICAgICAgICBzLmluaXRFdmVudHMgPSBmdW5jdGlvbiAoZGV0YWNoKSB7XG4gICAgICAgICAgICB2YXIgYWN0aW9uRG9tID0gZGV0YWNoID8gJ29mZicgOiAnb24nO1xuICAgICAgICAgICAgdmFyIGFjdGlvbiA9IGRldGFjaCA/ICdyZW1vdmVFdmVudExpc3RlbmVyJyA6ICdhZGRFdmVudExpc3RlbmVyJztcbiAgICAgICAgICAgIHZhciB0b3VjaEV2ZW50c1RhcmdldCA9IHMucGFyYW1zLnRvdWNoRXZlbnRzVGFyZ2V0ID09PSAnY29udGFpbmVyJyA/IHMuY29udGFpbmVyWzBdIDogcy53cmFwcGVyWzBdO1xuICAgICAgICAgICAgdmFyIHRhcmdldCA9IHMuc3VwcG9ydC50b3VjaCA/IHRvdWNoRXZlbnRzVGFyZ2V0IDogZG9jdW1lbnQ7XG4gICAgICAgIFxuICAgICAgICAgICAgdmFyIG1vdmVDYXB0dXJlID0gcy5wYXJhbXMubmVzdGVkID8gdHJ1ZSA6IGZhbHNlO1xuICAgICAgICBcbiAgICAgICAgICAgIC8vVG91Y2ggRXZlbnRzXG4gICAgICAgICAgICBpZiAocy5icm93c2VyLmllKSB7XG4gICAgICAgICAgICAgICAgdG91Y2hFdmVudHNUYXJnZXRbYWN0aW9uXShzLnRvdWNoRXZlbnRzLnN0YXJ0LCBzLm9uVG91Y2hTdGFydCwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIHRhcmdldFthY3Rpb25dKHMudG91Y2hFdmVudHMubW92ZSwgcy5vblRvdWNoTW92ZSwgbW92ZUNhcHR1cmUpO1xuICAgICAgICAgICAgICAgIHRhcmdldFthY3Rpb25dKHMudG91Y2hFdmVudHMuZW5kLCBzLm9uVG91Y2hFbmQsIGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChzLnN1cHBvcnQudG91Y2gpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhc3NpdmVMaXN0ZW5lciA9IHMudG91Y2hFdmVudHMuc3RhcnQgPT09ICd0b3VjaHN0YXJ0JyAmJiBzLnN1cHBvcnQucGFzc2l2ZUxpc3RlbmVyICYmIHMucGFyYW1zLnBhc3NpdmVMaXN0ZW5lcnMgPyB7cGFzc2l2ZTogdHJ1ZSwgY2FwdHVyZTogZmFsc2V9IDogZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIHRvdWNoRXZlbnRzVGFyZ2V0W2FjdGlvbl0ocy50b3VjaEV2ZW50cy5zdGFydCwgcy5vblRvdWNoU3RhcnQsIHBhc3NpdmVMaXN0ZW5lcik7XG4gICAgICAgICAgICAgICAgICAgIHRvdWNoRXZlbnRzVGFyZ2V0W2FjdGlvbl0ocy50b3VjaEV2ZW50cy5tb3ZlLCBzLm9uVG91Y2hNb3ZlLCBtb3ZlQ2FwdHVyZSk7XG4gICAgICAgICAgICAgICAgICAgIHRvdWNoRXZlbnRzVGFyZ2V0W2FjdGlvbl0ocy50b3VjaEV2ZW50cy5lbmQsIHMub25Ub3VjaEVuZCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKChwYXJhbXMuc2ltdWxhdGVUb3VjaCAmJiAhcy5kZXZpY2UuaW9zICYmICFzLmRldmljZS5hbmRyb2lkKSB8fCAocGFyYW1zLnNpbXVsYXRlVG91Y2ggJiYgIXMuc3VwcG9ydC50b3VjaCAmJiBzLmRldmljZS5pb3MpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRvdWNoRXZlbnRzVGFyZ2V0W2FjdGlvbl0oJ21vdXNlZG93bicsIHMub25Ub3VjaFN0YXJ0LCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50W2FjdGlvbl0oJ21vdXNlbW92ZScsIHMub25Ub3VjaE1vdmUsIG1vdmVDYXB0dXJlKTtcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnRbYWN0aW9uXSgnbW91c2V1cCcsIHMub25Ub3VjaEVuZCwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHdpbmRvd1thY3Rpb25dKCdyZXNpemUnLCBzLm9uUmVzaXplKTtcbiAgICAgICAgXG4gICAgICAgICAgICAvLyBOZXh0LCBQcmV2LCBJbmRleFxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLm5leHRCdXR0b24gJiYgcy5uZXh0QnV0dG9uICYmIHMubmV4dEJ1dHRvbi5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgcy5uZXh0QnV0dG9uW2FjdGlvbkRvbV0oJ2NsaWNrJywgcy5vbkNsaWNrTmV4dCk7XG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLmExMXkgJiYgcy5hMTF5KSBzLm5leHRCdXR0b25bYWN0aW9uRG9tXSgna2V5ZG93bicsIHMuYTExeS5vbkVudGVyS2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5wcmV2QnV0dG9uICYmIHMucHJldkJ1dHRvbiAmJiBzLnByZXZCdXR0b24ubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIHMucHJldkJ1dHRvblthY3Rpb25Eb21dKCdjbGljaycsIHMub25DbGlja1ByZXYpO1xuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5hMTF5ICYmIHMuYTExeSkgcy5wcmV2QnV0dG9uW2FjdGlvbkRvbV0oJ2tleWRvd24nLCBzLmExMXkub25FbnRlcktleSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMucGFnaW5hdGlvbiAmJiBzLnBhcmFtcy5wYWdpbmF0aW9uQ2xpY2thYmxlKSB7XG4gICAgICAgICAgICAgICAgcy5wYWdpbmF0aW9uQ29udGFpbmVyW2FjdGlvbkRvbV0oJ2NsaWNrJywgJy4nICsgcy5wYXJhbXMuYnVsbGV0Q2xhc3MsIHMub25DbGlja0luZGV4KTtcbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuYTExeSAmJiBzLmExMXkpIHMucGFnaW5hdGlvbkNvbnRhaW5lclthY3Rpb25Eb21dKCdrZXlkb3duJywgJy4nICsgcy5wYXJhbXMuYnVsbGV0Q2xhc3MsIHMuYTExeS5vbkVudGVyS2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAvLyBQcmV2ZW50IExpbmtzIENsaWNrc1xuICAgICAgICAgICAgaWYgKHMucGFyYW1zLnByZXZlbnRDbGlja3MgfHwgcy5wYXJhbXMucHJldmVudENsaWNrc1Byb3BhZ2F0aW9uKSB0b3VjaEV2ZW50c1RhcmdldFthY3Rpb25dKCdjbGljaycsIHMucHJldmVudENsaWNrcywgdHJ1ZSk7XG4gICAgICAgIH07XG4gICAgICAgIHMuYXR0YWNoRXZlbnRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcy5pbml0RXZlbnRzKCk7XG4gICAgICAgIH07XG4gICAgICAgIHMuZGV0YWNoRXZlbnRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcy5pbml0RXZlbnRzKHRydWUpO1xuICAgICAgICB9O1xuICAgICAgICBcbiAgICAgICAgLyo9PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgICAgICAgSGFuZGxlIENsaWNrc1xuICAgICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG4gICAgICAgIC8vIFByZXZlbnQgQ2xpY2tzXG4gICAgICAgIHMuYWxsb3dDbGljayA9IHRydWU7XG4gICAgICAgIHMucHJldmVudENsaWNrcyA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBpZiAoIXMuYWxsb3dDbGljaykge1xuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5wcmV2ZW50Q2xpY2tzKSBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLnByZXZlbnRDbGlja3NQcm9wYWdhdGlvbiAmJiBzLmFuaW1hdGluZykge1xuICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgLy8gQ2xpY2tzXG4gICAgICAgIHMub25DbGlja05leHQgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgaWYgKHMuaXNFbmQgJiYgIXMucGFyYW1zLmxvb3ApIHJldHVybjtcbiAgICAgICAgICAgIHMuc2xpZGVOZXh0KCk7XG4gICAgICAgIH07XG4gICAgICAgIHMub25DbGlja1ByZXYgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgaWYgKHMuaXNCZWdpbm5pbmcgJiYgIXMucGFyYW1zLmxvb3ApIHJldHVybjtcbiAgICAgICAgICAgIHMuc2xpZGVQcmV2KCk7XG4gICAgICAgIH07XG4gICAgICAgIHMub25DbGlja0luZGV4ID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHZhciBpbmRleCA9ICQodGhpcykuaW5kZXgoKSAqIHMucGFyYW1zLnNsaWRlc1Blckdyb3VwO1xuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmxvb3ApIGluZGV4ID0gaW5kZXggKyBzLmxvb3BlZFNsaWRlcztcbiAgICAgICAgICAgIHMuc2xpZGVUbyhpbmRleCk7XG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBIYW5kbGUgVG91Y2hlc1xuICAgICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG4gICAgICAgIGZ1bmN0aW9uIGZpbmRFbGVtZW50SW5FdmVudChlLCBzZWxlY3Rvcikge1xuICAgICAgICAgICAgdmFyIGVsID0gJChlLnRhcmdldCk7XG4gICAgICAgICAgICBpZiAoIWVsLmlzKHNlbGVjdG9yKSkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygc2VsZWN0b3IgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIGVsID0gZWwucGFyZW50cyhzZWxlY3Rvcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHNlbGVjdG9yLm5vZGVUeXBlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBmb3VuZDtcbiAgICAgICAgICAgICAgICAgICAgZWwucGFyZW50cygpLmVhY2goZnVuY3Rpb24gKGluZGV4LCBfZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChfZWwgPT09IHNlbGVjdG9yKSBmb3VuZCA9IHNlbGVjdG9yO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFmb3VuZCkgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSByZXR1cm4gc2VsZWN0b3I7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGVsLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZWxbMF07XG4gICAgICAgIH1cbiAgICAgICAgcy51cGRhdGVDbGlja2VkU2xpZGUgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgdmFyIHNsaWRlID0gZmluZEVsZW1lbnRJbkV2ZW50KGUsICcuJyArIHMucGFyYW1zLnNsaWRlQ2xhc3MpO1xuICAgICAgICAgICAgdmFyIHNsaWRlRm91bmQgPSBmYWxzZTtcbiAgICAgICAgICAgIGlmIChzbGlkZSkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcy5zbGlkZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMuc2xpZGVzW2ldID09PSBzbGlkZSkgc2xpZGVGb3VuZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIGlmIChzbGlkZSAmJiBzbGlkZUZvdW5kKSB7XG4gICAgICAgICAgICAgICAgcy5jbGlja2VkU2xpZGUgPSBzbGlkZTtcbiAgICAgICAgICAgICAgICBzLmNsaWNrZWRJbmRleCA9ICQoc2xpZGUpLmluZGV4KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzLmNsaWNrZWRTbGlkZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICBzLmNsaWNrZWRJbmRleCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMuc2xpZGVUb0NsaWNrZWRTbGlkZSAmJiBzLmNsaWNrZWRJbmRleCAhPT0gdW5kZWZpbmVkICYmIHMuY2xpY2tlZEluZGV4ICE9PSBzLmFjdGl2ZUluZGV4KSB7XG4gICAgICAgICAgICAgICAgdmFyIHNsaWRlVG9JbmRleCA9IHMuY2xpY2tlZEluZGV4LFxuICAgICAgICAgICAgICAgICAgICByZWFsSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgIGR1cGxpY2F0ZWRTbGlkZXMsXG4gICAgICAgICAgICAgICAgICAgIHNsaWRlc1BlclZpZXcgPSBzLnBhcmFtcy5zbGlkZXNQZXJWaWV3ID09PSAnYXV0bycgPyBzLmN1cnJlbnRTbGlkZXNQZXJWaWV3KCkgOiBzLnBhcmFtcy5zbGlkZXNQZXJWaWV3O1xuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5sb29wKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLmFuaW1hdGluZykgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICByZWFsSW5kZXggPSBwYXJzZUludCgkKHMuY2xpY2tlZFNsaWRlKS5hdHRyKCdkYXRhLXN3aXBlci1zbGlkZS1pbmRleCcpLCAxMCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5jZW50ZXJlZFNsaWRlcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChzbGlkZVRvSW5kZXggPCBzLmxvb3BlZFNsaWRlcyAtIHNsaWRlc1BlclZpZXcvMikgfHwgKHNsaWRlVG9JbmRleCA+IHMuc2xpZGVzLmxlbmd0aCAtIHMubG9vcGVkU2xpZGVzICsgc2xpZGVzUGVyVmlldy8yKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMuZml4TG9vcCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNsaWRlVG9JbmRleCA9IHMud3JhcHBlci5jaGlsZHJlbignLicgKyBzLnBhcmFtcy5zbGlkZUNsYXNzICsgJ1tkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cIicgKyByZWFsSW5kZXggKyAnXCJdOm5vdCguJyArIHMucGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MgKyAnKScpLmVxKDApLmluZGV4KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMuc2xpZGVUbyhzbGlkZVRvSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcy5zbGlkZVRvKHNsaWRlVG9JbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2xpZGVUb0luZGV4ID4gcy5zbGlkZXMubGVuZ3RoIC0gc2xpZGVzUGVyVmlldykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMuZml4TG9vcCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNsaWRlVG9JbmRleCA9IHMud3JhcHBlci5jaGlsZHJlbignLicgKyBzLnBhcmFtcy5zbGlkZUNsYXNzICsgJ1tkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cIicgKyByZWFsSW5kZXggKyAnXCJdOm5vdCguJyArIHMucGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MgKyAnKScpLmVxKDApLmluZGV4KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMuc2xpZGVUbyhzbGlkZVRvSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcy5zbGlkZVRvKHNsaWRlVG9JbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHMuc2xpZGVUbyhzbGlkZVRvSW5kZXgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgICAgIHZhciBpc1RvdWNoZWQsXG4gICAgICAgICAgICBpc01vdmVkLFxuICAgICAgICAgICAgYWxsb3dUb3VjaENhbGxiYWNrcyxcbiAgICAgICAgICAgIHRvdWNoU3RhcnRUaW1lLFxuICAgICAgICAgICAgaXNTY3JvbGxpbmcsXG4gICAgICAgICAgICBjdXJyZW50VHJhbnNsYXRlLFxuICAgICAgICAgICAgc3RhcnRUcmFuc2xhdGUsXG4gICAgICAgICAgICBhbGxvd1RocmVzaG9sZE1vdmUsXG4gICAgICAgICAgICAvLyBGb3JtIGVsZW1lbnRzIHRvIG1hdGNoXG4gICAgICAgICAgICBmb3JtRWxlbWVudHMgPSAnaW5wdXQsIHNlbGVjdCwgdGV4dGFyZWEsIGJ1dHRvbiwgdmlkZW8nLFxuICAgICAgICAgICAgLy8gTGFzdCBjbGljayB0aW1lXG4gICAgICAgICAgICBsYXN0Q2xpY2tUaW1lID0gRGF0ZS5ub3coKSwgY2xpY2tUaW1lb3V0LFxuICAgICAgICAgICAgLy9WZWxvY2l0aWVzXG4gICAgICAgICAgICB2ZWxvY2l0aWVzID0gW10sXG4gICAgICAgICAgICBhbGxvd01vbWVudHVtQm91bmNlO1xuICAgICAgICBcbiAgICAgICAgLy8gQW5pbWF0aW5nIEZsYWdcbiAgICAgICAgcy5hbmltYXRpbmcgPSBmYWxzZTtcbiAgICAgICAgXG4gICAgICAgIC8vIFRvdWNoZXMgaW5mb3JtYXRpb25cbiAgICAgICAgcy50b3VjaGVzID0ge1xuICAgICAgICAgICAgc3RhcnRYOiAwLFxuICAgICAgICAgICAgc3RhcnRZOiAwLFxuICAgICAgICAgICAgY3VycmVudFg6IDAsXG4gICAgICAgICAgICBjdXJyZW50WTogMCxcbiAgICAgICAgICAgIGRpZmY6IDBcbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgICAgIC8vIFRvdWNoIGhhbmRsZXJzXG4gICAgICAgIHZhciBpc1RvdWNoRXZlbnQsIHN0YXJ0TW92aW5nO1xuICAgICAgICBzLm9uVG91Y2hTdGFydCA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBpZiAoZS5vcmlnaW5hbEV2ZW50KSBlID0gZS5vcmlnaW5hbEV2ZW50O1xuICAgICAgICAgICAgaXNUb3VjaEV2ZW50ID0gZS50eXBlID09PSAndG91Y2hzdGFydCc7XG4gICAgICAgICAgICBpZiAoIWlzVG91Y2hFdmVudCAmJiAnd2hpY2gnIGluIGUgJiYgZS53aGljaCA9PT0gMykgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKHMucGFyYW1zLm5vU3dpcGluZyAmJiBmaW5kRWxlbWVudEluRXZlbnQoZSwgJy4nICsgcy5wYXJhbXMubm9Td2lwaW5nQ2xhc3MpKSB7XG4gICAgICAgICAgICAgICAgcy5hbGxvd0NsaWNrID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMuc3dpcGVIYW5kbGVyKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFmaW5kRWxlbWVudEluRXZlbnQoZSwgcy5wYXJhbXMuc3dpcGVIYW5kbGVyKSkgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIHZhciBzdGFydFggPSBzLnRvdWNoZXMuY3VycmVudFggPSBlLnR5cGUgPT09ICd0b3VjaHN0YXJ0JyA/IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWCA6IGUucGFnZVg7XG4gICAgICAgICAgICB2YXIgc3RhcnRZID0gcy50b3VjaGVzLmN1cnJlbnRZID0gZS50eXBlID09PSAndG91Y2hzdGFydCcgPyBlLnRhcmdldFRvdWNoZXNbMF0ucGFnZVkgOiBlLnBhZ2VZO1xuICAgICAgICBcbiAgICAgICAgICAgIC8vIERvIE5PVCBzdGFydCBpZiBpT1MgZWRnZSBzd2lwZSBpcyBkZXRlY3RlZC4gT3RoZXJ3aXNlIGlPUyBhcHAgKFVJV2ViVmlldykgY2Fubm90IHN3aXBlLXRvLWdvLWJhY2sgYW55bW9yZVxuICAgICAgICAgICAgaWYocy5kZXZpY2UuaW9zICYmIHMucGFyYW1zLmlPU0VkZ2VTd2lwZURldGVjdGlvbiAmJiBzdGFydFggPD0gcy5wYXJhbXMuaU9TRWRnZVN3aXBlVGhyZXNob2xkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIGlzVG91Y2hlZCA9IHRydWU7XG4gICAgICAgICAgICBpc01vdmVkID0gZmFsc2U7XG4gICAgICAgICAgICBhbGxvd1RvdWNoQ2FsbGJhY2tzID0gdHJ1ZTtcbiAgICAgICAgICAgIGlzU2Nyb2xsaW5nID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgc3RhcnRNb3ZpbmcgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICBzLnRvdWNoZXMuc3RhcnRYID0gc3RhcnRYO1xuICAgICAgICAgICAgcy50b3VjaGVzLnN0YXJ0WSA9IHN0YXJ0WTtcbiAgICAgICAgICAgIHRvdWNoU3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgIHMuYWxsb3dDbGljayA9IHRydWU7XG4gICAgICAgICAgICBzLnVwZGF0ZUNvbnRhaW5lclNpemUoKTtcbiAgICAgICAgICAgIHMuc3dpcGVEaXJlY3Rpb24gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMudGhyZXNob2xkID4gMCkgYWxsb3dUaHJlc2hvbGRNb3ZlID0gZmFsc2U7XG4gICAgICAgICAgICBpZiAoZS50eXBlICE9PSAndG91Y2hzdGFydCcpIHtcbiAgICAgICAgICAgICAgICB2YXIgcHJldmVudERlZmF1bHQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGlmICgkKGUudGFyZ2V0KS5pcyhmb3JtRWxlbWVudHMpKSBwcmV2ZW50RGVmYXVsdCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGlmIChkb2N1bWVudC5hY3RpdmVFbGVtZW50ICYmICQoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkuaXMoZm9ybUVsZW1lbnRzKSkge1xuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5hY3RpdmVFbGVtZW50LmJsdXIoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHByZXZlbnREZWZhdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzLmVtaXQoJ29uVG91Y2hTdGFydCcsIHMsIGUpO1xuICAgICAgICB9O1xuICAgICAgICBcbiAgICAgICAgcy5vblRvdWNoTW92ZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBpZiAoZS5vcmlnaW5hbEV2ZW50KSBlID0gZS5vcmlnaW5hbEV2ZW50O1xuICAgICAgICAgICAgaWYgKGlzVG91Y2hFdmVudCAmJiBlLnR5cGUgPT09ICdtb3VzZW1vdmUnKSByZXR1cm47XG4gICAgICAgICAgICBpZiAoZS5wcmV2ZW50ZWRCeU5lc3RlZFN3aXBlcikge1xuICAgICAgICAgICAgICAgIHMudG91Y2hlcy5zdGFydFggPSBlLnR5cGUgPT09ICd0b3VjaG1vdmUnID8gZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VYIDogZS5wYWdlWDtcbiAgICAgICAgICAgICAgICBzLnRvdWNoZXMuc3RhcnRZID0gZS50eXBlID09PSAndG91Y2htb3ZlJyA/IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWSA6IGUucGFnZVk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLm9ubHlFeHRlcm5hbCkge1xuICAgICAgICAgICAgICAgIC8vIGlzTW92ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHMuYWxsb3dDbGljayA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGlmIChpc1RvdWNoZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcy50b3VjaGVzLnN0YXJ0WCA9IHMudG91Y2hlcy5jdXJyZW50WCA9IGUudHlwZSA9PT0gJ3RvdWNobW92ZScgPyBlLnRhcmdldFRvdWNoZXNbMF0ucGFnZVggOiBlLnBhZ2VYO1xuICAgICAgICAgICAgICAgICAgICBzLnRvdWNoZXMuc3RhcnRZID0gcy50b3VjaGVzLmN1cnJlbnRZID0gZS50eXBlID09PSAndG91Y2htb3ZlJyA/IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWSA6IGUucGFnZVk7XG4gICAgICAgICAgICAgICAgICAgIHRvdWNoU3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGlzVG91Y2hFdmVudCAmJiBzLnBhcmFtcy50b3VjaFJlbGVhc2VPbkVkZ2VzICYmICFzLnBhcmFtcy5sb29wKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFzLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFZlcnRpY2FsXG4gICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIChzLnRvdWNoZXMuY3VycmVudFkgPCBzLnRvdWNoZXMuc3RhcnRZICYmIHMudHJhbnNsYXRlIDw9IHMubWF4VHJhbnNsYXRlKCkpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAocy50b3VjaGVzLmN1cnJlbnRZID4gcy50b3VjaGVzLnN0YXJ0WSAmJiBzLnRyYW5zbGF0ZSA+PSBzLm1pblRyYW5zbGF0ZSgpKVxuICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIChzLnRvdWNoZXMuY3VycmVudFggPCBzLnRvdWNoZXMuc3RhcnRYICYmIHMudHJhbnNsYXRlIDw9IHMubWF4VHJhbnNsYXRlKCkpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAocy50b3VjaGVzLmN1cnJlbnRYID4gcy50b3VjaGVzLnN0YXJ0WCAmJiBzLnRyYW5zbGF0ZSA+PSBzLm1pblRyYW5zbGF0ZSgpKVxuICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaXNUb3VjaEV2ZW50ICYmIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICBpZiAoZS50YXJnZXQgPT09IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgJiYgJChlLnRhcmdldCkuaXMoZm9ybUVsZW1lbnRzKSkge1xuICAgICAgICAgICAgICAgICAgICBpc01vdmVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgcy5hbGxvd0NsaWNrID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYWxsb3dUb3VjaENhbGxiYWNrcykge1xuICAgICAgICAgICAgICAgIHMuZW1pdCgnb25Ub3VjaE1vdmUnLCBzLCBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChlLnRhcmdldFRvdWNoZXMgJiYgZS50YXJnZXRUb3VjaGVzLmxlbmd0aCA+IDEpIHJldHVybjtcbiAgICAgICAgXG4gICAgICAgICAgICBzLnRvdWNoZXMuY3VycmVudFggPSBlLnR5cGUgPT09ICd0b3VjaG1vdmUnID8gZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VYIDogZS5wYWdlWDtcbiAgICAgICAgICAgIHMudG91Y2hlcy5jdXJyZW50WSA9IGUudHlwZSA9PT0gJ3RvdWNobW92ZScgPyBlLnRhcmdldFRvdWNoZXNbMF0ucGFnZVkgOiBlLnBhZ2VZO1xuICAgICAgICBcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaXNTY3JvbGxpbmcgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRvdWNoQW5nbGU7XG4gICAgICAgICAgICAgICAgaWYgKHMuaXNIb3Jpem9udGFsKCkgJiYgcy50b3VjaGVzLmN1cnJlbnRZID09PSBzLnRvdWNoZXMuc3RhcnRZIHx8ICFzLmlzSG9yaXpvbnRhbCgpICYmIHMudG91Y2hlcy5jdXJyZW50WCA9PT0gcy50b3VjaGVzLnN0YXJ0WCkge1xuICAgICAgICAgICAgICAgICAgICBpc1Njcm9sbGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdG91Y2hBbmdsZSA9IE1hdGguYXRhbjIoTWF0aC5hYnMocy50b3VjaGVzLmN1cnJlbnRZIC0gcy50b3VjaGVzLnN0YXJ0WSksIE1hdGguYWJzKHMudG91Y2hlcy5jdXJyZW50WCAtIHMudG91Y2hlcy5zdGFydFgpKSAqIDE4MCAvIE1hdGguUEk7XG4gICAgICAgICAgICAgICAgICAgIGlzU2Nyb2xsaW5nID0gcy5pc0hvcml6b250YWwoKSA/IHRvdWNoQW5nbGUgPiBzLnBhcmFtcy50b3VjaEFuZ2xlIDogKDkwIC0gdG91Y2hBbmdsZSA+IHMucGFyYW1zLnRvdWNoQW5nbGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpc1Njcm9sbGluZykge1xuICAgICAgICAgICAgICAgIHMuZW1pdCgnb25Ub3VjaE1vdmVPcHBvc2l0ZScsIHMsIGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGVvZiBzdGFydE1vdmluZyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICBpZiAocy50b3VjaGVzLmN1cnJlbnRYICE9PSBzLnRvdWNoZXMuc3RhcnRYIHx8IHMudG91Y2hlcy5jdXJyZW50WSAhPT0gcy50b3VjaGVzLnN0YXJ0WSkge1xuICAgICAgICAgICAgICAgICAgICBzdGFydE1vdmluZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFpc1RvdWNoZWQpIHJldHVybjtcbiAgICAgICAgICAgIGlmIChpc1Njcm9sbGluZykgIHtcbiAgICAgICAgICAgICAgICBpc1RvdWNoZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXN0YXJ0TW92aW5nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcy5hbGxvd0NsaWNrID0gZmFsc2U7XG4gICAgICAgICAgICBzLmVtaXQoJ29uU2xpZGVyTW92ZScsIHMsIGUpO1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgaWYgKHMucGFyYW1zLnRvdWNoTW92ZVN0b3BQcm9wYWdhdGlvbiAmJiAhcy5wYXJhbXMubmVzdGVkKSB7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBpZiAoIWlzTW92ZWQpIHtcbiAgICAgICAgICAgICAgICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICAgICAgICAgICAgICAgICAgcy5maXhMb29wKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHN0YXJ0VHJhbnNsYXRlID0gcy5nZXRXcmFwcGVyVHJhbnNsYXRlKCk7XG4gICAgICAgICAgICAgICAgcy5zZXRXcmFwcGVyVHJhbnNpdGlvbigwKTtcbiAgICAgICAgICAgICAgICBpZiAocy5hbmltYXRpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgcy53cmFwcGVyLnRyaWdnZXIoJ3dlYmtpdFRyYW5zaXRpb25FbmQgdHJhbnNpdGlvbmVuZCBvVHJhbnNpdGlvbkVuZCBNU1RyYW5zaXRpb25FbmQgbXNUcmFuc2l0aW9uRW5kJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5hdXRvcGxheSAmJiBzLmF1dG9wbGF5aW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5hdXRvcGxheURpc2FibGVPbkludGVyYWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLnN0b3BBdXRvcGxheSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5wYXVzZUF1dG9wbGF5KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYWxsb3dNb21lbnR1bUJvdW5jZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIC8vR3JhYiBDdXJzb3JcbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuZ3JhYkN1cnNvciAmJiAocy5wYXJhbXMuYWxsb3dTd2lwZVRvTmV4dCA9PT0gdHJ1ZSB8fCBzLnBhcmFtcy5hbGxvd1N3aXBlVG9QcmV2ID09PSB0cnVlKSkge1xuICAgICAgICAgICAgICAgICAgICBzLnNldEdyYWJDdXJzb3IodHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaXNNb3ZlZCA9IHRydWU7XG4gICAgICAgIFxuICAgICAgICAgICAgdmFyIGRpZmYgPSBzLnRvdWNoZXMuZGlmZiA9IHMuaXNIb3Jpem9udGFsKCkgPyBzLnRvdWNoZXMuY3VycmVudFggLSBzLnRvdWNoZXMuc3RhcnRYIDogcy50b3VjaGVzLmN1cnJlbnRZIC0gcy50b3VjaGVzLnN0YXJ0WTtcbiAgICAgICAgXG4gICAgICAgICAgICBkaWZmID0gZGlmZiAqIHMucGFyYW1zLnRvdWNoUmF0aW87XG4gICAgICAgICAgICBpZiAocy5ydGwpIGRpZmYgPSAtZGlmZjtcbiAgICAgICAgXG4gICAgICAgICAgICBzLnN3aXBlRGlyZWN0aW9uID0gZGlmZiA+IDAgPyAncHJldicgOiAnbmV4dCc7XG4gICAgICAgICAgICBjdXJyZW50VHJhbnNsYXRlID0gZGlmZiArIHN0YXJ0VHJhbnNsYXRlO1xuICAgICAgICBcbiAgICAgICAgICAgIHZhciBkaXNhYmxlUGFyZW50U3dpcGVyID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmICgoZGlmZiA+IDAgJiYgY3VycmVudFRyYW5zbGF0ZSA+IHMubWluVHJhbnNsYXRlKCkpKSB7XG4gICAgICAgICAgICAgICAgZGlzYWJsZVBhcmVudFN3aXBlciA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5yZXNpc3RhbmNlKSBjdXJyZW50VHJhbnNsYXRlID0gcy5taW5UcmFuc2xhdGUoKSAtIDEgKyBNYXRoLnBvdygtcy5taW5UcmFuc2xhdGUoKSArIHN0YXJ0VHJhbnNsYXRlICsgZGlmZiwgcy5wYXJhbXMucmVzaXN0YW5jZVJhdGlvKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGRpZmYgPCAwICYmIGN1cnJlbnRUcmFuc2xhdGUgPCBzLm1heFRyYW5zbGF0ZSgpKSB7XG4gICAgICAgICAgICAgICAgZGlzYWJsZVBhcmVudFN3aXBlciA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5yZXNpc3RhbmNlKSBjdXJyZW50VHJhbnNsYXRlID0gcy5tYXhUcmFuc2xhdGUoKSArIDEgLSBNYXRoLnBvdyhzLm1heFRyYW5zbGF0ZSgpIC0gc3RhcnRUcmFuc2xhdGUgLSBkaWZmLCBzLnBhcmFtcy5yZXNpc3RhbmNlUmF0aW8pO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIGlmIChkaXNhYmxlUGFyZW50U3dpcGVyKSB7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50ZWRCeU5lc3RlZFN3aXBlciA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLy8gRGlyZWN0aW9ucyBsb2Nrc1xuICAgICAgICAgICAgaWYgKCFzLnBhcmFtcy5hbGxvd1N3aXBlVG9OZXh0ICYmIHMuc3dpcGVEaXJlY3Rpb24gPT09ICduZXh0JyAmJiBjdXJyZW50VHJhbnNsYXRlIDwgc3RhcnRUcmFuc2xhdGUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50VHJhbnNsYXRlID0gc3RhcnRUcmFuc2xhdGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXMucGFyYW1zLmFsbG93U3dpcGVUb1ByZXYgJiYgcy5zd2lwZURpcmVjdGlvbiA9PT0gJ3ByZXYnICYmIGN1cnJlbnRUcmFuc2xhdGUgPiBzdGFydFRyYW5zbGF0ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRUcmFuc2xhdGUgPSBzdGFydFRyYW5zbGF0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgLy8gVGhyZXNob2xkXG4gICAgICAgICAgICBpZiAocy5wYXJhbXMudGhyZXNob2xkID4gMCkge1xuICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyhkaWZmKSA+IHMucGFyYW1zLnRocmVzaG9sZCB8fCBhbGxvd1RocmVzaG9sZE1vdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFhbGxvd1RocmVzaG9sZE1vdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsbG93VGhyZXNob2xkTW92ZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLnRvdWNoZXMuc3RhcnRYID0gcy50b3VjaGVzLmN1cnJlbnRYO1xuICAgICAgICAgICAgICAgICAgICAgICAgcy50b3VjaGVzLnN0YXJ0WSA9IHMudG91Y2hlcy5jdXJyZW50WTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRUcmFuc2xhdGUgPSBzdGFydFRyYW5zbGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMudG91Y2hlcy5kaWZmID0gcy5pc0hvcml6b250YWwoKSA/IHMudG91Y2hlcy5jdXJyZW50WCAtIHMudG91Y2hlcy5zdGFydFggOiBzLnRvdWNoZXMuY3VycmVudFkgLSBzLnRvdWNoZXMuc3RhcnRZO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50VHJhbnNsYXRlID0gc3RhcnRUcmFuc2xhdGU7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgaWYgKCFzLnBhcmFtcy5mb2xsb3dGaW5nZXIpIHJldHVybjtcbiAgICAgICAgXG4gICAgICAgICAgICAvLyBVcGRhdGUgYWN0aXZlIGluZGV4IGluIGZyZWUgbW9kZVxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmZyZWVNb2RlIHx8IHMucGFyYW1zLndhdGNoU2xpZGVzUHJvZ3Jlc3MpIHtcbiAgICAgICAgICAgICAgICBzLnVwZGF0ZUFjdGl2ZUluZGV4KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMuZnJlZU1vZGUpIHtcbiAgICAgICAgICAgICAgICAvL1ZlbG9jaXR5XG4gICAgICAgICAgICAgICAgaWYgKHZlbG9jaXRpZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHZlbG9jaXRpZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcy50b3VjaGVzW3MuaXNIb3Jpem9udGFsKCkgPyAnc3RhcnRYJyA6ICdzdGFydFknXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWU6IHRvdWNoU3RhcnRUaW1lXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2ZWxvY2l0aWVzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcy50b3VjaGVzW3MuaXNIb3Jpem9udGFsKCkgPyAnY3VycmVudFgnIDogJ2N1cnJlbnRZJ10sXG4gICAgICAgICAgICAgICAgICAgIHRpbWU6IChuZXcgd2luZG93LkRhdGUoKSkuZ2V0VGltZSgpXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBVcGRhdGUgcHJvZ3Jlc3NcbiAgICAgICAgICAgIHMudXBkYXRlUHJvZ3Jlc3MoY3VycmVudFRyYW5zbGF0ZSk7XG4gICAgICAgICAgICAvLyBVcGRhdGUgdHJhbnNsYXRlXG4gICAgICAgICAgICBzLnNldFdyYXBwZXJUcmFuc2xhdGUoY3VycmVudFRyYW5zbGF0ZSk7XG4gICAgICAgIH07XG4gICAgICAgIHMub25Ub3VjaEVuZCA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBpZiAoZS5vcmlnaW5hbEV2ZW50KSBlID0gZS5vcmlnaW5hbEV2ZW50O1xuICAgICAgICAgICAgaWYgKGFsbG93VG91Y2hDYWxsYmFja3MpIHtcbiAgICAgICAgICAgICAgICBzLmVtaXQoJ29uVG91Y2hFbmQnLCBzLCBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFsbG93VG91Y2hDYWxsYmFja3MgPSBmYWxzZTtcbiAgICAgICAgICAgIGlmICghaXNUb3VjaGVkKSByZXR1cm47XG4gICAgICAgICAgICAvL1JldHVybiBHcmFiIEN1cnNvclxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmdyYWJDdXJzb3IgJiYgaXNNb3ZlZCAmJiBpc1RvdWNoZWQgICYmIChzLnBhcmFtcy5hbGxvd1N3aXBlVG9OZXh0ID09PSB0cnVlIHx8IHMucGFyYW1zLmFsbG93U3dpcGVUb1ByZXYgPT09IHRydWUpKSB7XG4gICAgICAgICAgICAgICAgcy5zZXRHcmFiQ3Vyc29yKGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAvLyBUaW1lIGRpZmZcbiAgICAgICAgICAgIHZhciB0b3VjaEVuZFRpbWUgPSBEYXRlLm5vdygpO1xuICAgICAgICAgICAgdmFyIHRpbWVEaWZmID0gdG91Y2hFbmRUaW1lIC0gdG91Y2hTdGFydFRpbWU7XG4gICAgICAgIFxuICAgICAgICAgICAgLy8gVGFwLCBkb3VibGVUYXAsIENsaWNrXG4gICAgICAgICAgICBpZiAocy5hbGxvd0NsaWNrKSB7XG4gICAgICAgICAgICAgICAgcy51cGRhdGVDbGlja2VkU2xpZGUoZSk7XG4gICAgICAgICAgICAgICAgcy5lbWl0KCdvblRhcCcsIHMsIGUpO1xuICAgICAgICAgICAgICAgIGlmICh0aW1lRGlmZiA8IDMwMCAmJiAodG91Y2hFbmRUaW1lIC0gbGFzdENsaWNrVGltZSkgPiAzMDApIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNsaWNrVGltZW91dCkgY2xlYXJUaW1lb3V0KGNsaWNrVGltZW91dCk7XG4gICAgICAgICAgICAgICAgICAgIGNsaWNrVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMucGFnaW5hdGlvbkhpZGUgJiYgcy5wYWdpbmF0aW9uQ29udGFpbmVyLmxlbmd0aCA+IDAgJiYgISQoZS50YXJnZXQpLmhhc0NsYXNzKHMucGFyYW1zLmJ1bGxldENsYXNzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMucGFnaW5hdGlvbkNvbnRhaW5lci50b2dnbGVDbGFzcyhzLnBhcmFtcy5wYWdpbmF0aW9uSGlkZGVuQ2xhc3MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcy5lbWl0KCdvbkNsaWNrJywgcywgZSk7XG4gICAgICAgICAgICAgICAgICAgIH0sIDMwMCk7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodGltZURpZmYgPCAzMDAgJiYgKHRvdWNoRW5kVGltZSAtIGxhc3RDbGlja1RpbWUpIDwgMzAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjbGlja1RpbWVvdXQpIGNsZWFyVGltZW91dChjbGlja1RpbWVvdXQpO1xuICAgICAgICAgICAgICAgICAgICBzLmVtaXQoJ29uRG91YmxlVGFwJywgcywgZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIGxhc3RDbGlja1RpbWUgPSBEYXRlLm5vdygpO1xuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHMpIHMuYWxsb3dDbGljayA9IHRydWU7XG4gICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgXG4gICAgICAgICAgICBpZiAoIWlzVG91Y2hlZCB8fCAhaXNNb3ZlZCB8fCAhcy5zd2lwZURpcmVjdGlvbiB8fCBzLnRvdWNoZXMuZGlmZiA9PT0gMCB8fCBjdXJyZW50VHJhbnNsYXRlID09PSBzdGFydFRyYW5zbGF0ZSkge1xuICAgICAgICAgICAgICAgIGlzVG91Y2hlZCA9IGlzTW92ZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpc1RvdWNoZWQgPSBpc01vdmVkID0gZmFsc2U7XG4gICAgICAgIFxuICAgICAgICAgICAgdmFyIGN1cnJlbnRQb3M7XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMuZm9sbG93RmluZ2VyKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFBvcyA9IHMucnRsID8gcy50cmFuc2xhdGUgOiAtcy50cmFuc2xhdGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50UG9zID0gLWN1cnJlbnRUcmFuc2xhdGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMuZnJlZU1vZGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoY3VycmVudFBvcyA8IC1zLm1pblRyYW5zbGF0ZSgpKSB7XG4gICAgICAgICAgICAgICAgICAgIHMuc2xpZGVUbyhzLmFjdGl2ZUluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChjdXJyZW50UG9zID4gLXMubWF4VHJhbnNsYXRlKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMuc2xpZGVzLmxlbmd0aCA8IHMuc25hcEdyaWQubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLnNsaWRlVG8ocy5zbmFwR3JpZC5sZW5ndGggLSAxKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuc2xpZGVUbyhzLnNsaWRlcy5sZW5ndGggLSAxKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuZnJlZU1vZGVNb21lbnR1bSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodmVsb2NpdGllcy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbGFzdE1vdmVFdmVudCA9IHZlbG9jaXRpZXMucG9wKCksIHZlbG9jaXR5RXZlbnQgPSB2ZWxvY2l0aWVzLnBvcCgpO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkaXN0YW5jZSA9IGxhc3RNb3ZlRXZlbnQucG9zaXRpb24gLSB2ZWxvY2l0eUV2ZW50LnBvc2l0aW9uO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRpbWUgPSBsYXN0TW92ZUV2ZW50LnRpbWUgLSB2ZWxvY2l0eUV2ZW50LnRpbWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLnZlbG9jaXR5ID0gZGlzdGFuY2UgLyB0aW1lO1xuICAgICAgICAgICAgICAgICAgICAgICAgcy52ZWxvY2l0eSA9IHMudmVsb2NpdHkgLyAyO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKE1hdGguYWJzKHMudmVsb2NpdHkpIDwgcy5wYXJhbXMuZnJlZU1vZGVNaW5pbXVtVmVsb2NpdHkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzLnZlbG9jaXR5ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgaW1wbGllcyB0aGF0IHRoZSB1c2VyIHN0b3BwZWQgbW92aW5nIGEgZmluZ2VyIHRoZW4gcmVsZWFzZWQuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGVyZSB3b3VsZCBiZSBubyBldmVudHMgd2l0aCBkaXN0YW5jZSB6ZXJvLCBzbyB0aGUgbGFzdCBldmVudCBpcyBzdGFsZS5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aW1lID4gMTUwIHx8IChuZXcgd2luZG93LkRhdGUoKS5nZXRUaW1lKCkgLSBsYXN0TW92ZUV2ZW50LnRpbWUpID4gMzAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcy52ZWxvY2l0eSA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLnZlbG9jaXR5ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzLnZlbG9jaXR5ID0gcy52ZWxvY2l0eSAqIHMucGFyYW1zLmZyZWVNb2RlTW9tZW50dW1WZWxvY2l0eVJhdGlvO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgdmVsb2NpdGllcy5sZW5ndGggPSAwO1xuICAgICAgICAgICAgICAgICAgICB2YXIgbW9tZW50dW1EdXJhdGlvbiA9IDEwMDAgKiBzLnBhcmFtcy5mcmVlTW9kZU1vbWVudHVtUmF0aW87XG4gICAgICAgICAgICAgICAgICAgIHZhciBtb21lbnR1bURpc3RhbmNlID0gcy52ZWxvY2l0eSAqIG1vbWVudHVtRHVyYXRpb247XG4gICAgICAgIFxuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3UG9zaXRpb24gPSBzLnRyYW5zbGF0ZSArIG1vbWVudHVtRGlzdGFuY2U7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLnJ0bCkgbmV3UG9zaXRpb24gPSAtIG5ld1Bvc2l0aW9uO1xuICAgICAgICAgICAgICAgICAgICB2YXIgZG9Cb3VuY2UgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGFmdGVyQm91bmNlUG9zaXRpb247XG4gICAgICAgICAgICAgICAgICAgIHZhciBib3VuY2VBbW91bnQgPSBNYXRoLmFicyhzLnZlbG9jaXR5KSAqIDIwICogcy5wYXJhbXMuZnJlZU1vZGVNb21lbnR1bUJvdW5jZVJhdGlvO1xuICAgICAgICAgICAgICAgICAgICBpZiAobmV3UG9zaXRpb24gPCBzLm1heFRyYW5zbGF0ZSgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuZnJlZU1vZGVNb21lbnR1bUJvdW5jZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXdQb3NpdGlvbiArIHMubWF4VHJhbnNsYXRlKCkgPCAtYm91bmNlQW1vdW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1Bvc2l0aW9uID0gcy5tYXhUcmFuc2xhdGUoKSAtIGJvdW5jZUFtb3VudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWZ0ZXJCb3VuY2VQb3NpdGlvbiA9IHMubWF4VHJhbnNsYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9Cb3VuY2UgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsbG93TW9tZW50dW1Cb3VuY2UgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3UG9zaXRpb24gPSBzLm1heFRyYW5zbGF0ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKG5ld1Bvc2l0aW9uID4gcy5taW5UcmFuc2xhdGUoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLmZyZWVNb2RlTW9tZW50dW1Cb3VuY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobmV3UG9zaXRpb24gLSBzLm1pblRyYW5zbGF0ZSgpID4gYm91bmNlQW1vdW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1Bvc2l0aW9uID0gcy5taW5UcmFuc2xhdGUoKSArIGJvdW5jZUFtb3VudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWZ0ZXJCb3VuY2VQb3NpdGlvbiA9IHMubWluVHJhbnNsYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9Cb3VuY2UgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsbG93TW9tZW50dW1Cb3VuY2UgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3UG9zaXRpb24gPSBzLm1pblRyYW5zbGF0ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHMucGFyYW1zLmZyZWVNb2RlU3RpY2t5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaiA9IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV4dFNsaWRlO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChqID0gMDsgaiA8IHMuc25hcEdyaWQubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocy5zbmFwR3JpZFtqXSA+IC1uZXdQb3NpdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0U2xpZGUgPSBqO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKE1hdGguYWJzKHMuc25hcEdyaWRbbmV4dFNsaWRlXSAtIG5ld1Bvc2l0aW9uKSA8IE1hdGguYWJzKHMuc25hcEdyaWRbbmV4dFNsaWRlIC0gMV0gLSBuZXdQb3NpdGlvbikgfHwgcy5zd2lwZURpcmVjdGlvbiA9PT0gJ25leHQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3UG9zaXRpb24gPSBzLnNuYXBHcmlkW25leHRTbGlkZV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1Bvc2l0aW9uID0gcy5zbmFwR3JpZFtuZXh0U2xpZGUgLSAxXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcy5ydGwpIG5ld1Bvc2l0aW9uID0gLSBuZXdQb3NpdGlvbjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvL0ZpeCBkdXJhdGlvblxuICAgICAgICAgICAgICAgICAgICBpZiAocy52ZWxvY2l0eSAhPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHMucnRsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9tZW50dW1EdXJhdGlvbiA9IE1hdGguYWJzKCgtbmV3UG9zaXRpb24gLSBzLnRyYW5zbGF0ZSkgLyBzLnZlbG9jaXR5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vbWVudHVtRHVyYXRpb24gPSBNYXRoLmFicygobmV3UG9zaXRpb24gLSBzLnRyYW5zbGF0ZSkgLyBzLnZlbG9jaXR5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChzLnBhcmFtcy5mcmVlTW9kZVN0aWNreSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5zbGlkZVJlc2V0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5mcmVlTW9kZU1vbWVudHVtQm91bmNlICYmIGRvQm91bmNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLnVwZGF0ZVByb2dyZXNzKGFmdGVyQm91bmNlUG9zaXRpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5zZXRXcmFwcGVyVHJhbnNpdGlvbihtb21lbnR1bUR1cmF0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuc2V0V3JhcHBlclRyYW5zbGF0ZShuZXdQb3NpdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLm9uVHJhbnNpdGlvblN0YXJ0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLmFuaW1hdGluZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLndyYXBwZXIudHJhbnNpdGlvbkVuZChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzIHx8ICFhbGxvd01vbWVudHVtQm91bmNlKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcy5lbWl0KCdvbk1vbWVudHVtQm91bmNlJywgcyk7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMuc2V0V3JhcHBlclRyYW5zaXRpb24ocy5wYXJhbXMuc3BlZWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMuc2V0V3JhcHBlclRyYW5zbGF0ZShhZnRlckJvdW5jZVBvc2l0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzLndyYXBwZXIudHJhbnNpdGlvbkVuZChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcykgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzLm9uVHJhbnNpdGlvbkVuZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocy52ZWxvY2l0eSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcy51cGRhdGVQcm9ncmVzcyhuZXdQb3NpdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLnNldFdyYXBwZXJUcmFuc2l0aW9uKG1vbWVudHVtRHVyYXRpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5zZXRXcmFwcGVyVHJhbnNsYXRlKG5ld1Bvc2l0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMub25UcmFuc2l0aW9uU3RhcnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcy5hbmltYXRpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzLmFuaW1hdGluZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcy53cmFwcGVyLnRyYW5zaXRpb25FbmQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXMpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcy5vblRyYW5zaXRpb25FbmQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLnVwZGF0ZVByb2dyZXNzKG5ld1Bvc2l0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgcy51cGRhdGVBY3RpdmVJbmRleCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIXMucGFyYW1zLmZyZWVNb2RlTW9tZW50dW0gfHwgdGltZURpZmYgPj0gcy5wYXJhbXMubG9uZ1N3aXBlc01zKSB7XG4gICAgICAgICAgICAgICAgICAgIHMudXBkYXRlUHJvZ3Jlc3MoKTtcbiAgICAgICAgICAgICAgICAgICAgcy51cGRhdGVBY3RpdmVJbmRleCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLy8gRmluZCBjdXJyZW50IHNsaWRlXG4gICAgICAgICAgICB2YXIgaSwgc3RvcEluZGV4ID0gMCwgZ3JvdXBTaXplID0gcy5zbGlkZXNTaXplc0dyaWRbMF07XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcy5zbGlkZXNHcmlkLmxlbmd0aDsgaSArPSBzLnBhcmFtcy5zbGlkZXNQZXJHcm91cCkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygcy5zbGlkZXNHcmlkW2kgKyBzLnBhcmFtcy5zbGlkZXNQZXJHcm91cF0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50UG9zID49IHMuc2xpZGVzR3JpZFtpXSAmJiBjdXJyZW50UG9zIDwgcy5zbGlkZXNHcmlkW2kgKyBzLnBhcmFtcy5zbGlkZXNQZXJHcm91cF0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0b3BJbmRleCA9IGk7XG4gICAgICAgICAgICAgICAgICAgICAgICBncm91cFNpemUgPSBzLnNsaWRlc0dyaWRbaSArIHMucGFyYW1zLnNsaWRlc1Blckdyb3VwXSAtIHMuc2xpZGVzR3JpZFtpXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRQb3MgPj0gcy5zbGlkZXNHcmlkW2ldKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdG9wSW5kZXggPSBpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZ3JvdXBTaXplID0gcy5zbGlkZXNHcmlkW3Muc2xpZGVzR3JpZC5sZW5ndGggLSAxXSAtIHMuc2xpZGVzR3JpZFtzLnNsaWRlc0dyaWQubGVuZ3RoIC0gMl07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLy8gRmluZCBjdXJyZW50IHNsaWRlIHNpemVcbiAgICAgICAgICAgIHZhciByYXRpbyA9IChjdXJyZW50UG9zIC0gcy5zbGlkZXNHcmlkW3N0b3BJbmRleF0pIC8gZ3JvdXBTaXplO1xuICAgICAgICBcbiAgICAgICAgICAgIGlmICh0aW1lRGlmZiA+IHMucGFyYW1zLmxvbmdTd2lwZXNNcykge1xuICAgICAgICAgICAgICAgIC8vIExvbmcgdG91Y2hlc1xuICAgICAgICAgICAgICAgIGlmICghcy5wYXJhbXMubG9uZ1N3aXBlcykge1xuICAgICAgICAgICAgICAgICAgICBzLnNsaWRlVG8ocy5hY3RpdmVJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHMuc3dpcGVEaXJlY3Rpb24gPT09ICduZXh0Jykge1xuICAgICAgICAgICAgICAgICAgICBpZiAocmF0aW8gPj0gcy5wYXJhbXMubG9uZ1N3aXBlc1JhdGlvKSBzLnNsaWRlVG8oc3RvcEluZGV4ICsgcy5wYXJhbXMuc2xpZGVzUGVyR3JvdXApO1xuICAgICAgICAgICAgICAgICAgICBlbHNlIHMuc2xpZGVUbyhzdG9wSW5kZXgpO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHMuc3dpcGVEaXJlY3Rpb24gPT09ICdwcmV2Jykge1xuICAgICAgICAgICAgICAgICAgICBpZiAocmF0aW8gPiAoMSAtIHMucGFyYW1zLmxvbmdTd2lwZXNSYXRpbykpIHMuc2xpZGVUbyhzdG9wSW5kZXggKyBzLnBhcmFtcy5zbGlkZXNQZXJHcm91cCk7XG4gICAgICAgICAgICAgICAgICAgIGVsc2Ugcy5zbGlkZVRvKHN0b3BJbmRleCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gU2hvcnQgc3dpcGVzXG4gICAgICAgICAgICAgICAgaWYgKCFzLnBhcmFtcy5zaG9ydFN3aXBlcykge1xuICAgICAgICAgICAgICAgICAgICBzLnNsaWRlVG8ocy5hY3RpdmVJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHMuc3dpcGVEaXJlY3Rpb24gPT09ICduZXh0Jykge1xuICAgICAgICAgICAgICAgICAgICBzLnNsaWRlVG8oc3RvcEluZGV4ICsgcy5wYXJhbXMuc2xpZGVzUGVyR3JvdXApO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHMuc3dpcGVEaXJlY3Rpb24gPT09ICdwcmV2Jykge1xuICAgICAgICAgICAgICAgICAgICBzLnNsaWRlVG8oc3RvcEluZGV4KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIC8qPT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICAgICAgIFRyYW5zaXRpb25zXG4gICAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbiAgICAgICAgcy5fc2xpZGVUbyA9IGZ1bmN0aW9uIChzbGlkZUluZGV4LCBzcGVlZCkge1xuICAgICAgICAgICAgcmV0dXJuIHMuc2xpZGVUbyhzbGlkZUluZGV4LCBzcGVlZCwgdHJ1ZSwgdHJ1ZSk7XG4gICAgICAgIH07XG4gICAgICAgIHMuc2xpZGVUbyA9IGZ1bmN0aW9uIChzbGlkZUluZGV4LCBzcGVlZCwgcnVuQ2FsbGJhY2tzLCBpbnRlcm5hbCkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBydW5DYWxsYmFja3MgPT09ICd1bmRlZmluZWQnKSBydW5DYWxsYmFja3MgPSB0cnVlO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBzbGlkZUluZGV4ID09PSAndW5kZWZpbmVkJykgc2xpZGVJbmRleCA9IDA7XG4gICAgICAgICAgICBpZiAoc2xpZGVJbmRleCA8IDApIHNsaWRlSW5kZXggPSAwO1xuICAgICAgICAgICAgcy5zbmFwSW5kZXggPSBNYXRoLmZsb29yKHNsaWRlSW5kZXggLyBzLnBhcmFtcy5zbGlkZXNQZXJHcm91cCk7XG4gICAgICAgICAgICBpZiAocy5zbmFwSW5kZXggPj0gcy5zbmFwR3JpZC5sZW5ndGgpIHMuc25hcEluZGV4ID0gcy5zbmFwR3JpZC5sZW5ndGggLSAxO1xuICAgICAgICBcbiAgICAgICAgICAgIHZhciB0cmFuc2xhdGUgPSAtIHMuc25hcEdyaWRbcy5zbmFwSW5kZXhdO1xuICAgICAgICAgICAgLy8gU3RvcCBhdXRvcGxheVxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmF1dG9wbGF5ICYmIHMuYXV0b3BsYXlpbmcpIHtcbiAgICAgICAgICAgICAgICBpZiAoaW50ZXJuYWwgfHwgIXMucGFyYW1zLmF1dG9wbGF5RGlzYWJsZU9uSW50ZXJhY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgcy5wYXVzZUF1dG9wbGF5KHNwZWVkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHMuc3RvcEF1dG9wbGF5KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gVXBkYXRlIHByb2dyZXNzXG4gICAgICAgICAgICBzLnVwZGF0ZVByb2dyZXNzKHRyYW5zbGF0ZSk7XG4gICAgICAgIFxuICAgICAgICAgICAgLy8gTm9ybWFsaXplIHNsaWRlSW5kZXhcbiAgICAgICAgICAgIGlmKHMucGFyYW1zLm5vcm1hbGl6ZVNsaWRlSW5kZXgpe1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcy5zbGlkZXNHcmlkLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICgtIE1hdGguZmxvb3IodHJhbnNsYXRlICogMTAwKSA+PSBNYXRoLmZsb29yKHMuc2xpZGVzR3JpZFtpXSAqIDEwMCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNsaWRlSW5kZXggPSBpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIC8vIERpcmVjdGlvbnMgbG9ja3NcbiAgICAgICAgICAgIGlmICghcy5wYXJhbXMuYWxsb3dTd2lwZVRvTmV4dCAmJiB0cmFuc2xhdGUgPCBzLnRyYW5zbGF0ZSAmJiB0cmFuc2xhdGUgPCBzLm1pblRyYW5zbGF0ZSgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFzLnBhcmFtcy5hbGxvd1N3aXBlVG9QcmV2ICYmIHRyYW5zbGF0ZSA+IHMudHJhbnNsYXRlICYmIHRyYW5zbGF0ZSA+IHMubWF4VHJhbnNsYXRlKCkpIHtcbiAgICAgICAgICAgICAgICBpZiAoKHMuYWN0aXZlSW5kZXggfHwgMCkgIT09IHNsaWRlSW5kZXggKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLy8gVXBkYXRlIEluZGV4XG4gICAgICAgICAgICBpZiAodHlwZW9mIHNwZWVkID09PSAndW5kZWZpbmVkJykgc3BlZWQgPSBzLnBhcmFtcy5zcGVlZDtcbiAgICAgICAgICAgIHMucHJldmlvdXNJbmRleCA9IHMuYWN0aXZlSW5kZXggfHwgMDtcbiAgICAgICAgICAgIHMuYWN0aXZlSW5kZXggPSBzbGlkZUluZGV4O1xuICAgICAgICAgICAgcy51cGRhdGVSZWFsSW5kZXgoKTtcbiAgICAgICAgICAgIGlmICgocy5ydGwgJiYgLXRyYW5zbGF0ZSA9PT0gcy50cmFuc2xhdGUpIHx8ICghcy5ydGwgJiYgdHJhbnNsYXRlID09PSBzLnRyYW5zbGF0ZSkpIHtcbiAgICAgICAgICAgICAgICAvLyBVcGRhdGUgSGVpZ2h0XG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLmF1dG9IZWlnaHQpIHtcbiAgICAgICAgICAgICAgICAgICAgcy51cGRhdGVBdXRvSGVpZ2h0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHMudXBkYXRlQ2xhc3NlcygpO1xuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5lZmZlY3QgIT09ICdzbGlkZScpIHtcbiAgICAgICAgICAgICAgICAgICAgcy5zZXRXcmFwcGVyVHJhbnNsYXRlKHRyYW5zbGF0ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHMudXBkYXRlQ2xhc3NlcygpO1xuICAgICAgICAgICAgcy5vblRyYW5zaXRpb25TdGFydChydW5DYWxsYmFja3MpO1xuICAgICAgICBcbiAgICAgICAgICAgIGlmIChzcGVlZCA9PT0gMCB8fCBzLmJyb3dzZXIubHRlSUU5KSB7XG4gICAgICAgICAgICAgICAgcy5zZXRXcmFwcGVyVHJhbnNsYXRlKHRyYW5zbGF0ZSk7XG4gICAgICAgICAgICAgICAgcy5zZXRXcmFwcGVyVHJhbnNpdGlvbigwKTtcbiAgICAgICAgICAgICAgICBzLm9uVHJhbnNpdGlvbkVuZChydW5DYWxsYmFja3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcy5zZXRXcmFwcGVyVHJhbnNsYXRlKHRyYW5zbGF0ZSk7XG4gICAgICAgICAgICAgICAgcy5zZXRXcmFwcGVyVHJhbnNpdGlvbihzcGVlZCk7XG4gICAgICAgICAgICAgICAgaWYgKCFzLmFuaW1hdGluZykge1xuICAgICAgICAgICAgICAgICAgICBzLmFuaW1hdGluZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHMud3JhcHBlci50cmFuc2l0aW9uRW5kKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcykgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5vblRyYW5zaXRpb25FbmQocnVuQ2FsbGJhY2tzKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgICAgIHMub25UcmFuc2l0aW9uU3RhcnQgPSBmdW5jdGlvbiAocnVuQ2FsbGJhY2tzKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHJ1bkNhbGxiYWNrcyA9PT0gJ3VuZGVmaW5lZCcpIHJ1bkNhbGxiYWNrcyA9IHRydWU7XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMuYXV0b0hlaWdodCkge1xuICAgICAgICAgICAgICAgIHMudXBkYXRlQXV0b0hlaWdodCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHMubGF6eSkgcy5sYXp5Lm9uVHJhbnNpdGlvblN0YXJ0KCk7XG4gICAgICAgICAgICBpZiAocnVuQ2FsbGJhY2tzKSB7XG4gICAgICAgICAgICAgICAgcy5lbWl0KCdvblRyYW5zaXRpb25TdGFydCcsIHMpO1xuICAgICAgICAgICAgICAgIGlmIChzLmFjdGl2ZUluZGV4ICE9PSBzLnByZXZpb3VzSW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgcy5lbWl0KCdvblNsaWRlQ2hhbmdlU3RhcnQnLCBzKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMuYWN0aXZlSW5kZXggPiBzLnByZXZpb3VzSW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuZW1pdCgnb25TbGlkZU5leHRTdGFydCcsIHMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5lbWl0KCdvblNsaWRlUHJldlN0YXJ0Jywgcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBzLm9uVHJhbnNpdGlvbkVuZCA9IGZ1bmN0aW9uIChydW5DYWxsYmFja3MpIHtcbiAgICAgICAgICAgIHMuYW5pbWF0aW5nID0gZmFsc2U7XG4gICAgICAgICAgICBzLnNldFdyYXBwZXJUcmFuc2l0aW9uKDApO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBydW5DYWxsYmFja3MgPT09ICd1bmRlZmluZWQnKSBydW5DYWxsYmFja3MgPSB0cnVlO1xuICAgICAgICAgICAgaWYgKHMubGF6eSkgcy5sYXp5Lm9uVHJhbnNpdGlvbkVuZCgpO1xuICAgICAgICAgICAgaWYgKHJ1bkNhbGxiYWNrcykge1xuICAgICAgICAgICAgICAgIHMuZW1pdCgnb25UcmFuc2l0aW9uRW5kJywgcyk7XG4gICAgICAgICAgICAgICAgaWYgKHMuYWN0aXZlSW5kZXggIT09IHMucHJldmlvdXNJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICBzLmVtaXQoJ29uU2xpZGVDaGFuZ2VFbmQnLCBzKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMuYWN0aXZlSW5kZXggPiBzLnByZXZpb3VzSW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuZW1pdCgnb25TbGlkZU5leHRFbmQnLCBzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuZW1pdCgnb25TbGlkZVByZXZFbmQnLCBzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5oaXN0b3J5ICYmIHMuaGlzdG9yeSkge1xuICAgICAgICAgICAgICAgIHMuaGlzdG9yeS5zZXRIaXN0b3J5KHMucGFyYW1zLmhpc3RvcnksIHMuYWN0aXZlSW5kZXgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmhhc2huYXYgJiYgcy5oYXNobmF2KSB7XG4gICAgICAgICAgICAgICAgcy5oYXNobmF2LnNldEhhc2goKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIH07XG4gICAgICAgIHMuc2xpZGVOZXh0ID0gZnVuY3Rpb24gKHJ1bkNhbGxiYWNrcywgc3BlZWQsIGludGVybmFsKSB7XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMubG9vcCkge1xuICAgICAgICAgICAgICAgIGlmIChzLmFuaW1hdGluZykgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIHMuZml4TG9vcCgpO1xuICAgICAgICAgICAgICAgIHZhciBjbGllbnRMZWZ0ID0gcy5jb250YWluZXJbMF0uY2xpZW50TGVmdDtcbiAgICAgICAgICAgICAgICByZXR1cm4gcy5zbGlkZVRvKHMuYWN0aXZlSW5kZXggKyBzLnBhcmFtcy5zbGlkZXNQZXJHcm91cCwgc3BlZWQsIHJ1bkNhbGxiYWNrcywgaW50ZXJuYWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSByZXR1cm4gcy5zbGlkZVRvKHMuYWN0aXZlSW5kZXggKyBzLnBhcmFtcy5zbGlkZXNQZXJHcm91cCwgc3BlZWQsIHJ1bkNhbGxiYWNrcywgaW50ZXJuYWwpO1xuICAgICAgICB9O1xuICAgICAgICBzLl9zbGlkZU5leHQgPSBmdW5jdGlvbiAoc3BlZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBzLnNsaWRlTmV4dCh0cnVlLCBzcGVlZCwgdHJ1ZSk7XG4gICAgICAgIH07XG4gICAgICAgIHMuc2xpZGVQcmV2ID0gZnVuY3Rpb24gKHJ1bkNhbGxiYWNrcywgc3BlZWQsIGludGVybmFsKSB7XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMubG9vcCkge1xuICAgICAgICAgICAgICAgIGlmIChzLmFuaW1hdGluZykgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIHMuZml4TG9vcCgpO1xuICAgICAgICAgICAgICAgIHZhciBjbGllbnRMZWZ0ID0gcy5jb250YWluZXJbMF0uY2xpZW50TGVmdDtcbiAgICAgICAgICAgICAgICByZXR1cm4gcy5zbGlkZVRvKHMuYWN0aXZlSW5kZXggLSAxLCBzcGVlZCwgcnVuQ2FsbGJhY2tzLCBpbnRlcm5hbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHJldHVybiBzLnNsaWRlVG8ocy5hY3RpdmVJbmRleCAtIDEsIHNwZWVkLCBydW5DYWxsYmFja3MsIGludGVybmFsKTtcbiAgICAgICAgfTtcbiAgICAgICAgcy5fc2xpZGVQcmV2ID0gZnVuY3Rpb24gKHNwZWVkKSB7XG4gICAgICAgICAgICByZXR1cm4gcy5zbGlkZVByZXYodHJ1ZSwgc3BlZWQsIHRydWUpO1xuICAgICAgICB9O1xuICAgICAgICBzLnNsaWRlUmVzZXQgPSBmdW5jdGlvbiAocnVuQ2FsbGJhY2tzLCBzcGVlZCwgaW50ZXJuYWwpIHtcbiAgICAgICAgICAgIHJldHVybiBzLnNsaWRlVG8ocy5hY3RpdmVJbmRleCwgc3BlZWQsIHJ1bkNhbGxiYWNrcyk7XG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICBzLmRpc2FibGVUb3VjaENvbnRyb2wgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBzLnBhcmFtcy5vbmx5RXh0ZXJuYWwgPSB0cnVlO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH07XG4gICAgICAgIHMuZW5hYmxlVG91Y2hDb250cm9sID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcy5wYXJhbXMub25seUV4dGVybmFsID0gZmFsc2U7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgICAgIC8qPT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICAgICAgIFRyYW5zbGF0ZS90cmFuc2l0aW9uIGhlbHBlcnNcbiAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgICAgICBzLnNldFdyYXBwZXJUcmFuc2l0aW9uID0gZnVuY3Rpb24gKGR1cmF0aW9uLCBieUNvbnRyb2xsZXIpIHtcbiAgICAgICAgICAgIHMud3JhcHBlci50cmFuc2l0aW9uKGR1cmF0aW9uKTtcbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5lZmZlY3QgIT09ICdzbGlkZScgJiYgcy5lZmZlY3RzW3MucGFyYW1zLmVmZmVjdF0pIHtcbiAgICAgICAgICAgICAgICBzLmVmZmVjdHNbcy5wYXJhbXMuZWZmZWN0XS5zZXRUcmFuc2l0aW9uKGR1cmF0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5wYXJhbGxheCAmJiBzLnBhcmFsbGF4KSB7XG4gICAgICAgICAgICAgICAgcy5wYXJhbGxheC5zZXRUcmFuc2l0aW9uKGR1cmF0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5zY3JvbGxiYXIgJiYgcy5zY3JvbGxiYXIpIHtcbiAgICAgICAgICAgICAgICBzLnNjcm9sbGJhci5zZXRUcmFuc2l0aW9uKGR1cmF0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5jb250cm9sICYmIHMuY29udHJvbGxlcikge1xuICAgICAgICAgICAgICAgIHMuY29udHJvbGxlci5zZXRUcmFuc2l0aW9uKGR1cmF0aW9uLCBieUNvbnRyb2xsZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcy5lbWl0KCdvblNldFRyYW5zaXRpb24nLCBzLCBkdXJhdGlvbik7XG4gICAgICAgIH07XG4gICAgICAgIHMuc2V0V3JhcHBlclRyYW5zbGF0ZSA9IGZ1bmN0aW9uICh0cmFuc2xhdGUsIHVwZGF0ZUFjdGl2ZUluZGV4LCBieUNvbnRyb2xsZXIpIHtcbiAgICAgICAgICAgIHZhciB4ID0gMCwgeSA9IDAsIHogPSAwO1xuICAgICAgICAgICAgaWYgKHMuaXNIb3Jpem9udGFsKCkpIHtcbiAgICAgICAgICAgICAgICB4ID0gcy5ydGwgPyAtdHJhbnNsYXRlIDogdHJhbnNsYXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgeSA9IHRyYW5zbGF0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBpZiAocy5wYXJhbXMucm91bmRMZW5ndGhzKSB7XG4gICAgICAgICAgICAgICAgeCA9IHJvdW5kKHgpO1xuICAgICAgICAgICAgICAgIHkgPSByb3VuZCh5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBpZiAoIXMucGFyYW1zLnZpcnR1YWxUcmFuc2xhdGUpIHtcbiAgICAgICAgICAgICAgICBpZiAocy5zdXBwb3J0LnRyYW5zZm9ybXMzZCkgcy53cmFwcGVyLnRyYW5zZm9ybSgndHJhbnNsYXRlM2QoJyArIHggKyAncHgsICcgKyB5ICsgJ3B4LCAnICsgeiArICdweCknKTtcbiAgICAgICAgICAgICAgICBlbHNlIHMud3JhcHBlci50cmFuc2Zvcm0oJ3RyYW5zbGF0ZSgnICsgeCArICdweCwgJyArIHkgKyAncHgpJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgcy50cmFuc2xhdGUgPSBzLmlzSG9yaXpvbnRhbCgpID8geCA6IHk7XG4gICAgICAgIFxuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgd2UgbmVlZCB0byB1cGRhdGUgcHJvZ3Jlc3NcbiAgICAgICAgICAgIHZhciBwcm9ncmVzcztcbiAgICAgICAgICAgIHZhciB0cmFuc2xhdGVzRGlmZiA9IHMubWF4VHJhbnNsYXRlKCkgLSBzLm1pblRyYW5zbGF0ZSgpO1xuICAgICAgICAgICAgaWYgKHRyYW5zbGF0ZXNEaWZmID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcHJvZ3Jlc3MgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcHJvZ3Jlc3MgPSAodHJhbnNsYXRlIC0gcy5taW5UcmFuc2xhdGUoKSkgLyAodHJhbnNsYXRlc0RpZmYpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHByb2dyZXNzICE9PSBzLnByb2dyZXNzKSB7XG4gICAgICAgICAgICAgICAgcy51cGRhdGVQcm9ncmVzcyh0cmFuc2xhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIGlmICh1cGRhdGVBY3RpdmVJbmRleCkgcy51cGRhdGVBY3RpdmVJbmRleCgpO1xuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmVmZmVjdCAhPT0gJ3NsaWRlJyAmJiBzLmVmZmVjdHNbcy5wYXJhbXMuZWZmZWN0XSkge1xuICAgICAgICAgICAgICAgIHMuZWZmZWN0c1tzLnBhcmFtcy5lZmZlY3RdLnNldFRyYW5zbGF0ZShzLnRyYW5zbGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMucGFyYWxsYXggJiYgcy5wYXJhbGxheCkge1xuICAgICAgICAgICAgICAgIHMucGFyYWxsYXguc2V0VHJhbnNsYXRlKHMudHJhbnNsYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5zY3JvbGxiYXIgJiYgcy5zY3JvbGxiYXIpIHtcbiAgICAgICAgICAgICAgICBzLnNjcm9sbGJhci5zZXRUcmFuc2xhdGUocy50cmFuc2xhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmNvbnRyb2wgJiYgcy5jb250cm9sbGVyKSB7XG4gICAgICAgICAgICAgICAgcy5jb250cm9sbGVyLnNldFRyYW5zbGF0ZShzLnRyYW5zbGF0ZSwgYnlDb250cm9sbGVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHMuZW1pdCgnb25TZXRUcmFuc2xhdGUnLCBzLCBzLnRyYW5zbGF0ZSk7XG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICBzLmdldFRyYW5zbGF0ZSA9IGZ1bmN0aW9uIChlbCwgYXhpcykge1xuICAgICAgICAgICAgdmFyIG1hdHJpeCwgY3VyVHJhbnNmb3JtLCBjdXJTdHlsZSwgdHJhbnNmb3JtTWF0cml4O1xuICAgICAgICBcbiAgICAgICAgICAgIC8vIGF1dG9tYXRpYyBheGlzIGRldGVjdGlvblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBheGlzID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIGF4aXMgPSAneCc7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLnZpcnR1YWxUcmFuc2xhdGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcy5ydGwgPyAtcy50cmFuc2xhdGUgOiBzLnRyYW5zbGF0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBjdXJTdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsLCBudWxsKTtcbiAgICAgICAgICAgIGlmICh3aW5kb3cuV2ViS2l0Q1NTTWF0cml4KSB7XG4gICAgICAgICAgICAgICAgY3VyVHJhbnNmb3JtID0gY3VyU3R5bGUudHJhbnNmb3JtIHx8IGN1clN0eWxlLndlYmtpdFRyYW5zZm9ybTtcbiAgICAgICAgICAgICAgICBpZiAoY3VyVHJhbnNmb3JtLnNwbGl0KCcsJykubGVuZ3RoID4gNikge1xuICAgICAgICAgICAgICAgICAgICBjdXJUcmFuc2Zvcm0gPSBjdXJUcmFuc2Zvcm0uc3BsaXQoJywgJykubWFwKGZ1bmN0aW9uKGEpe1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGEucmVwbGFjZSgnLCcsJy4nKTtcbiAgICAgICAgICAgICAgICAgICAgfSkuam9pbignLCAnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gU29tZSBvbGQgdmVyc2lvbnMgb2YgV2Via2l0IGNob2tlIHdoZW4gJ25vbmUnIGlzIHBhc3NlZDsgcGFzc1xuICAgICAgICAgICAgICAgIC8vIGVtcHR5IHN0cmluZyBpbnN0ZWFkIGluIHRoaXMgY2FzZVxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybU1hdHJpeCA9IG5ldyB3aW5kb3cuV2ViS2l0Q1NTTWF0cml4KGN1clRyYW5zZm9ybSA9PT0gJ25vbmUnID8gJycgOiBjdXJUcmFuc2Zvcm0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtTWF0cml4ID0gY3VyU3R5bGUuTW96VHJhbnNmb3JtIHx8IGN1clN0eWxlLk9UcmFuc2Zvcm0gfHwgY3VyU3R5bGUuTXNUcmFuc2Zvcm0gfHwgY3VyU3R5bGUubXNUcmFuc2Zvcm0gIHx8IGN1clN0eWxlLnRyYW5zZm9ybSB8fCBjdXJTdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCd0cmFuc2Zvcm0nKS5yZXBsYWNlKCd0cmFuc2xhdGUoJywgJ21hdHJpeCgxLCAwLCAwLCAxLCcpO1xuICAgICAgICAgICAgICAgIG1hdHJpeCA9IHRyYW5zZm9ybU1hdHJpeC50b1N0cmluZygpLnNwbGl0KCcsJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgaWYgKGF4aXMgPT09ICd4Jykge1xuICAgICAgICAgICAgICAgIC8vTGF0ZXN0IENocm9tZSBhbmQgd2Via2l0cyBGaXhcbiAgICAgICAgICAgICAgICBpZiAod2luZG93LldlYktpdENTU01hdHJpeClcbiAgICAgICAgICAgICAgICAgICAgY3VyVHJhbnNmb3JtID0gdHJhbnNmb3JtTWF0cml4Lm00MTtcbiAgICAgICAgICAgICAgICAvL0NyYXp5IElFMTAgTWF0cml4XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAobWF0cml4Lmxlbmd0aCA9PT0gMTYpXG4gICAgICAgICAgICAgICAgICAgIGN1clRyYW5zZm9ybSA9IHBhcnNlRmxvYXQobWF0cml4WzEyXSk7XG4gICAgICAgICAgICAgICAgLy9Ob3JtYWwgQnJvd3NlcnNcbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIGN1clRyYW5zZm9ybSA9IHBhcnNlRmxvYXQobWF0cml4WzRdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChheGlzID09PSAneScpIHtcbiAgICAgICAgICAgICAgICAvL0xhdGVzdCBDaHJvbWUgYW5kIHdlYmtpdHMgRml4XG4gICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5XZWJLaXRDU1NNYXRyaXgpXG4gICAgICAgICAgICAgICAgICAgIGN1clRyYW5zZm9ybSA9IHRyYW5zZm9ybU1hdHJpeC5tNDI7XG4gICAgICAgICAgICAgICAgLy9DcmF6eSBJRTEwIE1hdHJpeFxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKG1hdHJpeC5sZW5ndGggPT09IDE2KVxuICAgICAgICAgICAgICAgICAgICBjdXJUcmFuc2Zvcm0gPSBwYXJzZUZsb2F0KG1hdHJpeFsxM10pO1xuICAgICAgICAgICAgICAgIC8vTm9ybWFsIEJyb3dzZXJzXG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICBjdXJUcmFuc2Zvcm0gPSBwYXJzZUZsb2F0KG1hdHJpeFs1XSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocy5ydGwgJiYgY3VyVHJhbnNmb3JtKSBjdXJUcmFuc2Zvcm0gPSAtY3VyVHJhbnNmb3JtO1xuICAgICAgICAgICAgcmV0dXJuIGN1clRyYW5zZm9ybSB8fCAwO1xuICAgICAgICB9O1xuICAgICAgICBzLmdldFdyYXBwZXJUcmFuc2xhdGUgPSBmdW5jdGlvbiAoYXhpcykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBheGlzID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIGF4aXMgPSBzLmlzSG9yaXpvbnRhbCgpID8gJ3gnIDogJ3knO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHMuZ2V0VHJhbnNsYXRlKHMud3JhcHBlclswXSwgYXhpcyk7XG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBPYnNlcnZlclxuICAgICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG4gICAgICAgIHMub2JzZXJ2ZXJzID0gW107XG4gICAgICAgIGZ1bmN0aW9uIGluaXRPYnNlcnZlcih0YXJnZXQsIG9wdGlvbnMpIHtcbiAgICAgICAgICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgICAgICAgICAgLy8gY3JlYXRlIGFuIG9ic2VydmVyIGluc3RhbmNlXG4gICAgICAgICAgICB2YXIgT2JzZXJ2ZXJGdW5jID0gd2luZG93Lk11dGF0aW9uT2JzZXJ2ZXIgfHwgd2luZG93LldlYmtpdE11dGF0aW9uT2JzZXJ2ZXI7XG4gICAgICAgICAgICB2YXIgb2JzZXJ2ZXIgPSBuZXcgT2JzZXJ2ZXJGdW5jKGZ1bmN0aW9uIChtdXRhdGlvbnMpIHtcbiAgICAgICAgICAgICAgICBtdXRhdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAobXV0YXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgcy5vblJlc2l6ZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgcy5lbWl0KCdvbk9ic2VydmVyVXBkYXRlJywgcywgbXV0YXRpb24pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZSh0YXJnZXQsIHtcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB0eXBlb2Ygb3B0aW9ucy5hdHRyaWJ1dGVzID09PSAndW5kZWZpbmVkJyA/IHRydWUgOiBvcHRpb25zLmF0dHJpYnV0ZXMsXG4gICAgICAgICAgICAgICAgY2hpbGRMaXN0OiB0eXBlb2Ygb3B0aW9ucy5jaGlsZExpc3QgPT09ICd1bmRlZmluZWQnID8gdHJ1ZSA6IG9wdGlvbnMuY2hpbGRMaXN0LFxuICAgICAgICAgICAgICAgIGNoYXJhY3RlckRhdGE6IHR5cGVvZiBvcHRpb25zLmNoYXJhY3RlckRhdGEgPT09ICd1bmRlZmluZWQnID8gdHJ1ZSA6IG9wdGlvbnMuY2hhcmFjdGVyRGF0YVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICAgICAgcy5vYnNlcnZlcnMucHVzaChvYnNlcnZlcik7XG4gICAgICAgIH1cbiAgICAgICAgcy5pbml0T2JzZXJ2ZXJzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHMucGFyYW1zLm9ic2VydmVQYXJlbnRzKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNvbnRhaW5lclBhcmVudHMgPSBzLmNvbnRhaW5lci5wYXJlbnRzKCk7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb250YWluZXJQYXJlbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGluaXRPYnNlcnZlcihjb250YWluZXJQYXJlbnRzW2ldKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLy8gT2JzZXJ2ZSBjb250YWluZXJcbiAgICAgICAgICAgIGluaXRPYnNlcnZlcihzLmNvbnRhaW5lclswXSwge2NoaWxkTGlzdDogZmFsc2V9KTtcbiAgICAgICAgXG4gICAgICAgICAgICAvLyBPYnNlcnZlIHdyYXBwZXJcbiAgICAgICAgICAgIGluaXRPYnNlcnZlcihzLndyYXBwZXJbMF0sIHthdHRyaWJ1dGVzOiBmYWxzZX0pO1xuICAgICAgICB9O1xuICAgICAgICBzLmRpc2Nvbm5lY3RPYnNlcnZlcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHMub2JzZXJ2ZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgcy5vYnNlcnZlcnNbaV0uZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcy5vYnNlcnZlcnMgPSBbXTtcbiAgICAgICAgfTtcbiAgICAgICAgLyo9PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgICAgICAgTG9vcFxuICAgICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG4gICAgICAgIC8vIENyZWF0ZSBsb29wZWQgc2xpZGVzXG4gICAgICAgIHMuY3JlYXRlTG9vcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIC8vIFJlbW92ZSBkdXBsaWNhdGVkIHNsaWRlc1xuICAgICAgICAgICAgcy53cmFwcGVyLmNoaWxkcmVuKCcuJyArIHMucGFyYW1zLnNsaWRlQ2xhc3MgKyAnLicgKyBzLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKS5yZW1vdmUoKTtcbiAgICAgICAgXG4gICAgICAgICAgICB2YXIgc2xpZGVzID0gcy53cmFwcGVyLmNoaWxkcmVuKCcuJyArIHMucGFyYW1zLnNsaWRlQ2xhc3MpO1xuICAgICAgICBcbiAgICAgICAgICAgIGlmKHMucGFyYW1zLnNsaWRlc1BlclZpZXcgPT09ICdhdXRvJyAmJiAhcy5wYXJhbXMubG9vcGVkU2xpZGVzKSBzLnBhcmFtcy5sb29wZWRTbGlkZXMgPSBzbGlkZXMubGVuZ3RoO1xuICAgICAgICBcbiAgICAgICAgICAgIHMubG9vcGVkU2xpZGVzID0gcGFyc2VJbnQocy5wYXJhbXMubG9vcGVkU2xpZGVzIHx8IHMucGFyYW1zLnNsaWRlc1BlclZpZXcsIDEwKTtcbiAgICAgICAgICAgIHMubG9vcGVkU2xpZGVzID0gcy5sb29wZWRTbGlkZXMgKyBzLnBhcmFtcy5sb29wQWRkaXRpb25hbFNsaWRlcztcbiAgICAgICAgICAgIGlmIChzLmxvb3BlZFNsaWRlcyA+IHNsaWRlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBzLmxvb3BlZFNsaWRlcyA9IHNsaWRlcy5sZW5ndGg7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgdmFyIHByZXBlbmRTbGlkZXMgPSBbXSwgYXBwZW5kU2xpZGVzID0gW10sIGk7XG4gICAgICAgICAgICBzbGlkZXMuZWFjaChmdW5jdGlvbiAoaW5kZXgsIGVsKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNsaWRlID0gJCh0aGlzKTtcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXggPCBzLmxvb3BlZFNsaWRlcykgYXBwZW5kU2xpZGVzLnB1c2goZWwpO1xuICAgICAgICAgICAgICAgIGlmIChpbmRleCA8IHNsaWRlcy5sZW5ndGggJiYgaW5kZXggPj0gc2xpZGVzLmxlbmd0aCAtIHMubG9vcGVkU2xpZGVzKSBwcmVwZW5kU2xpZGVzLnB1c2goZWwpO1xuICAgICAgICAgICAgICAgIHNsaWRlLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JywgaW5kZXgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgYXBwZW5kU2xpZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgcy53cmFwcGVyLmFwcGVuZCgkKGFwcGVuZFNsaWRlc1tpXS5jbG9uZU5vZGUodHJ1ZSkpLmFkZENsYXNzKHMucGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoaSA9IHByZXBlbmRTbGlkZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgICAgICAgICBzLndyYXBwZXIucHJlcGVuZCgkKHByZXBlbmRTbGlkZXNbaV0uY2xvbmVOb2RlKHRydWUpKS5hZGRDbGFzcyhzLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHMuZGVzdHJveUxvb3AgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBzLndyYXBwZXIuY2hpbGRyZW4oJy4nICsgcy5wYXJhbXMuc2xpZGVDbGFzcyArICcuJyArIHMucGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpLnJlbW92ZSgpO1xuICAgICAgICAgICAgcy5zbGlkZXMucmVtb3ZlQXR0cignZGF0YS1zd2lwZXItc2xpZGUtaW5kZXgnKTtcbiAgICAgICAgfTtcbiAgICAgICAgcy5yZUxvb3AgPSBmdW5jdGlvbiAodXBkYXRlUG9zaXRpb24pIHtcbiAgICAgICAgICAgIHZhciBvbGRJbmRleCA9IHMuYWN0aXZlSW5kZXggLSBzLmxvb3BlZFNsaWRlcztcbiAgICAgICAgICAgIHMuZGVzdHJveUxvb3AoKTtcbiAgICAgICAgICAgIHMuY3JlYXRlTG9vcCgpO1xuICAgICAgICAgICAgcy51cGRhdGVTbGlkZXNTaXplKCk7XG4gICAgICAgICAgICBpZiAodXBkYXRlUG9zaXRpb24pIHtcbiAgICAgICAgICAgICAgICBzLnNsaWRlVG8ob2xkSW5kZXggKyBzLmxvb3BlZFNsaWRlcywgMCwgZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgfTtcbiAgICAgICAgcy5maXhMb29wID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIG5ld0luZGV4O1xuICAgICAgICAgICAgLy9GaXggRm9yIE5lZ2F0aXZlIE92ZXJzbGlkaW5nXG4gICAgICAgICAgICBpZiAocy5hY3RpdmVJbmRleCA8IHMubG9vcGVkU2xpZGVzKSB7XG4gICAgICAgICAgICAgICAgbmV3SW5kZXggPSBzLnNsaWRlcy5sZW5ndGggLSBzLmxvb3BlZFNsaWRlcyAqIDMgKyBzLmFjdGl2ZUluZGV4O1xuICAgICAgICAgICAgICAgIG5ld0luZGV4ID0gbmV3SW5kZXggKyBzLmxvb3BlZFNsaWRlcztcbiAgICAgICAgICAgICAgICBzLnNsaWRlVG8obmV3SW5kZXgsIDAsIGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vRml4IEZvciBQb3NpdGl2ZSBPdmVyc2xpZGluZ1xuICAgICAgICAgICAgZWxzZSBpZiAoKHMucGFyYW1zLnNsaWRlc1BlclZpZXcgPT09ICdhdXRvJyAmJiBzLmFjdGl2ZUluZGV4ID49IHMubG9vcGVkU2xpZGVzICogMikgfHwgKHMuYWN0aXZlSW5kZXggPiBzLnNsaWRlcy5sZW5ndGggLSBzLnBhcmFtcy5zbGlkZXNQZXJWaWV3ICogMikpIHtcbiAgICAgICAgICAgICAgICBuZXdJbmRleCA9IC1zLnNsaWRlcy5sZW5ndGggKyBzLmFjdGl2ZUluZGV4ICsgcy5sb29wZWRTbGlkZXM7XG4gICAgICAgICAgICAgICAgbmV3SW5kZXggPSBuZXdJbmRleCArIHMubG9vcGVkU2xpZGVzO1xuICAgICAgICAgICAgICAgIHMuc2xpZGVUbyhuZXdJbmRleCwgMCwgZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBBcHBlbmQvUHJlcGVuZC9SZW1vdmUgU2xpZGVzXG4gICAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbiAgICAgICAgcy5hcHBlbmRTbGlkZSA9IGZ1bmN0aW9uIChzbGlkZXMpIHtcbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5sb29wKSB7XG4gICAgICAgICAgICAgICAgcy5kZXN0cm95TG9vcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGVvZiBzbGlkZXMgPT09ICdvYmplY3QnICYmIHNsaWRlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNsaWRlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2xpZGVzW2ldKSBzLndyYXBwZXIuYXBwZW5kKHNsaWRlc1tpXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcy53cmFwcGVyLmFwcGVuZChzbGlkZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmxvb3ApIHtcbiAgICAgICAgICAgICAgICBzLmNyZWF0ZUxvb3AoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghKHMucGFyYW1zLm9ic2VydmVyICYmIHMuc3VwcG9ydC5vYnNlcnZlcikpIHtcbiAgICAgICAgICAgICAgICBzLnVwZGF0ZSh0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgcy5wcmVwZW5kU2xpZGUgPSBmdW5jdGlvbiAoc2xpZGVzKSB7XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMubG9vcCkge1xuICAgICAgICAgICAgICAgIHMuZGVzdHJveUxvb3AoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBuZXdBY3RpdmVJbmRleCA9IHMuYWN0aXZlSW5kZXggKyAxO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBzbGlkZXMgPT09ICdvYmplY3QnICYmIHNsaWRlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNsaWRlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2xpZGVzW2ldKSBzLndyYXBwZXIucHJlcGVuZChzbGlkZXNbaV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBuZXdBY3RpdmVJbmRleCA9IHMuYWN0aXZlSW5kZXggKyBzbGlkZXMubGVuZ3RoO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcy53cmFwcGVyLnByZXBlbmQoc2xpZGVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5sb29wKSB7XG4gICAgICAgICAgICAgICAgcy5jcmVhdGVMb29wKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIShzLnBhcmFtcy5vYnNlcnZlciAmJiBzLnN1cHBvcnQub2JzZXJ2ZXIpKSB7XG4gICAgICAgICAgICAgICAgcy51cGRhdGUodHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzLnNsaWRlVG8obmV3QWN0aXZlSW5kZXgsIDAsIGZhbHNlKTtcbiAgICAgICAgfTtcbiAgICAgICAgcy5yZW1vdmVTbGlkZSA9IGZ1bmN0aW9uIChzbGlkZXNJbmRleGVzKSB7XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMubG9vcCkge1xuICAgICAgICAgICAgICAgIHMuZGVzdHJveUxvb3AoKTtcbiAgICAgICAgICAgICAgICBzLnNsaWRlcyA9IHMud3JhcHBlci5jaGlsZHJlbignLicgKyBzLnBhcmFtcy5zbGlkZUNsYXNzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBuZXdBY3RpdmVJbmRleCA9IHMuYWN0aXZlSW5kZXgsXG4gICAgICAgICAgICAgICAgaW5kZXhUb1JlbW92ZTtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygc2xpZGVzSW5kZXhlcyA9PT0gJ29iamVjdCcgJiYgc2xpZGVzSW5kZXhlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNsaWRlc0luZGV4ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgaW5kZXhUb1JlbW92ZSA9IHNsaWRlc0luZGV4ZXNbaV07XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLnNsaWRlc1tpbmRleFRvUmVtb3ZlXSkgcy5zbGlkZXMuZXEoaW5kZXhUb1JlbW92ZSkucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpbmRleFRvUmVtb3ZlIDwgbmV3QWN0aXZlSW5kZXgpIG5ld0FjdGl2ZUluZGV4LS07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG5ld0FjdGl2ZUluZGV4ID0gTWF0aC5tYXgobmV3QWN0aXZlSW5kZXgsIDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaW5kZXhUb1JlbW92ZSA9IHNsaWRlc0luZGV4ZXM7XG4gICAgICAgICAgICAgICAgaWYgKHMuc2xpZGVzW2luZGV4VG9SZW1vdmVdKSBzLnNsaWRlcy5lcShpbmRleFRvUmVtb3ZlKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXhUb1JlbW92ZSA8IG5ld0FjdGl2ZUluZGV4KSBuZXdBY3RpdmVJbmRleC0tO1xuICAgICAgICAgICAgICAgIG5ld0FjdGl2ZUluZGV4ID0gTWF0aC5tYXgobmV3QWN0aXZlSW5kZXgsIDApO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5sb29wKSB7XG4gICAgICAgICAgICAgICAgcy5jcmVhdGVMb29wKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgaWYgKCEocy5wYXJhbXMub2JzZXJ2ZXIgJiYgcy5zdXBwb3J0Lm9ic2VydmVyKSkge1xuICAgICAgICAgICAgICAgIHMudXBkYXRlKHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmxvb3ApIHtcbiAgICAgICAgICAgICAgICBzLnNsaWRlVG8obmV3QWN0aXZlSW5kZXggKyBzLmxvb3BlZFNsaWRlcywgMCwgZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcy5zbGlkZVRvKG5ld0FjdGl2ZUluZGV4LCAwLCBmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB9O1xuICAgICAgICBzLnJlbW92ZUFsbFNsaWRlcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBzbGlkZXNJbmRleGVzID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHMuc2xpZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgc2xpZGVzSW5kZXhlcy5wdXNoKGkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcy5yZW1vdmVTbGlkZShzbGlkZXNJbmRleGVzKTtcbiAgICAgICAgfTtcbiAgICAgICAgXG5cbiAgICAgICAgLyo9PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgICAgICAgRWZmZWN0c1xuICAgICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG4gICAgICAgIHMuZWZmZWN0cyA9IHtcbiAgICAgICAgICAgIGZhZGU6IHtcbiAgICAgICAgICAgICAgICBzZXRUcmFuc2xhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzLnNsaWRlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNsaWRlID0gcy5zbGlkZXMuZXEoaSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgb2Zmc2V0ID0gc2xpZGVbMF0uc3dpcGVyU2xpZGVPZmZzZXQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdHggPSAtb2Zmc2V0O1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzLnBhcmFtcy52aXJ0dWFsVHJhbnNsYXRlKSB0eCA9IHR4IC0gcy50cmFuc2xhdGU7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdHkgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHkgPSB0eDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eCA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc2xpZGVPcGFjaXR5ID0gcy5wYXJhbXMuZmFkZS5jcm9zc0ZhZGUgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNYXRoLm1heCgxIC0gTWF0aC5hYnMoc2xpZGVbMF0ucHJvZ3Jlc3MpLCAwKSA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEgKyBNYXRoLm1pbihNYXRoLm1heChzbGlkZVswXS5wcm9ncmVzcywgLTEpLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNsaWRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IHNsaWRlT3BhY2l0eVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRyYW5zZm9ybSgndHJhbnNsYXRlM2QoJyArIHR4ICsgJ3B4LCAnICsgdHkgKyAncHgsIDBweCknKTtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzZXRUcmFuc2l0aW9uOiBmdW5jdGlvbiAoZHVyYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgcy5zbGlkZXMudHJhbnNpdGlvbihkdXJhdGlvbik7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy52aXJ0dWFsVHJhbnNsYXRlICYmIGR1cmF0aW9uICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZXZlbnRUcmlnZ2VyZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuc2xpZGVzLnRyYW5zaXRpb25FbmQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChldmVudFRyaWdnZXJlZCkgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcykgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50VHJpZ2dlcmVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzLmFuaW1hdGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0cmlnZ2VyRXZlbnRzID0gWyd3ZWJraXRUcmFuc2l0aW9uRW5kJywgJ3RyYW5zaXRpb25lbmQnLCAnb1RyYW5zaXRpb25FbmQnLCAnTVNUcmFuc2l0aW9uRW5kJywgJ21zVHJhbnNpdGlvbkVuZCddO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdHJpZ2dlckV2ZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzLndyYXBwZXIudHJpZ2dlcih0cmlnZ2VyRXZlbnRzW2ldKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmbGlwOiB7XG4gICAgICAgICAgICAgICAgc2V0VHJhbnNsYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcy5zbGlkZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzbGlkZSA9IHMuc2xpZGVzLmVxKGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHByb2dyZXNzID0gc2xpZGVbMF0ucHJvZ3Jlc3M7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuZmxpcC5saW1pdFJvdGF0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZ3Jlc3MgPSBNYXRoLm1heChNYXRoLm1pbihzbGlkZVswXS5wcm9ncmVzcywgMSksIC0xKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvZmZzZXQgPSBzbGlkZVswXS5zd2lwZXJTbGlkZU9mZnNldDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByb3RhdGUgPSAtMTgwICogcHJvZ3Jlc3MsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcm90YXRlWSA9IHJvdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3RhdGVYID0gMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eCA9IC1vZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHkgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHkgPSB0eDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eCA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcm90YXRlWCA9IC1yb3RhdGVZO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdGF0ZVkgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAocy5ydGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3RhdGVZID0gLXJvdGF0ZVk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVbMF0uc3R5bGUuekluZGV4ID0gLU1hdGguYWJzKE1hdGgucm91bmQocHJvZ3Jlc3MpKSArIHMuc2xpZGVzLmxlbmd0aDtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuZmxpcC5zbGlkZVNoYWRvd3MpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL1NldCBzaGFkb3dzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNoYWRvd0JlZm9yZSA9IHMuaXNIb3Jpem9udGFsKCkgPyBzbGlkZS5maW5kKCcuc3dpcGVyLXNsaWRlLXNoYWRvdy1sZWZ0JykgOiBzbGlkZS5maW5kKCcuc3dpcGVyLXNsaWRlLXNoYWRvdy10b3AnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc2hhZG93QWZ0ZXIgPSBzLmlzSG9yaXpvbnRhbCgpID8gc2xpZGUuZmluZCgnLnN3aXBlci1zbGlkZS1zaGFkb3ctcmlnaHQnKSA6IHNsaWRlLmZpbmQoJy5zd2lwZXItc2xpZGUtc2hhZG93LWJvdHRvbScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzaGFkb3dCZWZvcmUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNoYWRvd0JlZm9yZSA9ICQoJzxkaXYgY2xhc3M9XCJzd2lwZXItc2xpZGUtc2hhZG93LScgKyAocy5pc0hvcml6b250YWwoKSA/ICdsZWZ0JyA6ICd0b3AnKSArICdcIj48L2Rpdj4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGUuYXBwZW5kKHNoYWRvd0JlZm9yZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzaGFkb3dBZnRlci5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hhZG93QWZ0ZXIgPSAkKCc8ZGl2IGNsYXNzPVwic3dpcGVyLXNsaWRlLXNoYWRvdy0nICsgKHMuaXNIb3Jpem9udGFsKCkgPyAncmlnaHQnIDogJ2JvdHRvbScpICsgJ1wiPjwvZGl2PicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbGlkZS5hcHBlbmQoc2hhZG93QWZ0ZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2hhZG93QmVmb3JlLmxlbmd0aCkgc2hhZG93QmVmb3JlWzBdLnN0eWxlLm9wYWNpdHkgPSBNYXRoLm1heCgtcHJvZ3Jlc3MsIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzaGFkb3dBZnRlci5sZW5ndGgpIHNoYWRvd0FmdGVyWzBdLnN0eWxlLm9wYWNpdHkgPSBNYXRoLm1heChwcm9ncmVzcywgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAudHJhbnNmb3JtKCd0cmFuc2xhdGUzZCgnICsgdHggKyAncHgsICcgKyB0eSArICdweCwgMHB4KSByb3RhdGVYKCcgKyByb3RhdGVYICsgJ2RlZykgcm90YXRlWSgnICsgcm90YXRlWSArICdkZWcpJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHNldFRyYW5zaXRpb246IGZ1bmN0aW9uIChkdXJhdGlvbikge1xuICAgICAgICAgICAgICAgICAgICBzLnNsaWRlcy50cmFuc2l0aW9uKGR1cmF0aW9uKS5maW5kKCcuc3dpcGVyLXNsaWRlLXNoYWRvdy10b3AsIC5zd2lwZXItc2xpZGUtc2hhZG93LXJpZ2h0LCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1ib3R0b20sIC5zd2lwZXItc2xpZGUtc2hhZG93LWxlZnQnKS50cmFuc2l0aW9uKGR1cmF0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLnZpcnR1YWxUcmFuc2xhdGUgJiYgZHVyYXRpb24gIT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBldmVudFRyaWdnZXJlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5zbGlkZXMuZXEocy5hY3RpdmVJbmRleCkudHJhbnNpdGlvbkVuZChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV2ZW50VHJpZ2dlcmVkKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEkKHRoaXMpLmhhc0NsYXNzKHMucGFyYW1zLnNsaWRlQWN0aXZlQ2xhc3MpKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRUcmlnZ2VyZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMuYW5pbWF0aW5nID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRyaWdnZXJFdmVudHMgPSBbJ3dlYmtpdFRyYW5zaXRpb25FbmQnLCAndHJhbnNpdGlvbmVuZCcsICdvVHJhbnNpdGlvbkVuZCcsICdNU1RyYW5zaXRpb25FbmQnLCAnbXNUcmFuc2l0aW9uRW5kJ107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0cmlnZ2VyRXZlbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMud3JhcHBlci50cmlnZ2VyKHRyaWdnZXJFdmVudHNbaV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGN1YmU6IHtcbiAgICAgICAgICAgICAgICBzZXRUcmFuc2xhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHdyYXBwZXJSb3RhdGUgPSAwLCBjdWJlU2hhZG93O1xuICAgICAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuY3ViZS5zaGFkb3cpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3ViZVNoYWRvdyA9IHMud3JhcHBlci5maW5kKCcuc3dpcGVyLWN1YmUtc2hhZG93Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGN1YmVTaGFkb3cubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1YmVTaGFkb3cgPSAkKCc8ZGl2IGNsYXNzPVwic3dpcGVyLWN1YmUtc2hhZG93XCI+PC9kaXY+Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMud3JhcHBlci5hcHBlbmQoY3ViZVNoYWRvdyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1YmVTaGFkb3cuY3NzKHtoZWlnaHQ6IHMud2lkdGggKyAncHgnfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdWJlU2hhZG93ID0gcy5jb250YWluZXIuZmluZCgnLnN3aXBlci1jdWJlLXNoYWRvdycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjdWJlU2hhZG93Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdWJlU2hhZG93ID0gJCgnPGRpdiBjbGFzcz1cInN3aXBlci1jdWJlLXNoYWRvd1wiPjwvZGl2PicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzLmNvbnRhaW5lci5hcHBlbmQoY3ViZVNoYWRvdyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcy5zbGlkZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzbGlkZSA9IHMuc2xpZGVzLmVxKGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNsaWRlQW5nbGUgPSBpICogOTA7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcm91bmQgPSBNYXRoLmZsb29yKHNsaWRlQW5nbGUgLyAzNjApO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHMucnRsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVBbmdsZSA9IC1zbGlkZUFuZ2xlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdW5kID0gTWF0aC5mbG9vcigtc2xpZGVBbmdsZSAvIDM2MCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcHJvZ3Jlc3MgPSBNYXRoLm1heChNYXRoLm1pbihzbGlkZVswXS5wcm9ncmVzcywgMSksIC0xKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0eCA9IDAsIHR5ID0gMCwgdHogPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGkgJSA0ID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHggPSAtIHJvdW5kICogNCAqIHMuc2l6ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eiA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICgoaSAtIDEpICUgNCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR4ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eiA9IC0gcm91bmQgKiA0ICogcy5zaXplO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoKGkgLSAyKSAlIDQgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eCA9IHMuc2l6ZSArIHJvdW5kICogNCAqIHMuc2l6ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eiA9IHMuc2l6ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKChpIC0gMykgJSA0ID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHggPSAtIHMuc2l6ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eiA9IDMgKiBzLnNpemUgKyBzLnNpemUgKiA0ICogcm91bmQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocy5ydGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eCA9IC10eDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXMuaXNIb3Jpem9udGFsKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eSA9IHR4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR4ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdHJhbnNmb3JtID0gJ3JvdGF0ZVgoJyArIChzLmlzSG9yaXpvbnRhbCgpID8gMCA6IC1zbGlkZUFuZ2xlKSArICdkZWcpIHJvdGF0ZVkoJyArIChzLmlzSG9yaXpvbnRhbCgpID8gc2xpZGVBbmdsZSA6IDApICsgJ2RlZykgdHJhbnNsYXRlM2QoJyArIHR4ICsgJ3B4LCAnICsgdHkgKyAncHgsICcgKyB0eiArICdweCknO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByb2dyZXNzIDw9IDEgJiYgcHJvZ3Jlc3MgPiAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdyYXBwZXJSb3RhdGUgPSBpICogOTAgKyBwcm9ncmVzcyAqIDkwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzLnJ0bCkgd3JhcHBlclJvdGF0ZSA9IC1pICogOTAgLSBwcm9ncmVzcyAqIDkwO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGUudHJhbnNmb3JtKHRyYW5zZm9ybSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuY3ViZS5zbGlkZVNoYWRvd3MpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL1NldCBzaGFkb3dzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNoYWRvd0JlZm9yZSA9IHMuaXNIb3Jpem9udGFsKCkgPyBzbGlkZS5maW5kKCcuc3dpcGVyLXNsaWRlLXNoYWRvdy1sZWZ0JykgOiBzbGlkZS5maW5kKCcuc3dpcGVyLXNsaWRlLXNoYWRvdy10b3AnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc2hhZG93QWZ0ZXIgPSBzLmlzSG9yaXpvbnRhbCgpID8gc2xpZGUuZmluZCgnLnN3aXBlci1zbGlkZS1zaGFkb3ctcmlnaHQnKSA6IHNsaWRlLmZpbmQoJy5zd2lwZXItc2xpZGUtc2hhZG93LWJvdHRvbScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzaGFkb3dCZWZvcmUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNoYWRvd0JlZm9yZSA9ICQoJzxkaXYgY2xhc3M9XCJzd2lwZXItc2xpZGUtc2hhZG93LScgKyAocy5pc0hvcml6b250YWwoKSA/ICdsZWZ0JyA6ICd0b3AnKSArICdcIj48L2Rpdj4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGUuYXBwZW5kKHNoYWRvd0JlZm9yZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzaGFkb3dBZnRlci5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hhZG93QWZ0ZXIgPSAkKCc8ZGl2IGNsYXNzPVwic3dpcGVyLXNsaWRlLXNoYWRvdy0nICsgKHMuaXNIb3Jpem9udGFsKCkgPyAncmlnaHQnIDogJ2JvdHRvbScpICsgJ1wiPjwvZGl2PicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbGlkZS5hcHBlbmQoc2hhZG93QWZ0ZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2hhZG93QmVmb3JlLmxlbmd0aCkgc2hhZG93QmVmb3JlWzBdLnN0eWxlLm9wYWNpdHkgPSBNYXRoLm1heCgtcHJvZ3Jlc3MsIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzaGFkb3dBZnRlci5sZW5ndGgpIHNoYWRvd0FmdGVyWzBdLnN0eWxlLm9wYWNpdHkgPSBNYXRoLm1heChwcm9ncmVzcywgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcy53cmFwcGVyLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAnLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luJzogJzUwJSA1MCUgLScgKyAocy5zaXplIC8gMikgKyAncHgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJy1tb3otdHJhbnNmb3JtLW9yaWdpbic6ICc1MCUgNTAlIC0nICsgKHMuc2l6ZSAvIDIpICsgJ3B4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICctbXMtdHJhbnNmb3JtLW9yaWdpbic6ICc1MCUgNTAlIC0nICsgKHMuc2l6ZSAvIDIpICsgJ3B4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICd0cmFuc2Zvcm0tb3JpZ2luJzogJzUwJSA1MCUgLScgKyAocy5zaXplIC8gMikgKyAncHgnXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLmN1YmUuc2hhZG93KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocy5pc0hvcml6b250YWwoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1YmVTaGFkb3cudHJhbnNmb3JtKCd0cmFuc2xhdGUzZCgwcHgsICcgKyAocy53aWR0aCAvIDIgKyBzLnBhcmFtcy5jdWJlLnNoYWRvd09mZnNldCkgKyAncHgsICcgKyAoLXMud2lkdGggLyAyKSArICdweCkgcm90YXRlWCg5MGRlZykgcm90YXRlWigwZGVnKSBzY2FsZSgnICsgKHMucGFyYW1zLmN1YmUuc2hhZG93U2NhbGUpICsgJyknKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzaGFkb3dBbmdsZSA9IE1hdGguYWJzKHdyYXBwZXJSb3RhdGUpIC0gTWF0aC5mbG9vcihNYXRoLmFicyh3cmFwcGVyUm90YXRlKSAvIDkwKSAqIDkwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtdWx0aXBsaWVyID0gMS41IC0gKE1hdGguc2luKHNoYWRvd0FuZ2xlICogMiAqIE1hdGguUEkgLyAzNjApIC8gMiArIE1hdGguY29zKHNoYWRvd0FuZ2xlICogMiAqIE1hdGguUEkgLyAzNjApIC8gMik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNjYWxlMSA9IHMucGFyYW1zLmN1YmUuc2hhZG93U2NhbGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjYWxlMiA9IHMucGFyYW1zLmN1YmUuc2hhZG93U2NhbGUgLyBtdWx0aXBsaWVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQgPSBzLnBhcmFtcy5jdWJlLnNoYWRvd09mZnNldDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdWJlU2hhZG93LnRyYW5zZm9ybSgnc2NhbGUzZCgnICsgc2NhbGUxICsgJywgMSwgJyArIHNjYWxlMiArICcpIHRyYW5zbGF0ZTNkKDBweCwgJyArIChzLmhlaWdodCAvIDIgKyBvZmZzZXQpICsgJ3B4LCAnICsgKC1zLmhlaWdodCAvIDIgLyBzY2FsZTIpICsgJ3B4KSByb3RhdGVYKC05MGRlZyknKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB2YXIgekZhY3RvciA9IChzLmlzU2FmYXJpIHx8IHMuaXNVaVdlYlZpZXcpID8gKC1zLnNpemUgLyAyKSA6IDA7XG4gICAgICAgICAgICAgICAgICAgIHMud3JhcHBlci50cmFuc2Zvcm0oJ3RyYW5zbGF0ZTNkKDBweCwwLCcgKyB6RmFjdG9yICsgJ3B4KSByb3RhdGVYKCcgKyAocy5pc0hvcml6b250YWwoKSA/IDAgOiB3cmFwcGVyUm90YXRlKSArICdkZWcpIHJvdGF0ZVkoJyArIChzLmlzSG9yaXpvbnRhbCgpID8gLXdyYXBwZXJSb3RhdGUgOiAwKSArICdkZWcpJyk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzZXRUcmFuc2l0aW9uOiBmdW5jdGlvbiAoZHVyYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgcy5zbGlkZXMudHJhbnNpdGlvbihkdXJhdGlvbikuZmluZCgnLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wLCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1yaWdodCwgLnN3aXBlci1zbGlkZS1zaGFkb3ctYm90dG9tLCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1sZWZ0JykudHJhbnNpdGlvbihkdXJhdGlvbik7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5jdWJlLnNoYWRvdyAmJiAhcy5pc0hvcml6b250YWwoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5jb250YWluZXIuZmluZCgnLnN3aXBlci1jdWJlLXNoYWRvdycpLnRyYW5zaXRpb24oZHVyYXRpb24pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvdmVyZmxvdzoge1xuICAgICAgICAgICAgICAgIHNldFRyYW5zbGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdHJhbnNmb3JtID0gcy50cmFuc2xhdGU7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjZW50ZXIgPSBzLmlzSG9yaXpvbnRhbCgpID8gLXRyYW5zZm9ybSArIHMud2lkdGggLyAyIDogLXRyYW5zZm9ybSArIHMuaGVpZ2h0IC8gMjtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJvdGF0ZSA9IHMuaXNIb3Jpem9udGFsKCkgPyBzLnBhcmFtcy5jb3ZlcmZsb3cucm90YXRlOiAtcy5wYXJhbXMuY292ZXJmbG93LnJvdGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRyYW5zbGF0ZSA9IHMucGFyYW1zLmNvdmVyZmxvdy5kZXB0aDtcbiAgICAgICAgICAgICAgICAgICAgLy9FYWNoIHNsaWRlIG9mZnNldCBmcm9tIGNlbnRlclxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuZ3RoID0gcy5zbGlkZXMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzbGlkZSA9IHMuc2xpZGVzLmVxKGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNsaWRlU2l6ZSA9IHMuc2xpZGVzU2l6ZXNHcmlkW2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNsaWRlT2Zmc2V0ID0gc2xpZGVbMF0uc3dpcGVyU2xpZGVPZmZzZXQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgb2Zmc2V0TXVsdGlwbGllciA9IChjZW50ZXIgLSBzbGlkZU9mZnNldCAtIHNsaWRlU2l6ZSAvIDIpIC8gc2xpZGVTaXplICogcy5wYXJhbXMuY292ZXJmbG93Lm1vZGlmaWVyO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByb3RhdGVZID0gcy5pc0hvcml6b250YWwoKSA/IHJvdGF0ZSAqIG9mZnNldE11bHRpcGxpZXIgOiAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJvdGF0ZVggPSBzLmlzSG9yaXpvbnRhbCgpID8gMCA6IHJvdGF0ZSAqIG9mZnNldE11bHRpcGxpZXI7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB2YXIgcm90YXRlWiA9IDBcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0cmFuc2xhdGVaID0gLXRyYW5zbGF0ZSAqIE1hdGguYWJzKG9mZnNldE11bHRpcGxpZXIpO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0cmFuc2xhdGVZID0gcy5pc0hvcml6b250YWwoKSA/IDAgOiBzLnBhcmFtcy5jb3ZlcmZsb3cuc3RyZXRjaCAqIChvZmZzZXRNdWx0aXBsaWVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0cmFuc2xhdGVYID0gcy5pc0hvcml6b250YWwoKSA/IHMucGFyYW1zLmNvdmVyZmxvdy5zdHJldGNoICogKG9mZnNldE11bHRpcGxpZXIpIDogMDtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAvL0ZpeCBmb3IgdWx0cmEgc21hbGwgdmFsdWVzXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoTWF0aC5hYnModHJhbnNsYXRlWCkgPCAwLjAwMSkgdHJhbnNsYXRlWCA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoTWF0aC5hYnModHJhbnNsYXRlWSkgPCAwLjAwMSkgdHJhbnNsYXRlWSA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoTWF0aC5hYnModHJhbnNsYXRlWikgPCAwLjAwMSkgdHJhbnNsYXRlWiA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoTWF0aC5hYnMocm90YXRlWSkgPCAwLjAwMSkgcm90YXRlWSA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoTWF0aC5hYnMocm90YXRlWCkgPCAwLjAwMSkgcm90YXRlWCA9IDA7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNsaWRlVHJhbnNmb3JtID0gJ3RyYW5zbGF0ZTNkKCcgKyB0cmFuc2xhdGVYICsgJ3B4LCcgKyB0cmFuc2xhdGVZICsgJ3B4LCcgKyB0cmFuc2xhdGVaICsgJ3B4KSAgcm90YXRlWCgnICsgcm90YXRlWCArICdkZWcpIHJvdGF0ZVkoJyArIHJvdGF0ZVkgKyAnZGVnKSc7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGUudHJhbnNmb3JtKHNsaWRlVHJhbnNmb3JtKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNsaWRlWzBdLnN0eWxlLnpJbmRleCA9IC1NYXRoLmFicyhNYXRoLnJvdW5kKG9mZnNldE11bHRpcGxpZXIpKSArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuY292ZXJmbG93LnNsaWRlU2hhZG93cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vU2V0IHNoYWRvd3NcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc2hhZG93QmVmb3JlID0gcy5pc0hvcml6b250YWwoKSA/IHNsaWRlLmZpbmQoJy5zd2lwZXItc2xpZGUtc2hhZG93LWxlZnQnKSA6IHNsaWRlLmZpbmQoJy5zd2lwZXItc2xpZGUtc2hhZG93LXRvcCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzaGFkb3dBZnRlciA9IHMuaXNIb3Jpem9udGFsKCkgPyBzbGlkZS5maW5kKCcuc3dpcGVyLXNsaWRlLXNoYWRvdy1yaWdodCcpIDogc2xpZGUuZmluZCgnLnN3aXBlci1zbGlkZS1zaGFkb3ctYm90dG9tJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNoYWRvd0JlZm9yZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hhZG93QmVmb3JlID0gJCgnPGRpdiBjbGFzcz1cInN3aXBlci1zbGlkZS1zaGFkb3ctJyArIChzLmlzSG9yaXpvbnRhbCgpID8gJ2xlZnQnIDogJ3RvcCcpICsgJ1wiPjwvZGl2PicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbGlkZS5hcHBlbmQoc2hhZG93QmVmb3JlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNoYWRvd0FmdGVyLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaGFkb3dBZnRlciA9ICQoJzxkaXYgY2xhc3M9XCJzd2lwZXItc2xpZGUtc2hhZG93LScgKyAocy5pc0hvcml6b250YWwoKSA/ICdyaWdodCcgOiAnYm90dG9tJykgKyAnXCI+PC9kaXY+Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNsaWRlLmFwcGVuZChzaGFkb3dBZnRlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzaGFkb3dCZWZvcmUubGVuZ3RoKSBzaGFkb3dCZWZvcmVbMF0uc3R5bGUub3BhY2l0eSA9IG9mZnNldE11bHRpcGxpZXIgPiAwID8gb2Zmc2V0TXVsdGlwbGllciA6IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNoYWRvd0FmdGVyLmxlbmd0aCkgc2hhZG93QWZ0ZXJbMF0uc3R5bGUub3BhY2l0eSA9ICgtb2Zmc2V0TXVsdGlwbGllcikgPiAwID8gLW9mZnNldE11bHRpcGxpZXIgOiAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAvL1NldCBjb3JyZWN0IHBlcnNwZWN0aXZlIGZvciBJRTEwXG4gICAgICAgICAgICAgICAgICAgIGlmIChzLmJyb3dzZXIuaWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB3cyA9IHMud3JhcHBlclswXS5zdHlsZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdzLnBlcnNwZWN0aXZlT3JpZ2luID0gY2VudGVyICsgJ3B4IDUwJSc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHNldFRyYW5zaXRpb246IGZ1bmN0aW9uIChkdXJhdGlvbikge1xuICAgICAgICAgICAgICAgICAgICBzLnNsaWRlcy50cmFuc2l0aW9uKGR1cmF0aW9uKS5maW5kKCcuc3dpcGVyLXNsaWRlLXNoYWRvdy10b3AsIC5zd2lwZXItc2xpZGUtc2hhZG93LXJpZ2h0LCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1ib3R0b20sIC5zd2lwZXItc2xpZGUtc2hhZG93LWxlZnQnKS50cmFuc2l0aW9uKGR1cmF0aW9uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIFxuXG4gICAgICAgIC8qPT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICAgICAgIEltYWdlcyBMYXp5IExvYWRpbmdcbiAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgICAgICBzLmxhenkgPSB7XG4gICAgICAgICAgICBpbml0aWFsSW1hZ2VMb2FkZWQ6IGZhbHNlLFxuICAgICAgICAgICAgbG9hZEltYWdlSW5TbGlkZTogZnVuY3Rpb24gKGluZGV4LCBsb2FkSW5EdXBsaWNhdGUpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGluZGV4ID09PSAndW5kZWZpbmVkJykgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbG9hZEluRHVwbGljYXRlID09PSAndW5kZWZpbmVkJykgbG9hZEluRHVwbGljYXRlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBpZiAocy5zbGlkZXMubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIHZhciBzbGlkZSA9IHMuc2xpZGVzLmVxKGluZGV4KTtcbiAgICAgICAgICAgICAgICB2YXIgaW1nID0gc2xpZGUuZmluZCgnLicgKyBzLnBhcmFtcy5sYXp5TG9hZGluZ0NsYXNzICsgJzpub3QoLicgKyBzLnBhcmFtcy5sYXp5U3RhdHVzTG9hZGVkQ2xhc3MgKyAnKTpub3QoLicgKyBzLnBhcmFtcy5sYXp5U3RhdHVzTG9hZGluZ0NsYXNzICsgJyknKTtcbiAgICAgICAgICAgICAgICBpZiAoc2xpZGUuaGFzQ2xhc3Mocy5wYXJhbXMubGF6eUxvYWRpbmdDbGFzcykgJiYgIXNsaWRlLmhhc0NsYXNzKHMucGFyYW1zLmxhenlTdGF0dXNMb2FkZWRDbGFzcykgJiYgIXNsaWRlLmhhc0NsYXNzKHMucGFyYW1zLmxhenlTdGF0dXNMb2FkaW5nQ2xhc3MpKSB7XG4gICAgICAgICAgICAgICAgICAgIGltZyA9IGltZy5hZGQoc2xpZGVbMF0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoaW1nLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICBpbWcuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBfaW1nID0gJCh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgX2ltZy5hZGRDbGFzcyhzLnBhcmFtcy5sYXp5U3RhdHVzTG9hZGluZ0NsYXNzKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGJhY2tncm91bmQgPSBfaW1nLmF0dHIoJ2RhdGEtYmFja2dyb3VuZCcpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgc3JjID0gX2ltZy5hdHRyKCdkYXRhLXNyYycpLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3Jjc2V0ID0gX2ltZy5hdHRyKCdkYXRhLXNyY3NldCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZXMgPSBfaW1nLmF0dHIoJ2RhdGEtc2l6ZXMnKTtcbiAgICAgICAgICAgICAgICAgICAgcy5sb2FkSW1hZ2UoX2ltZ1swXSwgKHNyYyB8fCBiYWNrZ3JvdW5kKSwgc3Jjc2V0LCBzaXplcywgZmFsc2UsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcyA9PT0gJ3VuZGVmaW5lZCcgfHwgcyA9PT0gbnVsbCB8fCAhcykgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGJhY2tncm91bmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaW1nLmNzcygnYmFja2dyb3VuZC1pbWFnZScsICd1cmwoXCInICsgYmFja2dyb3VuZCArICdcIiknKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaW1nLnJlbW92ZUF0dHIoJ2RhdGEtYmFja2dyb3VuZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNyY3NldCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaW1nLmF0dHIoJ3NyY3NldCcsIHNyY3NldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pbWcucmVtb3ZlQXR0cignZGF0YS1zcmNzZXQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNpemVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pbWcuYXR0cignc2l6ZXMnLCBzaXplcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pbWcucmVtb3ZlQXR0cignZGF0YS1zaXplcycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3JjKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pbWcuYXR0cignc3JjJywgc3JjKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2ltZy5yZW1vdmVBdHRyKCdkYXRhLXNyYycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgX2ltZy5hZGRDbGFzcyhzLnBhcmFtcy5sYXp5U3RhdHVzTG9hZGVkQ2xhc3MpLnJlbW92ZUNsYXNzKHMucGFyYW1zLmxhenlTdGF0dXNMb2FkaW5nQ2xhc3MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGUuZmluZCgnLicgKyBzLnBhcmFtcy5sYXp5UHJlbG9hZGVyQ2xhc3MgKyAnLCAuJyArIHMucGFyYW1zLnByZWxvYWRlckNsYXNzKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5sb29wICYmIGxvYWRJbkR1cGxpY2F0ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzbGlkZU9yaWdpbmFsSW5kZXggPSBzbGlkZS5hdHRyKCdkYXRhLXN3aXBlci1zbGlkZS1pbmRleCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzbGlkZS5oYXNDbGFzcyhzLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgb3JpZ2luYWxTbGlkZSA9IHMud3JhcHBlci5jaGlsZHJlbignW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVwiJyArIHNsaWRlT3JpZ2luYWxJbmRleCArICdcIl06bm90KC4nICsgcy5wYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcyArICcpJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMubGF6eS5sb2FkSW1hZ2VJblNsaWRlKG9yaWdpbmFsU2xpZGUuaW5kZXgoKSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGR1cGxpY2F0ZWRTbGlkZSA9IHMud3JhcHBlci5jaGlsZHJlbignLicgKyBzLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzICsgJ1tkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cIicgKyBzbGlkZU9yaWdpbmFsSW5kZXggKyAnXCJdJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMubGF6eS5sb2FkSW1hZ2VJblNsaWRlKGR1cGxpY2F0ZWRTbGlkZS5pbmRleCgpLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcy5lbWl0KCdvbkxhenlJbWFnZVJlYWR5Jywgcywgc2xpZGVbMF0sIF9pbWdbMF0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIHMuZW1pdCgnb25MYXp5SW1hZ2VMb2FkJywgcywgc2xpZGVbMF0sIF9pbWdbMF0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBsb2FkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGk7XG4gICAgICAgICAgICAgICAgdmFyIHNsaWRlc1BlclZpZXcgPSBzLnBhcmFtcy5zbGlkZXNQZXJWaWV3O1xuICAgICAgICAgICAgICAgIGlmIChzbGlkZXNQZXJWaWV3ID09PSAnYXV0bycpIHtcbiAgICAgICAgICAgICAgICAgICAgc2xpZGVzUGVyVmlldyA9IDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghcy5sYXp5LmluaXRpYWxJbWFnZUxvYWRlZCkgcy5sYXp5LmluaXRpYWxJbWFnZUxvYWRlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLndhdGNoU2xpZGVzVmlzaWJpbGl0eSkge1xuICAgICAgICAgICAgICAgICAgICBzLndyYXBwZXIuY2hpbGRyZW4oJy4nICsgcy5wYXJhbXMuc2xpZGVWaXNpYmxlQ2xhc3MpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5sYXp5LmxvYWRJbWFnZUluU2xpZGUoJCh0aGlzKS5pbmRleCgpKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2xpZGVzUGVyVmlldyA+IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IHMuYWN0aXZlSW5kZXg7IGkgPCBzLmFjdGl2ZUluZGV4ICsgc2xpZGVzUGVyVmlldyA7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzLnNsaWRlc1tpXSkgcy5sYXp5LmxvYWRJbWFnZUluU2xpZGUoaSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLmxhenkubG9hZEltYWdlSW5TbGlkZShzLmFjdGl2ZUluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMubGF6eUxvYWRpbmdJblByZXZOZXh0KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzbGlkZXNQZXJWaWV3ID4gMSB8fCAocy5wYXJhbXMubGF6eUxvYWRpbmdJblByZXZOZXh0QW1vdW50ICYmIHMucGFyYW1zLmxhenlMb2FkaW5nSW5QcmV2TmV4dEFtb3VudCA+IDEpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYW1vdW50ID0gcy5wYXJhbXMubGF6eUxvYWRpbmdJblByZXZOZXh0QW1vdW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNwdiA9IHNsaWRlc1BlclZpZXc7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWF4SW5kZXggPSBNYXRoLm1pbihzLmFjdGl2ZUluZGV4ICsgc3B2ICsgTWF0aC5tYXgoYW1vdW50LCBzcHYpLCBzLnNsaWRlcy5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1pbkluZGV4ID0gTWF0aC5tYXgocy5hY3RpdmVJbmRleCAtIE1hdGgubWF4KHNwdiwgYW1vdW50KSwgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBOZXh0IFNsaWRlc1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gcy5hY3RpdmVJbmRleCArIHNsaWRlc1BlclZpZXc7IGkgPCBtYXhJbmRleDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHMuc2xpZGVzW2ldKSBzLmxhenkubG9hZEltYWdlSW5TbGlkZShpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFByZXYgU2xpZGVzXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGkgPSBtaW5JbmRleDsgaSA8IHMuYWN0aXZlSW5kZXggOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocy5zbGlkZXNbaV0pIHMubGF6eS5sb2FkSW1hZ2VJblNsaWRlKGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG5leHRTbGlkZSA9IHMud3JhcHBlci5jaGlsZHJlbignLicgKyBzLnBhcmFtcy5zbGlkZU5leHRDbGFzcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobmV4dFNsaWRlLmxlbmd0aCA+IDApIHMubGF6eS5sb2FkSW1hZ2VJblNsaWRlKG5leHRTbGlkZS5pbmRleCgpKTtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcHJldlNsaWRlID0gcy53cmFwcGVyLmNoaWxkcmVuKCcuJyArIHMucGFyYW1zLnNsaWRlUHJldkNsYXNzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwcmV2U2xpZGUubGVuZ3RoID4gMCkgcy5sYXp5LmxvYWRJbWFnZUluU2xpZGUocHJldlNsaWRlLmluZGV4KCkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uVHJhbnNpdGlvblN0YXJ0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLmxhenlMb2FkaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5sYXp5TG9hZGluZ09uVHJhbnNpdGlvblN0YXJ0IHx8ICghcy5wYXJhbXMubGF6eUxvYWRpbmdPblRyYW5zaXRpb25TdGFydCAmJiAhcy5sYXp5LmluaXRpYWxJbWFnZUxvYWRlZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMubGF6eS5sb2FkKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25UcmFuc2l0aW9uRW5kOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLmxhenlMb2FkaW5nICYmICFzLnBhcmFtcy5sYXp5TG9hZGluZ09uVHJhbnNpdGlvblN0YXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgIHMubGF6eS5sb2FkKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBcblxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBTY3JvbGxiYXJcbiAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgICAgICBzLnNjcm9sbGJhciA9IHtcbiAgICAgICAgICAgIGlzVG91Y2hlZDogZmFsc2UsXG4gICAgICAgICAgICBzZXREcmFnUG9zaXRpb246IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNiID0gcy5zY3JvbGxiYXI7XG4gICAgICAgICAgICAgICAgdmFyIHggPSAwLCB5ID0gMDtcbiAgICAgICAgICAgICAgICB2YXIgdHJhbnNsYXRlO1xuICAgICAgICAgICAgICAgIHZhciBwb2ludGVyUG9zaXRpb24gPSBzLmlzSG9yaXpvbnRhbCgpID9cbiAgICAgICAgICAgICAgICAgICAgKChlLnR5cGUgPT09ICd0b3VjaHN0YXJ0JyB8fCBlLnR5cGUgPT09ICd0b3VjaG1vdmUnKSA/IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWCA6IGUucGFnZVggfHwgZS5jbGllbnRYKSA6XG4gICAgICAgICAgICAgICAgICAgICgoZS50eXBlID09PSAndG91Y2hzdGFydCcgfHwgZS50eXBlID09PSAndG91Y2htb3ZlJykgPyBlLnRhcmdldFRvdWNoZXNbMF0ucGFnZVkgOiBlLnBhZ2VZIHx8IGUuY2xpZW50WSkgO1xuICAgICAgICAgICAgICAgIHZhciBwb3NpdGlvbiA9IChwb2ludGVyUG9zaXRpb24pIC0gc2IudHJhY2sub2Zmc2V0KClbcy5pc0hvcml6b250YWwoKSA/ICdsZWZ0JyA6ICd0b3AnXSAtIHNiLmRyYWdTaXplIC8gMjtcbiAgICAgICAgICAgICAgICB2YXIgcG9zaXRpb25NaW4gPSAtcy5taW5UcmFuc2xhdGUoKSAqIHNiLm1vdmVEaXZpZGVyO1xuICAgICAgICAgICAgICAgIHZhciBwb3NpdGlvbk1heCA9IC1zLm1heFRyYW5zbGF0ZSgpICogc2IubW92ZURpdmlkZXI7XG4gICAgICAgICAgICAgICAgaWYgKHBvc2l0aW9uIDwgcG9zaXRpb25NaW4pIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb24gPSBwb3NpdGlvbk1pbjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAocG9zaXRpb24gPiBwb3NpdGlvbk1heCkge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbiA9IHBvc2l0aW9uTWF4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBwb3NpdGlvbiA9IC1wb3NpdGlvbiAvIHNiLm1vdmVEaXZpZGVyO1xuICAgICAgICAgICAgICAgIHMudXBkYXRlUHJvZ3Jlc3MocG9zaXRpb24pO1xuICAgICAgICAgICAgICAgIHMuc2V0V3JhcHBlclRyYW5zbGF0ZShwb3NpdGlvbiwgdHJ1ZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZHJhZ1N0YXJ0OiBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIHZhciBzYiA9IHMuc2Nyb2xsYmFyO1xuICAgICAgICAgICAgICAgIHNiLmlzVG91Y2hlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIHNiLnNldERyYWdQb3NpdGlvbihlKTtcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoc2IuZHJhZ1RpbWVvdXQpO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICBzYi50cmFjay50cmFuc2l0aW9uKDApO1xuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5zY3JvbGxiYXJIaWRlKSB7XG4gICAgICAgICAgICAgICAgICAgIHNiLnRyYWNrLmNzcygnb3BhY2l0eScsIDEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzLndyYXBwZXIudHJhbnNpdGlvbigxMDApO1xuICAgICAgICAgICAgICAgIHNiLmRyYWcudHJhbnNpdGlvbigxMDApO1xuICAgICAgICAgICAgICAgIHMuZW1pdCgnb25TY3JvbGxiYXJEcmFnU3RhcnQnLCBzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkcmFnTW92ZTogZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgc2IgPSBzLnNjcm9sbGJhcjtcbiAgICAgICAgICAgICAgICBpZiAoIXNiLmlzVG91Y2hlZCkgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGlmIChlLnByZXZlbnREZWZhdWx0KSBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgZWxzZSBlLnJldHVyblZhbHVlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgc2Iuc2V0RHJhZ1Bvc2l0aW9uKGUpO1xuICAgICAgICAgICAgICAgIHMud3JhcHBlci50cmFuc2l0aW9uKDApO1xuICAgICAgICAgICAgICAgIHNiLnRyYWNrLnRyYW5zaXRpb24oMCk7XG4gICAgICAgICAgICAgICAgc2IuZHJhZy50cmFuc2l0aW9uKDApO1xuICAgICAgICAgICAgICAgIHMuZW1pdCgnb25TY3JvbGxiYXJEcmFnTW92ZScsIHMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRyYWdFbmQ6IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNiID0gcy5zY3JvbGxiYXI7XG4gICAgICAgICAgICAgICAgaWYgKCFzYi5pc1RvdWNoZWQpIHJldHVybjtcbiAgICAgICAgICAgICAgICBzYi5pc1RvdWNoZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuc2Nyb2xsYmFySGlkZSkge1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoc2IuZHJhZ1RpbWVvdXQpO1xuICAgICAgICAgICAgICAgICAgICBzYi5kcmFnVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2IudHJhY2suY3NzKCdvcGFjaXR5JywgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzYi50cmFjay50cmFuc2l0aW9uKDQwMCk7XG4gICAgICAgICAgICAgICAgICAgIH0sIDEwMDApO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcy5lbWl0KCdvblNjcm9sbGJhckRyYWdFbmQnLCBzKTtcbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuc2Nyb2xsYmFyU25hcE9uUmVsZWFzZSkge1xuICAgICAgICAgICAgICAgICAgICBzLnNsaWRlUmVzZXQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZHJhZ2dhYmxlRXZlbnRzOiAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICgocy5wYXJhbXMuc2ltdWxhdGVUb3VjaCA9PT0gZmFsc2UgJiYgIXMuc3VwcG9ydC50b3VjaCkpIHJldHVybiBzLnRvdWNoRXZlbnRzRGVza3RvcDtcbiAgICAgICAgICAgICAgICBlbHNlIHJldHVybiBzLnRvdWNoRXZlbnRzO1xuICAgICAgICAgICAgfSkoKSxcbiAgICAgICAgICAgIGVuYWJsZURyYWdnYWJsZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBzYiA9IHMuc2Nyb2xsYmFyO1xuICAgICAgICAgICAgICAgIHZhciB0YXJnZXQgPSBzLnN1cHBvcnQudG91Y2ggPyBzYi50cmFjayA6IGRvY3VtZW50O1xuICAgICAgICAgICAgICAgICQoc2IudHJhY2spLm9uKHNiLmRyYWdnYWJsZUV2ZW50cy5zdGFydCwgc2IuZHJhZ1N0YXJ0KTtcbiAgICAgICAgICAgICAgICAkKHRhcmdldCkub24oc2IuZHJhZ2dhYmxlRXZlbnRzLm1vdmUsIHNiLmRyYWdNb3ZlKTtcbiAgICAgICAgICAgICAgICAkKHRhcmdldCkub24oc2IuZHJhZ2dhYmxlRXZlbnRzLmVuZCwgc2IuZHJhZ0VuZCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGlzYWJsZURyYWdnYWJsZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBzYiA9IHMuc2Nyb2xsYmFyO1xuICAgICAgICAgICAgICAgIHZhciB0YXJnZXQgPSBzLnN1cHBvcnQudG91Y2ggPyBzYi50cmFjayA6IGRvY3VtZW50O1xuICAgICAgICAgICAgICAgICQoc2IudHJhY2spLm9mZihzYi5kcmFnZ2FibGVFdmVudHMuc3RhcnQsIHNiLmRyYWdTdGFydCk7XG4gICAgICAgICAgICAgICAgJCh0YXJnZXQpLm9mZihzYi5kcmFnZ2FibGVFdmVudHMubW92ZSwgc2IuZHJhZ01vdmUpO1xuICAgICAgICAgICAgICAgICQodGFyZ2V0KS5vZmYoc2IuZHJhZ2dhYmxlRXZlbnRzLmVuZCwgc2IuZHJhZ0VuZCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFzLnBhcmFtcy5zY3JvbGxiYXIpIHJldHVybjtcbiAgICAgICAgICAgICAgICB2YXIgc2IgPSBzLnNjcm9sbGJhcjtcbiAgICAgICAgICAgICAgICBzYi50cmFjayA9ICQocy5wYXJhbXMuc2Nyb2xsYmFyKTtcbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMudW5pcXVlTmF2RWxlbWVudHMgJiYgdHlwZW9mIHMucGFyYW1zLnNjcm9sbGJhciA9PT0gJ3N0cmluZycgJiYgc2IudHJhY2subGVuZ3RoID4gMSAmJiBzLmNvbnRhaW5lci5maW5kKHMucGFyYW1zLnNjcm9sbGJhcikubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIHNiLnRyYWNrID0gcy5jb250YWluZXIuZmluZChzLnBhcmFtcy5zY3JvbGxiYXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzYi5kcmFnID0gc2IudHJhY2suZmluZCgnLnN3aXBlci1zY3JvbGxiYXItZHJhZycpO1xuICAgICAgICAgICAgICAgIGlmIChzYi5kcmFnLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBzYi5kcmFnID0gJCgnPGRpdiBjbGFzcz1cInN3aXBlci1zY3JvbGxiYXItZHJhZ1wiPjwvZGl2PicpO1xuICAgICAgICAgICAgICAgICAgICBzYi50cmFjay5hcHBlbmQoc2IuZHJhZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHNiLmRyYWdbMF0uc3R5bGUud2lkdGggPSAnJztcbiAgICAgICAgICAgICAgICBzYi5kcmFnWzBdLnN0eWxlLmhlaWdodCA9ICcnO1xuICAgICAgICAgICAgICAgIHNiLnRyYWNrU2l6ZSA9IHMuaXNIb3Jpem9udGFsKCkgPyBzYi50cmFja1swXS5vZmZzZXRXaWR0aCA6IHNiLnRyYWNrWzBdLm9mZnNldEhlaWdodDtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgc2IuZGl2aWRlciA9IHMuc2l6ZSAvIHMudmlydHVhbFNpemU7XG4gICAgICAgICAgICAgICAgc2IubW92ZURpdmlkZXIgPSBzYi5kaXZpZGVyICogKHNiLnRyYWNrU2l6ZSAvIHMuc2l6ZSk7XG4gICAgICAgICAgICAgICAgc2IuZHJhZ1NpemUgPSBzYi50cmFja1NpemUgKiBzYi5kaXZpZGVyO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICBpZiAocy5pc0hvcml6b250YWwoKSkge1xuICAgICAgICAgICAgICAgICAgICBzYi5kcmFnWzBdLnN0eWxlLndpZHRoID0gc2IuZHJhZ1NpemUgKyAncHgnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc2IuZHJhZ1swXS5zdHlsZS5oZWlnaHQgPSBzYi5kcmFnU2l6ZSArICdweCc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICAgICBpZiAoc2IuZGl2aWRlciA+PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIHNiLnRyYWNrWzBdLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzYi50cmFja1swXS5zdHlsZS5kaXNwbGF5ID0gJyc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5zY3JvbGxiYXJIaWRlKSB7XG4gICAgICAgICAgICAgICAgICAgIHNiLnRyYWNrWzBdLnN0eWxlLm9wYWNpdHkgPSAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXRUcmFuc2xhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXMucGFyYW1zLnNjcm9sbGJhcikgcmV0dXJuO1xuICAgICAgICAgICAgICAgIHZhciBkaWZmO1xuICAgICAgICAgICAgICAgIHZhciBzYiA9IHMuc2Nyb2xsYmFyO1xuICAgICAgICAgICAgICAgIHZhciB0cmFuc2xhdGUgPSBzLnRyYW5zbGF0ZSB8fCAwO1xuICAgICAgICAgICAgICAgIHZhciBuZXdQb3M7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIHZhciBuZXdTaXplID0gc2IuZHJhZ1NpemU7XG4gICAgICAgICAgICAgICAgbmV3UG9zID0gKHNiLnRyYWNrU2l6ZSAtIHNiLmRyYWdTaXplKSAqIHMucHJvZ3Jlc3M7XG4gICAgICAgICAgICAgICAgaWYgKHMucnRsICYmIHMuaXNIb3Jpem9udGFsKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3UG9zID0gLW5ld1BvcztcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5ld1BvcyA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1NpemUgPSBzYi5kcmFnU2l6ZSAtIG5ld1BvcztcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1BvcyA9IDA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoLW5ld1BvcyArIHNiLmRyYWdTaXplID4gc2IudHJhY2tTaXplKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdTaXplID0gc2IudHJhY2tTaXplICsgbmV3UG9zO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAobmV3UG9zIDwgMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3U2l6ZSA9IHNiLmRyYWdTaXplICsgbmV3UG9zO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3UG9zID0gMDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChuZXdQb3MgKyBzYi5kcmFnU2l6ZSA+IHNiLnRyYWNrU2l6ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3U2l6ZSA9IHNiLnRyYWNrU2l6ZSAtIG5ld1BvcztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocy5pc0hvcml6b250YWwoKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAocy5zdXBwb3J0LnRyYW5zZm9ybXMzZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2IuZHJhZy50cmFuc2Zvcm0oJ3RyYW5zbGF0ZTNkKCcgKyAobmV3UG9zKSArICdweCwgMCwgMCknKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNiLmRyYWcudHJhbnNmb3JtKCd0cmFuc2xhdGVYKCcgKyAobmV3UG9zKSArICdweCknKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzYi5kcmFnWzBdLnN0eWxlLndpZHRoID0gbmV3U2l6ZSArICdweCc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAocy5zdXBwb3J0LnRyYW5zZm9ybXMzZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2IuZHJhZy50cmFuc2Zvcm0oJ3RyYW5zbGF0ZTNkKDBweCwgJyArIChuZXdQb3MpICsgJ3B4LCAwKScpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2IuZHJhZy50cmFuc2Zvcm0oJ3RyYW5zbGF0ZVkoJyArIChuZXdQb3MpICsgJ3B4KScpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHNiLmRyYWdbMF0uc3R5bGUuaGVpZ2h0ID0gbmV3U2l6ZSArICdweCc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5zY3JvbGxiYXJIaWRlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dChzYi50aW1lb3V0KTtcbiAgICAgICAgICAgICAgICAgICAgc2IudHJhY2tbMF0uc3R5bGUub3BhY2l0eSA9IDE7XG4gICAgICAgICAgICAgICAgICAgIHNiLnRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNiLnRyYWNrWzBdLnN0eWxlLm9wYWNpdHkgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2IudHJhY2sudHJhbnNpdGlvbig0MDApO1xuICAgICAgICAgICAgICAgICAgICB9LCAxMDAwKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0VHJhbnNpdGlvbjogZnVuY3Rpb24gKGR1cmF0aW9uKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFzLnBhcmFtcy5zY3JvbGxiYXIpIHJldHVybjtcbiAgICAgICAgICAgICAgICBzLnNjcm9sbGJhci5kcmFnLnRyYW5zaXRpb24oZHVyYXRpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBcblxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBDb250cm9sbGVyXG4gICAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbiAgICAgICAgcy5jb250cm9sbGVyID0ge1xuICAgICAgICAgICAgTGluZWFyU3BsaW5lOiBmdW5jdGlvbiAoeCwgeSkge1xuICAgICAgICAgICAgICAgIHZhciBiaW5hcnlTZWFyY2ggPSAoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtYXhJbmRleCwgbWluSW5kZXgsIGd1ZXNzO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oYXJyYXksIHZhbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWluSW5kZXggPSAtMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heEluZGV4ID0gYXJyYXkubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKG1heEluZGV4IC0gbWluSW5kZXggPiAxKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhcnJheVtndWVzcyA9IG1heEluZGV4ICsgbWluSW5kZXggPj4gMV0gPD0gdmFsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbkluZGV4ID0gZ3Vlc3M7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4SW5kZXggPSBndWVzcztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWF4SW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSkoKTtcbiAgICAgICAgICAgICAgICB0aGlzLnggPSB4O1xuICAgICAgICAgICAgICAgIHRoaXMueSA9IHk7XG4gICAgICAgICAgICAgICAgdGhpcy5sYXN0SW5kZXggPSB4Lmxlbmd0aCAtIDE7XG4gICAgICAgICAgICAgICAgLy8gR2l2ZW4gYW4geCB2YWx1ZSAoeDIpLCByZXR1cm4gdGhlIGV4cGVjdGVkIHkyIHZhbHVlOlxuICAgICAgICAgICAgICAgIC8vICh4MSx5MSkgaXMgdGhlIGtub3duIHBvaW50IGJlZm9yZSBnaXZlbiB2YWx1ZSxcbiAgICAgICAgICAgICAgICAvLyAoeDMseTMpIGlzIHRoZSBrbm93biBwb2ludCBhZnRlciBnaXZlbiB2YWx1ZS5cbiAgICAgICAgICAgICAgICB2YXIgaTEsIGkzO1xuICAgICAgICAgICAgICAgIHZhciBsID0gdGhpcy54Lmxlbmd0aDtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgdGhpcy5pbnRlcnBvbGF0ZSA9IGZ1bmN0aW9uICh4Mikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXgyKSByZXR1cm4gMDtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC8vIEdldCB0aGUgaW5kZXhlcyBvZiB4MSBhbmQgeDMgKHRoZSBhcnJheSBpbmRleGVzIGJlZm9yZSBhbmQgYWZ0ZXIgZ2l2ZW4geDIpOlxuICAgICAgICAgICAgICAgICAgICBpMyA9IGJpbmFyeVNlYXJjaCh0aGlzLngsIHgyKTtcbiAgICAgICAgICAgICAgICAgICAgaTEgPSBpMyAtIDE7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAvLyBXZSBoYXZlIG91ciBpbmRleGVzIGkxICYgaTMsIHNvIHdlIGNhbiBjYWxjdWxhdGUgYWxyZWFkeTpcbiAgICAgICAgICAgICAgICAgICAgLy8geTIgOj0gKCh4MuKIkngxKSDDlyAoeTPiiJJ5MSkpIMO3ICh4M+KIkngxKSArIHkxXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoKHgyIC0gdGhpcy54W2kxXSkgKiAodGhpcy55W2kzXSAtIHRoaXMueVtpMV0pKSAvICh0aGlzLnhbaTNdIC0gdGhpcy54W2kxXSkgKyB0aGlzLnlbaTFdO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLy94eHg6IGZvciBub3cgaSB3aWxsIGp1c3Qgc2F2ZSBvbmUgc3BsaW5lIGZ1bmN0aW9uIHRvIHRvXG4gICAgICAgICAgICBnZXRJbnRlcnBvbGF0ZUZ1bmN0aW9uOiBmdW5jdGlvbihjKXtcbiAgICAgICAgICAgICAgICBpZighcy5jb250cm9sbGVyLnNwbGluZSkgcy5jb250cm9sbGVyLnNwbGluZSA9IHMucGFyYW1zLmxvb3AgP1xuICAgICAgICAgICAgICAgICAgICBuZXcgcy5jb250cm9sbGVyLkxpbmVhclNwbGluZShzLnNsaWRlc0dyaWQsIGMuc2xpZGVzR3JpZCkgOlxuICAgICAgICAgICAgICAgICAgICBuZXcgcy5jb250cm9sbGVyLkxpbmVhclNwbGluZShzLnNuYXBHcmlkLCBjLnNuYXBHcmlkKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXRUcmFuc2xhdGU6IGZ1bmN0aW9uICh0cmFuc2xhdGUsIGJ5Q29udHJvbGxlcikge1xuICAgICAgICAgICAgICAgdmFyIGNvbnRyb2xsZWQgPSBzLnBhcmFtcy5jb250cm9sO1xuICAgICAgICAgICAgICAgdmFyIG11bHRpcGxpZXIsIGNvbnRyb2xsZWRUcmFuc2xhdGU7XG4gICAgICAgICAgICAgICBmdW5jdGlvbiBzZXRDb250cm9sbGVkVHJhbnNsYXRlKGMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyB3aWxsIGNyZWF0ZSBhbiBJbnRlcnBvbGF0ZSBmdW5jdGlvbiBiYXNlZCBvbiB0aGUgc25hcEdyaWRzXG4gICAgICAgICAgICAgICAgICAgIC8vIHggaXMgdGhlIEdyaWQgb2YgdGhlIHNjcm9sbGVkIHNjcm9sbGVyIGFuZCB5IHdpbGwgYmUgdGhlIGNvbnRyb2xsZWQgc2Nyb2xsZXJcbiAgICAgICAgICAgICAgICAgICAgLy8gaXQgbWFrZXMgc2Vuc2UgdG8gY3JlYXRlIHRoaXMgb25seSBvbmNlIGFuZCByZWNhbGwgaXQgZm9yIHRoZSBpbnRlcnBvbGF0aW9uXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoZSBmdW5jdGlvbiBkb2VzIGEgbG90IG9mIHZhbHVlIGNhY2hpbmcgZm9yIHBlcmZvcm1hbmNlXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0ZSA9IGMucnRsICYmIGMucGFyYW1zLmRpcmVjdGlvbiA9PT0gJ2hvcml6b250YWwnID8gLXMudHJhbnNsYXRlIDogcy50cmFuc2xhdGU7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5jb250cm9sQnkgPT09ICdzbGlkZScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuY29udHJvbGxlci5nZXRJbnRlcnBvbGF0ZUZ1bmN0aW9uKGMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaSBhbSBub3Qgc3VyZSB3aHkgdGhlIHZhbHVlcyBoYXZlIHRvIGJlIG11bHRpcGxpY2F0ZWQgdGhpcyB3YXksIHRyaWVkIHRvIGludmVydCB0aGUgc25hcEdyaWRcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGJ1dCBpdCBkaWQgbm90IHdvcmsgb3V0XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVkVHJhbnNsYXRlID0gLXMuY29udHJvbGxlci5zcGxpbmUuaW50ZXJwb2xhdGUoLXRyYW5zbGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGlmKCFjb250cm9sbGVkVHJhbnNsYXRlIHx8IHMucGFyYW1zLmNvbnRyb2xCeSA9PT0gJ2NvbnRhaW5lcicpe1xuICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGllciA9IChjLm1heFRyYW5zbGF0ZSgpIC0gYy5taW5UcmFuc2xhdGUoKSkgLyAocy5tYXhUcmFuc2xhdGUoKSAtIHMubWluVHJhbnNsYXRlKCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlZFRyYW5zbGF0ZSA9ICh0cmFuc2xhdGUgLSBzLm1pblRyYW5zbGF0ZSgpKSAqIG11bHRpcGxpZXIgKyBjLm1pblRyYW5zbGF0ZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuY29udHJvbEludmVyc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZWRUcmFuc2xhdGUgPSBjLm1heFRyYW5zbGF0ZSgpIC0gY29udHJvbGxlZFRyYW5zbGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjLnVwZGF0ZVByb2dyZXNzKGNvbnRyb2xsZWRUcmFuc2xhdGUpO1xuICAgICAgICAgICAgICAgICAgICBjLnNldFdyYXBwZXJUcmFuc2xhdGUoY29udHJvbGxlZFRyYW5zbGF0ZSwgZmFsc2UsIHMpO1xuICAgICAgICAgICAgICAgICAgICBjLnVwZGF0ZUFjdGl2ZUluZGV4KCk7XG4gICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjb250cm9sbGVkKSkge1xuICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29udHJvbGxlZC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29udHJvbGxlZFtpXSAhPT0gYnlDb250cm9sbGVyICYmIGNvbnRyb2xsZWRbaV0gaW5zdGFuY2VvZiBTd2lwZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldENvbnRyb2xsZWRUcmFuc2xhdGUoY29udHJvbGxlZFtpXSk7XG4gICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICBlbHNlIGlmIChjb250cm9sbGVkIGluc3RhbmNlb2YgU3dpcGVyICYmIGJ5Q29udHJvbGxlciAhPT0gY29udHJvbGxlZCkge1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICBzZXRDb250cm9sbGVkVHJhbnNsYXRlKGNvbnRyb2xsZWQpO1xuICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNldFRyYW5zaXRpb246IGZ1bmN0aW9uIChkdXJhdGlvbiwgYnlDb250cm9sbGVyKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNvbnRyb2xsZWQgPSBzLnBhcmFtcy5jb250cm9sO1xuICAgICAgICAgICAgICAgIHZhciBpO1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHNldENvbnRyb2xsZWRUcmFuc2l0aW9uKGMpIHtcbiAgICAgICAgICAgICAgICAgICAgYy5zZXRXcmFwcGVyVHJhbnNpdGlvbihkdXJhdGlvbiwgcyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkdXJhdGlvbiAhPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYy5vblRyYW5zaXRpb25TdGFydCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYy53cmFwcGVyLnRyYW5zaXRpb25FbmQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWNvbnRyb2xsZWQpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYy5wYXJhbXMubG9vcCAmJiBzLnBhcmFtcy5jb250cm9sQnkgPT09ICdzbGlkZScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYy5maXhMb29wKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGMub25UcmFuc2l0aW9uRW5kKCk7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY29udHJvbGxlZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGNvbnRyb2xsZWQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb250cm9sbGVkW2ldICE9PSBieUNvbnRyb2xsZXIgJiYgY29udHJvbGxlZFtpXSBpbnN0YW5jZW9mIFN3aXBlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldENvbnRyb2xsZWRUcmFuc2l0aW9uKGNvbnRyb2xsZWRbaV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGNvbnRyb2xsZWQgaW5zdGFuY2VvZiBTd2lwZXIgJiYgYnlDb250cm9sbGVyICE9PSBjb250cm9sbGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldENvbnRyb2xsZWRUcmFuc2l0aW9uKGNvbnRyb2xsZWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgXG5cbiAgICAgICAgLyo9PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgICAgICAgSGFzaCBOYXZpZ2F0aW9uXG4gICAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbiAgICAgICAgcy5oYXNobmF2ID0ge1xuICAgICAgICAgICAgb25IYXNoQ2FuZ2U6IGZ1bmN0aW9uIChlLCBhKSB7XG4gICAgICAgICAgICAgICAgdmFyIG5ld0hhc2ggPSBkb2N1bWVudC5sb2NhdGlvbi5oYXNoLnJlcGxhY2UoJyMnLCAnJyk7XG4gICAgICAgICAgICAgICAgdmFyIGFjdGl2ZVNsaWRlSGFzaCA9IHMuc2xpZGVzLmVxKHMuYWN0aXZlSW5kZXgpLmF0dHIoJ2RhdGEtaGFzaCcpO1xuICAgICAgICAgICAgICAgIGlmIChuZXdIYXNoICE9PSBhY3RpdmVTbGlkZUhhc2gpIHtcbiAgICAgICAgICAgICAgICAgICAgcy5zbGlkZVRvKHMud3JhcHBlci5jaGlsZHJlbignLicgKyBzLnBhcmFtcy5zbGlkZUNsYXNzICsgJ1tkYXRhLWhhc2g9XCInICsgKG5ld0hhc2gpICsgJ1wiXScpLmluZGV4KCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhdHRhY2hFdmVudHM6IGZ1bmN0aW9uIChkZXRhY2gpIHtcbiAgICAgICAgICAgICAgICB2YXIgYWN0aW9uID0gZGV0YWNoID8gJ29mZicgOiAnb24nO1xuICAgICAgICAgICAgICAgICQod2luZG93KVthY3Rpb25dKCdoYXNoY2hhbmdlJywgcy5oYXNobmF2Lm9uSGFzaENhbmdlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXRIYXNoOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFzLmhhc2huYXYuaW5pdGlhbGl6ZWQgfHwgIXMucGFyYW1zLmhhc2huYXYpIHJldHVybjtcbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMucmVwbGFjZVN0YXRlICYmIHdpbmRvdy5oaXN0b3J5ICYmIHdpbmRvdy5oaXN0b3J5LnJlcGxhY2VTdGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuaGlzdG9yeS5yZXBsYWNlU3RhdGUobnVsbCwgbnVsbCwgKCcjJyArIHMuc2xpZGVzLmVxKHMuYWN0aXZlSW5kZXgpLmF0dHIoJ2RhdGEtaGFzaCcpIHx8ICcnKSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNsaWRlID0gcy5zbGlkZXMuZXEocy5hY3RpdmVJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBoYXNoID0gc2xpZGUuYXR0cignZGF0YS1oYXNoJykgfHwgc2xpZGUuYXR0cignZGF0YS1oaXN0b3J5Jyk7XG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmxvY2F0aW9uLmhhc2ggPSBoYXNoIHx8ICcnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFzLnBhcmFtcy5oYXNobmF2IHx8IHMucGFyYW1zLmhpc3RvcnkpIHJldHVybjtcbiAgICAgICAgICAgICAgICBzLmhhc2huYXYuaW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHZhciBoYXNoID0gZG9jdW1lbnQubG9jYXRpb24uaGFzaC5yZXBsYWNlKCcjJywgJycpO1xuICAgICAgICAgICAgICAgIGlmIChoYXNoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzcGVlZCA9IDA7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW5ndGggPSBzLnNsaWRlcy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNsaWRlID0gcy5zbGlkZXMuZXEoaSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc2xpZGVIYXNoID0gc2xpZGUuYXR0cignZGF0YS1oYXNoJykgfHwgc2xpZGUuYXR0cignZGF0YS1oaXN0b3J5Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2xpZGVIYXNoID09PSBoYXNoICYmICFzbGlkZS5oYXNDbGFzcyhzLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpbmRleCA9IHNsaWRlLmluZGV4KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcy5zbGlkZVRvKGluZGV4LCBzcGVlZCwgcy5wYXJhbXMucnVuQ2FsbGJhY2tzT25Jbml0LCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuaGFzaG5hdldhdGNoU3RhdGUpIHMuaGFzaG5hdi5hdHRhY2hFdmVudHMoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkZXN0cm95OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLmhhc2huYXZXYXRjaFN0YXRlKSBzLmhhc2huYXYuYXR0YWNoRXZlbnRzKHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBcblxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBIaXN0b3J5IEFwaSB3aXRoIGZhbGxiYWNrIHRvIEhhc2huYXZcbiAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgICAgICBzLmhpc3RvcnkgPSB7XG4gICAgICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFzLnBhcmFtcy5oaXN0b3J5KSByZXR1cm47XG4gICAgICAgICAgICAgICAgaWYgKCF3aW5kb3cuaGlzdG9yeSB8fCAhd2luZG93Lmhpc3RvcnkucHVzaFN0YXRlKSB7XG4gICAgICAgICAgICAgICAgICAgIHMucGFyYW1zLmhpc3RvcnkgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgcy5wYXJhbXMuaGFzaG5hdiA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcy5oaXN0b3J5LmluaXRpYWxpemVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLnBhdGhzID0gdGhpcy5nZXRQYXRoVmFsdWVzKCk7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLnBhdGhzLmtleSAmJiAhdGhpcy5wYXRocy52YWx1ZSkgcmV0dXJuO1xuICAgICAgICAgICAgICAgIHRoaXMuc2Nyb2xsVG9TbGlkZSgwLCB0aGlzLnBhdGhzLnZhbHVlLCBzLnBhcmFtcy5ydW5DYWxsYmFja3NPbkluaXQpO1xuICAgICAgICAgICAgICAgIGlmICghcy5wYXJhbXMucmVwbGFjZVN0YXRlKSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdwb3BzdGF0ZScsIHRoaXMuc2V0SGlzdG9yeVBvcFN0YXRlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0SGlzdG9yeVBvcFN0YXRlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBzLmhpc3RvcnkucGF0aHMgPSBzLmhpc3RvcnkuZ2V0UGF0aFZhbHVlcygpO1xuICAgICAgICAgICAgICAgIHMuaGlzdG9yeS5zY3JvbGxUb1NsaWRlKHMucGFyYW1zLnNwZWVkLCBzLmhpc3RvcnkucGF0aHMudmFsdWUsIGZhbHNlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRQYXRoVmFsdWVzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB2YXIgcGF0aEFycmF5ID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnNsaWNlKDEpLnNwbGl0KCcvJyk7XG4gICAgICAgICAgICAgICAgdmFyIHRvdGFsID0gcGF0aEFycmF5Lmxlbmd0aDtcbiAgICAgICAgICAgICAgICB2YXIga2V5ID0gcGF0aEFycmF5W3RvdGFsIC0gMl07XG4gICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gcGF0aEFycmF5W3RvdGFsIC0gMV07XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsga2V5OiBrZXksIHZhbHVlOiB2YWx1ZSB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNldEhpc3Rvcnk6IGZ1bmN0aW9uIChrZXksIGluZGV4KSB7XG4gICAgICAgICAgICAgICAgaWYgKCFzLmhpc3RvcnkuaW5pdGlhbGl6ZWQgfHwgIXMucGFyYW1zLmhpc3RvcnkpIHJldHVybjtcbiAgICAgICAgICAgICAgICB2YXIgc2xpZGUgPSBzLnNsaWRlcy5lcShpbmRleCk7XG4gICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gdGhpcy5zbHVnaWZ5KHNsaWRlLmF0dHIoJ2RhdGEtaGlzdG9yeScpKTtcbiAgICAgICAgICAgICAgICBpZiAoIXdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0ga2V5ICsgJy8nICsgdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5yZXBsYWNlU3RhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93Lmhpc3RvcnkucmVwbGFjZVN0YXRlKG51bGwsIG51bGwsIHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUobnVsbCwgbnVsbCwgdmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzbHVnaWZ5OiBmdW5jdGlvbih0ZXh0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRleHQudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpXG4gICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cXHMrL2csICctJylcbiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL1teXFx3XFwtXSsvZywgJycpXG4gICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cXC1cXC0rL2csICctJylcbiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL14tKy8sICcnKVxuICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvLSskLywgJycpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNjcm9sbFRvU2xpZGU6IGZ1bmN0aW9uKHNwZWVkLCB2YWx1ZSwgcnVuQ2FsbGJhY2tzKSB7XG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW5ndGggPSBzLnNsaWRlcy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNsaWRlID0gcy5zbGlkZXMuZXEoaSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc2xpZGVIaXN0b3J5ID0gdGhpcy5zbHVnaWZ5KHNsaWRlLmF0dHIoJ2RhdGEtaGlzdG9yeScpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzbGlkZUhpc3RvcnkgPT09IHZhbHVlICYmICFzbGlkZS5oYXNDbGFzcyhzLnBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpbmRleCA9IHNsaWRlLmluZGV4KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcy5zbGlkZVRvKGluZGV4LCBzcGVlZCwgcnVuQ2FsbGJhY2tzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHMuc2xpZGVUbygwLCBzcGVlZCwgcnVuQ2FsbGJhY2tzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIFxuXG4gICAgICAgIC8qPT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICAgICAgIEtleWJvYXJkIENvbnRyb2xcbiAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgICAgICBmdW5jdGlvbiBoYW5kbGVLZXlib2FyZChlKSB7XG4gICAgICAgICAgICBpZiAoZS5vcmlnaW5hbEV2ZW50KSBlID0gZS5vcmlnaW5hbEV2ZW50OyAvL2pxdWVyeSBmaXhcbiAgICAgICAgICAgIHZhciBrYyA9IGUua2V5Q29kZSB8fCBlLmNoYXJDb2RlO1xuICAgICAgICAgICAgLy8gRGlyZWN0aW9ucyBsb2Nrc1xuICAgICAgICAgICAgaWYgKCFzLnBhcmFtcy5hbGxvd1N3aXBlVG9OZXh0ICYmIChzLmlzSG9yaXpvbnRhbCgpICYmIGtjID09PSAzOSB8fCAhcy5pc0hvcml6b250YWwoKSAmJiBrYyA9PT0gNDApKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFzLnBhcmFtcy5hbGxvd1N3aXBlVG9QcmV2ICYmIChzLmlzSG9yaXpvbnRhbCgpICYmIGtjID09PSAzNyB8fCAhcy5pc0hvcml6b250YWwoKSAmJiBrYyA9PT0gMzgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGUuc2hpZnRLZXkgfHwgZS5hbHRLZXkgfHwgZS5jdHJsS2V5IHx8IGUubWV0YUtleSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChkb2N1bWVudC5hY3RpdmVFbGVtZW50ICYmIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQubm9kZU5hbWUgJiYgKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2lucHV0JyB8fCBkb2N1bWVudC5hY3RpdmVFbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICd0ZXh0YXJlYScpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGtjID09PSAzNyB8fCBrYyA9PT0gMzkgfHwga2MgPT09IDM4IHx8IGtjID09PSA0MCkge1xuICAgICAgICAgICAgICAgIHZhciBpblZpZXcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAvL0NoZWNrIHRoYXQgc3dpcGVyIHNob3VsZCBiZSBpbnNpZGUgb2YgdmlzaWJsZSBhcmVhIG9mIHdpbmRvd1xuICAgICAgICAgICAgICAgIGlmIChzLmNvbnRhaW5lci5wYXJlbnRzKCcuJyArIHMucGFyYW1zLnNsaWRlQ2xhc3MpLmxlbmd0aCA+IDAgJiYgcy5jb250YWluZXIucGFyZW50cygnLicgKyBzLnBhcmFtcy5zbGlkZUFjdGl2ZUNsYXNzKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgd2luZG93U2Nyb2xsID0ge1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OiB3aW5kb3cucGFnZVhPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgIHRvcDogd2luZG93LnBhZ2VZT2Zmc2V0XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB2YXIgd2luZG93V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICAgICAgICAgICAgICB2YXIgd2luZG93SGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xuICAgICAgICAgICAgICAgIHZhciBzd2lwZXJPZmZzZXQgPSBzLmNvbnRhaW5lci5vZmZzZXQoKTtcbiAgICAgICAgICAgICAgICBpZiAocy5ydGwpIHN3aXBlck9mZnNldC5sZWZ0ID0gc3dpcGVyT2Zmc2V0LmxlZnQgLSBzLmNvbnRhaW5lclswXS5zY3JvbGxMZWZ0O1xuICAgICAgICAgICAgICAgIHZhciBzd2lwZXJDb29yZCA9IFtcbiAgICAgICAgICAgICAgICAgICAgW3N3aXBlck9mZnNldC5sZWZ0LCBzd2lwZXJPZmZzZXQudG9wXSxcbiAgICAgICAgICAgICAgICAgICAgW3N3aXBlck9mZnNldC5sZWZ0ICsgcy53aWR0aCwgc3dpcGVyT2Zmc2V0LnRvcF0sXG4gICAgICAgICAgICAgICAgICAgIFtzd2lwZXJPZmZzZXQubGVmdCwgc3dpcGVyT2Zmc2V0LnRvcCArIHMuaGVpZ2h0XSxcbiAgICAgICAgICAgICAgICAgICAgW3N3aXBlck9mZnNldC5sZWZ0ICsgcy53aWR0aCwgc3dpcGVyT2Zmc2V0LnRvcCArIHMuaGVpZ2h0XVxuICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzd2lwZXJDb29yZC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcG9pbnQgPSBzd2lwZXJDb29yZFtpXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRbMF0gPj0gd2luZG93U2Nyb2xsLmxlZnQgJiYgcG9pbnRbMF0gPD0gd2luZG93U2Nyb2xsLmxlZnQgKyB3aW5kb3dXaWR0aCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRbMV0gPj0gd2luZG93U2Nyb2xsLnRvcCAmJiBwb2ludFsxXSA8PSB3aW5kb3dTY3JvbGwudG9wICsgd2luZG93SGVpZ2h0XG4gICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5WaWV3ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFpblZpZXcpIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGtjID09PSAzNyB8fCBrYyA9PT0gMzkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGUucHJldmVudERlZmF1bHQpIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBlLnJldHVyblZhbHVlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICgoa2MgPT09IDM5ICYmICFzLnJ0bCkgfHwgKGtjID09PSAzNyAmJiBzLnJ0bCkpIHMuc2xpZGVOZXh0KCk7XG4gICAgICAgICAgICAgICAgaWYgKChrYyA9PT0gMzcgJiYgIXMucnRsKSB8fCAoa2MgPT09IDM5ICYmIHMucnRsKSkgcy5zbGlkZVByZXYoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChrYyA9PT0gMzggfHwga2MgPT09IDQwKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlLnByZXZlbnREZWZhdWx0KSBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgZS5yZXR1cm5WYWx1ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoa2MgPT09IDQwKSBzLnNsaWRlTmV4dCgpO1xuICAgICAgICAgICAgICAgIGlmIChrYyA9PT0gMzgpIHMuc2xpZGVQcmV2KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzLmVtaXQoJ29uS2V5UHJlc3MnLCBzLCBrYyk7XG4gICAgICAgIH1cbiAgICAgICAgcy5kaXNhYmxlS2V5Ym9hcmRDb250cm9sID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcy5wYXJhbXMua2V5Ym9hcmRDb250cm9sID0gZmFsc2U7XG4gICAgICAgICAgICAkKGRvY3VtZW50KS5vZmYoJ2tleWRvd24nLCBoYW5kbGVLZXlib2FyZCk7XG4gICAgICAgIH07XG4gICAgICAgIHMuZW5hYmxlS2V5Ym9hcmRDb250cm9sID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcy5wYXJhbXMua2V5Ym9hcmRDb250cm9sID0gdHJ1ZTtcbiAgICAgICAgICAgICQoZG9jdW1lbnQpLm9uKCdrZXlkb3duJywgaGFuZGxlS2V5Ym9hcmQpO1xuICAgICAgICB9O1xuICAgICAgICBcblxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBNb3VzZXdoZWVsIENvbnRyb2xcbiAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgICAgICBzLm1vdXNld2hlZWwgPSB7XG4gICAgICAgICAgICBldmVudDogZmFsc2UsXG4gICAgICAgICAgICBsYXN0U2Nyb2xsVGltZTogKG5ldyB3aW5kb3cuRGF0ZSgpKS5nZXRUaW1lKClcbiAgICAgICAgfTtcbiAgICAgICAgZnVuY3Rpb24gaXNFdmVudFN1cHBvcnRlZCgpIHtcbiAgICAgICAgICAgIHZhciBldmVudE5hbWUgPSAnb253aGVlbCc7XG4gICAgICAgICAgICB2YXIgaXNTdXBwb3J0ZWQgPSBldmVudE5hbWUgaW4gZG9jdW1lbnQ7XG4gICAgICAgIFxuICAgICAgICAgICAgaWYgKCFpc1N1cHBvcnRlZCkge1xuICAgICAgICAgICAgICAgIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoZXZlbnROYW1lLCAncmV0dXJuOycpO1xuICAgICAgICAgICAgICAgIGlzU3VwcG9ydGVkID0gdHlwZW9mIGVsZW1lbnRbZXZlbnROYW1lXSA9PT0gJ2Z1bmN0aW9uJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBpZiAoIWlzU3VwcG9ydGVkICYmXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuaW1wbGVtZW50YXRpb24gJiZcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5oYXNGZWF0dXJlICYmXG4gICAgICAgICAgICAgICAgICAgIC8vIGFsd2F5cyByZXR1cm5zIHRydWUgaW4gbmV3ZXIgYnJvd3NlcnMgYXMgcGVyIHRoZSBzdGFuZGFyZC5cbiAgICAgICAgICAgICAgICAgICAgLy8gQHNlZSBodHRwOi8vZG9tLnNwZWMud2hhdHdnLm9yZy8jZG9tLWRvbWltcGxlbWVudGF0aW9uLWhhc2ZlYXR1cmVcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5oYXNGZWF0dXJlKCcnLCAnJykgIT09IHRydWUgKSB7XG4gICAgICAgICAgICAgICAgLy8gVGhpcyBpcyB0aGUgb25seSB3YXkgdG8gdGVzdCBzdXBwb3J0IGZvciB0aGUgYHdoZWVsYCBldmVudCBpbiBJRTkrLlxuICAgICAgICAgICAgICAgIGlzU3VwcG9ydGVkID0gZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uaGFzRmVhdHVyZSgnRXZlbnRzLndoZWVsJywgJzMuMCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIHJldHVybiBpc1N1cHBvcnRlZDtcbiAgICAgICAgfVxuICAgICAgICAvKipcbiAgICAgICAgICogTW91c2Ugd2hlZWwgKGFuZCAyLWZpbmdlciB0cmFja3BhZCkgc3VwcG9ydCBvbiB0aGUgd2ViIHN1Y2tzLiAgSXQgaXNcbiAgICAgICAgICogY29tcGxpY2F0ZWQsIHRodXMgdGhpcyBkb2MgaXMgbG9uZyBhbmQgKGhvcGVmdWxseSkgZGV0YWlsZWQgZW5vdWdoIHRvIGFuc3dlclxuICAgICAgICAgKiB5b3VyIHF1ZXN0aW9ucy5cbiAgICAgICAgICpcbiAgICAgICAgICogSWYgeW91IG5lZWQgdG8gcmVhY3QgdG8gdGhlIG1vdXNlIHdoZWVsIGluIGEgcHJlZGljdGFibGUgd2F5LCB0aGlzIGNvZGUgaXNcbiAgICAgICAgICogbGlrZSB5b3VyIGJlc3Rlc3QgZnJpZW5kLiAqIGh1Z3MgKlxuICAgICAgICAgKlxuICAgICAgICAgKiBBcyBvZiB0b2RheSwgdGhlcmUgYXJlIDQgRE9NIGV2ZW50IHR5cGVzIHlvdSBjYW4gbGlzdGVuIHRvOlxuICAgICAgICAgKlxuICAgICAgICAgKiAgICd3aGVlbCcgICAgICAgICAgICAgICAgLS0gQ2hyb21lKDMxKyksIEZGKDE3KyksIElFKDkrKVxuICAgICAgICAgKiAgICdtb3VzZXdoZWVsJyAgICAgICAgICAgLS0gQ2hyb21lLCBJRSg2KyksIE9wZXJhLCBTYWZhcmlcbiAgICAgICAgICogICAnTW96TW91c2VQaXhlbFNjcm9sbCcgIC0tIEZGKDMuNSBvbmx5ISkgKDIwMTAtMjAxMykgLS0gZG9uJ3QgYm90aGVyIVxuICAgICAgICAgKiAgICdET01Nb3VzZVNjcm9sbCcgICAgICAgLS0gRkYoMC45LjcrKSBzaW5jZSAyMDAzXG4gICAgICAgICAqXG4gICAgICAgICAqIFNvIHdoYXQgdG8gZG8/ICBUaGUgaXMgdGhlIGJlc3Q6XG4gICAgICAgICAqXG4gICAgICAgICAqICAgbm9ybWFsaXplV2hlZWwuZ2V0RXZlbnRUeXBlKCk7XG4gICAgICAgICAqXG4gICAgICAgICAqIEluIHlvdXIgZXZlbnQgY2FsbGJhY2ssIHVzZSB0aGlzIGNvZGUgdG8gZ2V0IHNhbmUgaW50ZXJwcmV0YXRpb24gb2YgdGhlXG4gICAgICAgICAqIGRlbHRhcy4gIFRoaXMgY29kZSB3aWxsIHJldHVybiBhbiBvYmplY3Qgd2l0aCBwcm9wZXJ0aWVzOlxuICAgICAgICAgKlxuICAgICAgICAgKiAgIHNwaW5YICAgLS0gbm9ybWFsaXplZCBzcGluIHNwZWVkICh1c2UgZm9yIHpvb20pIC0geCBwbGFuZVxuICAgICAgICAgKiAgIHNwaW5ZICAgLS0gXCIgLSB5IHBsYW5lXG4gICAgICAgICAqICAgcGl4ZWxYICAtLSBub3JtYWxpemVkIGRpc3RhbmNlICh0byBwaXhlbHMpIC0geCBwbGFuZVxuICAgICAgICAgKiAgIHBpeGVsWSAgLS0gXCIgLSB5IHBsYW5lXG4gICAgICAgICAqXG4gICAgICAgICAqIFdoZWVsIHZhbHVlcyBhcmUgcHJvdmlkZWQgYnkgdGhlIGJyb3dzZXIgYXNzdW1pbmcgeW91IGFyZSB1c2luZyB0aGUgd2hlZWwgdG9cbiAgICAgICAgICogc2Nyb2xsIGEgd2ViIHBhZ2UgYnkgYSBudW1iZXIgb2YgbGluZXMgb3IgcGl4ZWxzIChvciBwYWdlcykuICBWYWx1ZXMgY2FuIHZhcnlcbiAgICAgICAgICogc2lnbmlmaWNhbnRseSBvbiBkaWZmZXJlbnQgcGxhdGZvcm1zIGFuZCBicm93c2VycywgZm9yZ2V0dGluZyB0aGF0IHlvdSBjYW5cbiAgICAgICAgICogc2Nyb2xsIGF0IGRpZmZlcmVudCBzcGVlZHMuICBTb21lIGRldmljZXMgKGxpa2UgdHJhY2twYWRzKSBlbWl0IG1vcmUgZXZlbnRzXG4gICAgICAgICAqIGF0IHNtYWxsZXIgaW5jcmVtZW50cyB3aXRoIGZpbmUgZ3JhbnVsYXJpdHksIGFuZCBzb21lIGVtaXQgbWFzc2l2ZSBqdW1wcyB3aXRoXG4gICAgICAgICAqIGxpbmVhciBzcGVlZCBvciBhY2NlbGVyYXRpb24uXG4gICAgICAgICAqXG4gICAgICAgICAqIFRoaXMgY29kZSBkb2VzIGl0cyBiZXN0IHRvIG5vcm1hbGl6ZSB0aGUgZGVsdGFzIGZvciB5b3U6XG4gICAgICAgICAqXG4gICAgICAgICAqICAgLSBzcGluIGlzIHRyeWluZyB0byBub3JtYWxpemUgaG93IGZhciB0aGUgd2hlZWwgd2FzIHNwdW4gKG9yIHRyYWNrcGFkXG4gICAgICAgICAqICAgICBkcmFnZ2VkKS4gIFRoaXMgaXMgc3VwZXIgdXNlZnVsIGZvciB6b29tIHN1cHBvcnQgd2hlcmUgeW91IHdhbnQgdG9cbiAgICAgICAgICogICAgIHRocm93IGF3YXkgdGhlIGNodW5reSBzY3JvbGwgc3RlcHMgb24gdGhlIFBDIGFuZCBtYWtlIHRob3NlIGVxdWFsIHRvXG4gICAgICAgICAqICAgICB0aGUgc2xvdyBhbmQgc21vb3RoIHRpbnkgc3RlcHMgb24gdGhlIE1hYy4gS2V5IGRhdGE6IFRoaXMgY29kZSB0cmllcyB0b1xuICAgICAgICAgKiAgICAgcmVzb2x2ZSBhIHNpbmdsZSBzbG93IHN0ZXAgb24gYSB3aGVlbCB0byAxLlxuICAgICAgICAgKlxuICAgICAgICAgKiAgIC0gcGl4ZWwgaXMgbm9ybWFsaXppbmcgdGhlIGRlc2lyZWQgc2Nyb2xsIGRlbHRhIGluIHBpeGVsIHVuaXRzLiAgWW91J2xsXG4gICAgICAgICAqICAgICBnZXQgdGhlIGNyYXp5IGRpZmZlcmVuY2VzIGJldHdlZW4gYnJvd3NlcnMsIGJ1dCBhdCBsZWFzdCBpdCdsbCBiZSBpblxuICAgICAgICAgKiAgICAgcGl4ZWxzIVxuICAgICAgICAgKlxuICAgICAgICAgKiAgIC0gcG9zaXRpdmUgdmFsdWUgaW5kaWNhdGVzIHNjcm9sbGluZyBET1dOL1JJR0hULCBuZWdhdGl2ZSBVUC9MRUZULiAgVGhpc1xuICAgICAgICAgKiAgICAgc2hvdWxkIHRyYW5zbGF0ZSB0byBwb3NpdGl2ZSB2YWx1ZSB6b29taW5nIElOLCBuZWdhdGl2ZSB6b29taW5nIE9VVC5cbiAgICAgICAgICogICAgIFRoaXMgbWF0Y2hlcyB0aGUgbmV3ZXIgJ3doZWVsJyBldmVudC5cbiAgICAgICAgICpcbiAgICAgICAgICogV2h5IGFyZSB0aGVyZSBzcGluWCwgc3BpblkgKG9yIHBpeGVscyk/XG4gICAgICAgICAqXG4gICAgICAgICAqICAgLSBzcGluWCBpcyBhIDItZmluZ2VyIHNpZGUgZHJhZyBvbiB0aGUgdHJhY2twYWQsIGFuZCBhIHNoaWZ0ICsgd2hlZWwgdHVyblxuICAgICAgICAgKiAgICAgd2l0aCBhIG1vdXNlLiAgSXQgcmVzdWx0cyBpbiBzaWRlLXNjcm9sbGluZyBpbiB0aGUgYnJvd3NlciBieSBkZWZhdWx0LlxuICAgICAgICAgKlxuICAgICAgICAgKiAgIC0gc3BpblkgaXMgd2hhdCB5b3UgZXhwZWN0IC0tIGl0J3MgdGhlIGNsYXNzaWMgYXhpcyBvZiBhIG1vdXNlIHdoZWVsLlxuICAgICAgICAgKlxuICAgICAgICAgKiAgIC0gSSBkcm9wcGVkIHNwaW5aL3BpeGVsWi4gIEl0IGlzIHN1cHBvcnRlZCBieSB0aGUgRE9NIDMgJ3doZWVsJyBldmVudCBhbmRcbiAgICAgICAgICogICAgIHByb2JhYmx5IGlzIGJ5IGJyb3dzZXJzIGluIGNvbmp1bmN0aW9uIHdpdGggZmFuY3kgM0QgY29udHJvbGxlcnMgLi4gYnV0XG4gICAgICAgICAqICAgICB5b3Uga25vdy5cbiAgICAgICAgICpcbiAgICAgICAgICogSW1wbGVtZW50YXRpb24gaW5mbzpcbiAgICAgICAgICpcbiAgICAgICAgICogRXhhbXBsZXMgb2YgJ3doZWVsJyBldmVudCBpZiB5b3Ugc2Nyb2xsIHNsb3dseSAoZG93bikgYnkgb25lIHN0ZXAgd2l0aCBhblxuICAgICAgICAgKiBhdmVyYWdlIG1vdXNlOlxuICAgICAgICAgKlxuICAgICAgICAgKiAgIE9TIFggKyBDaHJvbWUgIChtb3VzZSkgICAgIC0gICAgNCAgIHBpeGVsIGRlbHRhICAod2hlZWxEZWx0YSAtMTIwKVxuICAgICAgICAgKiAgIE9TIFggKyBTYWZhcmkgIChtb3VzZSkgICAgIC0gIE4vQSAgIHBpeGVsIGRlbHRhICAod2hlZWxEZWx0YSAgLTEyKVxuICAgICAgICAgKiAgIE9TIFggKyBGaXJlZm94IChtb3VzZSkgICAgIC0gICAgMC4xIGxpbmUgIGRlbHRhICAod2hlZWxEZWx0YSAgTi9BKVxuICAgICAgICAgKiAgIFdpbjggKyBDaHJvbWUgIChtb3VzZSkgICAgIC0gIDEwMCAgIHBpeGVsIGRlbHRhICAod2hlZWxEZWx0YSAtMTIwKVxuICAgICAgICAgKiAgIFdpbjggKyBGaXJlZm94IChtb3VzZSkgICAgIC0gICAgMyAgIGxpbmUgIGRlbHRhICAod2hlZWxEZWx0YSAtMTIwKVxuICAgICAgICAgKlxuICAgICAgICAgKiBPbiB0aGUgdHJhY2twYWQ6XG4gICAgICAgICAqXG4gICAgICAgICAqICAgT1MgWCArIENocm9tZSAgKHRyYWNrcGFkKSAgLSAgICAyICAgcGl4ZWwgZGVsdGEgICh3aGVlbERlbHRhICAgLTYpXG4gICAgICAgICAqICAgT1MgWCArIEZpcmVmb3ggKHRyYWNrcGFkKSAgLSAgICAxICAgcGl4ZWwgZGVsdGEgICh3aGVlbERlbHRhICBOL0EpXG4gICAgICAgICAqXG4gICAgICAgICAqIE9uIG90aGVyL29sZGVyIGJyb3dzZXJzLi4gaXQncyBtb3JlIGNvbXBsaWNhdGVkIGFzIHRoZXJlIGNhbiBiZSBtdWx0aXBsZSBhbmRcbiAgICAgICAgICogYWxzbyBtaXNzaW5nIGRlbHRhIHZhbHVlcy5cbiAgICAgICAgICpcbiAgICAgICAgICogVGhlICd3aGVlbCcgZXZlbnQgaXMgbW9yZSBzdGFuZGFyZDpcbiAgICAgICAgICpcbiAgICAgICAgICogaHR0cDovL3d3dy53My5vcmcvVFIvRE9NLUxldmVsLTMtRXZlbnRzLyNldmVudHMtd2hlZWxldmVudHNcbiAgICAgICAgICpcbiAgICAgICAgICogVGhlIGJhc2ljcyBpcyB0aGF0IGl0IGluY2x1ZGVzIGEgdW5pdCwgZGVsdGFNb2RlIChwaXhlbHMsIGxpbmVzLCBwYWdlcyksIGFuZFxuICAgICAgICAgKiBkZWx0YVgsIGRlbHRhWSBhbmQgZGVsdGFaLiAgU29tZSBicm93c2VycyBwcm92aWRlIG90aGVyIHZhbHVlcyB0byBtYWludGFpblxuICAgICAgICAgKiBiYWNrd2FyZCBjb21wYXRpYmlsaXR5IHdpdGggb2xkZXIgZXZlbnRzLiAgVGhvc2Ugb3RoZXIgdmFsdWVzIGhlbHAgdXNcbiAgICAgICAgICogYmV0dGVyIG5vcm1hbGl6ZSBzcGluIHNwZWVkLiAgRXhhbXBsZSBvZiB3aGF0IHRoZSBicm93c2VycyBwcm92aWRlOlxuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgfCBldmVudC53aGVlbERlbHRhIHwgZXZlbnQuZGV0YWlsXG4gICAgICAgICAqICAgICAgICAtLS0tLS0tLS0tLS0tLS0tLS0rLS0tLS0tLS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0tLS0tXG4gICAgICAgICAqICAgICAgICAgIFNhZmFyaSB2NS9PUyBYICB8ICAgICAgIC0xMjAgICAgICAgfCAgICAgICAwXG4gICAgICAgICAqICAgICAgICAgIFNhZmFyaSB2NS9XaW43ICB8ICAgICAgIC0xMjAgICAgICAgfCAgICAgICAwXG4gICAgICAgICAqICAgICAgICAgQ2hyb21lIHYxNy9PUyBYICB8ICAgICAgIC0xMjAgICAgICAgfCAgICAgICAwXG4gICAgICAgICAqICAgICAgICAgQ2hyb21lIHYxNy9XaW43ICB8ICAgICAgIC0xMjAgICAgICAgfCAgICAgICAwXG4gICAgICAgICAqICAgICAgICAgICAgICAgIElFOS9XaW43ICB8ICAgICAgIC0xMjAgICAgICAgfCAgIHVuZGVmaW5lZFxuICAgICAgICAgKiAgICAgICAgIEZpcmVmb3ggdjQvT1MgWCAgfCAgICAgdW5kZWZpbmVkICAgIHwgICAgICAgMVxuICAgICAgICAgKiAgICAgICAgIEZpcmVmb3ggdjQvV2luNyAgfCAgICAgdW5kZWZpbmVkICAgIHwgICAgICAgM1xuICAgICAgICAgKlxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gbm9ybWFsaXplV2hlZWwoIC8qb2JqZWN0Ki8gZXZlbnQgKSAvKm9iamVjdCovIHtcbiAgICAgICAgICAgIC8vIFJlYXNvbmFibGUgZGVmYXVsdHNcbiAgICAgICAgICAgIHZhciBQSVhFTF9TVEVQID0gMTA7XG4gICAgICAgICAgICB2YXIgTElORV9IRUlHSFQgPSA0MDtcbiAgICAgICAgICAgIHZhciBQQUdFX0hFSUdIVCA9IDgwMDtcbiAgICAgICAgXG4gICAgICAgICAgICB2YXIgc1ggPSAwLCBzWSA9IDAsICAgICAgIC8vIHNwaW5YLCBzcGluWVxuICAgICAgICAgICAgICAgIHBYID0gMCwgcFkgPSAwOyAgICAgICAvLyBwaXhlbFgsIHBpeGVsWVxuICAgICAgICBcbiAgICAgICAgICAgIC8vIExlZ2FjeVxuICAgICAgICAgICAgaWYoICdkZXRhaWwnIGluIGV2ZW50ICkge1xuICAgICAgICAgICAgICAgIHNZID0gZXZlbnQuZGV0YWlsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYoICd3aGVlbERlbHRhJyBpbiBldmVudCApIHtcbiAgICAgICAgICAgICAgICBzWSA9IC1ldmVudC53aGVlbERlbHRhIC8gMTIwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYoICd3aGVlbERlbHRhWScgaW4gZXZlbnQgKSB7XG4gICAgICAgICAgICAgICAgc1kgPSAtZXZlbnQud2hlZWxEZWx0YVkgLyAxMjA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiggJ3doZWVsRGVsdGFYJyBpbiBldmVudCApIHtcbiAgICAgICAgICAgICAgICBzWCA9IC1ldmVudC53aGVlbERlbHRhWCAvIDEyMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAvLyBzaWRlIHNjcm9sbGluZyBvbiBGRiB3aXRoIERPTU1vdXNlU2Nyb2xsXG4gICAgICAgICAgICBpZiggJ2F4aXMnIGluIGV2ZW50ICYmIGV2ZW50LmF4aXMgPT09IGV2ZW50LkhPUklaT05UQUxfQVhJUyApIHtcbiAgICAgICAgICAgICAgICBzWCA9IHNZO1xuICAgICAgICAgICAgICAgIHNZID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBwWCA9IHNYICogUElYRUxfU1RFUDtcbiAgICAgICAgICAgIHBZID0gc1kgKiBQSVhFTF9TVEVQO1xuICAgICAgICBcbiAgICAgICAgICAgIGlmKCAnZGVsdGFZJyBpbiBldmVudCApIHtcbiAgICAgICAgICAgICAgICBwWSA9IGV2ZW50LmRlbHRhWTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmKCAnZGVsdGFYJyBpbiBldmVudCApIHtcbiAgICAgICAgICAgICAgICBwWCA9IGV2ZW50LmRlbHRhWDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBpZiggKHBYIHx8IHBZKSAmJiBldmVudC5kZWx0YU1vZGUgKSB7XG4gICAgICAgICAgICAgICAgaWYoIGV2ZW50LmRlbHRhTW9kZSA9PT0gMSApIHsgICAgICAgICAgLy8gZGVsdGEgaW4gTElORSB1bml0c1xuICAgICAgICAgICAgICAgICAgICBwWCAqPSBMSU5FX0hFSUdIVDtcbiAgICAgICAgICAgICAgICAgICAgcFkgKj0gTElORV9IRUlHSFQ7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHsgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGRlbHRhIGluIFBBR0UgdW5pdHNcbiAgICAgICAgICAgICAgICAgICAgcFggKj0gUEFHRV9IRUlHSFQ7XG4gICAgICAgICAgICAgICAgICAgIHBZICo9IFBBR0VfSEVJR0hUO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAvLyBGYWxsLWJhY2sgaWYgc3BpbiBjYW5ub3QgYmUgZGV0ZXJtaW5lZFxuICAgICAgICAgICAgaWYoIHBYICYmICFzWCApIHtcbiAgICAgICAgICAgICAgICBzWCA9IChwWCA8IDEpID8gLTEgOiAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYoIHBZICYmICFzWSApIHtcbiAgICAgICAgICAgICAgICBzWSA9IChwWSA8IDEpID8gLTEgOiAxO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3Bpblg6IHNYLFxuICAgICAgICAgICAgICAgIHNwaW5ZOiBzWSxcbiAgICAgICAgICAgICAgICBwaXhlbFg6IHBYLFxuICAgICAgICAgICAgICAgIHBpeGVsWTogcFlcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHMucGFyYW1zLm1vdXNld2hlZWxDb250cm9sKSB7XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIFRoZSBiZXN0IGNvbWJpbmF0aW9uIGlmIHlvdSBwcmVmZXIgc3BpblggKyBzcGluWSBub3JtYWxpemF0aW9uLiAgSXQgZmF2b3JzXG4gICAgICAgICAgICAgKiB0aGUgb2xkZXIgRE9NTW91c2VTY3JvbGwgZm9yIEZpcmVmb3gsIGFzIEZGIGRvZXMgbm90IGluY2x1ZGUgd2hlZWxEZWx0YSB3aXRoXG4gICAgICAgICAgICAgKiAnd2hlZWwnIGV2ZW50LCBtYWtpbmcgc3BpbiBzcGVlZCBkZXRlcm1pbmF0aW9uIGltcG9zc2libGUuXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHMubW91c2V3aGVlbC5ldmVudCA9IChuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ2ZpcmVmb3gnKSA+IC0xKSA/XG4gICAgICAgICAgICAgICAgJ0RPTU1vdXNlU2Nyb2xsJyA6XG4gICAgICAgICAgICAgICAgaXNFdmVudFN1cHBvcnRlZCgpID9cbiAgICAgICAgICAgICAgICAgICAgJ3doZWVsJyA6ICdtb3VzZXdoZWVsJztcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBoYW5kbGVNb3VzZXdoZWVsKGUpIHtcbiAgICAgICAgICAgIGlmIChlLm9yaWdpbmFsRXZlbnQpIGUgPSBlLm9yaWdpbmFsRXZlbnQ7IC8vanF1ZXJ5IGZpeFxuICAgICAgICAgICAgdmFyIGRlbHRhID0gMDtcbiAgICAgICAgICAgIHZhciBydGxGYWN0b3IgPSBzLnJ0bCA/IC0xIDogMTtcbiAgICAgICAgXG4gICAgICAgICAgICB2YXIgZGF0YSA9IG5vcm1hbGl6ZVdoZWVsKCBlICk7XG4gICAgICAgIFxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLm1vdXNld2hlZWxGb3JjZVRvQXhpcykge1xuICAgICAgICAgICAgICAgIGlmIChzLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyhkYXRhLnBpeGVsWCkgPiBNYXRoLmFicyhkYXRhLnBpeGVsWSkpIGRlbHRhID0gZGF0YS5waXhlbFggKiBydGxGYWN0b3I7XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKE1hdGguYWJzKGRhdGEucGl4ZWxZKSA+IE1hdGguYWJzKGRhdGEucGl4ZWxYKSkgZGVsdGEgPSBkYXRhLnBpeGVsWTtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZGVsdGEgPSBNYXRoLmFicyhkYXRhLnBpeGVsWCkgPiBNYXRoLmFicyhkYXRhLnBpeGVsWSkgPyAtIGRhdGEucGl4ZWxYICogcnRsRmFjdG9yIDogLSBkYXRhLnBpeGVsWTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBpZiAoZGVsdGEgPT09IDApIHJldHVybjtcbiAgICAgICAgXG4gICAgICAgICAgICBpZiAocy5wYXJhbXMubW91c2V3aGVlbEludmVydCkgZGVsdGEgPSAtZGVsdGE7XG4gICAgICAgIFxuICAgICAgICAgICAgaWYgKCFzLnBhcmFtcy5mcmVlTW9kZSkge1xuICAgICAgICAgICAgICAgIGlmICgobmV3IHdpbmRvdy5EYXRlKCkpLmdldFRpbWUoKSAtIHMubW91c2V3aGVlbC5sYXN0U2Nyb2xsVGltZSA+IDYwKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkZWx0YSA8IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoIXMuaXNFbmQgfHwgcy5wYXJhbXMubG9vcCkgJiYgIXMuYW5pbWF0aW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcy5zbGlkZU5leHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzLmVtaXQoJ29uU2Nyb2xsJywgcywgZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChzLnBhcmFtcy5tb3VzZXdoZWVsUmVsZWFzZU9uRWRnZXMpIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCghcy5pc0JlZ2lubmluZyB8fCBzLnBhcmFtcy5sb29wKSAmJiAhcy5hbmltYXRpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzLnNsaWRlUHJldigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMuZW1pdCgnb25TY3JvbGwnLCBzLCBlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHMucGFyYW1zLm1vdXNld2hlZWxSZWxlYXNlT25FZGdlcykgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcy5tb3VzZXdoZWVsLmxhc3RTY3JvbGxUaW1lID0gKG5ldyB3aW5kb3cuRGF0ZSgpKS5nZXRUaW1lKCk7XG4gICAgICAgIFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy9GcmVlbW9kZSBvciBzY3JvbGxDb250YWluZXI6XG4gICAgICAgICAgICAgICAgdmFyIHBvc2l0aW9uID0gcy5nZXRXcmFwcGVyVHJhbnNsYXRlKCkgKyBkZWx0YSAqIHMucGFyYW1zLm1vdXNld2hlZWxTZW5zaXRpdml0eTtcbiAgICAgICAgICAgICAgICB2YXIgd2FzQmVnaW5uaW5nID0gcy5pc0JlZ2lubmluZyxcbiAgICAgICAgICAgICAgICAgICAgd2FzRW5kID0gcy5pc0VuZDtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgaWYgKHBvc2l0aW9uID49IHMubWluVHJhbnNsYXRlKCkpIHBvc2l0aW9uID0gcy5taW5UcmFuc2xhdGUoKTtcbiAgICAgICAgICAgICAgICBpZiAocG9zaXRpb24gPD0gcy5tYXhUcmFuc2xhdGUoKSkgcG9zaXRpb24gPSBzLm1heFRyYW5zbGF0ZSgpO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICBzLnNldFdyYXBwZXJUcmFuc2l0aW9uKDApO1xuICAgICAgICAgICAgICAgIHMuc2V0V3JhcHBlclRyYW5zbGF0ZShwb3NpdGlvbik7XG4gICAgICAgICAgICAgICAgcy51cGRhdGVQcm9ncmVzcygpO1xuICAgICAgICAgICAgICAgIHMudXBkYXRlQWN0aXZlSW5kZXgoKTtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgaWYgKCF3YXNCZWdpbm5pbmcgJiYgcy5pc0JlZ2lubmluZyB8fCAhd2FzRW5kICYmIHMuaXNFbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgcy51cGRhdGVDbGFzc2VzKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICAgICBpZiAocy5wYXJhbXMuZnJlZU1vZGVTdGlja3kpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHMubW91c2V3aGVlbC50aW1lb3V0KTtcbiAgICAgICAgICAgICAgICAgICAgcy5tb3VzZXdoZWVsLnRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuc2xpZGVSZXNldCgpO1xuICAgICAgICAgICAgICAgICAgICB9LCAzMDApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLmxhenlMb2FkaW5nICYmIHMubGF6eSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5sYXp5LmxvYWQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBFbWl0IGV2ZW50XG4gICAgICAgICAgICAgICAgcy5lbWl0KCdvblNjcm9sbCcsIHMsIGUpO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBTdG9wIGF1dG9wbGF5XG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLmF1dG9wbGF5ICYmIHMucGFyYW1zLmF1dG9wbGF5RGlzYWJsZU9uSW50ZXJhY3Rpb24pIHMuc3RvcEF1dG9wbGF5KCk7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIFJldHVybiBwYWdlIHNjcm9sbCBvbiBlZGdlIHBvc2l0aW9uc1xuICAgICAgICAgICAgICAgIGlmIChwb3NpdGlvbiA9PT0gMCB8fCBwb3NpdGlvbiA9PT0gcy5tYXhUcmFuc2xhdGUoKSkgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIGlmIChlLnByZXZlbnREZWZhdWx0KSBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBlbHNlIGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBzLmRpc2FibGVNb3VzZXdoZWVsQ29udHJvbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICghcy5tb3VzZXdoZWVsLmV2ZW50KSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB2YXIgdGFyZ2V0ID0gcy5jb250YWluZXI7XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMubW91c2V3aGVlbEV2ZW50c1RhcmdlZCAhPT0gJ2NvbnRhaW5lcicpIHtcbiAgICAgICAgICAgICAgICB0YXJnZXQgPSAkKHMucGFyYW1zLm1vdXNld2hlZWxFdmVudHNUYXJnZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGFyZ2V0Lm9mZihzLm1vdXNld2hlZWwuZXZlbnQsIGhhbmRsZU1vdXNld2hlZWwpO1xuICAgICAgICAgICAgcy5wYXJhbXMubW91c2V3aGVlbENvbnRyb2wgPSBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9O1xuICAgICAgICBcbiAgICAgICAgcy5lbmFibGVNb3VzZXdoZWVsQ29udHJvbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICghcy5tb3VzZXdoZWVsLmV2ZW50KSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB2YXIgdGFyZ2V0ID0gcy5jb250YWluZXI7XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMubW91c2V3aGVlbEV2ZW50c1RhcmdlZCAhPT0gJ2NvbnRhaW5lcicpIHtcbiAgICAgICAgICAgICAgICB0YXJnZXQgPSAkKHMucGFyYW1zLm1vdXNld2hlZWxFdmVudHNUYXJnZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGFyZ2V0Lm9uKHMubW91c2V3aGVlbC5ldmVudCwgaGFuZGxlTW91c2V3aGVlbCk7XG4gICAgICAgICAgICBzLnBhcmFtcy5tb3VzZXdoZWVsQ29udHJvbCA9IHRydWU7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfTtcbiAgICAgICAgXG5cbiAgICAgICAgLyo9PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgICAgICAgUGFyYWxsYXhcbiAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgICAgICBmdW5jdGlvbiBzZXRQYXJhbGxheFRyYW5zZm9ybShlbCwgcHJvZ3Jlc3MpIHtcbiAgICAgICAgICAgIGVsID0gJChlbCk7XG4gICAgICAgICAgICB2YXIgcCwgcFgsIHBZO1xuICAgICAgICAgICAgdmFyIHJ0bEZhY3RvciA9IHMucnRsID8gLTEgOiAxO1xuICAgICAgICBcbiAgICAgICAgICAgIHAgPSBlbC5hdHRyKCdkYXRhLXN3aXBlci1wYXJhbGxheCcpIHx8ICcwJztcbiAgICAgICAgICAgIHBYID0gZWwuYXR0cignZGF0YS1zd2lwZXItcGFyYWxsYXgteCcpO1xuICAgICAgICAgICAgcFkgPSBlbC5hdHRyKCdkYXRhLXN3aXBlci1wYXJhbGxheC15Jyk7XG4gICAgICAgICAgICBpZiAocFggfHwgcFkpIHtcbiAgICAgICAgICAgICAgICBwWCA9IHBYIHx8ICcwJztcbiAgICAgICAgICAgICAgICBwWSA9IHBZIHx8ICcwJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChzLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgICAgICAgICAgICAgIHBYID0gcDtcbiAgICAgICAgICAgICAgICAgICAgcFkgPSAnMCc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBwWSA9IHA7XG4gICAgICAgICAgICAgICAgICAgIHBYID0gJzAnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBpZiAoKHBYKS5pbmRleE9mKCclJykgPj0gMCkge1xuICAgICAgICAgICAgICAgIHBYID0gcGFyc2VJbnQocFgsIDEwKSAqIHByb2dyZXNzICogcnRsRmFjdG9yICsgJyUnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcFggPSBwWCAqIHByb2dyZXNzICogcnRsRmFjdG9yICsgJ3B4JyA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoKHBZKS5pbmRleE9mKCclJykgPj0gMCkge1xuICAgICAgICAgICAgICAgIHBZID0gcGFyc2VJbnQocFksIDEwKSAqIHByb2dyZXNzICsgJyUnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcFkgPSBwWSAqIHByb2dyZXNzICsgJ3B4JyA7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgZWwudHJhbnNmb3JtKCd0cmFuc2xhdGUzZCgnICsgcFggKyAnLCAnICsgcFkgKyAnLDBweCknKTtcbiAgICAgICAgfVxuICAgICAgICBzLnBhcmFsbGF4ID0ge1xuICAgICAgICAgICAgc2V0VHJhbnNsYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcy5jb250YWluZXIuY2hpbGRyZW4oJ1tkYXRhLXN3aXBlci1wYXJhbGxheF0sIFtkYXRhLXN3aXBlci1wYXJhbGxheC14XSwgW2RhdGEtc3dpcGVyLXBhcmFsbGF4LXldJykuZWFjaChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICBzZXRQYXJhbGxheFRyYW5zZm9ybSh0aGlzLCBzLnByb2dyZXNzKTtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcy5zbGlkZXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzbGlkZSA9ICQodGhpcyk7XG4gICAgICAgICAgICAgICAgICAgIHNsaWRlLmZpbmQoJ1tkYXRhLXN3aXBlci1wYXJhbGxheF0sIFtkYXRhLXN3aXBlci1wYXJhbGxheC14XSwgW2RhdGEtc3dpcGVyLXBhcmFsbGF4LXldJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcHJvZ3Jlc3MgPSBNYXRoLm1pbihNYXRoLm1heChzbGlkZVswXS5wcm9ncmVzcywgLTEpLCAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFBhcmFsbGF4VHJhbnNmb3JtKHRoaXMsIHByb2dyZXNzKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0VHJhbnNpdGlvbjogZnVuY3Rpb24gKGR1cmF0aW9uKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkdXJhdGlvbiA9PT0gJ3VuZGVmaW5lZCcpIGR1cmF0aW9uID0gcy5wYXJhbXMuc3BlZWQ7XG4gICAgICAgICAgICAgICAgcy5jb250YWluZXIuZmluZCgnW2RhdGEtc3dpcGVyLXBhcmFsbGF4XSwgW2RhdGEtc3dpcGVyLXBhcmFsbGF4LXhdLCBbZGF0YS1zd2lwZXItcGFyYWxsYXgteV0nKS5lYWNoKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgIHZhciBlbCA9ICQodGhpcyk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJhbGxheER1cmF0aW9uID0gcGFyc2VJbnQoZWwuYXR0cignZGF0YS1zd2lwZXItcGFyYWxsYXgtZHVyYXRpb24nKSwgMTApIHx8IGR1cmF0aW9uO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZHVyYXRpb24gPT09IDApIHBhcmFsbGF4RHVyYXRpb24gPSAwO1xuICAgICAgICAgICAgICAgICAgICBlbC50cmFuc2l0aW9uKHBhcmFsbGF4RHVyYXRpb24pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBcblxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBab29tXG4gICAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbiAgICAgICAgcy56b29tID0ge1xuICAgICAgICAgICAgLy8gXCJHbG9iYWxcIiBQcm9wc1xuICAgICAgICAgICAgc2NhbGU6IDEsXG4gICAgICAgICAgICBjdXJyZW50U2NhbGU6IDEsXG4gICAgICAgICAgICBpc1NjYWxpbmc6IGZhbHNlLFxuICAgICAgICAgICAgZ2VzdHVyZToge1xuICAgICAgICAgICAgICAgIHNsaWRlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgc2xpZGVXaWR0aDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIHNsaWRlSGVpZ2h0OiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgaW1hZ2U6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBpbWFnZVdyYXA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICB6b29tTWF4OiBzLnBhcmFtcy56b29tTWF4XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW1hZ2U6IHtcbiAgICAgICAgICAgICAgICBpc1RvdWNoZWQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBpc01vdmVkOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgY3VycmVudFg6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBjdXJyZW50WTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIG1pblg6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBtaW5ZOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgbWF4WDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIG1heFk6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICB3aWR0aDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIGhlaWdodDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIHN0YXJ0WDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIHN0YXJ0WTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIHRvdWNoZXNTdGFydDoge30sXG4gICAgICAgICAgICAgICAgdG91Y2hlc0N1cnJlbnQ6IHt9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdmVsb2NpdHk6IHtcbiAgICAgICAgICAgICAgICB4OiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgeTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIHByZXZQb3NpdGlvblg6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBwcmV2UG9zaXRpb25ZOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgcHJldlRpbWU6IHVuZGVmaW5lZFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8vIENhbGMgU2NhbGUgRnJvbSBNdWx0aS10b3VjaGVzXG4gICAgICAgICAgICBnZXREaXN0YW5jZUJldHdlZW5Ub3VjaGVzOiBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGlmIChlLnRhcmdldFRvdWNoZXMubGVuZ3RoIDwgMikgcmV0dXJuIDE7XG4gICAgICAgICAgICAgICAgdmFyIHgxID0gZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VYLFxuICAgICAgICAgICAgICAgICAgICB5MSA9IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWSxcbiAgICAgICAgICAgICAgICAgICAgeDIgPSBlLnRhcmdldFRvdWNoZXNbMV0ucGFnZVgsXG4gICAgICAgICAgICAgICAgICAgIHkyID0gZS50YXJnZXRUb3VjaGVzWzFdLnBhZ2VZO1xuICAgICAgICAgICAgICAgIHZhciBkaXN0YW5jZSA9IE1hdGguc3FydChNYXRoLnBvdyh4MiAtIHgxLCAyKSArIE1hdGgucG93KHkyIC0geTEsIDIpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZGlzdGFuY2U7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLy8gRXZlbnRzXG4gICAgICAgICAgICBvbkdlc3R1cmVTdGFydDogZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgeiA9IHMuem9vbTtcbiAgICAgICAgICAgICAgICBpZiAoIXMuc3VwcG9ydC5nZXN0dXJlcykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZS50eXBlICE9PSAndG91Y2hzdGFydCcgfHwgZS50eXBlID09PSAndG91Y2hzdGFydCcgJiYgZS50YXJnZXRUb3VjaGVzLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB6Lmdlc3R1cmUuc2NhbGVTdGFydCA9IHouZ2V0RGlzdGFuY2VCZXR3ZWVuVG91Y2hlcyhlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCF6Lmdlc3R1cmUuc2xpZGUgfHwgIXouZ2VzdHVyZS5zbGlkZS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgei5nZXN0dXJlLnNsaWRlID0gJCh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHouZ2VzdHVyZS5zbGlkZS5sZW5ndGggPT09IDApIHouZ2VzdHVyZS5zbGlkZSA9IHMuc2xpZGVzLmVxKHMuYWN0aXZlSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICB6Lmdlc3R1cmUuaW1hZ2UgPSB6Lmdlc3R1cmUuc2xpZGUuZmluZCgnaW1nLCBzdmcsIGNhbnZhcycpO1xuICAgICAgICAgICAgICAgICAgICB6Lmdlc3R1cmUuaW1hZ2VXcmFwID0gei5nZXN0dXJlLmltYWdlLnBhcmVudCgnLicgKyBzLnBhcmFtcy56b29tQ29udGFpbmVyQ2xhc3MpO1xuICAgICAgICAgICAgICAgICAgICB6Lmdlc3R1cmUuem9vbU1heCA9IHouZ2VzdHVyZS5pbWFnZVdyYXAuYXR0cignZGF0YS1zd2lwZXItem9vbScpIHx8IHMucGFyYW1zLnpvb21NYXggO1xuICAgICAgICAgICAgICAgICAgICBpZiAoei5nZXN0dXJlLmltYWdlV3JhcC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHouZ2VzdHVyZS5pbWFnZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB6Lmdlc3R1cmUuaW1hZ2UudHJhbnNpdGlvbigwKTtcbiAgICAgICAgICAgICAgICB6LmlzU2NhbGluZyA9IHRydWU7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25HZXN0dXJlQ2hhbmdlOiBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIHZhciB6ID0gcy56b29tO1xuICAgICAgICAgICAgICAgIGlmICghcy5zdXBwb3J0Lmdlc3R1cmVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlLnR5cGUgIT09ICd0b3VjaG1vdmUnIHx8IGUudHlwZSA9PT0gJ3RvdWNobW92ZScgJiYgZS50YXJnZXRUb3VjaGVzLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB6Lmdlc3R1cmUuc2NhbGVNb3ZlID0gei5nZXREaXN0YW5jZUJldHdlZW5Ub3VjaGVzKGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIXouZ2VzdHVyZS5pbWFnZSB8fCB6Lmdlc3R1cmUuaW1hZ2UubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgICAgICAgICAgICAgaWYgKHMuc3VwcG9ydC5nZXN0dXJlcykge1xuICAgICAgICAgICAgICAgICAgICB6LnNjYWxlID0gZS5zY2FsZSAqIHouY3VycmVudFNjYWxlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgei5zY2FsZSA9ICh6Lmdlc3R1cmUuc2NhbGVNb3ZlIC8gei5nZXN0dXJlLnNjYWxlU3RhcnQpICogei5jdXJyZW50U2NhbGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh6LnNjYWxlID4gei5nZXN0dXJlLnpvb21NYXgpIHtcbiAgICAgICAgICAgICAgICAgICAgei5zY2FsZSA9IHouZ2VzdHVyZS56b29tTWF4IC0gMSArIE1hdGgucG93KCh6LnNjYWxlIC0gei5nZXN0dXJlLnpvb21NYXggKyAxKSwgMC41KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHouc2NhbGUgPCBzLnBhcmFtcy56b29tTWluKSB7XG4gICAgICAgICAgICAgICAgICAgIHouc2NhbGUgPSAgcy5wYXJhbXMuem9vbU1pbiArIDEgLSBNYXRoLnBvdygocy5wYXJhbXMuem9vbU1pbiAtIHouc2NhbGUgKyAxKSwgMC41KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgei5nZXN0dXJlLmltYWdlLnRyYW5zZm9ybSgndHJhbnNsYXRlM2QoMCwwLDApIHNjYWxlKCcgKyB6LnNjYWxlICsgJyknKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbkdlc3R1cmVFbmQ6IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgdmFyIHogPSBzLnpvb207XG4gICAgICAgICAgICAgICAgaWYgKCFzLnN1cHBvcnQuZ2VzdHVyZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGUudHlwZSAhPT0gJ3RvdWNoZW5kJyB8fCBlLnR5cGUgPT09ICd0b3VjaGVuZCcgJiYgZS5jaGFuZ2VkVG91Y2hlcy5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCF6Lmdlc3R1cmUuaW1hZ2UgfHwgei5nZXN0dXJlLmltYWdlLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgICAgICAgICAgICAgIHouc2NhbGUgPSBNYXRoLm1heChNYXRoLm1pbih6LnNjYWxlLCB6Lmdlc3R1cmUuem9vbU1heCksIHMucGFyYW1zLnpvb21NaW4pO1xuICAgICAgICAgICAgICAgIHouZ2VzdHVyZS5pbWFnZS50cmFuc2l0aW9uKHMucGFyYW1zLnNwZWVkKS50cmFuc2Zvcm0oJ3RyYW5zbGF0ZTNkKDAsMCwwKSBzY2FsZSgnICsgei5zY2FsZSArICcpJyk7XG4gICAgICAgICAgICAgICAgei5jdXJyZW50U2NhbGUgPSB6LnNjYWxlO1xuICAgICAgICAgICAgICAgIHouaXNTY2FsaW5nID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgaWYgKHouc2NhbGUgPT09IDEpIHouZ2VzdHVyZS5zbGlkZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvblRvdWNoU3RhcnQ6IGZ1bmN0aW9uIChzLCBlKSB7XG4gICAgICAgICAgICAgICAgdmFyIHogPSBzLnpvb207XG4gICAgICAgICAgICAgICAgaWYgKCF6Lmdlc3R1cmUuaW1hZ2UgfHwgei5nZXN0dXJlLmltYWdlLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGlmICh6LmltYWdlLmlzVG91Y2hlZCkgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGlmIChzLmRldmljZS5vcyA9PT0gJ2FuZHJvaWQnKSBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgei5pbWFnZS5pc1RvdWNoZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHouaW1hZ2UudG91Y2hlc1N0YXJ0LnggPSBlLnR5cGUgPT09ICd0b3VjaHN0YXJ0JyA/IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWCA6IGUucGFnZVg7XG4gICAgICAgICAgICAgICAgei5pbWFnZS50b3VjaGVzU3RhcnQueSA9IGUudHlwZSA9PT0gJ3RvdWNoc3RhcnQnID8gZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VZIDogZS5wYWdlWTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvblRvdWNoTW92ZTogZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgeiA9IHMuem9vbTtcbiAgICAgICAgICAgICAgICBpZiAoIXouZ2VzdHVyZS5pbWFnZSB8fCB6Lmdlc3R1cmUuaW1hZ2UubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgICAgICAgICAgICAgcy5hbGxvd0NsaWNrID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgaWYgKCF6LmltYWdlLmlzVG91Y2hlZCB8fCAhei5nZXN0dXJlLnNsaWRlKSByZXR1cm47XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIGlmICghei5pbWFnZS5pc01vdmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHouaW1hZ2Uud2lkdGggPSB6Lmdlc3R1cmUuaW1hZ2VbMF0ub2Zmc2V0V2lkdGg7XG4gICAgICAgICAgICAgICAgICAgIHouaW1hZ2UuaGVpZ2h0ID0gei5nZXN0dXJlLmltYWdlWzBdLm9mZnNldEhlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgei5pbWFnZS5zdGFydFggPSBzLmdldFRyYW5zbGF0ZSh6Lmdlc3R1cmUuaW1hZ2VXcmFwWzBdLCAneCcpIHx8IDA7XG4gICAgICAgICAgICAgICAgICAgIHouaW1hZ2Uuc3RhcnRZID0gcy5nZXRUcmFuc2xhdGUoei5nZXN0dXJlLmltYWdlV3JhcFswXSwgJ3knKSB8fCAwO1xuICAgICAgICAgICAgICAgICAgICB6Lmdlc3R1cmUuc2xpZGVXaWR0aCA9IHouZ2VzdHVyZS5zbGlkZVswXS5vZmZzZXRXaWR0aDtcbiAgICAgICAgICAgICAgICAgICAgei5nZXN0dXJlLnNsaWRlSGVpZ2h0ID0gei5nZXN0dXJlLnNsaWRlWzBdLm9mZnNldEhlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgei5nZXN0dXJlLmltYWdlV3JhcC50cmFuc2l0aW9uKDApO1xuICAgICAgICAgICAgICAgICAgICBpZiAocy5ydGwpIHouaW1hZ2Uuc3RhcnRYID0gLXouaW1hZ2Uuc3RhcnRYO1xuICAgICAgICAgICAgICAgICAgICBpZiAocy5ydGwpIHouaW1hZ2Uuc3RhcnRZID0gLXouaW1hZ2Uuc3RhcnRZO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBEZWZpbmUgaWYgd2UgbmVlZCBpbWFnZSBkcmFnXG4gICAgICAgICAgICAgICAgdmFyIHNjYWxlZFdpZHRoID0gei5pbWFnZS53aWR0aCAqIHouc2NhbGU7XG4gICAgICAgICAgICAgICAgdmFyIHNjYWxlZEhlaWdodCA9IHouaW1hZ2UuaGVpZ2h0ICogei5zY2FsZTtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgaWYgKHNjYWxlZFdpZHRoIDwgei5nZXN0dXJlLnNsaWRlV2lkdGggJiYgc2NhbGVkSGVpZ2h0IDwgei5nZXN0dXJlLnNsaWRlSGVpZ2h0KSByZXR1cm47XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIHouaW1hZ2UubWluWCA9IE1hdGgubWluKCh6Lmdlc3R1cmUuc2xpZGVXaWR0aCAvIDIgLSBzY2FsZWRXaWR0aCAvIDIpLCAwKTtcbiAgICAgICAgICAgICAgICB6LmltYWdlLm1heFggPSAtei5pbWFnZS5taW5YO1xuICAgICAgICAgICAgICAgIHouaW1hZ2UubWluWSA9IE1hdGgubWluKCh6Lmdlc3R1cmUuc2xpZGVIZWlnaHQgLyAyIC0gc2NhbGVkSGVpZ2h0IC8gMiksIDApO1xuICAgICAgICAgICAgICAgIHouaW1hZ2UubWF4WSA9IC16LmltYWdlLm1pblk7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIHouaW1hZ2UudG91Y2hlc0N1cnJlbnQueCA9IGUudHlwZSA9PT0gJ3RvdWNobW92ZScgPyBlLnRhcmdldFRvdWNoZXNbMF0ucGFnZVggOiBlLnBhZ2VYO1xuICAgICAgICAgICAgICAgIHouaW1hZ2UudG91Y2hlc0N1cnJlbnQueSA9IGUudHlwZSA9PT0gJ3RvdWNobW92ZScgPyBlLnRhcmdldFRvdWNoZXNbMF0ucGFnZVkgOiBlLnBhZ2VZO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICBpZiAoIXouaW1hZ2UuaXNNb3ZlZCAmJiAhei5pc1NjYWxpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMuaXNIb3Jpem9udGFsKCkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIChNYXRoLmZsb29yKHouaW1hZ2UubWluWCkgPT09IE1hdGguZmxvb3Ioei5pbWFnZS5zdGFydFgpICYmIHouaW1hZ2UudG91Y2hlc0N1cnJlbnQueCA8IHouaW1hZ2UudG91Y2hlc1N0YXJ0LngpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAoTWF0aC5mbG9vcih6LmltYWdlLm1heFgpID09PSBNYXRoLmZsb29yKHouaW1hZ2Uuc3RhcnRYKSAmJiB6LmltYWdlLnRvdWNoZXNDdXJyZW50LnggPiB6LmltYWdlLnRvdWNoZXNTdGFydC54KVxuICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB6LmltYWdlLmlzVG91Y2hlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKCFzLmlzSG9yaXpvbnRhbCgpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAoTWF0aC5mbG9vcih6LmltYWdlLm1pblkpID09PSBNYXRoLmZsb29yKHouaW1hZ2Uuc3RhcnRZKSAmJiB6LmltYWdlLnRvdWNoZXNDdXJyZW50LnkgPCB6LmltYWdlLnRvdWNoZXNTdGFydC55KSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgKE1hdGguZmxvb3Ioei5pbWFnZS5tYXhZKSA9PT0gTWF0aC5mbG9vcih6LmltYWdlLnN0YXJ0WSkgJiYgei5pbWFnZS50b3VjaGVzQ3VycmVudC55ID4gei5pbWFnZS50b3VjaGVzU3RhcnQueSlcbiAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgei5pbWFnZS5pc1RvdWNoZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgei5pbWFnZS5pc01vdmVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB6LmltYWdlLmN1cnJlbnRYID0gei5pbWFnZS50b3VjaGVzQ3VycmVudC54IC0gei5pbWFnZS50b3VjaGVzU3RhcnQueCArIHouaW1hZ2Uuc3RhcnRYO1xuICAgICAgICAgICAgICAgIHouaW1hZ2UuY3VycmVudFkgPSB6LmltYWdlLnRvdWNoZXNDdXJyZW50LnkgLSB6LmltYWdlLnRvdWNoZXNTdGFydC55ICsgei5pbWFnZS5zdGFydFk7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIGlmICh6LmltYWdlLmN1cnJlbnRYIDwgei5pbWFnZS5taW5YKSB7XG4gICAgICAgICAgICAgICAgICAgIHouaW1hZ2UuY3VycmVudFggPSAgei5pbWFnZS5taW5YICsgMSAtIE1hdGgucG93KCh6LmltYWdlLm1pblggLSB6LmltYWdlLmN1cnJlbnRYICsgMSksIDAuOCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh6LmltYWdlLmN1cnJlbnRYID4gei5pbWFnZS5tYXhYKSB7XG4gICAgICAgICAgICAgICAgICAgIHouaW1hZ2UuY3VycmVudFggPSB6LmltYWdlLm1heFggLSAxICsgTWF0aC5wb3coKHouaW1hZ2UuY3VycmVudFggLSB6LmltYWdlLm1heFggKyAxKSwgMC44KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIGlmICh6LmltYWdlLmN1cnJlbnRZIDwgei5pbWFnZS5taW5ZKSB7XG4gICAgICAgICAgICAgICAgICAgIHouaW1hZ2UuY3VycmVudFkgPSAgei5pbWFnZS5taW5ZICsgMSAtIE1hdGgucG93KCh6LmltYWdlLm1pblkgLSB6LmltYWdlLmN1cnJlbnRZICsgMSksIDAuOCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh6LmltYWdlLmN1cnJlbnRZID4gei5pbWFnZS5tYXhZKSB7XG4gICAgICAgICAgICAgICAgICAgIHouaW1hZ2UuY3VycmVudFkgPSB6LmltYWdlLm1heFkgLSAxICsgTWF0aC5wb3coKHouaW1hZ2UuY3VycmVudFkgLSB6LmltYWdlLm1heFkgKyAxKSwgMC44KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIC8vVmVsb2NpdHlcbiAgICAgICAgICAgICAgICBpZiAoIXoudmVsb2NpdHkucHJldlBvc2l0aW9uWCkgei52ZWxvY2l0eS5wcmV2UG9zaXRpb25YID0gei5pbWFnZS50b3VjaGVzQ3VycmVudC54O1xuICAgICAgICAgICAgICAgIGlmICghei52ZWxvY2l0eS5wcmV2UG9zaXRpb25ZKSB6LnZlbG9jaXR5LnByZXZQb3NpdGlvblkgPSB6LmltYWdlLnRvdWNoZXNDdXJyZW50Lnk7XG4gICAgICAgICAgICAgICAgaWYgKCF6LnZlbG9jaXR5LnByZXZUaW1lKSB6LnZlbG9jaXR5LnByZXZUaW1lID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgICAgICB6LnZlbG9jaXR5LnggPSAoei5pbWFnZS50b3VjaGVzQ3VycmVudC54IC0gei52ZWxvY2l0eS5wcmV2UG9zaXRpb25YKSAvIChEYXRlLm5vdygpIC0gei52ZWxvY2l0eS5wcmV2VGltZSkgLyAyO1xuICAgICAgICAgICAgICAgIHoudmVsb2NpdHkueSA9ICh6LmltYWdlLnRvdWNoZXNDdXJyZW50LnkgLSB6LnZlbG9jaXR5LnByZXZQb3NpdGlvblkpIC8gKERhdGUubm93KCkgLSB6LnZlbG9jaXR5LnByZXZUaW1lKSAvIDI7XG4gICAgICAgICAgICAgICAgaWYgKE1hdGguYWJzKHouaW1hZ2UudG91Y2hlc0N1cnJlbnQueCAtIHoudmVsb2NpdHkucHJldlBvc2l0aW9uWCkgPCAyKSB6LnZlbG9jaXR5LnggPSAwO1xuICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyh6LmltYWdlLnRvdWNoZXNDdXJyZW50LnkgLSB6LnZlbG9jaXR5LnByZXZQb3NpdGlvblkpIDwgMikgei52ZWxvY2l0eS55ID0gMDtcbiAgICAgICAgICAgICAgICB6LnZlbG9jaXR5LnByZXZQb3NpdGlvblggPSB6LmltYWdlLnRvdWNoZXNDdXJyZW50Lng7XG4gICAgICAgICAgICAgICAgei52ZWxvY2l0eS5wcmV2UG9zaXRpb25ZID0gei5pbWFnZS50b3VjaGVzQ3VycmVudC55O1xuICAgICAgICAgICAgICAgIHoudmVsb2NpdHkucHJldlRpbWUgPSBEYXRlLm5vdygpO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICB6Lmdlc3R1cmUuaW1hZ2VXcmFwLnRyYW5zZm9ybSgndHJhbnNsYXRlM2QoJyArIHouaW1hZ2UuY3VycmVudFggKyAncHgsICcgKyB6LmltYWdlLmN1cnJlbnRZICsgJ3B4LDApJyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25Ub3VjaEVuZDogZnVuY3Rpb24gKHMsIGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgeiA9IHMuem9vbTtcbiAgICAgICAgICAgICAgICBpZiAoIXouZ2VzdHVyZS5pbWFnZSB8fCB6Lmdlc3R1cmUuaW1hZ2UubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgICAgICAgICAgICAgaWYgKCF6LmltYWdlLmlzVG91Y2hlZCB8fCAhei5pbWFnZS5pc01vdmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHouaW1hZ2UuaXNUb3VjaGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIHouaW1hZ2UuaXNNb3ZlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHouaW1hZ2UuaXNUb3VjaGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgei5pbWFnZS5pc01vdmVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgdmFyIG1vbWVudHVtRHVyYXRpb25YID0gMzAwO1xuICAgICAgICAgICAgICAgIHZhciBtb21lbnR1bUR1cmF0aW9uWSA9IDMwMDtcbiAgICAgICAgICAgICAgICB2YXIgbW9tZW50dW1EaXN0YW5jZVggPSB6LnZlbG9jaXR5LnggKiBtb21lbnR1bUR1cmF0aW9uWDtcbiAgICAgICAgICAgICAgICB2YXIgbmV3UG9zaXRpb25YID0gei5pbWFnZS5jdXJyZW50WCArIG1vbWVudHVtRGlzdGFuY2VYO1xuICAgICAgICAgICAgICAgIHZhciBtb21lbnR1bURpc3RhbmNlWSA9IHoudmVsb2NpdHkueSAqIG1vbWVudHVtRHVyYXRpb25ZO1xuICAgICAgICAgICAgICAgIHZhciBuZXdQb3NpdGlvblkgPSB6LmltYWdlLmN1cnJlbnRZICsgbW9tZW50dW1EaXN0YW5jZVk7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIC8vRml4IGR1cmF0aW9uXG4gICAgICAgICAgICAgICAgaWYgKHoudmVsb2NpdHkueCAhPT0gMCkgbW9tZW50dW1EdXJhdGlvblggPSBNYXRoLmFicygobmV3UG9zaXRpb25YIC0gei5pbWFnZS5jdXJyZW50WCkgLyB6LnZlbG9jaXR5LngpO1xuICAgICAgICAgICAgICAgIGlmICh6LnZlbG9jaXR5LnkgIT09IDApIG1vbWVudHVtRHVyYXRpb25ZID0gTWF0aC5hYnMoKG5ld1Bvc2l0aW9uWSAtIHouaW1hZ2UuY3VycmVudFkpIC8gei52ZWxvY2l0eS55KTtcbiAgICAgICAgICAgICAgICB2YXIgbW9tZW50dW1EdXJhdGlvbiA9IE1hdGgubWF4KG1vbWVudHVtRHVyYXRpb25YLCBtb21lbnR1bUR1cmF0aW9uWSk7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIHouaW1hZ2UuY3VycmVudFggPSBuZXdQb3NpdGlvblg7XG4gICAgICAgICAgICAgICAgei5pbWFnZS5jdXJyZW50WSA9IG5ld1Bvc2l0aW9uWTtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gRGVmaW5lIGlmIHdlIG5lZWQgaW1hZ2UgZHJhZ1xuICAgICAgICAgICAgICAgIHZhciBzY2FsZWRXaWR0aCA9IHouaW1hZ2Uud2lkdGggKiB6LnNjYWxlO1xuICAgICAgICAgICAgICAgIHZhciBzY2FsZWRIZWlnaHQgPSB6LmltYWdlLmhlaWdodCAqIHouc2NhbGU7XG4gICAgICAgICAgICAgICAgei5pbWFnZS5taW5YID0gTWF0aC5taW4oKHouZ2VzdHVyZS5zbGlkZVdpZHRoIC8gMiAtIHNjYWxlZFdpZHRoIC8gMiksIDApO1xuICAgICAgICAgICAgICAgIHouaW1hZ2UubWF4WCA9IC16LmltYWdlLm1pblg7XG4gICAgICAgICAgICAgICAgei5pbWFnZS5taW5ZID0gTWF0aC5taW4oKHouZ2VzdHVyZS5zbGlkZUhlaWdodCAvIDIgLSBzY2FsZWRIZWlnaHQgLyAyKSwgMCk7XG4gICAgICAgICAgICAgICAgei5pbWFnZS5tYXhZID0gLXouaW1hZ2UubWluWTtcbiAgICAgICAgICAgICAgICB6LmltYWdlLmN1cnJlbnRYID0gTWF0aC5tYXgoTWF0aC5taW4oei5pbWFnZS5jdXJyZW50WCwgei5pbWFnZS5tYXhYKSwgei5pbWFnZS5taW5YKTtcbiAgICAgICAgICAgICAgICB6LmltYWdlLmN1cnJlbnRZID0gTWF0aC5tYXgoTWF0aC5taW4oei5pbWFnZS5jdXJyZW50WSwgei5pbWFnZS5tYXhZKSwgei5pbWFnZS5taW5ZKTtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgei5nZXN0dXJlLmltYWdlV3JhcC50cmFuc2l0aW9uKG1vbWVudHVtRHVyYXRpb24pLnRyYW5zZm9ybSgndHJhbnNsYXRlM2QoJyArIHouaW1hZ2UuY3VycmVudFggKyAncHgsICcgKyB6LmltYWdlLmN1cnJlbnRZICsgJ3B4LDApJyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25UcmFuc2l0aW9uRW5kOiBmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgICAgIHZhciB6ID0gcy56b29tO1xuICAgICAgICAgICAgICAgIGlmICh6Lmdlc3R1cmUuc2xpZGUgJiYgcy5wcmV2aW91c0luZGV4ICE9PSBzLmFjdGl2ZUluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIHouZ2VzdHVyZS5pbWFnZS50cmFuc2Zvcm0oJ3RyYW5zbGF0ZTNkKDAsMCwwKSBzY2FsZSgxKScpO1xuICAgICAgICAgICAgICAgICAgICB6Lmdlc3R1cmUuaW1hZ2VXcmFwLnRyYW5zZm9ybSgndHJhbnNsYXRlM2QoMCwwLDApJyk7XG4gICAgICAgICAgICAgICAgICAgIHouZ2VzdHVyZS5zbGlkZSA9IHouZ2VzdHVyZS5pbWFnZSA9IHouZ2VzdHVyZS5pbWFnZVdyYXAgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgICAgIHouc2NhbGUgPSB6LmN1cnJlbnRTY2FsZSA9IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8vIFRvZ2dsZSBab29tXG4gICAgICAgICAgICB0b2dnbGVab29tOiBmdW5jdGlvbiAocywgZSkge1xuICAgICAgICAgICAgICAgIHZhciB6ID0gcy56b29tO1xuICAgICAgICAgICAgICAgIGlmICghei5nZXN0dXJlLnNsaWRlKSB7XG4gICAgICAgICAgICAgICAgICAgIHouZ2VzdHVyZS5zbGlkZSA9IHMuY2xpY2tlZFNsaWRlID8gJChzLmNsaWNrZWRTbGlkZSkgOiBzLnNsaWRlcy5lcShzLmFjdGl2ZUluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgei5nZXN0dXJlLmltYWdlID0gei5nZXN0dXJlLnNsaWRlLmZpbmQoJ2ltZywgc3ZnLCBjYW52YXMnKTtcbiAgICAgICAgICAgICAgICAgICAgei5nZXN0dXJlLmltYWdlV3JhcCA9IHouZ2VzdHVyZS5pbWFnZS5wYXJlbnQoJy4nICsgcy5wYXJhbXMuem9vbUNvbnRhaW5lckNsYXNzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCF6Lmdlc3R1cmUuaW1hZ2UgfHwgei5nZXN0dXJlLmltYWdlLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICB2YXIgdG91Y2hYLCB0b3VjaFksIG9mZnNldFgsIG9mZnNldFksIGRpZmZYLCBkaWZmWSwgdHJhbnNsYXRlWCwgdHJhbnNsYXRlWSwgaW1hZ2VXaWR0aCwgaW1hZ2VIZWlnaHQsIHNjYWxlZFdpZHRoLCBzY2FsZWRIZWlnaHQsIHRyYW5zbGF0ZU1pblgsIHRyYW5zbGF0ZU1pblksIHRyYW5zbGF0ZU1heFgsIHRyYW5zbGF0ZU1heFksIHNsaWRlV2lkdGgsIHNsaWRlSGVpZ2h0O1xuICAgICAgICBcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHouaW1hZ2UudG91Y2hlc1N0YXJ0LnggPT09ICd1bmRlZmluZWQnICYmIGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdG91Y2hYID0gZS50eXBlID09PSAndG91Y2hlbmQnID8gZS5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWCA6IGUucGFnZVg7XG4gICAgICAgICAgICAgICAgICAgIHRvdWNoWSA9IGUudHlwZSA9PT0gJ3RvdWNoZW5kJyA/IGUuY2hhbmdlZFRvdWNoZXNbMF0ucGFnZVkgOiBlLnBhZ2VZO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdG91Y2hYID0gei5pbWFnZS50b3VjaGVzU3RhcnQueDtcbiAgICAgICAgICAgICAgICAgICAgdG91Y2hZID0gei5pbWFnZS50b3VjaGVzU3RhcnQueTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIGlmICh6LnNjYWxlICYmIHouc2NhbGUgIT09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gWm9vbSBPdXRcbiAgICAgICAgICAgICAgICAgICAgei5zY2FsZSA9IHouY3VycmVudFNjYWxlID0gMTtcbiAgICAgICAgICAgICAgICAgICAgei5nZXN0dXJlLmltYWdlV3JhcC50cmFuc2l0aW9uKDMwMCkudHJhbnNmb3JtKCd0cmFuc2xhdGUzZCgwLDAsMCknKTtcbiAgICAgICAgICAgICAgICAgICAgei5nZXN0dXJlLmltYWdlLnRyYW5zaXRpb24oMzAwKS50cmFuc2Zvcm0oJ3RyYW5zbGF0ZTNkKDAsMCwwKSBzY2FsZSgxKScpO1xuICAgICAgICAgICAgICAgICAgICB6Lmdlc3R1cmUuc2xpZGUgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBab29tIEluXG4gICAgICAgICAgICAgICAgICAgIHouc2NhbGUgPSB6LmN1cnJlbnRTY2FsZSA9IHouZ2VzdHVyZS5pbWFnZVdyYXAuYXR0cignZGF0YS1zd2lwZXItem9vbScpIHx8IHMucGFyYW1zLnpvb21NYXg7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzbGlkZVdpZHRoID0gei5nZXN0dXJlLnNsaWRlWzBdLm9mZnNldFdpZHRoO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVIZWlnaHQgPSB6Lmdlc3R1cmUuc2xpZGVbMF0ub2Zmc2V0SGVpZ2h0O1xuICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0WCA9IHouZ2VzdHVyZS5zbGlkZS5vZmZzZXQoKS5sZWZ0O1xuICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0WSA9IHouZ2VzdHVyZS5zbGlkZS5vZmZzZXQoKS50b3A7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaWZmWCA9IG9mZnNldFggKyBzbGlkZVdpZHRoLzIgLSB0b3VjaFg7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaWZmWSA9IG9mZnNldFkgKyBzbGlkZUhlaWdodC8yIC0gdG91Y2hZO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlV2lkdGggPSB6Lmdlc3R1cmUuaW1hZ2VbMF0ub2Zmc2V0V2lkdGg7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbWFnZUhlaWdodCA9IHouZ2VzdHVyZS5pbWFnZVswXS5vZmZzZXRIZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBzY2FsZWRXaWR0aCA9IGltYWdlV2lkdGggKiB6LnNjYWxlO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2NhbGVkSGVpZ2h0ID0gaW1hZ2VIZWlnaHQgKiB6LnNjYWxlO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0ZU1pblggPSBNYXRoLm1pbigoc2xpZGVXaWR0aCAvIDIgLSBzY2FsZWRXaWR0aCAvIDIpLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0ZU1pblkgPSBNYXRoLm1pbigoc2xpZGVIZWlnaHQgLyAyIC0gc2NhbGVkSGVpZ2h0IC8gMiksIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRlTWF4WCA9IC10cmFuc2xhdGVNaW5YO1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRlTWF4WSA9IC10cmFuc2xhdGVNaW5ZO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0ZVggPSBkaWZmWCAqIHouc2NhbGU7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGVZID0gZGlmZlkgKiB6LnNjYWxlO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0cmFuc2xhdGVYIDwgdHJhbnNsYXRlTWluWCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0ZVggPSAgdHJhbnNsYXRlTWluWDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0cmFuc2xhdGVYID4gdHJhbnNsYXRlTWF4WCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0ZVggPSB0cmFuc2xhdGVNYXhYO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0cmFuc2xhdGVZIDwgdHJhbnNsYXRlTWluWSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0ZVkgPSAgdHJhbnNsYXRlTWluWTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0cmFuc2xhdGVZID4gdHJhbnNsYXRlTWF4WSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0ZVkgPSB0cmFuc2xhdGVNYXhZO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRlWCA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGVZID0gMDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB6Lmdlc3R1cmUuaW1hZ2VXcmFwLnRyYW5zaXRpb24oMzAwKS50cmFuc2Zvcm0oJ3RyYW5zbGF0ZTNkKCcgKyB0cmFuc2xhdGVYICsgJ3B4LCAnICsgdHJhbnNsYXRlWSArICdweCwwKScpO1xuICAgICAgICAgICAgICAgICAgICB6Lmdlc3R1cmUuaW1hZ2UudHJhbnNpdGlvbigzMDApLnRyYW5zZm9ybSgndHJhbnNsYXRlM2QoMCwwLDApIHNjYWxlKCcgKyB6LnNjYWxlICsgJyknKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLy8gQXR0YWNoL0RldGFjaCBFdmVudHNcbiAgICAgICAgICAgIGF0dGFjaEV2ZW50czogZnVuY3Rpb24gKGRldGFjaCkge1xuICAgICAgICAgICAgICAgIHZhciBhY3Rpb24gPSBkZXRhY2ggPyAnb2ZmJyA6ICdvbic7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy56b29tKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0YXJnZXQgPSBzLnNsaWRlcztcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhc3NpdmVMaXN0ZW5lciA9IHMudG91Y2hFdmVudHMuc3RhcnQgPT09ICd0b3VjaHN0YXJ0JyAmJiBzLnN1cHBvcnQucGFzc2l2ZUxpc3RlbmVyICYmIHMucGFyYW1zLnBhc3NpdmVMaXN0ZW5lcnMgPyB7cGFzc2l2ZTogdHJ1ZSwgY2FwdHVyZTogZmFsc2V9IDogZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIC8vIFNjYWxlIGltYWdlXG4gICAgICAgICAgICAgICAgICAgIGlmIChzLnN1cHBvcnQuZ2VzdHVyZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuc2xpZGVzW2FjdGlvbl0oJ2dlc3R1cmVzdGFydCcsIHMuem9vbS5vbkdlc3R1cmVTdGFydCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuc2xpZGVzW2FjdGlvbl0oJ2dlc3R1cmVjaGFuZ2UnLCBzLnpvb20ub25HZXN0dXJlQ2hhbmdlLCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5zbGlkZXNbYWN0aW9uXSgnZ2VzdHVyZWVuZCcsIHMuem9vbS5vbkdlc3R1cmVFbmQsIHBhc3NpdmVMaXN0ZW5lcik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAocy50b3VjaEV2ZW50cy5zdGFydCA9PT0gJ3RvdWNoc3RhcnQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLnNsaWRlc1thY3Rpb25dKHMudG91Y2hFdmVudHMuc3RhcnQsIHMuem9vbS5vbkdlc3R1cmVTdGFydCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuc2xpZGVzW2FjdGlvbl0ocy50b3VjaEV2ZW50cy5tb3ZlLCBzLnpvb20ub25HZXN0dXJlQ2hhbmdlLCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5zbGlkZXNbYWN0aW9uXShzLnRvdWNoRXZlbnRzLmVuZCwgcy56b29tLm9uR2VzdHVyZUVuZCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLy8gTW92ZSBpbWFnZVxuICAgICAgICAgICAgICAgICAgICBzW2FjdGlvbl0oJ3RvdWNoU3RhcnQnLCBzLnpvb20ub25Ub3VjaFN0YXJ0KTtcbiAgICAgICAgICAgICAgICAgICAgcy5zbGlkZXMuZWFjaChmdW5jdGlvbiAoaW5kZXgsIHNsaWRlKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKHNsaWRlKS5maW5kKCcuJyArIHMucGFyYW1zLnpvb21Db250YWluZXJDbGFzcykubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoc2xpZGUpW2FjdGlvbl0ocy50b3VjaEV2ZW50cy5tb3ZlLCBzLnpvb20ub25Ub3VjaE1vdmUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgc1thY3Rpb25dKCd0b3VjaEVuZCcsIHMuem9vbS5vblRvdWNoRW5kKTtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC8vIFNjYWxlIE91dFxuICAgICAgICAgICAgICAgICAgICBzW2FjdGlvbl0oJ3RyYW5zaXRpb25FbmQnLCBzLnpvb20ub25UcmFuc2l0aW9uRW5kKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLnpvb21Ub2dnbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMub24oJ2RvdWJsZVRhcCcsIHMuem9vbS50b2dnbGVab29tKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcy56b29tLmF0dGFjaEV2ZW50cygpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBzLnpvb20uYXR0YWNoRXZlbnRzKHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBcblxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBQbHVnaW5zIEFQSS4gQ29sbGVjdCBhbGwgYW5kIGluaXQgYWxsIHBsdWdpbnNcbiAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgICAgICBzLl9wbHVnaW5zID0gW107XG4gICAgICAgIGZvciAodmFyIHBsdWdpbiBpbiBzLnBsdWdpbnMpIHtcbiAgICAgICAgICAgIHZhciBwID0gcy5wbHVnaW5zW3BsdWdpbl0ocywgcy5wYXJhbXNbcGx1Z2luXSk7XG4gICAgICAgICAgICBpZiAocCkgcy5fcGx1Z2lucy5wdXNoKHApO1xuICAgICAgICB9XG4gICAgICAgIC8vIE1ldGhvZCB0byBjYWxsIGFsbCBwbHVnaW5zIGV2ZW50L21ldGhvZFxuICAgICAgICBzLmNhbGxQbHVnaW5zID0gZnVuY3Rpb24gKGV2ZW50TmFtZSkge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzLl9wbHVnaW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKGV2ZW50TmFtZSBpbiBzLl9wbHVnaW5zW2ldKSB7XG4gICAgICAgICAgICAgICAgICAgIHMuX3BsdWdpbnNbaV1bZXZlbnROYW1lXShhcmd1bWVudHNbMV0sIGFyZ3VtZW50c1syXSwgYXJndW1lbnRzWzNdLCBhcmd1bWVudHNbNF0sIGFyZ3VtZW50c1s1XSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBcblxuICAgICAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgICBFdmVudHMvQ2FsbGJhY2tzL1BsdWdpbnMgRW1pdHRlclxuICAgICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG4gICAgICAgIGZ1bmN0aW9uIG5vcm1hbGl6ZUV2ZW50TmFtZSAoZXZlbnROYW1lKSB7XG4gICAgICAgICAgICBpZiAoZXZlbnROYW1lLmluZGV4T2YoJ29uJykgIT09IDApIHtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnROYW1lWzBdICE9PSBldmVudE5hbWVbMF0udG9VcHBlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgICAgICBldmVudE5hbWUgPSAnb24nICsgZXZlbnROYW1lWzBdLnRvVXBwZXJDYXNlKCkgKyBldmVudE5hbWUuc3Vic3RyaW5nKDEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnROYW1lID0gJ29uJyArIGV2ZW50TmFtZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZXZlbnROYW1lO1xuICAgICAgICB9XG4gICAgICAgIHMuZW1pdHRlckV2ZW50TGlzdGVuZXJzID0ge1xuICAgICAgICBcbiAgICAgICAgfTtcbiAgICAgICAgcy5lbWl0ID0gZnVuY3Rpb24gKGV2ZW50TmFtZSkge1xuICAgICAgICAgICAgLy8gVHJpZ2dlciBjYWxsYmFja3NcbiAgICAgICAgICAgIGlmIChzLnBhcmFtc1tldmVudE5hbWVdKSB7XG4gICAgICAgICAgICAgICAgcy5wYXJhbXNbZXZlbnROYW1lXShhcmd1bWVudHNbMV0sIGFyZ3VtZW50c1syXSwgYXJndW1lbnRzWzNdLCBhcmd1bWVudHNbNF0sIGFyZ3VtZW50c1s1XSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgaTtcbiAgICAgICAgICAgIC8vIFRyaWdnZXIgZXZlbnRzXG4gICAgICAgICAgICBpZiAocy5lbWl0dGVyRXZlbnRMaXN0ZW5lcnNbZXZlbnROYW1lXSkge1xuICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBzLmVtaXR0ZXJFdmVudExpc3RlbmVyc1tldmVudE5hbWVdLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHMuZW1pdHRlckV2ZW50TGlzdGVuZXJzW2V2ZW50TmFtZV1baV0oYXJndW1lbnRzWzFdLCBhcmd1bWVudHNbMl0sIGFyZ3VtZW50c1szXSwgYXJndW1lbnRzWzRdLCBhcmd1bWVudHNbNV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFRyaWdnZXIgcGx1Z2luc1xuICAgICAgICAgICAgaWYgKHMuY2FsbFBsdWdpbnMpIHMuY2FsbFBsdWdpbnMoZXZlbnROYW1lLCBhcmd1bWVudHNbMV0sIGFyZ3VtZW50c1syXSwgYXJndW1lbnRzWzNdLCBhcmd1bWVudHNbNF0sIGFyZ3VtZW50c1s1XSk7XG4gICAgICAgIH07XG4gICAgICAgIHMub24gPSBmdW5jdGlvbiAoZXZlbnROYW1lLCBoYW5kbGVyKSB7XG4gICAgICAgICAgICBldmVudE5hbWUgPSBub3JtYWxpemVFdmVudE5hbWUoZXZlbnROYW1lKTtcbiAgICAgICAgICAgIGlmICghcy5lbWl0dGVyRXZlbnRMaXN0ZW5lcnNbZXZlbnROYW1lXSkgcy5lbWl0dGVyRXZlbnRMaXN0ZW5lcnNbZXZlbnROYW1lXSA9IFtdO1xuICAgICAgICAgICAgcy5lbWl0dGVyRXZlbnRMaXN0ZW5lcnNbZXZlbnROYW1lXS5wdXNoKGhhbmRsZXIpO1xuICAgICAgICAgICAgcmV0dXJuIHM7XG4gICAgICAgIH07XG4gICAgICAgIHMub2ZmID0gZnVuY3Rpb24gKGV2ZW50TmFtZSwgaGFuZGxlcikge1xuICAgICAgICAgICAgdmFyIGk7XG4gICAgICAgICAgICBldmVudE5hbWUgPSBub3JtYWxpemVFdmVudE5hbWUoZXZlbnROYW1lKTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaGFuZGxlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAvLyBSZW1vdmUgYWxsIGhhbmRsZXJzIGZvciBzdWNoIGV2ZW50XG4gICAgICAgICAgICAgICAgcy5lbWl0dGVyRXZlbnRMaXN0ZW5lcnNbZXZlbnROYW1lXSA9IFtdO1xuICAgICAgICAgICAgICAgIHJldHVybiBzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFzLmVtaXR0ZXJFdmVudExpc3RlbmVyc1tldmVudE5hbWVdIHx8IHMuZW1pdHRlckV2ZW50TGlzdGVuZXJzW2V2ZW50TmFtZV0ubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcy5lbWl0dGVyRXZlbnRMaXN0ZW5lcnNbZXZlbnROYW1lXS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmKHMuZW1pdHRlckV2ZW50TGlzdGVuZXJzW2V2ZW50TmFtZV1baV0gPT09IGhhbmRsZXIpIHMuZW1pdHRlckV2ZW50TGlzdGVuZXJzW2V2ZW50TmFtZV0uc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHM7XG4gICAgICAgIH07XG4gICAgICAgIHMub25jZSA9IGZ1bmN0aW9uIChldmVudE5hbWUsIGhhbmRsZXIpIHtcbiAgICAgICAgICAgIGV2ZW50TmFtZSA9IG5vcm1hbGl6ZUV2ZW50TmFtZShldmVudE5hbWUpO1xuICAgICAgICAgICAgdmFyIF9oYW5kbGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGhhbmRsZXIoYXJndW1lbnRzWzBdLCBhcmd1bWVudHNbMV0sIGFyZ3VtZW50c1syXSwgYXJndW1lbnRzWzNdLCBhcmd1bWVudHNbNF0pO1xuICAgICAgICAgICAgICAgIHMub2ZmKGV2ZW50TmFtZSwgX2hhbmRsZXIpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHMub24oZXZlbnROYW1lLCBfaGFuZGxlcik7XG4gICAgICAgICAgICByZXR1cm4gcztcbiAgICAgICAgfTtcbiAgICAgICAgXG5cbiAgICAgICAgLy8gQWNjZXNzaWJpbGl0eSB0b29sc1xuICAgICAgICBzLmExMXkgPSB7XG4gICAgICAgICAgICBtYWtlRm9jdXNhYmxlOiBmdW5jdGlvbiAoJGVsKSB7XG4gICAgICAgICAgICAgICAgJGVsLmF0dHIoJ3RhYkluZGV4JywgJzAnKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gJGVsO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFkZFJvbGU6IGZ1bmN0aW9uICgkZWwsIHJvbGUpIHtcbiAgICAgICAgICAgICAgICAkZWwuYXR0cigncm9sZScsIHJvbGUpO1xuICAgICAgICAgICAgICAgIHJldHVybiAkZWw7XG4gICAgICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgICAgIGFkZExhYmVsOiBmdW5jdGlvbiAoJGVsLCBsYWJlbCkge1xuICAgICAgICAgICAgICAgICRlbC5hdHRyKCdhcmlhLWxhYmVsJywgbGFiZWwpO1xuICAgICAgICAgICAgICAgIHJldHVybiAkZWw7XG4gICAgICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgICAgIGRpc2FibGU6IGZ1bmN0aW9uICgkZWwpIHtcbiAgICAgICAgICAgICAgICAkZWwuYXR0cignYXJpYS1kaXNhYmxlZCcsIHRydWUpO1xuICAgICAgICAgICAgICAgIHJldHVybiAkZWw7XG4gICAgICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgICAgIGVuYWJsZTogZnVuY3Rpb24gKCRlbCkge1xuICAgICAgICAgICAgICAgICRlbC5hdHRyKCdhcmlhLWRpc2FibGVkJywgZmFsc2UpO1xuICAgICAgICAgICAgICAgIHJldHVybiAkZWw7XG4gICAgICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgICAgIG9uRW50ZXJLZXk6IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgIGlmIChldmVudC5rZXlDb2RlICE9PSAxMykgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGlmICgkKGV2ZW50LnRhcmdldCkuaXMocy5wYXJhbXMubmV4dEJ1dHRvbikpIHtcbiAgICAgICAgICAgICAgICAgICAgcy5vbkNsaWNrTmV4dChldmVudCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLmlzRW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLmExMXkubm90aWZ5KHMucGFyYW1zLmxhc3RTbGlkZU1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5hMTF5Lm5vdGlmeShzLnBhcmFtcy5uZXh0U2xpZGVNZXNzYWdlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICgkKGV2ZW50LnRhcmdldCkuaXMocy5wYXJhbXMucHJldkJ1dHRvbikpIHtcbiAgICAgICAgICAgICAgICAgICAgcy5vbkNsaWNrUHJldihldmVudCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLmlzQmVnaW5uaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLmExMXkubm90aWZ5KHMucGFyYW1zLmZpcnN0U2xpZGVNZXNzYWdlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuYTExeS5ub3RpZnkocy5wYXJhbXMucHJldlNsaWRlTWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCQoZXZlbnQudGFyZ2V0KS5pcygnLicgKyBzLnBhcmFtcy5idWxsZXRDbGFzcykpIHtcbiAgICAgICAgICAgICAgICAgICAgJChldmVudC50YXJnZXQpWzBdLmNsaWNrKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgXG4gICAgICAgICAgICBsaXZlUmVnaW9uOiAkKCc8c3BhbiBjbGFzcz1cIicgKyBzLnBhcmFtcy5ub3RpZmljYXRpb25DbGFzcyArICdcIiBhcmlhLWxpdmU9XCJhc3NlcnRpdmVcIiBhcmlhLWF0b21pYz1cInRydWVcIj48L3NwYW4+JyksXG4gICAgICAgIFxuICAgICAgICAgICAgbm90aWZ5OiBmdW5jdGlvbiAobWVzc2FnZSkge1xuICAgICAgICAgICAgICAgIHZhciBub3RpZmljYXRpb24gPSBzLmExMXkubGl2ZVJlZ2lvbjtcbiAgICAgICAgICAgICAgICBpZiAobm90aWZpY2F0aW9uLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvbi5odG1sKCcnKTtcbiAgICAgICAgICAgICAgICBub3RpZmljYXRpb24uaHRtbChtZXNzYWdlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgLy8gU2V0dXAgYWNjZXNzaWJpbGl0eVxuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5uZXh0QnV0dG9uICYmIHMubmV4dEJ1dHRvbiAmJiBzLm5leHRCdXR0b24ubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBzLmExMXkubWFrZUZvY3VzYWJsZShzLm5leHRCdXR0b24pO1xuICAgICAgICAgICAgICAgICAgICBzLmExMXkuYWRkUm9sZShzLm5leHRCdXR0b24sICdidXR0b24nKTtcbiAgICAgICAgICAgICAgICAgICAgcy5hMTF5LmFkZExhYmVsKHMubmV4dEJ1dHRvbiwgcy5wYXJhbXMubmV4dFNsaWRlTWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5wcmV2QnV0dG9uICYmIHMucHJldkJ1dHRvbiAmJiBzLnByZXZCdXR0b24ubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBzLmExMXkubWFrZUZvY3VzYWJsZShzLnByZXZCdXR0b24pO1xuICAgICAgICAgICAgICAgICAgICBzLmExMXkuYWRkUm9sZShzLnByZXZCdXR0b24sICdidXR0b24nKTtcbiAgICAgICAgICAgICAgICAgICAgcy5hMTF5LmFkZExhYmVsKHMucHJldkJ1dHRvbiwgcy5wYXJhbXMucHJldlNsaWRlTWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICAgICAkKHMuY29udGFpbmVyKS5hcHBlbmQocy5hMTF5LmxpdmVSZWdpb24pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGluaXRQYWdpbmF0aW9uOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLnBhZ2luYXRpb24gJiYgcy5wYXJhbXMucGFnaW5hdGlvbkNsaWNrYWJsZSAmJiBzLmJ1bGxldHMgJiYgcy5idWxsZXRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICBzLmJ1bGxldHMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYnVsbGV0ID0gJCh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuYTExeS5tYWtlRm9jdXNhYmxlKGJ1bGxldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLmExMXkuYWRkUm9sZShidWxsZXQsICdidXR0b24nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuYTExeS5hZGRMYWJlbChidWxsZXQsIHMucGFyYW1zLnBhZ2luYXRpb25CdWxsZXRNZXNzYWdlLnJlcGxhY2UoL3t7aW5kZXh9fS8sIGJ1bGxldC5pbmRleCgpICsgMSkpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGVzdHJveTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmIChzLmExMXkubGl2ZVJlZ2lvbiAmJiBzLmExMXkubGl2ZVJlZ2lvbi5sZW5ndGggPiAwKSBzLmExMXkubGl2ZVJlZ2lvbi5yZW1vdmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgXG5cbiAgICAgICAgLyo9PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgICAgICAgSW5pdC9EZXN0cm95XG4gICAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbiAgICAgICAgcy5pbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmxvb3ApIHMuY3JlYXRlTG9vcCgpO1xuICAgICAgICAgICAgcy51cGRhdGVDb250YWluZXJTaXplKCk7XG4gICAgICAgICAgICBzLnVwZGF0ZVNsaWRlc1NpemUoKTtcbiAgICAgICAgICAgIHMudXBkYXRlUGFnaW5hdGlvbigpO1xuICAgICAgICAgICAgaWYgKHMucGFyYW1zLnNjcm9sbGJhciAmJiBzLnNjcm9sbGJhcikge1xuICAgICAgICAgICAgICAgIHMuc2Nyb2xsYmFyLnNldCgpO1xuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5zY3JvbGxiYXJEcmFnZ2FibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcy5zY3JvbGxiYXIuZW5hYmxlRHJhZ2dhYmxlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmVmZmVjdCAhPT0gJ3NsaWRlJyAmJiBzLmVmZmVjdHNbcy5wYXJhbXMuZWZmZWN0XSkge1xuICAgICAgICAgICAgICAgIGlmICghcy5wYXJhbXMubG9vcCkgcy51cGRhdGVQcm9ncmVzcygpO1xuICAgICAgICAgICAgICAgIHMuZWZmZWN0c1tzLnBhcmFtcy5lZmZlY3RdLnNldFRyYW5zbGF0ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmxvb3ApIHtcbiAgICAgICAgICAgICAgICBzLnNsaWRlVG8ocy5wYXJhbXMuaW5pdGlhbFNsaWRlICsgcy5sb29wZWRTbGlkZXMsIDAsIHMucGFyYW1zLnJ1bkNhbGxiYWNrc09uSW5pdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzLnNsaWRlVG8ocy5wYXJhbXMuaW5pdGlhbFNsaWRlLCAwLCBzLnBhcmFtcy5ydW5DYWxsYmFja3NPbkluaXQpO1xuICAgICAgICAgICAgICAgIGlmIChzLnBhcmFtcy5pbml0aWFsU2xpZGUgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHMucGFyYWxsYXggJiYgcy5wYXJhbXMucGFyYWxsYXgpIHMucGFyYWxsYXguc2V0VHJhbnNsYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzLmxhenkgJiYgcy5wYXJhbXMubGF6eUxvYWRpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMubGF6eS5sb2FkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzLmxhenkuaW5pdGlhbEltYWdlTG9hZGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHMuYXR0YWNoRXZlbnRzKCk7XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMub2JzZXJ2ZXIgJiYgcy5zdXBwb3J0Lm9ic2VydmVyKSB7XG4gICAgICAgICAgICAgICAgcy5pbml0T2JzZXJ2ZXJzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMucHJlbG9hZEltYWdlcyAmJiAhcy5wYXJhbXMubGF6eUxvYWRpbmcpIHtcbiAgICAgICAgICAgICAgICBzLnByZWxvYWRJbWFnZXMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy56b29tICYmIHMuem9vbSkge1xuICAgICAgICAgICAgICAgIHMuem9vbS5pbml0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMuYXV0b3BsYXkpIHtcbiAgICAgICAgICAgICAgICBzLnN0YXJ0QXV0b3BsYXkoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5rZXlib2FyZENvbnRyb2wpIHtcbiAgICAgICAgICAgICAgICBpZiAocy5lbmFibGVLZXlib2FyZENvbnRyb2wpIHMuZW5hYmxlS2V5Ym9hcmRDb250cm9sKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMubW91c2V3aGVlbENvbnRyb2wpIHtcbiAgICAgICAgICAgICAgICBpZiAocy5lbmFibGVNb3VzZXdoZWVsQ29udHJvbCkgcy5lbmFibGVNb3VzZXdoZWVsQ29udHJvbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gRGVwcmVjYXRlZCBoYXNobmF2UmVwbGFjZVN0YXRlIGNoYW5nZWQgdG8gcmVwbGFjZVN0YXRlIGZvciB1c2UgaW4gaGFzaG5hdiBhbmQgaGlzdG9yeVxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmhhc2huYXZSZXBsYWNlU3RhdGUpIHtcbiAgICAgICAgICAgICAgICBzLnBhcmFtcy5yZXBsYWNlU3RhdGUgPSBzLnBhcmFtcy5oYXNobmF2UmVwbGFjZVN0YXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmhpc3RvcnkpIHtcbiAgICAgICAgICAgICAgICBpZiAocy5oaXN0b3J5KSBzLmhpc3RvcnkuaW5pdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmhhc2huYXYpIHtcbiAgICAgICAgICAgICAgICBpZiAocy5oYXNobmF2KSBzLmhhc2huYXYuaW5pdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLmExMXkgJiYgcy5hMTF5KSBzLmExMXkuaW5pdCgpO1xuICAgICAgICAgICAgcy5lbWl0KCdvbkluaXQnLCBzKTtcbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgICAgIC8vIENsZWFudXAgZHluYW1pYyBzdHlsZXNcbiAgICAgICAgcy5jbGVhbnVwU3R5bGVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgLy8gQ29udGFpbmVyXG4gICAgICAgICAgICBzLmNvbnRhaW5lci5yZW1vdmVDbGFzcyhzLmNsYXNzTmFtZXMuam9pbignICcpKS5yZW1vdmVBdHRyKCdzdHlsZScpO1xuICAgICAgICBcbiAgICAgICAgICAgIC8vIFdyYXBwZXJcbiAgICAgICAgICAgIHMud3JhcHBlci5yZW1vdmVBdHRyKCdzdHlsZScpO1xuICAgICAgICBcbiAgICAgICAgICAgIC8vIFNsaWRlc1xuICAgICAgICAgICAgaWYgKHMuc2xpZGVzICYmIHMuc2xpZGVzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHMuc2xpZGVzXG4gICAgICAgICAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhbXG4gICAgICAgICAgICAgICAgICAgICAgcy5wYXJhbXMuc2xpZGVWaXNpYmxlQ2xhc3MsXG4gICAgICAgICAgICAgICAgICAgICAgcy5wYXJhbXMuc2xpZGVBY3RpdmVDbGFzcyxcbiAgICAgICAgICAgICAgICAgICAgICBzLnBhcmFtcy5zbGlkZU5leHRDbGFzcyxcbiAgICAgICAgICAgICAgICAgICAgICBzLnBhcmFtcy5zbGlkZVByZXZDbGFzc1xuICAgICAgICAgICAgICAgICAgICBdLmpvaW4oJyAnKSlcbiAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUF0dHIoJ3N0eWxlJylcbiAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUF0dHIoJ2RhdGEtc3dpcGVyLWNvbHVtbicpXG4gICAgICAgICAgICAgICAgICAgIC5yZW1vdmVBdHRyKCdkYXRhLXN3aXBlci1yb3cnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAvLyBQYWdpbmF0aW9uL0J1bGxldHNcbiAgICAgICAgICAgIGlmIChzLnBhZ2luYXRpb25Db250YWluZXIgJiYgcy5wYWdpbmF0aW9uQ29udGFpbmVyLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHMucGFnaW5hdGlvbkNvbnRhaW5lci5yZW1vdmVDbGFzcyhzLnBhcmFtcy5wYWdpbmF0aW9uSGlkZGVuQ2xhc3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHMuYnVsbGV0cyAmJiBzLmJ1bGxldHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcy5idWxsZXRzLnJlbW92ZUNsYXNzKHMucGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAvLyBCdXR0b25zXG4gICAgICAgICAgICBpZiAocy5wYXJhbXMucHJldkJ1dHRvbikgJChzLnBhcmFtcy5wcmV2QnV0dG9uKS5yZW1vdmVDbGFzcyhzLnBhcmFtcy5idXR0b25EaXNhYmxlZENsYXNzKTtcbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5uZXh0QnV0dG9uKSAkKHMucGFyYW1zLm5leHRCdXR0b24pLnJlbW92ZUNsYXNzKHMucGFyYW1zLmJ1dHRvbkRpc2FibGVkQ2xhc3MpO1xuICAgICAgICBcbiAgICAgICAgICAgIC8vIFNjcm9sbGJhclxuICAgICAgICAgICAgaWYgKHMucGFyYW1zLnNjcm9sbGJhciAmJiBzLnNjcm9sbGJhcikge1xuICAgICAgICAgICAgICAgIGlmIChzLnNjcm9sbGJhci50cmFjayAmJiBzLnNjcm9sbGJhci50cmFjay5sZW5ndGgpIHMuc2Nyb2xsYmFyLnRyYWNrLnJlbW92ZUF0dHIoJ3N0eWxlJyk7XG4gICAgICAgICAgICAgICAgaWYgKHMuc2Nyb2xsYmFyLmRyYWcgJiYgcy5zY3JvbGxiYXIuZHJhZy5sZW5ndGgpIHMuc2Nyb2xsYmFyLmRyYWcucmVtb3ZlQXR0cignc3R5bGUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgICAgIC8vIERlc3Ryb3lcbiAgICAgICAgcy5kZXN0cm95ID0gZnVuY3Rpb24gKGRlbGV0ZUluc3RhbmNlLCBjbGVhbnVwU3R5bGVzKSB7XG4gICAgICAgICAgICAvLyBEZXRhY2ggZXZlYnRzXG4gICAgICAgICAgICBzLmRldGFjaEV2ZW50cygpO1xuICAgICAgICAgICAgLy8gU3RvcCBhdXRvcGxheVxuICAgICAgICAgICAgcy5zdG9wQXV0b3BsYXkoKTtcbiAgICAgICAgICAgIC8vIERpc2FibGUgZHJhZ2dhYmxlXG4gICAgICAgICAgICBpZiAocy5wYXJhbXMuc2Nyb2xsYmFyICYmIHMuc2Nyb2xsYmFyKSB7XG4gICAgICAgICAgICAgICAgaWYgKHMucGFyYW1zLnNjcm9sbGJhckRyYWdnYWJsZSkge1xuICAgICAgICAgICAgICAgICAgICBzLnNjcm9sbGJhci5kaXNhYmxlRHJhZ2dhYmxlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gRGVzdHJveSBsb29wXG4gICAgICAgICAgICBpZiAocy5wYXJhbXMubG9vcCkge1xuICAgICAgICAgICAgICAgIHMuZGVzdHJveUxvb3AoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIENsZWFudXAgc3R5bGVzXG4gICAgICAgICAgICBpZiAoY2xlYW51cFN0eWxlcykge1xuICAgICAgICAgICAgICAgIHMuY2xlYW51cFN0eWxlcygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gRGlzY29ubmVjdCBvYnNlcnZlclxuICAgICAgICAgICAgcy5kaXNjb25uZWN0T2JzZXJ2ZXJzKCk7XG4gICAgICAgIFxuICAgICAgICAgICAgLy8gRGVzdHJveSB6b29tXG4gICAgICAgICAgICBpZiAocy5wYXJhbXMuem9vbSAmJiBzLnpvb20pIHtcbiAgICAgICAgICAgICAgICBzLnpvb20uZGVzdHJveSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gRGlzYWJsZSBrZXlib2FyZC9tb3VzZXdoZWVsXG4gICAgICAgICAgICBpZiAocy5wYXJhbXMua2V5Ym9hcmRDb250cm9sKSB7XG4gICAgICAgICAgICAgICAgaWYgKHMuZGlzYWJsZUtleWJvYXJkQ29udHJvbCkgcy5kaXNhYmxlS2V5Ym9hcmRDb250cm9sKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMubW91c2V3aGVlbENvbnRyb2wpIHtcbiAgICAgICAgICAgICAgICBpZiAocy5kaXNhYmxlTW91c2V3aGVlbENvbnRyb2wpIHMuZGlzYWJsZU1vdXNld2hlZWxDb250cm9sKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBEaXNhYmxlIGExMXlcbiAgICAgICAgICAgIGlmIChzLnBhcmFtcy5hMTF5ICYmIHMuYTExeSkgcy5hMTF5LmRlc3Ryb3koKTtcbiAgICAgICAgICAgIC8vIERlbGV0ZSBoaXN0b3J5IHBvcHN0YXRlXG4gICAgICAgICAgICBpZiAocy5wYXJhbXMuaGlzdG9yeSAmJiAhcy5wYXJhbXMucmVwbGFjZVN0YXRlKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3BvcHN0YXRlJywgcy5oaXN0b3J5LnNldEhpc3RvcnlQb3BTdGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocy5wYXJhbXMuaGFzaG5hdiAmJiBzLmhhc2huYXYpICB7XG4gICAgICAgICAgICAgICAgcy5oYXNobmF2LmRlc3Ryb3koKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIERlc3Ryb3kgY2FsbGJhY2tcbiAgICAgICAgICAgIHMuZW1pdCgnb25EZXN0cm95Jyk7XG4gICAgICAgICAgICAvLyBEZWxldGUgaW5zdGFuY2VcbiAgICAgICAgICAgIGlmIChkZWxldGVJbnN0YW5jZSAhPT0gZmFsc2UpIHMgPSBudWxsO1xuICAgICAgICB9O1xuICAgICAgICBcbiAgICAgICAgcy5pbml0KCk7XG4gICAgICAgIFxuXG4gICAgXG4gICAgICAgIC8vIFJldHVybiBzd2lwZXIgaW5zdGFuY2VcbiAgICAgICAgcmV0dXJuIHM7XG4gICAgfTtcbiAgICBcblxuICAgIC8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgUHJvdG90eXBlXG4gICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG4gICAgU3dpcGVyLnByb3RvdHlwZSA9IHtcbiAgICAgICAgaXNTYWZhcmk6IChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgcmV0dXJuICh1YS5pbmRleE9mKCdzYWZhcmknKSA+PSAwICYmIHVhLmluZGV4T2YoJ2Nocm9tZScpIDwgMCAmJiB1YS5pbmRleE9mKCdhbmRyb2lkJykgPCAwKTtcbiAgICAgICAgfSkoKSxcbiAgICAgICAgaXNVaVdlYlZpZXc6IC8oaVBob25lfGlQb2R8aVBhZCkuKkFwcGxlV2ViS2l0KD8hLipTYWZhcmkpL2kudGVzdCh3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCksXG4gICAgICAgIGlzQXJyYXk6IGZ1bmN0aW9uIChhcnIpIHtcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmFwcGx5KGFycikgPT09ICdbb2JqZWN0IEFycmF5XSc7XG4gICAgICAgIH0sXG4gICAgICAgIC8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgQnJvd3NlclxuICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbiAgICAgICAgYnJvd3Nlcjoge1xuICAgICAgICAgICAgaWU6IHdpbmRvdy5uYXZpZ2F0b3IucG9pbnRlckVuYWJsZWQgfHwgd2luZG93Lm5hdmlnYXRvci5tc1BvaW50ZXJFbmFibGVkLFxuICAgICAgICAgICAgaWVUb3VjaDogKHdpbmRvdy5uYXZpZ2F0b3IubXNQb2ludGVyRW5hYmxlZCAmJiB3aW5kb3cubmF2aWdhdG9yLm1zTWF4VG91Y2hQb2ludHMgPiAxKSB8fCAod2luZG93Lm5hdmlnYXRvci5wb2ludGVyRW5hYmxlZCAmJiB3aW5kb3cubmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzID4gMSksXG4gICAgICAgICAgICBsdGVJRTk6IChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAvLyBjcmVhdGUgdGVtcG9yYXJ5IERJVlxuICAgICAgICAgICAgICAgIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgICAgICAvLyBhZGQgY29udGVudCB0byB0bXAgRElWIHdoaWNoIGlzIHdyYXBwZWQgaW50byB0aGUgSUUgSFRNTCBjb25kaXRpb25hbCBzdGF0ZW1lbnRcbiAgICAgICAgICAgICAgICBkaXYuaW5uZXJIVE1MID0gJzwhLS1baWYgbHRlIElFIDldPjxpPjwvaT48IVtlbmRpZl0tLT4nO1xuICAgICAgICAgICAgICAgIC8vIHJldHVybiB0cnVlIC8gZmFsc2UgdmFsdWUgYmFzZWQgb24gd2hhdCB3aWxsIGJyb3dzZXIgcmVuZGVyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRpdi5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaScpLmxlbmd0aCA9PT0gMTtcbiAgICAgICAgICAgIH0pKClcbiAgICAgICAgfSxcbiAgICAgICAgLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICAgICBEZXZpY2VzXG4gICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgICAgICBkZXZpY2U6IChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgICAgICAgICAgIHZhciBhbmRyb2lkID0gdWEubWF0Y2goLyhBbmRyb2lkKTs/W1xcc1xcL10rKFtcXGQuXSspPy8pO1xuICAgICAgICAgICAgdmFyIGlwYWQgPSB1YS5tYXRjaCgvKGlQYWQpLipPU1xccyhbXFxkX10rKS8pO1xuICAgICAgICAgICAgdmFyIGlwb2QgPSB1YS5tYXRjaCgvKGlQb2QpKC4qT1NcXHMoW1xcZF9dKykpPy8pO1xuICAgICAgICAgICAgdmFyIGlwaG9uZSA9ICFpcGFkICYmIHVhLm1hdGNoKC8oaVBob25lXFxzT1N8aU9TKVxccyhbXFxkX10rKS8pO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBpb3M6IGlwYWQgfHwgaXBob25lIHx8IGlwb2QsXG4gICAgICAgICAgICAgICAgYW5kcm9pZDogYW5kcm9pZFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSkoKSxcbiAgICAgICAgLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICAgICBGZWF0dXJlIERldGVjdGlvblxuICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbiAgICAgICAgc3VwcG9ydDoge1xuICAgICAgICAgICAgdG91Y2ggOiAod2luZG93Lk1vZGVybml6ciAmJiBNb2Rlcm5penIudG91Y2ggPT09IHRydWUpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICEhKCgnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3cpIHx8IHdpbmRvdy5Eb2N1bWVudFRvdWNoICYmIGRvY3VtZW50IGluc3RhbmNlb2YgRG9jdW1lbnRUb3VjaCk7XG4gICAgICAgICAgICB9KSgpLFxuICAgIFxuICAgICAgICAgICAgdHJhbnNmb3JtczNkIDogKHdpbmRvdy5Nb2Rlcm5penIgJiYgTW9kZXJuaXpyLmNzc3RyYW5zZm9ybXMzZCA9PT0gdHJ1ZSkgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jykuc3R5bGU7XG4gICAgICAgICAgICAgICAgcmV0dXJuICgnd2Via2l0UGVyc3BlY3RpdmUnIGluIGRpdiB8fCAnTW96UGVyc3BlY3RpdmUnIGluIGRpdiB8fCAnT1BlcnNwZWN0aXZlJyBpbiBkaXYgfHwgJ01zUGVyc3BlY3RpdmUnIGluIGRpdiB8fCAncGVyc3BlY3RpdmUnIGluIGRpdik7XG4gICAgICAgICAgICB9KSgpLFxuICAgIFxuICAgICAgICAgICAgZmxleGJveDogKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jykuc3R5bGU7XG4gICAgICAgICAgICAgICAgdmFyIHN0eWxlcyA9ICgnYWxpZ25JdGVtcyB3ZWJraXRBbGlnbkl0ZW1zIHdlYmtpdEJveEFsaWduIG1zRmxleEFsaWduIG1vekJveEFsaWduIHdlYmtpdEZsZXhEaXJlY3Rpb24gbXNGbGV4RGlyZWN0aW9uIG1vekJveERpcmVjdGlvbiBtb3pCb3hPcmllbnQgd2Via2l0Qm94RGlyZWN0aW9uIHdlYmtpdEJveE9yaWVudCcpLnNwbGl0KCcgJyk7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0eWxlc1tpXSBpbiBkaXYpIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pKCksXG4gICAgXG4gICAgICAgICAgICBvYnNlcnZlcjogKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKCdNdXRhdGlvbk9ic2VydmVyJyBpbiB3aW5kb3cgfHwgJ1dlYmtpdE11dGF0aW9uT2JzZXJ2ZXInIGluIHdpbmRvdyk7XG4gICAgICAgICAgICB9KSgpLFxuICAgIFxuICAgICAgICAgICAgcGFzc2l2ZUxpc3RlbmVyOiAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBzdXBwb3J0c1Bhc3NpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgb3B0cyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwgJ3Bhc3NpdmUnLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1cHBvcnRzUGFzc2l2ZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndGVzdFBhc3NpdmVMaXN0ZW5lcicsIG51bGwsIG9wdHMpO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHN1cHBvcnRzUGFzc2l2ZTtcbiAgICAgICAgICAgIH0pKCksXG4gICAgXG4gICAgICAgICAgICBnZXN0dXJlczogKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJ29uZ2VzdHVyZXN0YXJ0JyBpbiB3aW5kb3c7XG4gICAgICAgICAgICB9KSgpXG4gICAgICAgIH0sXG4gICAgICAgIC8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgUGx1Z2luc1xuICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbiAgICAgICAgcGx1Z2luczoge31cbiAgICB9O1xuICAgIFxuXG4gICAgLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICBEb203IExpYnJhcnlcbiAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgIHZhciBEb203ID0gKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIERvbTcgPSBmdW5jdGlvbiAoYXJyKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzLCBpID0gMDtcbiAgICAgICAgICAgIC8vIENyZWF0ZSBhcnJheS1saWtlIG9iamVjdFxuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIF90aGlzW2ldID0gYXJyW2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX3RoaXMubGVuZ3RoID0gYXJyLmxlbmd0aDtcbiAgICAgICAgICAgIC8vIFJldHVybiBjb2xsZWN0aW9uIHdpdGggbWV0aG9kc1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG4gICAgICAgIHZhciAkID0gZnVuY3Rpb24gKHNlbGVjdG9yLCBjb250ZXh0KSB7XG4gICAgICAgICAgICB2YXIgYXJyID0gW10sIGkgPSAwO1xuICAgICAgICAgICAgaWYgKHNlbGVjdG9yICYmICFjb250ZXh0KSB7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGVjdG9yIGluc3RhbmNlb2YgRG9tNykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VsZWN0b3I7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHNlbGVjdG9yKSB7XG4gICAgICAgICAgICAgICAgLy8gU3RyaW5nXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBzZWxlY3RvciA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGVscywgdGVtcFBhcmVudCwgaHRtbCA9IHNlbGVjdG9yLnRyaW0oKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGh0bWwuaW5kZXhPZignPCcpID49IDAgJiYgaHRtbC5pbmRleE9mKCc+JykgPj0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRvQ3JlYXRlID0gJ2Rpdic7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaHRtbC5pbmRleE9mKCc8bGknKSA9PT0gMCkgdG9DcmVhdGUgPSAndWwnO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGh0bWwuaW5kZXhPZignPHRyJykgPT09IDApIHRvQ3JlYXRlID0gJ3Rib2R5JztcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChodG1sLmluZGV4T2YoJzx0ZCcpID09PSAwIHx8IGh0bWwuaW5kZXhPZignPHRoJykgPT09IDApIHRvQ3JlYXRlID0gJ3RyJztcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChodG1sLmluZGV4T2YoJzx0Ym9keScpID09PSAwKSB0b0NyZWF0ZSA9ICd0YWJsZSc7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaHRtbC5pbmRleE9mKCc8b3B0aW9uJykgPT09IDApIHRvQ3JlYXRlID0gJ3NlbGVjdCc7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZW1wUGFyZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0b0NyZWF0ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZW1wUGFyZW50LmlubmVySFRNTCA9IHNlbGVjdG9yO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHRlbXBQYXJlbnQuY2hpbGROb2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyci5wdXNoKHRlbXBQYXJlbnQuY2hpbGROb2Rlc1tpXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWNvbnRleHQgJiYgc2VsZWN0b3JbMF0gPT09ICcjJyAmJiAhc2VsZWN0b3IubWF0Y2goL1sgLjw+On5dLykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBQdXJlIElEIHNlbGVjdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzID0gW2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKHNlbGVjdG9yLnNwbGl0KCcjJylbMV0pXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIE90aGVyIHNlbGVjdG9yc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVscyA9IChjb250ZXh0IHx8IGRvY3VtZW50KS5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBlbHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZWxzW2ldKSBhcnIucHVzaChlbHNbaV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIE5vZGUvZWxlbWVudFxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHNlbGVjdG9yLm5vZGVUeXBlIHx8IHNlbGVjdG9yID09PSB3aW5kb3cgfHwgc2VsZWN0b3IgPT09IGRvY3VtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGFyci5wdXNoKHNlbGVjdG9yKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy9BcnJheSBvZiBlbGVtZW50cyBvciBpbnN0YW5jZSBvZiBEb21cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChzZWxlY3Rvci5sZW5ndGggPiAwICYmIHNlbGVjdG9yWzBdLm5vZGVUeXBlKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBzZWxlY3Rvci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXJyLnB1c2goc2VsZWN0b3JbaV0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBEb203KGFycik7XG4gICAgICAgIH07XG4gICAgICAgIERvbTcucHJvdG90eXBlID0ge1xuICAgICAgICAgICAgLy8gQ2xhc3NlcyBhbmQgYXR0cml1dGVzXG4gICAgICAgICAgICBhZGRDbGFzczogZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgY2xhc3NOYW1lID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIGNsYXNzZXMgPSBjbGFzc05hbWUuc3BsaXQoJyAnKTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNsYXNzZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB0aGlzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzW2pdLmNsYXNzTGlzdC5hZGQoY2xhc3Nlc1tpXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVtb3ZlQ2xhc3M6IGZ1bmN0aW9uIChjbGFzc05hbWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgY2xhc3NlcyA9IGNsYXNzTmFtZS5zcGxpdCgnICcpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2xhc3Nlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHRoaXMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbal0uY2xhc3NMaXN0LnJlbW92ZShjbGFzc2VzW2ldKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBoYXNDbGFzczogZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgICAgICAgICAgICAgIGlmICghdGhpc1swXSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIGVsc2UgcmV0dXJuIHRoaXNbMF0uY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdG9nZ2xlQ2xhc3M6IGZ1bmN0aW9uIChjbGFzc05hbWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgY2xhc3NlcyA9IGNsYXNzTmFtZS5zcGxpdCgnICcpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2xhc3Nlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHRoaXMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbal0uY2xhc3NMaXN0LnRvZ2dsZShjbGFzc2VzW2ldKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhdHRyOiBmdW5jdGlvbiAoYXR0cnMsIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEgJiYgdHlwZW9mIGF0dHJzID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgICAgICAvLyBHZXQgYXR0clxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpc1swXSkgcmV0dXJuIHRoaXNbMF0uZ2V0QXR0cmlidXRlKGF0dHJzKTtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gU2V0IGF0dHJzXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTdHJpbmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzW2ldLnNldEF0dHJpYnV0ZShhdHRycywgdmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gT2JqZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgYXR0ck5hbWUgaW4gYXR0cnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1tpXVthdHRyTmFtZV0gPSBhdHRyc1thdHRyTmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbaV0uc2V0QXR0cmlidXRlKGF0dHJOYW1lLCBhdHRyc1thdHRyTmFtZV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVtb3ZlQXR0cjogZnVuY3Rpb24gKGF0dHIpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpc1tpXS5yZW1vdmVBdHRyaWJ1dGUoYXR0cik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRhdGE6IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gR2V0IHZhbHVlXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzWzBdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YUtleSA9IHRoaXNbMF0uZ2V0QXR0cmlidXRlKCdkYXRhLScgKyBrZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGFLZXkpIHJldHVybiBkYXRhS2V5O1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAodGhpc1swXS5kb203RWxlbWVudERhdGFTdG9yYWdlICYmIChrZXkgaW4gdGhpc1swXS5kb203RWxlbWVudERhdGFTdG9yYWdlKSkgcmV0dXJuIHRoaXNbMF0uZG9tN0VsZW1lbnREYXRhU3RvcmFnZVtrZXldO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFNldCB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlbCA9IHRoaXNbaV07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWVsLmRvbTdFbGVtZW50RGF0YVN0b3JhZ2UpIGVsLmRvbTdFbGVtZW50RGF0YVN0b3JhZ2UgPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsLmRvbTdFbGVtZW50RGF0YVN0b3JhZ2Vba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAvLyBUcmFuc2Zvcm1zXG4gICAgICAgICAgICB0cmFuc2Zvcm0gOiBmdW5jdGlvbiAodHJhbnNmb3JtKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBlbFN0eWxlID0gdGhpc1tpXS5zdHlsZTtcbiAgICAgICAgICAgICAgICAgICAgZWxTdHlsZS53ZWJraXRUcmFuc2Zvcm0gPSBlbFN0eWxlLk1zVHJhbnNmb3JtID0gZWxTdHlsZS5tc1RyYW5zZm9ybSA9IGVsU3R5bGUuTW96VHJhbnNmb3JtID0gZWxTdHlsZS5PVHJhbnNmb3JtID0gZWxTdHlsZS50cmFuc2Zvcm0gPSB0cmFuc2Zvcm07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGZ1bmN0aW9uIChkdXJhdGlvbikge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZHVyYXRpb24gIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uID0gZHVyYXRpb24gKyAnbXMnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGVsU3R5bGUgPSB0aGlzW2ldLnN0eWxlO1xuICAgICAgICAgICAgICAgICAgICBlbFN0eWxlLndlYmtpdFRyYW5zaXRpb25EdXJhdGlvbiA9IGVsU3R5bGUuTXNUcmFuc2l0aW9uRHVyYXRpb24gPSBlbFN0eWxlLm1zVHJhbnNpdGlvbkR1cmF0aW9uID0gZWxTdHlsZS5Nb3pUcmFuc2l0aW9uRHVyYXRpb24gPSBlbFN0eWxlLk9UcmFuc2l0aW9uRHVyYXRpb24gPSBlbFN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9IGR1cmF0aW9uO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAvL0V2ZW50c1xuICAgICAgICAgICAgb246IGZ1bmN0aW9uIChldmVudE5hbWUsIHRhcmdldFNlbGVjdG9yLCBsaXN0ZW5lciwgY2FwdHVyZSkge1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGhhbmRsZUxpdmVFdmVudChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0YXJnZXQgPSBlLnRhcmdldDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCQodGFyZ2V0KS5pcyh0YXJnZXRTZWxlY3RvcikpIGxpc3RlbmVyLmNhbGwodGFyZ2V0LCBlKTtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50cyA9ICQodGFyZ2V0KS5wYXJlbnRzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBrID0gMDsgayA8IHBhcmVudHMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJChwYXJlbnRzW2tdKS5pcyh0YXJnZXRTZWxlY3RvcikpIGxpc3RlbmVyLmNhbGwocGFyZW50c1trXSwgZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIGV2ZW50cyA9IGV2ZW50TmFtZS5zcGxpdCgnICcpO1xuICAgICAgICAgICAgICAgIHZhciBpLCBqO1xuICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGFyZ2V0U2VsZWN0b3IgPT09ICdmdW5jdGlvbicgfHwgdGFyZ2V0U2VsZWN0b3IgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBVc3VhbCBldmVudHNcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGFyZ2V0U2VsZWN0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0ZW5lciA9IGFyZ3VtZW50c1sxXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXB0dXJlID0gYXJndW1lbnRzWzJdIHx8IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChqID0gMDsgaiA8IGV2ZW50cy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbaV0uYWRkRXZlbnRMaXN0ZW5lcihldmVudHNbal0sIGxpc3RlbmVyLCBjYXB0dXJlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vTGl2ZSBldmVudHNcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoaiA9IDA7IGogPCBldmVudHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXNbaV0uZG9tN0xpdmVMaXN0ZW5lcnMpIHRoaXNbaV0uZG9tN0xpdmVMaXN0ZW5lcnMgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzW2ldLmRvbTdMaXZlTGlzdGVuZXJzLnB1c2goe2xpc3RlbmVyOiBsaXN0ZW5lciwgbGl2ZUxpc3RlbmVyOiBoYW5kbGVMaXZlRXZlbnR9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzW2ldLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRzW2pdLCBoYW5kbGVMaXZlRXZlbnQsIGNhcHR1cmUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9mZjogZnVuY3Rpb24gKGV2ZW50TmFtZSwgdGFyZ2V0U2VsZWN0b3IsIGxpc3RlbmVyLCBjYXB0dXJlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGV2ZW50cyA9IGV2ZW50TmFtZS5zcGxpdCgnICcpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZXZlbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXRTZWxlY3RvciA9PT0gJ2Z1bmN0aW9uJyB8fCB0YXJnZXRTZWxlY3RvciA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBVc3VhbCBldmVudHNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRhcmdldFNlbGVjdG9yID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3RlbmVyID0gYXJndW1lbnRzWzFdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXB0dXJlID0gYXJndW1lbnRzWzJdIHx8IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzW2pdLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRzW2ldLCBsaXN0ZW5lciwgY2FwdHVyZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBMaXZlIGV2ZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXNbal0uZG9tN0xpdmVMaXN0ZW5lcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzW2pdLmRvbTdMaXZlTGlzdGVuZXJzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpc1tqXS5kb203TGl2ZUxpc3RlbmVyc1trXS5saXN0ZW5lciA9PT0gbGlzdGVuZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzW2pdLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRzW2ldLCB0aGlzW2pdLmRvbTdMaXZlTGlzdGVuZXJzW2tdLmxpdmVMaXN0ZW5lciwgY2FwdHVyZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25jZTogZnVuY3Rpb24gKGV2ZW50TmFtZSwgdGFyZ2V0U2VsZWN0b3IsIGxpc3RlbmVyLCBjYXB0dXJlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRvbSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXRTZWxlY3RvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXRTZWxlY3RvciA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICBsaXN0ZW5lciA9IGFyZ3VtZW50c1sxXTtcbiAgICAgICAgICAgICAgICAgICAgY2FwdHVyZSA9IGFyZ3VtZW50c1syXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gcHJveHkoZSkge1xuICAgICAgICAgICAgICAgICAgICBsaXN0ZW5lcihlKTtcbiAgICAgICAgICAgICAgICAgICAgZG9tLm9mZihldmVudE5hbWUsIHRhcmdldFNlbGVjdG9yLCBwcm94eSwgY2FwdHVyZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGRvbS5vbihldmVudE5hbWUsIHRhcmdldFNlbGVjdG9yLCBwcm94eSwgY2FwdHVyZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdHJpZ2dlcjogZnVuY3Rpb24gKGV2ZW50TmFtZSwgZXZlbnREYXRhKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBldnQ7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBldnQgPSBuZXcgd2luZG93LkN1c3RvbUV2ZW50KGV2ZW50TmFtZSwge2RldGFpbDogZXZlbnREYXRhLCBidWJibGVzOiB0cnVlLCBjYW5jZWxhYmxlOiB0cnVlfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2dCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdFdmVudCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZXZ0LmluaXRFdmVudChldmVudE5hbWUsIHRydWUsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZXZ0LmRldGFpbCA9IGV2ZW50RGF0YTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzW2ldLmRpc3BhdGNoRXZlbnQoZXZ0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdHJhbnNpdGlvbkVuZDogZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGV2ZW50cyA9IFsnd2Via2l0VHJhbnNpdGlvbkVuZCcsICd0cmFuc2l0aW9uZW5kJywgJ29UcmFuc2l0aW9uRW5kJywgJ01TVHJhbnNpdGlvbkVuZCcsICdtc1RyYW5zaXRpb25FbmQnXSxcbiAgICAgICAgICAgICAgICAgICAgaSwgaiwgZG9tID0gdGhpcztcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBmaXJlQ2FsbEJhY2soZSkge1xuICAgICAgICAgICAgICAgICAgICAvKmpzaGludCB2YWxpZHRoaXM6dHJ1ZSAqL1xuICAgICAgICAgICAgICAgICAgICBpZiAoZS50YXJnZXQgIT09IHRoaXMpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2suY2FsbCh0aGlzLCBlKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGV2ZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tLm9mZihldmVudHNbaV0sIGZpcmVDYWxsQmFjayk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBldmVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbS5vbihldmVudHNbaV0sIGZpcmVDYWxsQmFjayk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLy8gU2l6aW5nL1N0eWxlc1xuICAgICAgICAgICAgd2lkdGg6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpc1swXSA9PT0gd2luZG93KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwYXJzZUZsb2F0KHRoaXMuY3NzKCd3aWR0aCcpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG91dGVyV2lkdGg6IGZ1bmN0aW9uIChpbmNsdWRlTWFyZ2lucykge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGluY2x1ZGVNYXJnaW5zKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXNbMF0ub2Zmc2V0V2lkdGggKyBwYXJzZUZsb2F0KHRoaXMuY3NzKCdtYXJnaW4tcmlnaHQnKSkgKyBwYXJzZUZsb2F0KHRoaXMuY3NzKCdtYXJnaW4tbGVmdCcpKTtcbiAgICAgICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXNbMF0ub2Zmc2V0V2lkdGg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaGVpZ2h0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXNbMF0gPT09IHdpbmRvdykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gd2luZG93LmlubmVySGVpZ2h0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQodGhpcy5jc3MoJ2hlaWdodCcpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG91dGVySGVpZ2h0OiBmdW5jdGlvbiAoaW5jbHVkZU1hcmdpbnMpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpbmNsdWRlTWFyZ2lucylcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzWzBdLm9mZnNldEhlaWdodCArIHBhcnNlRmxvYXQodGhpcy5jc3MoJ21hcmdpbi10b3AnKSkgKyBwYXJzZUZsb2F0KHRoaXMuY3NzKCdtYXJnaW4tYm90dG9tJykpO1xuICAgICAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpc1swXS5vZmZzZXRIZWlnaHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb2Zmc2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZWwgPSB0aGlzWzBdO1xuICAgICAgICAgICAgICAgICAgICB2YXIgYm94ID0gZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBib2R5ID0gZG9jdW1lbnQuYm9keTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNsaWVudFRvcCAgPSBlbC5jbGllbnRUb3AgIHx8IGJvZHkuY2xpZW50VG9wICB8fCAwO1xuICAgICAgICAgICAgICAgICAgICB2YXIgY2xpZW50TGVmdCA9IGVsLmNsaWVudExlZnQgfHwgYm9keS5jbGllbnRMZWZ0IHx8IDA7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzY3JvbGxUb3AgID0gd2luZG93LnBhZ2VZT2Zmc2V0IHx8IGVsLnNjcm9sbFRvcDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNjcm9sbExlZnQgPSB3aW5kb3cucGFnZVhPZmZzZXQgfHwgZWwuc2Nyb2xsTGVmdDtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogYm94LnRvcCAgKyBzY3JvbGxUb3AgIC0gY2xpZW50VG9wLFxuICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogYm94LmxlZnQgKyBzY3JvbGxMZWZ0IC0gY2xpZW50TGVmdFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNzczogZnVuY3Rpb24gKHByb3BzLCB2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHZhciBpO1xuICAgICAgICAgICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcHJvcHMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpc1swXSkgcmV0dXJuIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXNbMF0sIG51bGwpLmdldFByb3BlcnR5VmFsdWUocHJvcHMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBwcm9wIGluIHByb3BzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbaV0uc3R5bGVbcHJvcF0gPSBwcm9wc1twcm9wXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMiAmJiB0eXBlb2YgcHJvcHMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzW2ldLnN0eWxlW3Byb3BzXSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH0sXG4gICAgXG4gICAgICAgICAgICAvL0RvbSBtYW5pcHVsYXRpb25cbiAgICAgICAgICAgIGVhY2g6IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjay5jYWxsKHRoaXNbaV0sIGksIHRoaXNbaV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBodG1sOiBmdW5jdGlvbiAoaHRtbCkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgaHRtbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXNbMF0gPyB0aGlzWzBdLmlubmVySFRNTCA6IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1tpXS5pbm5lckhUTUwgPSBodG1sO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0ZXh0OiBmdW5jdGlvbiAodGV4dCkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGV4dCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXNbMF0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzWzBdLnRleHRDb250ZW50LnRyaW0oKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzW2ldLnRleHRDb250ZW50ID0gdGV4dDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaXM6IGZ1bmN0aW9uIChzZWxlY3Rvcikge1xuICAgICAgICAgICAgICAgIGlmICghdGhpc1swXSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIHZhciBjb21wYXJlV2l0aCwgaTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHNlbGVjdG9yID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZWwgPSB0aGlzWzBdO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZWwgPT09IGRvY3VtZW50KSByZXR1cm4gc2VsZWN0b3IgPT09IGRvY3VtZW50O1xuICAgICAgICAgICAgICAgICAgICBpZiAoZWwgPT09IHdpbmRvdykgcmV0dXJuIHNlbGVjdG9yID09PSB3aW5kb3c7XG4gICAgXG4gICAgICAgICAgICAgICAgICAgIGlmIChlbC5tYXRjaGVzKSByZXR1cm4gZWwubWF0Y2hlcyhzZWxlY3Rvcik7XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGVsLndlYmtpdE1hdGNoZXNTZWxlY3RvcikgcmV0dXJuIGVsLndlYmtpdE1hdGNoZXNTZWxlY3RvcihzZWxlY3Rvcik7XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGVsLm1vek1hdGNoZXNTZWxlY3RvcikgcmV0dXJuIGVsLm1vek1hdGNoZXNTZWxlY3RvcihzZWxlY3Rvcik7XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGVsLm1zTWF0Y2hlc1NlbGVjdG9yKSByZXR1cm4gZWwubXNNYXRjaGVzU2VsZWN0b3Ioc2VsZWN0b3IpO1xuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBhcmVXaXRoID0gJChzZWxlY3Rvcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY29tcGFyZVdpdGgubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29tcGFyZVdpdGhbaV0gPT09IHRoaXNbMF0pIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHNlbGVjdG9yID09PSBkb2N1bWVudCkgcmV0dXJuIHRoaXNbMF0gPT09IGRvY3VtZW50O1xuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHNlbGVjdG9yID09PSB3aW5kb3cpIHJldHVybiB0aGlzWzBdID09PSB3aW5kb3c7XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzZWxlY3Rvci5ub2RlVHlwZSB8fCBzZWxlY3RvciBpbnN0YW5jZW9mIERvbTcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBhcmVXaXRoID0gc2VsZWN0b3Iubm9kZVR5cGUgPyBbc2VsZWN0b3JdIDogc2VsZWN0b3I7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgY29tcGFyZVdpdGgubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29tcGFyZVdpdGhbaV0gPT09IHRoaXNbMF0pIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW5kZXg6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpc1swXSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY2hpbGQgPSB0aGlzWzBdO1xuICAgICAgICAgICAgICAgICAgICB2YXIgaSA9IDA7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlICgoY2hpbGQgPSBjaGlsZC5wcmV2aW91c1NpYmxpbmcpICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hpbGQubm9kZVR5cGUgPT09IDEpIGkrKztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVxOiBmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGluZGV4ID09PSAndW5kZWZpbmVkJykgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICAgICAgdmFyIGxlbmd0aCA9IHRoaXMubGVuZ3RoO1xuICAgICAgICAgICAgICAgIHZhciByZXR1cm5JbmRleDtcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXggPiBsZW5ndGggLSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRG9tNyhbXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChpbmRleCA8IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuSW5kZXggPSBsZW5ndGggKyBpbmRleDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJldHVybkluZGV4IDwgMCkgcmV0dXJuIG5ldyBEb203KFtdKTtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSByZXR1cm4gbmV3IERvbTcoW3RoaXNbcmV0dXJuSW5kZXhdXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRG9tNyhbdGhpc1tpbmRleF1dKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhcHBlbmQ6IGZ1bmN0aW9uIChuZXdDaGlsZCkge1xuICAgICAgICAgICAgICAgIHZhciBpLCBqO1xuICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbmV3Q2hpbGQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGVtcERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcERpdi5pbm5lckhUTUwgPSBuZXdDaGlsZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICh0ZW1wRGl2LmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzW2ldLmFwcGVuZENoaWxkKHRlbXBEaXYuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAobmV3Q2hpbGQgaW5zdGFuY2VvZiBEb203KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgbmV3Q2hpbGQubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzW2ldLmFwcGVuZENoaWxkKG5ld0NoaWxkW2pdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbaV0uYXBwZW5kQ2hpbGQobmV3Q2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHByZXBlbmQ6IGZ1bmN0aW9uIChuZXdDaGlsZCkge1xuICAgICAgICAgICAgICAgIHZhciBpLCBqO1xuICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbmV3Q2hpbGQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGVtcERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcERpdi5pbm5lckhUTUwgPSBuZXdDaGlsZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoaiA9IHRlbXBEaXYuY2hpbGROb2Rlcy5sZW5ndGggLSAxOyBqID49IDA7IGotLSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbaV0uaW5zZXJ0QmVmb3JlKHRlbXBEaXYuY2hpbGROb2Rlc1tqXSwgdGhpc1tpXS5jaGlsZE5vZGVzWzBdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoaXNbaV0uaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmJlZ2luJywgbmV3Q2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKG5ld0NoaWxkIGluc3RhbmNlb2YgRG9tNykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChqID0gMDsgaiA8IG5ld0NoaWxkLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1tpXS5pbnNlcnRCZWZvcmUobmV3Q2hpbGRbal0sIHRoaXNbaV0uY2hpbGROb2Rlc1swXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzW2ldLmluc2VydEJlZm9yZShuZXdDaGlsZCwgdGhpc1tpXS5jaGlsZE5vZGVzWzBdKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbnNlcnRCZWZvcmU6IGZ1bmN0aW9uIChzZWxlY3Rvcikge1xuICAgICAgICAgICAgICAgIHZhciBiZWZvcmUgPSAkKHNlbGVjdG9yKTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGJlZm9yZS5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJlZm9yZVswXS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzW2ldLCBiZWZvcmVbMF0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGJlZm9yZS5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGJlZm9yZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlZm9yZVtqXS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzW2ldLmNsb25lTm9kZSh0cnVlKSwgYmVmb3JlW2pdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbnNlcnRBZnRlcjogZnVuY3Rpb24gKHNlbGVjdG9yKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFmdGVyID0gJChzZWxlY3Rvcik7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChhZnRlci5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFmdGVyWzBdLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXNbaV0sIGFmdGVyWzBdLm5leHRTaWJsaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChhZnRlci5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGFmdGVyLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWZ0ZXJbal0ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGhpc1tpXS5jbG9uZU5vZGUodHJ1ZSksIGFmdGVyW2pdLm5leHRTaWJsaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBuZXh0OiBmdW5jdGlvbiAoc2VsZWN0b3IpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzZWxlY3Rvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXNbMF0ubmV4dEVsZW1lbnRTaWJsaW5nICYmICQodGhpc1swXS5uZXh0RWxlbWVudFNpYmxpbmcpLmlzKHNlbGVjdG9yKSkgcmV0dXJuIG5ldyBEb203KFt0aGlzWzBdLm5leHRFbGVtZW50U2libGluZ10pO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSByZXR1cm4gbmV3IERvbTcoW10pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXNbMF0ubmV4dEVsZW1lbnRTaWJsaW5nKSByZXR1cm4gbmV3IERvbTcoW3RoaXNbMF0ubmV4dEVsZW1lbnRTaWJsaW5nXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHJldHVybiBuZXcgRG9tNyhbXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSByZXR1cm4gbmV3IERvbTcoW10pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG5leHRBbGw6IGZ1bmN0aW9uIChzZWxlY3Rvcikge1xuICAgICAgICAgICAgICAgIHZhciBuZXh0RWxzID0gW107XG4gICAgICAgICAgICAgICAgdmFyIGVsID0gdGhpc1swXTtcbiAgICAgICAgICAgICAgICBpZiAoIWVsKSByZXR1cm4gbmV3IERvbTcoW10pO1xuICAgICAgICAgICAgICAgIHdoaWxlIChlbC5uZXh0RWxlbWVudFNpYmxpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG5leHQgPSBlbC5uZXh0RWxlbWVudFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzZWxlY3Rvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYoJChuZXh0KS5pcyhzZWxlY3RvcikpIG5leHRFbHMucHVzaChuZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIG5leHRFbHMucHVzaChuZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgZWwgPSBuZXh0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IERvbTcobmV4dEVscyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcHJldjogZnVuY3Rpb24gKHNlbGVjdG9yKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZWN0b3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzWzBdLnByZXZpb3VzRWxlbWVudFNpYmxpbmcgJiYgJCh0aGlzWzBdLnByZXZpb3VzRWxlbWVudFNpYmxpbmcpLmlzKHNlbGVjdG9yKSkgcmV0dXJuIG5ldyBEb203KFt0aGlzWzBdLnByZXZpb3VzRWxlbWVudFNpYmxpbmddKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgcmV0dXJuIG5ldyBEb203KFtdKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzWzBdLnByZXZpb3VzRWxlbWVudFNpYmxpbmcpIHJldHVybiBuZXcgRG9tNyhbdGhpc1swXS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHJldHVybiBuZXcgRG9tNyhbXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSByZXR1cm4gbmV3IERvbTcoW10pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHByZXZBbGw6IGZ1bmN0aW9uIChzZWxlY3Rvcikge1xuICAgICAgICAgICAgICAgIHZhciBwcmV2RWxzID0gW107XG4gICAgICAgICAgICAgICAgdmFyIGVsID0gdGhpc1swXTtcbiAgICAgICAgICAgICAgICBpZiAoIWVsKSByZXR1cm4gbmV3IERvbTcoW10pO1xuICAgICAgICAgICAgICAgIHdoaWxlIChlbC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwcmV2ID0gZWwucHJldmlvdXNFbGVtZW50U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGVjdG9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZigkKHByZXYpLmlzKHNlbGVjdG9yKSkgcHJldkVscy5wdXNoKHByZXYpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgcHJldkVscy5wdXNoKHByZXYpO1xuICAgICAgICAgICAgICAgICAgICBlbCA9IHByZXY7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRG9tNyhwcmV2RWxzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwYXJlbnQ6IGZ1bmN0aW9uIChzZWxlY3Rvcikge1xuICAgICAgICAgICAgICAgIHZhciBwYXJlbnRzID0gW107XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzZWxlY3Rvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCQodGhpc1tpXS5wYXJlbnROb2RlKS5pcyhzZWxlY3RvcikpIHBhcmVudHMucHVzaCh0aGlzW2ldLnBhcmVudE5vZGUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50cy5wdXNoKHRoaXNbaV0ucGFyZW50Tm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuICQoJC51bmlxdWUocGFyZW50cykpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHBhcmVudHM6IGZ1bmN0aW9uIChzZWxlY3Rvcikge1xuICAgICAgICAgICAgICAgIHZhciBwYXJlbnRzID0gW107XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJlbnQgPSB0aGlzW2ldLnBhcmVudE5vZGU7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlIChwYXJlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZWxlY3Rvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKHBhcmVudCkuaXMoc2VsZWN0b3IpKSBwYXJlbnRzLnB1c2gocGFyZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudHMucHVzaChwYXJlbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudE5vZGU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuICQoJC51bmlxdWUocGFyZW50cykpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZpbmQgOiBmdW5jdGlvbiAoc2VsZWN0b3IpIHtcbiAgICAgICAgICAgICAgICB2YXIgZm91bmRFbGVtZW50cyA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZm91bmQgPSB0aGlzW2ldLnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGZvdW5kLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3VuZEVsZW1lbnRzLnB1c2goZm91bmRbal0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRG9tNyhmb3VuZEVsZW1lbnRzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogZnVuY3Rpb24gKHNlbGVjdG9yKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNoaWxkcmVuID0gW107XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjaGlsZE5vZGVzID0gdGhpc1tpXS5jaGlsZE5vZGVzO1xuICAgIFxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGNoaWxkTm9kZXMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc2VsZWN0b3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hpbGROb2Rlc1tqXS5ub2RlVHlwZSA9PT0gMSkgY2hpbGRyZW4ucHVzaChjaGlsZE5vZGVzW2pdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaGlsZE5vZGVzW2pdLm5vZGVUeXBlID09PSAxICYmICQoY2hpbGROb2Rlc1tqXSkuaXMoc2VsZWN0b3IpKSBjaGlsZHJlbi5wdXNoKGNoaWxkTm9kZXNbal0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRG9tNygkLnVuaXF1ZShjaGlsZHJlbikpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlbW92ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpc1tpXS5wYXJlbnROb2RlKSB0aGlzW2ldLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpc1tpXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFkZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBkb20gPSB0aGlzO1xuICAgICAgICAgICAgICAgIHZhciBpLCBqO1xuICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRvQWRkID0gJChhcmd1bWVudHNbaV0pO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgdG9BZGQubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVtkb20ubGVuZ3RoXSA9IHRvQWRkW2pdO1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tLmxlbmd0aCsrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBkb207XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgICQuZm4gPSBEb203LnByb3RvdHlwZTtcbiAgICAgICAgJC51bmlxdWUgPSBmdW5jdGlvbiAoYXJyKSB7XG4gICAgICAgICAgICB2YXIgdW5pcXVlID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmICh1bmlxdWUuaW5kZXhPZihhcnJbaV0pID09PSAtMSkgdW5pcXVlLnB1c2goYXJyW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB1bmlxdWU7XG4gICAgICAgIH07XG4gICAgXG4gICAgICAgIHJldHVybiAkO1xuICAgIH0pKCk7XG4gICAgXG5cbiAgICAvKj09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICBHZXQgRG9tIGxpYnJhcmllc1xuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuICAgIHZhciBzd2lwZXJEb21QbHVnaW5zID0gWydqUXVlcnknLCAnWmVwdG8nLCAnRG9tNyddO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3dpcGVyRG9tUGx1Z2lucy5sZW5ndGg7IGkrKykge1xuICAgIFx0aWYgKHdpbmRvd1tzd2lwZXJEb21QbHVnaW5zW2ldXSkge1xuICAgIFx0XHRhZGRMaWJyYXJ5UGx1Z2luKHdpbmRvd1tzd2lwZXJEb21QbHVnaW5zW2ldXSk7XG4gICAgXHR9XG4gICAgfVxuICAgIC8vIFJlcXVpcmVkIERPTSBQbHVnaW5zXG4gICAgdmFyIGRvbUxpYjtcbiAgICBpZiAodHlwZW9mIERvbTcgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgXHRkb21MaWIgPSB3aW5kb3cuRG9tNyB8fCB3aW5kb3cuWmVwdG8gfHwgd2luZG93LmpRdWVyeTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgXHRkb21MaWIgPSBEb203O1xuICAgIH1cbiAgICBcblxuICAgIC8qPT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgQWRkIC5zd2lwZXIgcGx1Z2luIGZyb20gRG9tIGxpYnJhcmllc1xuICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG4gICAgZnVuY3Rpb24gYWRkTGlicmFyeVBsdWdpbihsaWIpIHtcbiAgICAgICAgbGliLmZuLnN3aXBlciA9IGZ1bmN0aW9uIChwYXJhbXMpIHtcbiAgICAgICAgICAgIHZhciBmaXJzdEluc3RhbmNlO1xuICAgICAgICAgICAgbGliKHRoaXMpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBzID0gbmV3IFN3aXBlcih0aGlzLCBwYXJhbXMpO1xuICAgICAgICAgICAgICAgIGlmICghZmlyc3RJbnN0YW5jZSkgZmlyc3RJbnN0YW5jZSA9IHM7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBmaXJzdEluc3RhbmNlO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBcbiAgICBpZiAoZG9tTGliKSB7XG4gICAgICAgIGlmICghKCd0cmFuc2l0aW9uRW5kJyBpbiBkb21MaWIuZm4pKSB7XG4gICAgICAgICAgICBkb21MaWIuZm4udHJhbnNpdGlvbkVuZCA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIHZhciBldmVudHMgPSBbJ3dlYmtpdFRyYW5zaXRpb25FbmQnLCAndHJhbnNpdGlvbmVuZCcsICdvVHJhbnNpdGlvbkVuZCcsICdNU1RyYW5zaXRpb25FbmQnLCAnbXNUcmFuc2l0aW9uRW5kJ10sXG4gICAgICAgICAgICAgICAgICAgIGksIGosIGRvbSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gZmlyZUNhbGxCYWNrKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgLypqc2hpbnQgdmFsaWR0aGlzOnRydWUgKi9cbiAgICAgICAgICAgICAgICAgICAgaWYgKGUudGFyZ2V0ICE9PSB0aGlzKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrLmNhbGwodGhpcywgZSk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBldmVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbS5vZmYoZXZlbnRzW2ldLCBmaXJlQ2FsbEJhY2spO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgZXZlbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb20ub24oZXZlbnRzW2ldLCBmaXJlQ2FsbEJhY2spO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoISgndHJhbnNmb3JtJyBpbiBkb21MaWIuZm4pKSB7XG4gICAgICAgICAgICBkb21MaWIuZm4udHJhbnNmb3JtID0gZnVuY3Rpb24gKHRyYW5zZm9ybSkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZWxTdHlsZSA9IHRoaXNbaV0uc3R5bGU7XG4gICAgICAgICAgICAgICAgICAgIGVsU3R5bGUud2Via2l0VHJhbnNmb3JtID0gZWxTdHlsZS5Nc1RyYW5zZm9ybSA9IGVsU3R5bGUubXNUcmFuc2Zvcm0gPSBlbFN0eWxlLk1velRyYW5zZm9ybSA9IGVsU3R5bGUuT1RyYW5zZm9ybSA9IGVsU3R5bGUudHJhbnNmb3JtID0gdHJhbnNmb3JtO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCEoJ3RyYW5zaXRpb24nIGluIGRvbUxpYi5mbikpIHtcbiAgICAgICAgICAgIGRvbUxpYi5mbi50cmFuc2l0aW9uID0gZnVuY3Rpb24gKGR1cmF0aW9uKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkdXJhdGlvbiAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb24gPSBkdXJhdGlvbiArICdtcyc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZWxTdHlsZSA9IHRoaXNbaV0uc3R5bGU7XG4gICAgICAgICAgICAgICAgICAgIGVsU3R5bGUud2Via2l0VHJhbnNpdGlvbkR1cmF0aW9uID0gZWxTdHlsZS5Nc1RyYW5zaXRpb25EdXJhdGlvbiA9IGVsU3R5bGUubXNUcmFuc2l0aW9uRHVyYXRpb24gPSBlbFN0eWxlLk1velRyYW5zaXRpb25EdXJhdGlvbiA9IGVsU3R5bGUuT1RyYW5zaXRpb25EdXJhdGlvbiA9IGVsU3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gZHVyYXRpb247XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoISgnb3V0ZXJXaWR0aCcgaW4gZG9tTGliLmZuKSkge1xuICAgICAgICAgICAgZG9tTGliLmZuLm91dGVyV2lkdGggPSBmdW5jdGlvbiAoaW5jbHVkZU1hcmdpbnMpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpbmNsdWRlTWFyZ2lucylcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzWzBdLm9mZnNldFdpZHRoICsgcGFyc2VGbG9hdCh0aGlzLmNzcygnbWFyZ2luLXJpZ2h0JykpICsgcGFyc2VGbG9hdCh0aGlzLmNzcygnbWFyZ2luLWxlZnQnKSk7XG4gICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzWzBdLm9mZnNldFdpZHRoO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcblxuICAgIHdpbmRvdy5Td2lwZXIgPSBTd2lwZXI7XG59KSgpO1xuXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PVxuU3dpcGVyIEFNRCBFeHBvcnRcbj09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5pZiAodHlwZW9mKG1vZHVsZSkgIT09ICd1bmRlZmluZWQnKVxue1xuICAgIG1vZHVsZS5leHBvcnRzID0gd2luZG93LlN3aXBlcjtcbn1cbmVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShbXSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAndXNlIHN0cmljdCc7XG4gICAgICAgIHJldHVybiB3aW5kb3cuU3dpcGVyO1xuICAgIH0pO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXBzL3N3aXBlci5qcy5tYXBcbiIsIi8qIVxuICogdnVlLWkxOG4gdjcuMi4wIFxuICogKGMpIDIwMTcga2F6dXlhIGthd2FndWNoaVxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4ndXNlIHN0cmljdCc7XG5cbi8qICAqL1xuXG4vKipcbiAqIHV0aWxpdGVzXG4gKi9cblxuZnVuY3Rpb24gd2FybiAobXNnLCBlcnIpIHtcbiAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgIGNvbnNvbGUud2FybignW3Z1ZS1pMThuXSAnICsgbXNnKTtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICBpZiAoZXJyKSB7XG4gICAgICBjb25zb2xlLndhcm4oZXJyLnN0YWNrKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gaXNPYmplY3QgKG9iaikge1xuICByZXR1cm4gb2JqICE9PSBudWxsICYmIHR5cGVvZiBvYmogPT09ICdvYmplY3QnXG59XG5cbnZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG52YXIgT0JKRUNUX1NUUklORyA9ICdbb2JqZWN0IE9iamVjdF0nO1xuZnVuY3Rpb24gaXNQbGFpbk9iamVjdCAob2JqKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKG9iaikgPT09IE9CSkVDVF9TVFJJTkdcbn1cblxuZnVuY3Rpb24gaXNOdWxsICh2YWwpIHtcbiAgcmV0dXJuIHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZFxufVxuXG5mdW5jdGlvbiBwYXJzZUFyZ3MgKCkge1xuICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gIHZhciBsb2NhbGUgPSBudWxsO1xuICB2YXIgcGFyYW1zID0gbnVsbDtcbiAgaWYgKGFyZ3MubGVuZ3RoID09PSAxKSB7XG4gICAgaWYgKGlzT2JqZWN0KGFyZ3NbMF0pIHx8IEFycmF5LmlzQXJyYXkoYXJnc1swXSkpIHtcbiAgICAgIHBhcmFtcyA9IGFyZ3NbMF07XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgYXJnc1swXSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGxvY2FsZSA9IGFyZ3NbMF07XG4gICAgfVxuICB9IGVsc2UgaWYgKGFyZ3MubGVuZ3RoID09PSAyKSB7XG4gICAgaWYgKHR5cGVvZiBhcmdzWzBdID09PSAnc3RyaW5nJykge1xuICAgICAgbG9jYWxlID0gYXJnc1swXTtcbiAgICB9XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgaWYgKGlzT2JqZWN0KGFyZ3NbMV0pIHx8IEFycmF5LmlzQXJyYXkoYXJnc1sxXSkpIHtcbiAgICAgIHBhcmFtcyA9IGFyZ3NbMV07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHsgbG9jYWxlOiBsb2NhbGUsIHBhcmFtczogcGFyYW1zIH1cbn1cblxuZnVuY3Rpb24gZ2V0T2xkQ2hvaWNlSW5kZXhGaXhlZCAoY2hvaWNlKSB7XG4gIHJldHVybiBjaG9pY2VcbiAgICA/IGNob2ljZSA+IDFcbiAgICAgID8gMVxuICAgICAgOiAwXG4gICAgOiAxXG59XG5cbmZ1bmN0aW9uIGdldENob2ljZUluZGV4IChjaG9pY2UsIGNob2ljZXNMZW5ndGgpIHtcbiAgY2hvaWNlID0gTWF0aC5hYnMoY2hvaWNlKTtcblxuICBpZiAoY2hvaWNlc0xlbmd0aCA9PT0gMikgeyByZXR1cm4gZ2V0T2xkQ2hvaWNlSW5kZXhGaXhlZChjaG9pY2UpIH1cblxuICByZXR1cm4gY2hvaWNlID8gTWF0aC5taW4oY2hvaWNlLCAyKSA6IDBcbn1cblxuZnVuY3Rpb24gZmV0Y2hDaG9pY2UgKG1lc3NhZ2UsIGNob2ljZSkge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKCFtZXNzYWdlICYmIHR5cGVvZiBtZXNzYWdlICE9PSAnc3RyaW5nJykgeyByZXR1cm4gbnVsbCB9XG4gIHZhciBjaG9pY2VzID0gbWVzc2FnZS5zcGxpdCgnfCcpO1xuXG4gIGNob2ljZSA9IGdldENob2ljZUluZGV4KGNob2ljZSwgY2hvaWNlcy5sZW5ndGgpO1xuICBpZiAoIWNob2ljZXNbY2hvaWNlXSkgeyByZXR1cm4gbWVzc2FnZSB9XG4gIHJldHVybiBjaG9pY2VzW2Nob2ljZV0udHJpbSgpXG59XG5cbmZ1bmN0aW9uIGxvb3NlQ2xvbmUgKG9iaikge1xuICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvYmopKVxufVxuXG5mdW5jdGlvbiByZW1vdmUgKGFyciwgaXRlbSkge1xuICBpZiAoYXJyLmxlbmd0aCkge1xuICAgIHZhciBpbmRleCA9IGFyci5pbmRleE9mKGl0ZW0pO1xuICAgIGlmIChpbmRleCA+IC0xKSB7XG4gICAgICByZXR1cm4gYXJyLnNwbGljZShpbmRleCwgMSlcbiAgICB9XG4gIH1cbn1cblxudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIGhhc093biAob2JqLCBrZXkpIHtcbiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpXG59XG5cbmZ1bmN0aW9uIG1lcmdlICh0YXJnZXQpIHtcbiAgdmFyIGFyZ3VtZW50cyQxID0gYXJndW1lbnRzO1xuXG4gIHZhciBvdXRwdXQgPSBPYmplY3QodGFyZ2V0KTtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzJDFbaV07XG4gICAgaWYgKHNvdXJjZSAhPT0gdW5kZWZpbmVkICYmIHNvdXJjZSAhPT0gbnVsbCkge1xuICAgICAgdmFyIGtleSA9ICh2b2lkIDApO1xuICAgICAgZm9yIChrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChoYXNPd24oc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgaWYgKGlzT2JqZWN0KHNvdXJjZVtrZXldKSkge1xuICAgICAgICAgICAgb3V0cHV0W2tleV0gPSBtZXJnZShvdXRwdXRba2V5XSwgc291cmNlW2tleV0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvdXRwdXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gb3V0cHV0XG59XG5cbnZhciBjYW5Vc2VEYXRlVGltZUZvcm1hdCA9XG4gIHR5cGVvZiBJbnRsICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgSW50bC5EYXRlVGltZUZvcm1hdCAhPT0gJ3VuZGVmaW5lZCc7XG5cbnZhciBjYW5Vc2VOdW1iZXJGb3JtYXQgPVxuICB0eXBlb2YgSW50bCAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIEludGwuTnVtYmVyRm9ybWF0ICE9PSAndW5kZWZpbmVkJztcblxuLyogICovXG5cbmZ1bmN0aW9uIGV4dGVuZCAoVnVlKSB7XG4gIFZ1ZS5wcm90b3R5cGUuJHQgPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIHZhbHVlcyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoIC0gMTtcbiAgICB3aGlsZSAoIGxlbi0tID4gMCApIHZhbHVlc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiArIDEgXTtcblxuICAgIHZhciBpMThuID0gdGhpcy4kaTE4bjtcbiAgICByZXR1cm4gaTE4bi5fdC5hcHBseShpMThuLCBbIGtleSwgaTE4bi5sb2NhbGUsIGkxOG4uX2dldE1lc3NhZ2VzKCksIHRoaXMgXS5jb25jYXQoIHZhbHVlcyApKVxuICB9O1xuXG4gIFZ1ZS5wcm90b3R5cGUuJHRjID0gZnVuY3Rpb24gKGtleSwgY2hvaWNlKSB7XG4gICAgdmFyIHZhbHVlcyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoIC0gMjtcbiAgICB3aGlsZSAoIGxlbi0tID4gMCApIHZhbHVlc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiArIDIgXTtcblxuICAgIHZhciBpMThuID0gdGhpcy4kaTE4bjtcbiAgICByZXR1cm4gaTE4bi5fdGMuYXBwbHkoaTE4biwgWyBrZXksIGkxOG4ubG9jYWxlLCBpMThuLl9nZXRNZXNzYWdlcygpLCB0aGlzLCBjaG9pY2UgXS5jb25jYXQoIHZhbHVlcyApKVxuICB9O1xuXG4gIFZ1ZS5wcm90b3R5cGUuJHRlID0gZnVuY3Rpb24gKGtleSwgbG9jYWxlKSB7XG4gICAgdmFyIGkxOG4gPSB0aGlzLiRpMThuO1xuICAgIHJldHVybiBpMThuLl90ZShrZXksIGkxOG4ubG9jYWxlLCBpMThuLl9nZXRNZXNzYWdlcygpLCBsb2NhbGUpXG4gIH07XG5cbiAgVnVlLnByb3RvdHlwZS4kZCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGggLSAxO1xuICAgIHdoaWxlICggbGVuLS0gPiAwICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiArIDEgXTtcblxuICAgIHJldHVybiAocmVmID0gdGhpcy4kaTE4bikuZC5hcHBseShyZWYsIFsgdmFsdWUgXS5jb25jYXQoIGFyZ3MgKSlcbiAgICB2YXIgcmVmO1xuICB9O1xuXG4gIFZ1ZS5wcm90b3R5cGUuJG4gPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoIC0gMTtcbiAgICB3aGlsZSAoIGxlbi0tID4gMCApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gKyAxIF07XG5cbiAgICByZXR1cm4gKHJlZiA9IHRoaXMuJGkxOG4pLm4uYXBwbHkocmVmLCBbIHZhbHVlIF0uY29uY2F0KCBhcmdzICkpXG4gICAgdmFyIHJlZjtcbiAgfTtcbn1cblxuLyogICovXG5cbnZhciBtaXhpbiA9IHtcbiAgYmVmb3JlQ3JlYXRlOiBmdW5jdGlvbiBiZWZvcmVDcmVhdGUgKCkge1xuICAgIHZhciBvcHRpb25zID0gdGhpcy4kb3B0aW9ucztcbiAgICBvcHRpb25zLmkxOG4gPSBvcHRpb25zLmkxOG4gfHwgKG9wdGlvbnMuX19pMThuID8ge30gOiBudWxsKTtcblxuICAgIGlmIChvcHRpb25zLmkxOG4pIHtcbiAgICAgIGlmIChvcHRpb25zLmkxOG4gaW5zdGFuY2VvZiBWdWVJMThuKSB7XG4gICAgICAgIC8vIGluaXQgbG9jYWxlIG1lc3NhZ2VzIHZpYSBjdXN0b20gYmxvY2tzXG4gICAgICAgIGlmIChvcHRpb25zLl9faTE4bikge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICB2YXIgbG9jYWxlTWVzc2FnZXMgPSB7fTtcbiAgICAgICAgICAgIG9wdGlvbnMuX19pMThuLmZvckVhY2goZnVuY3Rpb24gKHJlc291cmNlKSB7XG4gICAgICAgICAgICAgIGxvY2FsZU1lc3NhZ2VzID0gbWVyZ2UobG9jYWxlTWVzc2FnZXMsIEpTT04ucGFyc2UocmVzb3VyY2UpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgT2JqZWN0LmtleXMobG9jYWxlTWVzc2FnZXMpLmZvckVhY2goZnVuY3Rpb24gKGxvY2FsZSkge1xuICAgICAgICAgICAgICBvcHRpb25zLmkxOG4ubWVyZ2VMb2NhbGVNZXNzYWdlKGxvY2FsZSwgbG9jYWxlTWVzc2FnZXNbbG9jYWxlXSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgICB3YXJuKFwiQ2Fubm90IHBhcnNlIGxvY2FsZSBtZXNzYWdlcyB2aWEgY3VzdG9tIGJsb2Nrcy5cIiwgZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2kxOG4gPSBvcHRpb25zLmkxOG47XG4gICAgICAgIHRoaXMuX2kxOG5XYXRjaGVyID0gdGhpcy5faTE4bi53YXRjaEkxOG5EYXRhKCk7XG4gICAgICAgIHRoaXMuX2kxOG4uc3Vic2NyaWJlRGF0YUNoYW5naW5nKHRoaXMpO1xuICAgICAgICB0aGlzLl9zdWJzY3JpYmluZyA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKGlzUGxhaW5PYmplY3Qob3B0aW9ucy5pMThuKSkge1xuICAgICAgICAvLyBjb21wb25lbnQgbG9jYWwgaTE4blxuICAgICAgICBpZiAodGhpcy4kcm9vdCAmJiB0aGlzLiRyb290LiRpMThuICYmIHRoaXMuJHJvb3QuJGkxOG4gaW5zdGFuY2VvZiBWdWVJMThuKSB7XG4gICAgICAgICAgb3B0aW9ucy5pMThuLnJvb3QgPSB0aGlzLiRyb290LiRpMThuO1xuICAgICAgICAgIG9wdGlvbnMuaTE4bi5mYWxsYmFja0xvY2FsZSA9IHRoaXMuJHJvb3QuJGkxOG4uZmFsbGJhY2tMb2NhbGU7XG4gICAgICAgICAgb3B0aW9ucy5pMThuLnNpbGVudFRyYW5zbGF0aW9uV2FybiA9IHRoaXMuJHJvb3QuJGkxOG4uc2lsZW50VHJhbnNsYXRpb25XYXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaW5pdCBsb2NhbGUgbWVzc2FnZXMgdmlhIGN1c3RvbSBibG9ja3NcbiAgICAgICAgaWYgKG9wdGlvbnMuX19pMThuKSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHZhciBsb2NhbGVNZXNzYWdlcyQxID0ge307XG4gICAgICAgICAgICBvcHRpb25zLl9faTE4bi5mb3JFYWNoKGZ1bmN0aW9uIChyZXNvdXJjZSkge1xuICAgICAgICAgICAgICBsb2NhbGVNZXNzYWdlcyQxID0gbWVyZ2UobG9jYWxlTWVzc2FnZXMkMSwgSlNPTi5wYXJzZShyZXNvdXJjZSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBvcHRpb25zLmkxOG4ubWVzc2FnZXMgPSBsb2NhbGVNZXNzYWdlcyQxO1xuICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICAgIHdhcm4oXCJDYW5ub3QgcGFyc2UgbG9jYWxlIG1lc3NhZ2VzIHZpYSBjdXN0b20gYmxvY2tzLlwiLCBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9pMThuID0gbmV3IFZ1ZUkxOG4ob3B0aW9ucy5pMThuKTtcbiAgICAgICAgdGhpcy5faTE4bldhdGNoZXIgPSB0aGlzLl9pMThuLndhdGNoSTE4bkRhdGEoKTtcbiAgICAgICAgdGhpcy5faTE4bi5zdWJzY3JpYmVEYXRhQ2hhbmdpbmcodGhpcyk7XG4gICAgICAgIHRoaXMuX3N1YnNjcmliaW5nID0gdHJ1ZTtcblxuICAgICAgICBpZiAob3B0aW9ucy5pMThuLnN5bmMgPT09IHVuZGVmaW5lZCB8fCAhIW9wdGlvbnMuaTE4bi5zeW5jKSB7XG4gICAgICAgICAgdGhpcy5fbG9jYWxlV2F0Y2hlciA9IHRoaXMuJGkxOG4ud2F0Y2hMb2NhbGUoKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICB3YXJuKFwiQ2Fubm90IGJlIGludGVycHJldGVkICdpMThuJyBvcHRpb24uXCIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh0aGlzLiRyb290ICYmIHRoaXMuJHJvb3QuJGkxOG4gJiYgdGhpcy4kcm9vdC4kaTE4biBpbnN0YW5jZW9mIFZ1ZUkxOG4pIHtcbiAgICAgIC8vIHJvb3QgaTE4blxuICAgICAgdGhpcy5faTE4biA9IHRoaXMuJHJvb3QuJGkxOG47XG4gICAgICB0aGlzLl9pMThuLnN1YnNjcmliZURhdGFDaGFuZ2luZyh0aGlzKTtcbiAgICAgIHRoaXMuX3N1YnNjcmliaW5nID0gdHJ1ZTtcbiAgICB9IGVsc2UgaWYgKG9wdGlvbnMucGFyZW50ICYmIG9wdGlvbnMucGFyZW50LiRpMThuICYmIG9wdGlvbnMucGFyZW50LiRpMThuIGluc3RhbmNlb2YgVnVlSTE4bikge1xuICAgICAgLy8gcGFyZW50IGkxOG5cbiAgICAgIHRoaXMuX2kxOG4gPSBvcHRpb25zLnBhcmVudC4kaTE4bjtcbiAgICAgIHRoaXMuX2kxOG4uc3Vic2NyaWJlRGF0YUNoYW5naW5nKHRoaXMpO1xuICAgICAgdGhpcy5fc3Vic2NyaWJpbmcgPSB0cnVlO1xuICAgIH1cbiAgfSxcblxuICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95ICgpIHtcbiAgICBpZiAoIXRoaXMuX2kxOG4pIHsgcmV0dXJuIH1cblxuICAgIGlmICh0aGlzLl9zdWJzY3JpYmluZykge1xuICAgICAgdGhpcy5faTE4bi51bnN1YnNjcmliZURhdGFDaGFuZ2luZyh0aGlzKTtcbiAgICAgIGRlbGV0ZSB0aGlzLl9zdWJzY3JpYmluZztcbiAgICB9XG5cbiAgICBpZiAodGhpcy5faTE4bldhdGNoZXIpIHtcbiAgICAgIHRoaXMuX2kxOG5XYXRjaGVyKCk7XG4gICAgICBkZWxldGUgdGhpcy5faTE4bldhdGNoZXI7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX2xvY2FsZVdhdGNoZXIpIHtcbiAgICAgIHRoaXMuX2xvY2FsZVdhdGNoZXIoKTtcbiAgICAgIGRlbGV0ZSB0aGlzLl9sb2NhbGVXYXRjaGVyO1xuICAgIH1cblxuICAgIHRoaXMuX2kxOG4gPSBudWxsO1xuICB9XG59O1xuXG4vKiAgKi9cblxudmFyIGNvbXBvbmVudCA9IHtcbiAgbmFtZTogJ2kxOG4nLFxuICBmdW5jdGlvbmFsOiB0cnVlLFxuICBwcm9wczoge1xuICAgIHRhZzoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ3NwYW4nXG4gICAgfSxcbiAgICBwYXRoOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICByZXF1aXJlZDogdHJ1ZVxuICAgIH0sXG4gICAgbG9jYWxlOiB7XG4gICAgICB0eXBlOiBTdHJpbmdcbiAgICB9LFxuICAgIHBsYWNlczoge1xuICAgICAgdHlwZTogW0FycmF5LCBPYmplY3RdXG4gICAgfVxuICB9LFxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlciAoaCwgcmVmKSB7XG4gICAgdmFyIHByb3BzID0gcmVmLnByb3BzO1xuICAgIHZhciBkYXRhID0gcmVmLmRhdGE7XG4gICAgdmFyIGNoaWxkcmVuID0gcmVmLmNoaWxkcmVuO1xuICAgIHZhciBwYXJlbnQgPSByZWYucGFyZW50O1xuXG4gICAgdmFyIGkxOG4gPSBwYXJlbnQuJGkxOG47XG5cbiAgICBjaGlsZHJlbiA9IChjaGlsZHJlbiB8fCBbXSkuZmlsdGVyKGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgcmV0dXJuIGNoaWxkLnRhZyB8fCAoY2hpbGQudGV4dCA9IGNoaWxkLnRleHQudHJpbSgpKVxuICAgIH0pO1xuXG4gICAgaWYgKCFpMThuKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICB3YXJuKCdDYW5ub3QgZmluZCBWdWVJMThuIGluc3RhbmNlIScpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNoaWxkcmVuXG4gICAgfVxuXG4gICAgdmFyIHBhdGggPSBwcm9wcy5wYXRoO1xuICAgIHZhciBsb2NhbGUgPSBwcm9wcy5sb2NhbGU7XG5cbiAgICB2YXIgcGFyYW1zID0ge307XG4gICAgdmFyIHBsYWNlcyA9IHByb3BzLnBsYWNlcyB8fCB7fTtcblxuICAgIHZhciBoYXNQbGFjZXMgPSBBcnJheS5pc0FycmF5KHBsYWNlcylcbiAgICAgID8gcGxhY2VzLmxlbmd0aCA+IDBcbiAgICAgIDogT2JqZWN0LmtleXMocGxhY2VzKS5sZW5ndGggPiAwO1xuXG4gICAgdmFyIGV2ZXJ5UGxhY2UgPSBjaGlsZHJlbi5ldmVyeShmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgIGlmIChjaGlsZC5kYXRhICYmIGNoaWxkLmRhdGEuYXR0cnMpIHtcbiAgICAgICAgdmFyIHBsYWNlID0gY2hpbGQuZGF0YS5hdHRycy5wbGFjZTtcbiAgICAgICAgcmV0dXJuICh0eXBlb2YgcGxhY2UgIT09ICd1bmRlZmluZWQnKSAmJiBwbGFjZSAhPT0gJydcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGlmIChoYXNQbGFjZXMgJiYgY2hpbGRyZW4ubGVuZ3RoID4gMCAmJiAhZXZlcnlQbGFjZSkge1xuICAgICAgd2FybignSWYgcGxhY2VzIHByb3AgaXMgc2V0LCBhbGwgY2hpbGQgZWxlbWVudHMgbXVzdCBoYXZlIHBsYWNlIHByb3Agc2V0LicpO1xuICAgIH1cblxuICAgIGlmIChBcnJheS5pc0FycmF5KHBsYWNlcykpIHtcbiAgICAgIHBsYWNlcy5mb3JFYWNoKGZ1bmN0aW9uIChlbCwgaSkge1xuICAgICAgICBwYXJhbXNbaV0gPSBlbDtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBPYmplY3Qua2V5cyhwbGFjZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBwYXJhbXNba2V5XSA9IHBsYWNlc1trZXldO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQsIGkpIHtcbiAgICAgIHZhciBrZXkgPSBldmVyeVBsYWNlXG4gICAgICAgID8gKFwiXCIgKyAoY2hpbGQuZGF0YS5hdHRycy5wbGFjZSkpXG4gICAgICAgIDogKFwiXCIgKyBpKTtcbiAgICAgIHBhcmFtc1trZXldID0gY2hpbGQ7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gaChwcm9wcy50YWcsIGRhdGEsIGkxOG4uaShwYXRoLCBsb2NhbGUsIHBhcmFtcykpXG4gIH1cbn07XG5cbnZhciBWdWU7XG5cbmZ1bmN0aW9uIGluc3RhbGwgKF9WdWUpIHtcbiAgVnVlID0gX1Z1ZTtcblxuICB2YXIgdmVyc2lvbiA9IChWdWUudmVyc2lvbiAmJiBOdW1iZXIoVnVlLnZlcnNpb24uc3BsaXQoJy4nKVswXSkpIHx8IC0xO1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgaW5zdGFsbC5pbnN0YWxsZWQpIHtcbiAgICB3YXJuKCdhbHJlYWR5IGluc3RhbGxlZC4nKTtcbiAgICByZXR1cm5cbiAgfVxuICBpbnN0YWxsLmluc3RhbGxlZCA9IHRydWU7XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHZlcnNpb24gPCAyKSB7XG4gICAgd2FybigoXCJ2dWUtaTE4biAoXCIgKyAoaW5zdGFsbC52ZXJzaW9uKSArIFwiKSBuZWVkIHRvIHVzZSBWdWUgMi4wIG9yIGxhdGVyIChWdWU6IFwiICsgKFZ1ZS52ZXJzaW9uKSArIFwiKS5cIikpO1xuICAgIHJldHVyblxuICB9XG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFZ1ZS5wcm90b3R5cGUsICckaTE4bicsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCAoKSB7IHJldHVybiB0aGlzLl9pMThuIH1cbiAgfSk7XG5cbiAgZXh0ZW5kKFZ1ZSk7XG4gIFZ1ZS5taXhpbihtaXhpbik7XG4gIFZ1ZS5jb21wb25lbnQoY29tcG9uZW50Lm5hbWUsIGNvbXBvbmVudCk7XG5cbiAgLy8gdXNlIG9iamVjdC1iYXNlZCBtZXJnZSBzdHJhdGVneVxuICB2YXIgc3RyYXRzID0gVnVlLmNvbmZpZy5vcHRpb25NZXJnZVN0cmF0ZWdpZXM7XG4gIHN0cmF0cy5pMThuID0gc3RyYXRzLm1ldGhvZHM7XG59XG5cbi8qICAqL1xuXG52YXIgQmFzZUZvcm1hdHRlciA9IGZ1bmN0aW9uIEJhc2VGb3JtYXR0ZXIgKCkge1xuICB0aGlzLl9jYWNoZXMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xufTtcblxuQmFzZUZvcm1hdHRlci5wcm90b3R5cGUuaW50ZXJwb2xhdGUgPSBmdW5jdGlvbiBpbnRlcnBvbGF0ZSAobWVzc2FnZSwgdmFsdWVzKSB7XG4gIHZhciB0b2tlbnMgPSB0aGlzLl9jYWNoZXNbbWVzc2FnZV07XG4gIGlmICghdG9rZW5zKSB7XG4gICAgdG9rZW5zID0gcGFyc2UobWVzc2FnZSk7XG4gICAgdGhpcy5fY2FjaGVzW21lc3NhZ2VdID0gdG9rZW5zO1xuICB9XG4gIHJldHVybiBjb21waWxlKHRva2VucywgdmFsdWVzKVxufTtcblxudmFyIFJFX1RPS0VOX0xJU1RfVkFMVUUgPSAvXihcXGQpKy87XG52YXIgUkVfVE9LRU5fTkFNRURfVkFMVUUgPSAvXihcXHcpKy87XG5cbmZ1bmN0aW9uIHBhcnNlIChmb3JtYXQpIHtcbiAgdmFyIHRva2VucyA9IFtdO1xuICB2YXIgcG9zaXRpb24gPSAwO1xuXG4gIHZhciB0ZXh0ID0gJyc7XG4gIHdoaWxlIChwb3NpdGlvbiA8IGZvcm1hdC5sZW5ndGgpIHtcbiAgICB2YXIgY2hhciA9IGZvcm1hdFtwb3NpdGlvbisrXTtcbiAgICBpZiAoY2hhciA9PT0gJ3snKSB7XG4gICAgICBpZiAodGV4dCkge1xuICAgICAgICB0b2tlbnMucHVzaCh7IHR5cGU6ICd0ZXh0JywgdmFsdWU6IHRleHQgfSk7XG4gICAgICB9XG5cbiAgICAgIHRleHQgPSAnJztcbiAgICAgIHZhciBzdWIgPSAnJztcbiAgICAgIGNoYXIgPSBmb3JtYXRbcG9zaXRpb24rK107XG4gICAgICB3aGlsZSAoY2hhciAhPT0gJ30nKSB7XG4gICAgICAgIHN1YiArPSBjaGFyO1xuICAgICAgICBjaGFyID0gZm9ybWF0W3Bvc2l0aW9uKytdO1xuICAgICAgfVxuXG4gICAgICB2YXIgdHlwZSA9IFJFX1RPS0VOX0xJU1RfVkFMVUUudGVzdChzdWIpXG4gICAgICAgID8gJ2xpc3QnXG4gICAgICAgIDogUkVfVE9LRU5fTkFNRURfVkFMVUUudGVzdChzdWIpXG4gICAgICAgICAgPyAnbmFtZWQnXG4gICAgICAgICAgOiAndW5rbm93bic7XG4gICAgICB0b2tlbnMucHVzaCh7IHZhbHVlOiBzdWIsIHR5cGU6IHR5cGUgfSk7XG4gICAgfSBlbHNlIGlmIChjaGFyID09PSAnJScpIHtcbiAgICAgIC8vIHdoZW4gZm91bmQgcmFpbHMgaTE4biBzeW50YXgsIHNraXAgdGV4dCBjYXB0dXJlXG4gICAgICBpZiAoZm9ybWF0Wyhwb3NpdGlvbildICE9PSAneycpIHtcbiAgICAgICAgdGV4dCArPSBjaGFyO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0ZXh0ICs9IGNoYXI7XG4gICAgfVxuICB9XG5cbiAgdGV4dCAmJiB0b2tlbnMucHVzaCh7IHR5cGU6ICd0ZXh0JywgdmFsdWU6IHRleHQgfSk7XG5cbiAgcmV0dXJuIHRva2Vuc1xufVxuXG5mdW5jdGlvbiBjb21waWxlICh0b2tlbnMsIHZhbHVlcykge1xuICB2YXIgY29tcGlsZWQgPSBbXTtcbiAgdmFyIGluZGV4ID0gMDtcblxuICB2YXIgbW9kZSA9IEFycmF5LmlzQXJyYXkodmFsdWVzKVxuICAgID8gJ2xpc3QnXG4gICAgOiBpc09iamVjdCh2YWx1ZXMpXG4gICAgICA/ICduYW1lZCdcbiAgICAgIDogJ3Vua25vd24nO1xuICBpZiAobW9kZSA9PT0gJ3Vua25vd24nKSB7IHJldHVybiBjb21waWxlZCB9XG5cbiAgd2hpbGUgKGluZGV4IDwgdG9rZW5zLmxlbmd0aCkge1xuICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpbmRleF07XG4gICAgc3dpdGNoICh0b2tlbi50eXBlKSB7XG4gICAgICBjYXNlICd0ZXh0JzpcbiAgICAgICAgY29tcGlsZWQucHVzaCh0b2tlbi52YWx1ZSk7XG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlICdsaXN0JzpcbiAgICAgICAgY29tcGlsZWQucHVzaCh2YWx1ZXNbcGFyc2VJbnQodG9rZW4udmFsdWUsIDEwKV0pO1xuICAgICAgICBicmVha1xuICAgICAgY2FzZSAnbmFtZWQnOlxuICAgICAgICBpZiAobW9kZSA9PT0gJ25hbWVkJykge1xuICAgICAgICAgIGNvbXBpbGVkLnB1c2goKHZhbHVlcylbdG9rZW4udmFsdWVdKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgd2FybigoXCJUeXBlIG9mIHRva2VuICdcIiArICh0b2tlbi50eXBlKSArIFwiJyBhbmQgZm9ybWF0IG9mIHZhbHVlICdcIiArIG1vZGUgKyBcIicgZG9uJ3QgbWF0Y2ghXCIpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgJ3Vua25vd24nOlxuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIHdhcm4oXCJEZXRlY3QgJ3Vua25vd24nIHR5cGUgb2YgdG9rZW4hXCIpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrXG4gICAgfVxuICAgIGluZGV4Kys7XG4gIH1cblxuICByZXR1cm4gY29tcGlsZWRcbn1cblxuLyogICovXG5cbi8qKlxuICogIFBhdGggcGFlcnNlclxuICogIC0gSW5zcGlyZWQ6XG4gKiAgICBWdWUuanMgUGF0aCBwYXJzZXJcbiAqL1xuXG4vLyBhY3Rpb25zXG52YXIgQVBQRU5EID0gMDtcbnZhciBQVVNIID0gMTtcbnZhciBJTkNfU1VCX1BBVEhfREVQVEggPSAyO1xudmFyIFBVU0hfU1VCX1BBVEggPSAzO1xuXG4vLyBzdGF0ZXNcbnZhciBCRUZPUkVfUEFUSCA9IDA7XG52YXIgSU5fUEFUSCA9IDE7XG52YXIgQkVGT1JFX0lERU5UID0gMjtcbnZhciBJTl9JREVOVCA9IDM7XG52YXIgSU5fU1VCX1BBVEggPSA0O1xudmFyIElOX1NJTkdMRV9RVU9URSA9IDU7XG52YXIgSU5fRE9VQkxFX1FVT1RFID0gNjtcbnZhciBBRlRFUl9QQVRIID0gNztcbnZhciBFUlJPUiA9IDg7XG5cbnZhciBwYXRoU3RhdGVNYWNoaW5lID0gW107XG5cbnBhdGhTdGF0ZU1hY2hpbmVbQkVGT1JFX1BBVEhdID0ge1xuICAnd3MnOiBbQkVGT1JFX1BBVEhdLFxuICAnaWRlbnQnOiBbSU5fSURFTlQsIEFQUEVORF0sXG4gICdbJzogW0lOX1NVQl9QQVRIXSxcbiAgJ2VvZic6IFtBRlRFUl9QQVRIXVxufTtcblxucGF0aFN0YXRlTWFjaGluZVtJTl9QQVRIXSA9IHtcbiAgJ3dzJzogW0lOX1BBVEhdLFxuICAnLic6IFtCRUZPUkVfSURFTlRdLFxuICAnWyc6IFtJTl9TVUJfUEFUSF0sXG4gICdlb2YnOiBbQUZURVJfUEFUSF1cbn07XG5cbnBhdGhTdGF0ZU1hY2hpbmVbQkVGT1JFX0lERU5UXSA9IHtcbiAgJ3dzJzogW0JFRk9SRV9JREVOVF0sXG4gICdpZGVudCc6IFtJTl9JREVOVCwgQVBQRU5EXSxcbiAgJzAnOiBbSU5fSURFTlQsIEFQUEVORF0sXG4gICdudW1iZXInOiBbSU5fSURFTlQsIEFQUEVORF1cbn07XG5cbnBhdGhTdGF0ZU1hY2hpbmVbSU5fSURFTlRdID0ge1xuICAnaWRlbnQnOiBbSU5fSURFTlQsIEFQUEVORF0sXG4gICcwJzogW0lOX0lERU5ULCBBUFBFTkRdLFxuICAnbnVtYmVyJzogW0lOX0lERU5ULCBBUFBFTkRdLFxuICAnd3MnOiBbSU5fUEFUSCwgUFVTSF0sXG4gICcuJzogW0JFRk9SRV9JREVOVCwgUFVTSF0sXG4gICdbJzogW0lOX1NVQl9QQVRILCBQVVNIXSxcbiAgJ2VvZic6IFtBRlRFUl9QQVRILCBQVVNIXVxufTtcblxucGF0aFN0YXRlTWFjaGluZVtJTl9TVUJfUEFUSF0gPSB7XG4gIFwiJ1wiOiBbSU5fU0lOR0xFX1FVT1RFLCBBUFBFTkRdLFxuICAnXCInOiBbSU5fRE9VQkxFX1FVT1RFLCBBUFBFTkRdLFxuICAnWyc6IFtJTl9TVUJfUEFUSCwgSU5DX1NVQl9QQVRIX0RFUFRIXSxcbiAgJ10nOiBbSU5fUEFUSCwgUFVTSF9TVUJfUEFUSF0sXG4gICdlb2YnOiBFUlJPUixcbiAgJ2Vsc2UnOiBbSU5fU1VCX1BBVEgsIEFQUEVORF1cbn07XG5cbnBhdGhTdGF0ZU1hY2hpbmVbSU5fU0lOR0xFX1FVT1RFXSA9IHtcbiAgXCInXCI6IFtJTl9TVUJfUEFUSCwgQVBQRU5EXSxcbiAgJ2VvZic6IEVSUk9SLFxuICAnZWxzZSc6IFtJTl9TSU5HTEVfUVVPVEUsIEFQUEVORF1cbn07XG5cbnBhdGhTdGF0ZU1hY2hpbmVbSU5fRE9VQkxFX1FVT1RFXSA9IHtcbiAgJ1wiJzogW0lOX1NVQl9QQVRILCBBUFBFTkRdLFxuICAnZW9mJzogRVJST1IsXG4gICdlbHNlJzogW0lOX0RPVUJMRV9RVU9URSwgQVBQRU5EXVxufTtcblxuLyoqXG4gKiBDaGVjayBpZiBhbiBleHByZXNzaW9uIGlzIGEgbGl0ZXJhbCB2YWx1ZS5cbiAqL1xuXG52YXIgbGl0ZXJhbFZhbHVlUkUgPSAvXlxccz8odHJ1ZXxmYWxzZXwtP1tcXGQuXSt8J1teJ10qJ3xcIlteXCJdKlwiKVxccz8kLztcbmZ1bmN0aW9uIGlzTGl0ZXJhbCAoZXhwKSB7XG4gIHJldHVybiBsaXRlcmFsVmFsdWVSRS50ZXN0KGV4cClcbn1cblxuLyoqXG4gKiBTdHJpcCBxdW90ZXMgZnJvbSBhIHN0cmluZ1xuICovXG5cbmZ1bmN0aW9uIHN0cmlwUXVvdGVzIChzdHIpIHtcbiAgdmFyIGEgPSBzdHIuY2hhckNvZGVBdCgwKTtcbiAgdmFyIGIgPSBzdHIuY2hhckNvZGVBdChzdHIubGVuZ3RoIC0gMSk7XG4gIHJldHVybiBhID09PSBiICYmIChhID09PSAweDIyIHx8IGEgPT09IDB4MjcpXG4gICAgPyBzdHIuc2xpY2UoMSwgLTEpXG4gICAgOiBzdHJcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgdGhlIHR5cGUgb2YgYSBjaGFyYWN0ZXIgaW4gYSBrZXlwYXRoLlxuICovXG5cbmZ1bmN0aW9uIGdldFBhdGhDaGFyVHlwZSAoY2gpIHtcbiAgaWYgKGNoID09PSB1bmRlZmluZWQgfHwgY2ggPT09IG51bGwpIHsgcmV0dXJuICdlb2YnIH1cblxuICB2YXIgY29kZSA9IGNoLmNoYXJDb2RlQXQoMCk7XG5cbiAgc3dpdGNoIChjb2RlKSB7XG4gICAgY2FzZSAweDVCOiAvLyBbXG4gICAgY2FzZSAweDVEOiAvLyBdXG4gICAgY2FzZSAweDJFOiAvLyAuXG4gICAgY2FzZSAweDIyOiAvLyBcIlxuICAgIGNhc2UgMHgyNzogLy8gJ1xuICAgIGNhc2UgMHgzMDogLy8gMFxuICAgICAgcmV0dXJuIGNoXG5cbiAgICBjYXNlIDB4NUY6IC8vIF9cbiAgICBjYXNlIDB4MjQ6IC8vICRcbiAgICBjYXNlIDB4MkQ6IC8vIC1cbiAgICAgIHJldHVybiAnaWRlbnQnXG5cbiAgICBjYXNlIDB4MjA6IC8vIFNwYWNlXG4gICAgY2FzZSAweDA5OiAvLyBUYWJcbiAgICBjYXNlIDB4MEE6IC8vIE5ld2xpbmVcbiAgICBjYXNlIDB4MEQ6IC8vIFJldHVyblxuICAgIGNhc2UgMHhBMDogIC8vIE5vLWJyZWFrIHNwYWNlXG4gICAgY2FzZSAweEZFRkY6ICAvLyBCeXRlIE9yZGVyIE1hcmtcbiAgICBjYXNlIDB4MjAyODogIC8vIExpbmUgU2VwYXJhdG9yXG4gICAgY2FzZSAweDIwMjk6ICAvLyBQYXJhZ3JhcGggU2VwYXJhdG9yXG4gICAgICByZXR1cm4gJ3dzJ1xuICB9XG5cbiAgLy8gYS16LCBBLVpcbiAgaWYgKChjb2RlID49IDB4NjEgJiYgY29kZSA8PSAweDdBKSB8fCAoY29kZSA+PSAweDQxICYmIGNvZGUgPD0gMHg1QSkpIHtcbiAgICByZXR1cm4gJ2lkZW50J1xuICB9XG5cbiAgLy8gMS05XG4gIGlmIChjb2RlID49IDB4MzEgJiYgY29kZSA8PSAweDM5KSB7IHJldHVybiAnbnVtYmVyJyB9XG5cbiAgcmV0dXJuICdlbHNlJ1xufVxuXG4vKipcbiAqIEZvcm1hdCBhIHN1YlBhdGgsIHJldHVybiBpdHMgcGxhaW4gZm9ybSBpZiBpdCBpc1xuICogYSBsaXRlcmFsIHN0cmluZyBvciBudW1iZXIuIE90aGVyd2lzZSBwcmVwZW5kIHRoZVxuICogZHluYW1pYyBpbmRpY2F0b3IgKCopLlxuICovXG5cbmZ1bmN0aW9uIGZvcm1hdFN1YlBhdGggKHBhdGgpIHtcbiAgdmFyIHRyaW1tZWQgPSBwYXRoLnRyaW0oKTtcbiAgLy8gaW52YWxpZCBsZWFkaW5nIDBcbiAgaWYgKHBhdGguY2hhckF0KDApID09PSAnMCcgJiYgaXNOYU4ocGF0aCkpIHsgcmV0dXJuIGZhbHNlIH1cblxuICByZXR1cm4gaXNMaXRlcmFsKHRyaW1tZWQpID8gc3RyaXBRdW90ZXModHJpbW1lZCkgOiAnKicgKyB0cmltbWVkXG59XG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgcGF0aCBpbnRvIGFuIGFycmF5IG9mIHNlZ21lbnRzXG4gKi9cblxuZnVuY3Rpb24gcGFyc2UkMSAocGF0aCkge1xuICB2YXIga2V5cyA9IFtdO1xuICB2YXIgaW5kZXggPSAtMTtcbiAgdmFyIG1vZGUgPSBCRUZPUkVfUEFUSDtcbiAgdmFyIHN1YlBhdGhEZXB0aCA9IDA7XG4gIHZhciBjO1xuICB2YXIga2V5O1xuICB2YXIgbmV3Q2hhcjtcbiAgdmFyIHR5cGU7XG4gIHZhciB0cmFuc2l0aW9uO1xuICB2YXIgYWN0aW9uO1xuICB2YXIgdHlwZU1hcDtcbiAgdmFyIGFjdGlvbnMgPSBbXTtcblxuICBhY3Rpb25zW1BVU0hdID0gZnVuY3Rpb24gKCkge1xuICAgIGlmIChrZXkgIT09IHVuZGVmaW5lZCkge1xuICAgICAga2V5cy5wdXNoKGtleSk7XG4gICAgICBrZXkgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9O1xuXG4gIGFjdGlvbnNbQVBQRU5EXSA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoa2V5ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGtleSA9IG5ld0NoYXI7XG4gICAgfSBlbHNlIHtcbiAgICAgIGtleSArPSBuZXdDaGFyO1xuICAgIH1cbiAgfTtcblxuICBhY3Rpb25zW0lOQ19TVUJfUEFUSF9ERVBUSF0gPSBmdW5jdGlvbiAoKSB7XG4gICAgYWN0aW9uc1tBUFBFTkRdKCk7XG4gICAgc3ViUGF0aERlcHRoKys7XG4gIH07XG5cbiAgYWN0aW9uc1tQVVNIX1NVQl9QQVRIXSA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoc3ViUGF0aERlcHRoID4gMCkge1xuICAgICAgc3ViUGF0aERlcHRoLS07XG4gICAgICBtb2RlID0gSU5fU1VCX1BBVEg7XG4gICAgICBhY3Rpb25zW0FQUEVORF0oKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3ViUGF0aERlcHRoID0gMDtcbiAgICAgIGtleSA9IGZvcm1hdFN1YlBhdGgoa2V5KTtcbiAgICAgIGlmIChrZXkgPT09IGZhbHNlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYWN0aW9uc1tQVVNIXSgpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBmdW5jdGlvbiBtYXliZVVuZXNjYXBlUXVvdGUgKCkge1xuICAgIHZhciBuZXh0Q2hhciA9IHBhdGhbaW5kZXggKyAxXTtcbiAgICBpZiAoKG1vZGUgPT09IElOX1NJTkdMRV9RVU9URSAmJiBuZXh0Q2hhciA9PT0gXCInXCIpIHx8XG4gICAgICAobW9kZSA9PT0gSU5fRE9VQkxFX1FVT1RFICYmIG5leHRDaGFyID09PSAnXCInKSkge1xuICAgICAgaW5kZXgrKztcbiAgICAgIG5ld0NoYXIgPSAnXFxcXCcgKyBuZXh0Q2hhcjtcbiAgICAgIGFjdGlvbnNbQVBQRU5EXSgpO1xuICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG4gIH1cblxuICB3aGlsZSAobW9kZSAhPT0gbnVsbCkge1xuICAgIGluZGV4Kys7XG4gICAgYyA9IHBhdGhbaW5kZXhdO1xuXG4gICAgaWYgKGMgPT09ICdcXFxcJyAmJiBtYXliZVVuZXNjYXBlUXVvdGUoKSkge1xuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB0eXBlID0gZ2V0UGF0aENoYXJUeXBlKGMpO1xuICAgIHR5cGVNYXAgPSBwYXRoU3RhdGVNYWNoaW5lW21vZGVdO1xuICAgIHRyYW5zaXRpb24gPSB0eXBlTWFwW3R5cGVdIHx8IHR5cGVNYXBbJ2Vsc2UnXSB8fCBFUlJPUjtcblxuICAgIGlmICh0cmFuc2l0aW9uID09PSBFUlJPUikge1xuICAgICAgcmV0dXJuIC8vIHBhcnNlIGVycm9yXG4gICAgfVxuXG4gICAgbW9kZSA9IHRyYW5zaXRpb25bMF07XG4gICAgYWN0aW9uID0gYWN0aW9uc1t0cmFuc2l0aW9uWzFdXTtcbiAgICBpZiAoYWN0aW9uKSB7XG4gICAgICBuZXdDaGFyID0gdHJhbnNpdGlvblsyXTtcbiAgICAgIG5ld0NoYXIgPSBuZXdDaGFyID09PSB1bmRlZmluZWRcbiAgICAgICAgPyBjXG4gICAgICAgIDogbmV3Q2hhcjtcbiAgICAgIGlmIChhY3Rpb24oKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKG1vZGUgPT09IEFGVEVSX1BBVEgpIHtcbiAgICAgIHJldHVybiBrZXlzXG4gICAgfVxuICB9XG59XG5cblxuXG5cblxuZnVuY3Rpb24gZW1wdHkgKHRhcmdldCkge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICBpZiAoQXJyYXkuaXNBcnJheSh0YXJnZXQpKSB7XG4gICAgcmV0dXJuIHRhcmdldC5sZW5ndGggPT09IDBcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuXG52YXIgSTE4blBhdGggPSBmdW5jdGlvbiBJMThuUGF0aCAoKSB7XG4gIHRoaXMuX2NhY2hlID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbn07XG5cbi8qKlxuICogRXh0ZXJuYWwgcGFyc2UgdGhhdCBjaGVjayBmb3IgYSBjYWNoZSBoaXQgZmlyc3RcbiAqL1xuSTE4blBhdGgucHJvdG90eXBlLnBhcnNlUGF0aCA9IGZ1bmN0aW9uIHBhcnNlUGF0aCAocGF0aCkge1xuICB2YXIgaGl0ID0gdGhpcy5fY2FjaGVbcGF0aF07XG4gIGlmICghaGl0KSB7XG4gICAgaGl0ID0gcGFyc2UkMShwYXRoKTtcbiAgICBpZiAoaGl0KSB7XG4gICAgICB0aGlzLl9jYWNoZVtwYXRoXSA9IGhpdDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGhpdCB8fCBbXVxufTtcblxuLyoqXG4gKiBHZXQgcGF0aCB2YWx1ZSBmcm9tIHBhdGggc3RyaW5nXG4gKi9cbkkxOG5QYXRoLnByb3RvdHlwZS5nZXRQYXRoVmFsdWUgPSBmdW5jdGlvbiBnZXRQYXRoVmFsdWUgKG9iaiwgcGF0aCkge1xuICBpZiAoIWlzT2JqZWN0KG9iaikpIHsgcmV0dXJuIG51bGwgfVxuXG4gIHZhciBwYXRocyA9IHRoaXMucGFyc2VQYXRoKHBhdGgpO1xuICBpZiAoZW1wdHkocGF0aHMpKSB7XG4gICAgcmV0dXJuIG51bGxcbiAgfSBlbHNlIHtcbiAgICB2YXIgbGVuZ3RoID0gcGF0aHMubGVuZ3RoO1xuICAgIHZhciByZXQgPSBudWxsO1xuICAgIHZhciBsYXN0ID0gb2JqO1xuICAgIHZhciBpID0gMDtcbiAgICB3aGlsZSAoaSA8IGxlbmd0aCkge1xuICAgICAgdmFyIHZhbHVlID0gbGFzdFtwYXRoc1tpXV07XG4gICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBsYXN0ID0gbnVsbDtcbiAgICAgICAgYnJlYWtcbiAgICAgIH1cbiAgICAgIGxhc3QgPSB2YWx1ZTtcbiAgICAgIGkrKztcbiAgICB9XG5cbiAgICByZXQgPSBsYXN0O1xuICAgIHJldHVybiByZXRcbiAgfVxufTtcblxuLyogICovXG5cbnZhciBWdWVJMThuID0gZnVuY3Rpb24gVnVlSTE4biAob3B0aW9ucykge1xuICB2YXIgdGhpcyQxID0gdGhpcztcbiAgaWYgKCBvcHRpb25zID09PSB2b2lkIDAgKSBvcHRpb25zID0ge307XG5cbiAgdmFyIGxvY2FsZSA9IG9wdGlvbnMubG9jYWxlIHx8ICdlbi1VUyc7XG4gIHZhciBmYWxsYmFja0xvY2FsZSA9IG9wdGlvbnMuZmFsbGJhY2tMb2NhbGUgfHwgJ2VuLVVTJztcbiAgdmFyIG1lc3NhZ2VzID0gb3B0aW9ucy5tZXNzYWdlcyB8fCB7fTtcbiAgdmFyIGRhdGVUaW1lRm9ybWF0cyA9IG9wdGlvbnMuZGF0ZVRpbWVGb3JtYXRzIHx8IHt9O1xuICB2YXIgbnVtYmVyRm9ybWF0cyA9IG9wdGlvbnMubnVtYmVyRm9ybWF0cyB8fCB7fTtcblxuICB0aGlzLl92bSA9IG51bGw7XG4gIHRoaXMuX2Zvcm1hdHRlciA9IG9wdGlvbnMuZm9ybWF0dGVyIHx8IG5ldyBCYXNlRm9ybWF0dGVyKCk7XG4gIHRoaXMuX21pc3NpbmcgPSBvcHRpb25zLm1pc3NpbmcgfHwgbnVsbDtcbiAgdGhpcy5fcm9vdCA9IG9wdGlvbnMucm9vdCB8fCBudWxsO1xuICB0aGlzLl9zeW5jID0gb3B0aW9ucy5zeW5jID09PSB1bmRlZmluZWQgPyB0cnVlIDogISFvcHRpb25zLnN5bmM7XG4gIHRoaXMuX2ZhbGxiYWNrUm9vdCA9IG9wdGlvbnMuZmFsbGJhY2tSb290ID09PSB1bmRlZmluZWRcbiAgICA/IHRydWVcbiAgICA6ICEhb3B0aW9ucy5mYWxsYmFja1Jvb3Q7XG4gIHRoaXMuX3NpbGVudFRyYW5zbGF0aW9uV2FybiA9IG9wdGlvbnMuc2lsZW50VHJhbnNsYXRpb25XYXJuID09PSB1bmRlZmluZWRcbiAgICA/IGZhbHNlXG4gICAgOiAhIW9wdGlvbnMuc2lsZW50VHJhbnNsYXRpb25XYXJuO1xuICB0aGlzLl9kYXRlVGltZUZvcm1hdHRlcnMgPSB7fTtcbiAgdGhpcy5fbnVtYmVyRm9ybWF0dGVycyA9IHt9O1xuICB0aGlzLl9wYXRoID0gbmV3IEkxOG5QYXRoKCk7XG4gIHRoaXMuX2RhdGFMaXN0ZW5lcnMgPSBbXTtcblxuICB0aGlzLl9leGlzdCA9IGZ1bmN0aW9uIChtZXNzYWdlLCBrZXkpIHtcbiAgICBpZiAoIW1lc3NhZ2UgfHwgIWtleSkgeyByZXR1cm4gZmFsc2UgfVxuICAgIHJldHVybiAhaXNOdWxsKHRoaXMkMS5fcGF0aC5nZXRQYXRoVmFsdWUobWVzc2FnZSwga2V5KSlcbiAgfTtcblxuICB0aGlzLl9pbml0Vk0oe1xuICAgIGxvY2FsZTogbG9jYWxlLFxuICAgIGZhbGxiYWNrTG9jYWxlOiBmYWxsYmFja0xvY2FsZSxcbiAgICBtZXNzYWdlczogbWVzc2FnZXMsXG4gICAgZGF0ZVRpbWVGb3JtYXRzOiBkYXRlVGltZUZvcm1hdHMsXG4gICAgbnVtYmVyRm9ybWF0czogbnVtYmVyRm9ybWF0c1xuICB9KTtcbn07XG5cbnZhciBwcm90b3R5cGVBY2Nlc3NvcnMgPSB7IHZtOiB7fSxtZXNzYWdlczoge30sZGF0ZVRpbWVGb3JtYXRzOiB7fSxudW1iZXJGb3JtYXRzOiB7fSxsb2NhbGU6IHt9LGZhbGxiYWNrTG9jYWxlOiB7fSxtaXNzaW5nOiB7fSxmb3JtYXR0ZXI6IHt9LHNpbGVudFRyYW5zbGF0aW9uV2Fybjoge30gfTtcblxuVnVlSTE4bi5wcm90b3R5cGUuX2luaXRWTSA9IGZ1bmN0aW9uIF9pbml0Vk0gKGRhdGEpIHtcbiAgdmFyIHNpbGVudCA9IFZ1ZS5jb25maWcuc2lsZW50O1xuICBWdWUuY29uZmlnLnNpbGVudCA9IHRydWU7XG4gIHRoaXMuX3ZtID0gbmV3IFZ1ZSh7IGRhdGE6IGRhdGEgfSk7XG4gIFZ1ZS5jb25maWcuc2lsZW50ID0gc2lsZW50O1xufTtcblxuVnVlSTE4bi5wcm90b3R5cGUuc3Vic2NyaWJlRGF0YUNoYW5naW5nID0gZnVuY3Rpb24gc3Vic2NyaWJlRGF0YUNoYW5naW5nICh2bSkge1xuICB0aGlzLl9kYXRhTGlzdGVuZXJzLnB1c2godm0pO1xufTtcblxuVnVlSTE4bi5wcm90b3R5cGUudW5zdWJzY3JpYmVEYXRhQ2hhbmdpbmcgPSBmdW5jdGlvbiB1bnN1YnNjcmliZURhdGFDaGFuZ2luZyAodm0pIHtcbiAgcmVtb3ZlKHRoaXMuX2RhdGFMaXN0ZW5lcnMsIHZtKTtcbn07XG5cblZ1ZUkxOG4ucHJvdG90eXBlLndhdGNoSTE4bkRhdGEgPSBmdW5jdGlvbiB3YXRjaEkxOG5EYXRhICgpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICByZXR1cm4gdGhpcy5fdm0uJHdhdGNoKCckZGF0YScsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgaSA9IHNlbGYuX2RhdGFMaXN0ZW5lcnMubGVuZ3RoO1xuICAgIHdoaWxlIChpLS0pIHtcbiAgICAgIFZ1ZS5uZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHNlbGYuX2RhdGFMaXN0ZW5lcnNbaV0gJiYgc2VsZi5fZGF0YUxpc3RlbmVyc1tpXS4kZm9yY2VVcGRhdGUoKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwgeyBkZWVwOiB0cnVlIH0pXG59O1xuXG5WdWVJMThuLnByb3RvdHlwZS53YXRjaExvY2FsZSA9IGZ1bmN0aW9uIHdhdGNoTG9jYWxlICgpIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmICghdGhpcy5fc3luYyB8fCAhdGhpcy5fcm9vdCkgeyByZXR1cm4gbnVsbCB9XG4gIHZhciB0YXJnZXQgPSB0aGlzLl92bTtcbiAgcmV0dXJuIHRoaXMuX3Jvb3Qudm0uJHdhdGNoKCdsb2NhbGUnLCBmdW5jdGlvbiAodmFsKSB7XG4gICAgdGFyZ2V0LiRzZXQodGFyZ2V0LCAnbG9jYWxlJywgdmFsKTtcbiAgICB0YXJnZXQuJGZvcmNlVXBkYXRlKCk7XG4gIH0sIHsgaW1tZWRpYXRlOiB0cnVlIH0pXG59O1xuXG5wcm90b3R5cGVBY2Nlc3NvcnMudm0uZ2V0ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5fdm0gfTtcblxucHJvdG90eXBlQWNjZXNzb3JzLm1lc3NhZ2VzLmdldCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGxvb3NlQ2xvbmUodGhpcy5fZ2V0TWVzc2FnZXMoKSkgfTtcbnByb3RvdHlwZUFjY2Vzc29ycy5kYXRlVGltZUZvcm1hdHMuZ2V0ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gbG9vc2VDbG9uZSh0aGlzLl9nZXREYXRlVGltZUZvcm1hdHMoKSkgfTtcbnByb3RvdHlwZUFjY2Vzc29ycy5udW1iZXJGb3JtYXRzLmdldCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGxvb3NlQ2xvbmUodGhpcy5fZ2V0TnVtYmVyRm9ybWF0cygpKSB9O1xuXG5wcm90b3R5cGVBY2Nlc3NvcnMubG9jYWxlLmdldCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuX3ZtLmxvY2FsZSB9O1xucHJvdG90eXBlQWNjZXNzb3JzLmxvY2FsZS5zZXQgPSBmdW5jdGlvbiAobG9jYWxlKSB7XG4gIHRoaXMuX3ZtLiRzZXQodGhpcy5fdm0sICdsb2NhbGUnLCBsb2NhbGUpO1xufTtcblxucHJvdG90eXBlQWNjZXNzb3JzLmZhbGxiYWNrTG9jYWxlLmdldCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuX3ZtLmZhbGxiYWNrTG9jYWxlIH07XG5wcm90b3R5cGVBY2Nlc3NvcnMuZmFsbGJhY2tMb2NhbGUuc2V0ID0gZnVuY3Rpb24gKGxvY2FsZSkge1xuICB0aGlzLl92bS4kc2V0KHRoaXMuX3ZtLCAnZmFsbGJhY2tMb2NhbGUnLCBsb2NhbGUpO1xufTtcblxucHJvdG90eXBlQWNjZXNzb3JzLm1pc3NpbmcuZ2V0ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5fbWlzc2luZyB9O1xucHJvdG90eXBlQWNjZXNzb3JzLm1pc3Npbmcuc2V0ID0gZnVuY3Rpb24gKGhhbmRsZXIpIHsgdGhpcy5fbWlzc2luZyA9IGhhbmRsZXI7IH07XG5cbnByb3RvdHlwZUFjY2Vzc29ycy5mb3JtYXR0ZXIuZ2V0ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5fZm9ybWF0dGVyIH07XG5wcm90b3R5cGVBY2Nlc3NvcnMuZm9ybWF0dGVyLnNldCA9IGZ1bmN0aW9uIChmb3JtYXR0ZXIpIHsgdGhpcy5fZm9ybWF0dGVyID0gZm9ybWF0dGVyOyB9O1xuXG5wcm90b3R5cGVBY2Nlc3NvcnMuc2lsZW50VHJhbnNsYXRpb25XYXJuLmdldCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuX3NpbGVudFRyYW5zbGF0aW9uV2FybiB9O1xucHJvdG90eXBlQWNjZXNzb3JzLnNpbGVudFRyYW5zbGF0aW9uV2Fybi5zZXQgPSBmdW5jdGlvbiAoc2lsZW50KSB7IHRoaXMuX3NpbGVudFRyYW5zbGF0aW9uV2FybiA9IHNpbGVudDsgfTtcblxuVnVlSTE4bi5wcm90b3R5cGUuX2dldE1lc3NhZ2VzID0gZnVuY3Rpb24gX2dldE1lc3NhZ2VzICgpIHsgcmV0dXJuIHRoaXMuX3ZtLm1lc3NhZ2VzIH07XG5WdWVJMThuLnByb3RvdHlwZS5fZ2V0RGF0ZVRpbWVGb3JtYXRzID0gZnVuY3Rpb24gX2dldERhdGVUaW1lRm9ybWF0cyAoKSB7IHJldHVybiB0aGlzLl92bS5kYXRlVGltZUZvcm1hdHMgfTtcblZ1ZUkxOG4ucHJvdG90eXBlLl9nZXROdW1iZXJGb3JtYXRzID0gZnVuY3Rpb24gX2dldE51bWJlckZvcm1hdHMgKCkgeyByZXR1cm4gdGhpcy5fdm0ubnVtYmVyRm9ybWF0cyB9O1xuXG5WdWVJMThuLnByb3RvdHlwZS5fd2FybkRlZmF1bHQgPSBmdW5jdGlvbiBfd2FybkRlZmF1bHQgKGxvY2FsZSwga2V5LCByZXN1bHQsIHZtKSB7XG4gIGlmICghaXNOdWxsKHJlc3VsdCkpIHsgcmV0dXJuIHJlc3VsdCB9XG4gIGlmICh0aGlzLm1pc3NpbmcpIHtcbiAgICB0aGlzLm1pc3NpbmcuYXBwbHkobnVsbCwgW2xvY2FsZSwga2V5LCB2bV0pO1xuICB9IGVsc2Uge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICF0aGlzLl9zaWxlbnRUcmFuc2xhdGlvbldhcm4pIHtcbiAgICAgIHdhcm4oXG4gICAgICAgIFwiQ2Fubm90IHRyYW5zbGF0ZSB0aGUgdmFsdWUgb2Yga2V5cGF0aCAnXCIgKyBrZXkgKyBcIicuIFwiICtcbiAgICAgICAgJ1VzZSB0aGUgdmFsdWUgb2Yga2V5cGF0aCBhcyBkZWZhdWx0LidcbiAgICAgICk7XG4gICAgfVxuICB9XG4gIHJldHVybiBrZXlcbn07XG5cblZ1ZUkxOG4ucHJvdG90eXBlLl9pc0ZhbGxiYWNrUm9vdCA9IGZ1bmN0aW9uIF9pc0ZhbGxiYWNrUm9vdCAodmFsKSB7XG4gIHJldHVybiAhdmFsICYmICFpc051bGwodGhpcy5fcm9vdCkgJiYgdGhpcy5fZmFsbGJhY2tSb290XG59O1xuXG5WdWVJMThuLnByb3RvdHlwZS5faW50ZXJwb2xhdGUgPSBmdW5jdGlvbiBfaW50ZXJwb2xhdGUgKFxuICBsb2NhbGUsXG4gIG1lc3NhZ2UsXG4gIGtleSxcbiAgaG9zdCxcbiAgaW50ZXJwb2xhdGVNb2RlLFxuICB2YWx1ZXNcbikge1xuICBpZiAoIW1lc3NhZ2UpIHsgcmV0dXJuIG51bGwgfVxuXG4gIHZhciBwYXRoUmV0ID0gdGhpcy5fcGF0aC5nZXRQYXRoVmFsdWUobWVzc2FnZSwga2V5KTtcbiAgaWYgKEFycmF5LmlzQXJyYXkocGF0aFJldCkpIHsgcmV0dXJuIHBhdGhSZXQgfVxuXG4gIHZhciByZXQ7XG4gIGlmIChpc051bGwocGF0aFJldCkpIHtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgIGlmIChpc1BsYWluT2JqZWN0KG1lc3NhZ2UpKSB7XG4gICAgICByZXQgPSBtZXNzYWdlW2tleV07XG4gICAgICBpZiAodHlwZW9mIHJldCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIXRoaXMuX3NpbGVudFRyYW5zbGF0aW9uV2Fybikge1xuICAgICAgICAgIHdhcm4oKFwiVmFsdWUgb2Yga2V5ICdcIiArIGtleSArIFwiJyBpcyBub3QgYSBzdHJpbmchXCIpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbFxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgIGlmICh0eXBlb2YgcGF0aFJldCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJldCA9IHBhdGhSZXQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICF0aGlzLl9zaWxlbnRUcmFuc2xhdGlvbldhcm4pIHtcbiAgICAgICAgd2FybigoXCJWYWx1ZSBvZiBrZXkgJ1wiICsga2V5ICsgXCInIGlzIG5vdCBhIHN0cmluZyFcIikpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG51bGxcbiAgICB9XG4gIH1cblxuICAvLyBDaGVjayBmb3IgdGhlIGV4aXN0YW5jZSBvZiBsaW5rcyB3aXRoaW4gdGhlIHRyYW5zbGF0ZWQgc3RyaW5nXG4gIGlmIChyZXQuaW5kZXhPZignQDonKSA+PSAwKSB7XG4gICAgcmV0ID0gdGhpcy5fbGluayhsb2NhbGUsIG1lc3NhZ2UsIHJldCwgaG9zdCwgaW50ZXJwb2xhdGVNb2RlLCB2YWx1ZXMpO1xuICB9XG5cbiAgcmV0dXJuICF2YWx1ZXMgPyByZXQgOiB0aGlzLl9yZW5kZXIocmV0LCBpbnRlcnBvbGF0ZU1vZGUsIHZhbHVlcylcbn07XG5cblZ1ZUkxOG4ucHJvdG90eXBlLl9saW5rID0gZnVuY3Rpb24gX2xpbmsgKFxuICBsb2NhbGUsXG4gIG1lc3NhZ2UsXG4gIHN0cixcbiAgaG9zdCxcbiAgaW50ZXJwb2xhdGVNb2RlLFxuICB2YWx1ZXNcbikge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gIHZhciByZXQgPSBzdHI7XG5cbiAgLy8gTWF0Y2ggYWxsIHRoZSBsaW5rcyB3aXRoaW4gdGhlIGxvY2FsXG4gIC8vIFdlIGFyZSBnb2luZyB0byByZXBsYWNlIGVhY2ggb2ZcbiAgLy8gdGhlbSB3aXRoIGl0cyB0cmFuc2xhdGlvblxuICB2YXIgbWF0Y2hlcyA9IHJldC5tYXRjaCgvKEA6W1xcd1xcLV98Ll0rKS9nKTtcbiAgZm9yICh2YXIgaWR4IGluIG1hdGNoZXMpIHtcbiAgICAvLyBpZSBjb21wYXRpYmxlOiBmaWx0ZXIgY3VzdG9tIGFycmF5XG4gICAgLy8gcHJvdG90eXBlIG1ldGhvZFxuICAgIGlmICghbWF0Y2hlcy5oYXNPd25Qcm9wZXJ0eShpZHgpKSB7XG4gICAgICBjb250aW51ZVxuICAgIH1cbiAgICB2YXIgbGluayA9IG1hdGNoZXNbaWR4XTtcbiAgICAvLyBSZW1vdmUgdGhlIGxlYWRpbmcgQDpcbiAgICB2YXIgbGlua1BsYWNlaG9sZGVyID0gbGluay5zdWJzdHIoMik7XG4gICAgLy8gVHJhbnNsYXRlIHRoZSBsaW5rXG4gICAgdmFyIHRyYW5zbGF0ZWQgPSB0aGlzJDEuX2ludGVycG9sYXRlKFxuICAgICAgbG9jYWxlLCBtZXNzYWdlLCBsaW5rUGxhY2Vob2xkZXIsIGhvc3QsXG4gICAgICBpbnRlcnBvbGF0ZU1vZGUgPT09ICdyYXcnID8gJ3N0cmluZycgOiBpbnRlcnBvbGF0ZU1vZGUsXG4gICAgICBpbnRlcnBvbGF0ZU1vZGUgPT09ICdyYXcnID8gdW5kZWZpbmVkIDogdmFsdWVzXG4gICAgKTtcblxuICAgIGlmICh0aGlzJDEuX2lzRmFsbGJhY2tSb290KHRyYW5zbGF0ZWQpKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhdGhpcyQxLl9zaWxlbnRUcmFuc2xhdGlvbldhcm4pIHtcbiAgICAgICAgd2FybigoXCJGYWxsIGJhY2sgdG8gdHJhbnNsYXRlIHRoZSBsaW5rIHBsYWNlaG9sZGVyICdcIiArIGxpbmtQbGFjZWhvbGRlciArIFwiJyB3aXRoIHJvb3QgbG9jYWxlLlwiKSk7XG4gICAgICB9XG4gICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICAgIGlmICghdGhpcyQxLl9yb290KSB7IHRocm93IEVycm9yKCd1bmV4cGVjdGVkIGVycm9yJykgfVxuICAgICAgdmFyIHJvb3QgPSB0aGlzJDEuX3Jvb3Q7XG4gICAgICB0cmFuc2xhdGVkID0gcm9vdC5fdHJhbnNsYXRlKFxuICAgICAgICByb290Ll9nZXRNZXNzYWdlcygpLCByb290LmxvY2FsZSwgcm9vdC5mYWxsYmFja0xvY2FsZSxcbiAgICAgICAgbGlua1BsYWNlaG9sZGVyLCBob3N0LCBpbnRlcnBvbGF0ZU1vZGUsIHZhbHVlc1xuICAgICAgKTtcbiAgICB9XG4gICAgdHJhbnNsYXRlZCA9IHRoaXMkMS5fd2FybkRlZmF1bHQobG9jYWxlLCBsaW5rUGxhY2Vob2xkZXIsIHRyYW5zbGF0ZWQsIGhvc3QpO1xuXG4gICAgLy8gUmVwbGFjZSB0aGUgbGluayB3aXRoIHRoZSB0cmFuc2xhdGVkXG4gICAgcmV0ID0gIXRyYW5zbGF0ZWQgPyByZXQgOiByZXQucmVwbGFjZShsaW5rLCB0cmFuc2xhdGVkKTtcbiAgfVxuXG4gIHJldHVybiByZXRcbn07XG5cblZ1ZUkxOG4ucHJvdG90eXBlLl9yZW5kZXIgPSBmdW5jdGlvbiBfcmVuZGVyIChtZXNzYWdlLCBpbnRlcnBvbGF0ZU1vZGUsIHZhbHVlcykge1xuICB2YXIgcmV0ID0gdGhpcy5fZm9ybWF0dGVyLmludGVycG9sYXRlKG1lc3NhZ2UsIHZhbHVlcyk7XG4gIC8vIGlmIGludGVycG9sYXRlTW9kZSBpcyAqKm5vdCoqICdzdHJpbmcnICgncm93JyksXG4gIC8vIHJldHVybiB0aGUgY29tcGlsZWQgZGF0YSAoZS5nLiBbJ2ZvbycsIFZOb2RlLCAnYmFyJ10pIHdpdGggZm9ybWF0dGVyXG4gIHJldHVybiBpbnRlcnBvbGF0ZU1vZGUgPT09ICdzdHJpbmcnID8gcmV0LmpvaW4oJycpIDogcmV0XG59O1xuXG5WdWVJMThuLnByb3RvdHlwZS5fdHJhbnNsYXRlID0gZnVuY3Rpb24gX3RyYW5zbGF0ZSAoXG4gIG1lc3NhZ2VzLFxuICBsb2NhbGUsXG4gIGZhbGxiYWNrLFxuICBrZXksXG4gIGhvc3QsXG4gIGludGVycG9sYXRlTW9kZSxcbiAgYXJnc1xuKSB7XG4gIHZhciByZXMgPVxuICAgIHRoaXMuX2ludGVycG9sYXRlKGxvY2FsZSwgbWVzc2FnZXNbbG9jYWxlXSwga2V5LCBob3N0LCBpbnRlcnBvbGF0ZU1vZGUsIGFyZ3MpO1xuICBpZiAoIWlzTnVsbChyZXMpKSB7IHJldHVybiByZXMgfVxuXG4gIHJlcyA9IHRoaXMuX2ludGVycG9sYXRlKGZhbGxiYWNrLCBtZXNzYWdlc1tmYWxsYmFja10sIGtleSwgaG9zdCwgaW50ZXJwb2xhdGVNb2RlLCBhcmdzKTtcbiAgaWYgKCFpc051bGwocmVzKSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICF0aGlzLl9zaWxlbnRUcmFuc2xhdGlvbldhcm4pIHtcbiAgICAgIHdhcm4oKFwiRmFsbCBiYWNrIHRvIHRyYW5zbGF0ZSB0aGUga2V5cGF0aCAnXCIgKyBrZXkgKyBcIicgd2l0aCAnXCIgKyBmYWxsYmFjayArIFwiJyBsb2NhbGUuXCIpKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBudWxsXG4gIH1cbn07XG5cblZ1ZUkxOG4ucHJvdG90eXBlLl90ID0gZnVuY3Rpb24gX3QgKGtleSwgX2xvY2FsZSwgbWVzc2FnZXMsIGhvc3QpIHtcbiAgICB2YXIgdmFsdWVzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGggLSA0O1xuICAgIHdoaWxlICggbGVuLS0gPiAwICkgdmFsdWVzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuICsgNCBdO1xuXG4gIGlmICgha2V5KSB7IHJldHVybiAnJyB9XG5cbiAgdmFyIHBhcnNlZEFyZ3MgPSBwYXJzZUFyZ3MuYXBwbHkodm9pZCAwLCB2YWx1ZXMpO1xuICAgIHZhciBsb2NhbGUgPSBwYXJzZWRBcmdzLmxvY2FsZSB8fCBfbG9jYWxlO1xuXG4gIHZhciByZXQgPSB0aGlzLl90cmFuc2xhdGUoXG4gICAgbWVzc2FnZXMsIGxvY2FsZSwgdGhpcy5mYWxsYmFja0xvY2FsZSwga2V5LFxuICAgIGhvc3QsICdzdHJpbmcnLCBwYXJzZWRBcmdzLnBhcmFtc1xuICApO1xuICBpZiAodGhpcy5faXNGYWxsYmFja1Jvb3QocmV0KSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICF0aGlzLl9zaWxlbnRUcmFuc2xhdGlvbldhcm4pIHtcbiAgICAgIHdhcm4oKFwiRmFsbCBiYWNrIHRvIHRyYW5zbGF0ZSB0aGUga2V5cGF0aCAnXCIgKyBrZXkgKyBcIicgd2l0aCByb290IGxvY2FsZS5cIikpO1xuICAgIH1cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICBpZiAoIXRoaXMuX3Jvb3QpIHsgdGhyb3cgRXJyb3IoJ3VuZXhwZWN0ZWQgZXJyb3InKSB9XG4gICAgcmV0dXJuIChyZWYgPSB0aGlzLl9yb290KS50LmFwcGx5KHJlZiwgWyBrZXkgXS5jb25jYXQoIHZhbHVlcyApKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiB0aGlzLl93YXJuRGVmYXVsdChsb2NhbGUsIGtleSwgcmV0LCBob3N0KVxuICB9XG4gICAgdmFyIHJlZjtcbn07XG5cblZ1ZUkxOG4ucHJvdG90eXBlLnQgPSBmdW5jdGlvbiB0IChrZXkpIHtcbiAgICB2YXIgdmFsdWVzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGggLSAxO1xuICAgIHdoaWxlICggbGVuLS0gPiAwICkgdmFsdWVzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuICsgMSBdO1xuXG4gIHJldHVybiAocmVmID0gdGhpcykuX3QuYXBwbHkocmVmLCBbIGtleSwgdGhpcy5sb2NhbGUsIHRoaXMuX2dldE1lc3NhZ2VzKCksIG51bGwgXS5jb25jYXQoIHZhbHVlcyApKVxuICAgIHZhciByZWY7XG59O1xuXG5WdWVJMThuLnByb3RvdHlwZS5faSA9IGZ1bmN0aW9uIF9pIChrZXksIGxvY2FsZSwgbWVzc2FnZXMsIGhvc3QsIHZhbHVlcykge1xuICB2YXIgcmV0ID1cbiAgICB0aGlzLl90cmFuc2xhdGUobWVzc2FnZXMsIGxvY2FsZSwgdGhpcy5mYWxsYmFja0xvY2FsZSwga2V5LCBob3N0LCAncmF3JywgdmFsdWVzKTtcbiAgaWYgKHRoaXMuX2lzRmFsbGJhY2tSb290KHJldCkpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhdGhpcy5fc2lsZW50VHJhbnNsYXRpb25XYXJuKSB7XG4gICAgICB3YXJuKChcIkZhbGwgYmFjayB0byBpbnRlcnBvbGF0ZSB0aGUga2V5cGF0aCAnXCIgKyBrZXkgKyBcIicgd2l0aCByb290IGxvY2FsZS5cIikpO1xuICAgIH1cbiAgICBpZiAoIXRoaXMuX3Jvb3QpIHsgdGhyb3cgRXJyb3IoJ3VuZXhwZWN0ZWQgZXJyb3InKSB9XG4gICAgcmV0dXJuIHRoaXMuX3Jvb3QuaShrZXksIGxvY2FsZSwgdmFsdWVzKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiB0aGlzLl93YXJuRGVmYXVsdChsb2NhbGUsIGtleSwgcmV0LCBob3N0KVxuICB9XG59O1xuXG5WdWVJMThuLnByb3RvdHlwZS5pID0gZnVuY3Rpb24gaSAoa2V5LCBsb2NhbGUsIHZhbHVlcykge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKCFrZXkpIHsgcmV0dXJuICcnIH1cblxuICBpZiAodHlwZW9mIGxvY2FsZSAhPT0gJ3N0cmluZycpIHtcbiAgICBsb2NhbGUgPSB0aGlzLmxvY2FsZTtcbiAgfVxuXG4gIHJldHVybiB0aGlzLl9pKGtleSwgbG9jYWxlLCB0aGlzLl9nZXRNZXNzYWdlcygpLCBudWxsLCB2YWx1ZXMpXG59O1xuXG5WdWVJMThuLnByb3RvdHlwZS5fdGMgPSBmdW5jdGlvbiBfdGMgKFxuICBrZXksXG4gIF9sb2NhbGUsXG4gIG1lc3NhZ2VzLFxuICAgIGhvc3QsXG4gICAgY2hvaWNlXG4pIHtcbiAgICB2YXIgdmFsdWVzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGggLSA1O1xuICAgIHdoaWxlICggbGVuLS0gPiAwICkgdmFsdWVzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuICsgNSBdO1xuXG4gICAgaWYgKCFrZXkpIHsgcmV0dXJuICcnIH1cbiAgaWYgKGNob2ljZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY2hvaWNlID0gMTtcbiAgfVxuICByZXR1cm4gZmV0Y2hDaG9pY2UoKHJlZiA9IHRoaXMpLl90LmFwcGx5KHJlZiwgWyBrZXksIF9sb2NhbGUsIG1lc3NhZ2VzLCBob3N0IF0uY29uY2F0KCB2YWx1ZXMgKSksIGNob2ljZSlcbiAgICB2YXIgcmVmO1xufTtcblxuVnVlSTE4bi5wcm90b3R5cGUudGMgPSBmdW5jdGlvbiB0YyAoa2V5LCBjaG9pY2UpIHtcbiAgICB2YXIgdmFsdWVzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGggLSAyO1xuICAgIHdoaWxlICggbGVuLS0gPiAwICkgdmFsdWVzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuICsgMiBdO1xuXG4gIHJldHVybiAocmVmID0gdGhpcykuX3RjLmFwcGx5KHJlZiwgWyBrZXksIHRoaXMubG9jYWxlLCB0aGlzLl9nZXRNZXNzYWdlcygpLCBudWxsLCBjaG9pY2UgXS5jb25jYXQoIHZhbHVlcyApKVxuICAgIHZhciByZWY7XG59O1xuXG5WdWVJMThuLnByb3RvdHlwZS5fdGUgPSBmdW5jdGlvbiBfdGUgKGtleSwgbG9jYWxlLCBtZXNzYWdlcykge1xuICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGggLSAzO1xuICAgIHdoaWxlICggbGVuLS0gPiAwICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiArIDMgXTtcblxuICB2YXIgX2xvY2FsZSA9IHBhcnNlQXJncy5hcHBseSh2b2lkIDAsIGFyZ3MpLmxvY2FsZSB8fCBsb2NhbGU7XG4gIHJldHVybiB0aGlzLl9leGlzdChtZXNzYWdlc1tfbG9jYWxlXSwga2V5KVxufTtcblxuVnVlSTE4bi5wcm90b3R5cGUudGUgPSBmdW5jdGlvbiB0ZSAoa2V5LCBsb2NhbGUpIHtcbiAgcmV0dXJuIHRoaXMuX3RlKGtleSwgdGhpcy5sb2NhbGUsIHRoaXMuX2dldE1lc3NhZ2VzKCksIGxvY2FsZSlcbn07XG5cblZ1ZUkxOG4ucHJvdG90eXBlLmdldExvY2FsZU1lc3NhZ2UgPSBmdW5jdGlvbiBnZXRMb2NhbGVNZXNzYWdlIChsb2NhbGUpIHtcbiAgcmV0dXJuIGxvb3NlQ2xvbmUodGhpcy5fdm0ubWVzc2FnZXNbbG9jYWxlXSB8fCB7fSlcbn07XG5cblZ1ZUkxOG4ucHJvdG90eXBlLnNldExvY2FsZU1lc3NhZ2UgPSBmdW5jdGlvbiBzZXRMb2NhbGVNZXNzYWdlIChsb2NhbGUsIG1lc3NhZ2UpIHtcbiAgdGhpcy5fdm0ubWVzc2FnZXNbbG9jYWxlXSA9IG1lc3NhZ2U7XG59O1xuXG4gIFZ1ZUkxOG4ucHJvdG90eXBlLm1lcmdlTG9jYWxlTWVzc2FnZSA9IGZ1bmN0aW9uIG1lcmdlTG9jYWxlTWVzc2FnZSAobG9jYWxlLCBtZXNzYWdlKSB7XG4gIHRoaXMuX3ZtLm1lc3NhZ2VzW2xvY2FsZV0gPSBWdWUudXRpbC5leHRlbmQodGhpcy5fdm0ubWVzc2FnZXNbbG9jYWxlXSB8fCB7fSwgbWVzc2FnZSk7XG59O1xuXG5WdWVJMThuLnByb3RvdHlwZS5nZXREYXRlVGltZUZvcm1hdCA9IGZ1bmN0aW9uIGdldERhdGVUaW1lRm9ybWF0IChsb2NhbGUpIHtcbiAgcmV0dXJuIGxvb3NlQ2xvbmUodGhpcy5fdm0uZGF0ZVRpbWVGb3JtYXRzW2xvY2FsZV0gfHwge30pXG59O1xuXG5WdWVJMThuLnByb3RvdHlwZS5zZXREYXRlVGltZUZvcm1hdCA9IGZ1bmN0aW9uIHNldERhdGVUaW1lRm9ybWF0IChsb2NhbGUsIGZvcm1hdCkge1xuICB0aGlzLl92bS5kYXRlVGltZUZvcm1hdHNbbG9jYWxlXSA9IGZvcm1hdDtcbn07XG5cblZ1ZUkxOG4ucHJvdG90eXBlLm1lcmdlRGF0ZVRpbWVGb3JtYXQgPSBmdW5jdGlvbiBtZXJnZURhdGVUaW1lRm9ybWF0IChsb2NhbGUsIGZvcm1hdCkge1xuICB0aGlzLl92bS5kYXRlVGltZUZvcm1hdHNbbG9jYWxlXSA9IFZ1ZS51dGlsLmV4dGVuZCh0aGlzLl92bS5kYXRlVGltZUZvcm1hdHNbbG9jYWxlXSB8fCB7fSwgZm9ybWF0KTtcbn07XG5cblZ1ZUkxOG4ucHJvdG90eXBlLl9sb2NhbGl6ZURhdGVUaW1lID0gZnVuY3Rpb24gX2xvY2FsaXplRGF0ZVRpbWUgKFxuICB2YWx1ZSxcbiAgbG9jYWxlLFxuICBmYWxsYmFjayxcbiAgZGF0ZVRpbWVGb3JtYXRzLFxuICBrZXlcbikge1xuICB2YXIgX2xvY2FsZSA9IGxvY2FsZTtcbiAgdmFyIGZvcm1hdHMgPSBkYXRlVGltZUZvcm1hdHNbX2xvY2FsZV07XG5cbiAgLy8gZmFsbGJhY2sgbG9jYWxlXG4gIGlmIChpc051bGwoZm9ybWF0cykgfHwgaXNOdWxsKGZvcm1hdHNba2V5XSkpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgd2FybigoXCJGYWxsIGJhY2sgdG8gJ1wiICsgZmFsbGJhY2sgKyBcIicgZGF0ZXRpbWUgZm9ybWF0cyBmcm9tICdcIiArIGxvY2FsZSArIFwiIGRhdGV0aW1lIGZvcm1hdHMuXCIpKTtcbiAgICB9XG4gICAgX2xvY2FsZSA9IGZhbGxiYWNrO1xuICAgIGZvcm1hdHMgPSBkYXRlVGltZUZvcm1hdHNbX2xvY2FsZV07XG4gIH1cblxuICBpZiAoaXNOdWxsKGZvcm1hdHMpIHx8IGlzTnVsbChmb3JtYXRzW2tleV0pKSB7XG4gICAgcmV0dXJuIG51bGxcbiAgfSBlbHNlIHtcbiAgICB2YXIgZm9ybWF0ID0gZm9ybWF0c1trZXldO1xuICAgIHZhciBpZCA9IF9sb2NhbGUgKyBcIl9fXCIgKyBrZXk7XG4gICAgdmFyIGZvcm1hdHRlciA9IHRoaXMuX2RhdGVUaW1lRm9ybWF0dGVyc1tpZF07XG4gICAgaWYgKCFmb3JtYXR0ZXIpIHtcbiAgICAgIGZvcm1hdHRlciA9IHRoaXMuX2RhdGVUaW1lRm9ybWF0dGVyc1tpZF0gPSBuZXcgSW50bC5EYXRlVGltZUZvcm1hdChfbG9jYWxlLCBmb3JtYXQpO1xuICAgIH1cbiAgICByZXR1cm4gZm9ybWF0dGVyLmZvcm1hdCh2YWx1ZSlcbiAgfVxufTtcblxuVnVlSTE4bi5wcm90b3R5cGUuX2QgPSBmdW5jdGlvbiBfZCAodmFsdWUsIGxvY2FsZSwga2V5KSB7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhVnVlSTE4bi5hdmFpbGFiaWxpdGllcy5kYXRlVGltZUZvcm1hdCkge1xuICAgIHdhcm4oJ0Nhbm5vdCBmb3JtYXQgYSBEYXRlIHZhbHVlIGR1ZSB0byBub3Qgc3VwcG9ydCBJbnRsLkRhdGVUaW1lRm9ybWF0LicpO1xuICAgIHJldHVybiAnJ1xuICB9XG5cbiAgaWYgKCFrZXkpIHtcbiAgICByZXR1cm4gbmV3IEludGwuRGF0ZVRpbWVGb3JtYXQobG9jYWxlKS5mb3JtYXQodmFsdWUpXG4gIH1cblxuICB2YXIgcmV0ID1cbiAgICB0aGlzLl9sb2NhbGl6ZURhdGVUaW1lKHZhbHVlLCBsb2NhbGUsIHRoaXMuZmFsbGJhY2tMb2NhbGUsIHRoaXMuX2dldERhdGVUaW1lRm9ybWF0cygpLCBrZXkpO1xuICBpZiAodGhpcy5faXNGYWxsYmFja1Jvb3QocmV0KSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB3YXJuKChcIkZhbGwgYmFjayB0byBkYXRldGltZSBsb2NhbGl6YXRpb24gb2Ygcm9vdDoga2V5ICdcIiArIGtleSArIFwiJyAuXCIpKTtcbiAgICB9XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgaWYgKCF0aGlzLl9yb290KSB7IHRocm93IEVycm9yKCd1bmV4cGVjdGVkIGVycm9yJykgfVxuICAgIHJldHVybiB0aGlzLl9yb290LmQodmFsdWUsIGtleSwgbG9jYWxlKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiByZXQgfHwgJydcbiAgfVxufTtcblxuVnVlSTE4bi5wcm90b3R5cGUuZCA9IGZ1bmN0aW9uIGQgKHZhbHVlKSB7XG4gICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aCAtIDE7XG4gICAgd2hpbGUgKCBsZW4tLSA+IDAgKSBhcmdzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuICsgMSBdO1xuXG4gIHZhciBsb2NhbGUgPSB0aGlzLmxvY2FsZTtcbiAgdmFyIGtleSA9IG51bGw7XG5cbiAgaWYgKGFyZ3MubGVuZ3RoID09PSAxKSB7XG4gICAgaWYgKHR5cGVvZiBhcmdzWzBdID09PSAnc3RyaW5nJykge1xuICAgICAga2V5ID0gYXJnc1swXTtcbiAgICB9IGVsc2UgaWYgKGlzT2JqZWN0KGFyZ3NbMF0pKSB7XG4gICAgICBpZiAoYXJnc1swXS5sb2NhbGUpIHtcbiAgICAgICAgbG9jYWxlID0gYXJnc1swXS5sb2NhbGU7XG4gICAgICB9XG4gICAgICBpZiAoYXJnc1swXS5rZXkpIHtcbiAgICAgICAga2V5ID0gYXJnc1swXS5rZXk7XG4gICAgICB9XG4gICAgfVxuICB9IGVsc2UgaWYgKGFyZ3MubGVuZ3RoID09PSAyKSB7XG4gICAgaWYgKHR5cGVvZiBhcmdzWzBdID09PSAnc3RyaW5nJykge1xuICAgICAgICBrZXkgPSBhcmdzWzBdO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBhcmdzWzFdID09PSAnc3RyaW5nJykge1xuICAgICAgbG9jYWxlID0gYXJnc1sxXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcy5fZCh2YWx1ZSwgbG9jYWxlLCBrZXkpXG59O1xuXG5WdWVJMThuLnByb3RvdHlwZS5nZXROdW1iZXJGb3JtYXQgPSBmdW5jdGlvbiBnZXROdW1iZXJGb3JtYXQgKGxvY2FsZSkge1xuICByZXR1cm4gbG9vc2VDbG9uZSh0aGlzLl92bS5udW1iZXJGb3JtYXRzW2xvY2FsZV0gfHwge30pXG59O1xuXG5WdWVJMThuLnByb3RvdHlwZS5zZXROdW1iZXJGb3JtYXQgPSBmdW5jdGlvbiBzZXROdW1iZXJGb3JtYXQgKGxvY2FsZSwgZm9ybWF0KSB7XG4gIHRoaXMuX3ZtLm51bWJlckZvcm1hdHNbbG9jYWxlXSA9IGZvcm1hdDtcbn07XG5cblZ1ZUkxOG4ucHJvdG90eXBlLm1lcmdlTnVtYmVyRm9ybWF0ID0gZnVuY3Rpb24gbWVyZ2VOdW1iZXJGb3JtYXQgKGxvY2FsZSwgZm9ybWF0KSB7XG4gIHRoaXMuX3ZtLm51bWJlckZvcm1hdHNbbG9jYWxlXSA9IFZ1ZS51dGlsLmV4dGVuZCh0aGlzLl92bS5udW1iZXJGb3JtYXRzW2xvY2FsZV0gfHwge30sIGZvcm1hdCk7XG59O1xuXG5WdWVJMThuLnByb3RvdHlwZS5fbG9jYWxpemVOdW1iZXIgPSBmdW5jdGlvbiBfbG9jYWxpemVOdW1iZXIgKFxuICB2YWx1ZSxcbiAgbG9jYWxlLFxuICBmYWxsYmFjayxcbiAgbnVtYmVyRm9ybWF0cyxcbiAga2V5XG4pIHtcbiAgdmFyIF9sb2NhbGUgPSBsb2NhbGU7XG4gIHZhciBmb3JtYXRzID0gbnVtYmVyRm9ybWF0c1tfbG9jYWxlXTtcblxuICAvLyBmYWxsYmFjayBsb2NhbGVcbiAgaWYgKGlzTnVsbChmb3JtYXRzKSB8fCBpc051bGwoZm9ybWF0c1trZXldKSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB3YXJuKChcIkZhbGwgYmFjayB0byAnXCIgKyBmYWxsYmFjayArIFwiJyBudW1iZXIgZm9ybWF0cyBmcm9tICdcIiArIGxvY2FsZSArIFwiIG51bWJlciBmb3JtYXRzLlwiKSk7XG4gICAgfVxuICAgIF9sb2NhbGUgPSBmYWxsYmFjaztcbiAgICBmb3JtYXRzID0gbnVtYmVyRm9ybWF0c1tfbG9jYWxlXTtcbiAgfVxuXG4gIGlmIChpc051bGwoZm9ybWF0cykgfHwgaXNOdWxsKGZvcm1hdHNba2V5XSkpIHtcbiAgICByZXR1cm4gbnVsbFxuICB9IGVsc2Uge1xuICAgIHZhciBmb3JtYXQgPSBmb3JtYXRzW2tleV07XG4gICAgdmFyIGlkID0gX2xvY2FsZSArIFwiX19cIiArIGtleTtcbiAgICB2YXIgZm9ybWF0dGVyID0gdGhpcy5fbnVtYmVyRm9ybWF0dGVyc1tpZF07XG4gICAgaWYgKCFmb3JtYXR0ZXIpIHtcbiAgICAgIGZvcm1hdHRlciA9IHRoaXMuX251bWJlckZvcm1hdHRlcnNbaWRdID0gbmV3IEludGwuTnVtYmVyRm9ybWF0KF9sb2NhbGUsIGZvcm1hdCk7XG4gICAgfVxuICAgIHJldHVybiBmb3JtYXR0ZXIuZm9ybWF0KHZhbHVlKVxuICB9XG59O1xuXG5WdWVJMThuLnByb3RvdHlwZS5fbiA9IGZ1bmN0aW9uIF9uICh2YWx1ZSwgbG9jYWxlLCBrZXkpIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICFWdWVJMThuLmF2YWlsYWJpbGl0aWVzLm51bWJlckZvcm1hdCkge1xuICAgIHdhcm4oJ0Nhbm5vdCBmb3JtYXQgYSBEYXRlIHZhbHVlIGR1ZSB0byBub3Qgc3VwcG9ydCBJbnRsLk51bWJlckZvcm1hdC4nKTtcbiAgICByZXR1cm4gJydcbiAgfVxuXG4gIGlmICgha2V5KSB7XG4gICAgcmV0dXJuIG5ldyBJbnRsLk51bWJlckZvcm1hdChsb2NhbGUpLmZvcm1hdCh2YWx1ZSlcbiAgfVxuXG4gIHZhciByZXQgPVxuICAgIHRoaXMuX2xvY2FsaXplTnVtYmVyKHZhbHVlLCBsb2NhbGUsIHRoaXMuZmFsbGJhY2tMb2NhbGUsIHRoaXMuX2dldE51bWJlckZvcm1hdHMoKSwga2V5KTtcbiAgaWYgKHRoaXMuX2lzRmFsbGJhY2tSb290KHJldCkpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgd2FybigoXCJGYWxsIGJhY2sgdG8gbnVtYmVyIGxvY2FsaXphdGlvbiBvZiByb290OiBrZXkgJ1wiICsga2V5ICsgXCInIC5cIikpO1xuICAgIH1cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICBpZiAoIXRoaXMuX3Jvb3QpIHsgdGhyb3cgRXJyb3IoJ3VuZXhwZWN0ZWQgZXJyb3InKSB9XG4gICAgcmV0dXJuIHRoaXMuX3Jvb3Qubih2YWx1ZSwga2V5LCBsb2NhbGUpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHJldCB8fCAnJ1xuICB9XG59O1xuXG5WdWVJMThuLnByb3RvdHlwZS5uID0gZnVuY3Rpb24gbiAodmFsdWUpIHtcbiAgICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoIC0gMTtcbiAgICB3aGlsZSAoIGxlbi0tID4gMCApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gKyAxIF07XG5cbiAgdmFyIGxvY2FsZSA9IHRoaXMubG9jYWxlO1xuICB2YXIga2V5ID0gbnVsbDtcblxuICBpZiAoYXJncy5sZW5ndGggPT09IDEpIHtcbiAgICBpZiAodHlwZW9mIGFyZ3NbMF0gPT09ICdzdHJpbmcnKSB7XG4gICAgICBrZXkgPSBhcmdzWzBdO1xuICAgIH0gZWxzZSBpZiAoaXNPYmplY3QoYXJnc1swXSkpIHtcbiAgICAgIGlmIChhcmdzWzBdLmxvY2FsZSkge1xuICAgICAgICBsb2NhbGUgPSBhcmdzWzBdLmxvY2FsZTtcbiAgICAgIH1cbiAgICAgIGlmIChhcmdzWzBdLmtleSkge1xuICAgICAgICBrZXkgPSBhcmdzWzBdLmtleTtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSBpZiAoYXJncy5sZW5ndGggPT09IDIpIHtcbiAgICBpZiAodHlwZW9mIGFyZ3NbMF0gPT09ICdzdHJpbmcnKSB7XG4gICAgICBrZXkgPSBhcmdzWzBdO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGFyZ3NbMV0gPT09ICdzdHJpbmcnKSB7XG4gICAgICBsb2NhbGUgPSBhcmdzWzFdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0aGlzLl9uKHZhbHVlLCBsb2NhbGUsIGtleSlcbn07XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKCBWdWVJMThuLnByb3RvdHlwZSwgcHJvdG90eXBlQWNjZXNzb3JzICk7XG5cblZ1ZUkxOG4uYXZhaWxhYmlsaXRpZXMgPSB7XG4gIGRhdGVUaW1lRm9ybWF0OiBjYW5Vc2VEYXRlVGltZUZvcm1hdCxcbiAgbnVtYmVyRm9ybWF0OiBjYW5Vc2VOdW1iZXJGb3JtYXRcbn07XG5WdWVJMThuLmluc3RhbGwgPSBpbnN0YWxsO1xuVnVlSTE4bi52ZXJzaW9uID0gJzcuMi4wJztcblxuLyogaXN0YW5idWwgaWdub3JlIGlmICovXG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LlZ1ZSkge1xuICB3aW5kb3cuVnVlLnVzZShWdWVJMThuKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBWdWVJMThuO1xuIiwiPHRlbXBsYXRlPlxyXG4gICAgPGRpdj5cclxuICAgICAgICA8dGFibGUgY2xhc3M9XCJkZXRhaWxfdGFiXCI+XHJcbiAgICAgICAgICAgIDx0aGVhZD5cclxuXHRcdFx0XHQ8dHI+XHJcblx0XHRcdFx0XHQ8dGQgdi1mb3I9XCJpdGVtIGluIHRoZWFkRGF0YVwiIDprZXk9XCJpdGVtXCI+e3tpdGVtfX08L3RkPlxyXG5cdFx0XHRcdFx0PHRkIHYtaWY9XCJoYXNCdXR0b25cIj48L3RkPlxyXG5cdFx0XHRcdDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICAgIDx0ciB2LWZvcj1cIihpdGVtLHRySW5kZXgpIGluIGN1clBhZ2VEYXRhXCIgOmtleT1cIml0ZW0uY3VycmVuY3lcIiBAY2xpY2s9XCJ0clNlbGVjdGVkKHRySW5kZXgpXCIgOmNsYXNzPSd7XCJzZWxlY3RlZFwiOml0ZW0uaXNTZWxlY3RlZH0nPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCB2LWZvcj1cIm9iaiBpbiBpdGVtXCIgOmtleT1cIm9ialwiPnt7b2JqfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCB2LWlmPVwiaGFzQnV0dG9uXCIgY2xhc3M9XCJ0ZF9idG5fd2R0IHR4dC1jXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJkZXRhaWxidG5cIiBAY2xpY2s9XCJvbkRldGFpbCgkZXZlbnQsdHJJbmRleClcIj7or6bmg4U8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgPC90Ym9keT5cclxuICAgICAgICA8L3RhYmxlPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjaGFuZ2VfcGFnZVwiPlxyXG4gICAgICAgICAgICA8YnV0dG9uIHYtaWY9XCJoYXNQcmVQYWdlXCIgQGNsaWNrPVwib25QcmVcIj7kuIrkuIDpobU8L2J1dHRvbj5cclxuICAgICAgICAgICAgPGJ1dHRvbiB2LWlmPVwiaGFzTmV4dFBhZ2VcIiBAY2xpY2s9XCJvbk5leHRcIj7kuIvkuIDpobU8L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuaW1wb3J0IHsgbWFwU3RhdGUgLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIHByb3BzOiBbXCJkYXRhTGlzdFwiLFwidGhlYWRMaXN0XCIsXCJ0ckxpbmFnZVwiLFwiaGFzRGV0QnV0dG9uXCJdLFxyXG4gICAgZGF0YSAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHJEYXRhOnRoaXMuZGF0YUxpc3QsLy/ooajmoLzlhoXlrrnmlbDmja7liJfooahcclxuICAgICAgICAgICAgdGhlYWREYXRhOnRoaXMudGhlYWRMaXN0LC8v6KGo5qC85aS05pWw5o2uXHJcbiAgICAgICAgICAgIGxpbmFnZTp0eXBlb2YgdGhpcy50ckxpbmFnZSA9PSBcIm51bWJlclwiID8gdGhpcy50ckxpbmFnZSA6IDUsLy/mr4/pobXooYzmlbBcclxuICAgICAgICAgICAgY3VyUGFnZUluZGV4OjAsLy/lvZPliY3pobVJbmRleFxyXG4gICAgICAgICAgICBjdXJQYWdlRGF0YTpbXSwvL+W9k+WJjemhteWGheWuueaVsOaNruWIl+ihqFxyXG4gICAgICAgICAgICBudW1QYWdlOjAsLy/mgLvpobXmlbBcclxuICAgICAgICAgICAgaGFzUHJlUGFnZTpmYWxzZSwvL+acieS4iuS4gOmhte+8n1xyXG4gICAgICAgICAgICBoYXNOZXh0UGFnZTpmYWxzZSwvL+acieS4i+S4gOmhte+8n1xyXG5cdFx0XHRoYXNCdXR0b246dHJ1ZS8v5piv5ZCm5pyJ6K+m5oOF5oyJ6ZKuXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIHdhdGNoIDoge1xyXG4gICAgICAgIGRhdGFMaXN0KHZhbCl7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiZGF0YUxpc3QgY2hhbmdlLCB2YWw9XCIrdmFsKTtcclxuICAgICAgICAgICAgdGhpcy50YWJEYXRhQ2xlYXIoKTtcclxuICAgICAgICAgICAgdGhpcy50ckRhdGEgPSB2YWw7XHJcbiAgICAgICAgICAgIHRoaXMudGFiRGF0YUluaXQoKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHRoZWFkTGlzdCh2YWwpe1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInRoZWFkTGlzdCBjaGFuZ2UsIHZhbD1cIit2YWwpO1xyXG4gICAgICAgICAgICB0aGlzLnRoZWFkRGF0YSA9IHZhbDtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHRyTGluYWdlKHZhbCl7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwidHJMaW5hZ2UgY2hhbmdlLCB2YWw9XCIrdmFsKTtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWwgPT0gXCJudW1iZXJcIil7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxpbmFnZSA9IHZhbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblx0XHRoYXNEZXRCdXR0b24odmFsKXtcclxuXHRcdFx0Y29uc29sZS5sb2coXCJoYXNEZXRCdXR0b24gY2hhbmdlLCB2YWw9XCIrdmFsKTtcclxuXHRcdFx0dGhpcy5oYXNCdXR0b24gPSB2YWw7XHJcblx0XHR9XHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICAgIHRhYkRhdGFDbGVhciAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY3VyUGFnZUluZGV4ID0gMDtcclxuICAgICAgICAgICAgdGhpcy5jdXJQYWdlRGF0YSA9IFtdO1xyXG4gICAgICAgICAgICB0aGlzLmhhc1ByZVBhZ2UgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5oYXNOZXh0UGFnZSA9IGZhbHNlO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdGFiRGF0YUluaXQgKCkge1xyXG4gICAgICAgICAgICAvL+ihqOagvOWGheWuueaYr+WQpui2heWHuuS4gOmhte+8jOi2heWHuue/u+mhteWkhOeQhlxyXG4gICAgICAgICAgICBpZih0aGlzLnRyRGF0YS5sZW5ndGggPiB0aGlzLmxpbmFnZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5oYXNOZXh0UGFnZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmN1clBhZ2VEYXRhID0gdGhpcy50ckRhdGEuc2xpY2UodGhpcy5jdXJQYWdlSW5kZXgqdGhpcy5saW5hZ2UsKHRoaXMuY3VyUGFnZUluZGV4KzEpKnRoaXMubGluYWdlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY3VyUGFnZURhdGEgPSB0aGlzLnRyRGF0YTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLm51bVBhZ2UgPSAodGhpcy50ckRhdGEubGVuZ3RoICUgdGhpcy5saW5hZ2UgPT0gMCkgPyAocGFyc2VJbnQodGhpcy50ckRhdGEubGVuZ3RoIC8gdGhpcy5saW5hZ2UpKSA6IChwYXJzZUludCh0aGlzLnRyRGF0YS5sZW5ndGggLyB0aGlzLmxpbmFnZSkgKyAxKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHRyU2VsZWN0ZWQgKGluZGV4KSB7XHJcblx0XHRcdGNvbnNvbGUubG9nKFwi5Y2V6KGM6YCJ5LitXCIpO1xyXG4gICAgICAgICAgICB2YXIgYWxsSW5kZXggPSB0aGlzLmN1clBhZ2VJbmRleCp0aGlzLmxpbmFnZStpbmRleDtcclxuICAgICAgICAgICAgJChcInRib2R5IHRyXCIpLnJlbW92ZUNsYXNzKFwic2VsZWN0ZWRcIik7XHJcbiAgICAgICAgICAgICQoXCJ0Ym9keSB0clwiKS5lcShpbmRleCkuYWRkQ2xhc3MoXCJzZWxlY3RlZFwiKTtcclxuXHRcdFx0dGhpcy4kZW1pdChcIm9uVHJTZWxlY3RlZFwiLGFsbEluZGV4KTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uUHJlICgpIHtcclxuICAgICAgICAgICAgdGhpcy5jdXJQYWdlSW5kZXggLT0gMTtcclxuICAgICAgICAgICAgdGhpcy5jdXJQYWdlRGF0YSA9IHRoaXMudHJEYXRhLnNsaWNlKHRoaXMuY3VyUGFnZUluZGV4KnRoaXMubGluYWdlLCh0aGlzLmN1clBhZ2VJbmRleCsxKSp0aGlzLmxpbmFnZSk7XHJcbiAgICAgICAgICAgIHRoaXMuaWZQcmVPck5leHQoKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uTmV4dCAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY3VyUGFnZUluZGV4ICs9IDE7XHJcbiAgICAgICAgICAgIHRoaXMuY3VyUGFnZURhdGEgPSB0aGlzLnRyRGF0YS5zbGljZSh0aGlzLmN1clBhZ2VJbmRleCp0aGlzLmxpbmFnZSwodGhpcy5jdXJQYWdlSW5kZXgrMSkqdGhpcy5saW5hZ2UpO1xyXG4gICAgICAgICAgICB0aGlzLmlmUHJlT3JOZXh0KCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBpZlByZU9yTmV4dCAoKSB7XHJcbiAgICAgICAgICAgIHZhciBmbGFnUHJlID0gdHJ1ZTtcclxuICAgICAgICAgICAgdmFyIGZsYWdOZXh0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuY3VyUGFnZUluZGV4ID49IHRoaXMubnVtUGFnZS0xKSB7XHJcbiAgICAgICAgICAgICAgICBmbGFnTmV4dCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmN1clBhZ2VJbmRleCA8PSAwKSB7XHJcbiAgICAgICAgICAgICAgICBmbGFnUHJlID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5oYXNQcmVQYWdlID0gZmxhZ1ByZTtcclxuICAgICAgICAgICAgdGhpcy5oYXNOZXh0UGFnZSA9IGZsYWdOZXh0O1xyXG4gICAgICAgIH0sXHJcblx0XHRvbkRldGFpbCAoZXZlbnQsaW5kZXgpIHtcclxuXHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHRcdGNvbnNvbGUubG9nKFwi54K55Ye76K+m5oOF5oyJ6ZKuXCIpO1xyXG5cdFx0XHR2YXIgYWxsSW5kZXggPSB0aGlzLmN1clBhZ2VJbmRleCp0aGlzLmxpbmFnZStpbmRleDtcclxuXHRcdFx0Ly9jb25zb2xlLmxvZyhcImFsbEluZGV4PVwiK2FsbEluZGV4KTtcclxuXHRcdFx0dGhpcy4kZW1pdChcIm9uVHJCdG5TZWxlY3RlZFwiLGFsbEluZGV4KTtcclxuXHRcdH1cclxuICAgIH0sXHJcbiAgICBtb3VudGVkICgpIHtcclxuICAgICAgICB0aGlzLnRhYkRhdGFJbml0KCk7XHJcbiAgICB9XHJcbn1cclxuPC9zY3JpcHQ+XHJcblxyXG4iLCI8dGVtcGxhdGU+XHJcbiAgICA8ZGl2PlxyXG4gICAgICAgIDx0YWJsZSBjbGFzcz1cImRldGFpbF90YWJcIj5cclxuICAgICAgICAgICAgPHRoZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRoIHYtZm9yPVwiaXRlbSBpbiB0aGVhZERhdGFcIiA6a2V5PVwiaXRlbVwiPnt7aXRlbX19PC90aD5cclxuICAgICAgICAgICAgPC90aGVhZD5cclxuICAgICAgICAgICAgPHRib2R5PlxyXG4gICAgICAgICAgICAgICAgPHRyIHYtZm9yPVwiKGl0ZW0sdHJJbmRleCkgaW4gY3VyUGFnZURhdGFcIiA6a2V5PVwiaXRlbS5jdXJyZW5jeVwiIEBjbGljaz1cInRyU2VsZWN0ZWQodHJJbmRleClcIiA6Y2xhc3M9J3tcInNlbGVjdGVkXCI6aXRlbS5pc1NlbGVjdGVkfSc+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIHYtZm9yPVwib2JqIGluIGl0ZW1cIiA6a2V5PVwib2JqXCI+e3tvYmp9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3Rib2R5PlxyXG4gICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImNoYW5nZV9wYWdlXCI+XHJcbiAgICAgICAgICAgIDxidXR0b24gdi1pZj1cImhhc1ByZVBhZ2VcIiAgQGNsaWNrPVwib25QcmVcIj7kuIrkuIDpobU8L2J1dHRvbj5cclxuICAgICAgICAgICAgPGJ1dHRvbiB2LWlmPVwiaGFzTmV4dFBhZ2VcIiAgQGNsaWNrPVwib25OZXh0XCI+5LiL5LiA6aG1PC9idXR0b24+XHJcbiAgICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5pbXBvcnQgeyBtYXBTdGF0ZSAsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4J1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgcHJvcHM6IFtcImRhdGFMaXN0XCIsXCJ0aGVhZExpc3RcIixcInRyTGluYWdlXCJdLFxyXG4gICAgZGF0YSAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHJEYXRhOnRoaXMuZGF0YUxpc3QsLy/ooajmoLzlhoXlrrnmlbDmja7liJfooahcclxuICAgICAgICAgICAgdGhlYWREYXRhOnRoaXMudGhlYWRMaXN0LC8v6KGo5qC85aS05pWw5o2uXHJcbiAgICAgICAgICAgIHNlbGVjdEluZGV4Om51bGwsLy/lvZPliY3pgInmi6nooYxcclxuICAgICAgICAgICAgbGluYWdlOnR5cGVvZiB0aGlzLnRyTGluYWdlID09IFwibnVtYmVyXCIgPyB0aGlzLnRyTGluYWdlIDogNSwvL+avj+mhteihjOaVsFxyXG4gICAgICAgICAgICBjdXJQYWdlSW5kZXg6MCwvL+W9k+WJjemhtUluZGV4XHJcbiAgICAgICAgICAgIGN1clBhZ2VEYXRhOltdLC8v5b2T5YmN6aG15YaF5a655pWw5o2u5YiX6KGoXHJcbiAgICAgICAgICAgIG51bVBhZ2U6MCwvL+aAu+mhteaVsFxyXG4gICAgICAgICAgICBoYXNQcmVQYWdlOmZhbHNlLC8v5pyJ5LiK5LiA6aG177yfXHJcbiAgICAgICAgICAgIGhhc05leHRQYWdlOmZhbHNlLy/mnInkuIvkuIDpobXvvJ9cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgd2F0Y2ggOiB7XHJcbiAgICAgICAgZGF0YUxpc3QodmFsKXtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJkYXRhTGlzdCBjaGFuZ2UsIHZhbD1cIit2YWwpO1xyXG4gICAgICAgICAgICB0aGlzLnRhYkRhdGFDbGVhcigpO1xyXG4gICAgICAgICAgICB0aGlzLnRyRGF0YSA9IHZhbDtcclxuICAgICAgICAgICAgdGhpcy50YWJEYXRhSW5pdCgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdGhlYWRMaXN0KHZhbCl7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwidGhlYWRMaXN0IGNoYW5nZSwgdmFsPVwiK3ZhbCk7XHJcbiAgICAgICAgICAgIHRoaXMudGhlYWREYXRhID0gdmFsO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2VsZWN0SW5kZXgodmFsKXtcclxuICAgICAgICAgICAgdGhpcy4kZW1pdChcIm9uVHJTZWxlY3RlZFwiLHZhbCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICB0ckxpbmFnZSh2YWwpe1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInRyTGluYWdlIGNoYW5nZSwgdmFsPVwiK3ZhbCk7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsID09IFwibnVtYmVyXCIpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5saW5hZ2UgPSB2YWw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICAgIHRhYkRhdGFDbGVhciAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY3VyUGFnZUluZGV4ID0gMDtcclxuICAgICAgICAgICAgdGhpcy5jdXJQYWdlRGF0YSA9IFtdO1xyXG4gICAgICAgICAgICB0aGlzLmhhc1ByZVBhZ2UgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5oYXNOZXh0UGFnZSA9IGZhbHNlO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdGFiRGF0YUluaXQgKCkge1xyXG4gICAgICAgICAgICAvL+ihqOagvOWGheWuueaYr+WQpui2heWHuuS4gOmhte+8jOi2heWHuue/u+mhteWkhOeQhlxyXG4gICAgICAgICAgICBpZih0aGlzLnRyRGF0YS5sZW5ndGggPiB0aGlzLmxpbmFnZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5oYXNOZXh0UGFnZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmN1clBhZ2VEYXRhID0gdGhpcy50ckRhdGEuc2xpY2UodGhpcy5jdXJQYWdlSW5kZXgqdGhpcy5saW5hZ2UsKHRoaXMuY3VyUGFnZUluZGV4KzEpKnRoaXMubGluYWdlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY3VyUGFnZURhdGEgPSB0aGlzLnRyRGF0YTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLm51bVBhZ2UgPSAodGhpcy50ckRhdGEubGVuZ3RoICUgdGhpcy5saW5hZ2UgPT0gMCkgPyAocGFyc2VJbnQodGhpcy50ckRhdGEubGVuZ3RoIC8gdGhpcy5saW5hZ2UpKSA6IChwYXJzZUludCh0aGlzLnRyRGF0YS5sZW5ndGggLyB0aGlzLmxpbmFnZSkgKyAxKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHRyU2VsZWN0ZWQgKGluZGV4KSB7XHJcbiAgICAgICAgICAgIHZhciBhbGxJbmRleCA9IHRoaXMuY3VyUGFnZUluZGV4KnRoaXMubGluYWdlK2luZGV4O1xyXG4gICAgICAgICAgICAkKFwidGJvZHkgdHJcIikucmVtb3ZlQ2xhc3MoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgICAgICAgJChcInRib2R5IHRyXCIpLmVxKGluZGV4KS5hZGRDbGFzcyhcInNlbGVjdGVkXCIpO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdEluZGV4ID0gYWxsSW5kZXg7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvblByZSAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY3VyUGFnZUluZGV4IC09IDE7XHJcbiAgICAgICAgICAgIHRoaXMuY3VyUGFnZURhdGEgPSB0aGlzLnRyRGF0YS5zbGljZSh0aGlzLmN1clBhZ2VJbmRleCp0aGlzLmxpbmFnZSwodGhpcy5jdXJQYWdlSW5kZXgrMSkqdGhpcy5saW5hZ2UpO1xyXG4gICAgICAgICAgICB0aGlzLmlmUHJlT3JOZXh0KCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbk5leHQgKCkge1xyXG4gICAgICAgICAgICB0aGlzLmN1clBhZ2VJbmRleCArPSAxO1xyXG4gICAgICAgICAgICB0aGlzLmN1clBhZ2VEYXRhID0gdGhpcy50ckRhdGEuc2xpY2UodGhpcy5jdXJQYWdlSW5kZXgqdGhpcy5saW5hZ2UsKHRoaXMuY3VyUGFnZUluZGV4KzEpKnRoaXMubGluYWdlKTtcclxuICAgICAgICAgICAgdGhpcy5pZlByZU9yTmV4dCgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaWZQcmVPck5leHQgKCkge1xyXG4gICAgICAgICAgICB2YXIgZmxhZ1ByZSA9IHRydWU7XHJcbiAgICAgICAgICAgIHZhciBmbGFnTmV4dCA9IHRydWU7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmN1clBhZ2VJbmRleCA+PSB0aGlzLm51bVBhZ2UtMSkge1xyXG4gICAgICAgICAgICAgICAgZmxhZ05leHQgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodGhpcy5jdXJQYWdlSW5kZXggPD0gMCkge1xyXG4gICAgICAgICAgICAgICAgZmxhZ1ByZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuaGFzUHJlUGFnZSA9IGZsYWdQcmU7XHJcbiAgICAgICAgICAgIHRoaXMuaGFzTmV4dFBhZ2UgPSBmbGFnTmV4dDtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgbW91bnRlZCAoKSB7XHJcbiAgICAgICAgdGhpcy50YWJEYXRhSW5pdCgpO1xyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG5cclxuIiwiPHRlbXBsYXRlPlxyXG4gICAgPGRpdj5cclxuICAgICAgICA8dGFibGUgY2xhc3M9XCJkZXRhaWxfdGFiXCI+XHJcbiAgICAgICAgICAgIDx0aGVhZD5cclxuICAgICAgICAgICAgICAgIDx0aCB2LWZvcj1cIml0ZW0gaW4gdGhlYWREYXRhXCIgOmtleT1cIml0ZW1cIj57e2l0ZW19fTwvdGg+XHJcbiAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICAgIDx0ciB2LWZvcj1cIihpdGVtLHRySW5kZXgpIGluIGN1clBhZ2VEYXRhXCIgOmtleT1cIml0ZW0uY3VycmVuY3lcIiBAY2xpY2s9XCJ0clNlbGVjdGVkKHRySW5kZXgpXCIgOmNsYXNzPSd7XCJzZWxlY3RlZFwiOml0ZW0uaXNTZWxlY3RlZH0nPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCB2LWZvcj1cIm9iaiBpbiBpdGVtXCIgOmtleT1cIm9ialwiPnt7b2JqfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgPC90Ym9keT5cclxuICAgICAgICA8L3RhYmxlPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjaGFuZ2VfcGFnZVwiPlxyXG4gICAgICAgICAgICA8YnV0dG9uIHYtaWY9XCJoYXNQcmVQYWdlXCIgIEBjbGljaz1cIm9uUHJlXCI+5LiK5LiA6aG1PC9idXR0b24+XHJcbiAgICAgICAgICAgIDxidXR0b24gdi1pZj1cImhhc05leHRQYWdlXCIgIEBjbGljaz1cIm9uTmV4dFwiPuS4i+S4gOmhtTwvYnV0dG9uPlxyXG4gICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHN0eWxlIHNjb3BlZD5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTMwMHB4KSBhbmQgKG1heC13aWR0aDogMTM4MHB4KXtcclxuICAgIHRhYmxlLmRldGFpbF90YWIgdHJ7XHJcbiAgICAgICAgaGVpZ2h0OiAzOHB4O1xyXG4gICAgfVxyXG59XHJcbjwvc3R5bGU+XHJcblxyXG48c2NyaXB0PlxyXG5pbXBvcnQgeyBtYXBTdGF0ZSAsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4J1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgcHJvcHM6IFtcImRhdGFMaXN0XCIsXCJ0aGVhZExpc3RcIixcInRyTGluYWdlXCJdLFxyXG4gICAgZGF0YSAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHJEYXRhOnRoaXMuZGF0YUxpc3QsLy/ooajmoLzlhoXlrrnmlbDmja7liJfooahcclxuICAgICAgICAgICAgdGhlYWREYXRhOnRoaXMudGhlYWRMaXN0LC8v6KGo5qC85aS05pWw5o2uXHJcbiAgICAgICAgICAgIHNlbGVjdEluZGV4Om51bGwsLy/lvZPliY3pgInmi6nooYxcclxuICAgICAgICAgICAgbGluYWdlOnR5cGVvZiB0aGlzLnRyTGluYWdlID09IFwibnVtYmVyXCIgPyB0aGlzLnRyTGluYWdlIDogNSwvL+avj+mhteihjOaVsFxyXG4gICAgICAgICAgICBjdXJQYWdlSW5kZXg6MCwvL+W9k+WJjemhtUluZGV4XHJcbiAgICAgICAgICAgIGN1clBhZ2VEYXRhOltdLC8v5b2T5YmN6aG15YaF5a655pWw5o2u5YiX6KGoXHJcbiAgICAgICAgICAgIG51bVBhZ2U6MCwvL+aAu+mhteaVsFxyXG4gICAgICAgICAgICBoYXNQcmVQYWdlOmZhbHNlLC8v5pyJ5LiK5LiA6aG177yfXHJcbiAgICAgICAgICAgIGhhc05leHRQYWdlOmZhbHNlLy/mnInkuIvkuIDpobXvvJ9cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgd2F0Y2ggOiB7XHJcbiAgICAgICAgZGF0YUxpc3QodmFsKXtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJkYXRhTGlzdCBjaGFuZ2UsIHZhbD1cIit2YWwpO1xyXG4gICAgICAgICAgICB0aGlzLnRhYkRhdGFDbGVhcigpO1xyXG4gICAgICAgICAgICB0aGlzLnRyRGF0YSA9IHZhbDtcclxuICAgICAgICAgICAgdGhpcy50YWJEYXRhSW5pdCgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdGhlYWRMaXN0KHZhbCl7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwidGhlYWRMaXN0IGNoYW5nZSwgdmFsPVwiK3ZhbCk7XHJcbiAgICAgICAgICAgIHRoaXMudGhlYWREYXRhID0gdmFsO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2VsZWN0SW5kZXgodmFsKXtcclxuICAgICAgICAgICAgdGhpcy4kZW1pdChcIm9uVHJTZWxlY3RlZFwiLHZhbCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICB0ckxpbmFnZSh2YWwpe1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInRyTGluYWdlIGNoYW5nZSwgdmFsPVwiK3ZhbCk7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsID09IFwibnVtYmVyXCIpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5saW5hZ2UgPSB2YWw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICAgIHRhYkRhdGFDbGVhciAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY3VyUGFnZUluZGV4ID0gMDtcclxuICAgICAgICAgICAgdGhpcy5jdXJQYWdlRGF0YSA9IFtdO1xyXG4gICAgICAgICAgICB0aGlzLmhhc1ByZVBhZ2UgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5oYXNOZXh0UGFnZSA9IGZhbHNlO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdGFiRGF0YUluaXQgKCkge1xyXG4gICAgICAgICAgICAvL+ihqOagvOWGheWuueaYr+WQpui2heWHuuS4gOmhte+8jOi2heWHuue/u+mhteWkhOeQhlxyXG4gICAgICAgICAgICBpZih0aGlzLnRyRGF0YS5sZW5ndGggPiB0aGlzLmxpbmFnZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5oYXNOZXh0UGFnZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmN1clBhZ2VEYXRhID0gdGhpcy50ckRhdGEuc2xpY2UodGhpcy5jdXJQYWdlSW5kZXgqdGhpcy5saW5hZ2UsKHRoaXMuY3VyUGFnZUluZGV4KzEpKnRoaXMubGluYWdlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY3VyUGFnZURhdGEgPSB0aGlzLnRyRGF0YTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLm51bVBhZ2UgPSAodGhpcy50ckRhdGEubGVuZ3RoICUgdGhpcy5saW5hZ2UgPT0gMCkgPyAocGFyc2VJbnQodGhpcy50ckRhdGEubGVuZ3RoIC8gdGhpcy5saW5hZ2UpKSA6IChwYXJzZUludCh0aGlzLnRyRGF0YS5sZW5ndGggLyB0aGlzLmxpbmFnZSkgKyAxKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHRyU2VsZWN0ZWQgKGluZGV4KSB7XHJcbiAgICAgICAgICAgIHZhciBhbGxJbmRleCA9IHRoaXMuY3VyUGFnZUluZGV4KnRoaXMubGluYWdlK2luZGV4O1xyXG4gICAgICAgICAgICAkKFwidGJvZHkgdHJcIikucmVtb3ZlQ2xhc3MoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgICAgICAgJChcInRib2R5IHRyXCIpLmVxKGluZGV4KS5hZGRDbGFzcyhcInNlbGVjdGVkXCIpO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdEluZGV4ID0gYWxsSW5kZXg7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvblByZSAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY3VyUGFnZUluZGV4IC09IDE7XHJcbiAgICAgICAgICAgIHRoaXMuY3VyUGFnZURhdGEgPSB0aGlzLnRyRGF0YS5zbGljZSh0aGlzLmN1clBhZ2VJbmRleCp0aGlzLmxpbmFnZSwodGhpcy5jdXJQYWdlSW5kZXgrMSkqdGhpcy5saW5hZ2UpO1xyXG4gICAgICAgICAgICB0aGlzLmlmUHJlT3JOZXh0KCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbk5leHQgKCkge1xyXG4gICAgICAgICAgICB0aGlzLmN1clBhZ2VJbmRleCArPSAxO1xyXG4gICAgICAgICAgICB0aGlzLmN1clBhZ2VEYXRhID0gdGhpcy50ckRhdGEuc2xpY2UodGhpcy5jdXJQYWdlSW5kZXgqdGhpcy5saW5hZ2UsKHRoaXMuY3VyUGFnZUluZGV4KzEpKnRoaXMubGluYWdlKTtcclxuICAgICAgICAgICAgdGhpcy5pZlByZU9yTmV4dCgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaWZQcmVPck5leHQgKCkge1xyXG4gICAgICAgICAgICB2YXIgZmxhZ1ByZSA9IHRydWU7XHJcbiAgICAgICAgICAgIHZhciBmbGFnTmV4dCA9IHRydWU7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmN1clBhZ2VJbmRleCA+PSB0aGlzLm51bVBhZ2UtMSkge1xyXG4gICAgICAgICAgICAgICAgZmxhZ05leHQgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodGhpcy5jdXJQYWdlSW5kZXggPD0gMCkge1xyXG4gICAgICAgICAgICAgICAgZmxhZ1ByZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuaGFzUHJlUGFnZSA9IGZsYWdQcmU7XHJcbiAgICAgICAgICAgIHRoaXMuaGFzTmV4dFBhZ2UgPSBmbGFnTmV4dDtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgbW91bnRlZCAoKSB7XHJcbiAgICAgICAgdGhpcy50YWJEYXRhSW5pdCgpO1xyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG5cclxuIiwiPHRlbXBsYXRlPlxyXG48ZGl2IGNsYXNzPVwieC1kZWJ1Zy1wYWdlIGNvbnRhaW5lclwiIHYtc2hvdz1cIiRyb290LmRlYnVnXCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwiY29sLW1kLTJcIj5cclxuICAgIDxvbCBjbGFzcz1cImxpc3QtZ3JvdXBcIj5cclxuICAgICAgICA8bGkgdi1mb3I9XCJpdGVtIGluICRyb290LmNvbGxlY3Rpb25zXCIgOmtleT1cIml0ZW1bMF1cIiBjbGFzcz1cImxpc3QtZ3JvdXAtaXRlbVwiPlxyXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImJhZGdlXCI+e3tpdGVtWzFdLmRlZmF1bHQubGVuZ3RofX08L3NwYW4+XHJcbiAgICAgICAgICAgIDxhIEBjbGljaz1cIm9uQ29sbGVjdGlvbihpdGVtKVwiPnt7aXRlbVswXX19PC9hPlxyXG4gICAgICAgIDwvbGk+XHJcbiAgICA8L29sPlxyXG4gICAgPC9kaXY+XHJcbiAgICA8ZGl2IGNsYXNzPVwiY29sLW1kLTEwXCI+XHJcbiAgICA8b2wgY2xhc3M9XCJsaXN0LWlubGluZVwiPlxyXG4gICAgICAgIDxsaSBjbGFzcz1cImNvbC1tZC0zIHgtZGVidWctaXRlbVwiPlggPGEgQGNsaWNrPVwib25DbG9zZVwiPuWFs+mXrTwvYT48L2xpPlxyXG4gICAgICAgIDxsaSBjbGFzcz1cImNvbC1tZC0zIHgtZGVidWctaXRlbVwiPisgPGEgQGNsaWNrPVwib25DaGFuZ2VJbnRlcnZhbFwiPuaMgee7reWIh+aNojwvYT48L2xpPlxyXG4gICAgICAgIDxsaSB2LWZvcj1cIihpdGVtLCBpZHgpIGluIHBhZ2VzXCIgOmtleT1cIml0ZW1bMV1cIiBjbGFzcz1cImNvbC1tZC0zIHgtZGVidWctaXRlbVwiIDpjbGFzcz1cIntjdXJyZW50OiBpc0N1cnJlbnQoaXRlbVsxXSl9XCI+XHJcbiAgICAgICAgICAgIDxzcGFuIDpjbGFzcz1cInsneC1wb3B1cCc6IGlzUG9wdXAoaXRlbSl9XCI+e3tpZHgrMX19PC9zcGFuPlxyXG4gICAgICAgICAgICA8YSBAY2xpY2s9XCJvbkNoYW5nZVBhZ2UoaXRlbVsxXSlcIj57e2l0ZW1bMF19fTwvYT5cclxuICAgICAgICA8L2xpPlxyXG4gICAgPC9vbD5cclxuICAgIDwvZGl2PlxyXG48L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBkYXRhICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBwYWdlczogW10sXHJcbiAgICAgICAgICAgIGNoYW5nZUNvdW50OiAwXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGNyZWF0ZWQgKCkge1xyXG4gICAgICAgIHRoaXMucGFnZXMgPSB0aGlzLiRyb290LmNvbGxlY3Rpb25zWzBdWzFdLmRlZmF1bHRcclxuICAgIH0sXHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgICAgaXNDdXJyZW50IChwYWdlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBwYWdlID09PSB0aGlzLiRyb290LmN1cnJlbnRWaWV3XHJcbiAgICAgICAgfSxcclxuICAgICAgICBpc1BvcHVwIChpdGVtKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBpdGVtWzJdID09PSAnUG9wdXAnXHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkNsb3NlICgpIHtcclxuICAgICAgICAgICAgdGhpcy4kcm9vdC5kZWJ1ZyA9IGZhbHNlXHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkNoYW5nZVBhZ2UgKHBhZ2UpIHtcclxuICAgICAgICAgICAgdGhpcy4kcm9vdC5kZWJ1ZyA9IGZhbHNlXHJcbiAgICAgICAgICAgIENoYW5nZVBhZ2UocGFnZSlcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uQ29sbGVjdGlvbiAoY29sbGVjdGlvbikge1xyXG4gICAgICAgICAgICB0aGlzLnBhZ2VzID0gY29sbGVjdGlvblsxXS5kZWZhdWx0XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkNoYW5nZUludGVydmFsICgpIHtcclxuICAgICAgICAgICAgdGhpcy4kcm9vdC5kZWJ1ZyA9IGZhbHNlXHJcbiAgICAgICAgICAgIHZhciBzZWxmID0gdGhpc1xyXG4gICAgICAgICAgICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBzZWxmLmNoYW5nZUNvdW50KytcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnRpdGxlID0gJ2NoYW5nZUNvdW50ICcgKyBzZWxmLmNoYW5nZUNvdW50XHJcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5jaGFuZ2VDb3VudCAlIDIpIENoYW5nZVBhZ2UoJy4vY3VzdF9tYWluX091dFNlcnZpY2UuaHRtbCcpXHJcbiAgICAgICAgICAgICAgICBlbHNlIENoYW5nZVBhZ2UoJ0IwMV9QZXJzb25hbFRheEZpbmdlckRpc3Rpbmd1aXNoJylcclxuICAgICAgICAgICAgfSwgMjAwMClcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuPC9zY3JpcHQ+XHJcblxyXG48c3R5bGU+XHJcbi8qKiovXHJcbi5jb2wtbWQtMiB7XHJcbiAgICB3aWR0aDogMTYlO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuLmNvbC1tZC0zIHtcclxuICAgIHdpZHRoOiAyNCU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxufVxyXG4uY29sLW1kLTEwIHtcclxuICAgIHdpZHRoOiA4MyU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxufVxyXG4vKioqL1xyXG4ueC1kZWJ1Zy1wYWdlIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNSU7XHJcbiAgICBsZWZ0OiA1JTtcclxuICAgIHdpZHRoOiA5MCU7XHJcbiAgICBoZWlnaHQ6IDkwJTtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICB6LWluZGV4OiAxMTExMTE7XHJcbn1cclxuLngtZGVidWctaXRlbSB7XHJcbiAgICBwYWRkaW5nOiAycHg7XHJcbn1cclxuLmN1cnJlbnQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG59XHJcbi54LXBvcHVwIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcclxufVxyXG48L3N0eWxlPiIsIjxzdHlsZSBzY29wZWQ+XHJcbi5tYW55LWRpYWxvZyB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB6LWluZGV4OiAxMDAwO1xyXG4gICAgd2lkdGg6IDMwJTtcclxuICAgIGhlaWdodDogNTUlO1xyXG4gICAgcmlnaHQ6IDAlO1xyXG4gICAgYm90dG9tOiAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQwLDI0MCwyNDAsMSk7XHJcbiAgICBjb2xvcjogIzY2NjtcclxuICAgIGZvbnQtc2l6ZTogMzBweDtcclxufVxyXG4ubWFueS1ib2R5IHtcclxuICAgIG1hcmdpbjogMTBweCAwO1xyXG59XHJcbnVsI2NvbnRlbnQge1xyXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4jY29udGVudCBsaSB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICBtYXJnaW46IDE2cHggNTBweDtcclxufVxyXG5cclxubGkgPiBhIHtcclxuICAgIGJvcmRlcjogMHB4IHNvbGlkIGJsYWNrO1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG59XHJcbi5jYW5jYWxidG4sLmJhY2tidG57IFxyXG4gICAgbWFyZ2luOjIwcHggMCAwIDA7XHJcbiAgICBiYWNrZ3JvdW5kOm5vbmU7XHJcbiAgICBjb2xvcjojMzMzO1xyXG59XHJcbi5zZWxlY3RpdGxleyAgICBcclxuICAgIHRleHQtYWxpZ246Y2VudGVyO1xyXG4gICAgZm9udC1zaXplOjIuNXJlbTtcclxufVxyXG4ubWFueS1oZWFkZXJ7ICAgXHJcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcclxufVxyXG4uY2xvc2VkIHtcclxuICAgIG1hcmdpbjogNnB4IDZweCAwIDZweDtcclxuICAgIGZsb2F0OiByaWdodDtcclxufVxyXG48L3N0eWxlPlxyXG5cclxuXHJcbjx0ZW1wbGF0ZT5cclxuICA8ZGl2IGNsYXNzPVwibWFueS1kaWFsb2dcIiB2LXNob3c9XCJzaG93XCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwibWFueS1oZWFkZXJcIj5cclxuICAgICAgICAgPHNwYW4gY2xhc3M9J3NlbGVjdGl0bGUnPuivt+mAieaLqXt7dGl0bGV9fTwvc3Bhbj5cclxuICAgICAgICAgPGEgQGNsaWNrPVwib25DYW5jZWxcIj48aW1nIGNsYXNzPVwiY2xvc2VkXCIgOnNyYz1cIiRyb290LmltZ1BhdGgoJ2ltZy/ov5Tlm57mjInpkq4ucG5nJylcIj48L2ltZz48L2E+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXYgc3R5bGU9XCJ3aWR0aDo5OCU7bWF4LWhlaWdodDo3OCU7bWFyZ2luOjAgYXV0bztvdmVyZmxvdy15OmF1dG87XCI+XHJcbiAgICAgICAgPHVsIGlkPVwiY29udGVudFwiPlxyXG4gICAgICAgICAgICA8bGkgdi1mb3I9XCIoaXRlbSwgaW5kZXgpIGluIGN1clBhZ2VcIiA6a2V5PVwiaXRlbS5rZXlcIj48YSBAY2xpY2s9XCJvbkNob29zZShpbmRleCwgaXRlbSlcIj57e2l0ZW0ua2V5fX08L2E+PC9saT5cclxuICAgICAgICA8L3VsPlxyXG4gICAgPC9kaXY+XHJcbiAgPC9kaXY+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBwcm9wczoge1xyXG4gICAgICAgIHNob3c6IHtcclxuICAgICAgICAgICAgdHlwZTogQm9vbGVhbixcclxuICAgICAgICAgICAgZGVmYXVsdDogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgICAgIHRpdGxlOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICAgICAgZGVmYXVsdDogXCLpobnnm65cIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICB0eXBlOiBBcnJheSxcclxuICAgICAgICAgICAgZGVmYXVsdDogW11cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgZGF0YSAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgY29tcHV0ZWQ6IHtcclxuICAgICAgICBjdXJQYWdlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRhdGEuc2xpY2UoMClcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICAgIG9uQ2FuY2VsICgpIHtcclxuICAgICAgICAgICAgdGhpcy4kZW1pdCgnY2FuY2VsJylcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uQ2hvb3NlIChpbmRleCwgaXRlbSkge1xyXG4gICAgICAgICAgICB0aGlzLiRlbWl0KCdjb25maXJtJywgaW5kZXgsIGl0ZW0pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8c3R5bGUgc2NvcGVkPlxyXG4ubWFueS1kaWFsb2cge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgei1pbmRleDogMTAwMDtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICBoZWlnaHQ6IDU1JTtcclxuICAgIHJpZ2h0OiAwJTtcclxuICAgIGJvdHRvbTogMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI0MCwyNDAsMjQwLDEpO1xyXG4gICAgY29sb3I6ICM2NjY7XHJcbiAgICBmb250LXNpemU6IDMwcHg7XHJcbn1cclxuLm1hbnktYm9keSB7XHJcbiAgICBtYXJnaW46IDEwcHggMDtcclxufVxyXG51bCNjb250ZW50IHtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuI2NvbnRlbnQgbGkge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogMzAlO1xyXG4gICAgbWFyZ2luOiAwcHggMHB4O1xyXG59XHJcblxyXG5saSA+IGEge1xyXG4gICAgYm9yZGVyOiAwcHggc29saWQgYmxhY2s7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbn1cclxuLmNhbmNhbGJ0biwuYmFja2J0bnsgXHJcbiAgICBtYXJnaW46MjBweCAwIDAgMDtcclxuICAgIGJhY2tncm91bmQ6bm9uZTtcclxuICAgIGNvbG9yOiMzMzM7XHJcbn1cclxuLnNlbGVjdGl0bGV7ICAgIFxyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICBmb250LXNpemU6Mi41cmVtO1xyXG59XHJcbi5tYW55LWhlYWRlcnsgICBcclxuICAgIHRleHQtYWxpZ246Y2VudGVyO1xyXG59XHJcbi5jbG9zZWQge1xyXG4gICAgbWFyZ2luOiA2cHggNnB4IDAgNnB4O1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcbjwvc3R5bGU+XHJcblxyXG5cclxuPHRlbXBsYXRlPlxyXG4gIDxkaXYgY2xhc3M9XCJtYW55LWRpYWxvZ1wiIHYtc2hvdz1cInNob3dcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJtYW55LWhlYWRlclwiPlxyXG4gICAgICAgICA8c3BhbiBjbGFzcz0nc2VsZWN0aXRsZSc+PC9zcGFuPlxyXG4gICAgICAgICA8YnI+XHJcbiAgICAgICAgIDxicj5cclxuICAgICAgICAgPCEtLSA8YSBAY2xpY2s9XCJvbkNhbmNlbFwiPjxpbWcgY2xhc3M9XCJjbG9zZWRcIiA6c3JjPVwiJHJvb3QuaW1nUGF0aCgnaW1nL+i/lOWbnuaMiemSri5wbmcnKVwiPjwvaW1nPjwvYT4gLS0+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXYgc3R5bGU9XCJ3aWR0aDo5OCU7bWF4LWhlaWdodDo3OCU7bWFyZ2luOjAgYXV0bztvdmVyZmxvdy15OmF1dG87XCI+XHJcbiAgICAgICAgPHVsIGlkPVwiY29udGVudFwiPlxyXG4gICAgICAgICAgICA8bGkgdi1mb3I9XCIoaXRlbSwgaW5kZXgpIGluIGN1clBhZ2VcIiA6a2V5PVwiaXRlbS5rZXlcIj48YSBAY2xpY2s9XCJvbkNob29zZShpbmRleCwgaXRlbSlcIj57e2l0ZW0ua2V5fX08L2E+PC9saT5cclxuICAgICAgICA8L3VsPlxyXG4gICAgPC9kaXY+XHJcbiAgPC9kaXY+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBwcm9wczoge1xyXG4gICAgICAgIHNob3c6IHtcclxuICAgICAgICAgICAgdHlwZTogQm9vbGVhbixcclxuICAgICAgICAgICAgZGVmYXVsdDogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgICAgIHRpdGxlOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICAgICAgZGVmYXVsdDogXCLpobnnm65cIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICB0eXBlOiBBcnJheSxcclxuICAgICAgICAgICAgZGVmYXVsdDogW11cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgZGF0YSAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgY29tcHV0ZWQ6IHtcclxuICAgICAgICBjdXJQYWdlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRhdGEuc2xpY2UoMClcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICAgIG9uQ2FuY2VsICgpIHtcclxuICAgICAgICAgICAgdGhpcy4kZW1pdCgnY2FuY2VsJylcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uQ2hvb3NlIChpbmRleCwgaXRlbSkge1xyXG4gICAgICAgICAgICB0aGlzLiRlbWl0KCdjb25maXJtJywgaW5kZXgsIGl0ZW0pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8dGVtcGxhdGU+XHJcbjxkaXYgY2xhc3M9XCJ4LW1vZGFsXCI+XHJcbiAgICA8cCBjbGFzcz1cIm1vZGFsX3RpcFwiPnt7dGl0bGV9fTwvcD5cclxuICAgIDxkaXYgaWQ9XCJtb2RhbF9Db3VudERvd25cIiBjbGFzcz1cIm1vZGFsX3RpbWVcIj57e3RpbWVydW59fTwvZGl2PlxyXG5cdDxzbG90Pjwvc2xvdD5cclxuICAgIDxkaXYgY2xhc3M9XCJtb2RhbF9idG5ib3hcIj5cclxuICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJhY2tidG5cIiBpZD1cIm1vZGFsX2J0bl9iYWNrXCIgQGNsaWNrPVwib25CYWNrXCIgdi1zaG93PVwic2hvd0JhY2tcIj57e2JhY2tOdG5OYW1lfX08L2J1dHRvbj5cclxuICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG5cIiBpZD1cIm1vZGFsX2J0bl9zdXJlXCIgQGNsaWNrPVwib25TdXJlXCIgdi1zaG93PVwic2hvd1N1cmVcIj57e3N1cmVOdG5OYW1lfX08L2J1dHRvbj5cclxuICAgIDwvZGl2PlxyXG48L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCB7IG1hcFN0YXRlICwgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBwcm9wczoge1xyXG5cdFx0dGl0bGU6IHtcclxuXHRcdFx0dHlwZTogU3RyaW5nLFxyXG5cdFx0XHRkZWZhdWx0OiAn6K+35a6a5Yi25a+56K+d5qGG5qCH6aKYJ1xyXG5cdFx0fSxcclxuXHRcdHRpbWVvdXQ6IHtcclxuXHRcdFx0dHlwZTogTnVtYmVyLFxyXG5cdFx0XHRkZWZhdWx0OiAxMFxyXG5cdFx0fSxcclxuICAgICAgICBiYWNrOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICAgICAgZGVmYXVsdDogXCLlj5bjgIDjgIDmtohcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc3VyZToge1xyXG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IFwi56Gu44CA44CA5a6aXCJcclxuICAgICAgICB9XHJcblx0fSxcclxuICAgIGRhdGEgKCkge1xyXG4gICAgICAgIHJldHVybntcclxuXHRcdFx0aW50ZXJ2YWw6IG51bGwsXHJcbiAgICAgICAgICAgIGJhY2tOdG5OYW1lOiB0aGlzLmJhY2ssXHJcbiAgICAgICAgICAgIHN1cmVOdG5OYW1lOiB0aGlzLnN1cmUsXHJcbiAgICAgICAgICAgIHRpbWVydW46IHRoaXMudGltZW91dFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBjb21wdXRlZDoge1xyXG4gICAgICAgIHNob3dCYWNrOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmJhY2tOdG5OYW1lLmxlbmd0aCA+IDBcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNob3dTdXJlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnN1cmVOdG5OYW1lLmxlbmd0aCA+IDBcclxuICAgICAgICB9LFxyXG4gICAgICAgIC4uLm1hcFN0YXRlKFtcInBvb2xcIl0pXHJcbiAgICB9LFxyXG4gICAgbWV0aG9kcyA6IHtcclxuICAgICAgICBvbkJhY2sgKCkge1xyXG4gICAgICAgICAgICB0aGlzLmNsZWFyVGltZSgpO1xyXG4gICAgICAgICAgICB0aGlzLm9uQ2FuY2VsKClcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uU3VyZSAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xlYXJUaW1lKCk7XHJcbiAgICAgICAgICAgIHRoaXMub25Db250aW51ZSgpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBzZXRUaW1lSHRtbCgpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy50aW1lcnVuKTtcclxuICAgICAgICAgICAgdGhpcy50aW1lcnVuIC09IDE7XHJcbiAgICAgICAgICAgIGlmKHRoaXMudGltZXJ1biA8PSAwKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsZWFyVGltZSgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5leGl0U2NlbmUoXCJTVEFfVElNRU9VVFwiKTtcclxuICAgICAgICAgICAgICAgIC8vdGhpcy5vbkJhY2soKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc3RhcnRUaW1lKCkge1xyXG4gICAgICAgICAgICAvL+aooeaAgeahhuWAkuiuoeaXtlxyXG4gICAgICAgICAgICBpZihpc05hTih0aGlzLnRpbWVydW4pIHx8IHRoaXMudGltZXJ1biA8PSAwKXtcclxuICAgICAgICAgICAgICAgIHRoaXMudGltZXJ1biA9IDEwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCh0aGlzLnNldFRpbWVIdG1sLDEwMDApO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2xlYXJUaW1lKCkge1xyXG4gICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpO1xyXG4gICAgICAgICAgICB0aGlzLnRpbWVydW4gPSBcIlwiO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLi4ubWFwQWN0aW9ucyhbJ2luaXRQb29sJywgJ2ZldGNoJywgJ3N1Ym1pdCcsICdvbkNhbmNlbCcsICdvbkNvbnRpbnVlJywnZXhpdFNjZW5lJ10pXHJcbiAgICB9LFxyXG4gICAgbW91bnRlZCAoKSB7XHJcbiAgICAgICAgdGhpcy5zdGFydFRpbWUoKTtcclxuICAgIH1cclxufVxyXG48L3NjcmlwdD4iLCI8dGVtcGxhdGU+XHJcbiAgICA8Zm9vdGVyIGNsYXNzPVwiZm9vdGVyIGZvb3RlcmJnXCI+XHJcbiAgICAgICAgPHNwYW4gY2xhc3M9XCJmb290SW5mbyBob3RsaW5lXCI+5a6i5oi35pyN5Yqh54Ot57q/IDxpPnt7aG90bGluZX19PC9pPjwvc3Bhbj5cclxuICAgICAgICA8IS0tXHJcbiAgICAgICAgPHNlbGVjdCB2LW1vZGVsPVwiJHJvb3QuY3VycmVudFZpZXdcIj5cclxuICAgICAgICAgICAgPG9wdGlvbiB2LWZvcj1cIml0ZW0gaW4gJHJvb3QucGFnZXNcIiBcclxuICAgICAgICAgICAgICAgIDprZXk9XCJpdGVtWzFdXCJcclxuICAgICAgICAgICAgICAgIDp2YWx1ZT1cIml0ZW1bMV1cIj57e2l0ZW1bMF19fTwvb3B0aW9uPlxyXG4gICAgICAgIDwvc2VsZWN0PlxyXG4gICAgICAgIC0tPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzPVwiZm9vdEluZm8gc2xvZ2FuXCI+5aSn6KGM5b635bm/IOS8tOS9oOaIkOmVvzwvc3Bhbj5cclxuICAgICAgICA8c3BhbiBjbGFzcz1cImZvb3RJbmZvIHNsb2dhblwiPjxhIEBjbGljaz1cIm9uRGVidWdcIj57e3BhZ2VDbnR9fTwvYT48L3NwYW4+XHJcbiAgICA8L2Zvb3Rlcj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCB7IG1hcFN0YXRlLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGNvbXB1dGVkOiB7XHJcbiAgICAgICAgcGFnZUNudDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy4kcm9vdC5wYWdlcy5sZW5ndGhcclxuICAgICAgICB9LFxyXG4gICAgICAgIC4uLm1hcFN0YXRlKFsnaG90bGluZSddKVxyXG4gICAgfSxcclxuICAgIG1ldGhvZHM6IHtcclxuICAgICAgICBvbkRlYnVnICgpIHtcclxuICAgICAgICAgICAgdGhpcy4kcm9vdC5kZWJ1ZyA9IHRydWVcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuPC9zY3JpcHQ+XHJcbiIsIjx0ZW1wbGF0ZT5cclxuICAgIDxoZWFkZXIgY2xhc3M9XCJoZWFkZXJcIj5cclxuICAgICAgICA8ZGl2PiA8c3BhbiBjbGFzcz1cImhlYWRlcl90ZXN0XCIgPjxhIEBjbGljaz1cIm9uRGVidWdcIj57e3BhZ2VDbnR9fTwvYT48L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImhlYWRlcl9yaWdodGFyZWFcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVtYWlsZlwiIGlkPVwiZW1haWxmXCIgPjxzcGFuPjwvc3Bhbj48L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBpZD1cIlZJUFwiPjwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibG9naW5fc3RhdHVzXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidG5fZXhpdFwiIGlkPVwiYnRuX2V4aXRcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIj48L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBpZD1cIkNvdW50RG93blwiIGNsYXNzPVwidGltZVwic3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+PC9kaXY+IFxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJiYlwiID4gPGltZyBzcmM9XCJpbWcvYmFycmFnZS/nlJ/ml6Xlv6vkuZAucG5nXCIgYWx0PVwiXCI+PC9kaXY+XHJcbiAgICA8L2hlYWRlcj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCB7IG1hcFN0YXRlLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCdcclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgY29tcHV0ZWQ6IHtcclxuICAgICAgICBjb3VudFRleHQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHJvb3QuY291bnREb3duID09IDAgPyAnJyA6IHRoaXMuJHJvb3QuY291bnREb3duXHJcbiAgICAgICAgfSxcclxuICAgICAgICBwYWdlQ250OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLiRyb290LnBhZ2VzLmxlbmd0aFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAuLi5tYXBTdGF0ZShbJ3Bvb2wnXSlcclxuXHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICAgIG9uRGVidWcgKCkge1xyXG4gICAgICAgICAgICB0aGlzLiRyb290LmRlYnVnID0gIXRoaXMuJHJvb3QuZGVidWdcclxuICAgICAgICB9LFxyXG4gICAgICAgXHJcbiAgICAgICBcclxuICAgIH0sXHJcbiAgICBtb3VudGVkICgpIHtcclxuICAgICAgICB2YXIgVklQQ2xhc3NOYW1lO1xyXG4gICAgICAgIHZhciBTYWxlPXRoaXM7XHJcbiAgICAgICAgaWYodGhpcy4kcm9vdC5WSVBTdGF0dXMpe1xyXG4gICAgICAgICAgICBWSVBDbGFzc05hbWU9KHBhcnNlSW50KHRoaXMuJHJvb3QuVklQU3RhdHVzKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKFZJUENsYXNzTmFtZT09XCIxXCIpe1xyXG4gICAgICAgICAgICAkKFwiI1ZJUFwiKS5hZGRDbGFzcyhcIlZJUDBcIik7XHJcbiAgICAgICAgfWVsc2UgaWYoVklQQ2xhc3NOYW1lPT1cIjJcIil7XHJcbiAgICAgICAgICAgICQoXCIjVklQXCIpLmFkZENsYXNzKFwiVklQMVwiKTtcclxuICAgICAgICB9ZWxzZSBpZihWSVBDbGFzc05hbWU9PVwiM1wiKXtcclxuICAgICAgICAgICAgJChcIiNWSVBcIikuYWRkQ2xhc3MoXCJWSVAyXCIpO1xyXG4gICAgICAgIH1lbHNlIGlmKFZJUENsYXNzTmFtZT09XCI0XCIpe1xyXG4gICAgICAgICAgICAkKFwiI1ZJUFwiKS5hZGRDbGFzcyhcIlZJUDNcIik7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICQoXCIjVklQXCIpLmFkZENsYXNzKFwiVklQMFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGxvZ2luU3RhdHVzO1xyXG4gICAgICAgIGxvZ2luU3RhdHVzPXRoaXMuJHJvb3QubG9naW5TdGF0dXM7IFxyXG4gICAgICAgIGlmKGxvZ2luU3RhdHVzPT1cIjFcIil7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmxvZ2luX3N0YXR1c1wiKS5jc3MoXCJkaXNwbGF5XCIsXCJpbmxpbmUtYmxvY2tcIik7XHJcbiAgICAgICAgfSBcclxuICAgICAgICB2YXIgdGltZVN0YXR1cztcclxuICAgICAgICB0aW1lU3RhdHVzPSB0aGlzLiRyb290LnRpbWVTdGF0dXM7XHJcbiAgICAgICAgaWYodGltZVN0YXR1cz09XCIxXCIpe1xyXG4gICAgICAgICAgICAkKFwiI0NvdW50RG93blwiKS5jc3MoXCJkaXNwbGF5XCIsXCJpbmxpbmUtYmxvY2tcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBleGl0U3RhdHVzO1xyXG4gICAgICAgIGV4aXRTdGF0dXM9IHRoaXMuJHJvb3QuZXhpdFN0YXR1cztcclxuICAgICAgICBpZihleGl0U3RhdHVzPT1cIjFcIil7XHJcbiAgICAgICAgICAgICQoXCIuYnRuX2V4aXRcIikuY3NzKFwiZGlzcGxheVwiLFwiaW5saW5lLWJsb2NrXCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYodGhpcy4kcm9vdC5iYXJyYWdlPT1cIjFcIil7XHJcbiAgICAgICAgICAgICQoXCIuYmJcIikuY3NzKFwiZGlzcGxheVwiLFwiYmxvY2tcIik7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICQoXCIuYmJcIikuY3NzKFwiZGlzcGxheVwiLFwibm9uZVwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYodGhpcy4kcm9vdC5zYWxlU2hvdyl7XHJcbiAgICAgICAgICAgICQoXCIuZW1haWxmXCIpLmNzcyhcImRpc3BsYXlcIixcImlubGluZS1ibG9ja1wiKTsgXHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICQoXCIuZW1haWxmXCIpLmNzcyhcImRpc3BsYXlcIixcIm5vbmVcIik7IFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYodGhpcy4kcm9vdC5TYWxlUHJvZFN1bSl7XHJcbiAgICAgICAgICAgICQoXCIuZW1haWxmXCIpLmNoaWxkcmVuKCkuaHRtbCh0aGlzLiRyb290LlNhbGVQcm9kU3VtKTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICQoXCIuZW1haWxmXCIpLmNoaWxkcmVuKCkuaHRtbCgpO1xyXG4gICAgICAgIH0gIFxyXG5cclxuICAgICAgIFxyXG4gICAgICAgIERhdGFUb29scy5nZXQoXCJHRF9BMDFfQ2FyZENsYXNzfEdEX0EwMV9Jc0xvZ2lufEdEX0EwMV9IZWFkZXJfRXhpdHxHRF9BMDFfSGVhZGVyX1RpbWVcIixmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgaWYoZGF0YVswXSE9XCJcIiYmZGF0YVswXSE9XCItMVwiJiZkYXRhWzBdIT1udWxsKXtcclxuICAgICAgICAgICAgICAgU2FsZS4kcm9vdC5WSVBTdGF0dXM9KHBhcnNlSW50KGRhdGFbMF0pKTtcclxuICAgICAgICAgICAgICAgVklQQ2xhc3NOYW1lPShwYXJzZUludChkYXRhWzBdKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoVklQQ2xhc3NOYW1lPT1cIjFcIil7XHJcbiAgICAgICAgICAgICAgICAkKFwiI1ZJUFwiKS5hZGRDbGFzcyhcIlZJUDBcIik7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKFZJUENsYXNzTmFtZT09XCIyXCIpe1xyXG4gICAgICAgICAgICAgICAgJChcIiNWSVBcIikuYWRkQ2xhc3MoXCJWSVAxXCIpO1xyXG4gICAgICAgICAgICB9ZWxzZSBpZihWSVBDbGFzc05hbWU9PVwiM1wiKXtcclxuICAgICAgICAgICAgICAgICQoXCIjVklQXCIpLmFkZENsYXNzKFwiVklQMlwiKTtcclxuICAgICAgICAgICAgfWVsc2UgaWYoVklQQ2xhc3NOYW1lPT1cIjRcIil7XHJcbiAgICAgICAgICAgICAgICAkKFwiI1ZJUFwiKS5hZGRDbGFzcyhcIlZJUDNcIik7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgJChcIiNWSVBcIikuYWRkQ2xhc3MoXCJWSVAwXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGRhdGFbMV0hPVwiXCImJmRhdGFbMV0hPVwiLTFcIiYmZGF0YVsxXSE9bnVsbCl7XHJcbiAgICAgICAgICAgICAgICBTYWxlLiRyb290LmxvZ2luU3RhdHVzPWRhdGFbMV07XHJcbiAgICAgICAgICAgICAgICBsb2dpblN0YXR1cz1kYXRhWzFdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGxvZ2luU3RhdHVzPT1cIjFcIil7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmxvZ2luX3N0YXR1c1wiKS5jc3MoXCJkaXNwbGF5XCIsXCJpbmxpbmUtYmxvY2tcIik7XHJcbiAgICAgICAgICAgIH0gXHJcbiAgICAgICAgICAgIGlmKGRhdGFbMl0hPVwiXCImJmRhdGFbMl0hPVwiLTFcIiYmZGF0YVsyXSE9bnVsbCl7XHJcbiAgICAgICAgICAgICAgICBTYWxlLiRyb290LmV4aXRTdGF0dXM9ZGF0YVsyXTtcclxuICAgICAgICAgICAgICAgIGV4aXRTdGF0dXM9ZGF0YVsyXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZihleGl0U3RhdHVzPT1cIjFcIil7XHJcbiAgICAgICAgICAgICAgICQoXCIuYnRuX2V4aXRcIikuY3NzKFwiZGlzcGxheVwiLFwiaW5saW5lLWJsb2NrXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGRhdGFbM10hPVwiXCImJmRhdGFbM10hPVwiLTFcIiYmZGF0YVszXSE9bnVsbCl7XHJcbiAgICAgICAgICAgICAgICBTYWxlLiRyb290LnRpbWVTdGF0dXM9ZGF0YVszXTtcclxuICAgICAgICAgICAgICAgIHRpbWVTdGF0dXM9ZGF0YVszXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZih0aW1lU3RhdHVzPT1cIjFcIil7XHJcbiAgICAgICAgICAgICAgICAkKFwiI0NvdW50RG93blwiKS5jc3MoXCJkaXNwbGF5XCIsXCJpbmxpbmUtYmxvY2tcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVtYWlsZlwiKS5vbmNsaWNrPW9uRW1haWw7XHJcbiAgICAgICAgZnVuY3Rpb24gb25FbWFpbCAoKSB7XHJcbiAgICAgICAgICAgIFNhbGUuJHJvb3QuJGVtaXQoJ3NhbGUnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fZXhpdFwiKS5vbmNsaWNrPW9uRXhpdDtcclxuICAgICAgICBmdW5jdGlvbiBvbkV4aXQgKCkge1xyXG4gICAgICAgICAgICAvL+eCueWHu+mAgOWHuuaMiemSriDmoIfor4Yg5Li65byC5bi457uI5q2iXHJcbiAgICAgICAgICAgIHNldFZhcihcIkdEX0EwMV9FeGNlcGlvbkhhbmRsaW5nXCIsJ0YnKTtcclxuICAgICAgICAgICAgQ2hhbmdlUGFnZShcIi4vY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1RyYWRlRmluaXNoVGlwLmh0bWxcIilcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG59XHJcbjwvc2NyaXB0PlxyXG48c3R5bGUgc2NvcGVkPlxyXG4gICAgLmJie1xyXG4gICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgIHotaW5kZXg6IDEwMDI7XHJcbiAgICAgIC13ZWJraXQtYW5pbWF0aW9uOiBjbG9ja3dpc2UgNXMsIG15bW92ZSA1cztcclxuICAgICAgYW5pbWF0aW9uOiBjbG9ja3dpc2UgNXMsIG15bW92ZSA1cztcclxuICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgICAuYmIgaW1nIHtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xyXG4gICAgICB3aWR0aDogMzAwcHg7XHJcbiAgICAgIGhlaWdodDogMzAwcHg7XHJcbiAgICAgIC8qKiovXHJcbiAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgIGFuaW1hdGlvbjogY2hhbmdlIDVzLCBteWxvZ28gMC42cyAgNS4xcyA0IGFsdGVybmF0ZTtcclxuICAgICAgLW1vei1hbmltYXRpb246IGNoYW5nZSA1cywgbXlsb2dvIDAuNnMgIDUuMXMgNCBhbHRlcm5hdGU7XHJcbiAgICAgIC13ZWJraXQtYW5pbWF0aW9uOiBjaGFuZ2UgNXMsIG15bG9nbyAwLjZzICA1LjFzIDQgYWx0ZXJuYXRlO1xyXG4gICAgICAtby1hbmltYXRpb246IGNoYW5nZSA1cywgbXlsb2dvIDAuNnMgIDUuMXMgNCBhbHRlcm5hdGU7XHJcblxyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xyXG4gICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcclxuICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xyXG4gICAgICAtby10cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xyXG4gICAgICAtbW96LXRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7XHJcbiAgICAgIC8qKiovXHJcbiAgICB9XHJcbiAgICBALXdlYmtpdC1rZXlmcmFtZXMgY2xvY2t3aXNle1xyXG4gICAgICAwJSAgeyAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpIDsgIH1cclxuICAgICAgMTAwJXsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7IH1cclxuICAgIH1cclxuICAgIEBrZXlmcmFtZXMgY2xvY2t3aXNlIHtcclxuICAgICAgMCUgIHsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKSA7ICB9XHJcbiAgICAgIDEwMCV7IC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpOyB9XHJcbiAgICB9XHJcbiAgICBALXdlYmtpdC1rZXlmcmFtZXMgbXltb3Zle1xyXG4gICAgICBmcm9tIHtcclxuICAgICAgICAgIHRvcDogMTAlO1xyXG4gICAgICAgICAgbGVmdDogNzUlO1xyXG4gICAgICB9XHJcbiAgICAgIHRvIHtcclxuICAgICAgICAgIHRvcDogNjUlO1xyXG4gICAgICAgICAgbGVmdDogMSU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIEBrZXlmcmFtZXMgbXltb3ZlIHtcclxuICAgICAgZnJvbSB7XHJcbiAgICAgICAgICB0b3A6IDEwJTtcclxuICAgICAgICAgIGxlZnQ6IDc1JTtcclxuICAgICAgfVxyXG4gICAgICB0byB7XHJcbiAgICAgICAgICB0b3A6IDY1JTtcclxuICAgICAgICAgIGxlZnQ6IDElO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAvKiovXHJcbiAgICBAa2V5ZnJhbWVzIGNoYW5nZXtcclxuICAgICAgICBmcm9tIHtcclxuICAgICAgICAgIHdpZHRoOiAwcHg7XHJcbiAgICAgICAgICBoZWlnaHQ6IDBweDtcclxuICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRvIHtcclxuICAgICAgICAgIHdpZHRoOiAzMDBweDtcclxuICAgICAgICAgIGhlaWdodDogMzAwcHg7XHJcbiAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIEBrZXlmcmFtZXMgbXlsb2dve1xyXG4gICAgICAgIGZyb20ge1xyXG4gICAgICAgICAgbGVmdCA6IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRvIHtcclxuICAgICAgICAgIGxlZnQ6IC0yMHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKi9cclxuPC9zdHlsZT5cclxuXHJcblxyXG4iLCI8dGVtcGxhdGU+XHJcbjxkaXYgY2xhc3M9XCJ4LW1vZGFsXCI+XHJcbiAgICA8cCBjbGFzcz1cIm1vZGFsX3RpcFwiPnt7dGl0bGV9fTwvcD5cclxuICAgIDxkaXYgaWQ9XCJtb2RhbF9Db3VudERvd25cIiBjbGFzcz1cIm1vZGFsX3RpbWVcIj57e3RpbWVydW59fTwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cIm1vZGFsX2J0bmJveFwiPlxyXG4gICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYmFja2J0blwiIGlkPVwibW9kYWxfYnRuX2JhY2tcIiBAY2xpY2s9XCJvbkJhY2tcIj57e2JhY2tOdG5OYW1lfX08L2J1dHRvbj5cclxuICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG5cIiBpZD1cIm1vZGFsX2J0bl9zdXJlXCIgQGNsaWNrPVwib25TdXJlXCI+e3tzdXJlTnRuTmFtZX19PC9idXR0b24+XHJcbiAgICA8L2Rpdj5cclxuPC9kaXY+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5pbXBvcnQgeyBtYXBTdGF0ZSAsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4J1xyXG5cclxudmFyIGludGVydmFsO1xyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBwcm9wczogW1widGl0bGVcIixcInRpbWVvdXRcIl0sXHJcbiAgICBkYXRhICgpIHtcclxuICAgICAgICByZXR1cm57XHJcbiAgICAgICAgICAgIGJhY2tOdG5OYW1lOlwi5ZCmXCIsXHJcbiAgICAgICAgICAgIHN1cmVOdG5OYW1lOlwi5pivXCIsXHJcbiAgICAgICAgICAgIHRpbWVydW46dGhpcy50aW1lb3V0XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGNvbXB1dGVkOiB7XHJcbiAgICAgICAgLi4ubWFwU3RhdGUoW1wicG9vbFwiXSlcclxuICAgIH0sXHJcbiAgICBtZXRob2RzIDoge1xyXG4gICAgICAgIG9uQmFjayAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xlYXJUaW1lKCk7XHJcbiAgICAgICAgICAgIHRoaXMub25DYW5jZWwoKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25TdXJlICgpIHtcclxuICAgICAgICAgICAgdGhpcy5jbGVhclRpbWUoKTtcclxuICAgICAgICAgICAgdGhpcy5vbkNvbnRpbnVlKClcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNldFRpbWVIdG1sKCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnRpbWVydW4pO1xyXG4gICAgICAgICAgICB0aGlzLnRpbWVydW4gLT0gMTtcclxuICAgICAgICAgICAgaWYodGhpcy50aW1lcnVuIDw9IDApXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJUaW1lKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uQmFjaygpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBzdGFydFRpbWUoKSB7XHJcbiAgICAgICAgICAgIC8v5qih5oCB5qGG5YCS6K6h5pe2XHJcbiAgICAgICAgICAgIGlmKGlzTmFOKHRoaXMudGltZXJ1bikgfHwgdGhpcy50aW1lcnVuIDw9IDApe1xyXG4gICAgICAgICAgICAgICAgdGhpcy50aW1lcnVuID0gMTA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCh0aGlzLnNldFRpbWVIdG1sLDEwMDApO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2xlYXJUaW1lKCkge1xyXG4gICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsKTtcclxuICAgICAgICAgICAgdGhpcy50aW1lcnVuID0gXCJcIjtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC4uLm1hcEFjdGlvbnMoWydpbml0UG9vbCcsICdmZXRjaCcsICdzdWJtaXQnLCAnb25DYW5jZWwnLCAnb25Db250aW51ZSddKVxyXG4gICAgfSxcclxuICAgIG1vdW50ZWQgKCkge1xyXG4gICAgICAgIHRoaXMuc3RhcnRUaW1lKCk7XHJcbiAgICB9XHJcbn1cclxuPC9zY3JpcHQ+IiwidmFyIF9fdnVlX19vcHRpb25zX18gPSAodHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcImZ1bmN0aW9uXCI/IG1vZHVsZS5leHBvcnRzLm9wdGlvbnM6IG1vZHVsZS5leHBvcnRzKVxuaWYgKF9fdnVlX19vcHRpb25zX18uZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlaWZ5XSBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgYW5kIHNob3VsZCBiZSBkZWZpbmVkIGluIHBsYWluIGpzIGZpbGVzIHVzaW5nIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuX192dWVfX29wdGlvbnNfXy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2JyxbX2MoJ3gtaGVhZGVyJyksX3ZtLl92KFwiIFwiKSxfYygnbWFpbicse3N0YXRpY0NsYXNzOlwibWFpblwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiY29udGVudFwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwicGFuZWxcIn0sW192bS5fdChcImRlZmF1bHRcIixbX2MoJ3AnLHtzdGF0aWNDbGFzczpcInRpdGxlXCJ9LFtfdm0uX3YoXCLor7flrprliLbmmL7npLrlhoXlrrnjgILjgILjgIJcIildKV0pXSwyKV0pXSldLDEpfVxuX192dWVfX29wdGlvbnNfXy5zdGF0aWNSZW5kZXJGbnMgPSBbXVxuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkgeyAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgdHJ1ZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LTBlMDhhYjU0XCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi0wZTA4YWI1NFwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9XG59KSgpfSIsIjx0ZW1wbGF0ZT5cclxuICAgIDxoZWFkZXIgY2xhc3M9XCJoZWFkZXJcIj5cclxuICAgICAgICA8ZGl2PiA8c3BhbiBjbGFzcz1cImhlYWRlcl90ZXN0XCIgPjxhIEBjbGljaz1cIm9uRGVidWdcIj57e3BhZ2VDbnR9fTwvYT48L3NwYW4+PC9kaXY+XHJcbiAgICAgICAgPCEtLVxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJpbnN1cmFuY2VcIiBAY2xpY2s9XCJvbkluc3VyYW5jZVwiPjwvZGl2PlxyXG4gICAgICAgIC0tPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJoZWFkZXJfcmlnaHRhcmVhXCI+XHJcbiAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCIgY2xhc3M9XCJlbWFpbGZcIiBAY2xpY2s9XCJvbkVtYWlsXCI+PHNwYW4+PC9zcGFuPjwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGlkPVwiVklQXCI+PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzZWFyY2htZW51XCIgIGlkPVwiYnVzX3NlYXJjaFwiPjwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibG9naW5fc3RhdHVzXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidG5fZXhpdCBidG5fZXhpdERpc2JcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIiBAY2xpY2sgPVwib25RdWl0XCIgaWQ9XCJidG5fcXVpdFwiPjwvZGl2PlxyXG4gICAgICAgICAgICA8IS0t5YCS6K6h5pe2IC0tPlxyXG4gICAgICAgICAgICA8ZGl2IGlkPVwiQ291bnREb3duXCIgY2xhc3M9XCJ0aW1lXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+PC9kaXY+XHJcbiAgICAgICAgICAgIDwhLS08aW1nIGlkPVwiY2FyZF9zdGF0dXNcIiBzcmM9XCJpbWcv5pyq6K+75Y2hLnBuZ1wiLz4tLT5cclxuICAgICAgICAgICBcclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvaGVhZGVyPlxyXG5cclxuPC90ZW1wbGF0ZT5cclxuPHNjcmlwdD5cclxuaW1wb3J0IHsgbWFwU3RhdGUsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4J1xyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBkYXRhKCl7XHJcbiAgICAgICAgcmV0dXJue1xyXG4gICAgICAgICAgICBnZXRLZXlzOltcIkdEX0EwMV9FeGNlcGlvbkhhbmRsaW5nXCJdLFxyXG4gICAgICAgICAgICBzZXRLZXlzOltcIkdEX0EwMV9FeGNlcGlvbkhhbmRsaW5nXCJdXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGNvbXB1dGVkOiB7XHJcbiAgICAgICAgY291bnRUZXh0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLiRyb290LmNvdW50RG93biA9PSAwID8gJycgOiB0aGlzLiRyb290LmNvdW50RG93blxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcGFnZUNudDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy4kcm9vdC5wYWdlcy5sZW5ndGhcclxuICAgICAgICB9LFxyXG4gICAgICAgIC4uLm1hcFN0YXRlKFsncG9vbCddKVxyXG4gICAgfSxcclxuICAgIC8qKiBcclxuICAgIHdhdGNoIDoge1xyXG5cdFx0cG9vbCh2YWwpe1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyh2YWwpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kcm9vdC5sb2dpblN0YXR1cz10aGlzLnBvb2wuR0RfQTAxX0lzTG9naW47XHJcbiAgICAgICAgICAgICAgICB0aGlzLiRyb290LlZJUFN0YXR1cz10aGlzLnBvb2wuR0RfQTAxX0NhcmRDbGFzcztcclxuICAgICAgICAgICAgICAgIHRoaXMuJHJvb3QudGltZVN0YXR1cz10aGlzLnBvb2wuR0RfQTAxX0hlYWRlcl9UaW1lO1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kcm9vdC5leGl0U3RhdHVzPXRoaXMucG9vbC5HRF9BMDFfSGVhZGVyX0V4aXQ7XHJcblx0XHR9XHJcblx0fSwgKiovXHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgICAgaW5pdFBhZ2UgKCkge1xyXG4gICAgICAgICAgICB0aGlzLmluaXRQb29sKHRoaXMuJGRhdGEpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkRlYnVnICgpIHtcclxuICAgICAgICAgICAgdGhpcy4kcm9vdC5kZWJ1ZyA9ICF0aGlzLiRyb290LmRlYnVnXHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkVtYWlsKCl7XHJcbiAgICAgICAgICAgIHNldFZhcihcIkdEX1JlYWRFbWFpbFwiLFwiMVwiKTtcclxuICAgICAgICAgICAgdGhpcy5leGl0U2NlbmUoXCJTVEFfU0hPV1BST0RVQ1RcIik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvblF1aXQoKXtcclxuICAgICAgICAgICAgbGV0IGV4Y2VwaW9uID0gdGhpcy5wb29sLkdEX0EwMV9FeGNlcGlvbkhhbmRsaW5nO1xyXG4gICAgICAgICAgICBpZihleGNlcGlvbiAhPSAnRicpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wb29sLkdEX0EwMV9FeGNlcGlvbkhhbmRsaW5nID0gJ0YnO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zdWJtaXQoW1wiR0RfQTAxX0V4Y2VwaW9uSGFuZGxpbmdcIl0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkluc3VyYW5jZSgpe1xyXG4gICAgICAgICAgICB0aGlzLmV4aXRTY2VuZShcIlNUQV9JTlNVUkFOQ0VcIik7XHJcbiAgICAgICAgfSxcclxuICAgICAgIC4uLm1hcEFjdGlvbnMoWydpbml0UG9vbCcsJ2V4aXRTY2VuZScsJ3N1Ym1pdCddKVxyXG4gICAgfSxcclxuICAgIG1vdW50ZWQgKCkge1xyXG4gICAgICAgIHRoaXMuaW5pdFBhZ2UoKTtcclxuICAgICAgICB2YXIgdm09dGhpcztcclxuICAgICAgICB2YXIgVklQU3RhdHVzPSB0aGlzLiRyb290LlZJUFN0YXR1cztcclxuICAgICAgICB2YXIgbG9naW5TdGF0dXM7XHJcbiAgICAgICAgbG9naW5TdGF0dXM9dGhpcy4kcm9vdC5sb2dpblN0YXR1cztcclxuICAgICAgICB2YXIgdGltZVN0YXR1cztcclxuICAgICAgICB0aW1lU3RhdHVzPSB0aGlzLiRyb290LnRpbWVTdGF0dXM7XHJcbiAgICAgICAgdmFyIGV4aXRTdGF0dXM7XHJcbiAgICAgICAgZXhpdFN0YXR1cz0gdGhpcy4kcm9vdC5leGl0U3RhdHVzO1xyXG4gICAgICAgIHZhciBWSVBDbGFzc05hbWU7XHJcbiAgICAgICAgRGF0YVRvb2xzLmdldChcIkdEX0EwMV9DYXJkQ2xhc3N8R0RfQTAxX0lzTG9naW58R0RfQTAxX0hlYWRlcl9FeGl0fEdEX0EwMV9IZWFkZXJfVGltZXxHRF9BMDFfVHJhbnNfVGFnZmxnfEdEX0EwMV9UcmFuc19TYWxlUHJvZFN1bXxHRF9NYXJrZXRpbmdBbGxOdW1iZXJ8R0RfQTAxX0NvZFBkYnJlZWRcIixmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgaWYoZGF0YVswXSE9XCJcIiYmZGF0YVswXSE9XCItMVwiJiZkYXRhWzBdIT1udWxsKXtcclxuICAgICAgICAgICAgICAgIHZtLiRyb290LlZJUFN0YXR1cz1kYXRhWzBdO1xyXG4gICAgICAgICAgICAgICAgVklQQ2xhc3NOYW1lPShwYXJzZUludChkYXRhWzBdKSk7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgVklQQ2xhc3NOYW1lPXBhcnNlSW50KFZJUFN0YXR1cyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoVklQQ2xhc3NOYW1lPT1cIjFcIil7XHJcbiAgICAgICAgICAgICAgICAkKFwiI1ZJUFwiKS5hZGRDbGFzcyhcIlZJUDBcIik7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKFZJUENsYXNzTmFtZT09XCIyXCIpe1xyXG4gICAgICAgICAgICAgICAgJChcIiNWSVBcIikuYWRkQ2xhc3MoXCJWSVAxXCIpO1xyXG4gICAgICAgICAgICB9ZWxzZSBpZihWSVBDbGFzc05hbWU9PVwiM1wiKXtcclxuICAgICAgICAgICAgICAgICQoXCIjVklQXCIpLmFkZENsYXNzKFwiVklQMlwiKTtcclxuICAgICAgICAgICAgfWVsc2UgaWYoVklQQ2xhc3NOYW1lPT1cIjRcIil7XHJcbiAgICAgICAgICAgICAgICAkKFwiI1ZJUFwiKS5hZGRDbGFzcyhcIlZJUDNcIik7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgJChcIiNWSVBcIikuYWRkQ2xhc3MoXCJWSVAwXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGRhdGFbMV0hPVwiXCImJmRhdGFbMV0hPVwiLTFcIiYmZGF0YVsxXSE9bnVsbCl7XHJcbiAgICAgICAgICAgICAgICB2bS4kcm9vdC5sb2dpblN0YXR1cz1kYXRhWzFdO1xyXG4gICAgICAgICAgICAgICAgbG9naW5TdGF0dXM9ZGF0YVsxXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZihsb2dpblN0YXR1cz09XCIxXCIpe1xyXG4gICAgICAgICAgICAgICAgJChcIi5sb2dpbl9zdGF0dXNcIikuY3NzKFwiZGlzcGxheVwiLFwiaW5saW5lLWJsb2NrXCIpO1xyXG4gICAgICAgICAgICB9IFxyXG4gICAgICAgICAgICBpZihkYXRhWzJdIT1cIlwiJiZkYXRhWzJdIT1cIi0xXCImJmRhdGFbMl0hPW51bGwpe1xyXG4gICAgICAgICAgICAgICAgdm0uJHJvb3QuZXhpdFN0YXR1cz1kYXRhWzJdO1xyXG4gICAgICAgICAgICAgICAgZXhpdFN0YXR1cz1kYXRhWzJdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGV4aXRTdGF0dXM9PVwiMVwiKXtcclxuICAgICAgICAgICAgICAgJChcIiNidG5fcXVpdFwiKS5jc3MoXCJkaXNwbGF5XCIsXCJpbmxpbmUtYmxvY2tcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoZGF0YVszXSE9XCJcIiYmZGF0YVszXSE9XCItMVwiJiZkYXRhWzNdIT1udWxsKXtcclxuICAgICAgICAgICAgICAgIHZtLiRyb290LnRpbWVTdGF0dXM9ZGF0YVszXTtcclxuICAgICAgICAgICAgICAgIHRpbWVTdGF0dXM9ZGF0YVszXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZih0aW1lU3RhdHVzPT1cIjFcIil7XHJcbiAgICAgICAgICAgICAgICQoXCIjQ291bnREb3duXCIpLmNzcyhcImRpc3BsYXlcIixcImlubGluZS1ibG9ja1wiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvL1wiXCIgIT0gZGF0YVs2XSAmJiB1bmRlZmluZWQgIT0gZGF0YVs2XSAmJiBcIk5cIiA9PSBkYXRhWzRdIFxyXG4gICAgICAgICAgICAvLyAgICB8fChcIk5cIiAhPSBkYXRhWzRdICYmIFwiXCIgIT0gZGF0YVs2XSAmJiB1bmRlZmluZWQgIT0gZGF0YVs2XSAmJiBkYXRhWzddLnRyaW0oKS5sZW5ndGggPiAwKVxyXG4gICAgICAgICAgICBpZiAoZGF0YVsxXSA9PSBcIjFcIil7XHJcbiAgICAgICAgICAgICAgICAvL+aYr+ebruagh+WuouaIt+S4lOacieiQpemUgOS6p+WTgVxyXG4gICAgICAgICAgICAgICAgaWYocGFyc2VJbnQoZGF0YVs2XSkgPj0gMSlcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAvL+iQpemUgOS6p+WTgeaVsOmHjz49MeWImeWPr+eCueWHu0VtYWls5Zu+54mHXHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5lbWFpbGZcIikuY2hpbGRyZW4oKS5odG1sKGRhdGFbNl0pO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuZW1haWxmXCIpLmNzcyhcImRpc3BsYXlcIixcImlubGluZS1ibG9ja1wiKTsgIFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuZW1haWxmXCIpLmNoaWxkcmVuKCkuaHRtbChcIlwiKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLmVtYWlsZlwiKS5jc3MoXCJkaXNwbGF5XCIsXCJub25lXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7ICAgICAgXHJcbiAgICB9XHJcbiAgXHJcbn1cclxuPC9zY3JpcHQ+XHJcbiIsIjxzdHlsZSBzY29wZWQ+XHJcbi5tYW55LWRpYWxvZyB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB6LWluZGV4OiAxMDAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDYyJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQwLDI0MCwyNDAsMSk7XHJcbiAgICBjb2xvcjogIzY2NjtcclxuICAgIGZvbnQtc2l6ZTogMzBweDtcclxufVxyXG4ubWFueS1ib2R5IHtcclxuICAgIG1hcmdpbjogMTBweCAwO1xyXG59XHJcbi5tYW55LWZvb3RlciB7XHJcbiAgICBjbGVhcjogbGVmdDtcclxuICAgIG1hcmdpbjogMjBweCAwO1xyXG59XHJcbnVsI2NvbnRlbnQge1xyXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4jY29udGVudCBsaSB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICBtYXJnaW46IDE2cHggNXB4O1xyXG59XHJcblxyXG5saSA+IGEge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbn1cclxuLmNhbmNhbGJ0biwuYmFja2J0bnsgXHJcbiAgICBtYXJnaW46MjBweCAwIDAgMDtcclxuICAgIGJhY2tncm91bmQ6bm9uZTtcclxuICAgIGNvbG9yOiMzMzM7XHJcbn1cclxuLnNlbGVjdGl0bGV7ICAgIFxyXG4gICAgbWFyZ2luOjAgMzAlO1xyXG4gICAgZm9udC1zaXplOjNyZW07XHJcbn1cclxuLm1hbnktaGVhZGVyeyAgIFxyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbn1cclxuXHJcbjwvc3R5bGU+XHJcblxyXG5cclxuPHRlbXBsYXRlPlxyXG4gIDxkaXYgY2xhc3M9XCJtYW55LWRpYWxvZ1wiIHYtc2hvdz1cInNob3dcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJtYW55LWhlYWRlclwiPlxyXG4gICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gY2FuY2FsYnRuXCIgQGNsaWNrPVwib25DYW5jZWxcIj7lj5bmtog8L2J1dHRvbj5cclxuICAgICAgICA8c3BhbiBjbGFzcz0nc2VsZWN0aXRsZSc+6K+36YCJ5oupe3t0aXRsZX19PC9zcGFuPlxyXG4gICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYmFja2J0blwiIEBjbGljaz1cIm9uVXBcIiB2LXNob3c9XCJzaG93VXBcIj7ov5Tlm548L2J1dHRvbj5cclxuICAgICAgICBcclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cIm1hbnktYm9keVwiPlxyXG4gICAgICAgIDx1bCBpZD1cImNvbnRlbnRcIj5cclxuICAgICAgICAgICAgPGxpIHYtZm9yPVwiKGl0ZW0sIGluZGV4KSBpbiBjdXJQYWdlXCIgOmtleT1cIml0ZW0uTkFNXCI+PGEgQGNsaWNrPVwib25DaG9vc2UoaW5kZXgsIGl0ZW0pXCI+e3tpdGVtLk5BTX19PC9hPjwvbGk+XHJcbiAgICAgICAgPC91bD5cclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cIm1hbnktZm9vdGVyXCI+XHJcbiAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIEBjbGljaz1cIm9uUHJldlwiIHYtc2hvdz1cInNob3dQcmV2XCI+5LiK5LiA6aG1PC9idXR0b24+XHJcbiAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIEBjbGljaz1cIm9uTmV4dFwiIHYtc2hvdz1cInNob3dOZXh0XCI+5LiL5LiA6aG1PC9idXR0b24+XHJcbiAgICA8L2Rpdj5cclxuICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIHByb3BzOiB7XHJcbiAgICAgICAgc2hvdzoge1xyXG4gICAgICAgICAgICB0eXBlOiBCb29sZWFuLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiBmYWxzZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdGl0bGU6IHtcclxuICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiBcIumhueebrlwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICB1cDoge1xyXG4gICAgICAgICAgICB0eXBlOiBCb29sZWFuLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiBmYWxzZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICB0eXBlOiBBcnJheSxcclxuICAgICAgICAgICAgZGVmYXVsdDogW11cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgZGF0YSAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcGFnZTogMFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBjb21wdXRlZDoge1xyXG4gICAgICAgIGN1clBhZ2U6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0YS5zbGljZSh0aGlzLnBhZ2UqMTUsICh0aGlzLnBhZ2UrMSkqMTUpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBzaG93TmV4dDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kYXRhLmxlbmd0aCA+ICh0aGlzLnBhZ2UrMSkqMTVcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNob3dQcmV2OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnBhZ2UgPiAwXHJcbiAgICAgICAgfSxcclxuICAgICAgICBzaG93VXA6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMudXBcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICAgIG9uVXAgKCkge1xyXG4gICAgICAgICAgICB0aGlzLiRlbWl0KCd1cCcpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBvblByZXYgKCkge1xyXG4gICAgICAgICAgICB0aGlzLnBhZ2UgLT0gMVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25OZXh0ICgpIHtcclxuICAgICAgICAgICAgdGhpcy5wYWdlICs9IDFcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uQ2FuY2VsICgpIHtcclxuICAgICAgICAgICAgdGhpcy4kZW1pdCgnY2FuY2VsJylcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uQ2hvb3NlIChpbmRleCwgaXRlbSkge1xyXG4gICAgICAgICAgICB0aGlzLiRlbWl0KCdjb25maXJtJywgaW5kZXgsIGl0ZW0pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8c3R5bGUgc2NvcGVkPlxyXG4uYWxsLWxldmVsIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHotaW5kZXg6IDEwMDE7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5tdWx0aS1sZXZlbCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDEwJTtcclxuICAgIGxlZnQ6IDYlO1xyXG4gICAgd2lkdGg6IDg4JTtcclxuICAgIGhlaWdodDogODglO1xyXG4gICAgZm9udC1zaXplOiAzMHB4O1xyXG59XHJcbi5sZXZlbC0xLCAubGV2ZWwtMiwgLmxldmVsLTMge1xyXG4gICAgbWFyZ2luOiAxMHB4IDA7XHJcbn1cclxuXHJcbi5sZXZlbC1oZWFkZXIge1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG4ubGV2ZWwtMSB7XHJcbiAgICBtYXgtaGVpZ2h0OiA4NSU7XHJcbiAgICBoZWlnaHQ6IDg1MHB4O1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbi5sZXZlbC0yLCAubGV2ZWwtMyB7XHJcbiAgICBtYXgtaGVpZ2h0OiA4NSU7XHJcbiAgICBoZWlnaHQ6IDg1MHB4O1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbi5sZXZlbC1leHBhbmQgeyAgLyog5YWo5omp5bGV5qih5byPICovXHJcbiAgICB3aWR0aDogOTglO1xyXG59XHJcblxyXG4ubGV2ZWwtbGVmdCB7ICAgIC8qIOS4pOWIl+aooeW8jyAqL1xyXG4gICAgd2lkdGg6IDI1JTtcclxufVxyXG4ubGV2ZWwtcmlnaHQge1xyXG4gICAgd2lkdGg6IDc0JTtcclxufVxyXG5cclxuLmxldmVsLTEgPiB1bCwgLmxldmVsLTIgPiB1bCwgLmxldmVsLTMgPiB1bCB7XHJcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5jb2xzLTEge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogOTYlO1xyXG4gICAgbWFyZ2luOiAwIDVweDtcclxufVxyXG4uY29scy0yIHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDQ4JTtcclxuICAgIG1hcmdpbjogMCA1cHg7XHJcbn1cclxuLmNvbHMtMyB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICBtYXJnaW46IDAgNXB4O1xyXG59XHJcbi5jb2xzLTQge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogMjQlO1xyXG4gICAgbWFyZ2luOiAwIDVweDtcclxufVxyXG5cclxuLmxldmVsLWl0ZW0ge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgcGFkZGluZzogMTJweCAwO1xyXG4gICAgbWFyZ2luOiAwIDE2cHg7XHJcbn1cclxuLnNlbGVjdGl0bGV7ICAgIFxyXG4gICAgbWFyZ2luOjAgMTJweDtcclxuICAgIGZvbnQtc2l6ZTozcmVtO1xyXG59XHJcblxyXG4udXAge1xyXG4gICAgbWFyZ2luOiA4cHggMDtcclxufVxyXG4uY2xvc2VkIHtcclxuICAgIG1hcmdpbjogNnB4IDZweCAwIDZweDtcclxuICAgIGZsb2F0OiByaWdodDtcclxufVxyXG4uaGVhZGVyLXJpZ2h0IHtcclxuICAgIGZsb2F0OiByaWdodDtcclxufVxyXG4ubGV2ZWwtZmlsdGVyIHtcclxuICAgIG1hcmdpbjogNnB4IDAgMCAwO1xyXG4gICAgZm9udC1zaXplOjIuNnJlbTtcclxufVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LWhlaWdodDogODUwcHgpIHtcclxuICAgIC5tdWx0aS1sZXZlbCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyNnB4O1xyXG4gICAgfVxyXG4gICAgLmxldmVsLTEge1xyXG4gICAgICAgIGhlaWdodDo2MDBweDsgXHJcbiAgICB9XHJcbiAgICAubGV2ZWwtMiwgLmxldmVsLTMge1xyXG4gICAgICAgIGhlaWdodDogNjAwcHg7IFxyXG4gICAgfSAgICBcclxuICAgIC51cCBpbWd7XHJcbiAgICAgICAgd2lkdGg6IDQwcHg7XHJcbiAgICB9ICBcclxufVxyXG48L3N0eWxlPlxyXG5cclxuXHJcbjx0ZW1wbGF0ZT5cclxuPGRpdiBjbGFzcz1cImFsbC1sZXZlbFwiIHYtc2hvdz1cInNob3dcIj5cclxuICA8ZGl2IGNsYXNzPVwibXVsdGktbGV2ZWxcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJsZXZlbC1oZWFkZXJcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZGVyLXJpZ2h0XCI+XHJcbiAgICAgICAgICAgIDwhLS3mgKfog73pl67popg8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgdmFsdWU9XCJhZHZhbmNlZFwiIHYtbW9kZWw9XCJhZHZhbmNlZFwiPjwvaW5wdXQ+LS0+XHJcbiAgICAgICAgICAgIDxpbnB1dCBpZD1cInRleHRGaWx0ZXJcIiB0eXBlPVwidGV4dFwiIGNsYXNzPVwibGV2ZWwtZmlsdGVyXCIgcGxhY2Vob2xkZXI9XCLmn6Xor6Lov4fmu6RcIiA6ZGlzYWJsZWQ9XCJmaWx0ZXJEaXNhYmxlZFwiIHYtbW9kZWw9XCJmaWx0ZXJcIiBAaW5wdXQ9XCJvbkZpbHRlclwiIG9uY2xpY2s9XCJTaG93UGlueWluS0IoJy0xJywnLTEnLCd0ZXh0RmlsdGVyJywnJylcIiBvbmJsdXI9XCJIaWRlS0IoKVwiPjwvaW5wdXQ+XHJcbiAgICAgICAgICAgIDxhIEBjbGljaz1cIm9uQ2FuY2VsXCI+PGltZyBjbGFzcz1cImNsb3NlZFwiIDpzcmM9XCIkcm9vdC5pbWdQYXRoKCdpbWcv6L+U5Zue5oyJ6ZKuLnBuZycpXCI+PC9pbWc+PC9hPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdzZWxlY3RpdGxlJz7or7fpgInmi6l7e3RpdGxlfX3vvJo8L3NwYW4+XHJcbiAgICAgICAgICAgIDxzcGFuIHYtZm9yPVwiKGl0ZW0sIGluZGV4KSBpbiByZXN1bHRcIiA6a2V5PVwiJ3Jlc3VsdC0nK2luZGV4XCI+e3tpdGVtTmFtZShpdGVtKX19IC8gPC9zcGFuPlxyXG4gICAgICAgICAgICA8YSBjbGFzcz1cInVwXCIgdi1zaG93PVwic2hvd1VwXCIgQGNsaWNrPVwib25VcFwiPjxpbWcgOnNyYz1cIiRyb290LmltZ1BhdGgoJ2ltZy/liKDpmaQucG5nJylcIj48L2ltZz48L2E+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImxldmVsLTFcIiA6Y2xhc3M9XCJsZWZ0X2Nsc1wiIHYtc2hvdz1cInNob3dMZXZlbDFcIj4gXHJcbiAgICAgICAgICAgIDx1bD5cclxuICAgICAgICAgICAgICAgIDxsaSA6Y2xhc3M9XCJjb2xzX2Nsc1swXVwiIHYtZm9yPVwiKGl0ZW0sIGluZGV4KSBpbiBmaWx0ZXJEYXRhMVwiIDprZXk9XCInbGV2ZWwxLScraW5kZXhcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YSBAY2xpY2s9XCJvbkNob29zZTEoaW5kZXgsIGl0ZW0pXCIgOmlkPVwiaXRlbUNvZGUoaXRlbSlcIiBjbGFzcz1cImxldmVsLWl0ZW1cIiA6Y2xhc3M9XCJpdGVtLmFjdGl2ZWRcIj57e2l0ZW1OYW1lKGl0ZW0pfX08L2E+XHJcbiAgICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJsZXZlbC0yXCIgOmNsYXNzPVwicmlnaHRfY2xzXCIgdi1zaG93PVwic2hvd0xldmVsMlwiPlxyXG4gICAgICAgICAgICA8dWw+XHJcbiAgICAgICAgICAgICAgICA8bGkgOmNsYXNzPVwiY29sc19jbHNbMV1cIiB2LWZvcj1cIihpdGVtLCBpbmRleCkgaW4gZmlsdGVyRGF0YTJcIiA6a2V5PVwiJ2xldmVsMi0nK2luZGV4XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGEgQGNsaWNrPVwib25DaG9vc2UyKGluZGV4LCBpdGVtKVwiIDppZD1cIml0ZW1Db2RlKGl0ZW0pXCIgY2xhc3M9XCJsZXZlbC1pdGVtXCIgOmNsYXNzPVwiaXRlbS5hY3RpdmVkXCI+e3tpdGVtTmFtZShpdGVtKX19PC9hPlxyXG4gICAgICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgPC91bD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwibGV2ZWwtM1wiIDpjbGFzcz1cInJpZ2h0X2Nsc1wiIHYtc2hvdz1cInNob3dMZXZlbDNcIj5cclxuICAgICAgICAgICAgPHVsPlxyXG4gICAgICAgICAgICAgICAgPGxpIDpjbGFzcz1cImNvbHNfY2xzWzJdXCIgdi1mb3I9XCIoaXRlbSwgaW5kZXgpIGluIGZpbHRlckRhdGEzXCIgOmtleT1cIidsZXZlbDMtJytpbmRleFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxhIEBjbGljaz1cIm9uQ2hvb3NlMyhpbmRleCwgaXRlbSlcIiA6aWQ9XCJpdGVtQ29kZShpdGVtKVwiIGNsYXNzPVwibGV2ZWwtaXRlbVwiIDpjbGFzcz1cIml0ZW0uYWN0aXZlZFwiPnt7aXRlbU5hbWUoaXRlbSl9fTwvYT5cclxuICAgICAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICA8L2Rpdj5cclxuICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIHByb3BzOiB7XHJcbiAgICAgICAgc2hvdzoge1xyXG4gICAgICAgICAgICB0eXBlOiBCb29sZWFuLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiBmYWxzZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdGl0bGU6IHtcclxuICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiBcIumhueebrlwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IEFycmF5LFxyXG4gICAgICAgICAgICBkZWZhdWx0OiBbXVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdmFsdWU6IHtcclxuICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiBcIlwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBwY29kZToge1xyXG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6ICdDT0QnXHJcbiAgICAgICAgfSxcclxuICAgICAgICBwbmFtZToge1xyXG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6ICdOQU0nXHJcbiAgICAgICAgfSxcclxuICAgICAgICBwbGV2ZWw6IHtcclxuICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiAnQydcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbHVtbnM6IHtcclxuICAgICAgICAgICAgdHlwZTogQXJyYXksXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFszLCAzLCAzXX1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgZGF0YSAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbGVmdF9jbHM6IFwibGV2ZWwtZXhwYW5kXCIsXHJcbiAgICAgICAgICAgIHJpZ2h0X2NsczogXCJsZXZlbC1yaWdodFwiLFxyXG4gICAgICAgICAgICBjb2xzX2NsczogdGhpcy5tYWtlQ29sc0Nscyh0aGlzLmNvbHVtbnMpLFxyXG4gICAgICAgICAgICBzaG93TGV2ZWwxOiB0cnVlLFxyXG4gICAgICAgICAgICBzaG93TGV2ZWwyOiBmYWxzZSxcclxuICAgICAgICAgICAgc2hvd0xldmVsMzogZmFsc2UsXHJcbiAgICAgICAgICAgIGRhdGEyOiBbXSxcclxuICAgICAgICAgICAgZGF0YTM6IFtdLFxyXG4gICAgICAgICAgICBmaWx0ZXI6ICcnLFxyXG4gICAgICAgICAgICBmaWx0ZXIxOiAnJyxcclxuICAgICAgICAgICAgZmlsdGVyMjogJycsXHJcbiAgICAgICAgICAgIGZpbHRlcjM6ICcnLFxyXG4gICAgICAgICAgICByZXN1bHQ6IFtdLFxyXG4gICAgICAgICAgICBhZHZhbmNlZDogZmFsc2UsXHJcbiAgICAgICAgICAgIGFkdkRhdGE6IG51bGxcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgY29tcHV0ZWQ6IHtcclxuICAgICAgICBkYXRhMTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5hZHZhbmNlZCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuYWR2RGF0YVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBmaWx0ZXJEYXRhMTogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRhdGExLmZpbHRlcihpdGVtID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmZpbHRlcjEgPT09ICcnKSByZXR1cm4gdHJ1ZVxyXG4gICAgICAgICAgICAgICAgaWYgKGl0ZW1bdGhpcy5wbmFtZV0uaW5kZXhPZih0aGlzLmZpbHRlcjEpID09IC0xKSByZXR1cm4gZmFsc2VcclxuICAgICAgICAgICAgICAgIGVsc2UgcmV0dXJuIHRydWVcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9LFxyXG4gICAgICAgIGZpbHRlckRhdGEyOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0YTIuZmlsdGVyKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZmlsdGVyMiA9PT0gJycpIHJldHVybiB0cnVlXHJcbiAgICAgICAgICAgICAgICBpZiAoaXRlbVt0aGlzLnBuYW1lXS5pbmRleE9mKHRoaXMuZmlsdGVyMikgPT0gLTEpIHJldHVybiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgZWxzZSByZXR1cm4gdHJ1ZVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZmlsdGVyRGF0YTM6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kYXRhMy5maWx0ZXIoaXRlbSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5maWx0ZXIzID09PSAnJykgcmV0dXJuIHRydWVcclxuICAgICAgICAgICAgICAgIGlmIChpdGVtW3RoaXMucG5hbWVdLmluZGV4T2YodGhpcy5maWx0ZXIzKSA9PSAtMSkgcmV0dXJuIGZhbHNlXHJcbiAgICAgICAgICAgICAgICBlbHNlIHJldHVybiB0cnVlXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSxcclxuICAgICAgICAvLyDliKTmlq3pgInmi6nmmK/lkKbovr7liLDnu4jngrnvvIzmmK/lkKbov5jpnIDopoHovpPlhaXov4fmu6TmnaHku7ZcclxuICAgICAgICBmaWx0ZXJEaXNhYmxlZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5yZXN1bHQubGVuZ3RoID09IDApIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMucmVzdWx0Lmxlbmd0aCA9PSAzKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuICF0aGlzLmhhc0Rvd25MZXZlbCh0aGlzLnJlc3VsdFt0aGlzLnJlc3VsdC5sZW5ndGgtMV0pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHNob3dVcDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZXN1bHQubGVuZ3RoID4gMFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICB3YXRjaDoge1xyXG4gICAgICAgIGRhdGE6IGZ1bmN0aW9uKHZhbCkge1xyXG4gICAgICAgICAgICB0aGlzLm1hcmsoKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uKHZhbCkge1xyXG4gICAgICAgICAgICB0aGlzLm1hcmsoKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYWR2YW5jZWQ6IGZ1bmN0aW9uICh2YWwpIHtcclxuICAgICAgICAgICAgdGhpcy5tYXJrKClcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgY3JlYXRlZCAoKSB7XHJcbiAgICAgICAgdGhpcy5tYXJrKClcclxuICAgIH0sXHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgICAgbWFyayAoKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmFkdmFuY2VkKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1ha2VBZHZhbmNlZCgpXHJcbiAgICAgICAgICAgICAgICB0aGlzLm1hcmtBZHZhbmNlZCgpXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1hcmtSZXN1bHQoKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5tYXJrTGF5b3V0KClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbWFya0FkdmFuY2VkICgpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ21hcmtBZHZhbmNlZCcpXHJcbiAgICAgICAgICAgIHRoaXMubGVmdF9jbHMgPSBcImxldmVsLWV4cGFuZFwiICAgICAgICAgICAgICAgICAgICAgIC8vIOaJqeWxlVxyXG4gICAgICAgICAgICB0aGlzLmNvbHNfY2xzWzBdID0gXCJjb2xzLTJcIjsgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDljZXliJdcclxuICAgICAgICAgICAgdGhpcy5zaG93TGV2ZWwyID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuc2hvd0xldmVsMyA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLmZpbHRlciA9IHRoaXMuZmlsdGVyMSA9ICcnO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbWFya0xheW91dCAoKSB7ICAgIC8vIOagueaNrnJlc3VsdOiuoeeul+mhtemdouW4g+WxgFxyXG4gICAgICAgICAgICBpZih0aGlzLnJlc3VsdFsyXSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kYXRhMyA9IHRoaXMucmVzdWx0WzFdW3RoaXMucGxldmVsXVxyXG4gICAgICAgICAgICAgICAgdGhpcy5tYXJrQWN0aXZlZCh0aGlzLmRhdGEzLCB0aGlzLnJlc3VsdFsyXSlcclxuICAgICAgICAgICAgICAgIHRoaXMubWFya0FjdGl2ZWQodGhpcy5kYXRhLCB0aGlzLnJlc3VsdFswXSlcclxuICAgICAgICAgICAgICAgIHRoaXMubGVmdF9jbHMgPSBcImxldmVsLWxlZnRcIiAgLy8g5pS257ypXHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbHNfY2xzWzBdID0gXCJjb2xzLTFcIjsgIC8vIOaUtue8qeS4uuWNleWIl1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zaG93TGV2ZWwyID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNob3dMZXZlbDMgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5maWx0ZXIgPSB0aGlzLmZpbHRlcjMgPSAnJztcclxuICAgICAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKHRoaXMucmVzdWx0WzFdKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRhdGEyID0gdGhpcy5yZXN1bHRbMF1bdGhpcy5wbGV2ZWxdXHJcbiAgICAgICAgICAgICAgICB0aGlzLm1hcmtBY3RpdmVkKHRoaXMuZGF0YTIsIHRoaXMucmVzdWx0WzFdKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5tYXJrQWN0aXZlZCh0aGlzLmRhdGEsIHRoaXMucmVzdWx0WzBdKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5sZWZ0X2NscyA9IFwibGV2ZWwtbGVmdFwiICAvLyDmlLbnvKlcclxuICAgICAgICAgICAgICAgIHRoaXMuY29sc19jbHNbMF0gPSBcImNvbHMtMVwiOyAgLy8g5pS257yp5Li65Y2V5YiXXHJcbiAgICAgICAgICAgICAgICB0aGlzLnNob3dMZXZlbDIgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zaG93TGV2ZWwzID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZpbHRlciA9IHRoaXMuZmlsdGVyMyA9ICcnO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYodGhpcy5yZXN1bHRbMF0pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubWFya0FjdGl2ZWQodGhpcy5kYXRhLCB0aGlzLnJlc3VsdFswXSlcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMuaGFzRG93bkxldmVsKHRoaXMucmVzdWx0WzBdKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YTIgPSB0aGlzLnJlc3VsdFswXVt0aGlzLnBsZXZlbF1cclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm1hcmtBY3RpdmVkKHRoaXMuZGF0YTIsIFwiXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sZWZ0X2NscyA9IFwibGV2ZWwtbGVmdFwiICAvLyDmlLbnvKlcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbHNfY2xzWzBdID0gXCJjb2xzLTFcIjsgIC8vIOaUtue8qeS4uuWNleWIl1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xldmVsMiA9IHRydWVcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dMZXZlbDMgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyID0gdGhpcy5maWx0ZXIyID0gJydcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sZWZ0X2NscyA9IFwibGV2ZWwtZXhwYW5kXCIgICAgICAgICAgICAgICAgICAgICAgLy8g5omp5bGVXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb2xzX2NscyA9IHRoaXMubWFrZUNvbHNDbHModGhpcy5jb2x1bW5zKTsgICAgIC8vIOWkjeWOn1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xldmVsMiA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xldmVsMyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyID0gdGhpcy5maWx0ZXIxID0gJyc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1hcmtBY3RpdmVkKHRoaXMuZGF0YSwgXCJcIilcclxuICAgICAgICAgICAgICAgIHRoaXMubGVmdF9jbHMgPSBcImxldmVsLWV4cGFuZFwiICAgICAgICAgICAgICAgICAgICAgIC8vIOaJqeWxlVxyXG4gICAgICAgICAgICAgICAgdGhpcy5jb2xzX2NscyA9IHRoaXMubWFrZUNvbHNDbHModGhpcy5jb2x1bW5zKTsgICAgIC8vIOWkjeWOn1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zaG93TGV2ZWwyID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNob3dMZXZlbDMgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyID0gdGhpcy5maWx0ZXIxID0gJydcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbWFrZUNvbHNDbHMgKGNvbCkgeyAvLyDmiopbMywzLDNd5aSE55CG5oiQW1wiY29scy0zXCIsIFwiY29scy0zXCIsIFwiY29scy0zXCJdXHJcbiAgICAgICAgICAgIHJldHVybiBjb2wubWFwKGl0ZW0gPT4geyByZXR1cm4gXCJjb2xzLVwiICsgaXRlbSB9KVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25VcCAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVzdWx0LnBvcCgpXHJcbiAgICAgICAgICAgIHRoaXMubWFya0xheW91dCgpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkNhbmNlbCAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2NhbmNlbCcpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBpdGVtQ29kZSAoaXRlbSkge1xyXG4gICAgICAgICAgICByZXR1cm4gaXRlbVt0aGlzLnBjb2RlXVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaXRlbU5hbWUgKGl0ZW0pIHtcclxuICAgICAgICAgICAgcmV0dXJuIGl0ZW1bdGhpcy5wbmFtZV1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGhhc0Rvd25MZXZlbCAoaXRlbSkgeyAgLy8g5piv5ZCm5pyJ5LiL57qnXHJcbiAgICAgICAgICAgIHJldHVybiBpdGVtLmhhc093blByb3BlcnR5KHRoaXMucGxldmVsKSAmJiBpdGVtW3RoaXMucGxldmVsXS5sZW5ndGggPiAwXHJcbiAgICAgICAgfSxcclxuICAgICAgICBmaW5kUmVzdWx0ICgpIHsgIC8vIOagueaNrnZhbHVl5pCc57SiZGF0Yeiuoeeul3Jlc3VsdFxyXG4gICAgICAgICAgICB0aGlzLnJlc3VsdCA9IFtdXHJcbiAgICAgICAgICAgIGZvcih2YXIgaT0wOyBpIDwgdGhpcy5kYXRhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgaXRlbTAgPSB0aGlzLmRhdGFbaV1cclxuICAgICAgICAgICAgICAgIHRoaXMucmVzdWx0LnB1c2goaXRlbTApXHJcbiAgICAgICAgICAgICAgICBpZihpdGVtMFt0aGlzLnBjb2RlXSA9PT0gdGhpcy52YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5oYXNEb3duTGV2ZWwoaXRlbTApKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yKHZhciBqPTA7IGo8IGl0ZW0wW3RoaXMucGxldmVsXS5sZW5ndGg7IGorKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbTEgPSBpdGVtMFt0aGlzLnBsZXZlbF1bal1cclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXN1bHQucHVzaChpdGVtMSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoaXRlbTFbdGhpcy5wY29kZV0gPT09IHRoaXMudmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHRoaXMuaGFzRG93bkxldmVsKGl0ZW0xKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yKHZhciBrPTA7IGsgPCBpdGVtMVt0aGlzLnBsZXZlbF0ubGVuZ3RoOyBrKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbTIgPSBpdGVtMVt0aGlzLnBsZXZlbF1ba11cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihpdGVtMlt0aGlzLnBjb2RlXSA9PT0gdGhpcy52YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlc3VsdC5wdXNoKGl0ZW0yKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXN1bHQucG9wKClcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlc3VsdC5wb3AoKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBtYXJrUmVzdWx0ICgpIHtcclxuICAgICAgICAgICAgaWYodGhpcy52YWx1ZSA9PT0gXCJcIikgcmV0dXJuXHJcbiAgICAgICAgICAgIHRoaXMuZmluZFJlc3VsdCgpXHJcbiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3Jlc3VsdCcsIHRoaXMucmVzdWx0KVxyXG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMucmVzdWx0KVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbWFya0FjdGl2ZWQgKGRhdGEsIHZhbHVlKSB7XHJcbiAgICAgICAgICAgIGRhdGEuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgICAgICAgICAgIGlmKGl0ZW0gPT09IHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbVtcImFjdGl2ZWRcIl0gPSBcImxldmVsLWFjdGl2ZWRcIlxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtW1wiYWN0aXZlZFwiXSA9IFwibGV2ZWwtbm9ybWFsXCJcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uQ2hvb3NlMSAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgdGhpcy5yZXN1bHQgPSBbaXRlbV1cclxuICAgICAgICAgICAgdGhpcy4kZW1pdCgncmVzdWx0JywgdGhpcy5yZXN1bHQpXHJcbiAgICAgICAgICAgIHRoaXMubWFya0FjdGl2ZWQodGhpcy5kYXRhMSwgdGhpcy5yZXN1bHRbMF0pXHJcbiAgICAgICAgICAgIGlmKHRoaXMuaGFzRG93bkxldmVsKGl0ZW0pKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRhdGEyID0gaXRlbVt0aGlzLnBsZXZlbF1cclxuICAgICAgICAgICAgICAgIHRoaXMubWFya0FjdGl2ZWQodGhpcy5kYXRhMiwgdGhpcy5yZXN1bHRbMV0pXHJcbiAgICAgICAgICAgICAgICB0aGlzLmxlZnRfY2xzID0gXCJsZXZlbC1sZWZ0XCIgIC8vIOaUtue8qVxyXG4gICAgICAgICAgICAgICAgdGhpcy5jb2xzX2Nsc1swXSA9IFwiY29scy0xXCI7ICAvLyDmlLbnvKnkuLrljZXliJdcclxuICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xldmVsMyA9IGZhbHNlXHJcbiAgICAgICAgICAgICAgICB0aGlzLnNob3dMZXZlbDIgPSB0cnVlXHJcbiAgICAgICAgICAgICAgICB0aGlzLmZpbHRlciA9IHRoaXMuZmlsdGVyMiA9ICcnXHJcbiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdjaG9vc2UnLCAwLCBpdGVtKVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sZWZ0X2NscyA9IFwibGV2ZWwtZXhwYW5kXCIgICAgICAgICAgICAgICAgICAgICAgLy8g5omp5bGVXHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbHNfY2xzID0gdGhpcy5tYWtlQ29sc0Nscyh0aGlzLmNvbHVtbnMpOyAgICAgLy8g5aSN5Y6fXHJcbiAgICAgICAgICAgICAgICB0aGlzLnNob3dMZXZlbDMgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnY29uZmlybScsIGluZGV4LCBpdGVtKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkNob29zZTIgKGluZGV4LCBpdGVtKSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVzdWx0ID0gW3RoaXMucmVzdWx0WzBdLCBpdGVtXVxyXG4gICAgICAgICAgICB0aGlzLiRlbWl0KCdyZXN1bHQnLCB0aGlzLnJlc3VsdClcclxuICAgICAgICAgICAgdGhpcy5tYXJrQWN0aXZlZCh0aGlzLmRhdGEyLCB0aGlzLnJlc3VsdFsxXSlcclxuICAgICAgICAgICAgaWYodGhpcy5oYXNEb3duTGV2ZWwoaXRlbSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGF0YTMgPSBpdGVtW3RoaXMucGxldmVsXVxyXG4gICAgICAgICAgICAgICAgdGhpcy5tYXJrQWN0aXZlZCh0aGlzLmRhdGEzLCB0aGlzLnJlc3VsdFsyXSlcclxuICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xldmVsMiA9IGZhbHNlXHJcbiAgICAgICAgICAgICAgICB0aGlzLnNob3dMZXZlbDMgPSB0cnVlXHJcbiAgICAgICAgICAgICAgICB0aGlzLmZpbHRlciA9IHRoaXMuZmlsdGVyMyA9ICcnXHJcbiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdjaG9vc2UnLCAxLCBpdGVtKVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnY29uZmlybScsIGluZGV4LCBpdGVtKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkNob29zZTMgKGluZGV4LCBpdGVtKSB7XHJcbiAgICAgICAgICAgIHRoaXMuJHNldCh0aGlzLnJlc3VsdCwgMiwgaXRlbSkgICAvLyDop6blj5HmlbDnu4R3YWNo6K6h566XXHJcbiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3Jlc3VsdCcsIHRoaXMucmVzdWx0KVxyXG4gICAgICAgICAgICB0aGlzLm1hcmtBY3RpdmVkKHRoaXMuZGF0YTMsIHRoaXMucmVzdWx0WzJdKVxyXG4gICAgICAgICAgICB0aGlzLiRlbWl0KCdjb25maXJtJywgaW5kZXgsIGl0ZW0pXHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkZpbHRlciAoZXZlbnQpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXZlbnQudGFyZ2V0LnZhbHVlKVxyXG4gICAgICAgICAgICBpZiAodGhpcy5yZXN1bHQubGVuZ3RoID09IDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyMSA9IGV2ZW50LnRhcmdldC52YWx1ZVxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucmVzdWx0Lmxlbmd0aCA9PSAxKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZpbHRlcjIgPSBldmVudC50YXJnZXQudmFsdWVcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyMyA9IGV2ZW50LnRhcmdldC52YWx1ZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBmaW5kUmVzdWx0MiAoKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmFkdkRhdGEgPT0gbnVsbCB8fCB0aGlzLnZhbHVlID09PSBcIlwiKSByZXR1cm5cclxuICAgICAgICAgICAgdGhpcy5yZXN1bHQgPSBbXVxyXG4gICAgICAgICAgICBmb3IodmFyIGk9MDsgaSA8IHRoaXMuYWR2RGF0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgdmFyIGl0ZW0wID0gdGhpcy5hZHZEYXRhW2ldXHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlc3VsdC5wdXNoKGl0ZW0wKVxyXG4gICAgICAgICAgICAgICAgaWYoaXRlbTBbdGhpcy5wY29kZV0gPT09IHRoaXMudmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMucmVzdWx0LnBvcCgpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIG1ha2VBZHZhbmNlZCAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZmluZFJlc3VsdDIoKVxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnbWFrZUFkdmFuY2VkJylcclxuICAgICAgICAgICAgdmFyIGV4cGFuZCA9IFtdXHJcbiAgICAgICAgICAgIHZhciBwYXRoID0gW11cclxuICAgICAgICAgICAgZm9yKHZhciBpPTA7IGkgPCB0aGlzLmRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIHZhciBpdGVtMCA9IHRoaXMuZGF0YVtpXVxyXG4gICAgICAgICAgICAgICAgcGF0aC5wdXNoKGl0ZW0wKVxyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5oYXNEb3duTGV2ZWwoaXRlbTApKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yKHZhciBqPTA7IGo8IGl0ZW0wW3RoaXMucGxldmVsXS5sZW5ndGg7IGorKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbTEgPSBpdGVtMFt0aGlzLnBsZXZlbF1bal1cclxuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aC5wdXNoKGl0ZW0xKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZih0aGlzLmhhc0Rvd25MZXZlbChpdGVtMSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcih2YXIgaz0wOyBrIDwgaXRlbTFbdGhpcy5wbGV2ZWxdLmxlbmd0aDsgaysrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW0yID0gaXRlbTFbdGhpcy5wbGV2ZWxdW2tdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aC5wdXNoKGl0ZW0yKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXhwYW5kQWRkKGV4cGFuZCwgcGF0aClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoLnBvcCgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmV4cGFuZEFkZChleHBhbmQsIHBhdGgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aC5wb3AoKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5leHBhbmRBZGQoZXhwYW5kLCBwYXRoKVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcGF0aC5wb3AoKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuYWR2RGF0YSA9IGV4cGFuZFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZXhwYW5kQWRkIChleHBhbmQsIHBhdGgpIHtcclxuICAgICAgICAgICAgdmFyIGkgPSAwXHJcbiAgICAgICAgICAgIHZhciBwcmVwYW5kID0gXCJcIlxyXG4gICAgICAgICAgICB3aGlsZShpIDwgcGF0aC5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgIHByZXBhbmQgPSBwcmVwYW5kICsgcGF0aFtpXVt0aGlzLnBuYW1lXVxyXG4gICAgICAgICAgICAgICAgaSsrXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIGl0ZW0gPSBPYmplY3QuYXNzaWduKHt9LCBwYXRoW2ktMV0pXHJcbiAgICAgICAgICAgIGl0ZW1bdGhpcy5wbmFtZV0gPSBwcmVwYW5kXHJcbiAgICAgICAgICAgIGV4cGFuZC5wdXNoKGl0ZW0pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCJ2YXIgX192dWVpZnlfc3R5bGVfZGlzcG9zZV9fID0gcmVxdWlyZShcInZ1ZWlmeS9saWIvaW5zZXJ0LWNzc1wiKS5pbnNlcnQoXCIvKuS4u+S9k+WMuuWfn+S5i+WvvOiIquWMuuWfnyovXFxyXFxuLm5hdltkYXRhLXYtNzY2NDUyN2Jde1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIGZsb2F0OiBsZWZ0O1xcclxcbiAgICB3aWR0aDogMjklO1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxufVxcclxcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLeWvvOiIqi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xcclxcbi5uYXZidXNbZGF0YS12LTc2NjQ1MjdiXXtcXHJcXG4gICAgbWFyZ2luLXRvcDoxMSU7XFxyXFxufVxcclxcbi5uYXZsaXN0W2RhdGEtdi03NjY0NTI3Yl17XFxyXFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGhlaWdodDogNzAlO1xcclxcbiAgICBtYXJnaW46IDUlIGF1dG87XFxyXFxuICAgIGJhY2tncm91bmQ6IHVybChpbWcvbmF2YmcucG5nKSBuby1yZXBlYXQ7XFxyXFxuICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJSAxMDAlO1xcclxcbn1cXHJcXG4ubmF2bGlzdCBsaVtkYXRhLXYtNzY2NDUyN2Jde1xcclxcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBoZWlnaHQ6IDEyJTtcXHJcXG4gICAgbWFyZ2luOiAxJSBhdXRvO1xcclxcbiAgICBjb2xvcjojRkZGRkZGO1xcclxcbn1cXHJcXG4ubmF2bGlzdCBsaSBzcGFuW2RhdGEtdi03NjY0NTI3Yl17XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG59XFxyXFxuLm5hdmxpc3QgbGkgc3BhbltkYXRhLXYtNzY2NDUyN2JdOmZpcnN0LWNoaWxke1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgICBmb250LXNpemU6IDRyZW07XFxyXFxufVxcclxcbi5idXNOYW1lW2RhdGEtdi03NjY0NTI3Yl17XFxyXFxuICAgIG1hcmdpbi1sZWZ0OiAzNXB4O1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiAwcHg7XFxyXFxuICAgIGNvbG9yOiAjMDA5Njg4O1xcclxcbiAgICBmb250LXNpemU6IDNyZW07XFxyXFxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XFxyXFxufVxcclxcbi5CWltkYXRhLXYtNzY2NDUyN2Jde1xcclxcbiAgICBmb250LXNpemU6IDIuNXJlbTtcXHJcXG59XFxyXFxuLnBhcnQwW2RhdGEtdi03NjY0NTI3Yl17XFxyXFxuICAgIHRvcDogNjVweDtcXHJcXG4gICAgbGVmdDogLTMwcHg7XFxyXFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMC41LDAuNikgc2tldygxNGRlZywxNGRlZyk7XFxyXFxuICAgIG9wYWNpdHk6IDAuNDtcXHJcXG59XFxyXFxuLnBhcnQwMFtkYXRhLXYtNzY2NDUyN2Jde1xcclxcbiAgICB0b3A6IDEwMHB4O1xcclxcbiAgICBsZWZ0OiAzMThweDtcXHJcXG4gICAgZm9udC1zaXplOiAxLjZyZW07XFxyXFxufVxcclxcbi5wYXJ0MVtkYXRhLXYtNzY2NDUyN2Jde1xcclxcbiAgICB0b3A6IDY1cHg7XFxyXFxuICAgIGxlZnQ6IDQwcHg7XFxyXFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMC42NSwgMC44KSBza2V3KDEzZGVnLCA4ZGVnKTtcXHJcXG4gICAgb3BhY2l0eTogMC43O1xcclxcbn1cXHJcXG4ucGFydDAxW2RhdGEtdi03NjY0NTI3Yl17XFxyXFxuICAgIHRvcDogMTAwcHg7XFxyXFxuICAgIGxlZnQ6IDM4NXB4O1xcclxcbiAgICBmb250LXNpemU6IDJyZW07XFxyXFxufVxcclxcbi5hY3RpdmVbZGF0YS12LTc2NjQ1MjdiXXtcXHJcXG4gICAgdG9wOiA4NXB4O1xcclxcbiAgICBsZWZ0OiAxMzBweDtcXHJcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjksIDEuMSkgc2tldygtMWRlZywgMmRlZyk7XFxyXFxuICAgIGNvbG9yOiAjMDA4QjZFO1xcclxcbn1cXHJcXG4uYWN0aXZpbmdbZGF0YS12LTc2NjQ1MjdiXXtcXHJcXG4gICAgdG9wOiAxMDBweDtcXHJcXG4gICAgbGVmdDogNDcwcHg7XFxyXFxuICAgIGZvbnQtc2l6ZTogMy41cmVtO1xcclxcbiAgICBjb2xvcjogIzAwOEI2RTtcXHJcXG59XFxyXFxuLnBhcnQzW2RhdGEtdi03NjY0NTI3Yl17XFxyXFxuICAgIHRvcDogMTA1cHg7XFxyXFxuICAgIGxlZnQ6IDU1cHg7XFxyXFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMC43LDAuOCkgc2tldygtMTBkZWcsLTRkZWcpO1xcclxcbiAgICBvcGFjaXR5OiAwLjg7XFxyXFxufVxcclxcbi5wYXJ0MDNbZGF0YS12LTc2NjQ1MjdiXXtcXHJcXG4gICAgdG9wOiAxMTVweDtcXHJcXG4gICAgbGVmdDogMzg1cHg7XFxyXFxuICAgIGZvbnQtc2l6ZTogMi41cmVtO1xcclxcbn1cXHJcXG4ucGFydDRbZGF0YS12LTc2NjQ1MjdiXXtcXHJcXG4gICAgdG9wOiAxMDBweDtcXHJcXG4gICAgbGVmdDogMHB4O1xcclxcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuNiwwLjUpIHNrZXcoLTE1ZGVnLC0xMmRlZyk7XFxyXFxuICAgIG9wYWNpdHk6IDAuNjtcXHJcXG59XFxyXFxuLnBhcnQwNFtkYXRhLXYtNzY2NDUyN2Jde1xcclxcbiAgICB0b3A6IDExNXB4O1xcclxcbiAgICBsZWZ0OiAzMTBweDtcXHJcXG4gICAgZm9udC1zaXplOiAycmVtO1xcclxcbn1cXHJcXG4ucGFydDVbZGF0YS12LTc2NjQ1MjdiXXtcXHJcXG4gICAgdG9wOiA5MHB4O1xcclxcbiAgICBsZWZ0OiAtOTBweDtcXHJcXG4gICAgb3BhY2l0eTogMC40O1xcclxcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuNCwwLjQpIHNrZXcoLTE1ZGVnLC0xNWRlZyk7XFxyXFxufVxcclxcbi5wYXJ0MDVbZGF0YS12LTc2NjQ1MjdiXXtcXHJcXG4gICAgdG9wOiAxMDVweDtcXHJcXG4gICAgbGVmdDogMjM1cHg7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xcclxcbn1cIilcbnZhciBfX3Z1ZV9fb3B0aW9uc19fID0gKHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJmdW5jdGlvblwiPyBtb2R1bGUuZXhwb3J0cy5vcHRpb25zOiBtb2R1bGUuZXhwb3J0cylcbmlmIChfX3Z1ZV9fb3B0aW9uc19fLmZ1bmN0aW9uYWwpIHtjb25zb2xlLmVycm9yKFwiW3Z1ZWlmeV0gZnVuY3Rpb25hbCBjb21wb25lbnRzIGFyZSBub3Qgc3VwcG9ydGVkIGFuZCBzaG91bGQgYmUgZGVmaW5lZCBpbiBwbGFpbiBqcyBmaWxlcyB1c2luZyByZW5kZXIgZnVuY3Rpb25zLlwiKX1cbl9fdnVlX19vcHRpb25zX18ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX3ZtLl9tKDApfVxuX192dWVfX29wdGlvbnNfXy5zdGF0aWNSZW5kZXJGbnMgPSBbZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ25hdicse3N0YXRpY0NsYXNzOlwibmF2XCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJuYXZidXNcIn0sW19jKCdsYWJlbCcse3N0YXRpY0NsYXNzOlwiYnVzTmFtZVwiLGF0dHJzOntcImlkXCI6XCJidXNOYW1lXCJ9fSksX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcIkJaXCJ9LFtfdm0uX3YoXCLvvIhcIiksX2MoJ2xhYmVsJyx7c3RhdGljQ2xhc3M6XCJjdXJCelwiLGF0dHJzOntcImlkXCI6XCJjdXJCelwifX0pLF92bS5fdihcIi9cIiksX2MoJ2xhYmVsJyx7c3RhdGljQ2xhc3M6XCJhbGxCelwiLGF0dHJzOntcImlkXCI6XCJhbGxCelwifX0pLF92bS5fdihcIu+8iVwiKV0pXSksX3ZtLl92KFwiIFwiKSxfYygndWwnLHtzdGF0aWNDbGFzczpcIm5hdmxpc3RcIixhdHRyczp7XCJpZFwiOlwibWVudS1jb250ZW50XCJ9fSldKX1dXG5fX3Z1ZV9fb3B0aW9uc19fLl9zY29wZUlkID0gXCJkYXRhLXYtNzY2NDUyN2JcIlxuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkgeyAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgdHJ1ZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgbW9kdWxlLmhvdC5kaXNwb3NlKF9fdnVlaWZ5X3N0eWxlX2Rpc3Bvc2VfXylcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LTc2NjQ1MjdiXCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi03NjY0NTI3YlwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9XG59KSgpfSIsIjx0ZW1wbGF0ZT5cclxuICAgIDxkaXYgY2xhc3M9XCJwYWdlXCIgaWQ9XCJwYWdlXCI+XHJcbiAgICAgICAgPGEgdi1zaG93PVwicHJldlNob3dcIiBAY2xpY2s9XCJ0b1BhZ2UoY3VycmVudFBhZ2UtMSlcIiBjbGFzcz1cInByZVBhZ2VcIj7kuIrkuIDpobU8L2E+XHJcbiAgICAgICAgPGEgdi1mb3I9XCJudW0gaW4gcGFnZU51bUxpc3RcIlxyXG4gICAgICAgICAgICAgICAgOmtleT1cIiduJytudW1cIlxyXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJwYWdlX2J0blwiXHJcbiAgICAgICAgICAgICAgICA6Y2xhc3M9XCJ7bm93cGFnZTogbnVtID09IGN1cnJlbnRQYWdlfVwiXHJcbiAgICAgICAgICAgICAgICBAY2xpY2s9XCJ0b1BhZ2UobnVtKVwiPnt7bnVtKzF9fTwvYT5cclxuICAgICAgICA8YSB2LXNob3c9XCJuZXh0U2hvd1wiIEBjbGljaz1cInRvUGFnZShjdXJyZW50UGFnZSsxKVwiIGNsYXNzPVwibmV4dFBhZ2VcIj7kuIvkuIDpobU8L2E+XHJcbiAgICAgICAgPHNwYW4gY2xhc3M9XCJzdW1wYWdlXCI+e3twYWdlT2ZUYWJsZX19PC9zcGFuPlxyXG4gICAgPC9kaXY+XHJcbjwvdGVtcGxhdGU+XHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIHByb3BzOiB7XHJcbiAgICAgICAgdG90YWw6IHtcclxuICAgICAgICAgICAgdHlwZTogTnVtYmVyLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiAwXHJcbiAgICAgICAgfSxcclxuICAgICAgICBwYWdlU2l6ZToge1xyXG4gICAgICAgICAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IDhcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgZGF0YSAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgY3VycmVudFBhZ2U6IDBcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgY29tcHV0ZWQ6IHtcclxuICAgICAgICBwcmV2U2hvdyAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmN1cnJlbnRQYWdlID4gMDtcclxuICAgICAgICB9LFxyXG4gICAgICAgIG5leHRTaG93ICgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucGFnZVNpemUgKiAodGhpcy5jdXJyZW50UGFnZSArIDEpIDwgdGhpcy50b3RhbDtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHBhZ2VOdW1MaXN0ICgpIHtcclxuICAgICAgICAgICAgdmFyIFBhZ2VOdW09NDsvL+WIhumhtemTvuaOpeaOpeaVsCg15LiqKVxyXG4gICAgICAgICAgICB2YXIgUGFnZXNMZW49TWF0aC5jZWlsKHRoaXMudG90YWwvdGhpcy5wYWdlU2l6ZSk7Ly/mgLvpobXmlbBcclxuICAgICAgICAgICAgdmFyIFBhZ2VOdW1fMj1QYWdlTnVtJTI9PTA/TWF0aC5jZWlsKFBhZ2VOdW0vMikrMTpNYXRoLmNlaWwoUGFnZU51bS8yKTtcclxuICAgICAgICAgICAgdmFyIFBhZ2VOdW1fMz1QYWdlTnVtJTI9PTA/TWF0aC5jZWlsKFBhZ2VOdW0vMik6TWF0aC5jZWlsKFBhZ2VOdW0vMikrMTtcclxuICAgICAgICAgICAgdmFyIHN0YXJ0UGFnZSxlbmRQYWdlO1xyXG4gICAgICAgICAgICBpZiAoUGFnZU51bT49UGFnZXNMZW4pIHtcclxuICAgICAgICAgICAgICAgIHN0YXJ0UGFnZT0wO2VuZFBhZ2U9UGFnZXNMZW4tMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLmN1cnJlbnRQYWdlPFBhZ2VOdW1fMil7XHJcbiAgICAgICAgICAgICAgICBzdGFydFBhZ2U9MDtlbmRQYWdlPVBhZ2VzTGVuLTE+UGFnZU51bT9QYWdlTnVtOlBhZ2VzTGVuLTE7Ly/pppbpobVcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBzdGFydFBhZ2U9dGhpcy5jdXJyZW50UGFnZStQYWdlTnVtXzM+PVBhZ2VzTGVuP1BhZ2VzTGVuLVBhZ2VOdW0tMTogdGhpcy5jdXJyZW50UGFnZS1QYWdlTnVtXzIrMTtcclxuICAgICAgICAgICAgICAgIHZhciB0PXN0YXJ0UGFnZStQYWdlTnVtO2VuZFBhZ2U9dD5QYWdlc0xlbj9QYWdlc0xlbi0xOnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IFtdXHJcbiAgICAgICAgICAgIGZvciAodmFyIG51bSA9IHN0YXJ0UGFnZTsgbnVtIDw9IGVuZFBhZ2U7IG51bSsrKSB7XHJcbiAgICAgICAgICAgICAgICByZXN1bHQucHVzaChudW0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBwYWdlT2ZUYWJsZSAoKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnRvdGFsID09PSAwKSByZXR1cm4gJ+WFsTAvMOmhtSc7XHJcbiAgICAgICAgICAgIGVsc2UgcmV0dXJuIGDlhbEke3RoaXMuY3VycmVudFBhZ2UrMX0vJHtNYXRoLmNlaWwodGhpcy50b3RhbC90aGlzLnBhZ2VTaXplKX3pobVgXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIG1ldGhvZHM6IHtcclxuICAgICAgICB0b1BhZ2UgKG51bSkge1xyXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRQYWdlID0gbnVtO1xyXG4gICAgICAgICAgICB0aGlzLiRlbWl0KCdjdXJyZW50LWNoYW5nZScsIG51bSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PiIsIu+7vzx0ZW1wbGF0ZT5cclxuPCEtLWRpdiBjbGFzcz1cImhlYWRlciBoZWFkZXJfYmdcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJoZWFkZXJfcmlnaHRhcmVhXCI+XHJcbiAgICAgICAgPHNlbGVjdCB2LW1vZGVsPVwiJHJvb3QuY3VycmVudFZpZXdcIj5cclxuICAgICAgICAgICAgPG9wdGlvbiB2LWZvcj1cIml0ZW0gaW4gJHJvb3QucGFnZXNcIiBcclxuICAgICAgICAgICAgICAgIDprZXk9XCJpdGVtWzFdXCJcclxuICAgICAgICAgICAgICAgIDp2YWx1ZT1cIml0ZW1bMV1cIj57e2l0ZW1bMF19fTwvb3B0aW9uPlxyXG4gICAgICAgIDwvc2VsZWN0PlxyXG4gICAgICAgIDxhIGNsYXNzPVwiSF9hZG1faW5mb1wiIGlkPVwiSG9tZUJ0blwiPjxpbWcgc3JjPVwiaW1nL2FkbS9ob21lLnBuZ1wiPjwvaW1nPui/lOWbnummlumhtTwvYT5cclxuICAgICAgICA8YSBjbGFzcz1cIkhfYWRtX2luZm9cIiBpZD1cIkFkbWluTmFtZVwiPjxpbWcgc3JjPVwiaW1nL2FkbS9uYW1lLnBuZ1wiPjwvaW1nPue9l+mbqOaZtDwvYT5cclxuICAgICAgICA8YSBjbGFzcz1cIkhfYWRtX2luZm9cIiBpZD1cIkV4aXRCdG5cIj48aW1nIHNyYz1cImltZy9hZG0vcXVpdC5wbmdcIj48L2ltZz7lronlhajpgIDlh7o8L2E+XHJcbiAgICA8L2Rpdj5cclxuPC9kaXYtLT5cclxuPGRpdiBjbGFzcz1cIngtbW9kYWxcIj5cclxuICAgICAgICAgPHAgY2xhc3M9XCJtb2RhbF90aXRsZVwiPuecgeW4guWMuumAieaLqTwvcD5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2l0eVNlbGVjdG9yXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzZWxlY3RTbGlkZVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInByb3ZpbmNlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN3aXBlci1jb250YWluZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN3aXBlci13cmFwcGVyXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2l0eVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3dpcGVyLWNvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN3aXBlci13cmFwcGVyXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRpc3RyaWN0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN3aXBlci1jb250YWluZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN3aXBlci13cmFwcGVyXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcblxyXG48L2Rpdj5cclxuXHJcblxyXG48L3RlbXBsYXRlPlxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBtb3VudGVkKCkge1xyXG4gICAgICAgICAgICAvL3N3aXBlcuWIneWni+WMllxyXG4gICAgICAgICAgICB2YXIgaW5kZXhQcm8gPSAwO1xyXG4gICAgICAgICAgICB2YXIgaW5kZXhDdHkgPSAwO1xyXG4gICAgICAgICAgICB2YXIgaW5kZXhEc3QgPSAwO1xyXG4gICAgICAgICAgICB2YXIgc3dpcGVyUHJvID0gbmV3IFN3aXBlcignLnByb3ZpbmNlIC5zd2lwZXItY29udGFpbmVyJywge1xyXG4gICAgICAgICAgICBkaXJlY3Rpb24gOlwidmVydGljYWxcIixcclxuICAgICAgICAgICAgLy8gICAgICAgIGxvb3A6dHJ1ZSwgICAvL+S9v+eUqGxvb3Dojrflj5bnmoRhY3RpdmVJbmRleOWAvOWkjeWItlxyXG4gICAgICAgICAgICBzbGlkZUFjdGl2ZUNsYXNzIDogJ2FjdGl2ZVNsaWRlJywgIC8v5rS75Yqo5Z2X55qE57G75ZCNXHJcbiAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6NSxcclxuICAgICAgICAgICAgc3BhY2VCZXR3ZWVuOjMsXHJcbiAgICAgICAgICAgIGxvb3BlZFNsaWRlczo1LFxyXG4gICAgICAgICAgICBjZW50ZXJlZFNsaWRlczogdHJ1ZSxcclxuICAgICAgICAgICAgc2xpZGVUb0NsaWNrZWRTbGlkZTogdHJ1ZSxcclxuICAgICAgICAgICAgb25TbGlkZUNoYW5nZUVuZDogZnVuY3Rpb24oc3dpcGVyUHJvKXtcclxuICAgICAgICAgICAgICAgIHN3aXBlckN0eS5yZW1vdmVBbGxTbGlkZXMoKTtcclxuICAgICAgICAgICAgICAgIHN3aXBlckRzdC5yZW1vdmVBbGxTbGlkZXMoKTtcclxuICAgICAgICAgICAgICAgIGluZGV4UHJvID1zd2lwZXJQcm8uYWN0aXZlSW5kZXg7IC8v5YiH5o2i57uT5p2f5pe277yM6L+U5Zuec2xpZGXkuIvmoIdcclxuICAgICAgICAgICAgICAgIGluaXRDaXR5KCk7XHJcbiAgICAgICAgICAgICAgICBpbml0RGlzdHJpY3QoKTtcclxuICAgICAgICAgICAgICAgIHN3aXBlckN0eS51cGRhdGUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHZhciBzd2lwZXJDdHkgPSBuZXcgU3dpcGVyKCcuY2l0eSAuc3dpcGVyLWNvbnRhaW5lcicsIHtcclxuICAgICAgICAgICAgZGlyZWN0aW9uIDpcInZlcnRpY2FsXCIsXHJcbiAgICAvLyAgICAgICAgbG9vcDp0cnVlLCAgIC8v5L2/55SobG9vcOiOt+WPlueahGFjdGl2ZUluZGV45YC85aSN5Yi2XHJcbiAgICAgICAgICAgIHNsaWRlQWN0aXZlQ2xhc3MgOiAnYWN0aXZlU2xpZGUnLCAgLy/mtLvliqjlnZfnmoTnsbvlkI1cclxuICAgICAgICAgICAgc2xpZGVzUGVyVmlldzo1LFxyXG4gICAgICAgICAgICBzcGFjZUJldHdlZW46MyxcclxuICAgICAgICAgICAgbG9vcGVkU2xpZGVzOjUsXHJcbiAgICAgICAgICAgIGNlbnRlcmVkU2xpZGVzOiB0cnVlLCBcclxuICAgICAgICAgICAgc2xpZGVUb0NsaWNrZWRTbGlkZTogdHJ1ZSxcclxuICAgICAgICAgICAgb25TbGlkZUNoYW5nZUVuZDogZnVuY3Rpb24oc3dpcGVyQ3R5KSB7XHJcbiAgICAgICAgICAgICAgICBzd2lwZXJEc3QucmVtb3ZlQWxsU2xpZGVzKCk7XHJcbiAgICAgICAgICAgICAgICBpbmRleEN0eSA9IHN3aXBlckN0eS5hY3RpdmVJbmRleDsgLy/liIfmjaLnu5PmnZ/ml7bvvIzov5Tlm55zbGlkZeS4i+agh1xyXG4gICAgICAgICAgICAgICAgaW5pdERpc3RyaWN0KCk7XHJcbiAgICAgICAgICAgICAgICBzd2lwZXJEc3QudXBkYXRlKCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uKHN3aXBlckN0eSkge1xyXG4gICAgICAgICAgICAgICAgc3dpcGVyRHN0LnJlbW92ZUFsbFNsaWRlcygpO1xyXG4gICAgICAgICAgICAgICAgaW5kZXhDdHkgPSBzd2lwZXJDdHkuYWN0aXZlSW5kZXg7XHJcbiAgICAgICAgICAgICAgICBpbml0RGlzdHJpY3QoKTtcclxuICAgICAgICAgICAgICAgIHN3aXBlckRzdC51cGRhdGUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHZhciBzd2lwZXJEc3QgPSBuZXcgU3dpcGVyKCcuZGlzdHJpY3QgLnN3aXBlci1jb250YWluZXInLCB7XHJcbiAgICAgICAgICAgIGRpcmVjdGlvbiA6XCJ2ZXJ0aWNhbFwiLFxyXG4gICAgLy8gICAgICAgIGxvb3A6dHJ1ZSwgICAvL+S9v+eUqGxvb3Dojrflj5bnmoRhY3RpdmVJbmRleOWAvOWkjeWItlxyXG4gICAgICAgICAgICBzbGlkZUFjdGl2ZUNsYXNzIDogJ2FjdGl2ZVNsaWRlJywgIC8v5rS75Yqo5Z2X55qE57G75ZCNXHJcbiAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6NSxcclxuICAgICAgICAgICAgc3BhY2VCZXR3ZWVuOjMsXHJcbiAgICAgICAgICAgIGxvb3BlZFNsaWRlczo1LFxyXG4gICAgICAgICAgICBjZW50ZXJlZFNsaWRlczogdHJ1ZSxcclxuICAgICAgICAgICAgc2xpZGVUb0NsaWNrZWRTbGlkZTogdHJ1ZSxcclxuICAgICAgICAgICAgb25TbGlkZUNoYW5nZUVuZDogZnVuY3Rpb24oc3dpcGVyRHN0KXtcclxuICAgICAgICAgICAgICAgIGluZGV4RHN0ID0gc3dpcGVyRHN0LmFjdGl2ZUluZGV4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLyrmtYvor5XmlbDmja4qL1xyXG4gICAgICAgIHZhciBzdHIgPSBbe1wicHJvdmluY2VcIjpcIuW5v+S4nOecgVwiLFwiY3R5TGlzdFwiOlt7XCJjaXR5XCI6XCLmt7HlnLPluIJcIixcImRzdExpc3RcIjpbXCLljZflsbHljLpfMTAwMDBcIixcIum+meWyl+WMul80MDAwMFwiLFwi572X5rmW5Yy6XzYwMDAwXCIsXCLlrp3lronljLpfODAwMDBcIixcIuebkOeUsOWMul8xMjAwMFwiLFwi56aP55Sw5Yy6XzMwMDAwXCJdfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICB7XCJjaXR5XCI6XCLmsZXlpLTluIJcIixcImRzdExpc3RcIjpbXCLpvpnmuZbljLpfMTAwMDFcIixcIua/oOaxn+WMul8xMDAwMlwiLFwi5r2u5Y2X5Yy6XzEwMDAzXCIsXCLljZfmvrPljr9fMTAwMDRcIixcIumHkeW5s+WMul8xMDAwNVwiLFwi5r2u6Ziz5Yy6XzEwMDA2XCIsXCLmvoTmtbfljLpcIl19LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcImNpdHlcIjpcIuePoOa1t+W4glwiLFwiZHN0TGlzdFwiOltcIummmea0suWMul8xMTAwMFwiLFwi6YeR5rm+5Yy6XzEyMDAwXCIsXCLmlpfpl6jljLpfMTMwMDBcIl19LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcImNpdHlcIjpcIuaDoOW3nuW4glwiLFwiZHN0TGlzdFwiOltcIuaDoOWfjuWMul8xNDAwMFwiLFwi5Y2a572X5Y6/XzE1MDAwXCIsXCLpvpnpl6jljr9fMTYwMDBcIixcIuaDoOmYs+WMul8xNzAwMFwiLFwi5oOg5Lic5Y6/XzE4MDAwXCJdfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICB7XCJjaXR5XCI6XCLkvZvlsbHluIJcIixcImRzdExpc3RcIjpbXCLkuInmsLTljLpcIixcIuemheWfjuWMulwiLFwi6aG65b635Yy6XCIsXCLpq5jmmI7ljLpcIixcIuWNl+a1t+WMulwiXX1dfSxcclxuICAgICAgICAgICAgICAge1wicHJvdmluY2VcIjpcIuWMl+S6rOW4glwiLFwiY3R5TGlzdFwiOlt7XCJjaXR5XCI6XCLljJfkuqzluIJcIixcImRzdExpc3RcIjpbXCLpgJrljr9cIixcIuilv+WfjuWMulwiLFwi5a6j5q2m5Yy6XCIsXCLkuLDlj7DljLpcIixcIua1t+a3gOWMulwiLFwi5oi/5bGx5Yy6XCIsXCLpobrkuYnljLpcIixcIuWkp+WFtOWMulwiLFwi5bmz6LC35Yy6XCIsXCLlu7bluobljLpcIixcIuS4nOWfjuWMulwiLFwi5bSH5paH5Yy6XCIsXCLmnJ3pmLPljLpcIixcIuefs+aZr+WxseWMulwiLFwi6Zeo5aS05rKf5Yy6XCIsXCLpgJrlt57ljLpcIixcIuaYjOW5s+WMulwiLFwi5oCA5p+U5Yy6XCIsXCLlr4bkupHljr9cIl19XX0sXHJcbiAgICAgICAgICAgICAgIHtcInByb3ZpbmNlXCI6XCLlhoXokpnlj6Toh6rmsrvljLpcIixcImN0eUxpc3RcIjpbe1wiY2l0eVwiOlwi6ZSh5p6X6YOt5YuS55ufXCIsXCJkc3RMaXN0XCI6W1wi6ZSh5p6X5rWp54m55biCXCIsXCLlpJrkvKbljr9cIixcIuiLj+WwvOeJueWPs+aXl1wiLFwi6KW/5LmM54+g56mG5rKB5peXXCIsXCLmraPplbbnmb3ml5dcIixcIuS6jOi/nua1qeeJueW4glwiLFwi6Zi/6ams5ZeE5peXXCIsXCLpmL/lt7TlmI7ml5dcIixcIuiLj+WwvOeJueW3puaXl1wiLFwi5Lic5LmM54+g56mG5rKB5peXXCIsXCLlpKrku4blr7rml5dcIixcIuato+iTneaXl1wiLFwi6ZW26buE5peXXCJdfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICB7XCJjaXR5XCI6XCLlhbTlronnm59cIixcImRzdExpc3RcIjpbXCLnp5HlsJTmsoHlj7Pnv7zkuK3ml5dcIixcIueqgeazieWOv1wiLFwi56eR5Y+z5Lit5peXXCIsXCLnp5HlsJTmsoHlj7Pnv7zliY3ml5dcIixcIuaJjui1ieeJueaXl1wiLFwi5LmM5YWw5rWp54m55biCXCIsXCLpmL/lsJTlsbHluIJcIl19LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcImNpdHlcIjpcIumYv+aLieWWhOebn1wiLFwiZHN0TGlzdFwiOltcIumYv+aLieWWhOW3puaXl1wiLFwi5YmN6YOt5bCU572X5pav6JKZ5Y+k5peP6Ieq5rK75Y6/XCIsXCLpmL/mi4nlloTlj7Pml5dcIl19XX0sXHJcbiAgICAgICAgICAgICAgIHtcInByb3ZpbmNlXCI6XCLmsZ/oi4/nnIFcIixcImN0eUxpc3RcIjpbe1wiY2l0eVwiOlwi5Y2X5Lqs5biCXCIsXCJkc3RMaXN0XCI6W1wi546E5q2m5Yy6XCIsXCLnp6bmt67ljLpcIixcIum8k+alvOWMulwiXX1dfSxcclxuICAgICAgICAgICAgICAge1wicHJvdmluY2VcIjpcIuS4iua1t+W4glwiLFwiY3R5TGlzdFwiOlt7XCJjaXR5XCI6XCLkuIrmtbfluIJcIixcImRzdExpc3RcIjpbXCLpu4TmtabljLpcIixcIua1puS4nOaWsOWMulwiLFwi5ZiJ5a6a5Yy6XCJdfV19LFxyXG4gICAgICAgICAgICAgICB7XCJwcm92aW5jZVwiOlwi6buR6b6Z5rGf55yBXCIsXCJjdHlMaXN0XCI6W3tcImNpdHlcIjpcIuWTiOWwlOa7qOW4glwiLFwiZHN0TGlzdFwiOltcIuadvuWMl+WMulwiLFwi5pyo5YWw5Y6/XCIsXCLmlrnmraPljr9cIl19XX0sXHJcbiAgICAgICAgICAgICAgIHtcInByb3ZpbmNlXCI6XCLlkInmnpfnnIFcIixcImN0eUxpc3RcIjpbe1wiY2l0eVwiOlwi6ZW/5pil5biCXCIsXCJkc3RMaXN0XCI6W1wi5Yac5a6J5Y6/XCIsXCLnu7/lm63ljLpcIixcIuS6jOmBk+WMulwiXX1dfSxcclxuICAgICAgICAgICAgICAge1wicHJvdmluY2VcIjpcIui+veWugeecgVwiLFwiY3R5TGlzdFwiOlt7XCJjaXR5XCI6XCLmsojpmLPluIJcIixcImRzdExpc3RcIjpbXCLlpKfkuJzljLpcIixcIuiLj+WutuWxr+WMulwiLFwi5LqO5rSq5Yy6XCJdfV19LFxyXG4gICAgICAgICAgICAgICB7XCJwcm92aW5jZVwiOlwi5rWZ5rGf55yBXCIsXCJjdHlMaXN0XCI6W3tcImNpdHlcIjpcIuadreW3nuW4glwiLFwiZHN0TGlzdFwiOltcIuilv+a5luWMulwiLFwi6JCn5bGx5Yy6XCIsXCLmoZDlupDljr9cIl19XX0sXHJcbiAgICAgICAgICAgICAgIHtcInByb3ZpbmNlXCI6XCLlronlvr3nnIFcIixcImN0eUxpc3RcIjpbe1wiY2l0eVwiOlwi5ZCI6IKl5biCXCIsXCJkc3RMaXN0XCI6W1wi5bqQ6Ziz5Yy6XCIsXCLogqXkuJzljr9cIl19XX0sXHJcbiAgICAgICAgICAgICAgIHtcInByb3ZpbmNlXCI6XCLnpo/lu7rnnIFcIixcImN0eUxpc3RcIjpbe1wiY2l0eVwiOlwi56aP5bee5biCXCIsXCJkc3RMaXN0XCI6W1wi6byT5qW85Yy6XCJdfV19LFxyXG4gICAgICAgICAgICAgICB7XCJwcm92aW5jZVwiOlwi5bm/6KW/5aOu5peP6Ieq5rK75Yy6XCIsXCJjdHlMaXN0XCI6W3tcImNpdHlcIjpcIuWNl+WugeW4glwiLFwiZHN0TGlzdFwiOltcIumdkuengOWMulwiXX1dfV07XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGluaXRQcm92aW5jZSgpe1xyXG4gICAgICAgICAgICBmb3IodmFyIGk9MDtpPHN0ci5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgICAgIHN3aXBlclByby5hcHBlbmRTbGlkZShcIjxkaXYgY2xhc3M9XFxcInN3aXBlci1zbGlkZSBzd2lwZXItc2xpZGVOXFxcIj5cIitzdHJbaV1bXCJwcm92aW5jZVwiXStcIjwvZGl2PlwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBmdW5jdGlvbiBpbml0Q2l0eSgpe1xyXG4gICAgICAgICAgICBmb3IodmFyIGo9MDtqPHN0cltpbmRleFByb11bXCJjdHlMaXN0XCJdLmxlbmd0aDtqKyspe1xyXG4gICAgICAgICAgICAgICAgc3dpcGVyQ3R5LmFwcGVuZFNsaWRlKFwiPGRpdiBjbGFzcz1cXFwic3dpcGVyLXNsaWRlIHN3aXBlci1zbGlkZU5cXFwiPlwiK3N0cltpbmRleFByb10uY3R5TGlzdFtqXVtcImNpdHlcIl0rXCI8L2Rpdj5cIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZnVuY3Rpb24gaW5pdERpc3RyaWN0KCl7XHJcbiAgICAgICAgICAgIGZvcih2YXIgaj0wO2o8c3RyW2luZGV4UHJvXS5jdHlMaXN0W2luZGV4Q3R5XVtcImRzdExpc3RcIl0ubGVuZ3RoO2orKyl7XHJcbiAgICAgICAgICAgICAgICBzd2lwZXJEc3QuYXBwZW5kU2xpZGUoXCI8ZGl2IGNsYXNzPVxcXCJzd2lwZXItc2xpZGUgc3dpcGVyLXNsaWRlTlxcXCI+XCIrc3RyW2luZGV4UHJvXS5jdHlMaXN0W2luZGV4Q3R5XS5kc3RMaXN0W2pdLnNwbGl0KFwiX1wiKVswXStcIjwvZGl2PlwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpbml0UHJvdmluY2UoKTtcclxuICAgICAgICBpbml0Q2l0eSgpO1xyXG4gICAgICAgIGluaXREaXN0cmljdCgpO1xyXG4gICAgXHQkKFwiI2J0bl9zdXJlXCIpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1x0XHRcclxuICAgICAgICAvLyBhbGVydChcIuecgeS7ve+8mlwiK3N0cltpbmRleFByb11bXCJwcm92aW5jZVwiXStcIiAg5Z+O5biC77yaXCIrc3RyW2luZGV4UHJvXS5jdHlMaXN0W2luZGV4Q3R5XVtcImNpdHlcIl0rXCIgIOWMuuWOv++8mlwiK3N0cltpbmRleFByb10uY3R5TGlzdFtpbmRleEN0eV0uZHN0TGlzdFtpbmRleERzdF0uc3BsaXQoXCJfXCIpWzBdXHJcbiAgICAgICAgLy8gK1wiICDpgq7nvJbvvJpcIitzdHJbaW5kZXhQcm9dLmN0eUxpc3RbaW5kZXhDdHldLmRzdExpc3RbaW5kZXhEc3RdLnNwbGl0KFwiX1wiKVsxXSk7XHJcbiAgICAgICAgLy8gYWxlcnQoXCJjb250aW51ZVwiKTtcclxuICAgICAgICBleGl0U2NlbmUoXCJTVEFfQ09OVElOVUVcIik7XHJcblx0ICAgIH0pO1xyXG5cdCAgICAkKFwiI2J0bl9iYWNrXCIpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGV4aXRTY2VuZShcIlNUQV9DQU5DRUxcIik7XHRcdFxyXG5cdH0pO1x0XHJcblxyXG5cclxufVxyXG59XHJcbjwvc2NyaXB0PlxyXG4gICAgPHN0eWxlPlxyXG4gICAgICAgIC5wcm92aW5jZSwgLmNpdHksIC5kaXN0cmljdCB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xyXG4gICAgICAgIH1cclxuICAgICAgICAucHJvdmluY2UgLnN3aXBlci1jb250YWluZXIsLmNpdHkgLnN3aXBlci1jb250YWluZXIsLmRpc3RyaWN0IC5zd2lwZXItY29udGFpbmVyICB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyODBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA0MDBweDtcclxuICAgICAgICAgICAgbWFyZ2luOjEwcHggMjBweCAyMHB4IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5zd2lwZXItc2xpZGVOIHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDIuNXJlbTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICAgIC8qIENlbnRlciBzbGlkZSB0ZXh0IHZlcnRpY2FsbHkgKi9cclxuICAgICAgICAgICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gICAgICAgICAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcclxuICAgICAgICAgICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xyXG4gICAgICAgICAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuYWN0aXZlU2xpZGV7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuY2l0eVNlbGVjdG9ye1xyXG4gICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcclxuICAgICAgICAgICAgbWFyZ2luOjEwcHggYXV0bztcclxuICAgICAgICAgICAgd2lkdGg6OTAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6NjUlO1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcclxuICAgICAgICAgICAgY29sb3I6IzAwOEI2RTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLnNlbGVjdFNsaWRle1xyXG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6NzdweDtcclxuICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgICAgIHRvcDozOCU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNiZmJmYmY7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuNDtcclxuICAgICAgICB9XHJcbiAgICA8L3N0eWxlPlxyXG4iLCI8dGVtcGxhdGU+XHJcbjxkaXY+XHJcbiAgICA8eC1oZWFkZXIgOmxvZ2luPVwiJHJvb3QubG9naW5TdGF0dWVcIiA6Y291bnRkb3duPVwiJHJvb3QuY291bnREb3duXCIgOmNhcmRzdGF0dXM9XCIkcm9vdC5jYXJkU3RhdHVlXCI+PC94LWhlYWRlcj5cclxuICAgIDxtYWluIGNsYXNzPVwibWFpblwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJwdWJfY29udGVudFwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGFuZWxcIj5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj57eyAkdChcImh0bWwudGl0bGVcIil9fTwvcD5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwiY2VudGVyX3RpdGxlXCIgaWQ9XCJTaG93UmVhc29uXCI+e3sgJHQoXCJodG1sLnJlYXNvblwiKSB9fTwvcD5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidG5ib3hcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJhY2tidG5cIiBpZD1cImJ0bl9iYWNrXCIgQGNsaWNrPVwib25CYWNrQ2FyZCgpXCIgdi1odG1sPVwiJHQoJ2h0bWwuYmFjaycpXCI+PC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBzdXJlYnRuXCIgaWQ9XCJidG5fc3VyZVwiIEBjbGljaz1cIm9uU3VyZSgpXCIgdi1odG1sPVwiJHQoJ2h0bWwuc3VyZScpXCI+PC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L21haW4+XHJcbiAgICA8IS0tPHgtZm9vdGVyPjwveC1mb290ZXI+LS0+XHJcbjwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgZGF0YSAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICAgIG9uQmFja0NhcmQgKCkge1xyXG4gICAgICAgICAgICB0aGlzLiRyb290LmxvZ2luU3RhdHVzID0gZmFsc2VcclxuICAgICAgICAgICAgdGhpcy4kcm9vdC5jb3VudERvd24gPSAxMFxyXG4gICAgICAgICAgICAvLyBvbkNhbmNsZSgpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBvblN1cmUgKCkge1xyXG4gICAgICAgICAgICB0aGlzLiRyb290LmNhcmRTdGF0dXMgPSB0cnVlXHJcbiAgICAgICAgICAgIC8vIE9uQ29udGludWUoKVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBpMThuOiB7XHJcbiAgICAgICAgbWVzc2FnZXM6IHtcclxuICAgICAgICAgICAgemhfY246IHtcclxuICAgICAgICAgICAgICAgIGh0bWw6IHtcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwi5L+h5oGv5o+Q56S6XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJyZWFzb25cIjogXCLlr4bnoIHplJnor69cIixcclxuICAgICAgICAgICAgICAgICAgICBcImJhY2tcIjogXCLlj5YmbmJzcDsmbmJzcDsmbmJzcDvljaFcIixcclxuICAgICAgICAgICAgICAgICAgICBcInN1cmVcIjogXCLnu6cmbmJzcDsmbmJzcDsmbmJzcDvnu61cIixcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICBcInBpbkVycm9yXCI6IFwi5a+G56CB6ZSZ6K+vXCJcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZW5fdXM6IHtcclxuICAgICAgICAgICAgICAgIGh0bWw6IHtcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiSW5mb3JtYXRpb25cIixcclxuICAgICAgICAgICAgICAgICAgICBcInJlYXNvblwiOiBcIlBpbiBFcnJvclwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiYmFja1wiOiBcIkVqZWN0IENhcmRcIixcclxuICAgICAgICAgICAgICAgICAgICBcInN1cmVcIjogXCJDb250aW51ZVwiLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGVycm9yczoge1xyXG4gICAgICAgICAgICAgICAgICAgIFwicGluRXJyb3JcIjogXCJQaW4gRXJyb3JcIlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8dGVtcGxhdGU+XHJcbjxkaXY+XHJcbiAgICA8eC1oZWFkZXIgOmxvZ2luPVwiZmFsc2VcIj48L3gtaGVhZGVyPlxyXG4gICAgPG1haW4gY2xhc3M9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInB1Yl9jb250ZW50XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYW5lbFwiPlxyXG4gICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJ0aXRsZVwiPjxzcGFuIGlkPVwiU2hvd1JlYXNvblwiPnt7ICR0KFwiaHRtbC5PdXRTZXJ2aWNlXCIpIH19PC9zcGFuPjwvcD5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L21haW4+XHJcbiAgIDwhLS0gPHgtZm9vdGVyPjwveC1mb290ZXI+LS0+XHJcbjwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBkYXRhICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgfSxcclxuICAgIGkxOG46IHtcclxuICAgICAgICBtZXNzYWdlczoge1xyXG4gICAgICAgICAgICB6aF9jbjoge1xyXG4gICAgICAgICAgICAgICAgXCJodG1sXCI6IHtcclxuICAgICAgICAgICAgICAgICAgICBcIk91dFNlcnZpY2VcIjogXCLmnKzmnLrmmoLlgZzmnI3liqFcIlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBlbl91czoge1xyXG4gICAgICAgICAgICAgICAgXCJodG1sXCI6IHtcclxuICAgICAgICAgICAgICAgICAgICBcIk91dFNlcnZpY2VcIjogXCJPdXQgT2YgU2VydmljZVwiXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuPC9zY3JpcHQ+XHJcbiIsIjxzdHlsZSBzY29wZWQ+XHJcbi5hZHZlcnRpc2Uge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgei1pbmRleDogMTAwMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG5pbWcgLmNlbnRlciB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuPC9zdHlsZT5cclxuPHRlbXBsYXRlPlxyXG4gICAgPGRpdiBjbGFzcz1cImFkdmVydGlzZVwiPlxyXG4gICAgICA8IS0tIHN3aXBlciAtLT5cclxuICAgICAgPHN3aXBlciA6b3B0aW9ucz1cInN3aXBlck9wdGlvblwiPlxyXG4gICAgICAgIDxzd2lwZXItc2xpZGUgdi1mb3I9XCJpdGVtIGluIGltYWdlc1wiIDprZXk9XCJpdGVtXCI+PGEgQGNsaWNrPVwib25PdmVyXCI+PGltZyA6c3JjPVwiJ2FkdmVydGlzZS8nICsgaXRlbVwiIGNsYXNzPVwiY2VudGVyXCI+PC9pbWc+PC9hPjwvc3dpcGVyLXNsaWRlPlxyXG4gICAgICA8L3N3aXBlcj5cclxuICAgIDwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuICBleHBvcnQgZGVmYXVsdCB7XHJcbiAgICBkYXRhKCkge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIGltYWdlczogW1xyXG4gICAgICAgICAgICBcIkEwMDAxLmpwZ1wiLFxyXG4gICAgICAgICAgICBcIkEwMDAyLmpwZ1wiLFxyXG4gICAgICAgICAgICBcIkEwMDAzLmpwZ1wiLFxyXG4gICAgICAgICAgICBcIkEwMDA0LmpwZ1wiXHJcbiAgICAgICAgXSxcclxuICAgICAgICBzd2lwZXJPcHRpb246IHtcclxuICAgICAgICAgIGF1dG9wbGF5OiAzMDAwLFxyXG4gICAgICAgICAgZWZmZWN0OiBcImZhZGVcIixcclxuICAgICAgICAgIGF1dG9wbGF5RGlzYWJsZU9uSW50ZXJhY3Rpb246IGZhbHNlXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIG1ldGhvZHM6IHtcclxuICAgICAgICBvbk92ZXIgKCkge1xyXG4gICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfQ0FOQ0VMXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbjwvc2NyaXB0PiIsIlxyXG48c3R5bGUgc2NvcGVkPlxyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTMwMHB4KSBhbmQgIChtYXgtd2lkdGg6MTM4MHB4KXsgXHJcbiAgICAgIC5jbGVhcntcclxuICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciAwO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcblxyXG48L3N0eWxlPlxyXG5cclxuPHRlbXBsYXRlPlxyXG48ZGl2PlxyXG4gICAgPHgtbWFpbi1oZWFkZXI+PC94LW1haW4taGVhZGVyPiBcclxuICAgIDxkaXYgY2xhc3M9XCJidXNfbWFpblwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJtYWRlX21lbnVcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN3aXBlci1jb250YWluZXJcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzd2lwZXItd3JhcHBlclwiPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cdCAgICA8ZGl2IGNsYXNzPVwic3dpcGVyLWJ1dHRvbi1wcmV2IHJlZ3VsYXJseV9tZW51X2xlZnRcIj5cclxuICAgICAgICAgICAgPGltZyA6c3JjPVwiJHJvb3QuaW1nUGF0aCgnaW1nL+eureWktC3lt6YucG5nJylcIi8+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInN3aXBlci1idXR0b24tbmV4dCByZWd1bGFybHlfbWVudV9yaWdodFwiPlxyXG4gICAgICAgICAgICA8aW1nIDpzcmM9XCIkcm9vdC5pbWdQYXRoKCdpbWcv566t5aS0LeWPsy5wbmcnKVwiLz5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwicmVndWxhcmx5X21lbnUgY2xlYXJcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJlZ3VsYXJseV9tZW51X2xvZ29cIiBkYXRhLWJ1cz1cIlJlZ3VsYXJseU1lbnVcIiA+IFxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN3aXBlci1jb250YWluZXJcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzd2lwZXItd3JhcHBlclwiPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmVndWxhcmx5X21lbnVfcmFpbFwiPjwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgICA8IS0t54K55Ye75pCc57Si5Yy65Z+f5by55Ye65qih5oCB5qGGLS0+XHJcbiAgICA8ZGl2IGlkPVwiZ29vZGNvdmVyXCI+PC9kaXY+XHJcbiAgICA8ZGl2IGlkPVwiYmx1cnNlYXJjaFwiPlxyXG4gICAgPGRpdiBpZD1cIm1lbnVfYmx1cnNlYXJjaFwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJibHVyc2VhcmNoX3NlbGVjdF9pbnB1dFwiPlxyXG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBpZD1cInNlYXJjaFRleHRcIiBjbGFzcz1cImJsdXJzZWFyY2hfaW5wdXRcIiBwbGFjZWhvbGRlcj1cIuivt+i+k+WFpeWFs+mUruWtl1wiIG9uY2xpY2s9XCJTaG93UGlueWluS0IoJy0xJywnLTEnLCdzZWFyY2hUZXh0JywnJylcIiBvbmJsdXI9XCJIaWRlS0IoKVwiLz5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiYmx1cnNlYXJjaF9zZWxlY3RfY29udGVudFwiICBpZD1cImF1dG9TY3JlZW5pbmdcIj48L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcblx0PGRpdiBjbGFzcz1cIm1haW5IZVwiPiA8L2Rpdj5cclxuICAgIFxyXG4gICAgPCEtLSAgIOW5v+WRiiAgLS0+XHJcbiAgICA8ZGl2IGNsYXNzPVwibWFpbkFkXCIgaWQ9XCJhZHZlcnRpc2VpbWdcIiA+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJzd2lwZXItY29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzd2lwZXItd3JhcHBlclwiPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuPC9kaXY+XHJcblxyXG5cclxuXHJcbjwvdGVtcGxhdGU+XHJcbjxzY3JpcHQ+XHJcbiAgICAgICAgdmFyIGFycjtcclxuICAgICAgIC8v5LiA57qn77yI5LiL6Z2i6YOo5YiG77yJ6I+c5Y2V6YOo5YiG5Yid5aeL5YyWXHJcbiAgICAgICAgdmFyIGZpcnN0TWVudTtcclxuICAgICAgICAvL+S6jOe6p++8iOS4remXtOmDqOWIhu+8ieiPnOWNlemDqOWIhuWIneWni+WMllxyXG4gICAgICAgIHZhciBzZWNvbmRNZW51O1xyXG4gICAgICAgIHZhciBqc29uRGF0YTtcclxuICAgICAgICB2YXIgYWR0aW1lIDtcclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgICAgICAgICBiZWZvcmVEZXN0cm95OmZ1bmN0aW9uKCl7XHJcblxyXG4gICAgICAgICAgICAkKFwiLnJlZ3VsYXJseW1lbnVcIikudW5iaW5kKFwiY2xpY2tcIik7XHJcbiAgICAgICAgICAgICQoXCIucmVndWxhcmx5bWVudVwiKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgJChcIi5yZWd1bGFybHlfbWVudV9sb2dvXCIpLnVuYmluZChcImNsaWNrXCIpO1xyXG4gICAgICAgICAgICAkKFwiLm1hZGVfbWVudSAuc3dpcGVyLWNvbnRhaW5lclwiKS5lbXB0eSgpO1xyXG4gICAgICAgICAgICAkKFwiLm1hZGVfbWVudSAuc3dpcGVyLWNvbnRhaW5lclwiKS5lbXB0eSgpO1xyXG4gICAgICAgICAgICBjbGVhckludGVydmFsKGFkdGltZSk7XHJcbiAgICAgICAgICAgIGZpcnN0TWVudS5kZXN0cm95KGZhbHNlKTsgXHJcbiAgICAgICAgICAgIHNlY29uZE1lbnUuZGVzdHJveShmYWxzZSk7IFxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgJChcIi5yZWd1bGFybHlfbWVudSAucmVndWxhcmx5X21lbnVfbG9nb1wiKS5lbXB0eSgpO1xyXG4gICAgICAgICAgICAkKFwiLm1hZGVfbWVudSAuc3dpcGVyLXdyYXBwZXJcIikuZW1wdHkoKTtcclxuICAgICAgICAgICAgJChcIi5yZWd1bGFybHlfbWVudSAuc3dpcGVyLXdyYXBwZXJcIikuZW1wdHkoKTtcclxuICAgICAgICAgICAgJChcIi5tYWRlX21lbnUgLnN3aXBlci1zbGlkZVwiKS5lbXB0eSgpO1xyXG4gICAgICAgICAgICAkKFwiI2F1dG9TY3JlZW5pbmdcIikuZW1wdHkoKTtcclxuICAgICAgICAgICAgJChcIi5tYWluQWQgLnN3aXBlci13cmFwcGVyXCIpLmVtcHR5KCk7XHJcbiAgICAgICAgICAgIGZpcnN0TWVudSA9IG51bGw7XHJcbiAgICAgICAgICAgIHNlY29uZE1lbnUgPSBudWxsO1xyXG4gICAgICAgICAgICBhcnIgPSBudWxsO1xyXG4gICAgfSxcclxuXHJcbiAgICBtb3VudGVkICgpIHtcclxuICAgICAgICBhcnI9bmV3IEFycmF5KCk7XHJcbiAgICAgICAgdmFyIHRoZXBhdGggPSB2bS4kcm9vdC50aGVtZUltZ1BhdGg7XHJcbiAgICAgICAgRGF0YVRvb2xzLmdldChcIkdEX0EwMV9NZW51RGF0YVwiLGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICAvLyB2YXIganNvbkRhdGE9ZGF0YTtcclxuICAgICAgICAgICAganNvbkRhdGEgPSBKU09OLnBhcnNlKGRhdGEpO1xyXG4gICAgICAgICAgICBkYXRhID0gbnVsbDtcclxuICAgICAgICAgICAgdmFyIG5vd1BhZ2UgPSAwO1xyXG4gICAgICAgICAgICB2YXIgU2Vjb25kbm93UGFnZT0wO1xyXG4gICAgICAgICAgICB2YXIgU2Vjb25kbm93UGFnZTE9MDtcclxuICAgICAgICAgICAgdmFyIEZpcnN0TWVudVBhZ2VMZW4gPSAwOyAgIC8v6ZyA6KaB5pi+56S65Ye65p2l55qE5LiA57qn5Lia5Yqh5pWw6YeP77yMSXNTaG93ID09IHRydWXooajnpLrpnIDopoHmmL7npLpcclxuICAgICAgICAgICAgdmFyIGhlaWdodFc9c2NyZWVuLmhlaWdodDsvL+aYvuekuuWZqOWIhui+qOeOhyDpq5hcclxuICAgICAgICAgICAgdmFyIHdpZHRoVz1zY3JlZW4ud2lkdGg7Ly/mmL7npLrlmajliIbovqjnjocg5a69XHJcbiAgICAgICAgICAgIHZhciBGaXJzdE1lbnVOdW07IFxyXG4gICAgICAgICAgICB2YXIgU2Vjb25kTWVudU51bTtcclxuICAgICAgICAgICAgaWYod2lkdGhXPj0xOTAwKXtcclxuICAgICAgICAgICAgICAgIEZpcnN0TWVudU51bSA9IDg7IC8v6K6+572u5q+P5LiA6KGM5pi+56S655qE5LiA57qn5Lia5Yqh5pWw6YePXHJcbiAgICAgICAgICAgICAgICBTZWNvbmRNZW51TnVtPTEwOyAvL+S6jOe6p+iPnOWNlemhtemdouaYvuekuuS4quaVsFxyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIEZpcnN0TWVudU51bSA9IDU7IC8v6K6+572u5q+P5LiA6KGM5pi+56S655qE5LiA57qn5Lia5Yqh5pWw6YePXHJcbiAgICAgICAgICAgICAgICBTZWNvbmRNZW51TnVtPTg7IC8v5LqM57qn6I+c5Y2V6aG16Z2i5pi+56S65Liq5pWwXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIEZpcnN0TWVudVBhZ2UgPSAwOyAgLy/kuIDnuqfoj5zljZXpobXmlbBcclxuICAgICAgICAgICAgdmFyIFNlY29uZE1lbnVQYWdlID0gMDsgIC8v5a+55bqU5LiA57qn6I+c5Y2V55qE5LqM57qn6I+c5Y2V5Liq5pWwXHJcbiAgICAgICAgICAgIHZhciBuZXdEYXRhID0gbmV3IEFycmF5KCk7XHJcbiAgICAgICAgICAgIHZhciByZWd1bGFybHlEYXRhID0gbmV3IEFycmF5KCk7XHJcbiAgICAgICAgICAgIHZhciBhZGRGaXJzdE1lbnUsYWRkU2Vjb25kTWVudSxGaXJzdE1lbnVXcmFwLFNlY29uZE1lbnVXcmFwO1xyXG4gICAgICAgICBcclxuICAgICAgICAgICAgJChcIi5yZWd1bGFybHlfbWVudSAucmVndWxhcmx5X21lbnVfbG9nb1wiKS5lbXB0eSgpO1xyXG4gICAgICAgICAgICAkKFwiLm1hZGVfbWVudSAuc3dpcGVyLXdyYXBwZXJcIikuZW1wdHkoKTtcclxuICAgICAgICAgICAgZm9yKHZhciBpID0gMDsgaTxqc29uRGF0YS5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICBhcnJbaV09bmV3IEFycmF5KCk7XHJcbiAgICAgICAgICAgICAgICBpZihpPT0wKXtcclxuICAgICAgICAgICAgICAgIEZpcnN0TWVudVdyYXAgPSBcIjxkaXYgY2xhc3M9J21lbnVfaW1nYm94Jz48aW1nIGNsYXNzPSdyZWd1bGFybHlfbWVudV9pbWcgbGFyZ2VyJyBzcmM9J1wiK3RoZXBhdGgrJy9pbWcvJysganNvbkRhdGFbaV0uTkFNX0lDT04uc3Vic3RyKDAsanNvbkRhdGFbaV0uTkFNX0lDT04ubGVuZ3RoLTQpK1wiMVwiK2pzb25EYXRhW2ldLk5BTV9JQ09OLnN1YnN0cigtNCkrXCInLz48cCBjbGFzcz0ncmVndWxhcmx5X21lbnVfbmFtZSc+XCIranNvbkRhdGFbaV0uTkFNX01FTlUrXCI8L3A+PC9kaXY+XCI7XHJcbiAgICAgICAgICAgICAgICAkKFwiLnJlZ3VsYXJseV9tZW51IC5yZWd1bGFybHlfbWVudV9sb2dvXCIpLmFwcGVuZChGaXJzdE1lbnVXcmFwKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgcmVndWxhcmx5RGF0YVtpXSA9IGpzb25EYXRhW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgIFNlY29uZE1lbnVQYWdlID0gTWF0aC5jZWlsKHJlZ3VsYXJseURhdGFbaV0uQ0xEX01FTlUubGVuZ3RoL1NlY29uZE1lbnVOdW0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IodmFyIG0gPSAwOyBtIDxTZWNvbmRNZW51UGFnZTsgbSsrKXtcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v5Yib5bu65LqM57qn6I+c5Y2V5a655ZmoXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlY29uZE1lbnVXcmFwID0gXCI8ZGl2IGNsYXNzPSdzd2lwZXItc2xpZGUnIGlkPSdSZWd1bGFybHlNZW51XCIrbStcIic+PGRpdiBjbGFzcz0nbWVudV9pbWdib3gnPjwvZGl2PjwvZGl2PlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiLm1hZGVfbWVudSAuc3dpcGVyLXdyYXBwZXJcIikuYXBwZW5kKFNlY29uZE1lbnVXcmFwKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/liJvlu7rkuoznuqfoj5zljZUgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IodmFyIGogPSBTZWNvbmRub3dQYWdlKlNlY29uZE1lbnVOdW07IGogPCAoU2Vjb25kbm93UGFnZSsxKSpTZWNvbmRNZW51TnVtOyBqKyspe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJlZ3VsYXJseURhdGFbaV0uQ0xEX01FTlVbal0pe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRTZWNvbmRNZW51ID0gXCI8c3BhbiBjbGFzcz0nY29sJz48ZGl2IGNsYXNzPSdtZW51X2ljb24nIGRhdGEtSURfTUVOVT1cIityZWd1bGFybHlEYXRhW2ldLkNMRF9NRU5VW2pdLklEX01FTlUrXCI+PGltZyBpZD1cIityZWd1bGFybHlEYXRhW2ldLkNMRF9NRU5VW2pdLk5BTV9BQ1RJT04rXCIgY2xhc3M9J21lbnVfaW1nJyBzcmM9J1wiK3RoZXBhdGggKyAnL2ltZy9idXMvJytyZWd1bGFybHlEYXRhW2ldLkNMRF9NRU5VW2pdLk5BTV9JQ09OK1wiJy8+PC9kaXY+PHAgc3R5bGU9J2Rpc3BsYXk6bm9uZTsnPlwiK3JlZ3VsYXJseURhdGFbaV0uQ0xEX01FTlVbal0uTkFNX01FTlUrXCI8L3A+PC9zcGFuPlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI1JlZ3VsYXJseU1lbnVcIittKS5jaGlsZHJlbigpLmFwcGVuZChhZGRTZWNvbmRNZW51KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyclswXS5wdXNoKCQoXCIubWFkZV9tZW51IC5zd2lwZXItc2xpZGVcIikubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlY29uZG5vd1BhZ2UrKzsgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0RhdGFbRmlyc3RNZW51UGFnZUxlbl0gPSBqc29uRGF0YVtpXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgRmlyc3RNZW51UGFnZUxlbisrOyAgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvL+iuoeeul+S4gOe6p+iPnOWNlemhteaVsFxyXG4gICAgICAgICAgICBGaXJzdE1lbnVQYWdlID0gTWF0aC5jZWlsKEZpcnN0TWVudVBhZ2VMZW4vRmlyc3RNZW51TnVtKTtcclxuXHJcbiAgICAgICAgICAgIGZvcih2YXIgbiA9IDA7IG4gPEZpcnN0TWVudVBhZ2U7IG4rKyl7XHJcblxyXG4gICAgICAgICAgICAgICAgLy/liJvlu7rkuIDnuqfoj5zljZXlrrnlmahcclxuICAgICAgICAgICAgICAgIEZpcnN0TWVudVdyYXAgPSBcIjxkaXYgY2xhc3M9J3N3aXBlci1zbGlkZScgaWQ9J21lbnVcIituK1wiJz48ZGl2IGNsYXNzPSdtZW51X2ltZ2JveCc+PC9kaXY+PC9kaXY+XCI7XHJcbiAgICAgICAgICAgICAgICAkKFwiLnJlZ3VsYXJseV9tZW51IC5zd2lwZXItd3JhcHBlclwiKS5hcHBlbmQoRmlyc3RNZW51V3JhcCk7XHJcblxyXG4gICAgICAgICAgICAgICAgLy/liJvlu7rkuIDnuqfoj5zljZVcclxuICAgICAgICAgICAgICAgIGZvcih2YXIgaSA9IG5vd1BhZ2UqRmlyc3RNZW51TnVtOyBpIDwgKG5vd1BhZ2UrMSkqRmlyc3RNZW51TnVtOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKG5ld0RhdGFbaV0pe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRGaXJzdE1lbnUgPSBcIjxzcGFuIGNsYXNzPSdjb2wgcmVndWxhcmx5bWVudScgZGF0YS1idXM9XCIrbmV3RGF0YVtpXS5OQU1fQUNUSU9OK1wiPjxpbWcgc3JjPSdcIit0aGVwYXRoKycvaW1nLycrbmV3RGF0YVtpXS5OQU1fSUNPTitcIicvPjxwIGNsYXNzPSdtZW51X25hbWUnPlwiK25ld0RhdGFbaV0uTkFNX01FTlUrXCI8L3A+PC9zcGFuPlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiI21lbnVcIituKS5jaGlsZHJlbigpLmFwcGVuZChhZGRGaXJzdE1lbnUpO1xyXG5cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBTZWNvbmRub3dQYWdlMT0wO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBTZWNvbmRNZW51UGFnZSA9IE1hdGguY2VpbChuZXdEYXRhW2ldLkNMRF9NRU5VLmxlbmd0aC9TZWNvbmRNZW51TnVtKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yKHZhciBtID0gMDsgbSA8U2Vjb25kTWVudVBhZ2U7IG0rKyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+WIm+W7uuS6jOe6p+iPnOWNleWuueWZqFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgU2Vjb25kTWVudVdyYXAgPSBcIjxkaXYgY2xhc3M9J3N3aXBlci1zbGlkZScgaWQ9J1wiK25ld0RhdGFbaV0uTkFNX0FDVElPTittK1wiJz48ZGl2IGNsYXNzPSdtZW51X2ltZ2JveCc+PC9kaXY+PC9kaXY+XCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiLm1hZGVfbWVudSAuc3dpcGVyLXdyYXBwZXJcIikuYXBwZW5kKFNlY29uZE1lbnVXcmFwKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/liJvlu7rkuoznuqfoj5zljZUgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IodmFyIGogPSBTZWNvbmRub3dQYWdlMSpTZWNvbmRNZW51TnVtOyBqIDwgKFNlY29uZG5vd1BhZ2UxKzEpKlNlY29uZE1lbnVOdW07IGorKyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYobmV3RGF0YVtpXS5DTERfTUVOVVtqXSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZFNlY29uZE1lbnUgPSBcIjxzcGFuIGNsYXNzPSdjb2wnPjxkaXYgY2xhc3M9J21lbnVfaWNvbicgZGF0YS1JRF9NRU5VPVwiK25ld0RhdGFbaV0uQ0xEX01FTlVbal0uSURfTUVOVStcIj48aW1nIGlkPVwiK25ld0RhdGFbaV0uQ0xEX01FTlVbal0uTkFNX0FDVElPTitcIiBjbGFzcz0nbWVudV9pbWcnIHNyYz0nXCIrdGhlcGF0aCsnL2ltZy9idXMvJytuZXdEYXRhW2ldLkNMRF9NRU5VW2pdLlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOQU1fSUNPTitcIicvPjwvZGl2PjxwIHN0eWxlPSdkaXNwbGF5Om5vbmU7Jz5cIituZXdEYXRhW2ldLkNMRF9NRU5VW2pdLlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOQU1fTUVOVStcIjwvcD48L3NwYW4+XCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjXCIrbmV3RGF0YVtpXS5OQU1fQUNUSU9OK20pLmNoaWxkcmVuKCkuYXBwZW5kKGFkZFNlY29uZE1lbnUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcnJbaSsxXS5wdXNoKCQoXCIubWFkZV9tZW51IC5zd2lwZXItc2xpZGVcIikubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlY29uZG5vd1BhZ2UxKys7IFxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBub3dQYWdlKys7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY3JlYXRlTWVudSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICBmdW5jdGlvbiBmaW5kaW5kZXgoc3RyKXsgXHJcbiAgICAgICBcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xyXG5cclxuICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBhcnJbaV0ubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICAgICAgICAgIGlmKGFycltpXVtqXSA9PSBzdHIpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gXHJcbiAgICB9XHJcbiBcclxuICAgICAgICAgZnVuY3Rpb24gY3JlYXRlTWVudSgpe1xyXG4gICAgICAgICAgICAvL+S4gOe6p++8iOS4i+mdoumDqOWIhu+8ieiPnOWNlemDqOWIhuWIneWni+WMllxyXG4gICAgICAgICAgICBmaXJzdE1lbnUgPSBuZXcgU3dpcGVyKCcucmVndWxhcmx5X21lbnUgLnN3aXBlci1jb250YWluZXInLHtcclxuICAgICAgICAgICAgICAgIHByZXZCdXR0b246Jy5zd2lwZXItYnV0dG9uLXByZXYnLFxyXG4gICAgICAgICAgICAgICAgbmV4dEJ1dHRvbjonLnN3aXBlci1idXR0b24tbmV4dCcsXHJcbiAgICAgICAgICAgIH0pO1xyXG5cdFx0XHQgICAgLy/kuoznuqfvvIjkuK3pl7Tpg6jliIbvvInoj5zljZXpg6jliIbliJ3lp4vljJZcclxuXHRcdFx0c2Vjb25kTWVudSA9IG5ldyBTd2lwZXIoJy5tYWRlX21lbnUgLnN3aXBlci1jb250YWluZXInLFxyXG5cdFx0XHR7XHJcblx0XHRcdFx0cGFnaW5hdGlvbjogJy5zd2lwZXItcGFnaW5hdGlvbicsXHJcblx0XHRcdFx0cGFnaW5hdGlvbkNsaWNrYWJsZTogdHJ1ZSxcclxuICAgICAgICAvLyAgICBcdGVmZmVjdDogJ2ZhZGUnLC8vIHRpcHNcclxuXHRcdFx0XHRmYWRlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY3Jvc3NGYWRlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuXHRcdFx0XHRvblRyYW5zaXRpb25FbmQ6IGZ1bmN0aW9uIChzd2lwZXIpIHtcclxuXHRcdFx0XHRcdHZhciBjdXJpbmRleCA9IGZpbmRpbmRleChzd2lwZXIuYWN0aXZlSW5kZXgrMSk7XHJcblx0XHRcdFx0XHRjaGFuZ2VGaXJzdE1lbnUoY3VyaW5kZXgpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblxyXG4gICAgICAgIFxyXG4gICAgICAgICAgICBvbkNsaWNrQmluZCgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gb25DbGlja0JpbmQoKVxyXG4gICAgICAgIHtcclxuXHJcbiAgICAgICAgICAgIHZhciBsaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImNvbFwiKTtcclxuICAgICAgICAgICAgZm9yICh2YXIgaT0wO2k8bGlzdC5sZW5ndGg7aSsrKSB7XHJcbiAgICAgICAgICAgICAgICBsaXN0W2ldLm9uY2xpY2sgPSBtYWRlX21lbnVfb25jbGljaztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdmFyIGxpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwicmVndWxhcmx5bWVudVwiKTtcclxuICAgICAgICAgICAgZm9yICh2YXIgaT0wO2k8bGlzdC5sZW5ndGg7aSsrKSB7XHJcbiAgICAgICAgICAgICAgICBsaXN0W2ldLm9uY2xpY2sgPSByZWd1bGFybHltZW51X29uY2xpY2s7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHZhciBsaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInJlZ3VsYXJseV9tZW51X2xvZ29cIik7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGk9MDtpPGxpc3QubGVuZ3RoO2krKykge1xyXG4gICAgICAgICAgICAgICAgbGlzdFtpXS5vbmNsaWNrID0gcmVndWxhcmx5X21lbnVfbG9nb19vbmNsaWNrO1xyXG4gICAgICAgICAgICB9ICAgICAgICAgICAgXHJcblxyXG5cclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidXNfc2VhcmNoXCIpLm9uY2xpY2sgPSBidXNfc2VhcmNoX29uY2xpY2s7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ29vZGNvdmVyXCIpLm9uY2xpY2sgPSBnb29kY292ZXJfb25jbGljaztcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fcXVpdFwiKS5vbmNsaWNrID0gYnRuX3F1aXRfb25jbGljaztcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZWFyY2hUZXh0XCIpLm9uY2xpY2sgPSBzZWFyY2hUZXh0X29uY2xpY2s7XHJcbiAgICAgICAgICAgIC8vIGNocm9tZSBpZTExXHJcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VhcmNoVGV4dFwiKS5vbmlucHV0ID0gc2VhcmNoVGV4dF9vbnByb3BlcnR5Y2hhbmdlOyAgIFxyXG4gICAgICAgICAgICAvLyBpZSA5ICAgXHJcbiAgICAgICAgICAgIC8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZWFyY2hUZXh0XCIpLm9ucHJvcGVydHljaGFuZ2UgPSBzZWFyY2hUZXh0X29ucHJvcGVydHljaGFuZ2U7ICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIC8v54K55Ye75LiA57qn5b6q546v6I+c5Y2V5oyJ6ZKu5aSE55CGXHJcbiAgICAgICAgZnVuY3Rpb24gcmVndWxhcmx5bWVudV9vbmNsaWNrKClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIC8vYWxlcnQoXCJ3c1wiKTtcclxuICAgICAgICAgICAgLy/ojrflj5bngrnlh7vkuJrliqHnmoTlkI3np7BcclxuICAgICAgICAgICAgdmFyIG1hZGVNZW51ID0gJCgnLm1hZGVfbWVudSAuc3dpcGVyLWNvbnRhaW5lciAuc3dpcGVyLXdyYXBwZXInKTtcclxuICAgICAgICAgICAgdmFyIGJ1c05hbWUgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtYnVzJyk7XHJcbiAgICAgICAgICAgIC8v6I635Y+W54K55Ye75Lia5Yqh55qE57Si5byV5YC8XHJcbiAgICAgICAgICAgIHZhciBjdXJpbmRleCA9IG1hZGVNZW51LmZpbmQoJyMnK2J1c05hbWUrJzAnKS5pbmRleCgpO1xyXG4gICAgICAgICAgICBzZWNvbmRNZW51LnNsaWRlVG8oY3VyaW5kZXgsIDMwMCwgZmFsc2UpO1xyXG4gICAgICAgICAgICBjaGFuZ2VGaXJzdE1lbnUoZmluZGluZGV4KGN1cmluZGV4KzEpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy/ngrnlh7vluLjnlKjoj5zljZXmjInpkq7lpITnkIZcclxuICAgICAgICBmdW5jdGlvbiByZWd1bGFybHlfbWVudV9sb2dvX29uY2xpY2soKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFyIGN1cmluZGV4ID0gMDtcclxuICAgICAgICAgICAgc2Vjb25kTWVudS5zbGlkZVRvKGN1cmluZGV4LCAzMDAsIGZhbHNlKTtcclxuICAgICAgICAgICAgY2hhbmdlRmlyc3RNZW51KGN1cmluZGV4KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8v5qC55o2uaW5kZXjmlLnlj5jkuIDnuqfvvIjkuIvpnaLpg6jliIbvvInoj5zljZXlm77moIdcclxuICAgICAgICB2YXIgcHJldmlvdXNJbmRleCA9IDA7XHJcbiAgICAgICAgZnVuY3Rpb24gY2hhbmdlRmlyc3RNZW51KGluZGV4KVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFyIHdpZHRoVz1zY3JlZW4ud2lkdGg7Ly/mmL7npLrlmajliIbovqjnjocg5a69XHJcbiAgICAgICAgICAgIHZhciBudW07XHJcbiAgICAgICAgICAgIGlmKHdpZHRoVz49MTkwMCl7XHJcbiAgICAgICAgICAgICAgICBudW09ODtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICBudW09NTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgZmlyc3RpbmRleCA9IE1hdGguY2VpbChpbmRleC9udW0pLTE7XHJcbiAgICAgICAgICAgIGZpcnN0TWVudS5zbGlkZVRvKGZpcnN0aW5kZXgsMzAwLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIGlmKHByZXZpb3VzSW5kZXghPTApXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHZhciBzdHJQcmVTcmMgPSAkKFwiLm1lbnVfaW1nYm94IC5yZWd1bGFybHltZW51IGltZ1wiKS5lcShwcmV2aW91c0luZGV4LTEpLmF0dHIoXCJzcmNcIik7XHJcbiAgICAgICAgICAgICAgICB2YXIgc3RyUHJlTmV3U3JjID0gc3RyUHJlU3JjLnJlcGxhY2UoXCIxLnBuZ1wiLFwiLnBuZ1wiKTtcclxuICAgICAgICAgICAgICAgICQoXCIubWVudV9pbWdib3ggLnJlZ3VsYXJseW1lbnUgaW1nXCIpLmVxKHByZXZpb3VzSW5kZXgtMSkuYXR0cihcInNyY1wiLHN0clByZU5ld1NyYyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHZhciBzdHJQcmVTcmMgPSAkKFwiLnJlZ3VsYXJseV9tZW51X2xvZ28gaW1nXCIpLmF0dHIoXCJzcmNcIik7XHJcbiAgICAgICAgICAgICAgICB2YXIgc3RyUHJlTmV3U3JjID0gc3RyUHJlU3JjLnJlcGxhY2UoXCIxLnBuZ1wiLFwiLnBuZ1wiKTtcclxuICAgICAgICAgICAgICAgICQoXCIucmVndWxhcmx5X21lbnVfbG9nbyBpbWdcIikuYXR0cihcInNyY1wiLHN0clByZU5ld1NyYyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoaW5kZXghPTApXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHZhciBzdHJDdXJNZW51U3JjID0gJChcIi5tZW51X2ltZ2JveCAucmVndWxhcmx5bWVudSBpbWdcIikuZXEoaW5kZXgtMSkuYXR0cihcInNyY1wiKTtcclxuICAgICAgICAgICAgICAgIGlmKHN0ckN1ck1lbnVTcmMuc3Vic3RyKC01KSAhPSBcIjEucG5nXCIpXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN0ck5ld1NyYyA9IHN0ckN1ck1lbnVTcmMuc3Vic3RyKDAsc3RyQ3VyTWVudVNyYy5sZW5ndGgtNCkrXCIxXCIrc3RyQ3VyTWVudVNyYy5zdWJzdHIoLTQpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIubWVudV9pbWdib3ggaW1nXCIpLnJlbW92ZUNsYXNzKCdsYXJnZXInKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLm1lbnVfaW1nYm94IC5yZWd1bGFybHltZW51IGltZ1wiKS5lcShpbmRleC0xKS5hdHRyKFwic3JjXCIsc3RyTmV3U3JjKS5hZGRDbGFzcygnbGFyZ2VyJyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHZhciBzdHJQcmVTcmMgPSAkKFwiLnJlZ3VsYXJseV9tZW51X2xvZ28gaW1nXCIpLmF0dHIoXCJzcmNcIik7XHJcbiAgICAgICAgICAgICAgICB2YXIgc3RyUHJlTmV3U3JjID0gc3RyUHJlU3JjLnJlcGxhY2UoXCIucG5nXCIsXCIxLnBuZ1wiKTtcclxuICAgICAgICAgICAgICAgICQoXCIubWVudV9pbWdib3ggaW1nXCIpLnJlbW92ZUNsYXNzKCdsYXJnZXInKTtcclxuICAgICAgICAgICAgICAgICQoXCIucmVndWxhcmx5X21lbnVfbG9nbyBpbWdcIikuYXR0cihcInNyY1wiLHN0clByZU5ld1NyYykuYWRkQ2xhc3MoJ2xhcmdlcicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHByZXZpb3VzSW5kZXggPSBpbmRleDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy/ngrnlh7voj5zljZXlip/og73vvIzov5vlhaXlr7nlupTkuJrliqFcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gbWFkZV9tZW51X29uY2xpY2soKXtcclxuICAgICAgICAgICAgdmFyIE1lbnVOYW1lID0gJCh0aGlzKS5maW5kKFwicFwiKS5odG1sKCk7IFxyXG4gICAgICAgICAgICB2YXIgTWVudUlEID0gJCh0aGlzKS5maW5kKFwiLm1lbnVfaWNvblwiKS5hdHRyKFwiZGF0YS1JRF9NRU5VXCIpO1xyXG4gICAgICAgICAgICB2YXIgTWVudUFjdGlvbiA9ICQodGhpcykuZmluZChcImltZ1wiKS5hdHRyKFwiaWRcIik7XHJcbiAgICAgICAgICAgIC8vYXJyPW51bGw7XHJcbiAgICAgICAgICAgIC8vZmlyc3RNZW51PW51bGw7XHJcbiAgICAgICAgICAgIC8vc2Vjb25kTWVudT1udWxsO1xyXG4gICAgICAgICAgICAvL2pzb25EYXRhPW51bGw7XHJcbiAgICAgICAgICAgIHNldFZhcihcIkdEX0EwMV9NZW51SURcIixNZW51SUQpO1xyXG4gICAgICAgICAgICBzZXRWYXIoXCJHRF9BMDFfTWVudU5hbWVcIixNZW51TmFtZSk7XHJcbiAgICAgICAgICAgIHNldFZhcihcIkdEX0EwMV9NZW51QWN0aW9uXCIsTWVudUFjdGlvbik7XHJcbiAgICAgICAgICAgIHNldFZhcihcIkdEX0EwMV9IZWFkZXJfVGltZVwiLFwiMVwiKTtcclxuICAgICAgICAgICAgc2V0VmFyKFwiR0RfQTAxX0hlYWRlcl9FeGl0XCIsXCIxXCIpO1xyXG4gICAgICAgICBcclxuICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0NPTlRJTlVFXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvL+eCueWHu+aQnOe0ouWMuuWfn++8jOW8ueWHuuaooeaAgeahhlxyXG4gICAgICAgIGZ1bmN0aW9uIGJ1c19zZWFyY2hfb25jbGljayhlKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgLy9hbGVydChcInNlYXJjaC5cIik7XHJcbiAgICAgICAgICAgICQoXCIjZ29vZGNvdmVyXCIpLmNzcyhcImRpc3BsYXlcIixcImJsb2NrXCIpO1xyXG4gICAgICAgICAgICAkKFwiI2JsdXJzZWFyY2hcIikuY3NzKFwiZGlzcGxheVwiLFwiYmxvY2tcIik7XHJcbiAgICAgICAgICAgICQoXCIjc2VhcmNoVGV4dFwiKS5mb2N1cygpO1xyXG4gICAgICAgICAgICBTaG93UGlueWluS0IoJy0xJywnLTEnLCdzZWFyY2hUZXh0JywnJylcclxuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIC8v54K55Ye75qih5oCB5qGG77yM5YWz6Zet5qih5oCB5qGGXHJcbiAgICBcclxuICAgICAgICBmdW5jdGlvbiBnb29kY292ZXJfb25jbGljayhlKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgJChcIi5hdXRvLXNjcmVlbmluZy1wcm9tcHRcIikucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgICAkKFwiLmJsdXJzZWFyY2hfc2VsZWN0X2NvbnRlbnRcIikuY3NzKFwiZGlzcGxheVwiLFwibm9uZVwiKTtcclxuICAgICAgICAgICAgJCgnI3NlYXJjaFRleHQnKS52YWwoXCJcIik7XHJcbiAgICAgICAgICAgICQoXCIjYmx1cnNlYXJjaFwiKS5jc3MoXCJkaXNwbGF5XCIsXCJub25lXCIpO1xyXG4gICAgICAgICAgICAkKFwiI2dvb2Rjb3ZlclwiKS5jc3MoXCJkaXNwbGF5XCIsXCJub25lXCIpO1xyXG4gICAgICAgIH1cclxuICBcclxuICAgICAgICAvL+mAgOWHuuaMiemSruS6i+S7tuWkhOeQhlxyXG5cclxuICAgICAgICBmdW5jdGlvbiBidG5fcXVpdF9vbmNsaWNrKClcclxuICAgICAgICB7ICAgICAgICBcclxuICAgICAgICAgICAgLy/liKTmlq3mmK/lkKbnmbvlvZXnirbmgIHvvIzmmK/liJnmj5DnpLrmmK/lkKbpgIDlh7rvvIzlkKbliJnov5vlhaXnrqHmnLrlkZjns7vnu59cclxuXHRcdFx0aWYobG9naW5TdGF0dXMgPT0gXCIxXCIpe1xyXG5cdFx0XHRcdCQuZ2V0KFwiY3VzdG9tZXIvY29tbW9uL2N1c3RfY29tX1RyYWRlRmluaXNoVGlwLmh0bWxcIiwgZnVuY3Rpb24oZGF0YSkge1xyXG5cdFx0XHRcdFx0JCgnI3BhZ2VQb3B1cCcpLmZhZGVJbigzMDApLmh0bWwoZGF0YSk7XHJcblx0XHRcdFx0fSk7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgLy/mnKrnmbvlvZXmqKHlvI/mjInpgIDlh7rov5vlhaXliLDnrqHmnLrlkZhcclxuICAgICAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9BRE1JTlwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvL+aooeeziuaQnOe0ouiwg+eUqOi9r+S7tuebmFxyXG5cclxuICAgICAgICBmdW5jdGlvbiBzZWFyY2hUZXh0X29uY2xpY2soKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgLy9zaG93UGluWWluS0IoMzAwLDM1MCk7XHJcbiAgICAgICAgICAgIFNob3dQaW55aW5LQigtMSwtMSxcInNlYXJjaFRleHRcIixcIlwiKTtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgIFxyXG4gICAgIFxyXG4gICAgICAgICAgICAgICAvL+aooeeziuaQnOe0olxyXG5cclxuICAgICAgICBcclxuICAgICAgICAvLyQoXCIjc2VhcmNoVGV4dFwiKS5iaW5kKCdpbnB1dCBwcm9wZXJ0eWNoYW5nZScsXHJcbiAgICAgICAgZnVuY3Rpb24gc2VhcmNoVGV4dF9vbnByb3BlcnR5Y2hhbmdlKClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIC8vYWxlcnQoXCJzZWFyY2hUZXh0X29ucHJvcGVydHljaGFuZ2VcIik7XHJcbiAgICAgICAgICAgIC8v6L6T5YWl5qGG55qE5YC8XHJcbiAgICAgICAgICAgIHZhciBpbnB1dFRleHQ9JCgnI3NlYXJjaFRleHQnKS52YWwoKTtcclxuICAgICAgICAgICAgLy/pgY3ljoZcclxuICAgICAgICAgICAgLypcclxuICAgICAgICAgICAgaWYgKGlucHV0VGV4dCAhPSBcIlwiKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpPGpzb25EYXRhLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgICAgICAgICBmb3IodmFyIGo9MDtqPGpzb25EYXRhW2ldLkNMRF9NRU5VLmxlbmd0aDtqKyspe1xyXG4gICAgICAgICAgICAgICAgICAgICAgIGlmKGpzb25EYXRhW2ldLkNMRF9NRU5VW2pdLlRYVF9JTlRSTy5pbmRleE9mKGlucHV0VGV4dCkhPS0xKXtcclxuICAgICAgICAgICAgICAgICAgICAgXHR2YXIgYWRkQXJyV29yZCA9IFwiPGRpdiBjbGFzcz1cXFwiYXV0by1zY3JlZW5pbmctcHJvbXB0XFxcIiBkYXRhLUlEX01FTlU9XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICtqc29uRGF0YVtpXS5DTERfTUVOVVtqXS5JRF9NRU5VK1wiPlwiICtqc29uRGF0YVtpXS5DTERfTUVOVVtqXS5OQU1fTUVOVSArIFwiPC9kaXY+XCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZigkKFwiLmF1dG8tc2NyZWVuaW5nLXByb21wdFwiKS5sZW5ndGg8PTUpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjYXV0b1NjcmVlbmluZ1wiKS5hcHBlbmQoYWRkQXJyV29yZCk7XHRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2F1dG9TY3JlZW5pbmdcIikucmVtb3ZlQ2xhc3MoXCJhdXRvLWhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuKi8gICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmIChpbnB1dFRleHQgIT0gXCJcIikge1xyXG4gICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICQoXCIuYmx1cnNlYXJjaF9zZWxlY3RfY29udGVudFwiKS5jc3MoXCJkaXNwbGF5XCIsXCJmbGV4XCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIi5hdXRvLXNjcmVlbmluZy1wcm9tcHRcIikucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpPGpzb25EYXRhLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgICAgICAgICBpZihqc29uRGF0YVtpXS5OQU1fTUVOVSAhPSBcIuW4uOeUqOiPnOWNlVwiKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yKHZhciBqPTA7ajxqc29uRGF0YVtpXS5DTERfTUVOVS5sZW5ndGg7aisrKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoanNvbkRhdGFbaV0uQ0xEX01FTlVbal0uVFhUX0lOVFJPLmluZGV4T2YoaW5wdXRUZXh0LnRvVXBwZXJDYXNlKCkpIT0tMSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYWRkQXJyV29yZD1cIjxkaXYgY2xhc3M9XFxcImF1dG8tc2NyZWVuaW5nLXByb21wdFxcXCIgZGF0YS1JRF9NRU5VPVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAranNvbkRhdGFbaV0uQ0xEX01FTlVbal0uSURfTUVOVStcIiBkYXRhLU5BTV9NRU5VPSBcIiBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICtqc29uRGF0YVtpXS5DTERfTUVOVVtqXS5OQU1fTUVOVSArIFwiIGRhdGEtVFhUX0lOVFJPPSBcIiBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICtqc29uRGF0YVtpXS5DTERfTUVOVVtqXS5UWFRfSU5UUk8gKyBcIj48aW1nIGNsYXNzPVxcXCIgXFxcIiBzcmM9J1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICArdGhlcGF0aCsnL2ltZy9idXMvJytqc29uRGF0YVtpXS5DTERfTUVOVVtqXS5OQU1fSUNPTitcIicgLz48L2Rpdj5cIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZigkKFwiLmF1dG8tc2NyZWVuaW5nLXByb21wdFwiKS5sZW5ndGg8PTQpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2F1dG9TY3JlZW5pbmdcIikuYXBwZW5kKGFkZEFycldvcmQpO1x0XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBcclxuICAgICAgICAgICAgIC8q5bCG5pi+56S65Ye65p2l55qEZGl255qE5YaF5a655Y676YeN5aSN77yMaW5wdXTlhoXlrrnlj5jliqjml7bljrvph43lpI0qL1xyXG4gICAgICAgICAgICAkKFwiLmF1dG8tc2NyZWVuaW5nLXByb21wdFwiKS5lYWNoKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICBpZigkKHRoaXMpLmF0dHIoXCJkYXRhLVRYVF9JTlRST1wiKS5pbmRleE9mKCQoJyNzZWFyY2hUZXh0JykudmFsKCkudG9VcHBlckNhc2UoKSkgPCAwKXtcclxuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSBpZigkKCcjc2VhcmNoVGV4dCcpLnZhbCgpLmxlbmd0aCA9PSAwKXtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLmF1dG8tc2NyZWVuaW5nLXByb21wdFwiKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7IFxyXG4gICAgICAgICAgICAvKuW8ueWHuueahOaPkOekumRpduWOu+mHjeWkjSovXHJcbiAgICAgICAgICAgICQoXCIuYXV0by1zY3JlZW5pbmctcHJvbXB0XCIpLmVhY2goZnVuY3Rpb24oaSl7XHJcbiAgICAgICAgICAgICAgICB2YXIgaVRleHRIdG1sID0gJCh0aGlzKS5hdHRyKFwiZGF0YS1UWFRfSU5UUk9cIik7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmF1dG8tc2NyZWVuaW5nLXByb21wdFwiKS5lYWNoKGZ1bmN0aW9uKGope1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBqVGV4dEh0bWwgPSAkKHRoaXMpLmF0dHIoXCJkYXRhLVRYVF9JTlRST1wiKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaSA8IGogJiYgaVRleHRIdG1sID09IGpUZXh0SHRtbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgfSk7IFxyXG4gICAgICAgICAgICAgICAgIC8q54K55Ye7ZGl26I635Y+W5paH5pys5Lyg5YC8Ki9cclxuICAgICAgICAgICAgJChcIi5hdXRvLXNjcmVlbmluZy1wcm9tcHRcIikub24oXCJjbGlja1wiLGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAkKFwiI3NlYXJjaFRleHRcIikudmFsKCQodGhpcykudGV4dCgpKTtcclxuICAgICAgICAgICAgICAgIHZhciBNZW51TmFtZSA9ICQodGhpcykuYXR0cihcImRhdGEtTkFNX01FTlVcIik7IFxyXG4gICAgICAgICAgICAgICAgdmFyIE1lbnVJRCA9ICQodGhpcykuYXR0cihcImRhdGEtSURfTUVOVVwiKTtcclxuICAgICAgICAgICAgIFxyXG4gICAgICBcclxuICAgICAgICAgICAgICAgICQoXCIjYXV0b1NjcmVlbmluZ1wiKS5hZGRDbGFzcyhcImF1dG8taGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIi5hdXRvLXNjcmVlbmluZy1wcm9tcHRcIikucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICAvL2Fycj1udWxsO1xyXG4gICAgICAgICAgICAgICAgLy9maXJzdE1lbnU9bnVsbDtcclxuICAgICAgICAgICAgICAgIC8vc2Vjb25kTWVudT1udWxsO1xyXG4gICAgICAgICAgICAgICAgLy9qc29uRGF0YT1udWxsO1xyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQTAxX01lbnVJRFwiLE1lbnVJRCk7XHJcbiAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9BMDFfTWVudU5hbWVcIixNZW51TmFtZSk7XHJcbiAgICAgICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfQ09OVElOVUVcIik7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcGxheUFkKCk7XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIHBsYXlBZCgpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpZighaW1nZmlsZSl7XHJcbiAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICBjaGFuZ2VBZCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBjaGFuZ2VBZCgpIFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPGltZ2ZpbGUubGVuZ3RoOyBpKyspIFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB2YXIgQURDaGlsZCA9ICc8ZGl2IGNsYXNzPVwic3dpcGVyLXNsaWRlXCI+PGltZyBzcmM9JyArIGltZ2ZpbGVbaV0gKyAnIGNsYXNzPVwibWFpbkFkdmVydGlzZVwiPjwvZGl2Pic7XHJcbiAgICAgICAgICAgICAgICAkKFwiLm1haW5BZCAuc3dpcGVyLXdyYXBwZXJcIikuYXBwZW5kKEFEQ2hpbGQpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAkKCcubWFpbkFkIC5zd2lwZXItc2xpZGUnKS5hZGRDbGFzcyhcInN3aXBlci1uby1zd2lwaW5nXCIpO1xyXG4gICAgICAgICAgICBhZHRpbWUgPSBzZXRJbnRlcnZhbChzaG93YWR2MSwxODAwMDApO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFkdmVydGlzZWltZ1wiKS5vbmNsaWNrPWhpZGVNYWluQWQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBoaWRlTWFpbkFkKClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgICQoXCIubWFpbkFkXCIpLmNzcyhcImRpc3BsYXlcIixcIm5vbmVcIik7XHJcbiAgICAgICAgICAgICQoXCIubWFpbkFkXCIpLnByZXYoKS5jc3MoXCJkaXNwbGF5XCIsXCJibG9ja1wiKTtcclxuICAgICAgICAgICAgYWR0aW1lID0gc2V0SW50ZXJ2YWwoU2hvd1N3aXBlciwxODAwMDApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gU2hvd1N3aXBlcigpXHJcbiAgICAgICAgeyBcclxuICAgICAgICAgICAgJChcIi5tYWluQWRcIikuY3NzKFwiZGlzcGxheVwiLFwiYmxvY2tcIik7XHJcbiAgICAgICAgICAgICQoXCIubWFpbkFkXCIpLnByZXYoKS5jc3MoXCJkaXNwbGF5XCIsXCJub25lXCIpO1xyXG4gICAgICAgICAgICBjbGVhckludGVydmFsKGFkdGltZSk7XHJcbiAgICAgICAgICAgIHZhciBhZHN3aXBlciA9IG5ldyBTd2lwZXIoXCIubWFpbkFkIC5zd2lwZXItY29udGFpbmVyXCIseyAgICBcclxuICAgICAgICAgICAgICAgIGF1dG9wbGF5OiAyNTAwLFxyXG4gICAgICAgICAgICAgICAgZWZmZWN0OiBcImZhZGVcIixcclxuICAgICAgICAgICAgICAgIGF1dG9wbGF5RGlzYWJsZU9uSW50ZXJhY3Rpb246IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgbG9vcDogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIHNob3dhZHYxKCkgXHJcbiAgICAgICAgeyBcclxuICAgICAgICAgICAgJChcIiNhZHZlcnRpc2VpbWdcIikuY3NzKFwiZGlzcGxheVwiLFwiYmxvY2tcIik7XHJcbiAgICAgICAgICAgICQoXCIubWFpbkFkXCIpLnByZXYoKS5jc3MoXCJkaXNwbGF5XCIsXCJub25lXCIpO1xyXG5cclxuICAgICAgICAgICAgLy/pgJrnn6Xkurrov5HkvKDmhJ/lmajlj6/ku6XnlJ/mlYhcclxuICAgICAgICAgICAgc2V0VmFyKFwiR0RfQTAxX1Nob3dpbmdBRFwiLFwiMVwiKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoYWR0aW1lKTtcclxuICAgICAgICAgICAgdmFyIGFkc3dpcGVyID0gbmV3IFN3aXBlcihcIi5tYWluQWQgLnN3aXBlci1jb250YWluZXJcIix7ICAgIFxyXG4gICAgICAgICAgICAgICAgYXV0b3BsYXk6IDI1MDAsXHJcbiAgICAgICAgICAgICAgICBlZmZlY3Q6IFwiZmFkZVwiLFxyXG4gICAgICAgICAgICAgICAgYXV0b3BsYXlEaXNhYmxlT25JbnRlcmFjdGlvbjogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBsb29wOiB0cnVlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG48L3NjcmlwdD4iLCI8c3R5bGUgc2NvcGVkPlxyXG4ud2VsY29tZS1hbGwge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgei1pbmRleDogMTAwMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4ud2VsY29tZS1jZW50ZXIge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bztcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbjwvc3R5bGU+XHJcbjx0ZW1wbGF0ZT5cclxuICAgIDxkaXYgY2xhc3M9XCJ3ZWxjb21lLWFsbFwiPlxyXG4gICAgICA8dmlkZW8gY2xhc3M9XCJ3ZWxjb21lLWNlbnRlclwiIHJlZj1cInZpZGVvMVwiIGlkPVwidmlkZW8yXCIgYXV0b3BsYXkgQGNsaWNrPVwib25TdG9wXCIgQGVuZGVkPVwib25PdmVyXCI+XHJcbiAgICAgICAgPHNvdXJjZSBzcmM9XCJpbWcvd2VsY29tZS5tcDRcIiB0eXBlPVwidmlkZW8vbXA0XCI+XHJcbiAgICAgIDwvdmlkZW8+XHJcbiAgICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbiAgZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgZGF0YSgpIHtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIG1ldGhvZHM6IHtcclxuICAgICAgICBvblN0b3AgKCkge1xyXG4gICAgICAgICAgLy90aGlzLiRyZWZzLnZpZGVvMi5zdG9wKCk7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLiRyZWZzLnZpZGVvMSk7XHJcbiAgICAgICAgICAkKFwiI3ZpZGVvMlwiKS5zdG9wKCk7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygkKFwiI3ZpZGVvMlwiKSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbk92ZXIgKCkge1xyXG4gICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0NBTkNFTFwiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG48L3NjcmlwdD4iLCI8c3R5bGUgc2NvcGVkPlxyXG4ubmljZS1zZWxlY3Qge1xyXG4gICAgd2lkdGg6IDcwJTtcclxufVxyXG4ucGljTHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHR3aWR0aDogNDUlO1xyXG5cdGhlaWdodDogNjAlO1xyXG5cdGZsb2F0OiBsZWZ0O1xyXG5cdG1hcmdpbjogMCUgNyU7XHJcbn1cclxuLnBpY1J7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRmbGV4LXdyYXA6IHdyYXA7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRoZWlnaHQ6IDEwMCU7XHJcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICB3aWR0aDozMCU7XHJcblx0ZmxvYXQ6IHJpZ2h0O1xyXG59XHJcbi5waG90b19iZyB7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0ZmxleC1ncm93OiAwO1xyXG5cdGhlaWdodDogMzMlO1xyXG5cdG1hcmdpbi1yaWdodDogMiU7XHJcbn1cclxuLnBob3RvX2JnIGltZyB7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0aGVpZ2h0OiA4MCU7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcbn1cclxuLmNvbnRlbnRfbCB7XHJcbiAgICBmb250LXNpemU6IDEuOHJlbTtcclxufVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LWhlaWdodDogODUwcHgpIHtcclxuICAgIC5waG90b19iZyBpbWcge1xyXG5cdCAgICBoZWlnaHQ6IDc1JTtcclxuICAgIH1cclxufVxyXG48L3N0eWxlPlxyXG48dGVtcGxhdGU+XHJcbiAgICA8ZGl2PlxyXG4gICAgICAgIDx4LWhlYWRlcj48L3gtaGVhZGVyPlxyXG4gICAgICAgIDxFTUJFRCBuYW1lPVwiVmlld1NvdW5kXCIgU1JDPVwid2F2L+ivt+iBlOezu+WuoeaguOWRmOi+k+WFpeaMh+e6uee8luWPty53YXZcIiBMb29wPWZhbHNlIEFVVE9TVEFSVD10cnVlIEhpZGRlbj10cnVlIE1BU1RFUlNPVU5EPjwvRU1CRUQ+XHJcblx0XHQ8bWFpbiBjbGFzcz1cIm1haW5cIj5cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250ZW50X2NcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRlbnRfbFwiPlxyXG5cdFx0ICAgICAgICA8ZGl2IGNsYXNzPVwibWFpbl9jb250ZXJcIj5cclxuXHRcdFx0PGRpdiBjbGFzcz1cInBpY0xcIj5cclxuXHRcdFx0XHQ8aW1nIGlkPVwicGljMDFcIiBzdHlsZT1cIm1heC1oZWlnaHQ6MTAwJTttYXgtd2lkdGg6IDEwMCU7XCI+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8ZGl2IGNsYXNzPVwicGljUlwiPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3M9XCJwaG90b19iZ1wiPlxyXG5cdFx0XHRcdFx0PGltZyBpZD1cInBpYzAyXCI+XHJcblx0XHRcdFx0XHQ8c3BhbiB2YWx1ZT0nMDInIGlkPVwicGljbmFtZTAyXCI+PC9zcGFuPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDxkaXYgY2xhc3M9XCJwaG90b19iZ1wiID5cclxuXHRcdFx0XHRcdDxpbWcgaWQ9XCJwaWMwM1wiPlxyXG5cdFx0XHRcdFx0PHNwYW4gdmFsdWU9JzAzJyBpZD1cInBpY25hbWUwM1wiPjwvc3Bhbj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHJcblx0XHRcdFx0PGRpdiBjbGFzcz1cInBob3RvX2JnXCI+XHJcblx0XHRcdFx0XHQ8aW1nIGlkPVwicGljMDRcIj5cclxuXHRcdFx0XHRcdDxzcGFuIHZhbHVlPScwNCcgaWQ9XCJwaWNuYW1lMDRcIj48L3NwYW4+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cclxuXHQ8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidG5ib3hcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG5cIiBpZD1cImJ0bl9iYWNrXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+6YeN5paw5ouN5pGEPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cdFxyXG5cdFx0XHQ8L2RpdiA+XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udGVudF9yXCI+XHJcblx0XHRcdCAgICA8cCBjbGFzcz1cInJfdGl0bGVcIj7lt6XkvZzkurrlkZjlrqHmoLg8L3A+XHJcblx0XHRcdFx0PGRpdiBjbGFzcz1cInJfY29udGVudFwiPlxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzcz1cIm5pY2Utc2VsZWN0XCIgbmFtZT1cIm5pY2Utc2VsZWN0XCI+XHJcblx0XHRcdFx0XHRcdDxwIGlkPVwiYXVkaXRvclwiIHR5cGU9XCJ0ZXh0XCIgcmVhZG9ubHk+PC9wPlxyXG5cdFx0XHRcdFx0XHJcblx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdCAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyX2NvbnRlbnRfZGl2MVwiPjxpbWcgaWQ9XCJJTUdcIiAgc3JjPVwiaW1nL+aMh+e6uS5naWZcIiA+PC9kaXY+XHJcblx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwicl9jb250ZW50X2RpdjJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHAgaWQ9XCJBdWRpdFRpcHNcIj48L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJyPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyX2NvbnRlbnRfZGl2M1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgIDxwIGlkPVwiRXJyb3JJbmZvXCI+PC9wPiBcclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG5cdFx0XHRcclxuICAgICAgICA8L21haW4+XHJcbiAgICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuPHNjcmlwdD4gXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuIG1vdW50ZWQoKXsgICAgXHJcbiAgICAgXHR2YXIgYlBpYzA0ID0gZmFsc2U7XHJcbiAgICAgICAgdmFyIGJQaWNQYXRoMDEgPSBcIlwiO1xyXG4gICAgICAgIHZhciBiUGljUGF0aDAyID0gXCJcIjtcclxuICAgICAgICB2YXIgYlBpY1BhdGgwMyA9IFwiXCI7XHJcbiAgICAgICAgdmFyIGJQaWNQYXRoMDQgPSBcIlwiO1xyXG5cdFx0RGF0YVRvb2xzLmdldChcIkdEX0NvZFBpZHxDX0EwMV9DYW1lcmFQaWNGaWxlfEdEX0EwMV9MQ19TZXJpYWxOb3xHRF9BMDFfRGF0ZVBpY0ZvcmJha1wiLGZ1bmN0aW9uKGRhdGEpe1xyXG5cdFx0XHR2YXIgc3RyQ29kUGlkID0gZGF0YVswXTsgXHJcbiAgICAgICAgICAgIGJQaWNQYXRoMDIgPSBkYXRhWzFdK2RhdGFbMl0rZGF0YVszXStcIjAyLmpwZ1wiO1xyXG4gICAgICAgICAgICBiUGljUGF0aDAzID0gZGF0YVsxXStkYXRhWzJdK2RhdGFbM10rXCIwMy5qcGdcIjtcclxuICAgICAgICAgICAgYlBpY1BhdGgwNCA9IGRhdGFbMV0rZGF0YVsyXStkYXRhWzNdK1wiMDQuanBnXCI7XHJcblx0XHRcdGlmKHN0ckNvZFBpZCA9PSBcIjExMDAxOVwiKXtcclxuXHRcdFx0XHQkKFwiI3BpY25hbWUwMlwiKS5odG1sKFwi5riv5r6z5bGF5rCR5p2l5b6A5YaF5Zyw6YCa6KGM6K+B5q2j6Z2i77yI5bim5Lq65YOP77yJXCIpO1xyXG5cdFx0XHRcdCQoXCIjcGljbmFtZTAzXCIpLmh0bWwoXCLmuK/mvrPlsYXmsJHmnaXlvoDlhoXlnLDpgJrooYzor4Hlj43pnaJcIik7XHJcblx0XHRcdH1lbHNlIGlmKHN0ckNvZFBpZCA9PSBcIjExMDAyMVwiKXtcclxuXHRcdFx0XHQkKFwiI3BpY25hbWUwMlwiKS5odG1sKFwi5Y+w5rm+5bGF5rCR5p2l5b6A5aSn6ZmG6YCa6KGM6K+B5q2j6Z2i77yI5bim5Lq65YOP77yJXCIpO1xyXG5cdFx0XHRcdCQoXCIjcGljbmFtZTAzXCIpLmh0bWwoXCLlj7Dmub7lsYXmsJHmnaXlvoDlpKfpmYbpgJrooYzor4Hlj43pnaJcIik7XHJcblx0XHRcdH1lbHNlIGlmKHN0ckNvZFBpZCA9PSBcIjExMDAzN1wiKXtcclxuXHRcdFx0XHQkKFwiI3BpY25hbWUwMlwiKS5odG1sKFwi5aSW5Zu95Lq65rC45LmF5bGF55WZ6K+B5q2j6Z2i77yI5bim5Lq65YOP77yJXCIpO1xyXG5cdFx0XHRcdCQoXCIjcGljbmFtZTAzXCIpLmh0bWwoXCLlpJblm73kurrmsLjkuYXlsYXnlZnor4Hlj43pnaJcIik7XHJcblx0XHRcdH1lbHNlIGlmKHN0ckNvZFBpZCA9PSBcIjExMDAyNVwiKXtcclxuXHRcdFx0XHQkKFwiI3BpY25hbWUwMlwiKS5odG1sKFwi5aSW5Zu95oqk54Wn5Z+65pys5L+h5oGv6aG1XCIpO1xyXG5cdFx0XHRcdCQoXCIjcGljbmFtZTAzXCIpLmh0bWwoXCLlpJblm73miqTnhafnrb7ms6jpobVcIik7XHJcblx0XHRcdFx0JChcIiNwaWNuYW1lMDRcIikuaHRtbChcIuWkluWbveaKpOeFp+WFpeWig+aXtumXtOmhtVwiKTtcclxuICAgICAgICAgICAgICAgICQoXCIjcGljMDRcIikuYXR0cihcInNyY1wiLGJQaWNQYXRoMDQpO1xyXG5cdFx0XHRcdGJQaWMwNCA9IHRydWU7XHJcblx0XHRcdH1cclxuICAgICAgICAgICAgJChcIiNwaWMwMVwiKS5hdHRyKFwic3JjXCIsYlBpY1BhdGgwMik7XHJcbiAgICAgICAgICAgICQoXCIjcGljMDJcIikuYXR0cihcInNyY1wiLGJQaWNQYXRoMDIpO1xyXG4gICAgICAgICAgICAkKFwiI3BpYzAzXCIpLmF0dHIoXCJzcmNcIixiUGljUGF0aDAzKTtcclxuICAgICAgICAgICAgXHJcblx0XHR9KTsgICAgICAgXHJcblxyXG4gICAgRGF0YVRvb2xzLmdldChcIkdEX0EwMV9NYW5hZ2VyVXNlcnxHRF9NYXhUaW1lRm9yRmluZ2VyfEdEX1Vzck51bVwiLGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIHZhciBqc29uQXJyYXlEYXRhID1cIlwiO1xyXG4gICAgICAgIGlmICggZGF0YVswXSAhPSB1bmRlZmluZWQgJiYgZGF0YVswXSAhPSBudWxsICkgeyAgICAgICAgIFxyXG4gICAgICAgICAgICBqc29uQXJyYXlEYXRhID0gSlNPTi5wYXJzZShkYXRhWzBdKTtcclxuICAgICAgICAgICAgdmFyIGF1ZGl0b3JJZD1uZXcgQXJyYXkoKTtcclxuICAgICAgICAgICAgdmFyIGF1ZGl0b3JOYW1lPW5ldyBBcnJheSgpO1xyXG4gICAgICAgICAgICBpZihqc29uQXJyYXlEYXRhLmxlbmd0aCA9PSAwKXsvL+WIl+ihqOS4uuepulxyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfRXJyUmVhc29uXCIsXCJBdWRpdG9yTGlzdEVtcHR5XCIpO1xyXG4gICAgICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0FVRElUT1JFTVBUWVwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGpzb25BcnJheURhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGF1ZGl0b3JJZC5wdXNoKGpzb25BcnJheURhdGFbaV0udXNlck51bSk7XHJcbiAgICAgICAgICAgICAgICBhdWRpdG9yTmFtZS5wdXNoKGpzb25BcnJheURhdGFbaV0udXNlck51bSk7Ly/lj6rmmL7npLrnlKjmiLfnvJbnoIFcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgY3JlYXRlU2VsZWN0KGF1ZGl0b3JJZCxhdWRpdG9yTmFtZSxcImF1ZGl0b3JcIik7XHJcbiAgICAgICAgICAgIC8v6buY6K6k5pi+56S656ys5LiA5Liq55So5oi3XHJcbiAgICAgICAgICAgIGlmKGRhdGFbMl0hPVwiXCImJmRhdGFbMl0hPW51bGwpe1xyXG4gICAgICAgICAgICAgICAgJChcIiNhdWRpdG9yXCIpLmh0bWwoZGF0YVsyXSk7XHJcbiAgICAgICAgICAgICAgICAkKFwiI2F1ZGl0b3JcIikuYXR0cignZGF0YS12YWx1ZScsZGF0YVsyXSk7XHJcbiAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9Vc3JOdW1cIixkYXRhWzJdKTtcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0EwMV9OdW1VckNmZ1wiLGRhdGFbMl0pO1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICQoXCIjYXVkaXRvclwiKS5odG1sKGF1ZGl0b3JOYW1lWzBdKTtcclxuICAgICAgICAgICAgICAgICQoXCIjYXVkaXRvclwiKS5hdHRyKCdkYXRhLXZhbHVlJyxhdWRpdG9ySWRbMF0pO1xyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfVXNyTnVtXCIsYXVkaXRvck5hbWVbMF0pO1xyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQTAxX051bVVyQ2ZnXCIsYXVkaXRvck5hbWVbMF0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgXHJcbiAgICAgICAgIH1lbHNley8v5YiX6KGo5Li656m6XHJcbiAgICAgICAgICAgIHNldFZhcihcIkdEX0VyclJlYXNvblwiLFwiQXVkaXRvckxpc3RFbXB0eVwiKTtcclxuICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0FVRElUT1JFTVBUWVwiKTtcclxuICAgICAgICAgfSAgICAgICAgIFxyXG4gICAgICAgICAkKFwiI0F1ZGl0VGlwc1wiKS5odG1sKFwiMS7or7fmoLjlrp7or6XnrJTkuJrliqHmmK/lkKbkuLrlrqLmiLfmnKzkurrlip7nkIZcIik7XHJcbiAgICAgICAgLy8gIGFsZXJ0KFwiZGF0YTFcIitkYXRhWzFdKTtcclxuICAgICAgICAgaWYoZGF0YVsxXSA9PSBcIjEwXCIpXHJcbiAgICAgICAgIHtcclxuICAgICAgICAgICAgJChcIiNFcnJvckluZm9cIikuaHRtbChcIuivt+mAieaLqeeUqOaIt+WQjjxicj7ov5vooYzmjIfnurnnoa7orqRcIik7XHJcbiAgICAgICAgIH1cclxuICAgICAgICAgZWxzZVxyXG4gICAgICAgICB7XHJcbiAgICAgICAgICAgICQoXCIjRXJyb3JJbmZvXCIpLmh0bWwoXCLor7fph43mjInmjIfnurk8YnI+5Ymp5L2Z5qyh5pWw77yaXCIrIGRhdGFbMV0gK1wi5qyhXCIpO1xyXG4gICAgICAgICAgICAkKFwiI0Vycm9ySW5mb1wiKS5jc3MoXCJjb2xvclwiLFwicmVkXCIpO1xyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgIC8v5riF56m655So5oi35L+h5oGvLOmHjeaWsOmAieaLqVxyXG4gICAgICAgIC8vc2V0VmFyKFwiR0RfVXNyTnVtXCIsXCJcIik7XHJcblxyXG4gICAgICAgIHZhciBub2RlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tuYW1lPVwibmljZS1zZWxlY3RcIl0gbGknKTtcclxuICAgICAgICBmb3IodmFyIGk9MDsgaTxub2Rlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBub2Rlc1tpXS5vbmNsaWNrPW9uTmljZVNlbGVjdExpQ2xpY2s7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZ1bmN0aW9uIG9uTmljZVNlbGVjdExpQ2xpY2soZSl7XHJcbiAgICAgICAgICAgLy92YXIgdHh0ID0gJCh0aGlzKS50ZXh0KCk7XHJcbiAgICAgICAgICAgIC8v5L+d5a2Y5a6h5qC45ZGY57yW56CBXHJcbiAgICAgICAgICAgIHZhciB2YWw9JCh0aGlzKS5hdHRyKFwiZGF0YS12YWx1ZVwiKTtcclxuICAgICAgICAgICAgc2V0VmFyKFwiR0RfVXNyTnVtXCIsdmFsKTtcclxuICAgICAgICAgICAgc2V0VmFyKFwiR0RfQTAxX051bVVyQ2ZnXCIsdmFsKTtcclxuICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICB9KTtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX2JhY2tcIikub25jbGljaz1vbkJhY2s7XHJcbiAgICBmdW5jdGlvbiBvbkJhY2soZSl7XHJcbiAgICAgICAgZXhpdFNjZW5lKFwiU1RBX1JFU0lHTlwiKTtcclxuICAgIH1cclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGljMDJcIikub25jbGljaz1vblBpYzAyO1xyXG4gICAgZnVuY3Rpb24gb25QaWMwMihlKSB7XHJcbiAgICAgICAgJChcIiNwaWMwMVwiKS5hdHRyKFwic3JjXCIsYlBpY1BhdGgwMik7XHJcbiAgICB9XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBpYzAzXCIpLm9uY2xpY2s9b25QaWMwMztcclxuICAgIGZ1bmN0aW9uIG9uUGljMDMoZSkge1xyXG4gICAgICAgICQoXCIjcGljMDFcIikuYXR0cihcInNyY1wiLGJQaWNQYXRoMDMpO1xyXG4gICAgfVxyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwaWMwNFwiKS5vbmNsaWNrPW9uUGljMDQ7XHJcbiAgICBmdW5jdGlvbiBvblBpYzA0KGUpIHtcclxuICAgICAgICBpZihiUGljMDQpe1xyXG4gICAgICAgICAgICAkKFwiI3BpYzAxXCIpLmF0dHIoXCJzcmNcIixiUGljUGF0aDA0KTtcclxuICAgICAgICB9XHJcbiAgICB9ICAgICAgXHJcblxyXG4gICAgXHJcbiB9XHJcbn1cclxuPC9zY3JpcHQ+ICIsInZhciBfX3Z1ZWlmeV9zdHlsZV9kaXNwb3NlX18gPSByZXF1aXJlKFwidnVlaWZ5L2xpYi9pbnNlcnQtY3NzXCIpLmluc2VydChcImltZ1tkYXRhLXYtMmQyNDA0YWVde1xcclxcbiAgICBkaXNwbGF5OiBibG9jaztcXHJcXG4gICAgbWFyZ2luOiBhdXRvO1xcclxcbiAgICB3aWR0aDogMjAlO1xcclxcbn1cIilcbnZhciBfX3Z1ZV9fb3B0aW9uc19fID0gKHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJmdW5jdGlvblwiPyBtb2R1bGUuZXhwb3J0cy5vcHRpb25zOiBtb2R1bGUuZXhwb3J0cylcbmlmIChfX3Z1ZV9fb3B0aW9uc19fLmZ1bmN0aW9uYWwpIHtjb25zb2xlLmVycm9yKFwiW3Z1ZWlmeV0gZnVuY3Rpb25hbCBjb21wb25lbnRzIGFyZSBub3Qgc3VwcG9ydGVkIGFuZCBzaG91bGQgYmUgZGVmaW5lZCBpbiBwbGFpbiBqcyBmaWxlcyB1c2luZyByZW5kZXIgZnVuY3Rpb25zLlwiKX1cbl9fdnVlX19vcHRpb25zX18ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwieC1tb2RhbFwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwibW9kYWxfdHJhZGluZ0JveFwiLGF0dHJzOntcImlkXCI6XCJtb2RhbF90cmFkaW5nQm94XCJ9fSxbX2MoJ2RpdicsW19jKCdpbWcnLHthdHRyczp7XCJzcmNcIjpfdm0uJHJvb3QuaW1nUGF0aCgnaW1nL2xvYWRpbmcuZ2lmJyl9fSksX3ZtLl92KFwi5q2j5Zyo6K+75Y+W5Y2h54mH5L+h5oGv77yM6K+356iN5YCZLi4uXCIpXSldKV0pfVxuX192dWVfX29wdGlvbnNfXy5zdGF0aWNSZW5kZXJGbnMgPSBbXVxuX192dWVfX29wdGlvbnNfXy5fc2NvcGVJZCA9IFwiZGF0YS12LTJkMjQwNGFlXCJcbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHsgIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIHRydWUpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShfX3Z1ZWlmeV9zdHlsZV9kaXNwb3NlX18pXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi0yZDI0MDRhZVwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtMmQyNDA0YWVcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfVxufSkoKX0iLCI8dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICAgICAgPHAgY2xhc3M9XCJ0aXRsZVwiPuivt+mAieaLqeaCqOaMgeacieeahOS7i+i0qOenjeexuzwvcD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIk1lZGlhS2luZFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIkNhcmRNZWRpYVwiIGlkPVwiTVNDYXJkXCIgIHN0eWxlPVwiZGlzcGxheTpub25lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCJpbWcvY3VzdG9tZXIvTVNDYXJkLnBuZ1wiLz5cclxuICAgICAgICAgICAgICAgICAgICA8cCB2YWx1ZSA9XCIxXCI+56OB5p2h5Y2hPC9wPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiQ2FyZE1lZGlhXCIgaWQ9XCJDaGlwQ2FyZFwiICAgc3R5bGU9XCJkaXNwbGF5Om5vbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz1cImltZy9jdXN0b21lci9JQ0NhcmQucG5nXCIvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxwIHZhbHVlID1cIjJcIj7oiq/niYfljaE8L3A+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiQ2FyZE1lZGlhXCIgaWQ9XCJQYXNzYm9va1wiICBzdHlsZT1cImRpc3BsYXk6bm9uZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiaW1nL2N1c3RvbWVyL3Bhc3Nib29rLnBuZ1wiLz5cclxuICAgICAgICAgICAgICAgICAgICA8cCB2YWx1ZSA9XCI0XCI+5a2Y5oqYPC9wPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcblx0XHRcdFx0PGRpdiBjbGFzcz1cIkNhcmRNZWRpYVwiIGlkPVwiUElDQ1wiICAgc3R5bGU9XCJkaXNwbGF5Om5vbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz1cImltZy9jdXN0b21lci9QSUNDYXJkLnBuZ1wiLz5cclxuICAgICAgICAgICAgICAgICAgICA8cCB2YWx1ZSA9XCIzXCI+6Z2e5o6l6KemSUPljaE8L3A+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICA8L3gtbGF5b3V0LW1haW4+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgbW91bnRlZCAoKSB7XHJcbiAgICAgICAgdmFyIHN0ck1hY2hpbmVUeXBlPVwiXCI7XHJcbiAgICAgICAgRGF0YVRvb2xzLmdldChcIkdEX0EwMV9DdXN0X01lZGlhVHlwZU1hc2t8Q19BMDFfRGV2X01hY2hpbmVUeXBlXCIsZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgIHZhciBzdHJNYXNrID0gZGF0YVswXTtcclxuICAgICAgICAgICAgc3RyTWFjaGluZVR5cGUgPSBkYXRhWzFdO1xyXG4gICAgICAgICAgICAvL3N0ck1hc2sgPSBcIjExMTFcIjtcclxuICAgICAgICAgICAgaWYoc3RyTWFzayA9PSBcIlwiKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAvL+eri+W8j+WSjOW1jOWFpeW8j++8jOm7mOiupOaUr+aMgeWtmOaKmFxyXG4gICAgICAgICAgICAgICAgaWYoc3RyTWFjaGluZVR5cGUgPT0gXCIzXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgc3RyTWFzayA9IFwiMTExMVwiO1xyXG4gICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIHN0ck1hc2sgPSBcIjExMTBcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvL+aYvuekuuWvueW6lOeahOS7i+i0qFxyXG4gICAgICAgICAgICBpZihzdHJNYXNrLnJlcGxhY2UoLzAvZyxcIlwiKS5sZW5ndGg9PTMpe1xyXG4gICAgICAgICAgICAgICAgJChcIi5NZWRpYUtpbmRcIikuY3NzKFwid2lkdGhcIiwgXCI5NiVcIik7XHJcbiAgICAgICAgICAgICAgICAkKFwiLkNhcmRNZWRpYVwiKS5jc3MoXCJtYXJnaW4tbGVmdFwiLCBcIjQlXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKHN0ck1hc2suc3Vic3RyKDAsMSkgPT0gXCIxXCIpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICQoXCIjTVNDYXJkXCIpLmNzcyhcImRpc3BsYXlcIixcImJsb2NrXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKHN0ck1hc2suc3Vic3RyKDEsMSkgPT0gXCIxXCIpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICQoXCIjQ2hpcENhcmRcIikuY3NzKFwiZGlzcGxheVwiLFwiYmxvY2tcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoc3RyTWFzay5zdWJzdHIoMiwxKSA9PSBcIjFcIilcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgJChcIiNQSUNDXCIpLmNzcyhcImRpc3BsYXlcIixcImJsb2NrXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKHN0ck1hc2suc3Vic3RyKDMsMSkgPT0gXCIxXCIpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICQoXCIjUGFzc2Jvb2tcIikuY3NzKFwiZGlzcGxheVwiLFwiYmxvY2tcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIk1TQ2FyZFwiKS5vbmNsaWNrPW9uQ2FyZE1lZGlhO1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiQ2hpcENhcmRcIikub25jbGljaz1vbkNhcmRNZWRpYTtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlBJQ0NcIikub25jbGljaz1vbkNhcmRNZWRpYTtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlBhc3Nib29rXCIpLm9uY2xpY2s9b25DYXJkTWVkaWE7XHJcbiAgICAgICBmdW5jdGlvbiBvbkNhcmRNZWRpYSgpIHtcclxuICAgICAgICAgICAgLy/ojrflj5bku4votKjnsbvlnovmoIflv5dcclxuICAgICAgICAgICAgJChcIi5DYXJkTWVkaWFcIikucmVtb3ZlQ2xhc3MoXCJvblwiKTtcclxuXHRcdCAgICAkKHRoaXMpLmFkZENsYXNzKFwib25cIik7XHJcbiAgICAgICAgICAgIHZhciBNZWRpYVR5cGUgPSAkKHRoaXMpLmZpbmQoJ3AnKS5hdHRyKCd2YWx1ZScpO1xyXG4gICAgICAgICAgICBzZXRWYXIoXCJHRF9BMDFfQ3VzdF9NZWRpYVR5cGVNYXNrXCIsXCJcIik7XHJcbiAgICAgICAgICAgIHNldFZhcihcIkdEX0EwMV9DdXN0X01lZGlhVHlwZVwiLE1lZGlhVHlwZSk7XHJcbiAgICAgICAgICAgIHNldFZhcihcIkdEX0lzSW5zZXJ0UElDXCIsXCIwXCIpO1xyXG4gICAgICAgICAgICBzd2l0Y2goTWVkaWFUeXBlKXtcclxuICAgICAgICAgICAgICAgIGNhc2UgXCIxXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX01TQ0FSRFwiKTsgXHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiMlwiOlxyXG4gICAgICAgICAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9DSElQQ0FSRFwiKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgXCIzXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfSXNJbnNlcnRQSUNcIixcIjFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX1BJQ0NBUkRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiNFwiOlxyXG4gICAgICAgICAgICAgICAgICAgIC8v5qGM6Z2i5qy+L+S+v+aQulxyXG4gICAgICAgICAgICAgICAgICAgIC8vaWYoc3RyTWFjaGluZVR5cGUgPT0gXCIxXCIgfHwgc3RyTWFjaGluZVR5cGUgPT0gXCI1XCIpXHJcbiAgICAgICAgICAgICAgICAgICAgLy97XHJcbiAgICAgICAgICAgICAgICAgICAgICAgLy8gZXhpdFNjZW5lKFwiU1RBX1BBU1NCT09LQlJVU0hcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgLy99XHJcbiAgICAgICAgICAgICAgICAgICAgLy9lbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgLy97XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0EwMV9DdXN0X01lZGlhVHlwZVwiLFwiNVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX1BBU1NCT09LXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vfVxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfRkFJTFwiKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gXHJcbiAgICB9XHJcbn1cclxuPC9zY3JpcHQ+XHJcbiIsIjxzdHlsZSBzY29wZWQ+XHJcbmltZ3tcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgd2lkdGg6IDIwJTtcclxufVxyXG48L3N0eWxlPlxyXG48dGVtcGxhdGU+XHJcbiAgICA8ZGl2IGNsYXNzPVwieC1tb2RhbFwiPlxyXG4gICAgICAgIDxkaXYgaWQ9XCJtb2RhbF90cmFkaW5nQm94XCIgY2xhc3M9XCJtb2RhbF90cmFkaW5nQm94XCI+XHJcbiAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgIDxpbWcgOnNyYz1cIiRyb290LmltZ1BhdGgoJ2ltZy9sb2FkaW5nLmdpZicpXCI+5Lqk5piT5q2j5Zyo6L+b6KGM77yM6K+356iN5YCZLi4uPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcblxyXG48c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5cdG1vdW50ZWQgKCkgXHJcbiAgICB7XHJcbiAgICAgICAgRGF0YVRvb2xzLmdldChcIlJQX0RhdGVDZXJ0QmdufENfQTAxX0JJWlBSTV8wMDEwNHxHRF9BMDFfVHJhbnNfSXNJbnNlcnRDYXJkfEdEX0EwMV9TdGF0dXNfSENBTXxHRF9Db2RQaWR8R0RfQTAxX05lZWRNb3JlSURJbmZvfENfQTAxX0RpY3RfMDAwMDAwMDV8UlBfR2VuZGVyXCIsZnVuY3Rpb24oZGF0YSl7XHJcblx0XHRcdHZhciBSUF9EYXRlQ2VydEJnbiA9IGRhdGFbMF07IFxyXG4gICAgICAgICAgICB2YXIgQ19BMDFfQklaUFJNXzAwMTA0ID0gZGF0YVsxXTtcclxuICAgICAgICAgICAgdmFyIEdEX0EwMV9UcmFuc19Jc0luc2VydENhcmQgPSBkYXRhWzJdO1xyXG4gICAgICAgICAgICB2YXIgR0RfQTAxX1N0YXR1c19IQ0FNID0gZGF0YVszXTtcclxuICAgICAgICAgICAgdmFyIEdEX0NvZFBpZCA9IGRhdGFbNF07XHJcbiAgICAgICAgICAgIHZhciBHRF9BMDFfTmVlZE1vcmVJREluZm8gPSBkYXRhWzVdO1xyXG4gICAgICAgICAgICBzd2l0Y2goR0RfQ29kUGlkKXtcclxuICAgICAgICAgICAgICAgIGNhc2UgXCIxMTAwMTlcIjpcclxuICAgICAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9Db2RDZXJ0T3JnXCIsXCLlhazlronpg6hcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiMTEwMDIxXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQ29kQ2VydE9yZ1wiLFwi5YWs5a6J6YOoXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcIjExMDAzN1wiOlxyXG4gICAgICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0NvZENlcnRPcmdcIixcIuWFrOWuiemDqFwiKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy/mgKfliKvlrZfmrrXlpITnkIZcclxuICAgICAgICAgICAgdmFyIGpzU2V4ID0gSlNPTi5wYXJzZShkYXRhWzZdKTtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBqc1NleC5sZW5ndGg7IGkrKykgeyAgICAgICAgICAgICAgICBcclxuXHRcdFx0XHRpZiAoanNTZXhbaV0uTlVNX0lURU1fRElDID09IGRhdGFbN10pIHtcclxuICAgICAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9HZW5kZXJcIixqc1NleFtpXS5WTFVfSVRFTV9ESUMpO1x0XHRcdFx0XHRcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYoR0RfQTAxX1RyYW5zX0lzSW5zZXJ0Q2FyZCA9PSBcIlwiKXsvL+acquaPkuWNoeS6pOaYkyAgXHJcbiAgICAgICAgICAgICAgICAvL+a4heepuuWcsOWdgOOAgeeUn+aXpeeahOWFqOWxgOWPmOmHj++8jOmBv+WFjeaVsOaNruaui+eVmVxyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQWRkcmVzc1wiLFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQmlydGhkYXlcIixcIlwiKTtcclxuICAgICAgICAgICAgICAgIGlmKEdEX0NvZFBpZCAhPSBcIjExMDAzN1wiKXtcclxuICAgICAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9BMDFfSURDYXJkSXNJQ1wiLFwiMFwiKTtcclxuICAgICAgICAgICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfRklMTElORk9cIik7XHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAvL+WkluWbveS6uuWxheeVmeivgem7mOiupOW4puiKr+eJh1xyXG4gICAgICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0EwMV9JRENhcmRJc0lDXCIsXCIxXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9DT05USU5VRVwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNley8v5bey5o+S5Y2h5Lqk5piTXHJcbiAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9EYXRlQ2VydEJnblwiLFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfRGF0ZUNlcnRFbmRcIixcIlwiKTtcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0JpcnRoZGF5XCIsXCJcIik7XHJcbiAgICAgICAgICAgICAgICBpZihHRF9Db2RQaWQgPT0gXCIxMTAwMzdcIil7Ly/lpJblm73kurrlsYXnlZnor4EgXHJcbiAgICAgICAgICAgICAgICAgICAgaWYoUlBfRGF0ZUNlcnRCZ24ubGVuZ3RoICE9IDgpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9FcnJSZWFzb25cIixcIkRhdGVFcnJUb01vZFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0ZBSUxcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKENfQTAxX0JJWlBSTV8wMDEwNCA9PSBcIlwiKXsgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQTAxX0lEQ2FyZElzSUNcIixcIjFcIik7ICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9SRUFEQ0FSRFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihwYXJzZUludChSUF9EYXRlQ2VydEJnbikgPCBwYXJzZUludChDX0EwMV9CSVpQUk1fMDAxMDQpKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihHRF9BMDFfU3RhdHVzX0hDQU0gPT0gXCJIRUFMVEhZXCIpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9BMDFfSURDYXJkSXNJQ1wiLFwiMFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQTAxX0lzRGVhbE5vdElEQ2FyZEluZm9cIixcIjFcIik7Ly/mnKror7vor4Hku7bvvIzpnIDopoHlpITnkIbnlJ/ml6XjgIHmgKfliKvlrZfmrrVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX1JFQURPS1wiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfRXJyUmVhc29uXCIsXCJOb3RTdXBwb3J0TklDUFJDYXJkXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfRkFJTFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQTAxX0lEQ2FyZElzSUNcIixcIjFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX1JFQURDQVJEXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfWVsc2V7Ly/pnZ7lpJblm73kurrlsYXnlZnor4FcclxuICAgICAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9BMDFfSXNEZWFsTm90SURDYXJkSW5mb1wiLFwiMVwiKTsvL+acquivu+ivgeS7tu+8jOmcgOimgeWkhOeQhueUn+aXpeOAgeaAp+WIq+Wtl+autSAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0NPTlRJTlVFXCIpO1xyXG4gICAgICAgICAgICAgICAgfSAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfSAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBcclxuXHRcdH0pOyAgICAgICAgIFxyXG5cdH1cclxufVxyXG48L3NjcmlwdD5cclxuIiwiPHRlbXBsYXRlPlxyXG5cdDx4LWxheW91dC1tYWluPlxyXG5cdFx0PHAgY2xhc3M9XCJ0aXRsZVwiIGlkPVwiRXNpZ25UaXR0bGVcIj48L3A+XHJcbiAgICAgICAgIDxkaXYgc3R5bGU9XCJ3aWR0aDoxMDAlOyBoZWlnaHQ6IDYwcmVtXCI+PC9kaXY+ICBcclxuXHRcdDxwIGNsYXNzPVwiY2VudGVyX3RpdGxlXCI+PC9wPlxyXG4gICAgICAgIDxkaXYgaWQ9XCJjd3NvdW5kXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+PC9kaXY+XHRcdFxyXG5cdFx0PGRpdiBjbGFzcz1cImJ0bmJveFwiPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuXCIgaWQ9XCJCdG5Ta2lwMjJcIj7ph43mlrDnrb7lkI08L2J1dHRvbj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIGlkPVwiQnRuU3VyZTIyXCI+56GuJm5ic3A7Jm5ic3A7Jm5ic3A75a6aPC9idXR0b24+ICAgXHJcbiAgICAgICAgPC9kaXY+IFxyXG4gICAgPC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHRtb3VudGVkICgpIFxyXG4gICAge1xyXG4gICAgICAgIFxyXG5cdFx0dGhpcy4kcm9vdC4kb24oJ2JlZm9yZVF1aXQnLCBvbkJlZm9yZVF1aXQpO1xyXG4gICAgICAgIGZ1bmN0aW9uIG9uQmVmb3JlUXVpdCgpIFxyXG4gICAgICAgIHtcclxuXHRcdFx0IGV4aXRTY2VuZShcIlNUQV9CRUZPUkVRVUlUXCIpO1xyXG5cdFx0fVxyXG5cdFx0XHJcblx0ICAgIHRoaXMuJHJvb3QuJG9uKCdjYW5jZWxRdWl0Jywgb25DYW5jZWxRdWl0KTtcclxuICAgICAgICBmdW5jdGlvbiBvbkNhbmNlbFF1aXQoKSBcclxuXHR7XHJcblx0XHRcdGV4aXRTY2VuZShcIlNUQV9DQU5DRUxRVUlUXCIpO1xyXG5cdFx0fVxyXG5cclxuICAgICAgICBEYXRhVG9vbHMuZ2V0KFwiQ19BMDFfRGV2X01hY2hpbmVUeXBlfEdEX0NvZFBpZFwiLGZ1bmN0aW9uKGRhdGEpe1xyXG5cdFx0XHR2YXIgc3RyTWFjaGluZVR5cGUgPSBkYXRhWzBdOyBcclxuICAgICAgICAgICAgaWYoc3RyTWFjaGluZVR5cGUgPT0gXCIxXCIgfHwgc3RyTWFjaGluZVR5cGUgPT0gXCIyXCIpe1xyXG5cdFx0XHRcdCQoXCIjRXNpZ25UaXR0bGVcIikuaHRtbChcIuivt+WcqOWkluaOpeeUteWtkOetvuWQjeadv+S4iuetvuWtl1wiKTtcclxuICAgICAgICAgICAgICAgICQoXCIjY3dzb3VuZFwiKS5odG1sKCc8RU1CRUQgbmFtZT1cIlZpZXdTb3VuZFwiIHNyYz1cIndhdi/or7fliLDlpJbmjqXnrb7lrZfniYjnrb7lrZfvvIznrb7lrZflkI7ngrnlh7vnoa7orqTplK4ud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPicpO1xyXG5cdFx0XHR9ZWxzZXtcclxuICAgICAgICAgICAgICAgICQoXCIjRXNpZ25UaXR0bGVcIikuaHRtbChcIuivt+WcqOetvuWQjeWMuuWfn+WGheetvuWtl1wiKTsgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgJChcIiNjd3NvdW5kXCIpLmh0bWwoJzxFTUJFRCBuYW1lPVwiVmlld1NvdW5kXCIgc3JjPVwid2F2L+ivt+etvuWtl++8jOetvuWtl+WQjueCueWHu+ehruiupOmUri53YXZcIiBMb29wPWZhbHNlIEFVVE9TVEFSVD10cnVlIEhpZGRlbj10cnVlIE1BU1RFUlNPVU5EPjwvRU1CRUQ+Jyk7ICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuXHRcdH0pOyBcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIkJ0blNraXAyMlwiKS5vbmNsaWNrPW9uUmVTaWduMjI7XHJcbiAgICAgICAgZnVuY3Rpb24gb25SZVNpZ24yMigpIFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0NMRUFSXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIkJ0blN1cmUyMlwiKS5vbmNsaWNrPW9uU3VyZTIyO1xyXG4gICAgICAgIGZ1bmN0aW9uIG9uU3VyZTIyKCkge1xyXG4gICAgICAgICAgICBwYWdlTG9nKFwiU2lnbiBDb25maXJtLlwiKTtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJCdG5TdXJlMjJcIikuc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIixcImRpc2FibGVkXCIpOyBcclxuICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0NPTlRJTlVFXCIpO1xyXG4gICAgICAgIH1cclxuXHR9XHJcbn1cclxuPC9zY3JpcHQ+XHJcbiIsIjx0ZW1wbGF0ZT5cclxuPGRpdj5cclxuICAgIDxoZWFkZXIgY2xhc3M9XCJoZWFkZXJcIj5cclxuXHRcdDxkaXYgY2xhc3M9XCJoZWFkZXJfcmlnaHRhcmVhXCI+XHJcblx0XHRcdDwhLS3lgJLorqHml7YgLS0+XHJcblx0XHRcdDxkaXYgaWQ9XCJDb3VudERvd25cIiBjbGFzcz1cInRpbWVcIj48L2Rpdj5cclxuXHRcdDwvZGl2PlxyXG5cdDwvaGVhZGVyPlxyXG5cclxuICAgIDxtYWluIGNsYXNzPVwibWFpblwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJwdWJfY29udGVudFwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGFuZWxcIj5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj7kv6Hmga/mj5DnpLo8L3A+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cImNlbnRlcl90aXRsZVwiIGlkPVwiU2hvd1JlYXNvblwiPuato+WcqOWkjeS9jeehrOS7tuaooeWdl++8jOivt+eojeWAmS4uLjwvcD5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidG5ib3hcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG4gZGlzcF9ub25lXCIgaWQ9XCJidG5fc3VyZVwiPuehriZuYnNwOyZuYnNwOyZuYnNwO+WumjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cImNlbnRlcl90aXRsZVwiIGlkPVwiTXNnMVwiPjwvcD5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L21haW4+XHJcbjwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5tb3VudGVkICgpIHtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX3N1cmVcIikub25jbGljaz1vblN1cmU7XHJcblx0ICAgIGZ1bmN0aW9uIG9uU3VyZShlKXtcclxuXHRcdFx0b25Db250aW51ZSgpO1xyXG5cdFx0fVxyXG59XHJcbn1cclxuPC9zY3JpcHQ+IiwiPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcbiAgICAgICAgPHAgY2xhc3M9XCJ0aXRsZVwiPuS6uuiEuOavlOWvueaLjeeFpzwvcD4gICBcclxuICAgICAgICA8RU1CRUQgbmFtZT1cIlZpZXdTb3VuZFwiIFNSQz1cIndhdi/or7flr7nlh4blsY/luZXkuIrnmoTor4bliKvmoYYud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPiAgICAgICAgICAgICBcclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGNyZWF0ZWQgKCkge1xyXG4gICAgICAgIHZhciB2bSA9IHRoaXM7XHJcblx0XHRcclxuXHQgICAgdGhpcy4kcm9vdC4kb25jZSgnQ1dfRmFjZUNhbV9Nc2dSZWNlaXZlZCcsIG9uTXNnUmVjZWl2ZWQpO1xyXG4gICAgICAgIGZ1bmN0aW9uIG9uTXNnUmVjZWl2ZWQoc3RyTXNnKSB7XHJcblx0XHRcdHZtLiRyb290LiRvZmYoJ0NXX0ZhY2VDYW1fTXNnUmVjZWl2ZWQnKTtcclxuICAgICAgICAgICAgdmFyIGpzb25vYmplY3QgPSAkLnBhcnNlSlNPTihzdHJNc2cpO1x0XHJcbiAgICAgICAgICAgIHZhciBzdHJNc2cgPSBcIlwiO1xyXG4gICAgICAgICAgICBpZihqc29ub2JqZWN0ICE9IFwibnVsbFwiKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBzdHJNc2cgPSBMaXZlc0luZm9TdWNjKHZtLkNfRmlsZURJUix2bS5HRF9BMDFfTENfU2VyaWFsTm8sdm0uR0RfQTAxX1VwVWZpbGVQcmFtKTsgICBcclxuICAgICAgICAgICAgfSBlbHNle1xyXG4gICAgICAgICAgICAgICAgc3RyTXNnID0gTGl2ZXNJbmZvRXJyKGpzb25vYmplY3QuUmVzdWx0KTsgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2bS5DV19TdWNjKHN0ck1zZyk7XHJcblx0XHR9O1xyXG5cdFx0XHJcblx0ICAgIHRoaXMuJHJvb3QuJG9uKCdiZWZvcmVRdWl0Jywgb25CZWZvcmVRdWl0KTtcclxuICAgICAgICBmdW5jdGlvbiBvbkJlZm9yZVF1aXQoKSB7XHJcbiAgICAgICAgICAgIENXX0Rlc3Ryb3koKTtcclxuXHRcdH07XHJcblx0XHRcclxuXHRcdHRoaXMuJHJvb3QuJG9uKCdjYW5jZWxRdWl0Jywgb25DYW5jZWxRdWl0KTtcclxuICAgICAgICBmdW5jdGlvbiBvbkNhbmNlbFF1aXQoKSB7XHJcblx0XHRcdHZhciBzdHJNc2cgPSBDV19Jbml0KCk7XHJcbiAgICAgICAgICAgIGlmKHN0ck1zZyAhPSBcIlwiKXtcclxuICAgICAgICAgICAgICAgIHZtLkNXX1N1Y2Moc3RyTXNnKTtcclxuICAgICAgICAgICAgfVxyXG5cdFx0fTtcclxuICAgICAgICBcclxuXHR9LCAgICBcclxuXHRkZXN0cm95ZWQgKCkge1xyXG5cdFx0dGhpcy4kcm9vdC4kb2ZmKCdDV19GYWNlQ2FtX01zZ1JlY2VpdmVkJyk7ICAgICBcclxuICAgICAgICB0aGlzLiRyb290LiRvZmYoJ2JlZm9yZVF1aXQnKTsgICAgIFxyXG4gICAgICAgIHRoaXMuJHJvb3QuJG9mZignY2FuY2VsUXVpdCcpOyAgICAgICAgXHJcblx0fSxcclxuICAgIGRhdGEgKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcblx0XHRcdENfRmlsZURJUjogXCJcIixcclxuXHRcdFx0R0RfQTAxX0xDX1NlcmlhbE5vOiBcIlwiLFxyXG4gICAgICAgICAgICBHRF9BMDFfVXBVZmlsZVByYW06XCJcIlxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgICAgQ1dfU3VjYzogZnVuY3Rpb24gKHN0ck1zZykgeyAgICBcclxuICAgICAgICAgICAgdmFyIGFycnN0ciA9IHN0ck1zZy5zcGxpdChcIixcIik7XHJcbiAgICAgICAgICAgIGlmKGFycnN0clsxXSA9PSBcIlNUQV9DT05USU5VRVwiKXtcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0EwMV9VcFVmaWxlUHJhbVwiLGFycnN0clswXSk7XHJcbiAgICAgICAgICAgIH0gICAgXHJcbiAgICAgICAgICAgIGV4aXRTY2VuZShhcnJzdHJbMV0pOyBcclxuICAgICAgICB9ICAgICAgICBcclxuICAgIH0sXHJcbiAgICBtb3VudGVkICgpIHtcclxuICAgICAgICB2YXIgdm0gPSB0aGlzOyAgICAgICAgICAgIFxyXG4gICAgICAgIERhdGFUb29scy5nZXQoXCJDX0EwMV9DYW1lcmFQaWNGaWxlfEdEX0EwMV9MQ19TZXJpYWxOb3xHRF9BMDFfVXBVZmlsZVByYW1cIixmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgdm0uQ19GaWxlRElSID0gZGF0YVswXTtcclxuICAgICAgICAgICAgdm0uR0RfQTAxX0xDX1NlcmlhbE5vID0gZGF0YVsxXTtcclxuICAgICAgICAgICAgdm0uR0RfQTAxX1VwVWZpbGVQcmFtID0gZGF0YVsyXTtcclxuICAgICAgICAgICAgdmFyIHN0ck1zZyA9IENXX0luaXQoKTtcclxuICAgICAgICAgICAgaWYoc3RyTXNnICE9IFwiXCIpe1xyXG4gICAgICAgICAgICAgICAgdm0uQ1dfU3VjYyhzdHJNc2cpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHZhciB0PTE3O1xyXG4gICAgICAgIHZhciB0aW1lckZhY2UgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpeyBcclxuICAgICAgICAgICAgaWYgKHQ8MCkgeyBcdFx0XHRcclxuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXJGYWNlKTtcclxuICAgICAgICAgICAgICAgIENXX0Rlc3Ryb3koKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfWVsc2V7ICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICB0PXQtMTsgXHJcbiAgICAgICAgICAgIH0gXHJcbiAgICAgICAgfSwxMDAwKTtcclxuICAgIH1cclxufVxyXG48L3NjcmlwdD5cclxuIiwiPHN0eWxlIHNjb3BlZD5cclxuLnVsX1Jlc3VsdF9zY3JvbGx7XHJcbiAgICBtYXJnaW46MiUgMzglO1xyXG4gICAgd2lkdGg6IDYwJTtcclxufVxyXG4gLlJlY2VpcHRRUkltYWdlIHtcclxuXHRwb3NpdGlvbjphYnNvbHV0ZTtcclxuXHRmbG9hdDpsZWZ0O1xyXG5cdGJvdHRvbTo0NSU7XHJcblx0bGVmdDozJTtcclxuXHR3aWR0aDozNjBweDtcclxuXHRoZWlnaHQ6MzYwcHhcclxufVxyXG4gLlJlY2VpcHRRUkltYWdlIGltZ3tcclxuXHRcdHdpZHRoOjEwMCU7XHJcbn1cclxuLlFSQ29kZSB7XHJcblx0cG9zaXRpb246YWJzb2x1dGU7XHJcblx0ZmxvYXQ6bGVmdDtcclxuXHRib3R0b206MCU7ICAgICAgICBcclxufSAgXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtaGVpZ2h0OiA4NTBweCkge1xyXG4gICAgIC5SZWNlaXB0UVJJbWFnZSB7XHJcbiAgICAgICAgd2lkdGg6IDMxMHB4O1xyXG4gICAgICAgIGhlaWdodDogMzEwcHg7XHJcbiAgICAgICAgYm90dG9tOjQzJTtcclxuICAgICB9XHJcbiAgICAuUVJDb2RlIGltZ3tcclxuICAgICAgIG1heC13aWR0aDogODAlOyAgICAgICBcclxuICAgIH0gIFxyXG4gICAgLnVsX1Jlc3VsdF9zY3JvbGx7XHJcbiAgICAgICAgd2lkdGg6IDYwJTtcclxuICAgICAgICBtYXgtaGVpZ2h0OiA0ODBweDtcclxuICAgICAgICBmb250LXNpemU6IDIuNnJlbTtcclxuICAgIH0gICAgICAgXHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEzMDBweCkgYW5kICAobWF4LXdpZHRoOjEzODBweCkgeyAgXHJcbiAgICAudWxfUmVzdWx0X3Njcm9sbHtcclxuICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgIGhlaWdodDogNjUlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMi42cmVtO1xyXG4gICAgfSAgICAgICBcclxufVxyXG48L3N0eWxlPlxyXG48dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICA8cCBjbGFzcz1cInRpdGxlXCIgaWQ9XCJ0aXRsZVwiPuS6pOaYk+W3sue7k+adn++8jOivt+S7lOe7huaguOWvueS6pOaYk+e7k+aenDwvcD5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiUmVjZWlwdFFSSW1hZ2VcIiBpZD1cIlFSSU1HXCI+XHJcbiAgICAgICAgICAgIDxpbWcgaWQ9XCJJTUdcIiBzcmM9XCJcIj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiUVJDb2RlXCIgaWQ9XCJRUkdJRlwiPlxyXG4gICAgICAgICAgICA8aW1nIHNyYz1cImltZy/kuoznu7TnoIHliqjnlLsuZ2lmXCIgPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cdFx0PHVsIGNsYXNzPVwidWxfUmVzdWx0X3Njcm9sbFwiIGlkPVwiVHJhbkxpc3RcIj5cdCAgXHJcblxyXG5cdFx0PC91bD5cclxuICAgICAgICA8cCBjbGFzcz1cInRpcHNcIiBpZD1cInRpcFwiPuWvueS4jei1t++8jOaaguaXoOazleaPkOS+m+WbnuWNleaJk+WNsOacjeWKoe+8jOivt+S7lOe7huaguOWvueS6pOaYk+e7k+aenDwvcD5cclxuXHRcdDxkaXYgY2xhc3M9XCJidG5ib3hcIj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIGlkPVwiYnRuX3N1cmVcIj7noa4mbmJzcDsmbmJzcDsmbmJzcDvlrpo8L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj4gXHJcbiAgICA8L3gtbGF5b3V0LW1haW4+XHJcbjwvdGVtcGxhdGU+XHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIG1vdW50ZWQgKCkge1xyXG4gICAgICAgIERhdGFUb29scy5nZXQoXCJHRF9BMDFfQ3VzdF9SUUltZ05hbWV8R0RfQTAxX0ZvcmNlU2hvd1Jlc3VsdEh0bWxWYWx1ZVwiLGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICAkKFwiI0lNR1wiKS5hdHRyKFwic3JjXCIsZGF0YVswXSk7XHJcbiAgICAgICAgICAgICQoXCIjVHJhbkxpc3RcIikuaHRtbChkYXRhWzFdLnJlcGxhY2UoL1xcQCFAL2csIFwiPVwiKSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX3N1cmVcIikub25jbGljaz1vblN1cmU7XHJcblx0ICAgIGZ1bmN0aW9uIG9uU3VyZShlKXtcclxuXHRcdFx0b25Db250aW51ZSgpO1xyXG5cdFx0fVxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PiIsIjx0ZW1wbGF0ZT5cclxuICAgPGRpdiBjbGFzcz1cIngtbW9kYWxcIj5cclxuXHRcdDxwIGNsYXNzPVwidGl0bGVcIj7kv6Hmga/mj5DnpLo8L3A+XHJcblx0XHQ8cCBzdHlsZT1cInRleHQtYWxpZ246Y2VudGVyO2ZvbnQtc2l6ZToyLjdyZW07dG9wOjMwJTtwb3NpdGlvbjogcmVsYXRpdmU7XCI+5piv5ZCm5Li65paw5qy+5aSW5Zu95Lq65rC45LmF5bGF55WZ6Lqr5Lu96K+B77yfPC9wPlxyXG5cclxuXHRcdDxkaXYgY2xhc3M9XCJtb2RhbF9idG5ib3hcIj5cclxuXHRcdFx0PGJ1dHRvbiBjbGFzcz1cImJ0blwiIGlkPVwiYnRuX2JhY2sxXCI+5ZCmPC9idXR0b24+XHJcblx0XHRcdDxidXR0b24gY2xhc3M9XCJidG5cIiBpZD1cImJ0bl9zdXJlMVwiPuaYrzwvYnV0dG9uPlxyXG5cdFx0PC9kaXY+XHJcblx0PC9kaXY+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcblx0bW91bnRlZCAoKSB7XHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bl9iYWNrMVwiKS5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1x0XHJcblx0XHRcdHNldFZhcihcIkdEX0EwMV9JRENhcmRJc0lDXCIsXCIwXCIpO1x0XHRcdFxyXG5cdFx0XHRleGl0U2NlbmUoXCJTVEFfQ09OVElOVUVcIik7XHJcblx0XHR9O1xyXG5cclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX3N1cmUxXCIpLm9uY2xpY2sgPSBmdW5jdGlvbiAoKSB7XHRcclxuXHRcdFx0c2V0VmFyKFwiR0RfQTAxX0lEQ2FyZElzSUNcIixcIjFcIik7XHJcbiAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9DT05USU5VRVwiKTtcclxuXHRcdH07XHRcdFxyXG5cdH1cclxufVxyXG48L3NjcmlwdD4iLCI8dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICAgICAgPHAgY2xhc3M9XCJ0aXRsZVwiPuaJk+WNsOaIkOWKn++8jOivt+WPlui1sOaCqOeahOWbnuWNlTwvcD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIngtaHNnaWZcIj5cclxuICAgICAgICAgICAgICAgIDxpbWcgOnNyYz1cIiRyb290LmltZ1BhdGgoJ2ltZy8nKyRyb290LmdldEltZ1BhdGgoKSsnUHJpbnRBNC5naWYnKVwiPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ0bmJveFwiPlxyXG5cdFx0XHQgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBzdXJlYnRuXCIgaWQ9XCJidG5fc3VyZVwiIEBjbGljaz1cIm9uU3VyZVwiPuehriZuYnNwOyZuYnNwOyZuYnNwO+iupDwvYnV0dG9uPlxyXG5cdFx0ICAgIDwvZGl2PlxyXG4gICAgPC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHN0eWxlIHNjb3BlZD5cclxuLngtaHNnaWZ7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgbWFyZ2luOiAwJSBhdXRvO1xyXG59XHJcbi54LWhzZ2lmIGltZ3tcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbi50aXRsZTpiZWZvcmUge1xyXG4gICAgd2lkdGg6IDE1MHB4O1xyXG59XHJcbi50aXRsZTphZnRlciB7XHJcbiAgICB3aWR0aDogMTUwcHg7XHJcbn1cclxuPC9zdHlsZT5cclxuPHNjcmlwdD5cclxuaW1wb3J0IHsgbWFwU3RhdGUgLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIG1ldGhvZHM6IHtcclxuICAgICAgICBvblN1cmUgKCkge1xyXG4gICAgICAgICAgICB0aGlzLm9uQ29udGludWUoKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC4uLm1hcEFjdGlvbnMoWydpbml0UG9vbCcsICdmZXRjaCcsICdvbkNvbnRpbnVlJ10pXHJcbiAgICB9LFxyXG4gICAgbW91bnRlZCAoKSB7IFxyXG5cclxuICAgIH1cclxufVxyXG48L3NjcmlwdD5cclxuXHJcbiIsIjxzdHlsZSBzY29wZWQ+XHJcbi5waWNMe1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdHdpZHRoOiA0NSU7XHJcblx0aGVpZ2h0OiA2MCU7XHJcblx0ZmxvYXQ6IGxlZnQ7XHJcblx0bWFyZ2luOiAwJSA3JTtcclxufVxyXG4ucGljUntcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGZsZXgtd3JhcDogd3JhcDtcclxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdGhlaWdodDogMTAwJTtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHR3aWR0aDozMCU7XHJcblx0ZmxvYXQ6IHJpZ2h0O1xyXG59XHJcbi5waG90b19iZyB7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0ZmxleC1ncm93OiAwO1xyXG5cdGhlaWdodDogMzMlO1xyXG5cdG1hcmdpbi1yaWdodDogMiU7XHJcbn1cclxuLnBob3RvX2JnIGltZyB7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0aGVpZ2h0OiA4MCU7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcbn1cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC1oZWlnaHQ6IDg1MHB4KSB7XHJcbiAgICAucGhvdG9fYmcgaW1nIHtcclxuXHQgICAgaGVpZ2h0OiA3NSU7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtaGVpZ2h0OiA3ODBweCkge1xyXG4gICAgLnBpY0x7XHJcblx0ICAgIG1hcmdpbjogMiUgNyU7XHJcbiAgICB9XHJcbn1cclxuPC9zdHlsZT5cclxuXHJcbjx0ZW1wbGF0ZT5cclxuICAgIDx4LWxheW91dC1tYWluPlxyXG5cdFx0PGRpdiBjbGFzcz1cIm1haW5fY29udGVyXCI+XHJcblx0XHRcdDxkaXYgY2xhc3M9XCJwaWNMXCI+XHJcblx0XHRcdFx0PGltZyBpZD1cInBpYzAxXCIgc3R5bGU9XCJtYXgtaGVpZ2h0OjEwMCU7bWF4LXdpZHRoOiAxMDAlO1wiPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PGRpdiBjbGFzcz1cInBpY1JcIj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwicGhvdG9fYmdcIj5cclxuXHRcdFx0XHRcdDxpbWcgaWQ9XCJwaWMwMlwiPlxyXG5cdFx0XHRcdFx0PHNwYW4gdmFsdWU9JzAyJyBpZD1cInBpY25hbWUwMlwiIHN0eWxlPVwiZm9udC1zaXplOmxhcmdlO1wiPjwvc3Bhbj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwicGhvdG9fYmdcIiA+XHJcblx0XHRcdFx0XHQ8aW1nIGlkPVwicGljMDNcIj5cclxuXHRcdFx0XHRcdDxzcGFuIHZhbHVlPScwMycgaWQ9XCJwaWNuYW1lMDNcIiBzdHlsZT1cImZvbnQtc2l6ZTpsYXJnZTtcIj48L3NwYW4+XHJcblx0XHRcdFx0PC9kaXY+XHJcblxyXG5cdFx0XHRcdDxkaXYgY2xhc3M9XCJwaG90b19iZ1wiPlxyXG5cdFx0XHRcdFx0PGltZyBpZD1cInBpYzA0XCI+XHJcblx0XHRcdFx0XHQ8c3BhbiB2YWx1ZT0nMDQnIGlkPVwicGljbmFtZTA0XCIgc3R5bGU9XCJmb250LXNpemU6bGFyZ2U7XCI+PC9zcGFuPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHJcblx0PC9kaXY+XHRcdFxyXG5cdDxkaXYgY2xhc3M9XCJidG5ib3hcIj5cclxuXHRcdDxidXR0b24gY2xhc3M9XCJidG4gYmFja2J0blwiIHN0eWxlPVwiZGlzcGxheTpub25lO1wiIGlkPVwiUmV0YWtlXCI+6YeN5pGEPC9idXR0b24+XHJcblx0XHQ8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG5cIiBzdHlsZT1cImRpc3BsYXk6aW5saW5lO1wiIGlkPVwiUGljdGFrZVwiPuaLjeaRhDwvYnV0dG9uPlxyXG5cdFx0PGJ1dHRvbiBjbGFzcz1cImJ0biBzdXJlYnRuXCIgaWQ9XCJCdG5TdXJlXCIgIGRpc2FibGVkPVwidHJ1ZVwiID7kuIvkuIDmraU8L2J1dHRvbj5cclxuXHQ8L2Rpdj5cclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcblx0Y3JlYXRlZCAoKSB7XHJcblx0ICAgIHRoaXMuJHJvb3QuJG9uKCdiZWZvcmVRdWl0Jywgb25CZWZvcmVRdWl0KTtcclxuICAgICAgICBmdW5jdGlvbiBvbkJlZm9yZVF1aXQoKSB7XHJcblx0XHRcdGV4aXRTY2VuZShcIlNUQV9CRUZPUkVRVUlUXCIpO1xyXG5cdFx0fTtcclxuXHRcdFxyXG5cdFx0dGhpcy4kcm9vdC4kb24oJ2NhbmNlbFF1aXQnLCBvbkNhbmNlbFF1aXQpO1xyXG4gICAgICAgIGZ1bmN0aW9uIG9uQ2FuY2VsUXVpdCgpIHtcclxuXHRcdFx0ZXhpdFNjZW5lKFwiU1RBX0NBTkNFTFFVSVRcIik7XHJcblx0XHR9O1xyXG4gICAgICAgIFxyXG5cdH0sXHJcblx0ZGVzdHJveWVkICgpIHsgICBcclxuICAgICAgICB0aGlzLiRyb290LiRvZmYoJ2JlZm9yZVF1aXQnKTsgICAgIFxyXG4gICAgICAgIHRoaXMuJHJvb3QuJG9mZignY2FuY2VsUXVpdCcpOyAgICAgICAgXHJcblx0fSxcclxuXHRtb3VudGVkICgpIHtcclxuXHRcdC8vJChcIiNwaWNuYW1lMDJcIikuaHRtbChcIua4r+a+s+WxheawkeadpeW+gOWGheWcsOmAmuihjOivge+8iOW4puS6uuWDj++8iVwiKTtcclxuXHRcdFx0XHQvLyQoXCIjcGljbmFtZTAzXCIpLmh0bWwoXCLmuK/mvrPlsYXmsJHmnaXlvoDlhoXlnLDpgJrooYzor4FcIik7XHJcblx0XHR2YXIgYlBpYzA0ID0gZmFsc2U7XHJcblx0XHREYXRhVG9vbHMuZ2V0KFwiR0RfQ29kUGlkXCIsZnVuY3Rpb24oZGF0YSl7XHJcblx0XHRcdHZhciBzdHJDb2RQaWQgPSBkYXRhLnRvU3RyaW5nKCk7IFxyXG5cdFx0XHRpZihzdHJDb2RQaWQgPT0gXCIxMTAwMTlcIil7XHJcblx0XHRcdFx0JChcIiNwaWNuYW1lMDJcIikuaHRtbChcIua4r+a+s+WxheawkeadpeW+gOWGheWcsOmAmuihjOivgeato+mdou+8iOW4puS6uuWDj++8iVwiKTtcclxuXHRcdFx0XHQkKFwiI3BpY25hbWUwM1wiKS5odG1sKFwi5riv5r6z5bGF5rCR5p2l5b6A5YaF5Zyw6YCa6KGM6K+B5Y+N6Z2iXCIpO1xyXG5cdFx0XHR9ZWxzZSBpZihzdHJDb2RQaWQgPT0gXCIxMTAwMjFcIil7XHJcblx0XHRcdFx0JChcIiNwaWNuYW1lMDJcIikuaHRtbChcIuWPsOa5vuWxheawkeadpeW+gOWkp+mZhumAmuihjOivgeato+mdou+8iOW4puS6uuWDj++8iVwiKTtcclxuXHRcdFx0XHQkKFwiI3BpY25hbWUwM1wiKS5odG1sKFwi5Y+w5rm+5bGF5rCR5p2l5b6A5aSn6ZmG6YCa6KGM6K+B5Y+N6Z2iXCIpO1xyXG5cdFx0XHR9ZWxzZSBpZihzdHJDb2RQaWQgPT0gXCIxMTAwMzdcIil7XHJcblx0XHRcdFx0JChcIiNwaWNuYW1lMDJcIikuaHRtbChcIuWkluWbveS6uuawuOS5heWxheeVmeivgeato+mdou+8iOW4puS6uuWDj++8iVwiKTtcclxuXHRcdFx0XHQkKFwiI3BpY25hbWUwM1wiKS5odG1sKFwi5aSW5Zu95Lq65rC45LmF5bGF55WZ6K+B5Y+N6Z2iXCIpO1xyXG5cdFx0XHR9ZWxzZSBpZihzdHJDb2RQaWQgPT0gXCIxMTAwMjVcIil7XHJcblx0XHRcdFx0JChcIiNwaWNuYW1lMDJcIikuaHRtbChcIuWkluWbveaKpOeFp+WfuuacrOS/oeaBr+mhtVwiKTtcclxuXHRcdFx0XHQkKFwiI3BpY25hbWUwM1wiKS5odG1sKFwi5aSW5Zu95oqk54Wn562+5rOo6aG1XCIpO1xyXG5cdFx0XHRcdCQoXCIjcGljbmFtZTA0XCIpLmh0bWwoXCLlpJblm73miqTnhaflhaXlooPml7bpl7TpobVcIik7XHJcblx0XHRcdFx0YlBpYzA0ID0gdHJ1ZTtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIkJ0blN1cmVcIikub25jbGljaz1vblN1cmU7XHJcblx0XHRmdW5jdGlvbiBvblN1cmUoZSkge1xyXG5cdFx0XHRvbkNvbnRpbnVlKCk7XHJcbiAgICAgICAgICAgIFxyXG5cdFx0fVxyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJQaWN0YWtlXCIpLm9uY2xpY2s9b25QaWN0YWtlO1xyXG4gICAgICAgIGZ1bmN0aW9uIG9uUGljdGFrZShlKSB7XHJcbiAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9ORVhUXCIpO1xyXG5cdFx0fVxyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJSZXRha2VcIikub25jbGljaz1vblJldGFrZTtcclxuXHRcdGZ1bmN0aW9uIG9uUmV0YWtlKGUpIHtcclxuICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX1JFVEFLRVwiKTtcclxuICAgICAgICB9XHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBpYzAyXCIpLm9uY2xpY2s9b25QaWMwMjtcclxuXHRcdGZ1bmN0aW9uIG9uUGljMDIoZSkge1xyXG4gICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfUElDMDJcIik7XHJcbiAgICAgICAgfVxyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwaWMwM1wiKS5vbmNsaWNrPW9uUGljMDM7XHJcblx0XHRmdW5jdGlvbiBvblBpYzAzKGUpIHtcclxuICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX1BJQzAzXCIpO1xyXG4gICAgICAgIH1cclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGljMDRcIikub25jbGljaz1vblBpYzA0O1xyXG5cdFx0ZnVuY3Rpb24gb25QaWMwNChlKSB7XHJcbiAgICAgICAgICAgIGlmKGJQaWMwNCl7XHJcblx0XHRcdFx0ZXhpdFNjZW5lKFwiU1RBX1BJQzA0XCIpO1xyXG5cdFx0XHR9XHJcbiAgICAgICAgfSAgICAgICBcclxuICAgIH1cclxufVxyXG48L3NjcmlwdD4iLCJ2YXIgX192dWVpZnlfc3R5bGVfZGlzcG9zZV9fID0gcmVxdWlyZShcInZ1ZWlmeS9saWIvaW5zZXJ0LWNzc1wiKS5pbnNlcnQoXCJpbWdbZGF0YS12LWJmYWFjYzI0XXtcXHJcXG4gICAgZGlzcGxheTogYmxvY2s7XFxyXFxuICAgIG1hcmdpbjogYXV0bztcXHJcXG4gICAgd2lkdGg6IDIwJTtcXHJcXG59XCIpXG52YXIgX192dWVfX29wdGlvbnNfXyA9ICh0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09IFwiZnVuY3Rpb25cIj8gbW9kdWxlLmV4cG9ydHMub3B0aW9uczogbW9kdWxlLmV4cG9ydHMpXG5pZiAoX192dWVfX29wdGlvbnNfXy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWVpZnldIGZ1bmN0aW9uYWwgY29tcG9uZW50cyBhcmUgbm90IHN1cHBvcnRlZCBhbmQgc2hvdWxkIGJlIGRlZmluZWQgaW4gcGxhaW4ganMgZmlsZXMgdXNpbmcgcmVuZGVyIGZ1bmN0aW9ucy5cIil9XG5fX3Z1ZV9fb3B0aW9uc19fLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIngtbW9kYWxcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIm1vZGFsX3RyYWRpbmdCb3hcIixhdHRyczp7XCJpZFwiOlwibW9kYWxfdHJhZGluZ0JveFwifX0sW19jKCdkaXYnLFtfYygnaW1nJyx7YXR0cnM6e1wic3JjXCI6X3ZtLiRyb290LmltZ1BhdGgoJ2ltZy9sb2FkaW5nLmdpZicpfX0pLF92bS5fdihcIuato+WcqOivu+WPluivgeS7tuS/oeaBr++8jOivt+eojeWAmS4uLlwiKV0pXSldKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW11cbl9fdnVlX19vcHRpb25zX18uX3Njb3BlSWQgPSBcImRhdGEtdi1iZmFhY2MyNFwiXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7ICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCB0cnVlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBtb2R1bGUuaG90LmRpc3Bvc2UoX192dWVpZnlfc3R5bGVfZGlzcG9zZV9fKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtYmZhYWNjMjRcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LWJmYWFjYzI0XCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH1cbn0pKCl9IiwidmFyIF9fdnVlX19vcHRpb25zX18gPSAodHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcImZ1bmN0aW9uXCI/IG1vZHVsZS5leHBvcnRzLm9wdGlvbnM6IG1vZHVsZS5leHBvcnRzKVxuaWYgKF9fdnVlX19vcHRpb25zX18uZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlaWZ5XSBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgYW5kIHNob3VsZCBiZSBkZWZpbmVkIGluIHBsYWluIGpzIGZpbGVzIHVzaW5nIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuX192dWVfX29wdGlvbnNfXy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfdm0uX20oMCl9XG5fX3Z1ZV9fb3B0aW9uc19fLnN0YXRpY1JlbmRlckZucyA9IFtmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2JyxbX2MoJ2hlYWRlcicse3N0YXRpY0NsYXNzOlwiaGVhZGVyXCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJoZWFkZXJfcmlnaHRhcmVhXCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJ0aW1lXCIsYXR0cnM6e1wiaWRcIjpcIkNvdW50RG93blwifX0pXSldKSxfdm0uX3YoXCIgXCIpLF9jKCdtYWluJyx7c3RhdGljQ2xhc3M6XCJtYWluXCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJwdWJfY29udGVudFwifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwicGFuZWxcIn0sW19jKCdwJyx7c3RhdGljQ2xhc3M6XCJ0aXRsZVwifSxbX3ZtLl92KFwi5L+h5oGv5o+Q56S6XCIpXSksX3ZtLl92KFwiIFwiKSxfYygncCcse3N0YXRpY0NsYXNzOlwiY2VudGVyX3RpdGxlXCIsYXR0cnM6e1wiaWRcIjpcIk1haW4xXCJ9fSldKV0pXSldKX1dXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7ICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCB0cnVlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtMTVjYmE3MzJcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LTE1Y2JhNzMyXCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH1cbn0pKCl9IiwiPHRlbXBsYXRlPlxyXG48ZGl2PlxyXG4gICAgPGhlYWRlciBjbGFzcz1cImhlYWRlclwiPlxyXG5cdFx0PGRpdiBjbGFzcz1cImhlYWRlcl9yaWdodGFyZWFcIj5cclxuXHRcdFx0PCEtLeWAkuiuoeaXtiAtLT5cclxuXHRcdFx0PGRpdiBpZD1cIkRldl9Db3VudERvd25cIiBjbGFzcz1cInRpbWVcIj48L2Rpdj5cclxuXHRcdDwvZGl2PlxyXG5cdDwvaGVhZGVyPlxyXG5cclxuICAgIDxtYWluIGNsYXNzPVwibWFpblwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJwdWJfY29udGVudFwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGFuZWxcIj5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj7kv6Hmga/mj5DnpLo8L3A+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cImNlbnRlcl90aXRsZVwiPuWvueS4jei1t++8jOiuvuWkh+WIneWni+WMluWksei0pe+8gTwvcD5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L21haW4+XHJcbjwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5cdG1vdW50ZWQgKCkge1xyXG5cdFx0XHQvL+aooeaAgeahhuWAkuiuoeaXtlxyXG5cdFx0XHR2YXIgaW50VGltZSA9ICQoXCIjRGV2X0NvdW50RG93blwiKS5odG1sKCk7XHJcblx0XHRcdGlmKGludFRpbWUgPD0gMCl7XHJcblx0XHRcdFx0aW50VGltZSA9IDMwMDtcclxuXHRcdFx0fVxyXG5cdFx0XHQkKFwiI0Rldl9Db3VudERvd25cIikuaHRtbChpbnRUaW1lKTsvL+WFiOaYvuekuuS4gOS4i1xyXG5cdFx0XHRmdW5jdGlvbiBzZXRUaW1lSHRtbCgpIHtcclxuXHRcdFx0XHRpbnRUaW1lIC09IDE7XHJcblx0XHRcdFx0aWYoaW50VGltZSA8PSAwKVxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpO1xyXG5cdFx0XHRcdFx0ZXhpdFNjZW5lKFwiU1RBX0NPTlRJTlVFXCIpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHQkKFwiI0Rldl9Db3VudERvd25cIikuaHRtbChpbnRUaW1lKTtcclxuXHRcdFx0fVxyXG5cdFx0XHR2YXIgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChzZXRUaW1lSHRtbCwxMDAwKTtcclxuXHR9XHJcbn1cclxuPC9zY3JpcHQ+XHJcbiIsIjx0ZW1wbGF0ZT5cclxuICAgIDx4LWxheW91dC1tYWluPlxyXG4gICAgICAgIDwhLS1tb2RlZmllZCBieSBob3VsZWkgMjAxOS4wMS4zMCAg6Ziy56ql55uR566h5LyY5YyW5pu05pS56K+t6Z+z5paH5Lu2LS0+XHJcbiAgICAgICAgPEVNQkVEIG5hbWU9XCJWaWV3U291bmRcIiBTUkM9XCJ3YXYv6K+35oKo5Zyo6L6T5YWl5a+G56CB5YmN56Gu6K6k5ZGo6L65546v5aKD5piv5ZCm5a6J5YWoLndhdlwiIExvb3A9ZmFsc2UgQVVUT1NUQVJUPXRydWUgSGlkZGVuPXRydWUgTUFTVEVSU09VTkQ+PC9FTUJFRD5cclxuICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICA8cCBjbGFzcz1cInRpdGxlXCI+6K+36L6T5YWl5oKo55qE6LSm5Y+35ZKM5a+G56CBPC9wPlxyXG5cdFx0XHQ8ZGl2IGNsYXNzPVwiUGluX2ltZ1wiPlxyXG4gICAgICAgICAgICAgICAgPGltZyA6c3JjPVwiJHJvb3QuaW1nUGF0aCgnaW1nLycrJHJvb3QuZ2V0SW1nUGF0aCgpKydJbnB1dFBpbi5naWYnKVwiLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcblx0XHRcdDxkaXYgY2xhc3M9XCJQaW5faW5wdXRcIj5cclxuXHRcdFx0XHQ8cD48aT7otKblj7fvvJo8L2k+PGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJpbnB1dF9QaW5cIiBpZD1cImFjY291bnRcIiBtYXhsZW5ndGg9XCIxOVwiICBvbmJsdXI9XCJvbklucHV0T0soKVwiIC8+PC9wPlxyXG5cdFx0XHRcdDxwPjxpPuWvhuegge+8mjwvaT48aW5wdXQgdHlwZT1cInBhc3N3b3JkXCIgY2xhc3M9XCJpbnB1dF9QaW5cIiBpZD1cInBhc3N3b3JkXCIgbWF4bGVuZ3RoPVwiNlwiIHJlYWRvbmx5Lz48L3A+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiUGluX3RpcHNcIj5cclxuICAgICAgICAgICAgICAgICAgICA8cD48aSBzdHlsZT1cImNvbG9yOnJlZDtcIj7lsIrmlaznmoTlrqLmiLfvvJo8L2k+PC9wPlxyXG4gICAgICAgICAgICAgICAgICAgIDxwPjEu6K+35rOo5oSP5L+d5oqk5oKo55qE5a+G56CBLOmYsuatouiiq+WBt+eqpSzkuI3opoHlkJHku7vkvZXkurrpgI/pnLI7PC9wPlxyXG4gICAgICAgICAgICAgICAgICAgIDxwPjIu6K2m5oOV5o+S5Y2h5Y+jLOWvhueggemUruebmOWPiuacuui6q+WRqOWbtOaYr+WQpuWuieijheWPr+eWkeW8guW4uOijhee9rjs8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgPHA+My7kuLrkv53pmpzmgqjnmoTotYTph5Hlronlhags6LCo6Ziy5Yip55So55+t5L+h44CB55S16K+d562J5pa55byP6L+b6KGM55qE6L2s6LSm6K+I6aqX562J6L+d5rOV6KGM5Li6LOWmgumBh+eJueauiuaDheWGteivt+aLqOaJkzk1NTk55oiWMTEw44CCPC9wPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBtb3VudGVkKCl7XHJcbiAgICAgRGF0YVRvb2xzLmdldChcIkdEX0FjY291bnQxXCIsZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICQoXCIjYWNjb3VudFwiKS52YWwoZGF0YSk7XHJcbiAgICAgfSk7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFjY291bnRcIikub25pbnB1dD1vbkFjY291bnQ7IFxyXG4gICAgZnVuY3Rpb24gb25BY2NvdW50KCl7XHJcbiAgICAgICAgaWYoJChcIiNhY2NvdW50XCIpLnZhbCgpLmxlbmd0aCA9PSAxOSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIG9uSW5wdXRPSygpO1xyXG4gICAgICAgIH0gXHJcbiAgICB9XHJcblxyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhY2NvdW50XCIpLm9uY2xpY2s9b25BY2NvdW50MTsgXHJcbiAgICBmdW5jdGlvbiBvbkFjY291bnQxKCl7XHJcbiAgICAgICBTaG93TnVtYmVyS0IoJy0yJywnLTInLCdhY2NvdW50Jywn6L6T5YWl5b6F5oyC5aSx6LSm5Y+377yaJyk7XHJcbiAgICAgICBleGl0U2NlbmUoXCJTVEFfQ0xFQVJQSU5cIik7XHJcbiAgICB9XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFjY291bnRcIikub25rZXlwcmVzcz1vbkFjY291bnQyOyBcclxuICAgIGZ1bmN0aW9uIG9uQWNjb3VudDIoKXtcclxuICAgICAgICBpZih3aW5kb3cuZXZlbnQua2V5ID09IFwiRW50ZXJcIiAmJiAkKFwiI2FjY291bnRcIikudmFsKCkubGVuZ3RoID49IDEyKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgb25JbnB1dE9LKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gb25JbnB1dE9LKCl7XHJcbiAgICAgICAgSGlkZUtCKCk7XHJcbiAgICAgICAgc2V0VmFyKFwiR0RfQWNjb3VudDFcIiwkKFwiI2FjY291bnRcIikudmFsKCkpO1xyXG4gICAgICAgIGV4aXRTY2VuZShcIlNUQV9BQ0NJTlBVVFRFRFwiKTtcclxuICAgIH1cclxuICAgICAgIFxyXG59fVxyXG48L3NjcmlwdD4iLCI8dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICA8IS0tbW9kZWZpZWQgYnkgaG91bGVpIDIwMTkuMDEuMzAgIOmYsueqpeebkeeuoeS8mOWMluabtOaUueivremfs+aWh+S7ti0tPlxyXG4gICAgICAgIDxFTUJFRCBuYW1lPVwiVmlld1NvdW5kXCIgU1JDPVwid2F2L+ivt+aCqOWcqOi+k+WFpeWvhueggeWJjeehruiupOWRqOi+ueeOr+Wig+aYr+WQpuWuieWFqC53YXZcIiBMb29wPWZhbHNlIEFVVE9TVEFSVD10cnVlIEhpZGRlbj10cnVlIE1BU1RFUlNPVU5EPjwvRU1CRUQ+XHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgPHAgY2xhc3M9XCJ0aXRsZVwiPuivt+i+k+WFpeaCqOeahOi0puWPt+WSjOWvhueggTwvcD5cclxuXHRcdFx0PGRpdiBjbGFzcz1cIlBpbl9pbWdcIj5cclxuICAgICAgICAgICAgICAgIDxpbWcgOnNyYz1cIiRyb290LmltZ1BhdGgoJ2ltZy8nKyRyb290LmdldEltZ1BhdGgoKSsnSW5wdXRQaW4uZ2lmJylcIi8+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG5cdFx0XHQ8ZGl2IGNsYXNzPVwiUGluX2lucHV0XCI+XHJcblx0XHRcdFx0PHA+PGk+6LSm5Y+377yaPC9pPjxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiaW5wdXRfUGluXCIgaWQ9XCJhY2NvdW50XCIgbWF4bGVuZ3RoPVwiMTlcIiAgb25ibHVyPVwib25JbnB1dE9LKClcIiAgLz48L3A+XHJcblx0XHRcdFx0PHA+PGk+5a+G56CB77yaPC9pPjxpbnB1dCB0eXBlPVwicGFzc3dvcmRcIiBjbGFzcz1cImlucHV0X1BpblwiIGlkPVwicGFzc3dvcmRcIiBtYXhsZW5ndGg9XCI2XCIgcmVhZG9ubHkvPjwvcD5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJQaW5fdGlwc1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxwPjxpIHN0eWxlPVwiY29sb3I6cmVkO1wiPuWwiuaVrOeahOWuouaIt++8mjwvaT48L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgPHA+MS7or7fms6jmhI/kv53miqTmgqjnmoTlr4bnoIEs6Ziy5q2i6KKr5YG356qlLOS4jeimgeWQkeS7u+S9leS6uumAj+mcsjs8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgPHA+Mi7orabmg5Xmj5LljaHlj6Ms5a+G56CB6ZSu55uY5Y+K5py66Lqr5ZGo5Zu05piv5ZCm5a6J6KOF5Y+v55aR5byC5bi46KOF572uOzwvcD5cclxuICAgICAgICAgICAgICAgICAgICA8cD4zLuS4uuS/nemanOaCqOeahOi1hOmHkeWuieWFqCzosKjpmLLliKnnlKjnn63kv6HjgIHnlLXor53nrYnmlrnlvI/ov5vooYznmoTovazotKbor4jpqpfnrYnov53ms5XooYzkuLos5aaC6YGH54m55q6K5oOF5Ya16K+35ouo5omTOTU1OTnmiJYxMTDjgII8L3A+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+ICAgIFxyXG4gICAgPC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBtb3VudGVkKCl7XHJcbiAgICAgRGF0YVRvb2xzLmdldChcIkdEX0FjY291bnQxXCIsZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICQoXCIjYWNjb3VudFwiKS52YWwoZGF0YSk7XHJcbiAgICAgfSk7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFjY291bnRcIikub25pbnB1dD1vbkFjY291bnQ7IFxyXG4gICAgZnVuY3Rpb24gb25BY2NvdW50KCl7XHJcbiAgICAgICAgaWYoJChcIiNhY2NvdW50XCIpLnZhbCgpLmxlbmd0aCA9PSAxOSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIG9uSW5wdXRPSygpO1xyXG4gICAgICAgIH0gXHJcbiAgICB9XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFjY291bnRcIikub25jbGljaz1vbkFjY291bnQxOyBcclxuICAgIGZ1bmN0aW9uIG9uQWNjb3VudDEoKXtcclxuICAgICAgIFNob3dOdW1iZXJLQignLTInLCctMicsJ2FjY291bnQnLCfovpPlhaXlvoXmjILlpLHotKblj7fvvJonKTtcclxuICAgICAgIGV4aXRTY2VuZShcIlNUQV9DTEVBUlBJTlwiKTtcclxuICAgIH07XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFjY291bnRcIikub25rZXlwcmVzcz1vbkFjY291bnQyOyBcclxuICAgIGZ1bmN0aW9uIG9uQWNjb3VudDIoKXtcclxuICAgICAgICBpZih3aW5kb3cuZXZlbnQua2V5ID09IFwiRW50ZXJcIiAmJiAkKFwiI2FjY291bnRcIikudmFsKCkubGVuZ3RoID49IDEyKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgb25JbnB1dE9LKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gb25JbnB1dE9LKCl7XHJcbiAgICAgICAgSGlkZUtCKCk7XHJcbiAgICAgICAgc2V0VmFyKFwiR0RfQWNjb3VudDFcIiwkKFwiI2FjY291bnRcIikudmFsKCkpO1xyXG4gICAgICAgIGV4aXRTY2VuZShcIlNUQV9BQ0NJTlBVVFRFRFwiKTtcclxuICAgIH1cclxuICAgICAgICBcclxufX1cclxuPC9zY3JpcHQ+IiwiPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcbiAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj48L3A+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ4LWhzZ2lmXCI+XHJcbiAgICAgICAgICAgICAgICA8aW1nIHNyYz1cIlwiPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBpZD1cImJnXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzdHlsZSBzY29wZWQ+XHJcbi54LWhzZ2lme1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIG1hcmdpbjogMCUgYXV0bztcclxufVxyXG4ueC1oc2dpZiBpbWd7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG48L3N0eWxlPlxyXG48c2NyaXB0PlxyXG5cclxuIGV4cG9ydCBkZWZhdWx0IHtcclxuICAgIG1vdW50ZWQgKCkgeyBcclxuICAgICAgICB2YXIgdm09dGhpcztcclxuICAgICAgICBEYXRhVG9vbHMuZ2V0KFwiR0RfQTAxX0N1c3RfTWVkaWFUeXBlfENfQTAxX0Rldl9NYWNoaW5lVHlwZVwiLGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICBzd2l0Y2goZGF0YVswXSl7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiMVwiOlxyXG4gICAgICAgICAgICAgICAgICAgIGlmKGRhdGFbMV0gPT0gXCIxXCIgfHwgZGF0YVsxXSA9PSBcIjVcIilcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIudGl0bGVcIikuaHRtbChcIuivt+WIt+aCqOeahOejgeadoeWNoVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChcIiNiZ1wiKS5lbXB0eSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2JnXCIpLmh0bWwoJzxFTUJFRCBpZD1cInNvdW5kXCIgbmFtZT1cIlZpZXdTb3VuZFwiIFNSQz1cIndhdi/or7fliLfmgqjnmoTpk7booYzljaEud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPicpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiLnRpdGxlXCIpLmh0bWwoXCLor7fmj5LlhaXmgqjnmoTpk7booYzljaFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjYmdcIikuZW1wdHkoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChcIiNiZ1wiKS5odG1sKCc8RU1CRUQgaWQ9XCJzb3VuZFwiIG5hbWU9XCJWaWV3U291bmRcIiBTUkM9XCJ3YXYv6K+35o+S5YWl5oKo55qE6ZO26KGM5Y2hLndhdlwiIExvb3A9ZmFsc2UgQVVUT1NUQVJUPXRydWUgSGlkZGVuPXRydWUgTUFTVEVSU09VTkQ+PC9FTUJFRD4nKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi54LWhzZ2lmIGltZ1wiKS5hdHRyKFwic3JjXCIsdm0uJHJvb3QuaW1nUGF0aChcImltZy9cIit2bS4kcm9vdC5nZXRJbWdQYXRoKCkrXCJJbnNlcnRNU0NhcmQuZ2lmXCIpKTtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcIjJcIjpcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLnRpdGxlXCIpLmh0bWwoXCLor7fmj5LlhaXmgqjnmoTpk7booYzljaFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi54LWhzZ2lmIGltZ1wiKS5hdHRyKFwic3JjXCIsdm0uJHJvb3QuaW1nUGF0aChcImltZy9cIit2bS4kcm9vdC5nZXRJbWdQYXRoKCkrXCJJbnNlcnRJQ0NhcmQuZ2lmXCIpKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2JnXCIpLmVtcHR5KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNiZ1wiKS5odG1sKCc8RU1CRUQgaWQ9XCJzb3VuZFwiIG5hbWU9XCJWaWV3U291bmRcIiBTUkM9XCJ3YXYv6K+35o+S5YWl5oKo55qE6ZO26KGM5Y2hLndhdlwiIExvb3A9ZmFsc2UgQVVUT1NUQVJUPXRydWUgSGlkZGVuPXRydWUgTUFTVEVSU09VTkQ+PC9FTUJFRD4nKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgXCIzXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi50aXRsZVwiKS5odG1sKFwi6K+35bCG5oKo55qE6ZO26KGM5Y2h5pS+572u5LqO6K+G5Yir5Yy6XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIueC1oc2dpZiBpbWdcIikuYXR0cihcInNyY1wiLHZtLiRyb290LmltZ1BhdGgoXCJpbWcvXCIrdm0uJHJvb3QuZ2V0SW1nUGF0aCgpK1wiSW5zZXJ0UElDQ2FyZC5naWZcIikpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjYmdcIikuZW1wdHkoKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2JnXCIpLmh0bWwoJzxFTUJFRCBpZD1cInNvdW5kXCIgbmFtZT1cIlZpZXdTb3VuZFwiIFNSQz1cIndhdi/or7flsIbmgqjnmoTpk7booYzljaHmlL7nva7kuo7or4bliKvljLoud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcIjRcIjpcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLnRpdGxlXCIpLmh0bWwoXCLor7fliLfmgqjnmoTlrZjmiphcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi54LWhzZ2lmIGltZ1wiKS5hdHRyKFwic3JjXCIsdm0uJHJvb3QuaW1nUGF0aChcImltZy9cIit2bS4kcm9vdC5nZXRJbWdQYXRoKCkrXCJJbnNlcnRQYXNzYm9vay5naWZcIikpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjYmdcIikuZW1wdHkoKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2JnXCIpLmh0bWwoJzxFTUJFRCBpZD1cInNvdW5kXCIgbmFtZT1cIlZpZXdTb3VuZFwiIFNSQz1cIndhdi/or7fliLfmgqjnmoTlrZjmipgud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcIjVcIjpcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLnRpdGxlXCIpLmh0bWwoXCLor7fmj5LlhaXmgqjnmoTlrZjmiphcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi54LWhzZ2lmIGltZ1wiKS5hdHRyKFwic3JjXCIsdm0uJHJvb3QuaW1nUGF0aChcImltZy9cIit2bS4kcm9vdC5nZXRJbWdQYXRoKCkrXCJJbnNlcnRQYXNzYm9vay5naWZcIikpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjYmdcIikuZW1wdHkoKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2JnXCIpLmh0bWwoJzxFTUJFRCBpZD1cInNvdW5kXCIgbmFtZT1cIlZpZXdTb3VuZFwiIFNSQz1cIndhdi/or7fmj5LlhaXmgqjnmoTlrZjmipgud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLnRpdGxlXCIpLmh0bWwoXCLor7fmj5LlhaXmgqjnmoTpk7booYzljaFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi54LWhzZ2lmIGltZ1wiKS5hdHRyKFwic3JjXCIsdm0uJHJvb3QuaW1nUGF0aChcImltZy9JbnNlcnRJQ0NhcmQuZ2lmXCIpKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2JnXCIpLmVtcHR5KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNiZ1wiKS5odG1sKCc8RU1CRUQgaWQ9XCJzb3VuZFwiIG5hbWU9XCJWaWV3U291bmRcIiBTUkM9XCJ3YXYv6K+35o+S5YWl5oKo55qE6ZO26KGM5Y2hLndhdlwiIExvb3A9ZmFsc2UgQVVUT1NUQVJUPXRydWUgSGlkZGVuPXRydWUgTUFTVEVSU09VTkQ+PC9FTUJFRD4nKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfSBcclxuICAgICAgfSk7XHJcbiAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG5cclxuIiwiPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcbiAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj7or7fmj5LlhaXmgqjnmoTpk7booYzljaE8L3A+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ4LWhzZ2lmXCI+XHJcbiAgICAgICAgICAgICAgICA8aW1nIDpzcmM9XCIkcm9vdC5pbWdQYXRoKCdpbWcvJyskcm9vdC5nZXRJbWdQYXRoKCkrJ0luc2VydElDQ2FyZC5naWYnKVwiPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIk1lZGlhS2luZFwiPiBcclxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiQ2FyZE1lZGlhXCIgaWQ9XCJQYXNzYm9va1wiICBzdHlsZT1cImRpc3BsYXk6bm9uZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbWcgOnNyYz1cIiRyb290LmltZ1BhdGgoJ2ltZy9jdXN0b21lci9wYXNzYm9vay5wbmcnKVwiLz5cclxuICAgICAgICAgICAgICAgICAgICA8cCB2YWx1ZSA9XCI1XCI+5a2Y5oqYPC9wPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiQ2FyZE1lZGlhXCIgaWQ9XCJQSUNDXCIgICBzdHlsZT1cImRpc3BsYXk6bm9uZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbWcgOnNyYz1cIiRyb290LmltZ1BhdGgoJ2ltZy9jdXN0b21lci9QSUNDYXJkLnBuZycpXCIvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxwIHZhbHVlID1cIjNcIj7pnZ7mjqXop6ZJQ+WNoTwvcD5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICAgIDxkaXYgaWQ9XCJiZ1wiIHN0eWxlPVwiZGlzcGxheTpub25lO1wiPlxyXG4gICAgICAgICAgICAgICAgPEVNQkVEIGlkPVwic291bmRcIiBuYW1lPVwiVmlld1NvdW5kXCIgU1JDPVwid2F2L+ivt+aPkuWFpeaCqOeahOmTtuihjOWNoS53YXZcIiBMb29wPWZhbHNlIEFVVE9TVEFSVD10cnVlIEhpZGRlbj10cnVlIE1BU1RFUlNPVU5EPjwvRU1CRUQ+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzdHlsZSBzY29wZWQ+XHJcbi54LWhzZ2lmIHtcclxuICB3aWR0aDogNTAlO1xyXG4gIG1hcmdpbjogMCUgMjAlO1xyXG59XHJcbi54LWhzZ2lmIGltZyB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLk1lZGlhS2luZCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHJpZ2h0OiA3LjUlO1xyXG4gIHdpZHRoOiAyMCU7XHJcbiAgdG9wOiAyMCU7XHJcbiAgaGVpZ2h0OiA3MCU7XHJcbn1cclxuXHJcblxyXG4uQ2FyZE1lZGlhIHtcclxuICBoZWlnaHQ6IDI1MHB4O1xyXG59XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtaGVpZ2h0OiA3ODBweCkge1xyXG4gIC5NZWRpYUtpbmQge1xyXG4gICAgdG9wOiAxMCU7XHJcbiAgfVxyXG5cclxuICAuQ2FyZE1lZGlhIHtcclxuICBoZWlnaHQ6IDE4MHB4O1xyXG59XHJcbn1cclxuXHJcbjwvc3R5bGU+XHJcbjxzY3JpcHQ+XHJcblxyXG4gZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgbW91bnRlZCAoKSB7IFxyXG4gICAgdmFyIHZtPXRoaXM7XHJcbiAgICBEYXRhVG9vbHMuZ2V0KFwiR0RfQTAxX0N1c3RfTWVkaWFUeXBlTWFza3xDX0EwMV9EZXZfTWFjaGluZVR5cGVcIixmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICB2YXIgc3RyTWFzayA9IGRhdGFbMF07XHJcbiAgICAgICAgdmFyIHN0ck1hY2hpbmVUeXBlID0gZGF0YVsxXTtcclxuICAgICAgICAvLyBzdHJNYXNrID0gXCIxMTExXCI7XHJcbiAgICAgICAgaWYoc3RyTWFzayAhPSBcIlwiKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWYoc3RyTWFzay5zdWJzdHIoMiwxKSA9PSBcIjFcIilcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgJChcIiNQSUNDXCIpLmNzcyhcImRpc3BsYXlcIixcImlubGluZS1ibG9ja1wiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvL+aUr+aMgeWtmOaKmFxyXG4gICAgICAgICAgICBpZihzdHJNYXNrLnN1YnN0cigzLDEpID09IFwiMVwiKSBcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgJChcIiNQYXNzYm9va1wiKS5jc3MoXCJkaXNwbGF5XCIsXCJpbmxpbmUtYmxvY2tcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgc2V0VmFyKFwiR0RfQTAxX0N1c3RfTWVkaWFUeXBlXCIsXCIyXCIpOy8v6buY6K6k5Li65o+S5YWl6Iqv54mH5Y2hXHJcbiAgICAgIH0pO1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiUGFzc2Jvb2tcIikub25jbGljaz1vbkNhcmRNZWRpYTtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlBJQ0NcIikub25jbGljaz1vbkNhcmRNZWRpYTtcclxuICAgICAgICBmdW5jdGlvbiBvbkNhcmRNZWRpYSgpIHtcclxuICAgICAgICAgICAgLy/ojrflj5bku4votKjnsbvlnovmoIflv5dcclxuICAgICAgICAgICAgJChcIi5DYXJkTWVkaWFcIikucmVtb3ZlQ2xhc3MoXCJvblwiKTtcclxuXHRcdCAgICAkKHRoaXMpLmFkZENsYXNzKFwib25cIik7XHJcbiAgICAgICAgICAgIHZhciBNZWRpYVR5cGUgPSAkKHRoaXMpLmZpbmQoJ3AnKS5hdHRyKCd2YWx1ZScpO1xyXG4gICAgICAgICAgICBzZXRWYXIoXCJHRF9BMDFfQ3VzdF9NZWRpYVR5cGVcIixNZWRpYVR5cGUpO1xyXG4gICAgICAgICAgICBzZXRWYXIoXCJHRF9Jc0luc2VydFBJQ1wiLFwiMFwiKTtcclxuICAgICAgICAgICAgc3dpdGNoKE1lZGlhVHlwZSl7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiM1wiOlxyXG4gICAgICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0lzSW5zZXJ0UElDXCIsXCIxXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9QSUNDQVJEXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcIjVcIjpcclxuICAgICAgICAgICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfUEFTU0JPT0tcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9GQUlMXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gIH1cclxufVxyXG48L3NjcmlwdD5cclxuXHJcbiIsIjxzdHlsZSBzY29wZWQ+XHJcbi50YWJsZV9pbmZvcm17XHJcbiAgICB3aWR0aDo4MCU7XHJcbiAgICBmb250LXNpemU6IDMuMXJlbTtcclxuICAgIG1hcmdpbjogMTBweCBhdXRvOyAgXHJcbn1cclxuLnR4dC1ye1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICBwYWRkaW5nLXRvcDogNDBweDtcclxufVxyXG4udHh0LWx7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgY29sb3I6ICM2NjAwZmY7XHJcbiAgICBwYWRkaW5nLXRvcDogNDBweDtcclxufVxyXG4uaW5wdXRfaW5mb3tcclxuICAgIHdpZHRoOjE4MHB4O1xyXG59XHJcblxyXG48L3N0eWxlPlxyXG5cclxuPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcblx0XHQ8cCBjbGFzcz1cInRpdGxlXCI+6L6T5YWl6K+B5Lu257G75Z6LPC9wPlxyXG5cdFx0PHRhYmxlIGNsYXNzPVwidGFibGVfaW5mb3JtXCI+XHJcbiAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInR4dC1yXCI+6K+B5Lu257G75Z6L77yaPC90ZD5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInR4dC1sXCIgaWQ9XCJJRGNhcmRUeXBlXCI+PC90ZD5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInR4dC1yXCI+PHNwYW4gY2xhc3M9XCJzdGFydHNcIj48L3NwYW4+5oCn5Yir77yaPC90ZD5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInR4dC1sXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSdyYWRpb19ib3gnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgaWQ9XCJtYW5cIiBuYW1lPVwic2V4XCI+PGk+PC9pPiZuYnNwOyZuYnNwO+eUt1xyXG4gICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSdyYWRpb19ib3gnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgaWQ9XCJ3b21hblwiIG5hbWU9XCJzZXhcIj48aT48L2k+Jm5ic3A7Jm5ic3A75aWzXHJcbiAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInR4dC1yXCI+6K+B5Lu25Y+356CB77yaPC90ZD5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInR4dC1sXCIgaWQ9XCJJRGNhcmROdW1cIj48L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidHh0LXJcIj48c3BhbiBjbGFzcz1cInN0YXJ0c1wiPio8L3NwYW4+5Zu957GN77yaPC90ZD5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInR4dC1sXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJcIiBpZD1cIkNvdW50cnlKc29uXCIgY2xhc3M9XCJpbnB1dF9pbmZvXCIvPlxyXG4gICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidHh0LXJcIj7lrqLmiLflp5PlkI3vvJo8L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidHh0LWxcIiBpZD1cIklEY2FyZE5hbVwiPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0eHQtclwiPjxzcGFuIGNsYXNzPVwic3RhcnRzXCI+Kjwvc3Bhbj7msJHml4/vvJo8L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidHh0LWxcIj5cclxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIlwiICBkaXNhYmxlZD1cInRydWVcIiBpZD1cIk5hdGlvbkpzb25cIiBjbGFzcz1cImlucHV0X2luZm9cIi8+XHJcbiAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0eHQtclwiPjxzcGFuIGNsYXNzPVwic3RhcnRzXCI+Kjwvc3Bhbj7mnInmlYjml6XmnJ/vvJo8L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidHh0LWxcIiBjb2xzcGFuPVwiMlwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiaW5wdXRfaW5mb1wiIGlkPVwiVmFyRGF0YVN0YXJ0XCIvPi0gPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJpbnB1dF9pbmZvXCIgaWQ9XCJWYXJEYXRhRW5kXCIvPlxyXG4gICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInR4dC1sXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSdjaGVja19ib3gnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgaWQ9XCJBbGx0aW1lXCI+PGk+PC9pPuawuOS5heacieaViFxyXG4gICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICA8L3RyPiAgICAgXHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0eHQtclwiPjxzcGFuIGNsYXNzPVwic3RhcnRzXCI+Kjwvc3Bhbj7lh7rnlJ/ml6XmnJ/vvJo8L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidHh0LWxcIj4gXHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJpbnB1dF9pbmZvXCIgaWQ9XCJCaXJ0aGRheVwiLz5cclxuICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8dGQ+PC90ZD5cclxuICAgICAgICAgICAgICAgIDx0ZD48L3RkPlxyXG4gICAgICAgICAgICA8L3RyPiAgICAgIFxyXG4gICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgPHgtbXVsdGktbGV2ZWwgOnNob3c9XCJzaG93QmFua1wiIHRpdGxlPVwi5Zu957GNXCIgOmRhdGE9XCJiYW5rRGF0YVwiIHBjb2RlPVwiTlVNX0lURU1fRElDXCIgcG5hbWU9XCJWTFVfSVRFTV9ESUNcIiBAY2FuY2VsPVwib25DYW5jZWxCYW5rXCIgQGNvbmZpcm09XCJvbkNob29zZUJhbmtcIj5cclxuICAgICAgICAgICAgPC94LW11bHRpLWxldmVsPiAgICAgICAgICAgXHJcbiAgICAgICAgICAgIDx4LW11bHRpLWxldmVsIDpzaG93PVwic2hvd0JyYW5jaFwiIHRpdGxlPVwi5rCR5pePXCIgOmRhdGE9XCJicmFuY2hEYXRhXCIgcGNvZGU9XCJOVU1fSVRFTV9ESUNcIiBwbmFtZT1cIlZMVV9JVEVNX0RJQ1wiIEBjYW5jZWw9XCJvbkNhbmNlbEJyYW5jaFwiIEBjb25maXJtPVwib25DaG9vc2VCcmFuY2hcIj5cclxuICAgICAgICAgICAgPC94LW11bHRpLWxldmVsPlxyXG4gICAgICAgICAgICA8cCBjbGFzcz1cInRpcHNcIiBpZD1cIm5vdGljZVwiPjwvcD5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiYnRuYm94XCI+ICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG5cIiBpZD1cImJ0bl9iYWNrXCIgPuS4iiZuYnNwO+S4gCZuYnNwO+atpTwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuXCIgaWQ9XCJidG5fc3VyZVwiID7kuIsmbmJzcDvkuIAmbmJzcDvmraU8L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGRhdGEgKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGJhbmtEYXRhOiBbXSxcclxuICAgICAgICAgICAgYnJhbmNoRGF0YTogW10sXHJcbiAgICAgICAgICAgIHNob3dCYW5rOiBmYWxzZSxcclxuICAgICAgICAgICAgc2hvd0JyYW5jaDogZmFsc2UsXHJcbiAgICAgICAgICAgIHZtQ291bnRyeUNvZGU6XCJcIixcclxuICAgICAgICAgICAgdm1Db3VudHJ5TmFtOlwiXCIsXHJcbiAgICAgICAgICAgIHZtTmF0aW9uQ29kZTpcIlwiLFxyXG4gICAgICAgICAgICB2bU5hdGlvbk5hbTpcIlwiXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGNvbXB1dGVkOiB7XHJcblxyXG4gICAgfSxcclxuICAgIG1ldGhvZHM6IHtcclxuICAgICAgICBvbkNhbmNlbEJhbmsgKCkge1xyXG4gICAgICAgICAgICB0aGlzLnNob3dCYW5rID0gZmFsc2U7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkNhbmNlbEJyYW5jaCAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2hvd0JyYW5jaCA9IGZhbHNlO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25DaG9vc2VCYW5rIChpbmRleCwgaXRlbSkge1xyXG4gICAgICAgICAgICB0aGlzLnNob3dCYW5rID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuc2hvd0JyYW5jaCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAkKFwiI0NvdW50cnlKc29uXCIpLnZhbChpdGVtLlZMVV9JVEVNX0RJQyk7XHJcbiAgICAgICAgICAgIHRoaXMudm1Db3VudHJ5Q29kZT1pdGVtLk5VTV9JVEVNX0RJQztcclxuICAgICAgICAgICAgdGhpcy52bUNvdW50cnlOYW09aXRlbS5WTFVfSVRFTV9ESUM7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkNob29zZUJyYW5jaCAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgdGhpcy5zaG93QmFuayA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLnNob3dCcmFuY2ggPSBmYWxzZTtcclxuICAgICAgICAgICAgJChcIiNOYXRpb25Kc29uXCIpLnZhbChpdGVtLlZMVV9JVEVNX0RJQyk7XHJcbiAgICAgICAgICAgIHRoaXMudm1OYXRpb25Db2RlPWl0ZW0uTlVNX0lURU1fRElDO1xyXG4gICAgICAgICAgICB0aGlzLnZtTmF0aW9uTmFtPWl0ZW0uVkxVX0lURU1fRElDO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9LFxyXG5tb3VudGVkICgpIHsgXHJcbiAgICBwYWdlTG9nKCdtb3VudGVkLS0+JyArIG5ldyBEYXRlKCkpO1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIHZhciBDX0EwMV9EaWN0XzAwMDAwMDA5ID0gXCJcIjtcclxuICAgIHZhciBzZXggPSBcIlwiO1xyXG4gICAgdmFyIENfQTAxX0JJWlBSTV8wMDEwNCA9IFwiMFwiO1xyXG4gICAgdmFyIEdEX0NvZFBpZCxtZW51TWluQWdlLG1lbnVNYXhBZ2UsR0RfQTAxX01lbnVCdXNPbGQ7XHJcblx0RGF0YVRvb2xzLmdldChcIkdEX0NvZFBpZHxHRF9OdW1QaWR8R0RfTmFtQ3VzdHxDX0EwMV9EaWN0XzAwMDAwMDEwfENfQTAxX0RpY3RfMDAwMDAwMDd8Q19BMDFfRGljdF8wMDAwMDAwOXxDX0EwMV9CSVpQUk1fMDAxMDR8R0RfQTAxX0J1c01pbkFnZXxDX0EwMV9CSVpQUk1fMDAyMDh8R0RfQTAxX01lbnVCdXNPbGRcIixmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBwYWdlTG9nKCdHRF9BMDFfQnVzTWluQWdlLS0+JyArIGRhdGFbN10pO1xyXG4gICAgICAgIHBhZ2VMb2coJ0NfQTAxX0JJWlBSTV8wMDIwOC0tPicgKyBkYXRhWzhdKTtcclxuICAgICAgICBDX0EwMV9CSVpQUk1fMDAxMDQgPSBkYXRhWzZdO1xyXG4gICAgICAgIG1lbnVNaW5BZ2UgPSBkYXRhWzddK1wiMDAwMFwiO1xyXG4gICAgICAgIG1lbnVNYXhBZ2UgPSBkYXRhWzhdK1wiMDAwMFwiO1xyXG4gICAgICAgIEdEX0EwMV9NZW51QnVzT2xkID0gZGF0YVs5XTtcclxuICAgICAgICBHRF9Db2RQaWQgPSBkYXRhWzBdO1xyXG4gICAgICAgIHZhciBzdHJJRHR5cGUgPSBcIlwiOyAgICAgICAgXHJcbiAgICAgICAgdmFyIGJTcGxpY2VDaGluYSA9IGZhbHNlOyAgICBcclxuICAgICAgICBzd2l0Y2goZGF0YVswXSl7XHJcbiAgICAgICAgICAgIGNhc2UgXCIxMTAwMDFcIjpcclxuICAgICAgICAgICAgICAgIHN0cklEdHlwZT1cIuS6jOS7o+i6q+S7veivgVwiO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCIxMTAwMTlcIjpcclxuICAgICAgICAgICAgICAgIC8vZGF0YVszXSA9ICdbe1wiVkxVX0lURU1fRElDXCI6XCLkuK3lm71cIixcIk5VTV9JVEVNX0RJQ1wiOlwiMTU2XCJ9XSc7XHJcbiAgICAgICAgICAgICAgICBpZihkYXRhWzFdLnN1YnN0cigwLDEpID09IFwiSFwiIHx8IGRhdGFbMV0uc3Vic3RyKDAsMSkgPT0gXCJoXCIpe1xyXG4gICAgICAgICAgICAgICAgICAgIHZtLnZtQ291bnRyeUNvZGU9XCIzNDRcIjsvLzQ0NlxyXG4gICAgICAgICAgICAgICAgICAgIHZtLnZtQ291bnRyeU5hbT1cIuS4reWbvemmmea4r1wiO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjQ291bnRyeUpzb25cIikudmFsKFwi5Lit5Zu96aaZ5rivXCIpO1xyXG4gICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgdm0udm1Db3VudHJ5Q29kZT1cIjQ0NlwiOy8vNDQ2XHJcbiAgICAgICAgICAgICAgICAgICAgdm0udm1Db3VudHJ5TmFtPVwi5Lit5Zu95r6z6ZeoXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNDb3VudHJ5SnNvblwiKS52YWwoXCLkuK3lm73mvrPpl6hcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICQoXCIjTmF0aW9uSnNvblwiKS52YWwoXCLkuI3pgILnlKhcIik7XHJcbiAgICAgICAgICAgICAgICB2bS52bU5hdGlvbkNvZGU9XCI5OVwiO1xyXG4gICAgICAgICAgICAgICAgdm0udm1OYXRpb25OYW09XCLkuI3pgILnlKhcIjtcclxuICAgICAgICAgICAgICAgIHN0cklEdHlwZT1cIua4r+a+s+WxheawkeadpeW+gOWGheWcsOmAmuihjOivgVwiO1xyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQ29kQ2VydE9yZ1wiLFwi5YWs5a6J6YOoXCIpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCIxMTAwMjFcIjpcclxuICAgICAgICAgICAgICAgIC8vZGF0YVszXSA9ICdbe1wiVkxVX0lURU1fRElDXCI6XCLkuK3lm73lj7Dmub5cIixcIk5VTV9JVEVNX0RJQ1wiOlwiMTU4XCJ9XSc7XHJcbiAgICAgICAgICAgICAgICB2bS52bUNvdW50cnlDb2RlPVwiMTU4XCI7XHJcbiAgICAgICAgICAgICAgICB2bS52bUNvdW50cnlOYW09XCLkuK3lm73lj7Dmub5cIjtcclxuICAgICAgICAgICAgICAgICQoXCIjQ291bnRyeUpzb25cIikudmFsKFwi5Lit5Zu95Y+w5rm+XCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIiNOYXRpb25Kc29uXCIpLnZhbChcIuS4jemAgueUqFwiKTtcclxuICAgICAgICAgICAgICAgIHZtLnZtTmF0aW9uQ29kZT1cIjk5XCI7XHJcbiAgICAgICAgICAgICAgICB2bS52bU5hdGlvbk5hbT1cIuS4jemAgueUqFwiO1xyXG4gICAgICAgICAgICAgICAgc3RySUR0eXBlPVwi5Y+w5rm+5bGF5rCR5p2l5b6A5aSn6ZmG6YCa6KGM6K+BXCI7XHJcbiAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9Db2RDZXJ0T3JnXCIsXCLlhazlronpg6hcIik7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIjExMDAzN1wiOlxyXG4gICAgICAgICAgICAgICAgJChcIiNOYXRpb25Kc29uXCIpLnZhbChcIuS4jemAgueUqFwiKTtcclxuICAgICAgICAgICAgICAgIHZtLnZtTmF0aW9uQ29kZT1cIjk5XCI7XHJcbiAgICAgICAgICAgICAgICB2bS52bU5hdGlvbk5hbT1cIuS4jemAgueUqFwiO1xyXG4gICAgICAgICAgICAgICAgc3RySUR0eXBlPVwi5aSW5Zu95Lq65rC45LmF5bGF55WZ6K+BXCI7XHJcbiAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9Db2RDZXJ0T3JnXCIsXCLlhazlronpg6hcIik7XHJcbiAgICAgICAgICAgICAgICBiU3BsaWNlQ2hpbmEgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCIxMTAwMjVcIjogXHJcbiAgICAgICAgICAgICAgICBzdHJJRHR5cGU9XCLlpJblm73miqTnhadcIjtcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0NvZENlcnRPcmdcIixcIuS4jemAgueUqFwiKTsgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAkKFwiI05hdGlvbkpzb25cIikudmFsKFwi5LiN6YCC55SoXCIpO1xyXG4gICAgICAgICAgICAgICAgdm0udm1OYXRpb25Db2RlPVwiOTlcIjtcclxuICAgICAgICAgICAgICAgIHZtLnZtTmF0aW9uTmFtPVwi5LiN6YCC55SoXCI7XHJcbiAgICAgICAgICAgICAgICBiU3BsaWNlQ2hpbmEgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBzdHJJRHR5cGU9XCJcIjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICAkKFwiI0lEY2FyZFR5cGVcIikuaHRtbChzdHJJRHR5cGUpO1xyXG4gICAgICAgICQoXCIjSURjYXJkTnVtXCIpLmh0bWwoZGF0YVsxXSk7XHJcbiAgICAgICAgJChcIiNJRGNhcmROYW1cIikuaHRtbChkYXRhWzJdKTtcclxuICAgICAgICBpZih0eXBlb2YgZGF0YVszXSA9PSBcInN0cmluZ1wiICYmIGRhdGFbM10gIT0gXCJcIil7XHJcbiAgICAgICAgICAgIC8vcGFnZUxvZyhkYXRhWzNdKTtcclxuICAgICAgICAgICAgdmFyIEpzb25Db3VudHJ5ID0gSlNPTi5wYXJzZShkYXRhWzNdKTs7XHJcbiAgICAgICAgICAgIHZhciBpbmRleCA9IC0xO1xyXG4gICAgICAgICAgICBpZihiU3BsaWNlQ2hpbmEgPT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IEpzb25Db3VudHJ5Lmxlbmd0aDsgaSsrKSB7ICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBpZiAoSnNvbkNvdW50cnlbaV0uVkxVX0lURU1fRElDID09IFwi5Lit5Zu9XCIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPSBpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKGluZGV4ID4gLTEpe1xyXG4gICAgICAgICAgICAgICAgICAgIEpzb25Db3VudHJ5LnNwbGljZShKc29uQ291bnRyeS5pbmRleE9mKEpzb25Db3VudHJ5W2luZGV4XSksMSk7XHJcbiAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZtLmJhbmtEYXRhID0gSnNvbkNvdW50cnk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHR5cGVvZiBkYXRhWzRdID09IFwic3RyaW5nXCIgJiYgZGF0YVs0XSAhPSBcIlwiKXtcclxuICAgICAgICAgICAgLy9wYWdlTG9nKGRhdGFbNF0pO1xyXG4gICAgICAgICAgICB2bS5icmFuY2hEYXRhID0gSlNPTi5wYXJzZShkYXRhWzRdKTtcclxuICAgICAgICB9XHJcblx0fSk7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIkNvdW50cnlKc29uXCIpLm9uY2xpY2s9b25Db3VudHJ5SnNvbjtcclxuICAgIGZ1bmN0aW9uIG9uQ291bnRyeUpzb24oKXtcclxuICAgICAgICB2bS5zaG93QmFuayA9IHRydWU7XHJcbiAgICAgICAgdm0uc2hvd0JyYW5jaCA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJOYXRpb25Kc29uXCIpLm9uY2xpY2s9b25OYXRpb25Kc29uO1xyXG4gICAgZnVuY3Rpb24gb25OYXRpb25Kc29uKCl7XHJcbiAgICAgICAgdm0uc2hvd0JhbmsgPSBmYWxzZTtcclxuICAgICAgICB2bS5zaG93QnJhbmNoID0gdHJ1ZTtcclxuICAgIH1cclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFuXCIpLm9uY2xpY2s9b25NYW47XHJcbiAgICBmdW5jdGlvbiBvbk1hbigpIHtcclxuICAgICAgICBpZigkKHRoaXMpLmlzKCc6Y2hlY2tlZCcpKXtcclxuICAgICAgICAgICAgc2V4ID0gXCLnlLdcIjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndvbWFuXCIpLm9uY2xpY2s9b25Xb21hbjtcclxuICAgIGZ1bmN0aW9uIG9uV29tYW4oKSB7XHJcbiAgICAgICAgaWYoJCh0aGlzKS5pcygnOmNoZWNrZWQnKSl7XHJcbiAgICAgICAgICAgIHNleCA9IFwi5aWzXCI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJBbGx0aW1lXCIpLm9uY2xpY2s9b25BbGx0aW1lO1xyXG4gICAgZnVuY3Rpb24gb25BbGx0aW1lKCkge1xyXG4gICAgICAgIGlmKCQodGhpcykuaXMoJzpjaGVja2VkJykpe1xyXG4gICAgICAgICAgICAkKFwiI1ZhckRhdGFFbmRcIikudmFsKFwiOTk5OS05OS05OVwiKVxyXG4gICAgICAgICAgICAkKCcjVmFyRGF0YUVuZCcpLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7ICAgICAgICAgICAgXHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICQoXCIjVmFyRGF0YUVuZFwiKS52YWwoXCJcIilcclxuICAgICAgICAgICAgJCgnI1ZhckRhdGFFbmQnKS5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKTsgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvL+WIneWni+WMluaXpeacn+mAieaLqeWZqFxyXG4gICAgJChmdW5jdGlvbigpe1xyXG4gICAgICAgIG5ldyBEYXRlUGlja2VyKCkuaW5pdCh7aWQgOiAnVmFyRGF0YVN0YXJ0J30pO1xyXG4gICAgICAgIG5ldyBEYXRlUGlja2VyKCkuaW5pdCh7aWQgOiAnVmFyRGF0YUVuZCd9KTtcclxuICAgICAgICBuZXcgRGF0ZVBpY2tlcigpLmluaXQoe2lkIDogJ0JpcnRoZGF5J30pO1xyXG4gICAgIH0pOyBcclxuICAgIC8v56Gu5a6a5oyJ6ZKuXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bl9iYWNrXCIpLm9uY2xpY2s9b25CYWNrO1xyXG4gICAgZnVuY3Rpb24gb25CYWNrKCl7XHJcbiAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0JBQ0tcIik7XHJcbiAgICB9XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bl9zdXJlXCIpLm9uY2xpY2s9b25TdXJlO1xyXG5cdGZ1bmN0aW9uIG9uU3VyZSgpe1xyXG4gICAgICAgIHZhciBzdHJEYXRhU3RhcnQgPSAkKFwiI1ZhckRhdGFTdGFydFwiKS52YWwoKTtcclxuICAgICAgICB2YXIgc3RyVmFyRGF0YUVuZCA9ICQoXCIjVmFyRGF0YUVuZFwiKS52YWwoKTtcclxuICAgICAgICB2YXIgc3RyQmlydGhkYXkgPSAkKFwiI0JpcnRoZGF5XCIpLnZhbCgpO1xyXG4gICAgICAgIHZhciBiQWxsVGltZSA9ICQoXCIjQWxsdGltZVwiKS5pcygnOmNoZWNrZWQnKTtcclxuXHRcdGlmKHNleCA9PSBcIlwiKXtcclxuICAgICAgICAgICAkKFwiI25vdGljZVwiKS5odG1sKFwi5oKo5aW977yM5oCn5Yir5Li65b+F5aGr6aG577yM6K+35aGr5YaZ5a6M5pW0XCIpO1xyXG4gICAgICAgIH1lbHNlIGlmKHZtLnZtQ291bnRyeUNvZGUgPT0gXCJcIiApe1xyXG4gICAgICAgICAgICQoXCIjbm90aWNlXCIpLmh0bWwoXCLmgqjlpb3vvIzlm73nsY3kuLrlv4XloavpobnvvIzor7floavlhpnlrozmlbRcIik7XHJcbiAgICAgICAgfWVsc2UgaWYodm0udm1OYXRpb25Db2RlID09IFwiXCIgKXtcclxuICAgICAgICAgICAkKFwiI25vdGljZVwiKS5odG1sKFwi5oKo5aW977yM5rCR5peP5Li65b+F5aGr6aG577yM6K+35aGr5YaZ5a6M5pW0XCIpO1xyXG4gICAgICAgIH1lbHNlIGlmKCAhYkFsbFRpbWUgJiYgc3RyVmFyRGF0YUVuZD09XCJcIil7XHJcbiAgICAgICAgICAgJChcIiNub3RpY2VcIikuaHRtbChcIuaCqOWlve+8jOivgeS7tuacieaViOaXpeacn+S4uuW/heWhq+mhue+8jOivt+Whq+WGmeWujOaVtFwiKTtcclxuICAgICAgICB9ZWxzZSBpZihzdHJEYXRhU3RhcnQ9PVwiXCIpe1xyXG4gICAgICAgICAgICQoXCIjbm90aWNlXCIpLmh0bWwoXCLmgqjlpb3vvIzor4Hku7bmnInmlYjml6XmnJ/kuLrlv4XloavpobnvvIzor7floavlhpnlrozmlbRcIik7XHJcbiAgICAgICAgfWVsc2UgaWYoc3RyQmlydGhkYXkgPT0gXCJcIil7XHJcbiAgICAgICAgICAgJChcIiNub3RpY2VcIikuaHRtbChcIuaCqOWlve+8jOWHuueUn+aXpeacn+S4uuW/heWhq+mhue+8jOivt+Whq+WGmeWujOaVtFwiKTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgaWYoYkFsbFRpbWUpe1xyXG4gICAgICAgICAgICAgICAgc3RyVmFyRGF0YUVuZCA9IFwiOTk5OTk5OTlcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBzdHJCaXJ0aGRheSA9IHN0ckJpcnRoZGF5LnJlcGxhY2UoLy0vZyxcIlwiKTtcclxuICAgICAgICAgICAgc3RyRGF0YVN0YXJ0ID0gc3RyRGF0YVN0YXJ0LnJlcGxhY2UoLy0vZyxcIlwiKTtcclxuICAgICAgICAgICAgc3RyVmFyRGF0YUVuZCA9IHN0clZhckRhdGFFbmQucmVwbGFjZSgvLS9nLFwiXCIpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICAgICAgICB2YXIgc3RyWWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTtcclxuICAgICAgICAgICAgdmFyIHN0ck1vbnRoID0gZGF0ZS5nZXRNb250aCgpKzE7XHJcbiAgICAgICAgICAgIHZhciBzdHJEYXRlID0gZGF0ZS5nZXREYXRlKCk7XHJcblxyXG4gICAgICAgICAgICBpZihzdHJNb250aCA+PSAxICYmIHN0ck1vbnRoIDw9IDkpe1xyXG4gICAgICAgICAgICAgICAgc3RyTW9udGggPSAnMCcrc3RyTW9udGg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoc3RyRGF0ZSA+PSAxICYmIHN0ckRhdGUgPD0gOSl7XHJcbiAgICAgICAgICAgICAgICBzdHJEYXRlID0gJzAnK3N0ckRhdGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIGN1cnJEYXRhID0gc3RyWWVhci50b1N0cmluZygpK3N0ck1vbnRoK3N0ckRhdGU7ICAgICBcclxuICAgICAgICAgICAgcGFnZUxvZygnY3VyckRhdGEtLT4nICsgY3VyckRhdGErJyxzdHJEYXRhU3RhcnQtLT4nK3N0ckRhdGFTdGFydCsnLHN0ckJpcnRoZGF5LS0+JytzdHJCaXJ0aGRheSsnLHN0clZhckRhdGFFbmQtLT4nK3N0clZhckRhdGFFbmQrJyxtZW51TWluQWdlLS0+JyttZW51TWluQWdlKycsbWVudU1heEFnZS0tPicrbWVudU1heEFnZSsnLEdEX0EwMV9NZW51QnVzT2xkLS0+JytHRF9BMDFfTWVudUJ1c09sZCk7ICAgICAgIFxyXG4gICAgICAgICAgICBpZihwYXJzZUludChzdHJEYXRhU3RhcnQpID4gcGFyc2VJbnQoY3VyckRhdGEpKXtcclxuICAgICAgICAgICAgICAgICQoXCIjbm90aWNlXCIpLmh0bWwoXCLmgqjlpb3vvIzor4Hku7botbflp4vml6XmnJ/kuI3lj6/lpKfkuo7lvZPlpKnvvIzor7fph43mlrDpgInmi6lcIik7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKCEoYkFsbFRpbWUgfHwgcGFyc2VJbnQoc3RyVmFyRGF0YUVuZCkgPj0gcGFyc2VJbnQoY3VyckRhdGEpKSl7XHJcbiAgICAgICAgICAgICAgICAkKFwiI25vdGljZVwiKS5odG1sKFwi5oKo5aW977yM6K+B5Lu257uI5q2i5pel5pyf5bey6L+H5pyf77yM6K+36YeN5paw6YCJ5oupXCIpO1xyXG4gICAgICAgICAgICB9ZWxzZSBpZihwYXJzZUludChzdHJCaXJ0aGRheSkgPiBwYXJzZUludChjdXJyRGF0YSkpe1xyXG4gICAgICAgICAgICAgICAgJChcIiNub3RpY2VcIikuaHRtbChcIuaCqOWlve+8jOWHuueUn+aXpeacn+S4jeWPr+Wkp+S6juW9k+Wkqe+8jOivt+mHjeaWsOmAieaLqVwiKTtcclxuICAgICAgICAgICAgfWVsc2UgaWYocGFyc2VJbnQoY3VyckRhdGEpIC0gcGFyc2VJbnQoc3RyQmlydGhkYXkpIDw9IHBhcnNlSW50KG1lbnVNaW5BZ2UpKXtcclxuICAgICAgICAgICAgICAgICQoXCIjbm90aWNlXCIpLmh0bWwoXCLmnKzmnLrmmoLml6Dms5Xlj5fnkIbmgqjnmoTkuJrliqHvvIzor7fogZTns7vpk7booYzlt6XkvZzkurrlkZjliLDmn5zpnaLlip7nkIbjgIJcIik7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKHBhcnNlSW50KGN1cnJEYXRhKSAtIHBhcnNlSW50KHN0ckJpcnRoZGF5KSA+IHBhcnNlSW50KG1lbnVNYXhBZ2UpICYmIEdEX0EwMV9NZW51QnVzT2xkICE9IFwiMVwiKXtcclxuICAgICAgICAgICAgICAgICQoXCIjbm90aWNlXCIpLmh0bWwoXCLmnKzmnLrmmoLml6Dms5Xlj5fnkIbmgqjnmoTkuJrliqHvvIzor7fogZTns7vpk7booYzlt6XkvZzkurrlkZjliLDmn5zpnaLlip7nkIbjgIJcIik7XHJcbiAgICAgICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0dlbmRlclwiLHNleCk7XHRcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0FkZHJlc3NcIixcIlwiKTtcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0NvZE5hdGlvblwiLHZtLnZtTmF0aW9uTmFtKTtcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIlBfQ29kQ291bnRyeVwiLHZtLnZtQ291bnRyeUNvZGUpO1xyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfRGF0ZUNlcnRCZ25cIixzdHJEYXRhU3RhcnQpO1xyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfRGF0ZUNlcnRFbmRcIixzdHJWYXJEYXRhRW5kKTtcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0JpcnRoZGF5XCIsc3RyQmlydGhkYXkpO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBpZihwYXJzZUludChzdHJEYXRhU3RhcnQucmVwbGFjZSgvLS9nLFwiXCIpKSA+PSBwYXJzZUludChDX0EwMV9CSVpQUk1fMDAxMDQpICYmIEdEX0NvZFBpZCA9PSBcIjExMDAzN1wiKXsgXHJcbiAgICAgICAgICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX1JFQURDQVJEXCIpO1xyXG4gICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0NPTlRJTlVFXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9DT05USU5VRVwiKTtcclxuICAgICAgICAgICAgfSAgICAgICAgICAgIFxyXG5cdFx0fVx0XHRcclxuXHR9XHJcbiAgICBcclxufVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8c3R5bGUgc2NvcGVkPlxyXG4uTWVudVNob3d7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRmbGV4LXdyYXA6IHdyYXA7XHJcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRoZWlnaHQ6IDY1JTtcclxuXHRtYXJnaW4tdG9wOiA1JTtcclxuXHRvdmVyZmxvdy15OiBhdXRvO1xyXG59XHJcbjwvc3R5bGU+XHJcblxyXG48dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuXHRcdDxwIGNsYXNzPVwidGl0bGVcIj7kuJrliqHpooTlpITnkIY8L3A+XHJcblx0XHQ8ZGl2IGNsYXNzPVwiTWVudVNob3dcIj5cdFx0XHJcblx0XHQ8L2Rpdj5cclxuXHQ8L3gtbGF5b3V0LW1haW4+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PiBcclxuZXhwb3J0IGRlZmF1bHQge1xyXG5cdG1vdW50ZWQgKCkge1xyXG5cdFx0IHZhciB0aGVwYXRoID0gdm0uJHJvb3QudGhlbWVJbWdQYXRoO1xyXG5cdCBcdERhdGFUb29scy5nZXQoXCJHRF9BMDFfTWVudUlEX1ByZXByb2Nlc3N8R0RfQTAxX01lbnVEYXRhXCIsZnVuY3Rpb24oZGF0YSl7XHJcblx0XHRcdHZhciBNZW51RGF0YSA9IEpTT04ucGFyc2UoZGF0YVsxXSk7ICAvL+iPnOWNlei9rOaNouaIkGpzb27lr7nosaFcclxuXHRcdFx0dmFyIE1lbnVJRD1kYXRhWzBdLnNwbGl0KFwiLFwiKTsgXHJcblx0XHRcdC8v5b6q546v6YGN5Y6G6I+c5Y2VSUQgICAgIFxyXG5cdFx0XHRmb3IodmFyIHQ9MDt0PE1lbnVJRC5sZW5ndGg7dCsrKXtcclxuXHRcdFx0XHQvL+W+queOr+S4u+iPnOWNlVxyXG5cdFx0XHRcdGZvcih2YXIgaSA9IDA7IGk8TWVudURhdGEubGVuZ3RoOyBpKyspe1xyXG5cdFx0XHRcdFx0aWYoTWVudURhdGFbaV0uTkFNX01FTlUgIT0gXCLluLjnlKjoj5zljZVcIil7XHJcblx0XHRcdFx0XHRcdC8v5b6q546v5LqM57qn6I+c5Y2VXHJcblx0XHRcdFx0XHRcdGZvcih2YXIgaj0wO2o8TWVudURhdGFbaV0uQ0xEX01FTlUubGVuZ3RoO2orKyl7XHJcblx0XHRcdFx0XHRcdFx0Ly/liKTmlq3nu5nnmoToj5zljZVJROaYr+WQpuWcqOiPnOWNlemHjOmdolxyXG5cdFx0XHRcdFx0XHRcdGlmKE1lbnVEYXRhW2ldLkNMRF9NRU5VW2pdLklEX01FTlUuaW5kZXhPZihNZW51SURbdF0pIT0tMSl7XHJcblx0XHRcdFx0XHRcdFx0XHR2YXIgbm9kZUNoaWxkPVwiPGRpdiBzdHlsZT1cXFwid2lkdGg6MjAlO1xcXCIgZGF0YS1JRD0nXCIrTWVudURhdGFbaV0uQ0xEX01FTlVbal0uSURfTUVOVStcIic+PGltZyBzdHlsZT0nbWF4LXdpZHRoOjk1JTsnIHNyYz0nXCIrdGhlcGF0aCsnL2ltZy9idXMvJytNZW51RGF0YVtpXS5DTERfTUVOVVtqXS5OQU1fSUNPTitcIic+PC9kaXY+XCJcclxuXHRcdFx0XHRcdFx0XHRcdCQoXCIuTWVudVNob3dcIikuYXBwZW5kKG5vZGVDaGlsZCk7XHJcblx0XHRcdFx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cdCBcclxuXHRcdHZhciBpbWdOb2Rlcz0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5NZW51U2hvdyBkaXZcIik7XHJcblx0XHRmb3IodmFyIGk9MDtpPGltZ05vZGVzLmxlbmd0aDtpKyspe1xyXG5cdFx0XHRpbWdOb2Rlc1tpXS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixvblN1cmUpO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gb25TdXJlKCl7XHJcblx0XHRcdHZhciBNZW51SUQ9JCh0aGlzKS5hdHRyKFwiZGF0YS1JRFwiKTtcclxuXHRcdFx0XHJcblx0XHRcdHNldFZhcihcIkdEX0EwMV9NZW51SURcIixNZW51SUQpO1xyXG5cdFx0XHRleGl0U2NlbmUoXCJTVEFfQ09OVElOVUVcIik7XHJcblx0XHR9XHJcblx0XHR9KTtcclxuXHR9XHJcbn1cclxuPC9zY3JpcHQ+ICIsIjx0ZW1wbGF0ZT5cclxuPGRpdj5cclxuICAgIDxoZWFkZXIgY2xhc3M9XCJoZWFkZXJcIj5cclxuXHRcdDxkaXYgY2xhc3M9XCJoZWFkZXJfcmlnaHRhcmVhXCI+XHJcblx0XHRcdDwhLS3lgJLorqHml7YgLS0+XHJcblx0XHRcdDxkaXYgaWQ9XCJDb3VudERvd25cIiBjbGFzcz1cInRpbWVcIj48L2Rpdj5cclxuXHRcdDwvZGl2PlxyXG5cdDwvaGVhZGVyPlxyXG5cclxuICAgIDxtYWluIGNsYXNzPVwibWFpblwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJwdWJfY29udGVudFwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGFuZWxcIj5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj7kv6Hmga/mj5DnpLo8L3A+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cImNlbnRlcl90aXRsZVwiIGlkPVwiU2hvd1JlYXNvblwiPjwvcD5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidG5ib3hcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG4gZGlzcF9ub25lXCIgaWQ9XCJidG5fc3VyZVwiPuWKoOi9veS4u+WvhumSpTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cImNlbnRlcl90aXRsZVwiIGlkPVwiTXNnMVwiPjwvcD5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L21haW4+XHJcbjwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5tb3VudGVkICgpIHsgICBcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX3N1cmVcIikub25jbGljaz1vblN1cmU7XHJcbiAgICBmdW5jdGlvbiBvblN1cmUoKXtcclxuICAgICAgICBvbkNvbnRpbnVlKCk7XHJcbiAgICB9XHJcbn1cclxufVxyXG48L3NjcmlwdD4iLCI8dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICA8cCBjbGFzcz1cInRpdGxlXCI+5L+h5oGv5o+Q56S6PC9wPlxyXG4gICAgICAgIDxwIGNsYXNzPVwiY2VudGVyX3RpdGxlXCIgaWQ9XCJTaG93UmVhc29uXCI+57O757uf55WZ5a2Y6K+B5Lu26LW35aeL5pel5pyf6K+G5Yir5Li65paw54mI6K+B5Lu277yM6K+36K+75Y+W6K+B5Lu25oiW6L+b6KGM6LWE5paZ5L+u5pS55Lqk5piTPC9wPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJidG5ib3hcIj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIGlkPVwiYnRuX2JhY2tcIiA+6K+75Y+W6K+B5Lu2PC9idXR0b24+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgXHJcbiAgICA8L3gtbGF5b3V0LW1haW4+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbm1vdW50ZWQgKCkge1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX2JhY2tcIikub25jbGljaz1vbkJhY2s7XHJcbiAgICAgICAgZnVuY3Rpb24gb25CYWNrKGUpe1xyXG5cdFx0XHRvbkNvbnRpbnVlKCk7XHJcbiAgICAgICAgfSAgICAgICBcclxuICAgIH1cclxufVxyXG48L3NjcmlwdD5cclxuIiwiPHRlbXBsYXRlPlxyXG48ZGl2IGNsYXNzPVwieC1tb2RhbFwiPlxyXG4gICAgPHAgY2xhc3M9XCJtb2RhbF90aXBcIj7mgqjlsJrmnKrov5vooYzpo47pmanor4TkvLDvvIzor7flhYjov5vooYzpo47pmanor4TkvLA8L3A+XHJcbiAgICA8ZGl2IGNsYXNzPVwiYnRuYm94XCI+XHJcbiAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIEBjbGljaz1cIm9uQmFja1wiPuWPliZuYnNwO+a2iDwvYnV0dG9uPlxyXG4gICAgICAgIDxidXR0b24gY2xhc3M9XCJidG5cIiBAY2xpY2s9XCJvblN1cmVcIj7noa4mbmJzcDvorqQ8L2J1dHRvbj5cclxuICAgIDwvZGl2PlxyXG48L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCB7IG1hcFN0YXRlICwgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIG1ldGhvZHMgOiB7XHJcbiAgICAgICAgb25CYWNrKCkge1xyXG4gICAgICAgICAgICB0aGlzLm9uQ2FuY2VsKCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvblN1cmUgKCkge1xyXG4gICAgICAgICAgICB0aGlzLm9uQ29udGludWUoKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC4uLm1hcEFjdGlvbnMoWydpbml0UG9vbCcsICdmZXRjaCcsICdvbkNhbmNlbCcsICdvbkNvbnRpbnVlJywgJ2V4aXRTY2VuZSddKVxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG5cclxuPHN0eWxlIHNjb3BlZD5cclxuLm1vZGFsX3RpcCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDQwJTtcclxuICAgIHdpZHRoOiA5OCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDNyZW07IFxyXG59XHJcbi5tb2RhbF90aXRsZSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDEwJTtcclxuICAgIHdpZHRoOiA5OSU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDNyZW07IFxyXG59XHJcbjwvc3R5bGU+XHJcblxyXG5cclxuXHJcbiIsIjx0ZW1wbGF0ZT5cclxuPGRpdj5cclxuICAgIDxoZWFkZXIgY2xhc3M9XCJoZWFkZXJcIj5cclxuXHRcdDxkaXYgY2xhc3M9XCJoZWFkZXJfcmlnaHRhcmVhXCI+XHJcblx0XHRcdDxkaXYgY2xhc3M9XCJidG5fZXhpdFwiIGlkPVwiYnRuRXhpdFwiPjwvZGl2PlxyXG5cdFx0PC9kaXY+XHJcblx0PC9oZWFkZXI+XHJcblxyXG4gICAgPG1haW4gY2xhc3M9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInB1Yl9jb250ZW50XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYW5lbFwiPlxyXG4gICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJ0aXRsZVwiPuacrOacuuaaguWBnOacjeWKoTwvcD5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwiY2VudGVyX3RpdGxlXCI+55Sx5LqO6K6+5aSH5pWF6Zqc77yM5peg5rOV5o+Q5L6b5pyN5Yqh77yMPGJyLz48YnIvPue7meaCqOW4puadpeS4jeS+v++8jOaVrOivt+iwheino++8gSjlr4bnoIHplK7nm5jnoazku7bmlYXpmpwpPC9wPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvbWFpbj5cclxuPC9kaXY+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbm1vdW50ZWQgKCkge1xyXG5cdFx0Ly/ngrnlh7vnrqHmnLrlkZjplK5cclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bkV4aXRcIikub25jbGljaz1vbkV4aXQ7XHJcblx0ICAgIGZ1bmN0aW9uIG9uRXhpdCgpe1xyXG5cdFx0XHRleGl0U2NlbmUoXCJTVEFfQURNSU5cIik7XHJcblx0XHR9XHJcbn1cclxufVxyXG48L3NjcmlwdD5cclxuIiwiPHRlbXBsYXRlPlxyXG48ZGl2PlxyXG4gICAgPGhlYWRlciBjbGFzcz1cImhlYWRlclwiPlxyXG5cdFx0PGRpdiBjbGFzcz1cImhlYWRlcl9yaWdodGFyZWFcIj5cclxuXHRcdFx0PCEtLeWAkuiuoeaXtiAtLT5cclxuXHRcdFx0PGRpdiBpZD1cIkNvdW50RG93blwiIGNsYXNzPVwidGltZVwiPjwvZGl2PlxyXG5cdFx0PC9kaXY+XHJcblx0PC9oZWFkZXI+XHJcblxyXG4gICAgPG1haW4gY2xhc3M9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInB1Yl9jb250ZW50XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwYW5lbFwiPlxyXG4gICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJ0aXRsZVwiPuS/oeaBr+aPkOekujwvcD5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwiY2VudGVyX3RpdGxlXCIgaWQ9XCJTaG93UmVhc29uXCI+5q2j5Zyo5aSN5L2N56Gs5Lu25qih5Z2X77yM6K+356iN5YCZLi4uPC9wPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ0bmJveFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gc3VyZWJ0biBkaXNwX25vbmVcIiBpZD1cImJ0bl9zdXJlXCI+6YeNJm5ic3A7Jm5ic3A7Jm5ic3A76K+VPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwiY2VudGVyX3RpdGxlXCIgaWQ9XCJNc2cxXCI+PC9wPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvbWFpbj5cclxuPC9kaXY+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbm1vdW50ZWQgKCkge1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fc3VyZVwiKS5vbmNsaWNrPW9uU3VyZTtcclxuXHQgICAgZnVuY3Rpb24gb25TdXJlKGUpe1xyXG5cdFx0XHRvbkNvbnRpbnVlKCk7XHJcblx0XHR9XHJcbn1cclxufVxyXG48L3NjcmlwdD4iLCJ2YXIgX192dWVpZnlfc3R5bGVfZGlzcG9zZV9fID0gcmVxdWlyZShcInZ1ZWlmeS9saWIvaW5zZXJ0LWNzc1wiKS5pbnNlcnQoXCJpbWdbZGF0YS12LTZiZTdmZDAyXXtcXHJcXG4gICAgZGlzcGxheTogYmxvY2s7XFxyXFxuICAgIG1hcmdpbjogYXV0bztcXHJcXG4gICAgd2lkdGg6IDIwJTtcXHJcXG59XCIpXG52YXIgX192dWVfX29wdGlvbnNfXyA9ICh0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09IFwiZnVuY3Rpb25cIj8gbW9kdWxlLmV4cG9ydHMub3B0aW9uczogbW9kdWxlLmV4cG9ydHMpXG5pZiAoX192dWVfX29wdGlvbnNfXy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWVpZnldIGZ1bmN0aW9uYWwgY29tcG9uZW50cyBhcmUgbm90IHN1cHBvcnRlZCBhbmQgc2hvdWxkIGJlIGRlZmluZWQgaW4gcGxhaW4ganMgZmlsZXMgdXNpbmcgcmVuZGVyIGZ1bmN0aW9ucy5cIil9XG5fX3Z1ZV9fb3B0aW9uc19fLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIngtbW9kYWxcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIm1vZGFsX3RyYWRpbmdCb3hcIixhdHRyczp7XCJpZFwiOlwibW9kYWxfdHJhZGluZ0JveFwifX0sW19jKCdkaXYnLFtfYygnaW1nJyx7YXR0cnM6e1wic3JjXCI6X3ZtLiRyb290LmltZ1BhdGgoJ2ltZy9sb2FkaW5nLmdpZicpfX0pLF92bS5fdihcIuato+WcqOivu+WPluWtmOaKmOS/oeaBr++8jOivt+eojeWAmS4uLlwiKV0pXSldKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW11cbl9fdnVlX19vcHRpb25zX18uX3Njb3BlSWQgPSBcImRhdGEtdi02YmU3ZmQwMlwiXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7ICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCB0cnVlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBtb2R1bGUuaG90LmRpc3Bvc2UoX192dWVpZnlfc3R5bGVfZGlzcG9zZV9fKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtNmJlN2ZkMDJcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LTZiZTdmZDAyXCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH1cbn0pKCl9IiwidmFyIF9fdnVlX19vcHRpb25zX18gPSAodHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcImZ1bmN0aW9uXCI/IG1vZHVsZS5leHBvcnRzLm9wdGlvbnM6IG1vZHVsZS5leHBvcnRzKVxuaWYgKF9fdnVlX19vcHRpb25zX18uZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlaWZ5XSBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgYW5kIHNob3VsZCBiZSBkZWZpbmVkIGluIHBsYWluIGpzIGZpbGVzIHVzaW5nIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuX192dWVfX29wdGlvbnNfXy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygneC1sYXlvdXQtbWFpbicsW19jKCdwJyx7c3RhdGljQ2xhc3M6XCJ0aXRsZVwifSxbX3ZtLl92KFwi5L+h5oGv5o+Q56S6XCIpXSksX3ZtLl92KFwiIFwiKSxfYygncCcse3N0YXRpY0NsYXNzOlwiY2VudGVyX3RpdGxlXCJ9LFtfdm0uX3YoXCLmraPlnKjmiZPljbDlm57ljZUuLi5cIildKV0pfVxuX192dWVfX29wdGlvbnNfXy5zdGF0aWNSZW5kZXJGbnMgPSBbXVxuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkgeyAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgdHJ1ZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LTViNTNiMDEwXCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi01YjUzYjAxMFwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9XG59KSgpfSIsInZhciBfX3Z1ZV9fb3B0aW9uc19fID0gKHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJmdW5jdGlvblwiPyBtb2R1bGUuZXhwb3J0cy5vcHRpb25zOiBtb2R1bGUuZXhwb3J0cylcbmlmIChfX3Z1ZV9fb3B0aW9uc19fLmZ1bmN0aW9uYWwpIHtjb25zb2xlLmVycm9yKFwiW3Z1ZWlmeV0gZnVuY3Rpb25hbCBjb21wb25lbnRzIGFyZSBub3Qgc3VwcG9ydGVkIGFuZCBzaG91bGQgYmUgZGVmaW5lZCBpbiBwbGFpbiBqcyBmaWxlcyB1c2luZyByZW5kZXIgZnVuY3Rpb25zLlwiKX1cbl9fdnVlX19vcHRpb25zX18ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3gtbGF5b3V0LW1haW4nLFtfYygncCcse3N0YXRpY0NsYXNzOlwidGl0bGVcIn0sW192bS5fdihcIuS/oeaBr+aPkOekulwiKV0pLF92bS5fdihcIiBcIiksX2MoJ3AnLHtzdGF0aWNDbGFzczpcImNlbnRlcl90aXRsZVwifSxbX3ZtLl92KFwi5q2j5Zyo5omT5Y2w5Yet5p2hLi4uXCIpXSldKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW11cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHsgIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIHRydWUpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi05ZGEwOTI2NFwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtOWRhMDkyNjRcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfVxufSkoKX0iLCI8dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICAgICAgPHAgY2xhc3M9XCJ0aXRsZVwiPjwvcD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIngtaHNnaWZcIj5cclxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiXCI+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGlkPVwiYmdcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIj5cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgPC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHN0eWxlIHNjb3BlZD5cclxuLngtaHNnaWZ7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgbWFyZ2luOiAwJSBhdXRvO1xyXG59XHJcbi54LWhzZ2lmIGltZ3tcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbjwvc3R5bGU+XHJcbjxzY3JpcHQ+XHJcblxyXG4gZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgbW91bnRlZCAoKSB7IFxyXG4gICAgICAgIHZhciB2bT10aGlzO1xyXG4gICAgICAgIERhdGFUb29scy5nZXQoXCJHRF9BMDFfQ3VzdF9SZWplY3RNZWRpYUlEfEdEX0NvZFBpZFwiLGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICBzd2l0Y2goZGF0YVswXSl7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiSURDXCI6Y2FzZSBcIklEQ0lDXCI6IGNhc2UgXCJNQUdcIjpcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLnRpdGxlXCIpLmh0bWwoXCLmgqjnmoTpk7booYzljaHlt7Looqvlm57mlLbvvIzor7fkuI7lpKfloILnu4/nkIbogZTns7tcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gJChcIi54LWhzZ2lmIGltZ1wiKS5hdHRyKFwic3JjXCIsdm0uJHJvb3QuaW1nUGF0aChcImltZy9cIit2bS4kcm9vdC5nZXRJbWdQYXRoKCkrXCJUYWtlQ2FyZC5naWZcIikpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICQoXCIjYmdcIikuZW1wdHkoKTtcclxuICAgICAgICAgICAgICAgICAgICAvLyAkKFwiI2JnXCIpLmh0bWwoJzxFTUJFRCBpZD1cInNvdW5kXCIgbmFtZT1cIlZpZXdTb3VuZFwiIFNSQz1cIndhdi/or7fmlLblpb3mgqjnmoTpk7booYzljaEud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcIlNJTVwiOlxyXG4gICAgICAgICAgICAgICAgICAgICQoXCIudGl0bGVcIikuaHRtbChcIuivt+aUtuWlveaCqOeahOmTtuihjOWNoe+8jOS7pemYsumBl+WksVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAvLyAkKFwiLngtaHNnaWYgaW1nXCIpLmF0dHIoXCJzcmNcIix2bS4kcm9vdC5pbWdQYXRoKFwiaW1nL1wiK3ZtLiRyb290LmdldEltZ1BhdGgoKStcIlRha2VQSUNDYXJkLmdpZlwiKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gJChcIiNiZ1wiKS5lbXB0eSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICQoXCIjYmdcIikuaHRtbCgnPEVNQkVEIGlkPVwic291bmRcIiBuYW1lPVwiVmlld1NvdW5kXCIgU1JDPVwid2F2L+ivt+aUtuWlveaCqOeahOmTtuihjOWNoS53YXZcIiBMb29wPWZhbHNlIEFVVE9TVEFSVD10cnVlIEhpZGRlbj10cnVlIE1BU1RFUlNPVU5EPjwvRU1CRUQ+Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiUFBSXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi50aXRsZVwiKS5odG1sKFwi5oKo55qE5a2Y5oqY5bey6KKr5Zue5pS277yM6K+35LiO5aSn5aCC57uP55CG6IGU57O7XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICQoXCIueC1oc2dpZiBpbWdcIikuYXR0cihcInNyY1wiLHZtLiRyb290LmltZ1BhdGgoXCJpbWcvXCIrdm0uJHJvb3QuZ2V0SW1nUGF0aCgpK1wiRGlzcGVuc2VQYXNzYm9vay5naWZcIikpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICQoXCIjYmdcIikuZW1wdHkoKTtcclxuICAgICAgICAgICAgICAgICAgICAvLyAkKFwiI2JnXCIpLmh0bWwoJzxFTUJFRCBpZD1cInNvdW5kXCIgbmFtZT1cIlZpZXdTb3VuZFwiIFNSQz1cIndhdi/or7fmlLblpb3mgqjnmoTlrZjmipgud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcIklEXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi50aXRsZVwiKS5odG1sKFwi6K+35pS25aW95oKo55qE6Lqr5Lu96K+B5Lu277yM5Lul6Ziy6YGX5aSxXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2goZGF0YVsxXSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCIxMTAwMDFcIjogLy/kuozku6Pouqvku73or4FcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIueC1oc2dpZiBpbWdcIikuYXR0cihcInNyY1wiLHZtLiRyb290LmltZ1BhdGgoXCJpbWcvXCIrdm0uJHJvb3QuZ2V0SW1nUGF0aCgpK1wiVGFrZUlEQ2FyZC5naWZcIikpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCIxMTAwMzdcIjovL+WkluWbveS6uuawuOS5heWxheeVmeivgVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIi54LWhzZ2lmIGltZ1wiKS5hdHRyKFwic3JjXCIsdm0uJHJvb3QuaW1nUGF0aChcImltZy9cIit2bS4kcm9vdC5nZXRJbWdQYXRoKCkrXCJUYWtlRm9yZWlnbmVyQ2FyZC5naWZcIikpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiLngtaHNnaWYgaW1nXCIpLmF0dHIoXCJzcmNcIix2bS4kcm9vdC5pbWdQYXRoKFwiaW1nL1wiK3ZtLiRyb290LmdldEltZ1BhdGgoKStcIlRha2VJRENhcmQuZ2lmXCIpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAvLyAkKFwiLngtaHNnaWYgaW1nXCIpLmF0dHIoXCJzcmNcIix2bS4kcm9vdC5pbWdQYXRoKFwiaW1nL1wiK3ZtLiRyb290LmdldEltZ1BhdGgoKStcIlRha2VJRENhcmQuZ2lmXCIpKTtcclxuICAgICAgICAgICAgICAgICAgICAvLyAkKFwiI2JnXCIpLmVtcHR5KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gJChcIiNiZ1wiKS5odG1sKCc8RU1CRUQgaWQ9XCJzb3VuZFwiIG5hbWU9XCJWaWV3U291bmRcIiBTUkM9XCJ3YXYv6K+35pS25aW95oKo55qE6Lqr5Lu96K+B5Lu2LndhdlwiIExvb3A9ZmFsc2UgQVVUT1NUQVJUPXRydWUgSGlkZGVuPXRydWUgTUFTVEVSU09VTkQ+PC9FTUJFRD4nKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi50aXRsZVwiKS5odG1sKFwi5oKo55qE6ZO26KGM5Y2h5bey6KKr5Zue5pS277yM6K+35LiO5aSn5aCC57uP55CG6IGU57O7XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICQoXCIueC1oc2dpZiBpbWdcIikuYXR0cihcInNyY1wiLHZtLiRyb290LmltZ1BhdGgoXCJpbWcvXCIrdm0uJHJvb3QuZ2V0SW1nUGF0aCgpK1wiVGFrZUNhcmQuZ2lmXCIpKTtcclxuICAgICAgICAgICAgICAgICAgICAvLyAkKFwiI2JnXCIpLmVtcHR5KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gJChcIiNiZ1wiKS5odG1sKCc8RU1CRUQgaWQ9XCJzb3VuZFwiIG5hbWU9XCJWaWV3U291bmRcIiBTUkM9XCJ3YXYv6K+35pS25aW95oKo55qE6ZO26KGM5Y2hLndhdlwiIExvb3A9ZmFsc2UgQVVUT1NUQVJUPXRydWUgSGlkZGVuPXRydWUgTUFTVEVSU09VTkQ+PC9FTUJFRD4nKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfSBcclxuICAgICAgfSk7XHJcbiAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG5cclxuIiwiPHRlbXBsYXRlPlxyXG48ZGl2IGNsYXNzPVwieC1tb2RhbFwiPlxyXG4gICAgPHAgY2xhc3M9XCJtb2RhbF90aXBcIj7mgqjnmoTpo47pmanor4TkvLDnu5Pmnpzlt7Lov4fmnJ/vvIzor7fph43mlrDov5vooYzpo47pmanor4TkvLA8L3A+XHJcbiAgICA8ZGl2IGNsYXNzPVwiYnRuYm94XCI+XHJcbiAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIEBjbGljaz1cIm9uQmFja1wiPuWPliAmbmJzcDvmtog8L2J1dHRvbj5cclxuICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuXCIgQGNsaWNrPVwib25TdXJlXCI+56GuICZuYnNwO+WumjwvYnV0dG9uPiBcclxuICAgIDwvZGl2PlxyXG48L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCB7IG1hcFN0YXRlICwgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIG1ldGhvZHMgOiB7XHJcbiAgICAgICAgb25TdXJlICgpIHtcclxuICAgICAgICAgICAgdGhpcy5vbkNvbnRpbnVlKCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkJhY2sgKCkge1xyXG4gICAgICAgICAgICB0aGlzLm9uQ2FuY2VsKCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAuLi5tYXBBY3Rpb25zKFsnaW5pdFBvb2wnLCAnZmV0Y2gnLCAnb25DYW5jZWwnLCAnb25Db250aW51ZScsICdleGl0U2NlbmUnXSlcclxuICAgIH1cclxufVxyXG48L3NjcmlwdD5cclxuXHJcbjxzdHlsZSBzY29wZWQ+XHJcbi5tb2RhbF90aXAge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiA0MCU7XHJcbiAgICB3aWR0aDogOTglO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAzcmVtOyBcclxufVxyXG4ubW9kYWxfdGl0bGUge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAxMCU7XHJcbiAgICB3aWR0aDogOTklO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAzcmVtOyBcclxufVxyXG48L3N0eWxlPlxyXG5cclxuIiwiPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcbiAgICAgICAgPHAgY2xhc3M9XCJ0aXRsZVwiPuivt+mAieaLqeWbveWutjwvcD5cclxuICAgICAgICAgICAgPHRhYmxlIGlkPVwidGFiXCIgY2xhc3M9XCJpbmZvcl90YWJsZVwiIHN0eWxlPVwidGFibGUtbGF5b3V0OmZpeGVkO3dvcmQtd3JhcDpicmVhay13b3JkO1wiPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG5cdFx0XHRcdFx0PHRkPuWbvSZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwO+Wutu+8mjwvdGQ+XHJcblx0XHRcdFx0XHQ8dGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD48aW5wdXQgdi1vbjppbnB1dD1cInNvdXJjZUNoYW5nZWRcIiBjbGFzcz1cImlucHV0X2luZm9cIiBpZD1cIkNvdW50cnlJbnB1dFwiIGxpc3Q9XCJDb3VudHJ5TGlzdFwiIHBsYWNlaG9sZGVyPVwi6K+36YCJ5oup5Zu95a62L+WcsOWMulwiIHR5cGU9XCJ0ZXh0XCIgbWF4bGVuZ3RoPVwiMjBcIiBvbmNsaWNrPVwiU2hvd1BpbnlpbktCKCctMScsJy0xJywnQ291bnRyeUlucHV0Jywn6K+36YCJ5oup5Zu95a62L+WcsOWMuu+8micpXCIgb25ibHVyPVwiSGlkZUtCKClcIj48L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGF0YWxpc3QgaWQ9XCJDb3VudHJ5TGlzdFwiIEBjaGFuZ2U9J2NoYW5nZVR5cGUnPjwvZGF0YWxpc3Q+XHJcblx0XHRcdFx0XHQ8L3RkPlxyXG5cdFx0XHRcdDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidG5ib3hcIj4gICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG5cIiBpZD1cImJ0bl9iYWNrXCIgPuS4iiZuYnNwO+S4gCZuYnNwO+atpTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIGlkPVwiYnRuX3N1cmVcIiA+5LiLJm5ic3A75LiAJm5ic3A75q2lPC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgPC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgZGF0YSAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuXHRcdFx0anNvbjonW3tcIk5VTV9JVEVNX0RJQ1wiOlwiQUJXXCIsXCJWTFVfSVRFTV9ESUNcIjpcIumYv+mygeW3tFwifSx7XCJOVU1fSVRFTV9ESUNcIjpcIkFGR1wiLFwiVkxVX0lURU1fRElDXCI6XCLpmL/lr4zmsZdcIn0se1wiTlVNX0lURU1fRElDXCI6XCJCRUxcIixcIlZMVV9JVEVNX0RJQ1wiOlwi5q+U5Yip5pe2XCJ9LHtcIk5VTV9JVEVNX0RJQ1wiOlwiQlROXCIsXCJWTFVfSVRFTV9ESUNcIjpcIuS4jeS4uVwifSx7XCJOVU1fSVRFTV9ESUNcIjpcIkdCUlwiLFwiVkxVX0lURU1fRElDXCI6XCLoi7Hlm71cIn1dJyxcdFx0XHQgXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIG1ldGhvZHM6IHtcclxuICAgICAgICBzb3VyY2VDaGFuZ2VkOiBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgIHZhciBzdHJDb3VudHJ5SW5wdXQgPSAkKFwiI0NvdW50cnlJbnB1dFwiKS52YWwoKTsvL+mAieaLqeeahOWbveWutiBcclxuICAgICAgICAgICAgdGhpcy5vblNlbGVjdENvdW50cnkoc3RyQ291bnRyeUlucHV0KTsvL+agueaNrumAieaLqeaIlui+k+WFpeeahOmHjeaWsOWMuemFjeS4i+aLieahhlxyXG4gICAgICAgICAgICAvL+aIquWPluepuuagvOWQjumdoueahOWtl+espuS4suS9nOS4uuWuouaIt+mAieaLqeeahOWbveWutlxyXG4gICAgICAgICAgICB2YXIgYXJyID0gc3RyQ291bnRyeUlucHV0LnNwbGl0KCcgJyk7IFxyXG4gICAgICAgICAgICBpZihhcnIubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgICAgICAgICBzdHJDb3VudHJ5SW5wdXQgPSBhcnJbYXJyLmxlbmd0aCAtIDFdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8v5pu/5o2i6L6T5YWl5qGG6YeM6Z2i55qE5YC8XHJcbiAgICAgICAgICAgICQoXCIjQ291bnRyeUlucHV0XCIpLnZhbChzdHJDb3VudHJ5SW5wdXQpOyBcclxuICAgICAgICAgICAgdmFyIHN0ckNvdW50cnlDb2RlID0gc3RyRnJvbUpzb24odGhpcy5qc29uLFwiVkxVX0lURU1fRElDXCIsc3RyQ291bnRyeUlucHV0LFwiTlVNX0lURU1fRElDXCIpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uU2VsZWN0Q291bnRyeSAodmFsKSB7Ly/liJvlu7rkuIvmi4nmoYbmlbDmja5cclxuICAgICAgICAgICAgJChcIiNDb3VudHJ5TGlzdFwiKS5odG1sKFwiXCIpO1xyXG4gICAgICAgICAgICB2YXIgc2VsZWN0QXJyYXkgPSBuZXcgQXJyYXkoKTtcclxuICAgICAgICAgICAgdmFyIGs9MDtcclxuICAgICAgICAgICAgdmFyIERpY3RDb3VudHJ5MSA9IEpTT04ucGFyc2UodGhpcy5qc29uKTtcclxuICAgICAgICAgICAgZm9yKHZhciBpIGluIERpY3RDb3VudHJ5MSl7IFxyXG4gICAgICAgICAgICAgICAgaWYoRGljdENvdW50cnkxW2ldLlZMVV9JVEVNX0RJQz09XCLkuK3lm71cIikgXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZihDaGVja1Bpbllpbih2YWwpKXsvL+WFqOmDqOaYr+aLvOmfs1xyXG4gICAgICAgICAgICAgICAgICAgdmFsID0gdmFsLnRvTG93ZXJDYXNlKCk7Ly/lhajpg6jovazmjaLmiJDlsI/lhplcclxuICAgICAgICAgICAgICAgICAgIHZhciBzdHJDb3VudHJ5Rm9yUFk9IENvbnZlcnRQaW55aW4oRGljdENvdW50cnkxW2ldLlZMVV9JVEVNX0RJQyk7XHJcbiAgICAgICAgICAgICAgICAgICBpZihzdHJDb3VudHJ5Rm9yUFkuaW5kZXhPZih2YWwpICE9IC0xKXsvL+WMheWQq1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RBcnJheVtrXSA9IG5ldyBBcnJheSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvL+aKiuaVsOaNruWFqOmDqOWKoOWFpeWIsOWIl+ihqOS4rVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RBcnJheVtrXVswXSA9IHN0ckNvdW50cnlGb3JQWSArIFwiIFwiICsgRGljdENvdW50cnkxW2ldLlZMVV9JVEVNX0RJQztcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0QXJyYXlba11bMV0gPSBEaWN0Q291bnRyeTFbaV0uVkxVX0lURU1fRElDO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBrKys7IFxyXG4gICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZXsvL+S4jeaYr+aLvOmfs1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKERpY3RDb3VudHJ5MVtpXS5WTFVfSVRFTV9ESUMuaW5kZXhPZih2YWwpICE9IC0xKXsvL+WMheWQq1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RBcnJheVtrXSA9IG5ldyBBcnJheSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvL+aKiuaVsOaNruWFqOmDqOWKoOWFpeWIsOWIl+ihqOS4rVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RBcnJheVtrXVswXSA9IERpY3RDb3VudHJ5MVtpXS5WTFVfSVRFTV9ESUM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdEFycmF5W2tdWzFdID0gRGljdENvdW50cnkxW2ldLlZMVV9JVEVNX0RJQztcclxuICAgICAgICAgICAgICAgICAgICAgICAgaysrOyBcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgaHRtbCA9IFwiXCI7XHJcbiAgICAgICAgICAgIGZvcih2YXIgaT0wOyBpPHNlbGVjdEFycmF5Lmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgICAgICAgICBodG1sICs9ICc8b3B0aW9uIHZhbHVlPVwiJysgc2VsZWN0QXJyYXlbaV1bMF0gKydcIj4nKyBzZWxlY3RBcnJheVtpXVsxXSArJzwvb3B0aW9uPic7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJChcIiNDb3VudHJ5TGlzdFwiKS5odG1sKGh0bWwpOyBcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIG1vdW50ZWQgKCkgeyAgICAgIFxyXG4gICAgICAgIC8v5Zu95a625LiL5ouJ5qGG5Yid5aeL5YyWXHJcbiAgICAgICAgdGhpcy5vblNlbGVjdENvdW50cnkoXCJcIik7XHJcbiAgICAgICAgdmFyIHN0ckNvdW50cnkgPSBzdHJGcm9tSnNvbih0aGlzLmpzb24sXCJOVU1fSVRFTV9ESUNcIixcIkJFTFwiLFwiVkxVX0lURU1fRElDXCIpO1xyXG4gICAgICAgICQoXCIjQ291bnRyeUlucHV0XCIpLnZhbChzdHJDb3VudHJ5KTsgXHJcblxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX3N1cmVcIikub25jbGljaz1vbkJ0blN1cmU7XHJcbiAgICAgICAgZnVuY3Rpb24gb25CdG5TdXJlKCl7IFxyXG4gICAgICAgICAgICB2YXIgaXNPayA9IGZhbHNlO1xyXG4gICAgICAgICAgICB2YXIgdmFsID0gJChcIiNDb3VudHJ5SW5wdXRcIikudmFsKCk7Ly/pgInmi6nnmoTlm73lrrZcclxuICAgICAgICAgICAgdmFyIHN0ckNvdW50cnlDb2RlID0gc3RyRnJvbUpzb24oanNvbixcIlZMVV9JVEVNX0RJQ1wiLHZhbCxcIk5VTV9JVEVNX0RJQ1wiKTtcclxuXHQgICAgfTtcclxuICAgIH1cclxufVxyXG48L3NjcmlwdD4iLCI8c3R5bGUgc2NvcGVkPlxyXG4uTWVkaWFLaW5ke1xyXG4gICAgd2lkdGg6OTUlO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuLkNhcmRNZWRpYXtcclxuICAgIHdpZHRoOiA1OTZweDtcclxuICAgIGhlaWdodDogMzAwcHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweDsgXHJcbn1cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTMwMHB4KSB7IFxyXG4gICAgLkNhcmRNZWRpYXtcclxuICAgICAgICAgICAgd2lkdGg6IDQ4MHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDI4MHB4O1xyXG4gICAgICAgIH1cclxufVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LWhlaWdodDogODUwcHgpIHsgXHJcbiAgICAuQ2FyZE1lZGlhe1xyXG4gICAgICAgIHdpZHRoOiA0MDBweDtcclxuICAgICAgICBoZWlnaHQ6IDI0MHB4O1xyXG4gICAgfVxyXG4gICAgLkNhcmRNZWRpYSBwe1xyXG4gICAgICAgIGZvbnQtc2l6ZTozLjByZW07XHJcbiAgICAgICAgbWFyZ2luLXRvcDotMTVweDtcclxuICAgIH1cclxufVxyXG48L3N0eWxlPlxyXG5cclxuPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcbiAgPHAgY2xhc3M9XCJ0aXRsZVwiPumAieaLqeivgeS7tuexu+WeizwvcD5cclxuXHJcbiAgICAgICAgPGRpdiBjbGFzcz1cIk1lZGlhS2luZFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIkNhcmRNZWRpYVwiIGlkPVwiSURDYXJkXCIgIHN0eWxlPVwiZGlzcGxheTpub25lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGltZyA6c3JjPVwiJHJvb3QuaW1nUGF0aCgnaW1nL+S6jOS7o+i6q+S7veivgS5wbmcnKVwiIGFsdD1cIlwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxwIHZhbHVlID1cIjExMDAwMVwiPuS6jOS7o+i6q+S7veivgTwvcD5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIkNhcmRNZWRpYVwiIGlkPVwiSEtPck1hY2F1XCIgICBzdHlsZT1cImRpc3BsYXk6bm9uZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbWcgOnNyYz1cIiRyb290LmltZ1BhdGgoJ2ltZy/muK/mvrPlsYXmsJHmnaXlvoDlhoXlnLDpgJrooYzor4EucG5nJylcIiBhbHQ9XCJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8cCB2YWx1ZSA9XCIxMTAwMTlcIj7muK/mvrPlsYXmsJHmnaXlvoDlhoXlnLDpgJrooYzor4E8L3A+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiQ2FyZE1lZGlhXCIgaWQ9XCJUQUlXQU5cIiAgc3R5bGU9XCJkaXNwbGF5Om5vbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICA8aW1nIDpzcmM9XCIkcm9vdC5pbWdQYXRoKCdpbWcv5Y+w5rm+5bGF5rCR5p2l5b6A5aSn6ZmG6YCa6KGM6K+BLnBuZycpXCIgYWx0PVwiXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHAgdmFsdWUgPVwiMTEwMDIxXCI+5Y+w5rm+5bGF5rCR5p2l5b6A5aSn6ZmG6YCa6KGM6K+BPC9wPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcblx0XHRcdFx0PGRpdiBjbGFzcz1cIkNhcmRNZWRpYVwiIGlkPVwiUFJDYXJkXCIgICBzdHlsZT1cImRpc3BsYXk6bm9uZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbWcgOnNyYz1cIiRyb290LmltZ1BhdGgoJ2ltZy/lpJblm73kurrmsLjkuYXlsYXnlZnor4ExLnBuZycpXCIgYWx0PVwiXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHAgdmFsdWUgPVwiMTEwMDM3XCI+5aSW5Zu95Lq65rC45LmF5bGF55WZ6K+BPC9wPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiQ2FyZE1lZGlhXCIgaWQ9XCJQQVNTUE9SdFwiICAgc3R5bGU9XCJkaXNwbGF5Om5vbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICA8aW1nIDpzcmM9XCIkcm9vdC5pbWdQYXRoKCdpbWcv5aSW5Zu95oqk54WnLnBuZycpXCIgYWx0PVwiXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHAgdmFsdWUgPVwiMTEwMDI1XCI+5aSW5Zu95oqk54WnPC9wPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PiBcclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjwhLS3ngrnlh7vmkJzntKLljLrln5/lvLnlh7rmqKHmgIHmoYYtLT5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5tb3VudGVkICgpIHtcclxuICAgIC8v6K+B5Lu25o6p56CB5aSE55CGXHJcbiAgICBEYXRhVG9vbHMuZ2V0KFwiR0RfQTAxX0N1c3RfSURUeXBlTWFza1wiLGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIC8v5o6p56CBNeS9je+8muS6jOS7o+ivgS3muK/mvrMt5Y+w5rm+LeaKpOeFpy3lpJblm73lsYXnlZnor4F877yM5LqM5Luj6K+B6buY6K6k5pSv5oyBXHJcbiAgICAgICAgdmFyIHN0ck1hc2sgPSBkYXRhLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgLy8gc3RyTWFzayA9IFwiMTAwMDFcIjtcclxuICAgICAgICBpZihzdHJNYXNrID09IFwiXCIpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICAvL+m7mOiupOaUr+aMgeS6jOS7o+ivgVxyXG4gICAgICAgICAgICBzdHJNYXNrID0gXCIxMDAwMFwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvL+aYvuekuuWvueW6lOeahOS7i+i0qFxyXG4gICAgICAgIC8vIGlmKHN0ck1hc2sucmVwbGFjZSgvMC9nLFwiXCIpLmxlbmd0aD09Myl7XHJcbiAgICAgICAgLy8gICAgICQoXCIuTWVkaWFLaW5kXCIpLmNzcyhcIndpZHRoXCIsIFwiOTYlXCIpO1xyXG4gICAgICAgIC8vICAgICAkKFwiLkNhcmRNZWRpYVwiKS5jc3MoXCJtYXJnaW4tbGVmdFwiLCBcIjQlXCIpO1xyXG4gICAgICAgIC8vIH1cclxuICAgICAgICBpZihzdHJNYXNrLnN1YnN0cigwLDEpID09IFwiMVwiKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgJChcIiNJRENhcmRcIikuY3NzKFwiZGlzcGxheVwiLFwiYmxvY2tcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHN0ck1hc2suc3Vic3RyKDEsMSkgPT0gXCIxXCIpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICAkKFwiI0hLT3JNYWNhdVwiKS5jc3MoXCJkaXNwbGF5XCIsXCJibG9ja1wiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoc3RyTWFzay5zdWJzdHIoMiwxKSA9PSBcIjFcIilcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgICQoXCIjVEFJV0FOXCIpLmNzcyhcImRpc3BsYXlcIixcImJsb2NrXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihzdHJNYXNrLnN1YnN0cigzLDEpID09IFwiMVwiKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgJChcIiNQQVNTUE9SdFwiKS5jc3MoXCJkaXNwbGF5XCIsXCJibG9ja1wiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoc3RyTWFzay5zdWJzdHIoNCwxKSA9PSBcIjFcIilcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgICQoXCIjUFJDYXJkXCIpLmNzcyhcImRpc3BsYXlcIixcImJsb2NrXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgLy/or4Hku7bpgInmi6nljZXpgInkuovku7blpITnkIZcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiSURDYXJkXCIpLm9uY2xpY2s9b25DYXJkTWVkaWE7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIkhLT3JNYWNhdVwiKS5vbmNsaWNrPW9uQ2FyZE1lZGlhO1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJUQUlXQU5cIikub25jbGljaz1vbkNhcmRNZWRpYTtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiUFJDYXJkXCIpLm9uY2xpY2s9b25DYXJkTWVkaWE7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlBBU1NQT1J0XCIpLm9uY2xpY2s9b25DYXJkTWVkaWE7XHJcbiAgICBmdW5jdGlvbiBvbkNhcmRNZWRpYSgpIHtcclxuICAgICAgICAvL+iOt+WPluivgeS7tuexu+Wei+agh+W/l1xyXG4gICAgICAgICQoXCIuQ2FyZE1lZGlhXCIpLnJlbW92ZUNsYXNzKFwib25cIik7XHJcblx0XHQkKHRoaXMpLmFkZENsYXNzKFwib25cIik7XHJcbiAgICAgICAgdmFyIERvY3VtZW50VHlwZSA9ICQodGhpcykuZmluZCgncCcpLmF0dHIoJ3ZhbHVlJyk7XHJcbiAgICAgICAgc2V0VmFyKFwiR0RfQ29kUGlkXCIsRG9jdW1lbnRUeXBlKTtcclxuICAgICAgICBzd2l0Y2goRG9jdW1lbnRUeXBlKXtcclxuICAgICAgICAgICAgY2FzZSBcIjExMDAwMVwiOlxyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiUF9Db2RDb3VudHJ5XCIsXCIxNTZcIik7XHJcbiAgICAgICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfQ09OVElOVUVcIik7IFxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCIxMTAwMjVcIjogY2FzZSBcIjExMDAxOVwiOiBjYXNlIFwiMTEwMDIxXCI6XHJcbiAgICAgICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfQ09OVElOVUVcIik7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIjExMDAzN1wiOlxyXG4gICAgICAgICAgICAgICAgLy/lpJblm73kurrmsLjkuYXlsYXnlZnor4HvvIzpu5jorqTmlK/mjIHpnZ7oiq/niYfnsbvlnotcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0EwMV9Jc1N1cHBvcnROSUNQUkNhcmRcIixcIjFcIik7XHJcbiAgICAgICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfQ09OVElOVUVcIik7IFxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfRkFJTFwiKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH0gICBcclxuICAgIH1cclxufVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8c3R5bGUgc2NvcGVkPlxyXG4gICAgLmJveHtcclxuICAgICAgICAgICAgaGVpZ2h0OiA3NzVweDtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgICAgICB9XHJcbiAgICAudG9wLCAuYm90dG9te1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNDVweDtcclxuICAgIH1cclxuICAgIC5jYXJke1xyXG4gICAgICAgICAgICB3aWR0aDogNTk2cHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMjgwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMzBweDtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDNyZW07ICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5jYXJkPmltZ3tcclxuICAgICAgICAgICAgd2lkdGg6NTAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDYwJTtcclxuICAgICAgICB9XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEzMDBweCkgeyBcclxuICAgIC5jYXJke1xyXG4gICAgICAgICAgICB3aWR0aDogNDgwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMjUwcHg7XHJcbiAgICAgICAgfVxyXG59XHJcbiAgICAuY2FyZGJveHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgLmNhcmRib3ggZGl2e1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0NiU7XHJcbiAgICAgICAgfVxyXG4gICAgLkRvY2ltZyBpbWd7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDM1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTMwMHB4KSB7IFxyXG4gICAgICAuRG9jaW1nIGltZ3tcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMjVweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtaGVpZ2h0OiA4NTBweCkgeyBcclxuICAgICAuYm94e1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgICAgIH1cclxuICAgIC5jYXJke1xyXG4gICAgICAgIHdpZHRoOiA0ODBweDtcclxuICAgICAgICBoZWlnaHQ6IDI0MHB4O1xyXG4gICAgfVxyXG4gICAgLkRvY2ltZyBpbWd7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgIH1cclxuICAgIC50b3AsIC5ib3R0b217XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDM1cHg7XHJcbiAgICB9XHJcbn1cclxuPC9zdHlsZT5cclxuXHJcbjx0ZW1wbGF0ZT5cclxuICAgIDx4LWxheW91dC1tYWluPlxyXG4gIDxwIGNsYXNzPVwidGl0bGVcIj7pgInmi6nor4Hku7bnsbvlnos8L3A+XHJcblxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJib3hcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRvcFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQgRG9jaW1nXCIgaWQ9XCJJRENhcmRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8aW1nIDpzcmM9XCIkcm9vdC5pbWdQYXRoKCdpbWcv5LqM5Luj6Lqr5Lu96K+BLnBuZycpXCIgYWx0PVwiXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHAgdmFsdWUgPVwiMTEwMDAxXCI+5LqM5Luj6Lqr5Lu96K+BPC9wPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZCBEb2NpbWdcIiBpZD1cIkhLT3JNYWNhdVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbWcgOnNyYz1cIiRyb290LmltZ1BhdGgoJ2ltZy/muK/mvrPlsYXmsJHmnaXlvoDlhoXlnLDpgJrooYzor4EucG5nJylcIiBhbHQ9XCJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8cCB2YWx1ZSA9XCIxMTAwMTlcIj7muK/mvrPlsYXmsJHmnaXlvoDlhoXlnLDpgJrooYzor4E8L3A+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJib3R0b21cIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkIERvY2ltZ1wiIGlkPVwiVEFJV0FOXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGltZyA6c3JjPVwiJHJvb3QuaW1nUGF0aCgnaW1nL+WPsOa5vuWxheawkeadpeW+gOWkp+mZhumAmuihjOivgS5wbmcnKVwiIGFsdD1cIlwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxwIHZhbHVlID1cIjExMDAyMVwiPuWPsOa5vuWxheawkeadpeW+gOWkp+mZhumAmuihjOivgTwvcD5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQgY2FyZGJveFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJEb2NpbWdcIiBpZD1cIlBSQ2FyZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW1nIDpzcmM9XCIkcm9vdC5pbWdQYXRoKCdpbWcv5aSW5Zu95Lq65rC45LmF5bGF55WZ6K+BLnBuZycpXCIgYWx0PVwiXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxwIHZhbHVlID1cIjExMDAzN1wiPuWkluWbveS6ujxicj7msLjkuYXlsYXnlZnor4E8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIkRvY2ltZ1wiIGlkPVwiUEFTU1BPUnRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyA6c3JjPVwiJHJvb3QuaW1nUGF0aCgnaW1nL+WkluWbveaKpOeFpy5wbmcnKVwiIGFsdD1cIlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8cCB2YWx1ZSA9XCIxMTAwMjVcIj7lpJblm73miqTnhac8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgIFxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPCEtLeeCueWHu+aQnOe0ouWMuuWfn+W8ueWHuuaooeaAgeahhi0tPlxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbmJlZm9yZURlc3Ryb3koKXtcclxuICAgICAkKFwiLkRvY2ltZ1wiKS51bmJpbmQoXCJjbGlja1wiKTtcclxufSxcclxubW91bnRlZCAoKSB7XHJcbiAgICAvL+ivgeS7tumAieaLqeWNlemAieS6i+S7tuWkhOeQhlxyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJJRENhcmRcIikub25jbGljaz1vbkRvY2ltZztcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiSEtPck1hY2F1XCIpLm9uY2xpY2s9b25Eb2NpbWc7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlRBSVdBTlwiKS5vbmNsaWNrPW9uRG9jaW1nO1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJQUkNhcmRcIikub25jbGljaz1vbkRvY2ltZztcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiUEFTU1BPUnRcIikub25jbGljaz1vbkRvY2ltZztcclxuIGZ1bmN0aW9uIG9uRG9jaW1nKCkge1xyXG4gICAgICAgIC8v6I635Y+W6K+B5Lu257G75Z6L5qCH5b+XXHJcbiAgICAgICAgJChcIi5Eb2NpbWdcIikucmVtb3ZlQ2xhc3MoXCJvblwiKTtcclxuXHRcdCQodGhpcykuYWRkQ2xhc3MoXCJvblwiKTtcclxuICAgICAgICB2YXIgRG9jdW1lbnRUeXBlID0gJCh0aGlzKS5maW5kKCdwJykuYXR0cigndmFsdWUnKTtcclxuICAgICAgICBzZXRWYXIoXCJHRF9Db2RQaWRcIixEb2N1bWVudFR5cGUpO1xyXG4gICAgICAgIHN3aXRjaChEb2N1bWVudFR5cGUpe1xyXG4gICAgICAgICAgICBjYXNlIFwiMTEwMDAxXCI6XHJcbiAgICAgICAgICAgICAgICBzZXRWYXIoXCJQX0NvZENvdW50cnlcIixcIjE1NlwiKTtcclxuICAgICAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9DT05USU5VRVwiKTsgXHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIjExMDAyNVwiOiBjYXNlIFwiMTEwMDE5XCI6IGNhc2UgXCIxMTAwMjFcIjpcclxuICAgICAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9DT05USU5VRVwiKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiMTEwMDM3XCI6XHJcbiAgICAgICAgICAgICAgICAvL+WkluWbveS6uuawuOS5heWxheeVmeivge+8jOm7mOiupOaUr+aMgemdnuiKr+eJh+exu+Wei1xyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQTAxX0lzU3VwcG9ydE5JQ1BSQ2FyZFwiLFwiMVwiKTtcclxuICAgICAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9DT05USU5VRVwiKTsgXHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9GQUlMXCIpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG59XHJcbn1cclxuPC9zY3JpcHQ+XHJcbiIsIjx0ZW1wbGF0ZT5cclxuICAgIDx4LWxheW91dC1tYWluPlxyXG4gICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJ0aXRsZVwiPuWNj+iurumYheivuzwvcD4gXHJcbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwid2lkdGg6MTAwJTsgaGVpZ2h0OiA2MHJlbVwiPjwvZGl2PiAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnRuYm94XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIGlkPVwiYnRuX2JhY2tcIj7kuI0mbmJzcDvlkIwmbmJzcDvmhI88L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuXCIgaWQ9XCJidG5fWm9vbU91dFwiPue8qeWwj++8iC3vvIk8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuXCIgaWQ9XCJidG5fWm9vbUluXCI+5pS+5aSn77yIK++8iTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG5cIiBpZD1cImJ0bl9zdXJlXCI+5ZCMJm5ic3A7Jm5ic3A7Jm5ic3A75oSPPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGNyZWF0ZWQgKCkge1xyXG5cdFxyXG5cdFx0dGhpcy4kcm9vdC4kb24oJ2JlZm9yZVF1aXQnLCBvbkJlZm9yZVF1aXQpO1xyXG4gICAgICAgIGZ1bmN0aW9uIG9uQmVmb3JlUXVpdCgpIHtcclxuICAgICAgICAgICAgJChcIiNQREZWaWV3ZXJcIikuYXR0cignaGVpZ2h0JywgXCIwXCIpLmF0dHIoJ3dpZHRoJywgXCIwXCIpO1xyXG4gICAgICAgIH07XHJcblx0XHRcclxuXHRcdHRoaXMuJHJvb3QuJG9uKCdjYW5jZWxRdWl0Jywgb25DYW5jZWxRdWl0KTtcclxuICAgICAgICBmdW5jdGlvbiBvbkNhbmNlbFF1aXQoKSB7XHJcbiAgICAgICAgICAgICQoXCIjUERGVmlld2VyXCIpLmF0dHIoJ2hlaWdodCcsIFwiNjAlXCIpLmF0dHIoJ3dpZHRoJywgXCI2MCVcIik7XHJcbiAgICAgICAgfTtcclxuXHRcdFxyXG4gICAgfSxcclxuICAgIGRlc3Ryb3llZCAoKSB7XHJcbiAgICAgICAgdGhpcy4kcm9vdC4kb2ZmKCdiZWZvcmVRdWl0Jyk7XHJcbiAgICAgICAgdGhpcy4kcm9vdC4kb2ZmKCdjYW5jZWxRdWl0Jyk7XHJcbiAgICB9LFxyXG4gICAgbW91bnRlZCAoKSB7XHJcbiAgICAgICAgc2V0VGltZW91dCggZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgJChcIiNQREZWaWV3ZXJcIikuYXR0cignaGVpZ2h0JywgXCI2MCVcIikuYXR0cignd2lkdGgnLCBcIjYwJVwiKTtcclxuICAgICAgICB9LCA1MDAgKTtcclxuICAgICAgICAvL+ehruiupOaMiemSruS6i+S7tuWkhOeQhlxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX3N1cmVcIikub25jbGljaz1vblN1cmU7XHJcbiAgICAgICAgZnVuY3Rpb24gb25TdXJlKGUpe1xyXG4gICAgICAgICAgICAkKFwiI1BERlZpZXdlclwiKS5hdHRyKCdoZWlnaHQnLCBcIjBcIikuYXR0cignd2lkdGgnLCBcIjBcIik7XHJcbiAgICAgICAgICAgIG9uQ29udGludWUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy/ov5Tlm57mjInpkq7kuovku7blpITnkIZcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bl9iYWNrXCIpLm9uY2xpY2s9b25CYWNrO1xyXG5cdFx0ZnVuY3Rpb24gb25CYWNrKGUpe1xyXG4gICAgICAgICAgICAkKFwiI1BERlZpZXdlclwiKS5hdHRyKCdoZWlnaHQnLCBcIjBcIikuYXR0cignd2lkdGgnLCBcIjBcIik7XHJcblx0XHRcdG9uQ2FuY2VsKCk7XHJcblx0XHR9XHJcbiAgICAgICAgLy/nvKnlsI9cclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bl9ab29tT3V0XCIpLm9uY2xpY2s9b25ab29tT3V0O1xyXG4gICAgICAgIGZ1bmN0aW9uIG9uWm9vbU91dCgpe1xyXG5cdFx0XHRQREZWaWV3ZXIuWm9vbU91dCgpOyAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICAvL+aUvuWkp1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX1pvb21JblwiKS5vbmNsaWNrPW9uWm9vbUluO1xyXG4gICAgICAgIGZ1bmN0aW9uIG9uWm9vbUluKCl7XHJcblx0XHRcdFBERlZpZXdlci5ab29tSW4oKTsgICAgICAgICAgICBcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG59XHRcdFxyXG48L3NjcmlwdD5cclxuIiwiPHRlbXBsYXRlPlxyXG48ZGl2PlxyXG4gICAgPGhlYWRlciBjbGFzcz1cImhlYWRlclwiPlxyXG5cdFx0PGRpdiBjbGFzcz1cImhlYWRlcl9yaWdodGFyZWFcIj5cclxuXHRcdFx0PCEtLeWAkuiuoeaXtiAtLT5cclxuXHRcdFx0PGRpdiBpZD1cIlZlcl9Db3VudERvd25cIiBjbGFzcz1cInRpbWVcIj48L2Rpdj5cclxuXHRcdDwvZGl2PlxyXG5cdDwvaGVhZGVyPlxyXG5cclxuICAgIDxtYWluIGNsYXNzPVwibWFpblwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJwdWJfY29udGVudFwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGFuZWxcIj5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj7mnKzmnLrmmoLlgZzmnI3liqE8L3A+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cImNlbnRlcl90aXRsZVwiIGlkPVwiU2hvd1JlYXNvblwiPjwvcD5cclxuXHRcdFx0XHQ8IS0tZGl2IGNsYXNzPVwiYnRuYm94XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIGlkPVwiYnRuX3N1cmVcIj7ph40mbmJzcDsmbmJzcDsmbmJzcDvor5U8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDwvZGl2LS0+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9tYWluPlxyXG48L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxubW91bnRlZCAoKSB7XHJcblx0XHQvL+aooeaAgeahhuWAkuiuoeaXtlxyXG5cdCAgICB2YXIgaW50VGltZSA9ICQoXCIjVmVyX0NvdW50RG93blwiKS5odG1sKCk7XHJcblx0ICAgIGlmKGludFRpbWUgPD0gMCl7XHJcblx0XHQgICAgaW50VGltZSA9IDMwMDtcclxuXHRcdH1cclxuXHRcdCQoXCIjVmVyX0NvdW50RG93blwiKS5odG1sKGludFRpbWUpOy8v5YWI5pi+56S65LiA5LiLXHJcblx0ICAgIGZ1bmN0aW9uIHNldFRpbWVIdG1sKCkge1xyXG5cdFx0ICAgIGludFRpbWUgLT0gMTtcclxuXHRcdCAgICBpZihpbnRUaW1lIDw9IDApXHJcblx0XHQgICAge1xyXG5cdFx0XHQgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XHJcblx0XHRcdCAgICBleGl0U2NlbmUoXCJTVEFfQ09OVElOVUVcIik7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgICQoXCIjVmVyX0NvdW50RG93blwiKS5odG1sKGludFRpbWUpO1xyXG5cdCAgICB9XHJcblx0XHR2YXIgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChzZXRUaW1lSHRtbCwxMDAwKTtcclxuXHRcdERhdGFUb29scy5nZXQoXCJSUF9USFJlc3BDb2RlfFJQX1RIUmVzcE1zZ1wiLGZ1bmN0aW9uKGRhdGEpe1xyXG5cdFx0XHR2YXIgc3RyUmVzcENvZGUgPSBkYXRhWzBdOy8v6ZSZ6K+v56CBXHJcblx0XHRcdHZhciBzdHJSZXNwTXNnID0gZGF0YVsxXTsvL+mUmeivr+eggeaPj+i/sFxyXG5cdFx0XHQkKFwiI1Nob3dSZWFzb25cIikuaHRtbChzdHJSZXNwTXNnICsgXCI8YnI+PGJyPlwiICsgc3RyUmVzcENvZGUpO1xyXG5cdFx0fSk7XHJcblx0XHQvL+eCueWHu+mHjeivlemUrlxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX3N1cmVcIikub25jbGljaz1vblN1cmU7XHJcblx0ICAgIGZ1bmN0aW9uIG9uU3VyZShlKXtcclxuXHRcdFx0Y2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XHJcblx0XHRcdGV4aXRTY2VuZShcIlNUQV9DT05USU5VRVwiKTtcclxuXHRcdH1cclxufVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8c3R5bGUgc2NvcGVkPlxyXG4udGFibGVfaW5mb3Jte1xyXG4gICAgd2lkdGg6ODAlO1xyXG4gICAgZm9udC1zaXplOiAzLjFyZW07XHJcbiAgICBtYXJnaW46IDEwcHggYXV0bzsgIFxyXG59XHJcbi50eHQtcntcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgcGFkZGluZy10b3A6IDQwcHg7XHJcbn1cclxuLnR4dC1se1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIGNvbG9yOiAjNjYwMGZmO1xyXG4gICAgcGFkZGluZy10b3A6IDQwcHg7XHJcbn1cclxuLmlucHV0X2luZm97XHJcbiAgICB3aWR0aDoxODBweDtcclxufVxyXG5cclxuPC9zdHlsZT5cclxuXHJcbjx0ZW1wbGF0ZT5cclxuICAgIDx4LWxheW91dC1tYWluPlxyXG5cdFx0PHAgY2xhc3M9XCJ0aXRsZVwiPui+k+WFpeivgeS7tuexu+WeizwvcD5cclxuXHRcdDx0YWJsZSBjbGFzcz1cInRhYmxlX2luZm9ybVwiPlxyXG4gICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0eHQtclwiPuivgeS7tuexu+Wei++8mjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0eHQtbFwiIGlkPVwiSURjYXJkVHlwZVwiPjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0eHQtclwiPjxzcGFuIGNsYXNzPVwic3RhcnRzXCI+PC9zcGFuPuaAp+WIq++8mjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0eHQtbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ncmFkaW9fYm94Jz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiIGlkPVwibWFuXCIgbmFtZT1cInNleFwiPjxpPjwvaT4mbmJzcDsmbmJzcDvnlLdcclxuICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ncmFkaW9fYm94Jz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiIGlkPVwid29tYW5cIiBuYW1lPVwic2V4XCI+PGk+PC9pPiZuYnNwOyZuYnNwO+Wls1xyXG4gICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0eHQtclwiPuivgeS7tuWPt+egge+8mjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0eHQtbFwiIGlkPVwiSURjYXJkTnVtXCI+PC90ZD5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInR4dC1yXCI+PHNwYW4gY2xhc3M9XCJzdGFydHNcIj4qPC9zcGFuPuWbveexje+8mjwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0eHQtbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiXCIgaWQ9XCJDb3VudHJ5SnNvblwiIGNsYXNzPVwiaW5wdXRfaW5mb1wiLz5cclxuICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInR4dC1yXCI+5a6i5oi35aeT5ZCN77yaPC90ZD5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInR4dC1sXCIgaWQ9XCJJRGNhcmROYW1cIj48L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidHh0LXJcIj48c3BhbiBjbGFzcz1cInN0YXJ0c1wiPio8L3NwYW4+5rCR5peP77yaPC90ZD5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInR4dC1sXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJcIiBpZD1cIk5hdGlvbkpzb25cIiBkaXNhYmxlZD1cInRydWVcIiBjbGFzcz1cImlucHV0X2luZm9cIi8+XHJcbiAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0eHQtclwiPjxzcGFuIGNsYXNzPVwic3RhcnRzXCI+Kjwvc3Bhbj7mnInmlYjml6XmnJ/vvJo8L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidHh0LWxcIiBjb2xzcGFuPVwiMlwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiaW5wdXRfaW5mb1wiIGlkPVwiVmFyRGF0YVN0YXJ0XCIvPi0gPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJpbnB1dF9pbmZvXCIgaWQ9XCJWYXJEYXRhRW5kXCIvPlxyXG4gICAgICAgICAgICAgICAgPC90ZD5cclxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInR4dC1sXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSdjaGVja19ib3gnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgaWQ9XCJBbGx0aW1lXCI+PGk+PC9pPuawuOS5heacieaViFxyXG4gICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICA8L3RyPiAgICAgXHJcbiAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0eHQtclwiPjxzcGFuIGNsYXNzPVwic3RhcnRzXCI+Kjwvc3Bhbj7lh7rnlJ/ml6XmnJ/vvJo8L3RkPlxyXG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidHh0LWxcIj4gXHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJpbnB1dF9pbmZvXCIgaWQ9XCJCaXJ0aGRheVwiLz5cclxuICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8dGQ+PC90ZD5cclxuICAgICAgICAgICAgICAgIDx0ZD48L3RkPlxyXG4gICAgICAgICAgICA8L3RyPiAgICAgIFxyXG4gICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgPHgtbXVsdGktbGV2ZWwgOnNob3c9XCJzaG93QmFua1wiIHRpdGxlPVwi5Zu957GNXCIgOmRhdGE9XCJiYW5rRGF0YVwiIHBjb2RlPVwiTlVNX0lURU1fRElDXCIgcG5hbWU9XCJWTFVfSVRFTV9ESUNcIiBAY2FuY2VsPVwib25DYW5jZWxCYW5rXCIgQGNvbmZpcm09XCJvbkNob29zZUJhbmtcIj5cclxuICAgICAgICAgICAgPC94LW11bHRpLWxldmVsPiAgICAgICAgICAgXHJcbiAgICAgICAgICAgIDx4LW11bHRpLWxldmVsIDpzaG93PVwic2hvd0JyYW5jaFwiIHRpdGxlPVwi5rCR5pePXCIgOmRhdGE9XCJicmFuY2hEYXRhXCIgcGNvZGU9XCJOVU1fSVRFTV9ESUNcIiBwbmFtZT1cIlZMVV9JVEVNX0RJQ1wiIEBjYW5jZWw9XCJvbkNhbmNlbEJyYW5jaFwiIEBjb25maXJtPVwib25DaG9vc2VCcmFuY2hcIj5cclxuICAgICAgICAgICAgPC94LW11bHRpLWxldmVsPlxyXG4gICAgICAgICAgICA8cCBjbGFzcz1cInRpcHNcIiBpZD1cIm5vdGljZVwiPjwvcD5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiYnRuYm94XCI+XHJcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG5cIiBpZD1cImJ0bl9iYWNrXCIgPuS4iiZuYnNwO+S4gCZuYnNwO+atpTwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuXCIgaWQ9XCJidG5fc3VyZVwiID7kuIsmbmJzcDvkuIAmbmJzcDvmraU8L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGRhdGEgKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGJhbmtEYXRhOiBbXSxcclxuICAgICAgICAgICAgYnJhbmNoRGF0YTogW10sXHJcbiAgICAgICAgICAgIHNob3dCYW5rOiBmYWxzZSxcclxuICAgICAgICAgICAgc2hvd0JyYW5jaDogZmFsc2UsXHJcbiAgICAgICAgICAgIHZtQ291bnRyeUNvZGU6XCJcIixcclxuICAgICAgICAgICAgdm1Db3VudHJ5TmFtOlwiXCIsXHJcbiAgICAgICAgICAgIHZtTmF0aW9uQ29kZTpcIlwiLFxyXG4gICAgICAgICAgICB2bU5hdGlvbk5hbTpcIlwiXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGNvbXB1dGVkOiB7XHJcblxyXG4gICAgfSxcclxuICAgIG1ldGhvZHM6IHtcclxuICAgICAgICBvbkNhbmNlbEJhbmsgKCkge1xyXG4gICAgICAgICAgICB0aGlzLnNob3dCYW5rID0gZmFsc2U7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkNhbmNlbEJyYW5jaCAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2hvd0JyYW5jaCA9IGZhbHNlO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25DaG9vc2VCYW5rIChpbmRleCwgaXRlbSkge1xyXG4gICAgICAgICAgICB0aGlzLnNob3dCYW5rID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuc2hvd0JyYW5jaCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAkKFwiI0NvdW50cnlKc29uXCIpLnZhbChpdGVtLlZMVV9JVEVNX0RJQyk7XHJcbiAgICAgICAgICAgIHRoaXMudm1Db3VudHJ5Q29kZT1pdGVtLk5VTV9JVEVNX0RJQztcclxuICAgICAgICAgICAgdGhpcy52bUNvdW50cnlOYW09aXRlbS5WTFVfSVRFTV9ESUM7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkNob29zZUJyYW5jaCAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgdGhpcy5zaG93QmFuayA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLnNob3dCcmFuY2ggPSBmYWxzZTtcclxuICAgICAgICAgICAgJChcIiNOYXRpb25Kc29uXCIpLnZhbChpdGVtLlZMVV9JVEVNX0RJQyk7XHJcbiAgICAgICAgICAgIHRoaXMudm1OYXRpb25Db2RlPWl0ZW0uTlVNX0lURU1fRElDO1xyXG4gICAgICAgICAgICB0aGlzLnZtTmF0aW9uTmFtPWl0ZW0uVkxVX0lURU1fRElDO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9LFxyXG5tb3VudGVkICgpIHsgXHJcbiAgICBwYWdlTG9nKCdtb3VudGVkLS0+JyArIG5ldyBEYXRlKCkpO1xyXG4gICAgdmFyIHZtID0gdGhpcztcclxuICAgIHZhciBDX0EwMV9EaWN0XzAwMDAwMDA5ID0gXCJcIjtcclxuICAgIHZhciBzZXggPSBcIlwiO1xyXG4gICAgdmFyIENfQTAxX0JJWlBSTV8wMDEwNCA9IFwiMFwiO1xyXG4gICAgdmFyIEdEX0NvZFBpZDtcclxuICAgIHZhciBHRF9Db2RQaWQsbWVudU1pbkFnZSxtZW51TWF4QWdlLEdEX0EwMV9NZW51QnVzT2xkO1xyXG5cdERhdGFUb29scy5nZXQoXCJHRF9Db2RQaWR8R0RfTnVtUGlkfEdEX05hbUN1c3R8Q19BMDFfRGljdF8wMDAwMDAxMHxDX0EwMV9EaWN0XzAwMDAwMDA3fENfQTAxX0RpY3RfMDAwMDAwMDl8Q19BMDFfRGljdF8wMDAwMDAwNXxSUF9HZW5kZXJ8UlBfQ29kQ291bnRyeXxSUF9Db2ROYXRpb258UlBfQ29kQ2VydE9yZ3xSUF9EYXRlQ2VydEJnbnxSUF9EYXRlQ2VydEVuZHxSUF9CaXJ0aGRheXxDX0EwMV9CSVpQUk1fMDAxMDR8R0RfQTAxX0J1c01pbkFnZXxDX0EwMV9CSVpQUk1fMDAyMDh8R0RfQTAxX01lbnVCdXNPbGRcIixmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICB2YXIgc3RySUR0eXBlID0gXCJcIjsgICAgICAgIFxyXG4gICAgICAgIHZhciBiU3BsaWNlQ2hpbmEgPSBmYWxzZTsgICBcclxuICAgICAgICBHRF9Db2RQaWQgPSBkYXRhWzBdO1xyXG4gICAgICAgIHZhciBSUF9HZW5kZXIgPSBkYXRhWzddO1xyXG4gICAgICAgIHZhciBSUF9Db2RDb3VudHJ5ID0gZGF0YVs4XTtcclxuICAgICAgICB2YXIgUlBfQ29kTmF0aW9uID0gZGF0YVs5XTtcclxuICAgICAgICB2YXIgUlBfQ29kQ2VydE9yZyA9IGRhdGFbMTBdO1xyXG4gICAgICAgIHZhciBSUF9EYXRlQ2VydEJnbiA9IGRhdGFbMTFdO1xyXG4gICAgICAgIHZhciBSUF9EYXRlQ2VydEVuZCA9IGRhdGFbMTJdO1xyXG4gICAgICAgIHZhciBSUF9CaXJ0aGRheSA9IGRhdGFbMTNdO1xyXG4gICAgICAgIENfQTAxX0JJWlBSTV8wMDEwNCA9IGRhdGFbMTRdO1xyXG4gICAgICAgIG1lbnVNaW5BZ2UgPSBkYXRhWzE1XStcIjAwMDBcIjtcclxuICAgICAgICBtZW51TWF4QWdlID0gZGF0YVsxNl0rXCIwMDAwXCI7XHJcbiAgICAgICAgR0RfQTAxX01lbnVCdXNPbGQgPSBkYXRhWzE3XTtcclxuICAgICAgICBzd2l0Y2goZGF0YVswXSl7XHJcbiAgICAgICAgICAgIGNhc2UgXCIxMTAwMTlcIjogIFxyXG4gICAgICAgICAgICAgICAgc3RySUR0eXBlPVwi5riv5r6z5bGF5rCR5p2l5b6A5YaF5Zyw6YCa6KGM6K+BXCI7XHJcbiAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9Db2RDZXJ0T3JnXCIsXCLlhazlronpg6hcIik7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIjExMDAyMVwiOiAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgc3RySUR0eXBlPVwi5Y+w5rm+5bGF5rCR5p2l5b6A5aSn6ZmG6YCa6KGM6K+BXCI7XHJcbiAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9Db2RDZXJ0T3JnXCIsXCLlhazlronpg6hcIik7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIjExMDAzN1wiOlxyXG4gICAgICAgICAgICAgICAgc3RySUR0eXBlPVwi5aSW5Zu95Lq65rC45LmF5bGF55WZ6K+BXCI7XHJcbiAgICAgICAgICAgICAgICBzZXRWYXIoXCJHRF9Db2RDZXJ0T3JnXCIsXCLlhazlronpg6hcIik7XHJcbiAgICAgICAgICAgICAgICBiU3BsaWNlQ2hpbmEgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCIxMTAwMjVcIjogXHJcbiAgICAgICAgICAgICAgICBzdHJJRHR5cGU9XCLlpJblm73miqTnhadcIjtcclxuICAgICAgICAgICAgICAgIGJTcGxpY2VDaGluYSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAkKFwiI05hdGlvbkpzb25cIikudmFsKFwi5LiN6IO96YCC55SoXCIpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9ICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICAkKFwiI0lEY2FyZFR5cGVcIikuaHRtbChzdHJJRHR5cGUpO1xyXG4gICAgICAgICQoXCIjSURjYXJkTnVtXCIpLmh0bWwoZGF0YVsxXSk7XHJcbiAgICAgICAgJChcIiNJRGNhcmROYW1cIikuaHRtbChkYXRhWzJdKTtcclxuICAgICAgICBpZih0eXBlb2YgZGF0YVszXSA9PSBcInN0cmluZ1wiICYmIGRhdGFbM10gIT0gXCJcIil7XHJcbiAgICAgICAgICAgIC8vcGFnZUxvZyhkYXRhWzNdKTtcclxuICAgICAgICAgICAgcGFnZUxvZygnbW91bnRlZCx0c3gsUlBfQ29kQ291bnRyeS0tPicgKyBSUF9Db2RDb3VudHJ5ICsgXCI8LS0tXCIpO1xyXG4gICAgICAgICAgICB2YXIgQ19BMDFfRGljdF8wMDAwMDAxMCA9IEpTT04ucGFyc2UoZGF0YVszXSk7Ly/lm73nsY1cclxuICAgICAgICAgICAgaWYoUlBfQ29kQ291bnRyeSAhPSBcIlwiKXtcclxuICAgICAgICAgICAgICAgIC8vJCgnI0NvdW50cnlKc29uJykucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSk7ICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIHZtLnZtQ291bnRyeUNvZGU9UlBfQ29kQ291bnRyeTsvLzQ0NlxyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBDX0EwMV9EaWN0XzAwMDAwMDEwLmxlbmd0aDsgaSsrKSB7ICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChDX0EwMV9EaWN0XzAwMDAwMDEwW2ldLk5VTV9JVEVNX0RJQyA9PSBSUF9Db2RDb3VudHJ5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZtLnZtQ291bnRyeU5hbSA9IENfQTAxX0RpY3RfMDAwMDAwMTBbaV0uVkxVX0lURU1fRElDO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAkKFwiI0NvdW50cnlKc29uXCIpLnZhbCh2bS52bUNvdW50cnlOYW0pOyAgICBcclxuICAgICAgICAgICAgfSAgICBcclxuICAgICAgICAgICAgdmFyIGluZGV4ID0gLTE7XHJcbiAgICAgICAgICAgIGlmKGJTcGxpY2VDaGluYSA9PSB0cnVlKXtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgQ19BMDFfRGljdF8wMDAwMDAxMC5sZW5ndGg7IGkrKykgeyAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKENfQTAxX0RpY3RfMDAwMDAwMTBbaV0uVkxVX0lURU1fRElDID09IFwi5Lit5Zu9XCIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPSBpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKGluZGV4ID4gLTEpe1xyXG4gICAgICAgICAgICAgICAgICAgIENfQTAxX0RpY3RfMDAwMDAwMTAuc3BsaWNlKENfQTAxX0RpY3RfMDAwMDAwMTAuaW5kZXhPZihDX0EwMV9EaWN0XzAwMDAwMDEwW2luZGV4XSksMSk7XHJcbiAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZtLmJhbmtEYXRhID0gQ19BMDFfRGljdF8wMDAwMDAxMDsgIFxyXG4gICAgICAgICAgICAvL3BhZ2VMb2coJ21vdW50ZWQsdHN4LHZtLmJhbmtEYXRhLS0+JyArIHZtLmJhbmtEYXRhICsgXCI8LS0tXCIpOyAgICAgICBcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHR5cGVvZiBkYXRhWzRdID09IFwic3RyaW5nXCIgJiYgZGF0YVs0XSAhPSBcIlwiKXtcclxuICAgICAgICAgICAgLy9wYWdlTG9nKGRhdGFbNF0pO1xyXG4gICAgICAgICAgICB2YXIgQ19BMDFfRGljdF8wMDAwMDAwNyA9IEpTT04ucGFyc2UoZGF0YVs0XSk7Ly/msJHml49cclxuICAgICAgICAgICAgaWYoUlBfQ29kTmF0aW9uID09IFwiXCIpe1xyXG4gICAgICAgICAgICAgICAgLy8kKCcjTmF0aW9uSnNvbicpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgLy92bS5icmFuY2hEYXRhID0gSlNPTi5wYXJzZShkYXRhWzRdKTtcclxuICAgICAgICAgICAgICAgIHZtLnZtTmF0aW9uQ29kZT1cIjk5XCI7XHJcbiAgICAgICAgICAgICAgICB2bS52bU5hdGlvbk5hbT1cIuS4jemAgueUqFwiO1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIHZtLnZtTmF0aW9uQ29kZT1SUF9Db2ROYXRpb247ICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgQ19BMDFfRGljdF8wMDAwMDAwNy5sZW5ndGg7IGkrKykgeyAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBpZiAoQ19BMDFfRGljdF8wMDAwMDAwN1tpXS5OVU1fSVRFTV9ESUMgPT0gUlBfQ29kTmF0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZtLnZtTmF0aW9uTmFtID0gQ19BMDFfRGljdF8wMDAwMDAwN1tpXS5WTFVfSVRFTV9ESUM7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSAgICAgXHJcbiAgICAgICAgICAgICAgICAkKFwiI05hdGlvbkpzb25cIikudmFsKHZtLnZtTmF0aW9uTmFtKTtcclxuICAgICAgICAgICAgfSAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBpZih0eXBlb2YgZGF0YVs2XSA9PSBcInN0cmluZ1wiICYmIGRhdGFbNl0gIT0gXCJcIil7XHJcbiAgICAgICAgICAgIHZhciBDX0EwMV9EaWN0XzAwMDAwMDA1ID0gSlNPTi5wYXJzZShkYXRhWzZdKTsvL+aAp+WIq1xyXG4gICAgICAgICAgICBpZihSUF9HZW5kZXIgIT0gXCJcIil7ICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBDX0EwMV9EaWN0XzAwMDAwMDA1Lmxlbmd0aDsgaSsrKSB7ICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChDX0EwMV9EaWN0XzAwMDAwMDA1W2ldLk5VTV9JVEVNX0RJQyA9PSBSUF9HZW5kZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICBpZihDX0EwMV9EaWN0XzAwMDAwMDA1W2ldLlZMVV9JVEVNX0RJQyA9PSBcIueUt1wiKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNleCA9IFwi55S3XCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyQoJyN3b21hbicpLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjbWFuJykucHJvcCgnY2hlY2tlZCcsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V4ID0gXCLlpbNcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vJCgnI21hbicpLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjd29tYW4nKS5wcm9wKCdjaGVja2VkJywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgfVx0XHRcdFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgUlBfRGF0ZUNlcnRCZ24gPSBkYXRhWzExXTtcclxuICAgICAgICBSUF9EYXRlQ2VydEVuZCA9IGRhdGFbMTJdO1xyXG4gICAgICAgIFJQX0JpcnRoZGF5ID0gZGF0YVsxM107XHJcbiAgICAgICAgaWYoUlBfRGF0ZUNlcnRCZ24gPT0gXCJcIil7XHJcbiAgICAgICAgICAgIC8vJCgnI1ZhckRhdGFTdGFydCcpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAkKFwiI1ZhckRhdGFTdGFydFwiKS52YWwoUlBfRGF0ZUNlcnRCZ24uc3Vic3RyKDAsNCkrXCItXCIrUlBfRGF0ZUNlcnRCZ24uc3Vic3RyKDQsMikrXCItXCIrUlBfRGF0ZUNlcnRCZ24uc3Vic3RyKDYsMikpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBpZihSUF9EYXRlQ2VydEVuZCA9PSBcIlwiKXtcclxuICAgICAgICAgICAgLy8kKCcjVmFyRGF0YUVuZCcpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpO1xyXG4gICAgICAgICAgICAvLyQoJyNBbGx0aW1lJykucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSk7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIGlmKFJQX0RhdGVDZXJ0RW5kID09IFwiOTk5OTk5OTlcIil7XHJcbiAgICAgICAgICAgICAgICAkKCcjVmFyRGF0YUVuZCcpLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7ICAgICAgXHJcbiAgICAgICAgICAgICAgICAkKCcjQWxsdGltZScpLnByb3AoJ2NoZWNrZWQnLCB0cnVlKTsgXHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgJChcIiNWYXJEYXRhRW5kXCIpLnZhbChSUF9EYXRlQ2VydEVuZC5zdWJzdHIoMCw0KStcIi1cIitSUF9EYXRlQ2VydEVuZC5zdWJzdHIoNCwyKStcIi1cIitSUF9EYXRlQ2VydEVuZC5zdWJzdHIoNiwyKSk7XHJcbiAgICAgICAgICAgIH0gICAgICAgICAgICBcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmKFJQX0JpcnRoZGF5ID09IFwiXCIpe1xyXG4gICAgICAgICAgICAvLyQoJyNCaXJ0aGRheScpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAkKFwiI0JpcnRoZGF5XCIpLnZhbChSUF9CaXJ0aGRheS5zdWJzdHIoMCw0KStcIi1cIitSUF9CaXJ0aGRheS5zdWJzdHIoNCwyKStcIi1cIitSUF9CaXJ0aGRheS5zdWJzdHIoNiwyKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG5cdH0pO1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJDb3VudHJ5SnNvblwiKS5vbmNsaWNrPW9uQ291bnRyeUpzb247XHJcbiAgICBmdW5jdGlvbiBvbkNvdW50cnlKc29uKCl7XHJcbiAgICAgICAgdm0uc2hvd0JhbmsgPSB0cnVlO1xyXG4gICAgICAgIHZtLnNob3dCcmFuY2ggPSBmYWxzZTtcclxuICAgIH1cclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiTmF0aW9uSnNvblwiKS5vbmNsaWNrPW9uTmF0aW9uSnNvbjtcclxuICAgIGZ1bmN0aW9uIG9uTmF0aW9uSnNvbigpe1xyXG4gICAgICAgIHZtLnNob3dCYW5rID0gZmFsc2U7XHJcbiAgICAgICAgdm0uc2hvd0JyYW5jaCA9IHRydWU7XHJcbiAgICB9O1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYW5cIikub25jbGljaz1vbk1hbjtcclxuICAgIGZ1bmN0aW9uIG9uTWFuKCkge1xyXG4gICAgICAgIGlmKCQodGhpcykuaXMoJzpjaGVja2VkJykpe1xyXG4gICAgICAgICAgICBzZXggPSBcIueUt1wiO1xyXG4gICAgICAgIH1cclxuICAgICB9XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndvbWFuXCIpLm9uY2xpY2s9b25Xb21hbjtcclxuICAgIGZ1bmN0aW9uIG9uV29tYW4oKSB7XHJcbiAgICAgICAgaWYoJCh0aGlzKS5pcygnOmNoZWNrZWQnKSl7XHJcbiAgICAgICAgICAgIHNleCA9IFwi5aWzXCI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJBbGx0aW1lXCIpLm9uY2xpY2s9b25BbGx0aW1lO1xyXG4gICAgZnVuY3Rpb24gb25BbGx0aW1lKCkge1xyXG4gICAgICAgIGlmKCQodGhpcykuaXMoJzpjaGVja2VkJykpe1xyXG4gICAgICAgICAgICAkKFwiI1ZhckRhdGFFbmRcIikudmFsKFwiOTk5OS05OS05OVwiKVxyXG4gICAgICAgICAgICAkKCcjVmFyRGF0YUVuZCcpLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7ICAgICAgICAgICAgXHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICQoXCIjVmFyRGF0YUVuZFwiKS52YWwoXCJcIilcclxuICAgICAgICAgICAgJCgnI1ZhckRhdGFFbmQnKS5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKTsgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvL+WIneWni+WMluaXpeacn+mAieaLqeWZqFxyXG4gICAgJChmdW5jdGlvbigpe1xyXG4gICAgICAgIG5ldyBEYXRlUGlja2VyKCkuaW5pdCh7aWQgOiAnVmFyRGF0YVN0YXJ0J30pO1xyXG4gICAgICAgIG5ldyBEYXRlUGlja2VyKCkuaW5pdCh7aWQgOiAnVmFyRGF0YUVuZCd9KTtcclxuICAgICAgICBuZXcgRGF0ZVBpY2tlcigpLmluaXQoe2lkIDogJ0JpcnRoZGF5J30pO1xyXG4gICAgIH0pOyBcclxuICAgIC8v54K55Ye76L+U5ZueXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bl9iYWNrXCIpLm9uY2xpY2s9b25CYWNrO1xyXG4gICAgZnVuY3Rpb24gb25CYWNrKCl7XHJcbiAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0JBQ0tcIik7XHJcbiAgICB9XHJcbiAgICAvL+ehruWumuaMiemSriBcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX3N1cmVcIikub25jbGljaz1vblN1cmU7ICBcclxuICAgIGZ1bmN0aW9uIG9uU3VyZSgpe1xyXG4gICAgICAgIHZhciBzdHJEYXRhU3RhcnQgPSAkKFwiI1ZhckRhdGFTdGFydFwiKS52YWwoKTtcclxuICAgICAgICB2YXIgc3RyVmFyRGF0YUVuZCA9ICQoXCIjVmFyRGF0YUVuZFwiKS52YWwoKTtcclxuICAgICAgICB2YXIgc3RyQmlydGhkYXkgPSAkKFwiI0JpcnRoZGF5XCIpLnZhbCgpO1xyXG4gICAgICAgIHZhciBiQWxsVGltZSA9ICQoXCIjQWxsdGltZVwiKS5pcygnOmNoZWNrZWQnKTtcclxuXHRcdGlmKHNleCA9PSBcIlwiKXtcclxuICAgICAgICAgICAkKFwiI25vdGljZVwiKS5odG1sKFwi5oKo5aW977yM5oCn5Yir5Li65b+F5aGr6aG577yM6K+35aGr5YaZ5a6M5pW0XCIpO1xyXG4gICAgICAgIH1lbHNlIGlmKHZtLnZtQ291bnRyeUNvZGUgPT0gXCJcIiApe1xyXG4gICAgICAgICAgICQoXCIjbm90aWNlXCIpLmh0bWwoXCLmgqjlpb3vvIzlm73nsY3kuLrlv4XloavpobnvvIzor7floavlhpnlrozmlbRcIik7XHJcbiAgICAgICAgfWVsc2UgaWYodm0udm1OYXRpb25Db2RlID09IFwiXCIgKXtcclxuICAgICAgICAgICAkKFwiI25vdGljZVwiKS5odG1sKFwi5oKo5aW977yM5rCR5peP5Li65b+F5aGr6aG577yM6K+35aGr5YaZ5a6M5pW0XCIpO1xyXG4gICAgICAgIH1lbHNlIGlmKCAhYkFsbFRpbWUgJiYgc3RyVmFyRGF0YUVuZD09XCJcIil7XHJcbiAgICAgICAgICAgJChcIiNub3RpY2VcIikuaHRtbChcIuaCqOWlve+8jOivgeS7tuacieaViOaXpeacn+S4uuW/heWhq+mhue+8jOivt+Whq+WGmeWujOaVtFwiKTtcclxuICAgICAgICB9ZWxzZSBpZihzdHJEYXRhU3RhcnQ9PVwiXCIpe1xyXG4gICAgICAgICAgICQoXCIjbm90aWNlXCIpLmh0bWwoXCLmgqjlpb3vvIzor4Hku7bmnInmlYjml6XmnJ/kuLrlv4XloavpobnvvIzor7floavlhpnlrozmlbRcIik7XHJcbiAgICAgICAgfWVsc2UgaWYoc3RyQmlydGhkYXkgPT0gXCJcIil7XHJcbiAgICAgICAgICAgJChcIiNub3RpY2VcIikuaHRtbChcIuaCqOWlve+8jOWHuueUn+aXpeacn+S4uuW/heWhq+mhue+8jOivt+Whq+WGmeWujOaVtFwiKTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgaWYoYkFsbFRpbWUpe1xyXG4gICAgICAgICAgICAgICAgc3RyVmFyRGF0YUVuZCA9IFwiOTk5OTk5OTlcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBzdHJCaXJ0aGRheSA9IHN0ckJpcnRoZGF5LnJlcGxhY2UoLy0vZyxcIlwiKTtcclxuICAgICAgICAgICAgc3RyRGF0YVN0YXJ0ID0gc3RyRGF0YVN0YXJ0LnJlcGxhY2UoLy0vZyxcIlwiKTtcclxuICAgICAgICAgICAgc3RyVmFyRGF0YUVuZCA9IHN0clZhckRhdGFFbmQucmVwbGFjZSgvLS9nLFwiXCIpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICAgICAgICB2YXIgc3RyWWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTtcclxuICAgICAgICAgICAgdmFyIHN0ck1vbnRoID0gZGF0ZS5nZXRNb250aCgpKzE7XHJcbiAgICAgICAgICAgIHZhciBzdHJEYXRlID0gZGF0ZS5nZXREYXRlKCk7XHJcblxyXG4gICAgICAgICAgICBpZihzdHJNb250aCA+PSAxICYmIHN0ck1vbnRoIDw9IDkpe1xyXG4gICAgICAgICAgICAgICAgc3RyTW9udGggPSAnMCcrc3RyTW9udGg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoc3RyRGF0ZSA+PSAxICYmIHN0ckRhdGUgPD0gOSl7XHJcbiAgICAgICAgICAgICAgICBzdHJEYXRlID0gJzAnK3N0ckRhdGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIGN1cnJEYXRhID0gc3RyWWVhci50b1N0cmluZygpK3N0ck1vbnRoK3N0ckRhdGU7ICAgICBcclxuICAgICAgICAgICAgcGFnZUxvZygnY3VyckRhdGEtLT4nICsgY3VyckRhdGErJyxzdHJEYXRhU3RhcnQtLT4nK3N0ckRhdGFTdGFydCsnLHN0ckJpcnRoZGF5LS0+JytzdHJCaXJ0aGRheSsnLHN0clZhckRhdGFFbmQtLT4nK3N0clZhckRhdGFFbmQrJyxtZW51TWluQWdlLS0+JyttZW51TWluQWdlKycsbWVudU1heEFnZS0tPicrbWVudU1heEFnZSsnLEdEX0EwMV9NZW51QnVzT2xkLS0+JytHRF9BMDFfTWVudUJ1c09sZCk7ICAgICAgIFxyXG4gICAgICAgICAgICBpZihwYXJzZUludChzdHJEYXRhU3RhcnQpID4gcGFyc2VJbnQoY3VyckRhdGEpKXtcclxuICAgICAgICAgICAgICAgICQoXCIjbm90aWNlXCIpLmh0bWwoXCLmgqjlpb3vvIzor4Hku7botbflp4vml6XmnJ/kuI3lj6/lpKfkuo7lvZPlpKnvvIzor7fph43mlrDpgInmi6lcIik7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKCEoYkFsbFRpbWUgfHwgcGFyc2VJbnQoc3RyVmFyRGF0YUVuZCkgPj0gcGFyc2VJbnQoY3VyckRhdGEpKSl7XHJcbiAgICAgICAgICAgICAgICAkKFwiI25vdGljZVwiKS5odG1sKFwi5oKo5aW977yM6K+B5Lu257uI5q2i5pel5pyf5bey6L+H5pyf77yM6K+36YeN5paw6YCJ5oupXCIpO1xyXG4gICAgICAgICAgICB9ZWxzZSBpZihwYXJzZUludChzdHJCaXJ0aGRheSkgPiBwYXJzZUludChjdXJyRGF0YSkpe1xyXG4gICAgICAgICAgICAgICAgJChcIiNub3RpY2VcIikuaHRtbChcIuaCqOWlve+8jOWHuueUn+aXpeacn+S4jeWPr+Wkp+S6juW9k+Wkqe+8jOivt+mHjeaWsOmAieaLqVwiKTtcclxuICAgICAgICAgICAgfWVsc2UgaWYocGFyc2VJbnQoY3VyckRhdGEpIC0gcGFyc2VJbnQoc3RyQmlydGhkYXkpIDw9IHBhcnNlSW50KG1lbnVNaW5BZ2UpKXtcclxuICAgICAgICAgICAgICAgICQoXCIjbm90aWNlXCIpLmh0bWwoXCLmnKzmnLrmmoLml6Dms5Xlj5fnkIbmgqjnmoTkuJrliqHvvIzor7fogZTns7vpk7booYzlt6XkvZzkurrlkZjliLDmn5zpnaLlip7nkIbjgIJcIik7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKHBhcnNlSW50KGN1cnJEYXRhKSAtIHBhcnNlSW50KHN0ckJpcnRoZGF5KSA+IHBhcnNlSW50KG1lbnVNYXhBZ2UpICYmIEdEX0EwMV9NZW51QnVzT2xkICE9IFwiMVwiKXtcclxuICAgICAgICAgICAgICAgICQoXCIjbm90aWNlXCIpLmh0bWwoXCLmnKzmnLrmmoLml6Dms5Xlj5fnkIbmgqjnmoTkuJrliqHvvIzor7fogZTns7vpk7booYzlt6XkvZzkurrlkZjliLDmn5zpnaLlip7nkIbjgIJcIik7XHJcbiAgICAgICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0dlbmRlclwiLHNleCk7XHRcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0FkZHJlc3NcIixcIlwiKTtcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0NvZE5hdGlvblwiLHZtLnZtTmF0aW9uTmFtKTtcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIlBfQ29kQ291bnRyeVwiLHZtLnZtQ291bnRyeUNvZGUpO1xyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQ29kQ2VydE9yZ1wiLFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfRGF0ZUNlcnRCZ25cIixzdHJEYXRhU3RhcnQucmVwbGFjZSgvLS9nLFwiXCIpKTtcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0RhdGVDZXJ0RW5kXCIsc3RyVmFyRGF0YUVuZC5yZXBsYWNlKC8tL2csXCJcIikpO1xyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQmlydGhkYXlcIixzdHJCaXJ0aGRheS5yZXBsYWNlKC8tL2csXCJcIikpOyAgXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGlmKHBhcnNlSW50KHN0ckRhdGFTdGFydC5yZXBsYWNlKC8tL2csXCJcIikpID49IHBhcnNlSW50KENfQTAxX0JJWlBSTV8wMDEwNCkgJiYgR0RfQ29kUGlkID09IFwiMTEwMDM3XCIpeyBcclxuICAgICAgICAgICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfUkVBRENBUkRcIik7XHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfQ09OVElOVUVcIik7XHJcbiAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfSAgICAgICAgICAgIFxyXG5cdFx0fVx0XHRcclxuXHR9XHJcbiAgICBcclxufVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuXHRcdDxwIGNsYXNzPVwidGl0bGVcIj7kv6Hmga/mj5DnpLo8L3A+XHJcblx0XHQ8cCBjbGFzcz1cImNlbnRlcl90aXRsZVwiIGlkPVwiU2hvd1JlYXNvblwiPjwvcD5cclxuXHRcdDxkaXYgY2xhc3M9XCJtb2RhbF9idG5ib3hcIj5cclxuXHRcdFx0PGJ1dHRvbiBjbGFzcz1cImJ0blwiIGlkPVwiYnRuX3N1cmUxXCI+56GuJm5ic3A7Jm5ic3A7Jm5ic3A75a6aPC9idXR0b24+XHJcblx0XHQ8L2Rpdj5cclxuICAgICAgICA8RU1CRUQgbmFtZT1cIlZpZXdTb3VuZFwiIFNSQz1cIndhdi/kuqTmmJPlt7Looqvlj5bmtojor7fnnIvlsY/luZXmj5DnpLoud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPlxyXG5cdDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHsgXHJcbm1vdW50ZWQgKCkge1xyXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bl9zdXJlMVwiKS5vbmNsaWNrPW9uU3VyZTtcclxuXHQgICAgZnVuY3Rpb24gb25TdXJlKGUpe1xyXG5cdFx0XHRvbkNvbnRpbnVlKCk7XHJcblx0XHR9XHJcbn1cclxufVxyXG48L3NjcmlwdD5cclxuIiwiPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRpdGxlXCI+5L+h5oGv5o+Q56S6PC9wPlxyXG4gICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJjZW50ZXJfdGl0bGVcIiBpZD1cIlNob3dSZWFzb25cIj48L3A+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnRuYm94XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBiYWNrYnRuIGRpc3Bfbm9uZVwiIGlkPVwiYnRuX2JhY2tcIj7nu5PmnZ88L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG4gZGlzcF9ub25lXCIgaWQ9XCJidG5fc3VyZVwiPui/lOWbnjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICA8L3gtbGF5b3V0LW1haW4+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbm1vdW50ZWQgKCkge1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX2JhY2tcIikub25jbGljaz1vbkJhY2s7XHJcbiAgICAgICAgZnVuY3Rpb24gb25CYWNrKGUpe1xyXG5cdFx0XHRvbkNhbmNlbCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bl9zdXJlXCIpLm9uY2xpY2s9b25TdXJlO1xyXG5cdCAgICBmdW5jdGlvbiBvblN1cmUoZSl7XHJcblx0XHRcdG9uQ29udGludWUoKTtcclxuXHRcdH1cclxufVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj7kv6Hmga/mj5DnpLo8L3A+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cImNlbnRlcl90aXRsZVwiIGlkPVwiU2hvd1JlYXNvblwiPjwvcD5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidG5ib3hcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJhY2tidG4gZGlzcF9ub25lXCIgaWQ9XCJidG5fYmFja1wiPuehriZuYnNwOyZuYnNwOyZuYnNwO+WumjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gc3VyZWJ0biBkaXNwX25vbmVcIiBpZD1cImJ0bl9zdXJlXCI+6LWE5paZ5L+u5pS5PC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxFTUJFRCBuYW1lPVwiVmlld1NvdW5kXCIgU1JDPVwid2F2L+S/oeaBr+WujOWWhC53YXZcIiBMb29wPWZhbHNlIEFVVE9TVEFSVD10cnVlIEhpZGRlbj10cnVlIE1BU1RFUlNPVU5EPjwvRU1CRUQ+XHJcbiAgICA8L3gtbGF5b3V0LW1haW4+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbm1vdW50ZWQgKCkge1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX2JhY2tcIikub25jbGljaz1vbkJhY2s7XHJcbiAgICAgICAgZnVuY3Rpb24gb25CYWNrKGUpe1xyXG5cdFx0XHRvbkNhbmNlbCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bl9zdXJlXCIpLm9uY2xpY2s9b25TdXJlO1xyXG5cdCAgICBmdW5jdGlvbiBvblN1cmUoZSl7XHJcblx0XHRcdG9uQ29udGludWUoKTtcclxuXHRcdH1cclxufVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj7kv6Hmga/mj5DnpLo8L3A+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cImNlbnRlcl90aXRsZVwiIGlkPVwiU2hvd1JlYXNvblwiPjwvcD5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidG5ib3hcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJhY2tidG4gZGlzcF9ub25lXCIgaWQ9XCJidG5fYmFja1wiPuWPliZuYnNwOyZuYnNwOyZuYnNwO+a2iDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gc3VyZWJ0biBkaXNwX25vbmVcIiBpZD1cImJ0bl9zdXJlXCI+57unJm5ic3A7Jm5ic3A7Jm5ic3A757utPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxubW91bnRlZCAoKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fYmFja1wiKS5vbmNsaWNrPW9uQmFjaztcclxuICAgICAgICBmdW5jdGlvbiBvbkJhY2soZSl7XHJcblx0XHRcdG9uQ2FuY2VsKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX3N1cmVcIikub25jbGljaz1vblN1cmU7XHJcblx0ICAgIGZ1bmN0aW9uIG9uU3VyZShlKXtcclxuXHRcdFx0b25Db250aW51ZSgpO1xyXG5cdFx0fVxyXG59XHJcbn1cclxuPC9zY3JpcHQ+XHJcbiIsIjx0ZW1wbGF0ZT5cclxuPGRpdj5cclxuICAgIDxoZWFkZXIgY2xhc3M9XCJoZWFkZXJcIj5cclxuXHRcdDxkaXYgY2xhc3M9XCJoZWFkZXJfcmlnaHRhcmVhXCI+XHJcblx0XHRcdDwhLS3lgJLorqHml7YgLS0+XHJcblx0XHRcdDxkaXYgaWQ9XCJWZXJfQ291bnREb3duXCIgY2xhc3M9XCJ0aW1lXCI+PC9kaXY+XHJcblx0XHQ8L2Rpdj5cclxuXHQ8L2hlYWRlcj5cclxuXHJcbiAgICA8bWFpbiBjbGFzcz1cIm1haW5cIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwicHViX2NvbnRlbnRcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBhbmVsXCI+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRpdGxlXCI+5L+h5oGv5o+Q56S6PC9wPlxyXG4gICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJjZW50ZXJfdGl0bGVcIiBpZD1cIlNob3dSZWFzb25cIj48L3A+XHJcblx0XHRcdFx0PGRpdiBjbGFzcz1cImJ0bmJveFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG5cIiBpZD1cImJ0bl9zdXJlXCI+6YeNJm5ic3A7Jm5ic3A7Jm5ic3A75ZCvPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L21haW4+XHJcbjwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5tb3VudGVkICgpIHtcclxuXHRcdC8v5qih5oCB5qGG5YCS6K6h5pe2XHJcblx0ICAgIHZhciBpbnRUaW1lID0gJChcIiNWZXJfQ291bnREb3duXCIpLmh0bWwoKTtcclxuXHQgICAgaWYoaW50VGltZSA8PSAwKXtcclxuXHRcdCAgICBpbnRUaW1lID0gMzA7XHJcblx0XHR9XHJcblx0XHQkKFwiI1Zlcl9Db3VudERvd25cIikuaHRtbChpbnRUaW1lKTsvL+WFiOaYvuekuuS4gOS4i1xyXG5cdCAgICBmdW5jdGlvbiBzZXRUaW1lSHRtbCgpIHtcclxuXHRcdCAgICBpbnRUaW1lIC09IDE7XHJcblx0XHQgICAgaWYoaW50VGltZSA8PSAwKVxyXG5cdFx0ICAgIHtcclxuXHRcdFx0ICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpO1xyXG5cdFx0XHQgICAgZXhpdFNjZW5lKFwiU1RBX0NPTlRJTlVFXCIpO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICAkKFwiI1Zlcl9Db3VudERvd25cIikuaHRtbChpbnRUaW1lKTtcclxuXHQgICAgfVxyXG5cdFx0dmFyIGludGVydmFsID0gc2V0SW50ZXJ2YWwoc2V0VGltZUh0bWwsMTAwMCk7XHJcblx0XHQkKFwiI1Nob3dSZWFzb25cIikuaHRtbChcIuW6lOeUqOacqumHjeWQr++8jOivt+mHjeWQr+acuuWZqO+8gVwiKTtcclxuXHRcdC8v54K55Ye76YeN5ZCv6ZSuXHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fc3VyZVwiKS5vbmNsaWNrPW9uU3VyZTtcclxuXHQgICAgZnVuY3Rpb24gb25TdXJlKGUpe1xyXG5cdFx0XHQkKFwiI1Nob3dSZWFzb25cIikuaHRtbChcIuato+WcqOmHjeWQr+acuuWZqO+8jOivt+eojeWAmS4uLlwiKTtcclxuXHRcdFx0Y2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XHJcblx0XHRcdGV4aXRTY2VuZShcIlNUQV9DT05USU5VRVwiKTtcclxuXHRcdH1cclxufVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8c3R5bGUgc2NvcGVkPlxyXG4udWxfUmVzdWx0X3Njcm9sbHtcclxuICAgIG1hcmdpbjoyJSAzOCU7XHJcbiAgICB3aWR0aDogNjAlO1xyXG59XHJcbiAuUmVjZWlwdFFSSW1hZ2Uge1xyXG5cdHBvc2l0aW9uOmFic29sdXRlO1xyXG5cdGZsb2F0OmxlZnQ7XHJcblx0Ym90dG9tOjQ1JTtcclxuXHRsZWZ0OjMlO1xyXG5cdHdpZHRoOjM2MHB4O1xyXG5cdGhlaWdodDozNjBweFxyXG59XHJcbiAuUmVjZWlwdFFSSW1hZ2UgaW1ne1xyXG5cdFx0d2lkdGg6MTAwJTtcclxufVxyXG4uUVJDb2RlIHtcclxuXHRwb3NpdGlvbjphYnNvbHV0ZTtcclxuXHRmbG9hdDpsZWZ0O1xyXG5cdGJvdHRvbTowJTsgICAgICAgIFxyXG59ICBcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC1oZWlnaHQ6IDg1MHB4KSB7XHJcbiAgICAgLlJlY2VpcHRRUkltYWdlIHtcclxuICAgICAgICB3aWR0aDogMzEwcHg7XHJcbiAgICAgICAgaGVpZ2h0OiAzMTBweDtcclxuICAgICAgICBib3R0b206NDMlO1xyXG4gICAgIH1cclxuICAgICAuUmVjZWlwdFFSSW1hZ2UgaW1nIHtcclxuICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgIH1cclxuICAgIC5RUkNvZGUgaW1ne1xyXG4gICAgICAgbWF4LXdpZHRoOiA4MCU7ICAgICAgIFxyXG4gICAgfSAgXHJcbiAgICAudWxfUmVzdWx0X3Njcm9sbHtcclxuICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgIG1heC1oZWlnaHQ6IDQ4MHB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMi42cmVtO1xyXG4gICAgfSAgICAgICBcclxufVxyXG48L3N0eWxlPlxyXG48dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICA8cCBjbGFzcz1cInRpdGxlXCIgaWQ9XCJ0aXRsZVwiPuS6pOaYk+W3sue7k+adn++8jOivt+S7lOe7huaguOWvueS6pOaYk+e7k+aenDwvcD5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiUmVjZWlwdFFSSW1hZ2VcIiBpZD1cIlFSSU1HXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmVcIj5cclxuICAgICAgICAgICAgPGltZyBpZD1cIklNR1wiIHNyYz1cIlwiPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJRUkNvZGVcIiBpZD1cIlFSR0lGXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmVcIj5cclxuICAgICAgICAgICAgPGltZyBzcmM9XCJpbWcv5LqM57u056CB5Yqo55S7LmdpZlwiID5cclxuICAgICAgICA8L2Rpdj5cclxuXHRcdDx1bCBjbGFzcz1cInVsX1Jlc3VsdF9zY3JvbGxcIiBpZD1cIlRyYW5MaXN0XCI+XHQgIFxyXG5cclxuXHRcdDwvdWw+XHJcbiAgICAgICAgPHAgY2xhc3M9XCJ0aXBzXCIgaWQ9XCJ0aXBcIiBzdHlsZT1cImRpc3BsYXk6bm9uZVwiPuWvueS4jei1t++8jOaaguaXoOazleaPkOS+m+WbnuWNleaJk+WNsOacjeWKoe+8jOivt+S7lOe7huaguOWvueS6pOaYk+e7k+aenDwvcD5cclxuXHRcdDxkaXYgY2xhc3M9XCJidG5ib3hcIj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIGlkPVwiYnRuX2JhY2tcIj7kuI0mbmJzcDvmiZMmbmJzcDvljbA8L2J1dHRvbj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIGlkPVwiYnRuX3N1cmVcIj7miZMmbmJzcDsmbmJzcDsmbmJzcDvljbA8L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj4gXHJcbiAgICA8L3gtbGF5b3V0LW1haW4+XHJcbjwvdGVtcGxhdGU+XHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIG1vdW50ZWQgKCkge1xyXG4gICAgICAgIERhdGFUb29scy5nZXQoXCJHRF9BMDFfQ3VzdF9SUUltZ05hbWVcIixmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgJChcIiNJTUdcIikuYXR0cihcInNyY1wiLGRhdGEpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX2JhY2tcIikub25jbGljaz1vbkJhY2s7XHJcbiAgICAgICAgZnVuY3Rpb24gb25CYWNrKGUpe1xyXG5cdFx0XHRvbkNhbmNlbCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bl9zdXJlXCIpLm9uY2xpY2s9b25TdXJlO1xyXG5cdCAgICBmdW5jdGlvbiBvblN1cmUoZSl7XHJcblx0XHRcdG9uQ29udGludWUoKTtcclxuXHRcdH1cclxuICAgIH1cclxufVxyXG48L3NjcmlwdD4iLCI8c3R5bGUgc2NvcGVkPlxyXG4udWxfUmVzdWx0X3Njcm9sbHtcclxuICAgIG1hcmdpbjoyJSAzOCU7XHJcbiAgICB3aWR0aDogNjAlO1xyXG59XHJcbiAuUmVjZWlwdFFSSW1hZ2Uge1xyXG5cdHBvc2l0aW9uOmFic29sdXRlO1xyXG5cdGZsb2F0OmxlZnQ7XHJcblx0Ym90dG9tOjQ1JTtcclxuXHRsZWZ0OjMlO1xyXG5cdHdpZHRoOjM2MHB4O1xyXG5cdGhlaWdodDozNjBweFxyXG59XHJcbiAuUmVjZWlwdFFSSW1hZ2UgaW1ne1xyXG5cdFx0d2lkdGg6MTAwJTtcclxufVxyXG4uUVJDb2RlIHtcclxuXHRwb3NpdGlvbjphYnNvbHV0ZTtcclxuXHRmbG9hdDpsZWZ0O1xyXG5cdGJvdHRvbTowJTsgICAgICAgIFxyXG59ICBcclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC1oZWlnaHQ6IDg1MHB4KSB7XHJcbiAgICAgLlJlY2VpcHRRUkltYWdlIHtcclxuICAgICAgICB3aWR0aDogMzEwcHg7XHJcbiAgICAgICAgaGVpZ2h0OiAzMTBweDtcclxuICAgICAgICBib3R0b206NDMlO1xyXG4gICAgIH1cclxuICAgIC5RUkNvZGUgaW1ne1xyXG4gICAgICAgbWF4LXdpZHRoOiA4MCU7ICAgICAgIFxyXG4gICAgfSAgXHJcbiAgICAudWxfUmVzdWx0X3Njcm9sbHtcclxuICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgIG1heC1oZWlnaHQ6IDQ4MHB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMi42cmVtO1xyXG4gICAgfSAgICAgICBcclxufVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LWhlaWdodDogNzgwcHgpIHtcclxuICAuYnRuYm94e1xyXG4gICAgICBib3R0b206IDAlO1xyXG4gIH1cclxuICAudGlwc3tcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBib3R0b206IDUlOyBcclxuICAgICAgbGVmdDogMzAlXHJcbiAgfVxyXG59XHJcbjwvc3R5bGU+XHJcbjx0ZW1wbGF0ZT5cclxuICAgIDx4LWxheW91dC1tYWluPlxyXG4gICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIiBpZD1cInRpdGxlXCI+6K+35LuU57uG5qC45a+55Lqk5piT57uT5p6cPC9wPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJSZWNlaXB0UVJJbWFnZVwiIGlkPVwiUVJJTUdcIiBzdHlsZT1cImRpc3BsYXk6bm9uZVwiPlxyXG4gICAgICAgICAgICA8aW1nIGlkPVwiSU1HXCIgc3JjPVwiXCI+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cIlFSQ29kZVwiIGlkPVwiUVJHSUZcIiBzdHlsZT1cImRpc3BsYXk6bm9uZVwiPlxyXG4gICAgICAgICAgICA8aW1nIHNyYz1cImltZy/kuoznu7TnoIHliqjnlLsuZ2lmXCIgPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cdFx0PHVsIGNsYXNzPVwidWxfUmVzdWx0X3Njcm9sbFwiIGlkPVwiVHJhbkxpc3RcIj5cdCAgXHJcblxyXG5cdFx0PC91bD5cclxuICAgICAgICA8cCBjbGFzcz1cInRpcHNcIiBpZD1cInRpcFwiPuWvueS4jei1t++8jOaaguaXoOazleaPkOS+m+WbnuWNleaJk+WNsOacjeWKoe+8jOivt+S7lOe7huaguOWvueS6pOaYk+e7k+aenDwvcD5cclxuXHRcdDxkaXYgY2xhc3M9XCJidG5ib3hcIj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIGlkPVwiYnRuX3N1cmVcIj7noa4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDvlrpo8L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj4gXHJcbiAgICA8L3gtbGF5b3V0LW1haW4+XHJcbjwvdGVtcGxhdGU+XHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIFxyXG4gICAgbW91bnRlZCAoKSB7XHJcbiAgICAgICAgRGF0YVRvb2xzLmdldChcIkdEX0EwMV9DdXN0X1JRSW1nTmFtZVwiLGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICAkKFwiI0lNR1wiKS5hdHRyKFwic3JjXCIsZGF0YSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fc3VyZVwiKS5vbmNsaWNrPW9uU3VyZTtcclxuXHQgICAgZnVuY3Rpb24gb25TdXJlKGUpe1xyXG5cdFx0XHRvbkNvbnRpbnVlKCk7XHJcblx0XHR9XHJcbiAgICB9XHJcbn1cclxuPC9zY3JpcHQ+IiwiPHRlbXBsYXRlPlxyXG48ZGl2PlxyXG4gICAgPGhlYWRlciBjbGFzcz1cImhlYWRlclwiPlxyXG5cdFx0PGRpdiBjbGFzcz1cImhlYWRlcl9yaWdodGFyZWFcIj5cclxuXHRcdFx0PCEtLeWAkuiuoeaXtiAtLT5cclxuXHRcdFx0PGRpdiBpZD1cIlZlcl9Db3VudERvd25cIiBjbGFzcz1cInRpbWVcIj48L2Rpdj5cclxuXHRcdDwvZGl2PlxyXG5cdDwvaGVhZGVyPlxyXG5cclxuICAgIDxtYWluIGNsYXNzPVwibWFpblwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJwdWJfY29udGVudFwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicGFuZWxcIj5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj7kv6Hmga/mj5DnpLo8L3A+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cImNlbnRlcl90aXRsZVwiIGlkPVwiU2hvd1JlYXNvblwiPjwvcD5cclxuXHRcdFx0XHQ8cCBjbGFzcz1cIm5vdGljZVwiPua4qemmqOaPkOekuu+8muivt+WFiOiBlOezu+enkeaKgOmDqOmXqOabtOaWsOeJiOacrCzlho3lkK/liqjmnLrlmajvvIE8L3A+XHJcblx0XHRcdFx0PGRpdiBjbGFzcz1cImJ0bmJveFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG5cIiBpZD1cImJ0bl9zdXJlXCI+5YWzJm5ic3A7Jm5ic3A7Jm5ic3A75py6PC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L21haW4+XHJcbjwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5tb3VudGVkICgpIHtcclxuXHRcdC8v5qih5oCB5qGG5YCS6K6h5pe2XHJcblx0ICAgIHZhciBpbnRUaW1lID0gJChcIiNWZXJfQ291bnREb3duXCIpLmh0bWwoKTtcclxuXHQgICAgaWYoaW50VGltZSA8PSAwKXtcclxuXHRcdCAgICBpbnRUaW1lID0gMzA7XHJcblx0XHR9XHJcblx0XHQkKFwiI1Zlcl9Db3VudERvd25cIikuaHRtbChpbnRUaW1lKTsvL+WFiOaYvuekuuS4gOS4i1xyXG5cdCAgICBmdW5jdGlvbiBzZXRUaW1lSHRtbCgpIHtcclxuXHRcdCAgICBpbnRUaW1lIC09IDE7XHJcblx0XHQgICAgaWYoaW50VGltZSA8PSAwKVxyXG5cdFx0ICAgIHtcclxuXHRcdFx0ICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpO1xyXG5cdFx0XHQgICAgZXhpdFNjZW5lKFwiU1RBX0NPTlRJTlVFXCIpO1xyXG5cdFx0ICAgIH1cclxuXHRcdCAgICAkKFwiI1Zlcl9Db3VudERvd25cIikuaHRtbChpbnRUaW1lKTtcclxuXHQgICAgfVxyXG5cdFx0dmFyIGludGVydmFsID0gc2V0SW50ZXJ2YWwoc2V0VGltZUh0bWwsMTAwMCk7XHJcblx0XHREYXRhVG9vbHMuZ2V0KFwiUlBfVEhSZXNwQ29kZXxSUF9USFJlc3BNc2dcIixmdW5jdGlvbihkYXRhKXtcclxuXHRcdFx0dmFyIHN0clJlc3BDb2RlID0gZGF0YVswXTsvL+mUmeivr+eggVxyXG5cdFx0XHR2YXIgc3RyUmVzcE1zZyA9IGRhdGFbMV07Ly/plJnor6/noIHmj4/ov7BcclxuXHRcdFx0JChcIiNTaG93UmVhc29uXCIpLmh0bWwoc3RyUmVzcE1zZyArIFwiPGJyPlwiICsgc3RyUmVzcENvZGUpO1xyXG5cdFx0fSk7XHJcblx0XHQvL+eCueWHu+WFs+acuumUrlxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX3N1cmVcIikub25jbGljaz1vblN1cmU7XHJcblx0ICAgIGZ1bmN0aW9uIG9uU3VyZShlKXtcclxuXHRcdFx0JChcIiNTaG93UmVhc29uXCIpLmh0bWwoXCLmraPlnKjlhbPpl63mnLrlmajvvIzor7fnqI3lgJkuLi5cIik7XHJcblx0XHRcdGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpO1xyXG5cdFx0XHRleGl0U2NlbmUoXCJTVEFfQ09OVElOVUVcIik7XHJcblx0XHR9XHJcbn1cclxufVxyXG48L3NjcmlwdD5cclxuPHN0eWxlIHNjb3BlZD5cclxuXHQubm90aWNle1xyXG4gICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xyXG5cdFx0Ym90dG9tOjI1JTtcclxuXHRcdHdpZHRoOjYwJTtcclxuXHRcdHRleHQtYWxpZ246Y2VudGVyO1xyXG5cdFx0bGVmdDoyMCU7XHJcblx0fVxyXG48L3N0eWxlPlxyXG4iLCI8dGVtcGxhdGU+XHJcbiAgIDxkaXYgY2xhc3M9XCJ4LW1vZGFsXCI+XHJcblx0XHQ8cCBjbGFzcz1cInRpdGxlXCI+5L+h5oGv5o+Q56S6PC9wPlxyXG5cdFx0PHAgc3R5bGU9XCJ0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6Mi43cmVtO3RvcDozMCU7cG9zaXRpb246IHJlbGF0aXZlO1wiPueUteWtkOetvuWQjeaVhemanO+8jOaYr+WQpue7p+e7reWKnueQhuS4muWKoe+8nzwvcD5cclxuXHJcblx0XHQ8ZGl2IGNsYXNzPVwibW9kYWxfYnRuYm94XCI+XHJcblx0XHRcdDxidXR0b24gY2xhc3M9XCJidG5cIiBpZD1cImJ0bl9iYWNrMVwiPue7k+adn+WKnueQhjwvYnV0dG9uPlxyXG5cdFx0XHQ8YnV0dG9uIGNsYXNzPVwiYnRuXCIgaWQ9XCJidG5fc3VyZTFcIj7nu6fnu63lip7nkIY8L2J1dHRvbj5cclxuXHRcdDwvZGl2PlxyXG5cdDwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5cdG1vdW50ZWQgKCkge1xyXG5cdFx0XHJcblx0Ly/ngrnlh7vlkKZcclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX2JhY2sxXCIpLm9uY2xpY2s9b25CYWNrO1xyXG4gICAgICAgIGZ1bmN0aW9uIG9uQmFjaygpe1xyXG5cdFx0XHRleGl0U2NlbmUoXCJTVEFfQ0FOQ0VMXCIpO1xyXG4gICAgICAgIH1cclxuXHRcdC8v54K55Ye75pivXHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bl9zdXJlMVwiKS5vbmNsaWNrPW9uU3VyZTtcclxuXHRcdGZ1bmN0aW9uIG9uU3VyZSgpe1xyXG4gICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfQ09OVElOVUVcIik7XHJcbiAgICAgICAgfVxyXG5cdH1cclxufVxyXG48L3NjcmlwdD4iLCI8dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICAgICAgPHAgY2xhc3M9XCJ0aXRsZVwiPjwvcD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIngtaHNnaWZcIj5cclxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiXCI+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGlkPVwiYmdcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIj5cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgPC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHN0eWxlIHNjb3BlZD5cclxuLngtaHNnaWZ7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgbWFyZ2luOiAwJSBhdXRvO1xyXG59XHJcbi54LWhzZ2lmIGltZ3tcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbjwvc3R5bGU+XHJcbjxzY3JpcHQ+XHJcblxyXG4gZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgbW91bnRlZCAoKSB7IFxyXG4gICAgICAgIHZhciB2bT10aGlzO1xyXG4gICAgICAgIERhdGFUb29scy5nZXQoXCJHRF9BMDFfQ3VzdF9SZWplY3RNZWRpYUlEfEdEX0NvZFBpZFwiLGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICBzd2l0Y2goZGF0YVswXSl7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiSURDXCI6Y2FzZSBcIklEQ0lDXCI6IGNhc2UgXCJNQUdcIjpcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLnRpdGxlXCIpLmh0bWwoXCLor7fmlLblpb3mgqjnmoTpk7booYzljaFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi54LWhzZ2lmIGltZ1wiKS5hdHRyKFwic3JjXCIsdm0uJHJvb3QuaW1nUGF0aChcImltZy9cIit2bS4kcm9vdC5nZXRJbWdQYXRoKCkrXCJUYWtlQ2FyZC5naWZcIikpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjYmdcIikuZW1wdHkoKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2JnXCIpLmh0bWwoJzxFTUJFRCBpZD1cInNvdW5kXCIgbmFtZT1cIlZpZXdTb3VuZFwiIFNSQz1cIndhdi/or7fmlLblpb3mgqjnmoTpk7booYzljaEud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcIlNJTVwiOlxyXG4gICAgICAgICAgICAgICAgICAgICQoXCIudGl0bGVcIikuaHRtbChcIuivt+aUtuWlveaCqOeahOmTtuihjOWNoVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLngtaHNnaWYgaW1nXCIpLmF0dHIoXCJzcmNcIix2bS4kcm9vdC5pbWdQYXRoKFwiaW1nL1wiK3ZtLiRyb290LmdldEltZ1BhdGgoKStcIlRha2VQSUNDYXJkLmdpZlwiKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNiZ1wiKS5lbXB0eSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjYmdcIikuaHRtbCgnPEVNQkVEIGlkPVwic291bmRcIiBuYW1lPVwiVmlld1NvdW5kXCIgU1JDPVwid2F2L+ivt+aUtuWlveaCqOeahOmTtuihjOWNoS53YXZcIiBMb29wPWZhbHNlIEFVVE9TVEFSVD10cnVlIEhpZGRlbj10cnVlIE1BU1RFUlNPVU5EPjwvRU1CRUQ+Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiUFBSXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi50aXRsZVwiKS5odG1sKFwi6K+35pS25aW95oKo55qE5a2Y5oqYXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIueC1oc2dpZiBpbWdcIikuYXR0cihcInNyY1wiLHZtLiRyb290LmltZ1BhdGgoXCJpbWcvXCIrdm0uJHJvb3QuZ2V0SW1nUGF0aCgpK1wiRGlzcGVuc2VQYXNzYm9vay5naWZcIikpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjYmdcIikuZW1wdHkoKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2JnXCIpLmh0bWwoJzxFTUJFRCBpZD1cInNvdW5kXCIgbmFtZT1cIlZpZXdTb3VuZFwiIFNSQz1cIndhdi/or7fmlLblpb3mgqjnmoTlrZjmipgud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcIklEXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi50aXRsZVwiKS5odG1sKFwi6K+35pS25aW95oKo55qE6Lqr5Lu96K+B5Lu2XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaChkYXRhWzFdKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcIjExMDAwMVwiOiAvL+S6jOS7o+i6q+S7veivgVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIi54LWhzZ2lmIGltZ1wiKS5hdHRyKFwic3JjXCIsdm0uJHJvb3QuaW1nUGF0aChcImltZy9cIit2bS4kcm9vdC5nZXRJbWdQYXRoKCkrXCJUYWtlSURDYXJkLmdpZlwiKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcIjExMDAzN1wiOi8v5aSW5Zu95Lq65rC45LmF5bGF55WZ6K+BXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiLngtaHNnaWYgaW1nXCIpLmF0dHIoXCJzcmNcIix2bS4kcm9vdC5pbWdQYXRoKFwiaW1nL1wiK3ZtLiRyb290LmdldEltZ1BhdGgoKStcIlRha2VGb3JlaWduZXJDYXJkLmdpZlwiKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIueC1oc2dpZiBpbWdcIikuYXR0cihcInNyY1wiLHZtLiRyb290LmltZ1BhdGgoXCJpbWcvXCIrdm0uJHJvb3QuZ2V0SW1nUGF0aCgpK1wiVGFrZUlEQ2FyZC5naWZcIikpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjYmdcIikuZW1wdHkoKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2JnXCIpLmh0bWwoJzxFTUJFRCBpZD1cInNvdW5kXCIgbmFtZT1cIlZpZXdTb3VuZFwiIFNSQz1cIndhdi/or7fmlLblpb3mgqjnmoTouqvku73or4Hku7Yud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLnRpdGxlXCIpLmh0bWwoXCLor7fmlLblpb3mgqjnmoTpk7booYzljaFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi54LWhzZ2lmIGltZ1wiKS5hdHRyKFwic3JjXCIsdm0uJHJvb3QuaW1nUGF0aChcImltZy9cIit2bS4kcm9vdC5nZXRJbWdQYXRoKCkrXCJUYWtlQ2FyZC5naWZcIikpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjYmdcIikuZW1wdHkoKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2JnXCIpLmh0bWwoJzxFTUJFRCBpZD1cInNvdW5kXCIgbmFtZT1cIlZpZXdTb3VuZFwiIFNSQz1cIndhdi/or7fmlLblpb3mgqjnmoTpk7booYzljaEud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9IFxyXG4gICAgICB9KTtcclxuICB9XHJcbn1cclxuPC9zY3JpcHQ+XHJcblxyXG4iLCI8c3R5bGUgc2NvcGVkPlxyXG5pbWd7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIHdpZHRoOiAyMCU7XHJcbn1cclxuPC9zdHlsZT5cclxuXHJcbjx0ZW1wbGF0ZT5cclxuICAgIDxkaXYgY2xhc3M9XCJ4LW1vZGFsXCI+XHJcbiAgICAgICAgPGRpdiBpZD1cIm1vZGFsX3RyYWRpbmdCb3hcIiBjbGFzcz1cIm1vZGFsX3RyYWRpbmdCb3hcIj5cclxuICAgICAgICAgICAgPGRpdj48aW1nICA6c3JjPVwiJHJvb3QuaW1nUGF0aCgnaW1nL2xvYWRpbmcuZ2lmJylcIj7kuqTmmJPmraPlnKjov5vooYzvvIzor7fnqI3lgJkuLi48L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWxfYnRuYm94XCI+XHJcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG5cIiBpZD1cIkFEX2J0bl9iYWNrXCI+5Y+WJm5ic3A7Jm5ic3A7Jm5ic3A75raIPC9idXR0b24+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcblx0bW91bnRlZCAoKSBcclxuICAgIHtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIkFEX2J0bl9iYWNrXCIpLm9uY2xpY2s9QURfYnRuX2JhY2s7XHJcbiAgICAgICAgZnVuY3Rpb24gQURfYnRuX2JhY2soKSB7XHJcbiAgICAgICAgICAgIHBhZ2VMb2coXCJTVEFfQ0FOQ0VMLlwiKTtcclxuICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0NBTkNFTFwiKTtcclxuICAgICAgICB9XHJcblx0fVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8IS0tXHJcblx05Yqf6IO977ya5Lqk5piT5aSE55CG5Lit55S76Z2iXHJcblx05byA5Y+R5Lq677yaSEhRXHJcblx05byA5Y+R5pe26Ze077yaMjAxNy83LzI2XHJcbi0tPlxyXG48c3R5bGUgc2NvcGVkPlxyXG5pbWd7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIHdpZHRoOiAyMCU7XHJcbn1cclxuPC9zdHlsZT5cclxuXHJcbjx0ZW1wbGF0ZT5cclxuICAgIDxkaXYgY2xhc3M9XCJ4LW1vZGFsXCI+XHJcbiAgICAgICAgPGRpdiBpZD1cIm1vZGFsX3RyYWRpbmdCb3hcIiBjbGFzcz1cIm1vZGFsX3RyYWRpbmdCb3hcIj5cclxuICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgIDxpbWcgIDpzcmM9XCIkcm9vdC5pbWdQYXRoKCdpbWcvbG9hZGluZy5naWYnKVwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBpZD1cIlRyYWRpbmdUaXBcIj7kuqTmmJPmraPlnKjov5vooYzvvIzor7fnqI3lgJkuLi48L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBtb3VudGVkICgpIHtcclxuICAgICAgICB2YXIgc3RyVHJhbnNUaXAgPSBnZXRUcmFuc1RpcCgpO1xyXG4gICAgICAgIGlmKHN0clRyYW5zVGlwICE9bnVsbCAmJiBzdHJUcmFuc1RpcCAhPVwiXCIpe1xyXG4gICAgICAgICAgICAkKFwiI1RyYWRpbmdUaXBcIikuaHRtbChzdHJUcmFuc1RpcCk7XHJcbiAgICAgICAgfSAgIFxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICQoXCIjVHJhZGluZ1RpcFwiKS5odG1sKFwi5Lqk5piT5q2j5Zyo6L+b6KGM77yM6K+356iN5YCZLi4uXCIpOyAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8c3R5bGUgc2NvcGVkPlxyXG4gICAgLnRpdGxlIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDIlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogNC4zcmVtO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBjb2xvcjogIzAwOEI2RTtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogM3B4O1xyXG4gICAgfVxyXG4gICAgLnRpdGxlOmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCAjMDA4QjZFO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgICAgIHRvcDogLTE2cHg7XHJcbiAgICAgICAgcmlnaHQ6IC0yOHB4O1xyXG4gICAgfVxyXG4gICAgLnRpdGxlOmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBib3JkZXItdG9wOiAycHggc29saWQgIzAwOEI2RTtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHdpZHRoOiAzMDBweDtcclxuICAgICAgICB0b3A6IC0xNnB4O1xyXG4gICAgICAgIGxlZnQ6IC0yOHB4O1xyXG4gICAgfVxyXG4gICAgLmlucHV0SURpbmZveyAgIFxyXG4gICAgICAgIGZvbnQtc2l6ZTozLjZyZW07XHJcbiAgICAgICAgbWFyZ2luOjAgYXV0bztcclxuICAgICAgICBtYXJnaW4tdG9wOjIlO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OjEwMHB4O1xyXG4gICAgfVxyXG4gICAgLklEaW5mb2xlZnR7ICAgIFxyXG4gICAgICAgIHRleHQtYWxpZ246cmlnaHQ7IFxyXG4gICAgfVxyXG4gICAgLklEaW5mb3JpZ2h0eyBcclxuICAgICAgICB0ZXh0LWFsaWduOmxlZnQ7XHJcbiAgICAgICAgY29sb3I6IzY2MDBmZjtcclxuICAgIH1cclxuICAgIC5idG57ICAgXHJcbiAgICAgICAgcGFkZGluZzoxMHB4IDIycHg7XHJcbiAgICAgICAgZm9udC1zaXplOjNyZW07XHJcbiAgICAgICAgY29sb3I6I2ZmZjtcclxuICAgIH1cclxuICAgIC5idG5ib3gge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBib3R0b206IDI5JTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICAuaW5wdXRfaW5mb3sgICAgXHJcbiAgICAgICAgaGVpZ2h0OiA2MHB4O1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDhCNkU7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgICBib3gtc2hhZG93OiBpbnNldCAycHggNXB4IDE2cHggMHB4ICNDRENEQ0Q7XHJcbiAgICAgICAgZm9udC1zaXplOiAzLjZyZW07XHJcbiAgICAgICAgcGFkZGluZzogMHB4IDEwcHg7XHJcbiAgICAgICAgY29sb3I6IzY2MDBmZjtcclxuICAgIH1cclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtaGVpZ2h0OiA3ODBweCkge1xyXG4gICAgLmJ0bmJveHtcclxuICAgICAgYm90dG9tOiAxNSU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuPC9zdHlsZT5cclxuPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcbiAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj57e0lucHV0SURJbmZvfX08L3A+XHJcbiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0naW5wdXRJRGluZm8nPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0nSURpbmZvbGVmdCc+e3tJRFR5cGV9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSdJRGluZm9yaWdodCcgaWQ9XCJJRFR5cGVTZWxlY3RcIj48L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSdJRGluZm9sZWZ0Jz57e0N1c3RvbWVyTmFtZX19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9J0lEaW5mb3JpZ2h0Jz48aW5wdXQgY2xhc3M9XCJpbnB1dF9sb25nXCIgbWF4bGVuZ3RoPVwiNDBcIiBpZD1cIklETmFtZVwiIHN0eWxlPVwid2lkdGg6NTgwcHg7XCJ0eXBlPVwidGV4dFwiIEBjbGljaz1cIm9uQ3VzdG9tZXJOYW1lQ2xpY2tcIiBvbmJsdXI9XCJIaWRlS0IoKVwiIEBmb2N1cz1cIm9uQ2xlYXJOdW1QaWRFcnJcIj48L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSdJRGluZm9sZWZ0Jz57e0lETnVtYmVyfX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0nSURpbmZvcmlnaHQnPjxpbnB1dCBjbGFzcz1cImlucHV0X2xvbmdcIiBtYXhsZW5ndGg9XCIyMlwiIEBmb2N1cz1cIm9uQ2xlYXJOdW1QaWRFcnJcIiBzdHlsZT1cIndpZHRoOjU4MHB4O1wiIEBjbGljaz1cIm9uSUROdW1DbGlja1wiIGlkPVwiSUROdW1cIiB0eXBlPVwidGV4dFwiIG9uYmx1cj1cIkhpZGVLQigpXCI+PC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgICAgIDxwIGNsYXNzPVwidGlwc1wiIGlkPVwibm90aWNlQ2hlY2tDb2RlXCI+e3tOdW1QaWRFcnJ9fTwvcD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ0bmJveFwiPlxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIGlkPVwiYnRuX2JhY2tcIiBAY2xpY2s9XCJvbkJhY2tcIj7kuIrkuIDmraU8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG5cIiBpZD1cImJ0bl9zdXJlXCIgQGNsaWNrPVwib25TdXJlXCI+5LiL5LiA5q2lPC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgPC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuaW1wb3J0IHsgbWFwU3RhdGUsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4J1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgZGF0YSAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgc2V0S2V5czogW1wiR0RfTnVtUGlkXCIsIFwiR0RfTmFtQ3VzdFwiXSwgICAgICAgICAgICBcclxuICAgICAgICAgICAgSW5wdXRJREluZm86IFwi6L6T5YWl6K+B5Lu25L+h5oGvXCIsXHJcbiAgICAgICAgICAgIElEVHlwZTogXCLor4Hku7bnsbvlnovvvJpcIixcclxuICAgICAgICAgICAgQ3VzdG9tZXJOYW1lOlwi5a6i5oi35aeT5ZCN77yaXCIsXHJcbiAgICAgICAgICAgIEN1c3RvbWVyTmFtZUlucHV0OlwiXCIsXHJcbiAgICAgICAgICAgIHN0cklkY2FyZFR5cGU6XCJcIixcclxuICAgICAgICAgICAgSUROdW1iZXI6XCLor4Hku7blj7fnoIHvvJpcIixcclxuICAgICAgICAgICAgSUROdW1iZXJJbnB1dDpcIlwiLFxyXG4gICAgICAgICAgICBJc09ubHlOdW06ZmFsc2UsXHJcbiAgICAgICAgICAgIElzT25seUVuZzpmYWxzZSxcclxuICAgICAgICAgICAgbWF4bGVuZ3RoOjIyLFxyXG4gICAgICAgICAgICBOdW1QaWRFcnI6XCJcIlxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBjb21wdXRlZCA6IHtcclxuICAgICAgICAuLi5tYXBTdGF0ZShbJ3Bvb2wnXSlcclxuICAgIH0sXHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgICAgaW5pdFBhZ2UgKCkge1xyXG4gICAgICAgICAgICB0aGlzLmluaXRQb29sKHRoaXMuJGRhdGEpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkJhY2sgKCkge1xyXG4gICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfQkFDS1wiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uU3VyZSAoKSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy52YWxpZGF0ZSgpKSByZXR1cm5cclxuICAgICAgICAgICAgdGhpcy5zdWJtaXQodGhpcy5zZXRLZXlzKVxyXG4gICAgICAgICAgICB0aGlzLm9uQ29udGludWUoKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25JRE51bUNsaWNrICgpIHtcclxuICAgICAgICAgICAgaWYodGhpcy5Jc09ubHlOdW0gPT0gZmFsc2Upe1xyXG4gICAgICAgICAgICAgICAgU2hvd0VuZ0tCKCctMScsJy0xJywnSUROdW0nLCfor4Hku7blj7fnoIEnKTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICBTaG93TnVtYmVyS0IoJy0yJywnLTInLCdJRE51bScsJ+ivgeS7tuWPt+eggScpOyAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIG9uQ3VzdG9tZXJOYW1lQ2xpY2soKXtcclxuICAgICAgICAgICAgaWYodGhpcy5Jc09ubHlFbmcgPT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgICAgICBTaG93RW5nS0IoJy0xJywnLTEnLCdJRE5hbWUnLCflrqLmiLflp5PlkI0nKVxyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIFNob3dQaW55aW5LQignLTEnLCctMScsJ0lETmFtZScsJ+WuouaIt+Wnk+WQjScpOyAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfSAgICAgICAgICAgIFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgXHJcbiAgICAgICAgdmFsaWRhdGUgKCkgeyAgICBcclxuICAgICAgICAgICAgdmFyIEN1c3RvbWVyTmFtZUlucHV0ID0gJChcIiNJRE5hbWVcIikudmFsKCk7ICAgICAgICBcclxuICAgICAgICAgICAgdmFyIElETnVtYmVySW5wdXQgPSAkKFwiI0lETnVtXCIpLnZhbCgpOyAgICAgICAgXHJcbiAgICAgICAgICAgIGlmIChDdXN0b21lck5hbWVJbnB1dC5sZW5ndGggPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5OdW1QaWRFcnIgPSBcIuivt+i+k+WFpeaCqOeahOWnk+WQjVwiXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoSUROdW1iZXJJbnB1dC5sZW5ndGggPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5OdW1QaWRFcnIgPSBcIuivt+i+k+WFpeaCqOeahOivgeS7tuWPt+eggVwiXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZih0aGlzLnN0cklkY2FyZFR5cGUgIT0gXCIxMTAwMjVcIil7ICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgaWYoIWNoZWNrRG9jdW1lbnROdW0oSUROdW1iZXJJbnB1dCx0aGlzLnN0cklkY2FyZFR5cGUpKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLk51bVBpZEVyciA9IFwi6K+36L6T5YWl5q2j56Gu55qE6K+B5Lu25Y+356CBXCJcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnBvb2wuR0RfTnVtUGlkID0gSUROdW1iZXJJbnB1dDtcclxuICAgICAgICAgICAgdGhpcy5wb29sLkdEX05hbUN1c3QgPSBDdXN0b21lck5hbWVJbnB1dDtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uQ2xlYXJOdW1QaWRFcnIgKCkge1xyXG4gICAgICAgICAgICB0aGlzLk51bVBpZEVyciA9IFwiXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIC4uLm1hcEFjdGlvbnMoWydpbml0UG9vbCcsICdmZXRjaCcsICdzdWJtaXQnLCAnb25DYW5jZWwnLCAnb25Db250aW51ZSddKVxyXG4gICAgfSxcclxuICAgIG1vdW50ZWQgKCkge1xyXG4gICAgICAgIHRoaXMuaW5pdFBhZ2UoKTtcclxuICAgICAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgICAgIHZhciBtYXhsZW5ndGggPSAwO1xyXG4gICAgICAgIHZhciByZWc9L14oW2Etel18W0EtWl18WzAtOV0pKiQvO1xyXG4gICAgICAgIHZhciByZWdFeD0vXihbYS16XXxbQS1aXXxbMC05XSkqJC87XHJcbiAgICAgICAgdmFyIE1zZ0V4PVwiXCI7XHJcbiAgICAgICAgdmFyIENoZWNrUG9zPTE7XHJcbiAgICAgICAgRGF0YVRvb2xzLmdldChcIkdEX0NvZFBpZHxHRF9OdW1QaWRcIixmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgdmFyIHN0cklEdHlwZSA9IFwiXCI7XHJcbiAgICAgICAgICAgIHZtLnN0cklkY2FyZFR5cGUgPSBkYXRhWzBdO1xyXG4gICAgICAgICAgICBzd2l0Y2goZGF0YVswXSl7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiMTEwMDAxXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgc3RySUR0eXBlPVwi5LqM5Luj6Lqr5Lu96K+BXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgbWF4bGVuZ3RoID0gMTg7XHJcbiAgICAgICAgICAgICAgICAgICAgdm0uSXNPbmx5TnVtID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICByZWc9L15bMC05XSokLztcclxuICAgICAgICAgICAgICAgICAgICByZWdFeD0vXlswLTldKiQvO1xyXG4gICAgICAgICAgICAgICAgICAgIE1zZ0V4PVwi5LqM5Luj6Lqr5Lu96K+B6aaW5L2N5Y+q6IO95Li65pWw5a2XXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiMTEwMDE5XCI6XHJcbiAgICAgICAgICAgICAgICAgICAgc3RySUR0eXBlPVwi5riv5r6z5bGF5rCR5p2l5b6A5YaF5Zyw6YCa6KGM6K+BXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgbWF4bGVuZ3RoID0gOTtcclxuICAgICAgICAgICAgICAgICAgICByZWdFeD0vXltITV17MX0kLztcclxuICAgICAgICAgICAgICAgICAgICBNc2dFeD1cIua4r+a+s+WxheawkeadpeW+gOWGheWcsOmAmuihjOivgemmluS9jeWPquiDveS4uuKAnEjigJ3miJbigJxN4oCdXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQ29kQ2VydE9yZ1wiLFwi5YWs5a6J6YOoXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcIjExMDAyMVwiOlxyXG4gICAgICAgICAgICAgICAgICAgIHN0cklEdHlwZT1cIuWPsOa5vuWxheawkeadpeW+gOWkp+mZhumAmuihjOivgVwiO1xyXG4gICAgICAgICAgICAgICAgICAgIG1heGxlbmd0aCA9IDg7XHJcbiAgICAgICAgICAgICAgICAgICAgdm0uSXNPbmx5TnVtID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICByZWc9L15bMC05XSokLztcclxuICAgICAgICAgICAgICAgICAgICByZWdFeD0vXlswLTldezF9JC87XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQ29kQ2VydE9yZ1wiLFwi5YWs5a6J6YOoXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcIjExMDAzN1wiOlxyXG4gICAgICAgICAgICAgICAgICAgIHN0cklEdHlwZT1cIuWkluWbveS6uuawuOS5heWxheeVmeivgVwiO1xyXG4gICAgICAgICAgICAgICAgICAgIHZtLklzT25seUVuZyA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgbWF4bGVuZ3RoID0gMTU7XHJcbiAgICAgICAgICAgICAgICAgICAgQ2hlY2tQb3M9MztcclxuICAgICAgICAgICAgICAgICAgICByZWdFeD0vXlthLXpBLVpdezF9JC87XHJcbiAgICAgICAgICAgICAgICAgICAgc3RySUR0eXBlPVwi5aSW5Zu95Lq65rC45LmF5bGF55WZ6K+BXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgTXNnRXg9XCLlpJblm73kurrmsLjkuYXlsYXnlZnor4HliY0z5L2N5Y+q6IO95Li65a2X5q+NXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0VmFyKFwiR0RfQ29kQ2VydE9yZ1wiLFwi5YWs5a6J6YOoXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcIjExMDAyNVwiOiBcclxuICAgICAgICAgICAgICAgICAgICBzdHJJRHR5cGU9XCLlpJblm73miqTnhadcIjtcclxuICAgICAgICAgICAgICAgICAgICB2bS5Jc09ubHlFbmcgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIG1heGxlbmd0aCA9IDE4O1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICBzdHJJRHR5cGU9XCJcIjtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAkKFwiI0lEVHlwZVNlbGVjdFwiKS5odG1sKHN0cklEdHlwZSk7XHJcbiAgICAgICAgfSk7ICBcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIklETmFtZVwiKS5vbmlucHV0PW9uSUROYW1lOyAgICAgICBcclxuICAgICAgICAgZnVuY3Rpb24gb25JRE5hbWUoKSB7ICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHZhciB3cml0aW5nID0gJCh0aGlzKS52YWwoKTtcclxuICAgICAgICAgICAgdmFyIHdyaXRpbmdsZW4gPSB3cml0aW5nLnJlcGxhY2UoL1teXFx4MDAtXFx4ZmZdL2csXCIwMVwiKS5sZW5ndGg7XHJcbiAgICAgICAgICAgIGlmKHdyaXRpbmdsZW4gPiA0MCl7XHJcbiAgICAgICAgICAgICAgICB3cml0aW5nPXdyaXRpbmcuc3Vic3RyKDAsd3JpdGluZy5sZW5ndGgtMSlcclxuICAgICAgICAgICAgICAgICQodGhpcykudmFsKHdyaXRpbmcpO1xyXG4gICAgICAgICAgICB9ICAgIFxyXG4gICAgICAgIH0gXHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJJRE51bVwiKS5vbmlucHV0PW9uSUROdW07XHJcbiAgICAgICAgZnVuY3Rpb24gb25JRE51bSgpIHsgICAgXHJcbiAgICAgICAgICAgIHZhciB3cml0aW5nID0gJCh0aGlzKS52YWwoKTtcclxuICAgICAgICAgICAgdmFyIHdyaXRpbmdsZW4gPSB3cml0aW5nLmxlbmd0aDtcclxuICAgICAgICAgICAgdmFyIGJTaG93TGFzdFZhbHVlID0gdHJ1ZTtcclxuICAgICAgICAgICAgdmFyIHRtcFN0ckVyciA9IFwiXCI7ICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHZhciBzdHJMYXN0VmFsID0gd3JpdGluZy5zdWJzdHIod3JpdGluZ2xlbi0xLDEpO1xyXG5cclxuICAgICAgICAgICAgaWYoIXJlZy50ZXN0KHdyaXRpbmcpIHx8IHdyaXRpbmdsZW4gPiBtYXhsZW5ndGgpe1xyXG4gICAgICAgICAgICAgICAgYlNob3dMYXN0VmFsdWUgPSBmYWxzZTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICBpZih3cml0aW5nbGVuIDw9IENoZWNrUG9zKXtcclxuICAgICAgICAgICAgICAgICAgICBpZighcmVnRXgudGVzdChzdHJMYXN0VmFsKSAmJiBzdHJMYXN0VmFsICE9IFwiXCIpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiU2hvd0xhc3RWYWx1ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0bXBTdHJFcnIgPSBNc2dFeDsgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1lbHNlIGlmKHZtLnN0cklkY2FyZFR5cGUgPT0gXCIxMTAwMzdcIil7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlZ051bSA9IC9eWzAtOV0qJC87XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoIXJlZ051bS50ZXN0KHN0ckxhc3RWYWwpKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYlNob3dMYXN0VmFsdWUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdG1wU3RyRXJyID0gTXNnRXg7ICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9ICBcclxuICAgICAgICAgICAgaWYoYlNob3dMYXN0VmFsdWUgPT0gZmFsc2Upe1xyXG4gICAgICAgICAgICAgICAgd3JpdGluZz13cml0aW5nLnN1YnN0cigwLHdyaXRpbmdsZW4tMSlcclxuICAgICAgICAgICAgICAgICQodGhpcykudmFsKHdyaXRpbmcpOyBcclxuICAgICAgICAgICAgfSAgICAgXHJcbiAgICAgICAgICAgIHZtLk51bVBpZEVyciA9IHRtcFN0ckVycjsgICAgICBcclxuICAgICAgICB9ICBcclxuICAgIH0gIFxyXG59XHJcbjwvc2NyaXB0PiIsInZhciBfX3Z1ZWlmeV9zdHlsZV9kaXNwb3NlX18gPSByZXF1aXJlKFwidnVlaWZ5L2xpYi9pbnNlcnQtY3NzXCIpLmluc2VydChcIi5hdWRpdG9yQ1tkYXRhLXYtOTMxMDk4ZDRde1xcclxcblxcdGJvcmRlcjogMHB4IHNvbGlkICMwMDhCNkU7XFxyXFxuXFx0d2lkdGg6IDYwJTtcXHJcXG5cXHRoZWlnaHQ6IDcwJTtcXHJcXG5cXHRtYXJnaW46NTBweCBhdXRvO1xcclxcblxcdGRpc3BsYXk6IGZsZXg7XFxyXFxuXFx0anVzdGlmeS1jb250ZW50OmNlbnRlcjtcXHJcXG5cXHRhbGlnbi1pdGVtczogY2VudGVyXFxyXFxufVxcclxcbi5hdWRpdG9yQyBpbWdbZGF0YS12LTkzMTA5OGQ0XXtcXHJcXG5cXHR3aWR0aDo1MCU7XFxyXFxufVxcclxcbi5hdWRpdG9yY1JbZGF0YS12LTkzMTA5OGQ0XXtcXHJcXG5cXHJcXG5cXHRwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuXFx0d2lkdGg6MTglO1xcclxcblxcdGhlaWdodDogNDAlO1xcclxcblxcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcXHRcXHJcXG5cXHRyaWdodDowLjglO1xcclxcblxcdGJvdHRvbTogMSU7XFxyXFxufVxcclxcbi5hdWRpdG9yY1IgaW1nW2RhdGEtdi05MzEwOThkNF17XFxyXFxuXFx0d2lkdGg6OTUlO1xcdFxcclxcbn1cIilcbnZhciBfX3Z1ZV9fb3B0aW9uc19fID0gKHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJmdW5jdGlvblwiPyBtb2R1bGUuZXhwb3J0cy5vcHRpb25zOiBtb2R1bGUuZXhwb3J0cylcbmlmIChfX3Z1ZV9fb3B0aW9uc19fLmZ1bmN0aW9uYWwpIHtjb25zb2xlLmVycm9yKFwiW3Z1ZWlmeV0gZnVuY3Rpb25hbCBjb21wb25lbnRzIGFyZSBub3Qgc3VwcG9ydGVkIGFuZCBzaG91bGQgYmUgZGVmaW5lZCBpbiBwbGFpbiBqcyBmaWxlcyB1c2luZyByZW5kZXIgZnVuY3Rpb25zLlwiKX1cbl9fdnVlX19vcHRpb25zX18ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3gtbGF5b3V0LW1haW4nLFtfYygncCcse3N0YXRpY0NsYXNzOlwidGl0bGVcIixhdHRyczp7XCJpZFwiOlwiUmVtb3RlVGlwc1wifX0sW192bS5fdihcIuato+WcqOetieW+heaOiOadg++8jOivt+eojeWAmVwiKV0pLF92bS5fdihcIiBcIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYXVkaXRvckNcIn0sW19jKCdpbWcnLHthdHRyczp7XCJzcmNcIjpcImltZy9sb2FkaW5nLmdpZlwifX0pXSksX3ZtLl92KFwiIFwiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJhdWRpdG9yY1JcIn0sW19jKCdpbWcnLHthdHRyczp7XCJpZFwiOlwiaWRjX2ltZ1wiLFwic3JjXCI6XCJpbWcv5a6h5qC45ZGYLnBuZ1wifX0pXSksX3ZtLl92KFwiIFwiKSxfYygnRU1CRUQnLHthdHRyczp7XCJuYW1lXCI6XCJWaWV3U291bmRcIixcIlNSQ1wiOlwid2F2L+ato+WcqOetieW+heaOiOadg++8jOivt+eojeWQji53YXZcIixcIkxvb3BcIjpcImZhbHNlXCIsXCJBVVRPU1RBUlRcIjpcInRydWVcIixcIkhpZGRlblwiOlwidHJ1ZVwiLFwiTUFTVEVSU09VTkRcIjpcIlwifX0pXSwxKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW11cbl9fdnVlX19vcHRpb25zX18uX3Njb3BlSWQgPSBcImRhdGEtdi05MzEwOThkNFwiXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7ICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCB0cnVlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBtb2R1bGUuaG90LmRpc3Bvc2UoX192dWVpZnlfc3R5bGVfZGlzcG9zZV9fKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtOTMxMDk4ZDRcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LTkzMTA5OGQ0XCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH1cbn0pKCl9IiwiPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRpdGxlXCI+5L+h5oGv5o+Q56S6PC9wPlxyXG4gICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJjZW50ZXJfdGl0bGVcIiBpZD1cIlNob3dSZWFzb25cIj48L3A+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnRuYm94XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBiYWNrYnRuIGRpc3Bfbm9uZVwiIGlkPVwiYnRuX2JhY2tcIj7lj5YmbmJzcDsmbmJzcDsmbmJzcDvljaE8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG4gZGlzcF9ub25lXCIgaWQ9XCJidG5fc3VyZVwiPue7pyZuYnNwOyZuYnNwOyZuYnNwO+e7rTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICA8L3gtbGF5b3V0LW1haW4+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbm1vdW50ZWQgKCkge1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX2JhY2tcIikub25jbGljaz1vbkJhY2s7XHJcblx0XHRmdW5jdGlvbiBvbkJhY2soKXtcclxuXHRcdFx0b25DYW5jZWwoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fc3VyZVwiKS5vbmNsaWNrPW9uU3VyZTtcclxuXHRcdGZ1bmN0aW9uIG9uU3VyZSgpe1xyXG5cdFx0XHRvbkNvbnRpbnVlKCk7XHJcblx0XHR9XHJcblxyXG59XHJcbn1cclxuPC9zY3JpcHQ+XHJcbiIsIlxyXG48dGVtcGxhdGU+XHJcbjx4LWxheW91dC1tYWluPlx0XHRcdFx0XHJcbiAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj7noa7orqTovazotKbkv6Hmga88L3A+XHJcblx0XHRcdDxkaXYgY2xhc3M9XCJpbmZvX2NvbmZcIj5cclxuXHRcdFx0XHQ8dGFibGUgY2xhc3M9XCJpbmZvcl90YWJsZVwiPlxyXG5cdFx0XHRcdFx0PHRyPlxyXG5cdFx0XHRcdFx0XHQ8dGQ+5Y+X55CG6LSm5oi377yaPC90ZD5cclxuXHRcdFx0XHRcdFx0PHRkIGlkPVwiXCI+e3syMjIyMjIyMjIyMjIyMjIyMjIyMjIyMn19PC90ZD5cclxuXHRcdFx0XHRcdDwvdHI+XHJcblx0XHRcdFx0XHQ8dHI+XHJcblx0XHRcdFx0XHRcdDx0ZD7lrqLmiLflp5PlkI3vvJo8L3RkPlxyXG5cdFx0XHRcdFx0XHQ8dGQgaWQ9XCJcIj57e319PC90ZD5cclxuXHRcdFx0XHRcdDwvdHI+XHJcblx0XHRcdFx0XHQ8dHI+XHJcblx0XHRcdFx0XHRcdDx0ZD7kuqTmmJPnu4jnq6/vvJo8L3RkPlxyXG5cdFx0XHRcdFx0XHQ8dGQgaWQ9XCJcIj57e319PC90ZD5cclxuXHRcdFx0XHRcdDwvdHI+XHJcblx0XHRcdFx0XHQ8dHI+XHJcblx0XHRcdFx0XHRcdDx0ZD7kuqTmmJPnsbvlnovvvJo8L3RkPlxyXG5cdFx0XHRcdFx0XHQ8dGQgaWQ9XCJcIj57e319PC90ZD5cclxuXHRcdFx0XHRcdDwvdHI+XHJcblx0XHRcdFx0XHQ8dHI+XHJcblx0XHRcdFx0XHRcdDx0ZD7otK3kubDph5Hpop3vvJo8L3RkPlxyXG5cdFx0XHRcdFx0XHQ8dGQgaWQ9XCJcIj57e319PC90ZD5cclxuXHRcdFx0XHRcdDwvdHI+XHJcblx0XHRcdFx0XHQ8dHI+XHJcblx0XHRcdFx0XHRcdDx0ZD7lrqLmiLfpo47pmannrYnnuqfvvJo8L3RkPlxyXG5cdFx0XHRcdFx0XHQ8dGQgaWQ9XCJcIj57e319PC90ZD5cclxuXHRcdFx0XHRcdDwvdHI+XHJcblx0XHRcdFx0XHQ8dHI+XHJcblx0XHRcdFx0XHRcdDx0ZD7kuqTmmJPml7bpl7TvvJo8L3RkPlxyXG5cdFx0XHRcdFx0XHQ8dGQgaWQ9XCJcIj57e319PC90ZD5cclxuXHRcdFx0XHRcdDwvdHI+XHJcblx0XHRcdFx0XHQ8dHI+XHJcblx0XHRcdFx0XHQ8dGQ+5Lqk5piT5pel5pyf77yaPC90ZD5cclxuXHRcdFx0XHRcdFx0PHRkIGlkPVwiXCIgPnt7fX08L3RkPlxyXG5cdFx0XHRcdFx0PC90cj5cclxuXHRcdFx0XHRcdDx0cj5cclxuXHRcdFx0XHRcdFx0PHRkPuS6pOaYk+e7k+aenO+8mjwvdGQ+XHJcblx0XHRcdFx0XHRcdDx0ZCBpZD1cIlwiPnt7fX08L3RkPlxyXG5cdFx0XHRcdFx0PC90cj5cclxuXHRcdFx0XHQ8L3RhYmxlPiBcclxuXHRcdFx0XHQ8cCBjbGFzcz1cInRpcHNcIj7muKnppqjmj5DnpLrvvJrmgqjnmoTlrqLmiLfkv6Hmga/kuI3lrozlloTvvIzor7fmkLrluKbmnInmlYjor4Hku7bliLDnvZHngrnlip7nkIbvvIE8L3A+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0XHJcblx0XHQ8ZGl2IGNsYXNzPVwiYnRuYm94XCI+XHJcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYmFja2J0blwiIGlkPVwiYnRuX2JhY2tcIiA+5LiK5LiA5q2lPC9idXR0b24+XHJcbiAgICAgICAgICAgXHQ8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG5cIiBpZD1cImJ0bl9zdXJlXCIgPuehruiupDwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cdDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuPHNjcmlwdD4gXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuIFxyXG59XHJcbjwvc2NyaXB0PiBcdCIsIjx0ZW1wbGF0ZT5cclxuPGRpdiBjbGFzcz1cIngtbW9kYWxcIj5cclxuICAgIDxwIGNsYXNzPVwibW9kYWxfdGl0bGVcIj7or7fogZTns7vlrqHmoLjlkZjovpPlhaXmjIfnurnnvJblj7c8L3A+XHJcbiAgICA8dWwgY2xhc3M9XCJkb2N1bWVudGluZm9saXN0XCI+XHJcbiAgICAgICAgPGxpPlxyXG4gICAgICAgICAgICA8c3Bhbj48YiBjbGFzcz1cIm11c3RcIj4qPC9iPuaMh+e6uee8luWPt++8mjwvc3Bhbj48aW5wdXQgY2xhc3M9XCJpbnB1dF9hbW91bnRcIiB0eXBlPVwidGV4dFwiIGlkPVwiRmluZ2VySURcIiAgb25jbGljaz1cIlNob3dQaW55aW5LQignLTEnLCctMScsJ0ZpbmdlcklEJywn5oyH57q557yW5Y+377yaJylcIiBvbmJsdXI9XCJIaWRlS0IoKVwiLz5cclxuICAgICAgICA8L2xpPlxyXG4gICAgPC91bD5cclxuICAgIDxkaXYgY2xhc3M9XCJtb2RhbF9idG5ib3hcIj5cclxuICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJhY2tidG5cIiBpZD1cIm1vZGFsX2J0bl9iYWNrXCI+5Y+WJm5ic3A7Jm5ic3A7Jm5ic3A75raIPC9idXR0b24+XHJcbiAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBzdXJlYnRuXCIgaWQ9XCJtb2RhbF9idG5fc3VyZVwiPuehriZuYnNwOyZuYnNwOyZuYnNwO+WumjwvYnV0dG9uPlxyXG4gICAgPC9kaXY+XHJcbiAgICA8RU1CRUQgbmFtZT1cIlBvcHVwU291bmRcIiBTUkM9XCJ3YXYv6K+36IGU57O75a6h5qC45ZGY6L6T5YWl5oyH57q557yW5Y+3LndhdlwiIExvb3A9ZmFsc2UgQVVUT1NUQVJUPXRydWUgSGlkZGVuPXRydWUgTUFTVEVSU09VTkQ+PC9FTUJFRD5cclxuPC9kaXY+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48IS0t54K55Ye75pCc57Si5Yy65Z+f5by55Ye65qih5oCB5qGGLS0+XHJcbjxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbm1vdW50ZWQgKCkge1xyXG5cclxuICAgIC8q5qih5oCB5qGG5Y+W5raI5oyJ6ZKu5LqL5Lu25aSE55CGKi9cclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW9kYWxfYnRuX2JhY2tcIikub25jbGljaz1vbk1vZGFsQmFjaztcclxuICAgIGZ1bmN0aW9uIG9uTW9kYWxCYWNrKCkge1xyXG4gICAgICAgICQoXCIjZ29vZGNvdmVyXCIpLmZhZGVPdXQoJzUwMCcpO1xyXG4gICAgICAgICQoXCIjRmluZ2VySURcIikudmFsKFwiXCIpO1xyXG4gICAgICAgIGV4aXRTY2VuZShcIlNUQV9DQU5DRUxcIik7XHJcbiAgICB9XHJcblxyXG4gICAgLyrmqKHmgIHmoYbnoa7lrprmjInpkq7kuovku7blpITnkIYqL1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtb2RhbF9idG5fc3VyZVwiKS5vbmNsaWNrPW9uTW9kYWxTdXJlO1xyXG4gICAgZnVuY3Rpb24gb25Nb2RhbFN1cmUoKSB7XHJcbiAgICAgICAgdmFyIEZpbmdlcklEID0gJChcIiNGaW5nZXJJRFwiKS52YWwoKTtcclxuXHRcdHNldFZhcihcIkdEX1Vzck51bVwiLEZpbmdlcklEKTtcclxuICAgICAgICBzZXRWYXIoXCJHRF9BMDFfQlVTX05VTV9VUl9DRk1cIixGaW5nZXJJRCk7XHJcbiAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0NPTlRJTlVFXCIpO1xyXG4gICAgfVxyXG5cclxufVxyXG59XHJcbjwvc2NyaXB0PiIsIjwhLS1cclxu55yB5biC57qn5LiJ57qn6IGU5Yqo6YCJ5oupXHJcbkFkZCBaSEVHTlhJQU9KVU4gMjAxNy82LzE2XHJcbua1i+ivleaVsOaNruebruWJjeWwseW5v+S4nOecgeaVsOaNruiDvei/lOWbnumCrue8llxyXG4tLT5cclxuXHJcbiAgICA8c3R5bGUgc2NvcGVkPlxyXG4gICAgICAgIC5wcm92aW5jZSwgLmNpdHksIC5kaXN0cmljdCB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xyXG4gICAgICAgIH1cclxuICAgICAgICAucHJvdmluY2UgLnN3aXBlci1jb250YWluZXIsLmNpdHkgLnN3aXBlci1jb250YWluZXIsLmRpc3RyaWN0IC5zd2lwZXItY29udGFpbmVyICB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyODBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA0MDBweDtcclxuICAgICAgICAgICAgbWFyZ2luOjEwcHggMjBweCAyMHB4IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5zd2lwZXItc2xpZGVOIHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDIuNXJlbTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICAgIC8qIENlbnRlciBzbGlkZSB0ZXh0IHZlcnRpY2FsbHkgKi9cclxuICAgICAgICAgICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gICAgICAgICAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcclxuICAgICAgICAgICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xyXG4gICAgICAgICAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuYWN0aXZlU2xpZGV7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuY2l0eVNlbGVjdG9ye1xyXG4gICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcclxuICAgICAgICAgICAgbWFyZ2luOjEwcHggYXV0bztcclxuICAgICAgICAgICAgd2lkdGg6OTAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6NjUlO1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcclxuICAgICAgICAgICAgY29sb3I6IzAwOEI2RTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLnNlbGVjdFNsaWRle1xyXG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6NzdweDtcclxuICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgICAgIHRvcDozOCU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNiZmJmYmY7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuNDtcclxuICAgICAgICB9XHJcbiAgICA8L3N0eWxlPlxyXG5cclxuPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcbiAgICA8ZGl2IGNsYXNzPVwieC1tb2RhbFwiPlxyXG4gICAgICAgIDxwIGNsYXNzPVwibW9kYWxfdGl0bGVcIj7nnIHluILljLrpgInmi6k8L3A+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjaXR5U2VsZWN0b3JcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzZWxlY3RTbGlkZVwiPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInByb3ZpbmNlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN3aXBlci1jb250YWluZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN3aXBlci13cmFwcGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2l0eVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzd2lwZXItY29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzd2lwZXItd3JhcHBlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRpc3RyaWN0XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN3aXBlci1jb250YWluZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN3aXBlci13cmFwcGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJidG5ib3hcIj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBiYWNrYnRuXCIgaWQ9XCJidG5fYmFja1wiPui/lCZuYnNwOyZuYnNwOyZuYnNwO+WbnjwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG5cIiBpZD1cImJ0bl9zdXJlXCI+56GuJm5ic3A7Jm5ic3A7Jm5ic3A75a6aPC9idXR0b24+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxubW91bnRlZCAoKSB7XHJcblxyXG5cclxuICAgIC8vc3dpcGVy5Yid5aeL5YyWXHJcbiAgICB2YXIgaW5kZXhQcm8gPSAwO1xyXG4gICAgdmFyIGluZGV4Q3R5ID0gMDtcclxuICAgIHZhciBpbmRleERzdCA9IDA7XHJcbiAgICB2YXIgc3dpcGVyUHJvID0gbmV3IFN3aXBlcignLnByb3ZpbmNlIC5zd2lwZXItY29udGFpbmVyJywge1xyXG4gICAgICAgIGRpcmVjdGlvbiA6XCJ2ZXJ0aWNhbFwiLFxyXG4vLyAgICAgICAgbG9vcDp0cnVlLCAgIC8v5L2/55SobG9vcOiOt+WPlueahGFjdGl2ZUluZGV45YC85aSN5Yi2XHJcbiAgICAgICAgc2xpZGVBY3RpdmVDbGFzcyA6ICdhY3RpdmVTbGlkZScsICAvL+a0u+WKqOWdl+eahOexu+WQjVxyXG4gICAgICAgIHNsaWRlc1BlclZpZXc6NSxcclxuICAgICAgICBzcGFjZUJldHdlZW46MyxcclxuICAgICAgICBsb29wZWRTbGlkZXM6NSxcclxuICAgICAgICBjZW50ZXJlZFNsaWRlczogdHJ1ZSxcclxuICAgICAgICBzbGlkZVRvQ2xpY2tlZFNsaWRlOiB0cnVlLFxyXG4gICAgICAgIG9uU2xpZGVDaGFuZ2VFbmQ6IGZ1bmN0aW9uKHN3aXBlclBybyl7XHJcbiAgICAgICAgICAgIHN3aXBlckN0eS5yZW1vdmVBbGxTbGlkZXMoKTtcclxuICAgICAgICAgICAgc3dpcGVyRHN0LnJlbW92ZUFsbFNsaWRlcygpO1xyXG4gICAgICAgICAgICBpbmRleFBybyA9c3dpcGVyUHJvLmFjdGl2ZUluZGV4OyAvL+WIh+aNoue7k+adn+aXtu+8jOi/lOWbnnNsaWRl5LiL5qCHXHJcbiAgICAgICAgICAgIGluaXRDaXR5KCk7XHJcbiAgICAgICAgICAgIHN3aXBlckN0eS51cGRhdGUoKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIHZhciBzd2lwZXJDdHkgPSBuZXcgU3dpcGVyKCcuY2l0eSAuc3dpcGVyLWNvbnRhaW5lcicsIHtcclxuICAgICAgICBkaXJlY3Rpb24gOlwidmVydGljYWxcIixcclxuLy8gICAgICAgIGxvb3A6dHJ1ZSwgICAvL+S9v+eUqGxvb3Dojrflj5bnmoRhY3RpdmVJbmRleOWAvOWkjeWItlxyXG4gICAgICAgIHNsaWRlQWN0aXZlQ2xhc3MgOiAnYWN0aXZlU2xpZGUnLCAgLy/mtLvliqjlnZfnmoTnsbvlkI1cclxuICAgICAgICBzbGlkZXNQZXJWaWV3OjUsXHJcbiAgICAgICAgc3BhY2VCZXR3ZWVuOjMsXHJcbiAgICAgICAgbG9vcGVkU2xpZGVzOjUsXHJcbiAgICAgICAgY2VudGVyZWRTbGlkZXM6IHRydWUsXHJcbiAgICAgICAgc2xpZGVUb0NsaWNrZWRTbGlkZTogdHJ1ZSxcclxuICAgICAgICBvblNsaWRlQ2hhbmdlRW5kOiBmdW5jdGlvbihzd2lwZXJDdHkpIHtcclxuICAgICAgICAgICAgc3dpcGVyRHN0LnJlbW92ZUFsbFNsaWRlcygpO1xyXG4gICAgICAgICAgICBpbmRleEN0eSA9IHN3aXBlckN0eS5hY3RpdmVJbmRleDsgLy/liIfmjaLnu5PmnZ/ml7bvvIzov5Tlm55zbGlkZeS4i+agh1xyXG4gICAgICAgICAgICBpbml0RGlzdHJpY3QoKTtcclxuICAgICAgICAgICAgc3dpcGVyRHN0LnVwZGF0ZSgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25DbGljazogZnVuY3Rpb24oc3dpcGVyQ3R5KSB7XHJcbiAgICAgICAgICAgIHN3aXBlckRzdC5yZW1vdmVBbGxTbGlkZXMoKTtcclxuICAgICAgICAgICAgaW5kZXhDdHkgPSBzd2lwZXJDdHkuYWN0aXZlSW5kZXg7XHJcbiAgICAgICAgICAgIGluaXREaXN0cmljdCgpO1xyXG4gICAgICAgICAgICBzd2lwZXJEc3QudXBkYXRlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICB2YXIgc3dpcGVyRHN0ID0gbmV3IFN3aXBlcignLmRpc3RyaWN0IC5zd2lwZXItY29udGFpbmVyJywge1xyXG4gICAgICAgIGRpcmVjdGlvbiA6XCJ2ZXJ0aWNhbFwiLFxyXG4vLyAgICAgICAgbG9vcDp0cnVlLCAgIC8v5L2/55SobG9vcOiOt+WPlueahGFjdGl2ZUluZGV45YC85aSN5Yi2XHJcbiAgICAgICAgc2xpZGVBY3RpdmVDbGFzcyA6ICdhY3RpdmVTbGlkZScsICAvL+a0u+WKqOWdl+eahOexu+WQjVxyXG4gICAgICAgIHNsaWRlc1BlclZpZXc6NSxcclxuICAgICAgICBzcGFjZUJldHdlZW46MyxcclxuICAgICAgICBsb29wZWRTbGlkZXM6NSxcclxuICAgICAgICBjZW50ZXJlZFNsaWRlczogdHJ1ZSxcclxuICAgICAgICBzbGlkZVRvQ2xpY2tlZFNsaWRlOiB0cnVlLFxyXG4gICAgICAgIG9uU2xpZGVDaGFuZ2VFbmQ6IGZ1bmN0aW9uKHN3aXBlckRzdCl7XHJcbiAgICAgICAgICAgIGluZGV4RHN0ID0gc3dpcGVyRHN0LmFjdGl2ZUluZGV4O1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgLyrmtYvor5XmlbDmja4qL1xyXG4gICAgdmFyIHN0ciA9IFt7XCJwcm92aW5jZVwiOlwi5bm/5Lic55yBXCIsXCJjdHlMaXN0XCI6W3tcImNpdHlcIjpcIua3seWcs+W4glwiLFwiZHN0TGlzdFwiOltcIuWNl+WxseWMul8xMDAwMFwiLFwi6b6Z5bKX5Yy6XzQwMDAwXCIsXCLnvZfmuZbljLpfNjAwMDBcIixcIuWuneWuieWMul84MDAwMFwiLFwi55uQ55Sw5Yy6XzEyMDAwXCIsXCLnpo/nlLDljLpfMzAwMDBcIl19LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcImNpdHlcIjpcIuaxleWktOW4glwiLFwiZHN0TGlzdFwiOltcIum+mea5luWMul8xMDAwMVwiLFwi5r+g5rGf5Yy6XzEwMDAyXCIsXCLmva7ljZfljLpfMTAwMDNcIixcIuWNl+a+s+WOv18xMDAwNFwiLFwi6YeR5bmz5Yy6XzEwMDA1XCIsXCLmva7pmLPljLpfMTAwMDZcIixcIua+hOa1t+WMulwiXX0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAge1wiY2l0eVwiOlwi54+g5rW35biCXCIsXCJkc3RMaXN0XCI6W1wi6aaZ5rSy5Yy6XzExMDAwXCIsXCLph5Hmub7ljLpfMTIwMDBcIixcIuaWl+mXqOWMul8xMzAwMFwiXX0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAge1wiY2l0eVwiOlwi5oOg5bee5biCXCIsXCJkc3RMaXN0XCI6W1wi5oOg5Z+O5Yy6XzE0MDAwXCIsXCLljZrnvZfljr9fMTUwMDBcIixcIum+memXqOWOv18xNjAwMFwiLFwi5oOg6Ziz5Yy6XzE3MDAwXCIsXCLmg6DkuJzljr9fMTgwMDBcIl19LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcImNpdHlcIjpcIuS9m+WxseW4glwiLFwiZHN0TGlzdFwiOltcIuS4ieawtOWMulwiLFwi56aF5Z+O5Yy6XCIsXCLpobrlvrfljLpcIixcIumrmOaYjuWMulwiLFwi5Y2X5rW35Yy6XCJdfV19LFxyXG4gICAgICAgICAgICAgICB7XCJwcm92aW5jZVwiOlwi5YyX5Lqs5biCXCIsXCJjdHlMaXN0XCI6W3tcImNpdHlcIjpcIuWMl+S6rOW4glwiLFwiZHN0TGlzdFwiOltcIumAmuWOv1wiLFwi6KW/5Z+O5Yy6XCIsXCLlrqPmrabljLpcIixcIuS4sOWPsOWMulwiLFwi5rW35reA5Yy6XCIsXCLmiL/lsbHljLpcIixcIumhuuS5ieWMulwiLFwi5aSn5YW05Yy6XCIsXCLlubPosLfljLpcIixcIuW7tuW6huWMulwiLFwi5Lic5Z+O5Yy6XCIsXCLltIfmlofljLpcIixcIuacnemYs+WMulwiLFwi55+z5pmv5bGx5Yy6XCIsXCLpl6jlpLTmsp/ljLpcIixcIumAmuW3nuWMulwiLFwi5piM5bmz5Yy6XCIsXCLmgIDmn5TljLpcIixcIuWvhuS6keWOv1wiXX1dfSxcclxuICAgICAgICAgICAgICAge1wicHJvdmluY2VcIjpcIuWGheiSmeWPpOiHquayu+WMulwiLFwiY3R5TGlzdFwiOlt7XCJjaXR5XCI6XCLplKHmnpfpg63li5Lnm59cIixcImRzdExpc3RcIjpbXCLplKHmnpfmtannibnluIJcIixcIuWkmuS8puWOv1wiLFwi6IuP5bC854m55Y+z5peXXCIsXCLopb/kuYznj6DnqYbmsoHml5dcIixcIuato+mVtueZveaXl1wiLFwi5LqM6L+e5rWp54m55biCXCIsXCLpmL/pqazll4Tml5dcIixcIumYv+W3tOWYjuaXl1wiLFwi6IuP5bC854m55bem5peXXCIsXCLkuJzkuYznj6DnqYbmsoHml5dcIixcIuWkquS7huWvuuaXl1wiLFwi5q2j6JOd5peXXCIsXCLplbbpu4Tml5dcIl19LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcImNpdHlcIjpcIuWFtOWuieebn1wiLFwiZHN0TGlzdFwiOltcIuenkeWwlOaygeWPs+e/vOS4reaXl1wiLFwi56qB5rOJ5Y6/XCIsXCLnp5Hlj7PkuK3ml5dcIixcIuenkeWwlOaygeWPs+e/vOWJjeaXl1wiLFwi5omO6LWJ54m55peXXCIsXCLkuYzlhbDmtannibnluIJcIixcIumYv+WwlOWxseW4glwiXX0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAge1wiY2l0eVwiOlwi6Zi/5ouJ5ZaE55ufXCIsXCJkc3RMaXN0XCI6W1wi6Zi/5ouJ5ZaE5bem5peXXCIsXCLliY3pg63lsJTnvZfmlq/okpnlj6Tml4/oh6rmsrvljr9cIixcIumYv+aLieWWhOWPs+aXl1wiXX1dfSxcclxuICAgICAgICAgICAgICAge1wicHJvdmluY2VcIjpcIuaxn+iLj+ecgVwiLFwiY3R5TGlzdFwiOlt7XCJjaXR5XCI6XCLljZfkuqzluIJcIixcImRzdExpc3RcIjpbXCLnjoTmrabljLpcIixcIuenpua3ruWMulwiLFwi6byT5qW85Yy6XCJdfV19LFxyXG4gICAgICAgICAgICAgICB7XCJwcm92aW5jZVwiOlwi5LiK5rW35biCXCIsXCJjdHlMaXN0XCI6W3tcImNpdHlcIjpcIuS4iua1t+W4glwiLFwiZHN0TGlzdFwiOltcIum7hOa1puWMulwiLFwi5rWm5Lic5paw5Yy6XCIsXCLlmInlrprljLpcIl19XX0sXHJcbiAgICAgICAgICAgICAgIHtcInByb3ZpbmNlXCI6XCLpu5HpvpnmsZ/nnIFcIixcImN0eUxpc3RcIjpbe1wiY2l0eVwiOlwi5ZOI5bCU5ruo5biCXCIsXCJkc3RMaXN0XCI6W1wi5p2+5YyX5Yy6XCIsXCLmnKjlhbDljr9cIixcIuaWueato+WOv1wiXX1dfSxcclxuICAgICAgICAgICAgICAge1wicHJvdmluY2VcIjpcIuWQieael+ecgVwiLFwiY3R5TGlzdFwiOlt7XCJjaXR5XCI6XCLplb/mmKXluIJcIixcImRzdExpc3RcIjpbXCLlhpzlronljr9cIixcIue7v+WbreWMulwiLFwi5LqM6YGT5Yy6XCJdfV19LFxyXG4gICAgICAgICAgICAgICB7XCJwcm92aW5jZVwiOlwi6L695a6B55yBXCIsXCJjdHlMaXN0XCI6W3tcImNpdHlcIjpcIuayiOmYs+W4glwiLFwiZHN0TGlzdFwiOltcIuWkp+S4nOWMulwiLFwi6IuP5a625bGv5Yy6XCIsXCLkuo7mtKrljLpcIl19XX0sXHJcbiAgICAgICAgICAgICAgIHtcInByb3ZpbmNlXCI6XCLmtZnmsZ/nnIFcIixcImN0eUxpc3RcIjpbe1wiY2l0eVwiOlwi5p2t5bee5biCXCIsXCJkc3RMaXN0XCI6W1wi6KW/5rmW5Yy6XCIsXCLokKflsbHljLpcIixcIuahkOW6kOWOv1wiXX1dfSxcclxuICAgICAgICAgICAgICAge1wicHJvdmluY2VcIjpcIuWuieW+veecgVwiLFwiY3R5TGlzdFwiOlt7XCJjaXR5XCI6XCLlkIjogqXluIJcIixcImRzdExpc3RcIjpbXCLlupDpmLPljLpcIixcIuiCpeS4nOWOv1wiXX1dfSxcclxuICAgICAgICAgICAgICAge1wicHJvdmluY2VcIjpcIuemj+W7uuecgVwiLFwiY3R5TGlzdFwiOlt7XCJjaXR5XCI6XCLnpo/lt57luIJcIixcImRzdExpc3RcIjpbXCLpvJPmpbzljLpcIl19XX0sXHJcbiAgICAgICAgICAgICAgIHtcInByb3ZpbmNlXCI6XCLlub/opb/lo67ml4/oh6rmsrvljLpcIixcImN0eUxpc3RcIjpbe1wiY2l0eVwiOlwi5Y2X5a6B5biCXCIsXCJkc3RMaXN0XCI6W1wi6Z2S56eA5Yy6XCJdfV19XTtcclxuXHJcbiAgICBmdW5jdGlvbiBpbml0UHJvdmluY2UoKXtcclxuICAgICAgICBmb3IodmFyIGk9MDtpPHN0ci5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgc3dpcGVyUHJvLmFwcGVuZFNsaWRlKFwiPGRpdiBjbGFzcz1cXFwic3dpcGVyLXNsaWRlIHN3aXBlci1zbGlkZU5cXFwiPlwiK3N0cltpXVtcInByb3ZpbmNlXCJdK1wiPC9kaXY+XCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGluaXRDaXR5KCl7XHJcbiAgICAgICAgZm9yKHZhciBqPTA7ajxzdHJbaW5kZXhQcm9dW1wiY3R5TGlzdFwiXS5sZW5ndGg7aisrKXtcclxuICAgICAgICAgICAgc3dpcGVyQ3R5LmFwcGVuZFNsaWRlKFwiPGRpdiBjbGFzcz1cXFwic3dpcGVyLXNsaWRlIHN3aXBlci1zbGlkZU5cXFwiPlwiK3N0cltpbmRleFByb10uY3R5TGlzdFtqXVtcImNpdHlcIl0rXCI8L2Rpdj5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gaW5pdERpc3RyaWN0KCl7XHJcbiAgICAgICAgZm9yKHZhciBqPTA7ajxzdHJbaW5kZXhQcm9dLmN0eUxpc3RbaW5kZXhDdHldW1wiZHN0TGlzdFwiXS5sZW5ndGg7aisrKXtcclxuICAgICAgICAgICAgc3dpcGVyRHN0LmFwcGVuZFNsaWRlKFwiPGRpdiBjbGFzcz1cXFwic3dpcGVyLXNsaWRlIHN3aXBlci1zbGlkZU5cXFwiPlwiK3N0cltpbmRleFByb10uY3R5TGlzdFtpbmRleEN0eV0uZHN0TGlzdFtqXS5zcGxpdChcIl9cIilbMF0rXCI8L2Rpdj5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaW5pdFByb3ZpbmNlKCk7XHJcbiAgICBpbml0Q2l0eSgpO1xyXG4gICAgaW5pdERpc3RyaWN0KCk7XHJcbiAgICAkKFwiI2J0bl9zdXJlXCIpLmNsaWNrKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgLy8gYWxlcnQoXCLnnIHku73vvJpcIitzdHJbaW5kZXhQcm9dW1wicHJvdmluY2VcIl0rXCIgIOWfjuW4gu+8mlwiK3N0cltpbmRleFByb10uY3R5TGlzdFtpbmRleEN0eV1bXCJjaXR5XCJdK1wiICDljLrljr/vvJpcIitzdHJbaW5kZXhQcm9dLmN0eUxpc3RbaW5kZXhDdHldLmRzdExpc3RbaW5kZXhEc3RdLnNwbGl0KFwiX1wiKVswXVxyXG4gICAgICAgIC8vICtcIiAg6YKu57yW77yaXCIrc3RyW2luZGV4UHJvXS5jdHlMaXN0W2luZGV4Q3R5XS5kc3RMaXN0W2luZGV4RHN0XS5zcGxpdChcIl9cIilbMV0pO1xyXG4gICAgICAgIGV4aXRTY2VuZShcIlNUQV9DT05USU5VRVwiKTtcclxuICAgIH0pO1xyXG4gICAgJChcIiNidG5fYmFja1wiKS5jbGljayhmdW5jdGlvbigpe1xyXG4gICAgICAgIGV4aXRTY2VuZShcIlNUQV9DQU5DRUxcIik7XHJcbiAgICB9KTtcclxuXHJcbn1cclxufVxyXG48L3NjcmlwdD5cclxuIiwiPHRlbXBsYXRlPlxyXG48eC1kaWFsb2cgdGl0bGU9XCLor7flrprliLblvLnmoYblhoXlrrkyXCIgOnRpbWVvdXQ9MTU+XHJcbiAgICA8dWwgY2xhc3M9XCJkb2N1bWVudGluZm9saXN0XCI+XHJcbiAgICA8L3VsPlxyXG48L3gtZGlhbG9nPlxyXG48L3RlbXBsYXRlPlxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbm1vdW50ZWQgKCkge1xyXG5cclxuXHJcbn1cclxufVxyXG48L3NjcmlwdD4iLCI8dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZWNoYXJ0c1wiPlxyXG4gICAgICAgICAgICA8SUVjaGFydHMgOm9wdGlvbj1cImxpbmVcIiA6bG9hZGluZz1cImxvYWRpbmdcIiBAcmVhZHk9XCJvblJlYWR5XCIgQGNsaWNrPVwib25DbGlja1wiPjwvSUVjaGFydHM+XHJcbiAgICAgICAgICAgIDxidXR0b24gQGNsaWNrPVwiZG9SYW5kb21cIj5SYW5kb208L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj5cclxuICA8L3gtbGF5b3V0LW1haW4+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5cclxuICBleHBvcnQgZGVmYXVsdCB7XHJcbiAgICBkYXRhOiAoKSA9PiAoe1xyXG4gICAgICBsb2FkaW5nOiBmYWxzZSxcclxuICAgICAgbGluZToge1xyXG4gICAgICAgIHRpdGxlOiB7XHJcbiAgICAgICAgICB0ZXh0OiAn5Yip546H5Zu+6KGo56S65L6LJ1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdG9vbHRpcDoge30sXHJcbiAgICAgICAgeEF4aXM6IHtcclxuICAgICAgICAgIGRhdGE6IFsnOS8xJywgJzkvMicsICc5LzMnLCAnOS80JywgJzkvNScsICc5LzYnXVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgeUF4aXM6IHt9LFxyXG4gICAgICAgIHNlcmllczogW3tcclxuICAgICAgICAgIG5hbWU6ICdSYXRlcycsXHJcbiAgICAgICAgICB0eXBlOiAnbGluZScsXHJcbiAgICAgICAgICBkYXRhOiBbNSwgMjAsIDM2LCAxMCwgMTAsIDIwXVxyXG4gICAgICAgIH1dXHJcbiAgICAgIH1cclxuICAgIH0pLFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICBkb1JhbmRvbSgpIHtcclxuICAgICAgICBjb25zdCB0aGF0ID0gdGhpcztcclxuICAgICAgICBsZXQgZGF0YSA9IFtdO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwLCBtaW4gPSA1LCBtYXggPSA5OTsgaSA8IDY7IGkrKykge1xyXG4gICAgICAgICAgZGF0YS5wdXNoKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggKyAxIC0gbWluKSArIG1pbikpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGF0LmxvYWRpbmcgPSAhdGhhdC5sb2FkaW5nO1xyXG4gICAgICAgIHRoYXQubGluZS5zZXJpZXNbMF0uZGF0YSA9IGRhdGE7XHJcbiAgICAgIH0sXHJcbiAgICAgIG9uUmVhZHkoaW5zdGFuY2UpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhpbnN0YW5jZSk7XHJcbiAgICAgIH0sXHJcbiAgICAgIG9uQ2xpY2soZXZlbnQsIGluc3RhbmNlLCBlY2hhcnRzKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coYXJndW1lbnRzKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH07XHJcbjwvc2NyaXB0PlxyXG5cclxuPHN0eWxlIHNjb3BlZD5cclxuICAuZWNoYXJ0cyB7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBoZWlnaHQ6IDQwMHB4O1xyXG4gIH1cclxuPC9zdHlsZT5cclxuIiwidmFyIF9fdnVlX19vcHRpb25zX18gPSAodHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcImZ1bmN0aW9uXCI/IG1vZHVsZS5leHBvcnRzLm9wdGlvbnM6IG1vZHVsZS5leHBvcnRzKVxuaWYgKF9fdnVlX19vcHRpb25zX18uZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlaWZ5XSBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgYW5kIHNob3VsZCBiZSBkZWZpbmVkIGluIHBsYWluIGpzIGZpbGVzIHVzaW5nIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuX192dWVfX29wdGlvbnNfXy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygneC1sYXlvdXQtbWFpbicsW19jKCdwJyx7c3RhdGljQ2xhc3M6XCJ0aXRsZVwifSxbX3ZtLl92KFwi6K+35a6h5qC45ZGY5b2V5YWl5oyH57q5XCIpXSksX3ZtLl92KFwiIFwiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJQaW5faW1nXCJ9LFtfYygnaW1nJyx7YXR0cnM6e1wic3JjXCI6X3ZtLiRyb290LmltZ1BhdGgoJ2ltZy/mjIfnurkuZ2lmJyl9fSldKSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIlBpbl9pbnB1dFwifSxbX2MoJ3AnLHtzdGF0aWNTdHlsZTp7XCJtYXJnaW4tdG9wXCI6XCI1JVwifX0sW192bS5fdihcIuaMh+e6uee8luWPt++8mlwiKSxfYygnaScse2F0dHJzOntcImlkXCI6XCJGaW5nZXJJRFwifX0sW192bS5fdihcIjExMTFcIildKV0pLF92bS5fdihcIiBcIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiUGluX3RpcHNcIn0sW19jKCdwJyxbX3ZtLl92KFwi6K+35bCG5omL5oyH57Sn6LS05Zyo5oyH57q55omr5o+P5aSEXCIpXSksX3ZtLl92KFwiIFwiKSxfYygncCcse3N0YXRpY1N0eWxlOntcImNvbG9yXCI6XCIjRkY5ODAwXCJ9LGF0dHJzOntcImlkXCI6XCJGaW5nZXJTdGF0dXNcIn19LFtfdm0uX3YoXCLmjIfnurnov5jmnKrmoKHpqoxcIildKV0pXSldKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW11cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHsgIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIHRydWUpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi01ZjFlNTU5MFwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtNWYxZTU1OTBcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfVxufSkoKX0iLCI8dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICAgICAgPHAgY2xhc3M9XCJ0aXRsZVwiIGlkPVwiUmVhZElkQ2FyZFwiID48L3A+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoc2dpZlwiPlxyXG4gICAgICAgICAgICAgICAgPGltZyBzcmM9XCJcIj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPEVNQkVEIG5hbWU9XCJWaWV3U291bmRcIiBTUkM9XCJ3YXYv6K+35bCG5oKo55qE6Lqr5Lu96K+B5Lu25pS+5YWl6K+G5Yir5Yy6LndhdlwiIExvb3A9ZmFsc2UgQVVUT1NUQVJUPXRydWUgSGlkZGVuPXRydWUgTUFTVEVSU09VTkQ+PC9FTUJFRD5cclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgbW91bnRlZCAoKSB7ICAgXHJcbiAgICAgICAgdmFyIHZtPXRoaXM7XHJcbiAgICAgIERhdGFUb29scy5nZXQoXCJDX0EwMV9EZXZfTWFjaGluZVR5cGV8R0RfQ29kUGlkXCIsZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgIHN3aXRjaChkYXRhWzBdKXtcclxuICAgICAgICAgICAgICAgIGNhc2UgXCIxXCI6IGNhc2UgXCIyXCI6Y2FzZSBcIjVcIjpcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI1JlYWRJZENhcmRcIikuaHRtbChcIuivt+WwhuaCqOeahOi6q+S7veivgeS7tuaUvuWFpeivhuWIq+WMulwiKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgXCIzXCI6IGNhc2UgXCI0XCI6XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNSZWFkSWRDYXJkXCIpLmh0bWwoXCLor7fmj5LlhaXmgqjnmoTouqvku73or4Hku7ZcIik7ICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjUmVhZElkQ2FyZFwiKS5odG1sKFwi6K+35bCG5oKo55qE6Lqr5Lu96K+B5Lu25pS+5YWl6K+G5Yir5Yy6XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciBEb2N1bWVudFR5cGU9ZGF0YVsxXTtcclxuICAgICAgICAgICAgc3dpdGNoKERvY3VtZW50VHlwZSl7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiMTEwMDAxXCI6IC8v5LqM5Luj6Lqr5Lu96K+BXHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5oc2dpZiBpbWdcIikuYXR0cihcInNyY1wiLHZtLiRyb290LmltZ1BhdGgoXCJpbWcvXCIrdm0uJHJvb3QuZ2V0SW1nUGF0aCgpK1wiSW5zZXJ0SURDYXJkLmdpZlwiKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiMTEwMDM3XCI6Ly/lpJblm73kurrmsLjkuYXlsYXnlZnor4FcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLmhzZ2lmIGltZ1wiKS5hdHRyKFwic3JjXCIsdm0uJHJvb3QuaW1nUGF0aChcImltZy9cIit2bS4kcm9vdC5nZXRJbWdQYXRoKCkrXCJJbnNlcnRGb3JlaWduZXJDYXJkLmdpZlwiKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuaHNnaWYgaW1nXCIpLmF0dHIoXCJzcmNcIix2bS4kcm9vdC5pbWdQYXRoKFwiaW1nL1wiK3ZtLiRyb290LmdldEltZ1BhdGgoKStcIkluc2VydElEQ2FyZC5naWZcIikpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gIH1cclxufVxyXG48L3NjcmlwdD5cclxuIiwiPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcbiAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj7or7flj5botbDor4Hku7Y8L3A+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoc2dpZlwiPlxyXG4gICAgICAgICAgICAgICAgPGltZyBzcmM9XCJcIj48L2ltZz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICA8RU1CRUQgbmFtZT1cIlZpZXdTb3VuZFwiIFNSQz1cIndhdi/or7fmlLblpb3mgqjnmoTouqvku73or4Hku7Yud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPlxyXG4gICAgPC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBtb3VudGVkICgpIHsgICBcclxuICAgICAgICB2YXIgdm09dGhpcztcclxuICAgICAgRGF0YVRvb2xzLmdldChcIkdEX0NvZFBpZFwiLGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIHN3aXRjaChkYXRhLnRvU3RyaW5nKCkpe1xyXG4gICAgICAgICAgICBjYXNlIFwiMTEwMDAxXCI6IC8v5LqM5Luj6Lqr5Lu96K+BXHJcbiAgICAgICAgICAgICAgICAgICQoXCIuaHNnaWYgaW1nXCIpLmF0dHIoXCJzcmNcIix2bS4kcm9vdC5pbWdQYXRoKFwiaW1nL1wiK3ZtLiRyb290LmdldEltZ1BhdGgoKStcIlRha2VJRENhcmQuZ2lmXCIpKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiMTEwMDM3XCI6Ly/lpJblm73kurrmsLjkuYXlsYXnlZnor4FcclxuICAgICAgICAgICAgICAgICQoXCIuaHNnaWYgaW1nXCIpLmF0dHIoXCJzcmNcIix2bS4kcm9vdC5pbWdQYXRoKFwiaW1nL1wiK3ZtLiRyb290LmdldEltZ1BhdGgoKStcIlRha2VGb3JlaWduZXJDYXJkLmdpZlwiKSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICQoXCIuaHNnaWYgaW1nXCIpLmF0dHIoXCJzcmNcIix2bS4kcm9vdC5pbWdQYXRoKFwiaW1nL1wiK3ZtLiRyb290LmdldEltZ1BhdGgoKStcIlRha2VJRENhcmQuZ2lmXCIpKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCJcclxuPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcbiAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj7miZPljbDlrZjmipjkuqTmmJPmmI7nu4Y8L3A+XHJcbiAgICAgICAgICAgIDxwIGNsYXNzPVwiY2VudGVyX3RpdGxlXCI+6K+356Gu6K6k5a2Y5oqY57+76Iez5b6F5omT5Y2w6aG1PC9wPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnRuYm94XCI+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJhY2tidG5cIiBpZD1cImJ0bl9iYWNrXCI+5Y+W5raIPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG5cIiBpZD1cImJ0bl9zdXJlXCI+56Gu5a6aPC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgPC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5tb3VudGVkICgpIHtcclxuXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bl9iYWNrXCIpLm9uY2xpY2s9b25CdG5fYmFjaztcclxuICAgIGZ1bmN0aW9uIG9uQnRuX2JhY2soKXtcclxuICAgICAgICBvbkNhbmNlbCgpO1xyXG4gICAgfVxyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fc3VyZVwiKS5vbmNsaWNrPW9uQnRuX3N1cmU7XHJcbiAgICBmdW5jdGlvbiBvbkJ0bl9zdXJlKCl7XHJcbiAgICAgICAgb25Db250aW51ZSgpO1xyXG4gICAgfVxyXG5cclxufVxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICAgICAgPHAgY2xhc3M9XCJ0aXRsZVwiPuivt+aPkuWFpeaCqOeahOmTtuihjOWNoTwvcD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIngtaHNnaWZcIj5cclxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiXCI+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8RU1CRUQgbmFtZT1cIlZpZXdTb3VuZFwiIFNSQz1cIndhdi/or7fmj5LlhaXmgqjnmoTpk7booYzljaEud2F2XCIgTG9vcD1mYWxzZSBBVVRPU1RBUlQ9dHJ1ZSBIaWRkZW49dHJ1ZSBNQVNURVJTT1VORD48L0VNQkVEPlxyXG4gICAgPC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHN0eWxlIHNjb3BlZD5cclxuLngtaHNnaWZ7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgbWFyZ2luOiAwJSBhdXRvO1xyXG59XHJcbi54LWhzZ2lmIGltZ3tcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbjwvc3R5bGU+XHJcbjxzY3JpcHQ+XHJcbiBleHBvcnQgZGVmYXVsdCB7XHJcbiAgICBtb3VudGVkICgpIHsgXHJcblxyXG4gICAgICBEYXRhVG9vbHMuZ2V0KFwiR0RfQTAxX0N1c3RfTWVkaWFUeXBlXCIsZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICBcclxuICAgICAgICAgICAgc3dpdGNoKGRhdGFbMF0pe1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcIjFcIjpcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLnRpdGxlXCIpLmh0bWwoXCLor7fmj5LlhaXmgqjnmoTpk7booYzljaFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi54LWhzZ2lmIGltZ1wiKS5hdHRyKFwic3JjXCIsXCJpbWcvSW5zZXJ0TVNDYXJkLmdpZlwiKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgXCIyXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi50aXRsZVwiKS5odG1sKFwi6K+35o+S5YWl5oKo55qE6ZO26KGM5Y2hXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIueC1oc2dpZiBpbWdcIikuYXR0cihcInNyY1wiLFwiaW1nL0luc2VydElDQ2FyZC5naWZcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiM1wiOlxyXG4gICAgICAgICAgICAgICAgICAgICQoXCIudGl0bGVcIikuaHRtbChcIuivt+WwhuaCqOeahOmTtuihjOWNoeaUvue9ruS6juivhuWIq+WMulwiKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLngtaHNnaWYgaW1nXCIpLmF0dHIoXCJzcmNcIixcImltZy9JbnNlcnRQSUNDYXJkLmdpZlwiKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgXCI0XCI6XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi50aXRsZVwiKS5odG1sKFwi6K+35o+S5YWl5oKo55qE5a2Y5oqYXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIueC1oc2dpZiBpbWdcIikuYXR0cihcInNyY1wiLFwiaW1nL0luc2VydFBhc3Nib29rLmdpZlwiKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi50aXRsZVwiKS5odG1sKFwi6K+35o+S5YWl5oKo55qE6ZO26KGM5Y2hXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIueC1oc2dpZiBpbWdcIikuYXR0cihcInNyY1wiLFwiaW1nL0luc2VydElDQ2FyZC5naWZcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG5cclxuIiwiPHRlbXBsYXRlPlxyXG48ZGl2IGNsYXNzPVwieC1tb2RhbFwiPlxyXG4gICAgPHAgY2xhc3M9XCJtb2RhbF90aXRsZVwiPui+k+WFpeivgeS7tuS/oeaBrzwvcD5cclxuICAgIDx1bCBjbGFzcz1cImRvY3VtZW50aW5mb2xpc3RcIj5cclxuICAgICAgICA8bGk+XHJcbiAgICAgICAgICAgIDxzcGFuPjxiIGNsYXNzPVwibXVzdFwiPio8L2I+6K+B5Lu257G75Z6L77yaPC9zcGFuPjxpbnB1dCBjbGFzcz1cImlucHV0X2RvY3VtZW50XCIgdHlwZT1cInRleHRcIiBpZD1cIkRvY3VtZW50VHlwZVwiIGRpc2FibGVkPVwidHJ1ZVwiIDp2YWx1ZT1cImRvY3VtZW50VHlwZVRleHRcIj5cclxuICAgICAgICA8L2xpPlxyXG4gICAgICAgIDxsaT5cclxuICAgICAgICAgICAgPHNwYW4+PGIgY2xhc3M9XCJtdXN0XCI+KjwvYj7or4Hku7blj7fnoIHvvJo8L3NwYW4+PGlucHV0IGNsYXNzPVwiaW5wdXRfZG9jdW1lbnRcIiB0eXBlPVwidGV4dFwiIGlkPVwiRG9jdW1lbnROb1wiIHYtbW9kZWw9XCJwb29sLkdEX051bVBpZFwiIEBmb2N1cz1cIm9uQ2xlYXJOdW1QaWRFcnJcIj5cclxuICAgICAgICAgICAgPGIgY2xhc3M9XCJlcnJvclwiIGlkPVwiRG9jdW1lbnROb0Vycm9yXCI+e3tOdW1QaWRFcnJ9fTwvYj5cclxuICAgICAgICA8L2xpPlxyXG4gICAgICAgIDxsaT5cclxuICAgICAgICAgICAgPHNwYW4+PGIgY2xhc3M9XCJtdXN0XCI+KjwvYj7lp5PlkI3vvJo8L3NwYW4+PGlucHV0IGNsYXNzPVwiaW5wdXRfZG9jdW1lbnRcIiB0eXBlPVwidGV4dFwiIGlkPVwiTmFtZVwiIHYtbW9kZWw9XCJwb29sLkdEX05hbUN1c3RcIiBAZm9jdXM9XCJvbkNsZWFyTmFtQ3VzdEVyclwiPlxyXG4gICAgICAgICAgICA8YiBjbGFzcz1cImVycm9yXCIgaWQ9XCJOYW1lRXJyb3JcIj57e05hbUN1c3RFcnJ9fTwvYj5cclxuICAgICAgICA8L2xpPlxyXG4gICAgPC91bD5cclxuICAgIDxkaXYgY2xhc3M9XCJtb2RhbF9idG5ib3hcIj5cclxuICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJhY2tidG5cIiBpZD1cIm1vZGFsX2J0bl9iYWNrXCIgQGNsaWNrPVwib25CYWNrXCI+5Y+WJm5ic3A7Jm5ic3A7Jm5ic3A75raIPC9idXR0b24+XHJcbiAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBzdXJlYnRuXCIgaWQ9XCJtb2RhbF9idG5fc3VyZVwiIEBjbGljaz1cIm9uU3VyZVwiPuehriZuYnNwOyZuYnNwOyZuYnNwO+WumjwvYnV0dG9uPlxyXG4gICAgPC9kaXY+XHJcbjwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG48c2NyaXB0PlxyXG5pbXBvcnQgeyBtYXBTdGF0ZSwgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBkYXRhICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBnZXRLZXlzOiBbXCJHRF9Db2RQaWRcIl0sXHJcbiAgICAgICAgICAgIHNldEtleXM6IFtcIkdEX051bVBpZFwiLCBcIkdEX05hbUN1c3RcIl0sXHJcbiAgICAgICAgICAgIE51bVBpZEVycjogXCJcIixcclxuICAgICAgICAgICAgTmFtQ3VzdEVycjogXCJcIlxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBjb21wdXRlZDoge1xyXG4gICAgICAgIGRvY3VtZW50VHlwZVRleHQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMucG9vbC5HRF9Db2RQaWQgPT0gXCJcIikgcmV0dXJuIFwiXCJcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZG9jdW1lbnRUeXBlT3B0aW9uc1t0aGlzLnBvb2wuR0RfQ29kUGlkXVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLi4ubWFwU3RhdGUoWydwb29sJywgJ2RvY3VtZW50VHlwZU9wdGlvbnMnXSlcclxuICAgIH0sXHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgICAgaW5pdFBhZ2UgKCkge1xyXG4gICAgICAgICAgICB0aGlzLmluaXRQb29sKHRoaXMuJGRhdGEpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkJhY2sgKCkge1xyXG4gICAgICAgICAgICAvLyAkKFwiI3BhZ2VQb3B1cFwiKS5mYWRlT3V0KCc1MDAnKTtcclxuICAgICAgICAgICAgcGFnZUxvZygn5Y+W5raILS0+JyArIG5ldyBEYXRlKCkpXHJcbiAgICAgICAgICAgIHRoaXMub25DYW5jZWwoKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25TdXJlICgpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLnZhbGlkYXRlKCkpIHJldHVyblxyXG4gICAgICAgICAgICAvLyAkKFwiI3BhZ2VQb3B1cFwiKS5mYWRlT3V0KCc1MDAnKTtcclxuICAgICAgICAgICAgdGhpcy5zdWJtaXQodGhpcy5zZXRLZXlzKVxyXG4gICAgICAgICAgICB0aGlzLm9uQ29udGludWUoKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdmFsaWRhdGUgKCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5wb29sLkdEX051bVBpZC5sZW5ndGggPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5OdW1QaWRFcnIgPSBcIuivt+i+k+WFpeaCqOeahOivgeS7tuWPt+eggVwiXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodGhpcy5wb29sLkdEX05hbUN1c3QubGVuZ3RoID09IDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuTmFtQ3VzdEVyciA9IFwi6K+36L6T5YWl5oKo55qE5aeT5ZCNXCJcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkNsZWFyTnVtUGlkRXJyICgpIHtcclxuICAgICAgICAgICAgdGhpcy5OdW1QaWRFcnIgPSBcIlwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkNsZWFyTmFtQ3VzdEVyciAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuTmFtQ3VzdEVyciA9IFwiXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIC4uLm1hcEFjdGlvbnMoWydpbml0UG9vbCcsICdmZXRjaCcsICdzdWJtaXQnLCAnb25DYW5jZWwnLCAnb25Db250aW51ZSddKVxyXG4gICAgfSxcclxuICAgIG1vdW50ZWQgKCkge1xyXG4gICAgICAgIHRoaXMuaW5pdFBhZ2UoKVxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PiIsInZhciBfX3Z1ZV9fb3B0aW9uc19fID0gKHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJmdW5jdGlvblwiPyBtb2R1bGUuZXhwb3J0cy5vcHRpb25zOiBtb2R1bGUuZXhwb3J0cylcbmlmIChfX3Z1ZV9fb3B0aW9uc19fLmZ1bmN0aW9uYWwpIHtjb25zb2xlLmVycm9yKFwiW3Z1ZWlmeV0gZnVuY3Rpb25hbCBjb21wb25lbnRzIGFyZSBub3Qgc3VwcG9ydGVkIGFuZCBzaG91bGQgYmUgZGVmaW5lZCBpbiBwbGFpbiBqcyBmaWxlcyB1c2luZyByZW5kZXIgZnVuY3Rpb25zLlwiKX1cbl9fdnVlX19vcHRpb25zX18ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3gtbGF5b3V0LW1haW4nLFtfYygnZGl2JyxbX2MoJ3AnLHtzdGF0aWNDbGFzczpcInRpdGxlXCJ9LFtfdm0uX3YoXCLor7fovpPlhaXmgqjnmoTlr4bnoIFcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIlBpbl9pbWdcIn0sW19jKCdpbWcnLHthdHRyczp7XCJzcmNcIjpfdm0uJHJvb3QuaW1nUGF0aCgnaW1nLycrX3ZtLiRyb290LmdldEltZ1BhdGgoKSsnSW5wdXRQaW4uZ2lmJyl9fSldKSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIlBpbl9pbnB1dFwifSxbX2MoJ3AnLFtfYygnaScsW192bS5fdihcIui0puWPt++8mlwiKV0pLF9jKCdzcGFuJyx7YXR0cnM6e1wiaWRcIjpcIkFjY291bnRcIn19KV0pLF92bS5fdihcIiBcIiksX2MoJ3AnLFtfYygnaScsW192bS5fdihcIuWvhuegge+8mlwiKV0pLF9jKCdpbnB1dCcse3N0YXRpY0NsYXNzOlwiaW5wdXRfUGluXCIsYXR0cnM6e1widHlwZVwiOlwicGFzc3dvcmRcIixcImlkXCI6XCJwYXNzd29yZFwiLFwibWF4bGVuZ3RoXCI6XCI2XCJ9fSldKSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIlBpbl90aXBzXCJ9LFtfYygncCcsW19jKCdpJyx7c3RhdGljU3R5bGU6e1wiY29sb3JcIjpcInJlZFwifX0sW192bS5fdihcIuWwiuaVrOeahOWuouaIt++8mlwiKV0pXSksX3ZtLl92KFwiIFwiKSxfYygncCcsW192bS5fdihcIjEu6K+35rOo5oSP5L+d5oqk5oKo55qE5a+G56CBLOmYsuatouiiq+WBt+eqpSzkuI3opoHlkJHku7vkvZXkurrpgI/pnLI7XCIpXSksX3ZtLl92KFwiIFwiKSxfYygncCcsW192bS5fdihcIjIu6K2m5oOV5o+S5Y2h5Y+jLOWvhueggemUruebmOWPiuacuui6q+WRqOWbtOaYr+WQpuWuieijheWPr+eWkeW8guW4uOijhee9rjtcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdwJyxbX3ZtLl92KFwiMy7kuLrkv53pmpzmgqjnmoTotYTph5Hlronlhags6LCo6Ziy5Yip55So55+t5L+h44CB55S16K+d562J5pa55byP6L+b6KGM55qE6L2s6LSm6K+I6aqX562J6L+d5rOV6KGM5Li6LOWmgumBh+eJueauiuaDheWGteivt+aLqOaJkzk1NTk55oiWMTEw44CCXCIpXSldKV0pXSksX3ZtLl92KFwiIFwiKSxfYygnRU1CRUQnLHthdHRyczp7XCJuYW1lXCI6XCJWaWV3U291bmRcIixcIlNSQ1wiOlwid2F2L+ivt+aCqOWcqOi+k+WFpeWvhueggeWJjeehruiupOWRqOi+ueeOr+Wig+aYr+WQpuWuieWFqC53YXZcIixcIkxvb3BcIjpcImZhbHNlXCIsXCJBVVRPU1RBUlRcIjpcInRydWVcIixcIkhpZGRlblwiOlwidHJ1ZVwiLFwiTUFTVEVSU09VTkRcIjpcIlwifX0pXSwxKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW11cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHsgIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIHRydWUpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi02YjMxNDQwMVwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtNmIzMTQ0MDFcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfVxufSkoKX0iLCJ2YXIgX192dWVfX29wdGlvbnNfXyA9ICh0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09IFwiZnVuY3Rpb25cIj8gbW9kdWxlLmV4cG9ydHMub3B0aW9uczogbW9kdWxlLmV4cG9ydHMpXG5pZiAoX192dWVfX29wdGlvbnNfXy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWVpZnldIGZ1bmN0aW9uYWwgY29tcG9uZW50cyBhcmUgbm90IHN1cHBvcnRlZCBhbmQgc2hvdWxkIGJlIGRlZmluZWQgaW4gcGxhaW4ganMgZmlsZXMgdXNpbmcgcmVuZGVyIGZ1bmN0aW9ucy5cIil9XG5fX3Z1ZV9fb3B0aW9uc19fLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCd4LWxheW91dC1tYWluJyxbX2MoJ0VNQkVEJyx7YXR0cnM6e1wibmFtZVwiOlwiVmlld1NvdW5kXCIsXCJTUkNcIjpcIndhdi/or7fmgqjlnKjovpPlhaXlr4bnoIHliY3noa7orqTlkajovrnnjq/looPmmK/lkKblronlhagud2F2XCIsXCJMb29wXCI6XCJmYWxzZVwiLFwiQVVUT1NUQVJUXCI6XCJ0cnVlXCIsXCJIaWRkZW5cIjpcInRydWVcIixcIk1BU1RFUlNPVU5EXCI6XCJcIn19KSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLFtfYygncCcse3N0YXRpY0NsYXNzOlwidGl0bGVcIn0sW192bS5fdihcIuivt+i+k+WFpeaCqOeahOWvhueggVwiKV0pLF92bS5fdihcIiBcIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiUGluX2ltZ1wifSxbX2MoJ2ltZycse2F0dHJzOntcInNyY1wiOl92bS4kcm9vdC5pbWdQYXRoKCdpbWcvJytfdm0uJHJvb3QuZ2V0SW1nUGF0aCgpKydJbnB1dFBpbi5naWYnKX19KV0pLF92bS5fdihcIiBcIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiUGluX2lucHV0XCJ9LFtfYygncCcsW19jKCdpJyxbX3ZtLl92KFwi6LSm5Y+377yaXCIpXSksX2MoJ3NwYW4nLHthdHRyczp7XCJpZFwiOlwiQWNjb3VudFwifX0pXSksX3ZtLl92KFwiIFwiKSxfYygncCcsW19jKCdpJyxbX3ZtLl92KFwi5a+G56CB77yaXCIpXSksX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6XCJpbnB1dF9QaW5cIixhdHRyczp7XCJ0eXBlXCI6XCJwYXNzd29yZFwiLFwiaWRcIjpcInBhc3N3b3JkXCIsXCJtYXhsZW5ndGhcIjpcIjZcIn19KV0pLF92bS5fdihcIiBcIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiUGluX3RpcHNcIn0sW19jKCdwJyxbX2MoJ2knLHtzdGF0aWNTdHlsZTp7XCJjb2xvclwiOlwicmVkXCJ9fSxbX3ZtLl92KFwi5bCK5pWs55qE5a6i5oi377yaXCIpXSldKSxfdm0uX3YoXCIgXCIpLF9jKCdwJyxbX3ZtLl92KFwiMS7or7fms6jmhI/kv53miqTmgqjnmoTlr4bnoIEs6Ziy5q2i6KKr5YG356qlLOS4jeimgeWQkeS7u+S9leS6uumAj+mcsjtcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdwJyxbX3ZtLl92KFwiMi7orabmg5Xmj5LljaHlj6Ms5a+G56CB6ZSu55uY5Y+K5py66Lqr5ZGo5Zu05piv5ZCm5a6J6KOF5Y+v55aR5byC5bi46KOF572uO1wiKV0pLF92bS5fdihcIiBcIiksX2MoJ3AnLFtfdm0uX3YoXCIzLuS4uuS/nemanOaCqOeahOi1hOmHkeWuieWFqCzosKjpmLLliKnnlKjnn63kv6HjgIHnlLXor53nrYnmlrnlvI/ov5vooYznmoTovazotKbor4jpqpfnrYnov53ms5XooYzkuLos5aaC6YGH54m55q6K5oOF5Ya16K+35ouo5omTOTU1OTnmiJYxMTDjgIJcIildKV0pXSldKV0sMSl9XG5fX3Z1ZV9fb3B0aW9uc19fLnN0YXRpY1JlbmRlckZucyA9IFtdXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7ICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCB0cnVlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtNjZlNzgzZTJcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LTY2ZTc4M2UyXCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH1cbn0pKCl9IiwidmFyIF9fdnVlX19vcHRpb25zX18gPSAodHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcImZ1bmN0aW9uXCI/IG1vZHVsZS5leHBvcnRzLm9wdGlvbnM6IG1vZHVsZS5leHBvcnRzKVxuaWYgKF9fdnVlX19vcHRpb25zX18uZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlaWZ5XSBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgYW5kIHNob3VsZCBiZSBkZWZpbmVkIGluIHBsYWluIGpzIGZpbGVzIHVzaW5nIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuX192dWVfX29wdGlvbnNfXy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygneC1sYXlvdXQtbWFpbicsW19jKCdwJyx7c3RhdGljQ2xhc3M6XCJ0aXRsZVwifSxbX3ZtLl92KFwi5a+G56CB6ZSZ6K+v5o+Q56S677yI6Z2e5LiJ5qyh77yJXCIpXSldKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW11cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHsgIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIHRydWUpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi0yMjBhNDhiN1wiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtMjIwYTQ4YjdcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfVxufSkoKX0iLCI8dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj7lrqLmiLfor4Hku7botYTmlpnloavlhpk8L3A+XHJcbiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9XCJ1bGluZm9fZm9ybVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxsaT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImluZm9oYWxmXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7lp5PlkI3vvJo8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBjbGFzcz1cImlucHV0X2luZm9cIiBpZD1cIk5hbUN1c3RcIiBkaXNhYmxlZD1cInRydWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbmZvaGFsZlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+6K+B5Lu25Y+356CB77yaPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJpbnB1dF9pbmZvXCIgaWQ9XCJOdW1QaWRcIiBkaXNhYmxlZD1cInRydWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgICAgICAgICA8bGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbmZvaGFsZlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+6K+B5Lu257G75Z6L77yaPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJpbnB1dF9pbmZvXCIgaWQ9XCJDb2RQaWRcIiBkaXNhYmxlZD1cInRydWVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbmZvaGFsZlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+PGIgY2xhc3M9XCJtdXN0XCI+KjwvYj7or4Hku7bmnInmlYjmnJ/vvJo8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBjbGFzcz1cImlucHV0X2luZm9cIiBpZD1cIkRhdGVDZXJ0QmduXCJzdHlsZT1cIndpZHRoOjI4JTtcIj4tXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBjbGFzcz1cImlucHV0X2luZm9cIiBpZD1cIkRhdGVDZXJ0RW5kXCIgc3R5bGU9XCJ3aWR0aDoyOCU7XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW5mb2hhbGZcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPjxiIGNsYXNzPVwibXVzdFwiPio8L2I+5Zu957GN77yaPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJpbnB1dF9pbmZvXCIgaWQ9XCJDb2RDb3VudHJ5XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW5mb2hhbGZcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPjxiIGNsYXNzPVwibXVzdFwiPio8L2I+5rCR5peP77yaPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJpbnB1dF9pbmZvXCIgaWQ9XCJDb2ROYXRpb25cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgICAgICAgICA8bGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbmZvaGFsZlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+PGIgY2xhc3M9XCJtdXN0XCI+KjwvYj7lh7rnlJ/ml6XmnJ/vvJo8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBjbGFzcz1cImlucHV0X2luZm9cIiBpZD1cIkJpcnRoZGF5XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW5mb2hhbGZcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPuaAp+WIq++8mjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpb2JveFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgbmFtZT1cIlNleFwiIGNsYXNzPVwicmFkaW9BY2NvdW50XCIgaWQ9XCJNYW5cIiB2YWx1ZT1cIueUt1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiTWFuXCI+4oiaPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDnlLdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpb2JveFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgbmFtZT1cIlNleFwiIGNsYXNzPVwicmFkaW9BY2NvdW50XCIgaWQ9XCJXb21hblwiIHZhbHVlPVwi5aWzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJXb21hblwiPuKImjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5aWzXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2k+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ0bmJveFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYmFja2J0blwiIGlkPVwiYnRuX2JhY2tcIj7ov5QmbmJzcDsmbmJzcDsmbmJzcDvlm548L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG5cIiBpZD1cImJ0bl9zdXJlXCI+56GuJm5ic3A7Jm5ic3A7Jm5ic3A75a6aPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuPHN0eWxlIHNjb3BlZD5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTI4MHB4KSB7IFxyXG4uaW5mb2hhbGYge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbn1cclxuXHJcbn1cclxuPC9zdHlsZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxubW91bnRlZCAoKSB7XHJcblxyXG4gICAgICAgIERhdGFUb29scy5nZXQoXCJHRF9OYW1DdXN0fEdEX051bVBpZHxHRF9Db2RQaWR8R0RfRGF0ZUNlcnRCZ258R0RfRGF0ZUNlcnRFbmR8R0RfQ29kQ291bnRyeXxHRF9Db2ROYXRpb258R0RfQmlydGhkYXl8R0RfR2VuZGVyXCIsZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgIHZhciBpbmZvTGlzdCA9IFtdXHJcbiAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPGRhdGEubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgICAgaW5mb0xpc3RbaV0gPSBkYXRhW2ldO1xyXG4gICAgICAgICAgICAgICAgLy8gYWxlcnQoaW5mb0xpc3RbaV0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICQoJyNOYW1DdXN0JykudmFsKGluZm9MaXN0WzBdKTtcclxuICAgICAgICAgICAgJCgnI051bVBpZCcpLnZhbChpbmZvTGlzdFsxXSk7XHJcbiAgICAgICAgICAgIGlmKDExMDAyNSA9PSBpbmZvTGlzdFsyXSl7XHJcbiAgICAgICAgICAgICAgICQoJyNDb2RQaWQnKS52YWwoXCLlpJblm73miqTnhadcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZigxMTAwMjEgPT0gaW5mb0xpc3RbMl0pe1xyXG4gICAgICAgICAgICAgICAgJCgnI0NvZFBpZCcpLnZhbChcIuWPsOa5vuWxheawkeadpeW+gOWkp+mZhumAmuihjOivgVwiKTtcclxuICAgICAgICAgICAgfWVsc2UgaWYoMTEwMDE5ID09IGluZm9MaXN0WzJdKXtcclxuICAgICAgICAgICAgICAgICQoJyNDb2RQaWQnKS52YWwoXCLmuK/mvrPlsYXmsJHmnaXlvoDlhoXlnLDpgJrooYzor4FcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJCgnI0RhdGVDZXJ0QmduJykudmFsKGluZm9MaXN0WzNdKTtcclxuICAgICAgICAgICAgJCgnI0RhdGVDZXJ0RW5kJykudmFsKGluZm9MaXN0WzRdKTtcclxuICAgICAgICAgICAgJCgnI0NvZENvdW50cnknKS52YWwoaW5mb0xpc3RbNV0pO1xyXG4gICAgICAgICAgICAkKCcjQ29kTmF0aW9uJykudmFsKGluZm9MaXN0WzZdKTtcclxuICAgICAgICAgICAgJCgnI0JpcnRoZGF5JykudmFsKGluZm9MaXN0WzddKTtcclxuICAgICAgICAgICAgaWYoJ+eUtycgPT0gaW5mb0xpc3RbOF0pe1xyXG4gICAgICAgICAgICAgICAgJCgnI01hbicpLmF0dHIoJ2NoZWNrZWQnLCd0cnVlJyk7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKCflpbMnID09IGluZm9MaXN0WzhdKXtcclxuICAgICAgICAgICAgICAgICQoJyNXb21hbicpLmF0dHIoJ2NoZWNrZWQnLCd0cnVlJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICAvL+ehruWumuaMiemSruWkhOeQhuS6i+S7tlxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX3N1cmVcIikub25jbGljaz1vblN1cmU7XHJcbiAgICAgICAgZnVuY3Rpb24gb25TdXJlKCl7XHJcbiAgICAgICAgICAgIC8vc2V0VmFyKFwiXCIsJChcIiNGWkRlcGFydG1lbnRcIikudmFsKCkpO1xyXG4gICAgICAgICAgICBzZXRWYXIoXCJHRF9EYXRlQ2VydEJnblwiLCQoXCIjRGF0ZUNlcnRCZ25cIikudmFsKCkpO1xyXG4gICAgICAgICAgICBzZXRWYXIoXCJHRF9EYXRlQ2VydEVuZFwiLCQoXCIjRGF0ZUNlcnRFbmRcIikudmFsKCkpO1xyXG4gICAgICAgICAgICBzZXRWYXIoXCJHRF9Db2RDb3VudHJ5XCIsJChcIiNDb2RDb3VudHJ5XCIpLnZhbCgpKTtcclxuICAgICAgICAgICAgc2V0VmFyKFwiR0RfQ29kTmF0aW9uXCIsJChcIiNDb2ROYXRpb25cIikudmFsKCkpO1xyXG4gICAgICAgICAgICBzZXRWYXIoXCJHRF9CaXJ0aGRheVwiLCQoXCIjQmlydGhkYXlcIikudmFsKCkpO1xyXG4gICAgICAgICAgICBzZXRWYXIoXCJHRF9HZW5kZXJcIiwkKFwiaW5wdXRbbmFtZT0nU2V4J106Y2hlY2tlZFwiKS52YWwoKSk7XHJcbiAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9DT05USU5VRVwiKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8v6L+U5Zue5oyJ6ZKu5aSE55CG5LqL5Lu2XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fYmFja1wiKS5vbmNsaWNrPW9uQmFjaztcclxuICAgICAgICBmdW5jdGlvbiBvbkJhY2soKXtcclxuICAgICAgICAgICAgb25DYW5jZWwoKTtcclxuICAgICAgICB9XHJcblxyXG59XHJcbn1cclxuPC9zY3JpcHQ+XHJcbiIsIjx0ZW1wbGF0ZT5cclxuICAgIDx4LWxheW91dC1tYWluPlxyXG4gICAgICAgICAgICA8cCBjbGFzcz1cInRpdGxlXCI+6YCJ5oup5piv5ZCm5omT5Y2w5Yet5p2hPC9wPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnRuYm94XCI+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJhY2tidG5cIiBpZD1cImJ0bl9iYWNrXCI+5ZCmPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG5cIiBpZD1cImJ0bl9zdXJlXCI+5pivPC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgPC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbm1vdW50ZWQgKCkge1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fYmFja1wiKS5vbmNsaWNrPW9uQmFjaztcclxuICAgIGZ1bmN0aW9uIG9uQmFjaygpe1xyXG5cdFx0b25DYW5jZWwoKTtcclxuICAgIH1cclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX3N1cmVcIikub25jbGljaz1vblN1cmU7XHJcblx0ZnVuY3Rpb24gb25TdXJlKCl7XHJcblx0XHRvbkNvbnRpbnVlKCk7XHJcblx0fVxyXG5cclxufVxyXG59XHJcbjwvc2NyaXB0PiIsIjx0ZW1wbGF0ZT5cclxuICAgIDx4LWxheW91dC1tYWluPlxyXG4gICAgPC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgbW91bnRlZCAoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ3BhZ2UgbW91bnRlZCcpXHJcbiAgICB9LFxyXG4gICAgZGVzdHJveWVkICgpIHtcclxuICAgICAgICBjb25zb2xlLmxvZygncGFnZSBkZXN0cm95ZWQnKVxyXG4gICAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG5cclxuIiwiPCEtLSBUaGUgcmVmIGF0dHIgdXNlZCB0byBmaW5kIHRoZSBzd2lwZXIgaW5zdGFuY2UgLS0+XHJcbjx0ZW1wbGF0ZT5cclxuICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICDovpPlhaXmtYvor5U8aW5wdXQgIGlkPVwic2VhcmNoVGV4dDNcIiB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwi5p+l6K+i6L+H5rukXCIgb25jbGljaz1cIlNob3dQaW55aW5LQignLTEnLCctMScsJ3NlYXJjaFRleHQzJywnJylcIiBvbmJsdXI9XCJIaWRlS0IoKVwiPjwvaW5wdXQ+XHJcbiAgICA8eC1wYWdpbmF0aW9uIDp0b3RhbD1cIjY1XCIgOnBhZ2Utc2l6ZT1cIjhcIiBAY3VycmVudC1jaGFuZ2U9XCJvbkN1cnJlbnRDaGFuZ2VcIj48L3gtcGFnaW5hdGlvbj5cclxuICAgICA8eC1tYW55LWNob29zZSA6c2hvdz1cInNob3dQcm92aW5jZVwiIHRpdGxlPVwi55yB5biCXCJcclxuICAgICAgICAgIDpkYXRhPVwicHJvdmluY2VEYXRhXCJcclxuICAgICAgICAgIEBjYW5jZWw9XCJvbk1hbnlDYW5jZWxcIiBAY29uZmlybT1cIm9uQ2hvb3NlUHJvdmluY2VcIj5cclxuICAgICA8L3gtbWFueS1jaG9vc2U+XHJcbiAgICAgPHgtbWFueS1jaG9vc2UgOnNob3c9XCJzaG93Q2l0eVwiIHRpdGxlPVwi5biC5Y6/XCJcclxuICAgICAgICAgIDpkYXRhPVwiY2l0eURhdGFcIlxyXG4gICAgICAgICAgOnVwPVwidHJ1ZVwiXHJcbiAgICAgICAgICBAdXA9XCJvblVwUHJvdmluY2VcIlxyXG4gICAgICAgICAgQGNhbmNlbD1cIm9uTWFueUNhbmNlbFwiIEBjb25maXJtPVwib25DaG9vc2VDaXR5XCI+XHJcbiAgICAgPC94LW1hbnktY2hvb3NlPlxyXG4gICAgIDx4LW11bHRpLWxldmVsIDpzaG93PVwic2hvd0xldmVsXCIgdGl0bGU9XCLnnIHluIJcIlxyXG4gICAgICAgICAgOnZhbHVlPVwidmFsdWVcIiA6ZGF0YT1cInByb3ZpbmNlRGF0YVwiXHJcbiAgICAgICAgICBAcmVzdWx0PVwib25SZXN1bHRcIlxyXG4gICAgICAgICAgQGNhbmNlbD1cIm9uTWFueUNhbmNlbFwiIEBjb25maXJtPVwib25DaG9vc2VMZXZlbFwiPlxyXG4gICAgIDwveC1tdWx0aS1sZXZlbD5cclxuICAgIDxkaXYgY2xhc3M9XCJtb2RhbF9idG5ib3hcIj5cclxuICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJhY2tidG5cIiBpZD1cIm1vZGFsX2J0bl9iYWNrXCIgQGNsaWNrPVwibWFueVRlc3RcIj5NYW55Q2hvb3NlPC9idXR0b24+XHJcbiAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBzdXJlYnRuXCIgaWQ9XCJtb2RhbF9idG5fc3VyZVwiIEBjbGljaz1cImxldmVsVGVzdFwiPk11bHRpTGV2ZWw8L2J1dHRvbj5cclxuICAgIDwvZGl2PlxyXG4gIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCB7IG1hcFN0YXRlLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBkYXRhKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgZ2V0S2V5czogWydHRF9BMDFfQXJlYURhdGEnXSxcclxuICAgICAgY2l0eURhdGE6IFtdLFxyXG4gICAgICB2YWx1ZTogXCIxNjEyXCIsXHJcbiAgICAgIHNob3dMZXZlbDogZmFsc2UsXHJcbiAgICAgIHNob3dQcm92aW5jZTogZmFsc2UsXHJcbiAgICAgIHNob3dDaXR5OiBmYWxzZVxyXG4gICAgfVxyXG4gIH0sXHJcbiAgY29tcHV0ZWQ6IHtcclxuICAgICAgcHJvdmluY2VEYXRhOiBmdW5jdGlvbigpIHtcclxuICAgICAgICBpZighdGhpcy5wb29sLmhhc093blByb3BlcnR5KCdHRF9BMDFfQXJlYURhdGEnKSkgcmV0dXJuIFtdXHJcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodGhpcy5wb29sLkdEX0EwMV9BcmVhRGF0YSlcclxuICAgICAgfSxcclxuICAgICAgLi4ubWFwU3RhdGUoWydwb29sJ10pXHJcbiAgfSxcclxuICBtZXRob2RzOiB7XHJcbiAgICBtYW55VGVzdCAoKSB7XHJcbiAgICAgIHRoaXMuc2hvd1Byb3ZpbmNlID0gdHJ1ZVxyXG4gICAgfSxcclxuICAgIGxldmVsVGVzdCAoKSB7XHJcbiAgICAgIHRoaXMuc2hvd0xldmVsID0gdHJ1ZVxyXG4gICAgfSxcclxuICAgIG9uTWFueUNhbmNlbCAoKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdvbk1hbnlDYW5jZWwnKVxyXG4gICAgICB0aGlzLnNob3dQcm92aW5jZSA9IGZhbHNlXHJcbiAgICAgIHRoaXMuc2hvd0NpdHkgPSBmYWxzZVxyXG4gICAgICB0aGlzLnNob3dMZXZlbCA9IGZhbHNlO1xyXG4gICAgfSxcclxuICAgIG9uQ2hvb3NlUHJvdmluY2UgKGluZGV4LCBpdGVtKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdvbkNob29zZVByb3ZpbmNlICcgKyBpbmRleClcclxuICAgICAgY29uc29sZS5sb2coaXRlbSlcclxuICAgICAgdGhpcy5zaG93UHJvdmluY2UgPSBmYWxzZVxyXG4gICAgICB0aGlzLmNpdHlEYXRhID0gaXRlbS5DXHJcbiAgICAgIHRoaXMuc2hvd0NpdHkgPSB0cnVlXHJcbiAgICB9LFxyXG4gICAgb25DaG9vc2VMZXZlbCAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgY29uc29sZS5sb2coJ29uQ2hvb3NlTGV2ZWwgJyArIGluZGV4KVxyXG4gICAgICB0aGlzLnNob3dMZXZlbCA9IGZhbHNlXHJcbiAgICB9LFxyXG4gICAgb25SZXN1bHQgKHJlc3VsdCkge1xyXG4gICAgICBjb25zb2xlLmxvZyhyZXN1bHQpXHJcbiAgICB9LFxyXG4gICAgb25VcFByb3ZpbmNlICgpIHtcclxuICAgICAgdGhpcy5zaG93Q2l0eSA9IGZhbHNlXHJcbiAgICAgIHRoaXMuc2hvd1Byb3ZpbmNlID0gdHJ1ZVxyXG4gICAgfSxcclxuICAgIG9uQ2hvb3NlQ2l0eSAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgdGhpcy5zaG93Q2l0eSA9IGZhbHNlXHJcbiAgICAgIGNvbnNvbGUubG9nKCdvbkNob29zZUNpdHkgJyArIGluZGV4KVxyXG4gICAgICBjb25zb2xlLmxvZyhpdGVtKVxyXG4gICAgfSxcclxuICAgIG9uQ3VycmVudENoYW5nZSAocGFnZU51bSkge1xyXG4gICAgICBjb25zb2xlLmxvZygnb25DdXJyZW50Q2hhbmdlJyArIHBhZ2VOdW0pO1xyXG4gICAgfSxcclxuICAgIC4uLm1hcEFjdGlvbnMoWydpbml0UG9vbCcsICdmZXRjaCcsICdzdWJtaXQnLCAnb25DYW5jZWwnLCAnb25Db250aW51ZSddKVxyXG4gIH0sXHJcbiAgbW91bnRlZCgpIHtcclxuICAgIHRoaXMuaW5pdFBvb2wodGhpcy4kZGF0YSk7XHJcbiAgfVxyXG59XHJcbjwvc2NyaXB0PlxyXG5cclxuIiwidmFyIF9fdnVlX19vcHRpb25zX18gPSAodHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcImZ1bmN0aW9uXCI/IG1vZHVsZS5leHBvcnRzLm9wdGlvbnM6IG1vZHVsZS5leHBvcnRzKVxuaWYgKF9fdnVlX19vcHRpb25zX18uZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlaWZ5XSBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgYW5kIHNob3VsZCBiZSBkZWZpbmVkIGluIHBsYWluIGpzIGZpbGVzIHVzaW5nIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuX192dWVfX29wdGlvbnNfXy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygneC1sYXlvdXQtbWFpbicsW19jKCdwJyx7c3RhdGljQ2xhc3M6XCJ0aXRsZVwifSxbX3ZtLl92KFwi6IGU572R5qC45p+lXCIpXSldKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW11cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHsgIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIHRydWUpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi1mYmZmMjZjMlwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtZmJmZjI2YzJcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfVxufSkoKX0iLCI8dGVtcGxhdGU+XHJcbjxkaXYgY2xhc3M9XCJ4LW1vZGFsXCI+XHJcbiAgICA8cCBjbGFzcz1cIm1vZGFsX3RpdGxlXCI+6K+35a6a5Yi25by55qGG5YaF5a65PC9wPlxyXG4gICAgPHVsIGNsYXNzPVwiZG9jdW1lbnRpbmZvbGlzdFwiPlxyXG4gICAgPC91bD5cclxuICAgIDxkaXYgY2xhc3M9XCJtb2RhbF9idG5ib3hcIj5cclxuICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJhY2tidG5cIiBpZD1cIm1vZGFsX2J0bl9iYWNrXCI+5Y+WJm5ic3A7Jm5ic3A7Jm5ic3A75raIPC9idXR0b24+XHJcbiAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBzdXJlYnRuXCIgaWQ9XCJtb2RhbF9idG5fc3VyZVwiPuehriZuYnNwOyZuYnNwOyZuYnNwO+WumjwvYnV0dG9uPlxyXG4gICAgPC9kaXY+XHJcbjwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbm1vdW50ZWQgKCkge1xyXG5cclxuXHJcbn1cclxufVxyXG48L3NjcmlwdD4iLCJ2YXIgX192dWVfX29wdGlvbnNfXyA9ICh0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09IFwiZnVuY3Rpb25cIj8gbW9kdWxlLmV4cG9ydHMub3B0aW9uczogbW9kdWxlLmV4cG9ydHMpXG5pZiAoX192dWVfX29wdGlvbnNfXy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWVpZnldIGZ1bmN0aW9uYWwgY29tcG9uZW50cyBhcmUgbm90IHN1cHBvcnRlZCBhbmQgc2hvdWxkIGJlIGRlZmluZWQgaW4gcGxhaW4ganMgZmlsZXMgdXNpbmcgcmVuZGVyIGZ1bmN0aW9ucy5cIil9XG5fX3Z1ZV9fb3B0aW9uc19fLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCd4LWxheW91dC1tYWluJyxbX2MoJ3AnLHtzdGF0aWNDbGFzczpcInRpdGxlXCJ9LFtfdm0uX3YoXCLkv6Hmga/mj5DnpLpcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdwJyx7c3RhdGljQ2xhc3M6XCJjZW50ZXJfdGl0bGVcIn0sW192bS5fdihcIuato+WcqOaJk+WNsOeUs+ivt+S5pu+8jOivt+eojeWAmS4uLi4uXCIpXSldKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW11cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHsgIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIHRydWUpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi0zYTg0MGI5N1wiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtM2E4NDBiOTdcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfVxufSkoKX0iLCJ2YXIgX192dWVfX29wdGlvbnNfXyA9ICh0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09IFwiZnVuY3Rpb25cIj8gbW9kdWxlLmV4cG9ydHMub3B0aW9uczogbW9kdWxlLmV4cG9ydHMpXG5pZiAoX192dWVfX29wdGlvbnNfXy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWVpZnldIGZ1bmN0aW9uYWwgY29tcG9uZW50cyBhcmUgbm90IHN1cHBvcnRlZCBhbmQgc2hvdWxkIGJlIGRlZmluZWQgaW4gcGxhaW4ganMgZmlsZXMgdXNpbmcgcmVuZGVyIGZ1bmN0aW9ucy5cIil9XG5fX3Z1ZV9fb3B0aW9uc19fLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCd4LWxheW91dC1tYWluJyxbX2MoJ3AnLHtzdGF0aWNDbGFzczpcInRpdGxlXCJ9LFtfdm0uX3YoXCLkv6Hmga/mj5DnpLpcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdwJyx7c3RhdGljQ2xhc3M6XCJjZW50ZXJfdGl0bGVcIn0sW192bS5fdihcIuivt+aUvuWFpeaCqOeahOe6uOi0qOeUs+ivt+S5plwiKV0pXSl9XG5fX3Z1ZV9fb3B0aW9uc19fLnN0YXRpY1JlbmRlckZucyA9IFtdXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7ICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCB0cnVlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtM2UyODVjMTZcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LTNlMjg1YzE2XCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH1cbn0pKCl9IiwidmFyIF9fdnVlX19vcHRpb25zX18gPSAodHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcImZ1bmN0aW9uXCI/IG1vZHVsZS5leHBvcnRzLm9wdGlvbnM6IG1vZHVsZS5leHBvcnRzKVxuaWYgKF9fdnVlX19vcHRpb25zX18uZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlaWZ5XSBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgYW5kIHNob3VsZCBiZSBkZWZpbmVkIGluIHBsYWluIGpzIGZpbGVzIHVzaW5nIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuX192dWVfX29wdGlvbnNfXy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygneC1sYXlvdXQtbWFpbicsW19jKCdwJyx7c3RhdGljQ2xhc3M6XCJ0aXRsZVwifSxbX3ZtLl92KFwi5oKo55qE5Y2h5bey6KKr5Zue5pS277yM6K+35LiO6ZO26KGM6IGU57O7XCIpXSksX3ZtLl92KFwiIFwiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJoc2dpZlwifSxbX2MoJ2ltZycse2F0dHJzOntcInNyY1wiOl92bS4kcm9vdC5pbWdQYXRoKCdpbWcvJytfdm0uJHJvb3QuZ2V0SW1nUGF0aCgpKydUYWtlQ2FyZC5naWYnKX19KV0pXSl9XG5fX3Z1ZV9fb3B0aW9uc19fLnN0YXRpY1JlbmRlckZucyA9IFtdXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7ICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCB0cnVlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtNjRmNzljMmRcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LTY0Zjc5YzJkXCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH1cbn0pKCl9IiwiXHJcbjxzdHlsZSBzY29wZWQ+XHJcbi5hdWRpdG9yQ3tcclxuXHRib3JkZXI6IDBweCBzb2xpZCAjMDA4QjZFO1xyXG5cdHdpZHRoOiA2MCU7XHJcblx0aGVpZ2h0OiA3MCU7XHJcblx0bWFyZ2luOjUwcHggYXV0bztcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGp1c3RpZnktY29udGVudDpjZW50ZXI7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlclxyXG59XHJcbi5hdWRpdG9yQyBpbWd7XHJcblx0d2lkdGg6NTAlO1xyXG59XHJcbi5hdWRpdG9yY1J7XHJcblxyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHR3aWR0aDoxOCU7XHJcblx0aGVpZ2h0OiA0MCU7XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1x0XHJcblx0cmlnaHQ6MC44JTtcclxuXHRib3R0b206IDElO1xyXG59XHJcbi5hdWRpdG9yY1IgaW1ne1xyXG5cdHdpZHRoOjk1JTtcdFxyXG59XHJcbjwvc3R5bGU+XHJcbjx0ZW1wbGF0ZT5cclxuICAgIDx4LWxheW91dC1tYWluPlxyXG4gICAgICAgICAgICA8cCBjbGFzcz1cInRpdGxlXCIgaWQ9XCJSZW1vdGVUaXBzXCI+6Lqr5Lu95a6h5qC45o6S6Zif5Lit77yM6K+356iN5YCZPC9wPlxyXG4gXHRcdFx0PGRpdiBjbGFzcz1cImF1ZGl0b3JDXCI+XHJcblx0XHRcdFx0IDxpbWcgc3JjPVwiaW1nL2xvYWRpbmcuZ2lmXCI+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8ZGl2IGNsYXNzPVwiYXVkaXRvcmNSXCI+XHJcblx0XHQgICBcdFx0PGltZyBpZCA9IFwiaWRjX2ltZ1wiIHNyYz1cImltZy/lrqHmoLjlkZgucG5nXCI+XHJcblx0XHRcdDwvZGl2PlxyXG4gXHJcblx0XHQ8RU1CRUQgbmFtZT1cIlZpZXdTb3VuZFwiIDpzcmM9XCJzb3VuZFwiIExvb3A9ZmFsc2UgQVVUT1NUQVJUPXRydWUgSGlkZGVuPXRydWUgTUFTVEVSU09VTkQ+PC9FTUJFRD5cclxuXHRcdDwhLS1kaXYgY2xhc3M9XCJtb2RhbF9idG5ib3hcIj5cclxuXHRcdFx0PGJ1dHRvbiBjbGFzcz1cImJ0biBiYWNrYnRuXCIgaWQ9XCJtb2RhbF9idG5fYmFja1wiIEBjbGljaz1cIm9uQmFja1wiPuWjsOmfszE8L2J1dHRvbj5cclxuXHRcdFx0PGJ1dHRvbiBjbGFzcz1cImJ0biBzdXJlYnRuXCIgaWQ9XCJtb2RhbF9idG5fc3VyZVwiIEBjbGljaz1cIm9uU3VyZVwiPuWjsOmfszI8L2J1dHRvbj5cclxuXHRcdDwvZGl2LS0+XHJcbiAgICA8L3gtbGF5b3V0LW1haW4+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHRkYXRhICgpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHNvdW5kOiBcIndhdi/mraPlnKjov5vooYzouqvku73lrqHmoLjvvIzor7fnqI3lkI4ud2F2XCJcclxuXHRcdH1cclxuXHR9LFxyXG5cdGNyZWF0ZWQgKCkge1xyXG5cdFx0dmFyIHZtID0gdGhpcztcclxuXHRcdFxyXG5cdFx0dGhpcy4kcm9vdC4kb24oJ1N5bkNhcmRPY3hfVmlkZW9PcGVuZWQnLCBvblZpZGVvT3BlbmVkKTtcclxuICAgICAgICBmdW5jdGlvbiBvblZpZGVvT3BlbmVkKCkge1xyXG5cdFx0XHQvLyQoXCIjU3luQ2FyZE9jeDFcIikuYXR0cignaGVpZ2h0JywgXCI1OC4wOCVcIikuYXR0cignd2lkdGgnLCBcIjQ0LjMlXCIpO1xyXG5cdFx0XHRTeW5fU2hvd1dpbmRvdygpO1xyXG5cdFx0XHQkKFwiI1JlbW90ZVRpcHNcIikuaHRtbChcIuato+WcqOi/m+ihjOi6q+S7veWuoeaguO+8jOivt+eojeWAmVwiKTtcclxuXHRcdH07XHJcblx0XHRcclxuXHRcdFxyXG5cdCAgICB0aGlzLiRyb290LiRvbignU3luQ2FyZE9jeF9WaWRlb0Nsb3NlZCcsIG9uVmlkZW9DbG9zZWQpO1xyXG4gICAgICAgIGZ1bmN0aW9uIG9uVmlkZW9DbG9zZWQoKSB7XHJcblx0XHRcdC8vJChcIiNTeW5DYXJkT2N4MVwiKS5hdHRyKCdoZWlnaHQnLCBcIjAlXCIpLmF0dHIoJ3dpZHRoJywgXCIwJVwiKTtcclxuXHRcdFx0U3luX0hpZGVXaW5kb3coKTtcclxuXHRcdH07XHJcblx0XHRcclxuXHRcdHRoaXMuJHJvb3QuJG9uKCdTeW5DYXJkT2N4X01zZ1JlY2VpdmVkJywgb25Nc2dSZWNlaXZlZCk7XHJcbiAgICAgICAgZnVuY3Rpb24gb25Nc2dSZWNlaXZlZChzdHJNc2cpIHtcclxuXHRcdFx0Ly9jb25zb2xlLmxvZygnU3luQ2FyZE9jeF9Nc2dSZWNlaXZlZC1vbjogJyArIHN0ck1zZyk7ICAgICAgXHJcblx0XHRcdC8vYWxlcnQoJ1N5bkNhcmRPY3hfTXNnUmVjZWl2ZWQtb246ICcgKyBzdHJNc2cpOyAgICAgXHJcblx0XHRcdGlmKHN0ck1zZyAhPSBcIlwiKXtcclxuXHRcdFx0XHR2YXIgYXJyc3RyID0gc3RyTXNnLnNwbGl0KFwifFwiKTtcclxuXHRcdFx0XHRpZihhcnJzdHIubGVuZ3RoIDwgMyl7XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0c2V0VmFyKFwiR0RfRXJyUmVhc29uXCIsXCJSZW1vdGVSZXRFcnJcIik7XHJcblx0XHRcdFx0XHRleGl0U2NlbmUoXCJTVEFfRkFJTFwiKTtcclxuXHRcdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHRcdGlmKGFycnN0ci5sZW5ndGggPj0gNSl7XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0XHRzZXRWYXIoXCJHRF9BMDFfQ2hrVXNyTnVtXCIsYXJyc3RyWzRdKTtcdFx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdFx0c2V0VmFyKFwiR0RfQTAxX0JVU19OVU1fVVJfSURDSEtcIixhcnJzdHJbNF0pO1x0XHRcdFx0XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHREYXRhVG9vbHMuZ2V0KFwiR0RfQTAxX0xDX1NlcmlhbE5vXCIsZnVuY3Rpb24oZGF0YTEpe1xyXG5cdFx0XHRcdFx0XHRpZihkYXRhMSA9PSBhcnJzdHJbMV0pe1xyXG5cdFx0XHRcdFx0XHRcdGlmKGFycnN0clswXSA9PSBcIjAwMlwiKVxyXG5cdFx0XHRcdFx0XHRcdHtcdFx0XHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRcdFx0XHRpZihhcnJzdHJbMl0gPT0gXCIwMDAwXCIpe1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR2YXIgYXJyRmlsZURJUiA9IFwiXCI7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHZhciBhcnJOdW1TZXFCdXNwcm9jID0gXCJcIjtcclxuXHRcdFx0XHRcdFx0XHRcdFx0Ly9EYXRhVG9vbHMuZ2V0KFwiQ19GaWxlRElSfEdEX0EwMV9MQ19TZXJpYWxOb1wiLGZ1bmN0aW9uKGRhdGEpe1xyXG5cdFx0XHRcdFx0XHRcdFx0XHREYXRhVG9vbHMuZ2V0KFwiQ19GaWxlRElSfEdEX0NvZFBpZFwiLGZ1bmN0aW9uKGRhdGEpe1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGFyckZpbGVESVIgPSBkYXRhWzBdO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHZhciBHRF9Db2RQaWQgPSBkYXRhWzFdO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGFyck51bVNlcUJ1c3Byb2MgPSBhcnJzdHJbMV07XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0dmFyIHN0clBpY0Rpcj1hcnJzdHJbM10rXCJcXFxcXCIrYXJyTnVtU2VxQnVzcHJvYztcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRjb25zb2xlLmxvZygnU3luQ2FyZE9jeF9Nc2dSZWNlaXZlZC1vbjogJyArIHN0clBpY0Rpcik7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly9hbGVydCgnU3luQ2FyZE9jeF9Nc2dSZWNlaXZlZC1vbjogJyArIHN0clBpY0Rpcik7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYoR0RfQ29kUGlkID09IFwiMTEwMDAxXCIpe1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly/luKblm73lvr3lm77niYdcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHNldFZhcihcIkdEX0EwMV9BcHBseXBpYzFcIixhcnJGaWxlRElSK3N0clBpY0RpciArXCIwNC5qcGdcIik7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvL+W4puS6uuWDj+WbvueJh1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0c2V0VmFyKFwiR0RfQTAxX0FwcGx5cGljMlwiLGFyckZpbGVESVIrc3RyUGljRGlyICtcIjAzLmpwZ1wiKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8v6IGU572R5qC45p+l5Zu+54mHXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRzZXRWYXIoXCJHRF9BMDFfQXBwbHlwaWMzXCIsYXJyRmlsZURJUitzdHJQaWNEaXIgK1wiMDIuanBnXCIpOyAgXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvL+W4puS6uuWDj+WbvueJh1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0c2V0VmFyKFwiR0RfQTAxX0FwcGx5cGljMVwiLGFyckZpbGVESVIrc3RyUGljRGlyICtcIjAyLmpwZ1wiKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8v5YW25LuWMVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0c2V0VmFyKFwiR0RfQTAxX0FwcGx5cGljMlwiLGFyckZpbGVESVIrc3RyUGljRGlyICtcIjAzLmpwZ1wiKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8v5YW25LuWMlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0c2V0VmFyKFwiR0RfQTAxX0FwcGx5cGljM1wiLGFyckZpbGVESVIrc3RyUGljRGlyICtcIjA0LmpwZ1wiKTsgIFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cdFx0XHRcdFx0XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHNldFZhcihcIkdEX0EwMV9BcHBseUNhbXBpY1NhdmVcIixhcnJGaWxlRElSK3N0clBpY0RpciArXCIwMS5qcGdcIik7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0dmFyIHN0ckZpbGVEaXIgPSBhcnJGaWxlRElSO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHN0ckZpbGVEaXIgPSBzdHJGaWxlRGlyLnJlcGxhY2UoL1xcXFxcXFxcL2csXCJcXFxcXCIpO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHN0ckZpbGVEaXIgPSBzdHJGaWxlRGlyLnJlcGxhY2UoL1xcXFwvZyxcIi9cIik7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYoc3RyRmlsZURpci5zdWJzdHIoLTEpICE9IFwiL1wiKVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHN0ckZpbGVEaXIgKz0gXCIvXCI7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHN0ckZpbGVEaXIgKz0gIChhcnJzdHJbM10rXCIvXCIrYXJyTnVtU2VxQnVzcHJvYytcIjAxLmpwZ1wiKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRwYWdlTG9nKFwiUGFnZSBTZXRWYWx1ZVtHRF9BMDFfRmluZ2VyU2hvd0NhbXBpY106XCIrc3RyRmlsZURpcik7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHNldFZhcihcIkdEX0EwMV9GaW5nZXJTaG93Q2FtcGljXCIsc3RyRmlsZURpcik7ICBcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRzZXRWYXIoXCJHRF9VRmlkXCIsYXJyc3RyWzNdKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRzZXRWYXIoXCJHRF9BMDFfQXBwbHlMb2dpbkZsYWdcIixcIjFcIik7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0c2V0VmFyKFwiR0RfQTAxX0JVU19JRE5fUlNUX0lEQ0hLXCIsXCIxXCIpO1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0dmFyIHN0ckhvdXJzID0gZGF0ZS5nZXRIb3VycygpO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHZhciBzdHJNaW51dGVzID0gZGF0ZS5nZXRNaW51dGVzKCk7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0dmFyIHN0clNlY29uZHMgPSBkYXRlLmdldFNlY29uZHMoKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRzdHJIb3VycyA9IChzdHJIb3Vycy5sZW5ndGggPT0gMSkgPyAoXCIwXCIrc3RySG91cnMpIDogc3RySG91cnM7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0c3RyTWludXRlcyA9IChzdHJNaW51dGVzLmxlbmd0aCA9PSAxKSA/IChcIjBcIitzdHJNaW51dGVzKSA6IHN0ck1pbnV0ZXM7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0c3RyU2Vjb25kcyA9IChzdHJTZWNvbmRzLmxlbmd0aCA9PSAxKSA/IChcIjBcIitzdHJTZWNvbmRzKSA6IHN0clNlY29uZHM7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0c2V0VmFyKFwiR0RfQTAxX0JVU19USU1FX0VORF9JRENIS1wiLHN0ckhvdXJzK3N0ck1pbnV0ZXMrc3RyU2Vjb25kcyk7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0ZXhpdFNjZW5lKFwiU1RBX0NPTlRJTlVFXCIpO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRzZXRWYXIoXCJHRF9FcnJSZWFzb25cIixhcnJzdHJbM10pO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHQvL2FsZXJ0KCdTeW5DYXJkT2N4X01zZ1JlY2VpdmVkLW9uOiBTZXJpYWxObz0nICsgYXJyc3RyWzFdKycsbXNnaWQ9JythcnJzdHJbMl0rJyxtc2c9JythcnJzdHJbM10pO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRzZXRWYXIoXCJHRF9BMDFfQlVTX1RYVF9SU05fSURDSEtcIixhcnJzdHJbM10pO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHZhciBzdHJIb3VycyA9IGRhdGUuZ2V0SG91cnMoKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0dmFyIHN0ck1pbnV0ZXMgPSBkYXRlLmdldE1pbnV0ZXMoKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0dmFyIHN0clNlY29uZHMgPSBkYXRlLmdldFNlY29uZHMoKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0c3RySG91cnMgPSAoc3RySG91cnMubGVuZ3RoID09IDEpID8gKFwiMFwiK3N0ckhvdXJzKSA6IHN0ckhvdXJzO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRzdHJNaW51dGVzID0gKHN0ck1pbnV0ZXMubGVuZ3RoID09IDEpID8gKFwiMFwiK3N0ck1pbnV0ZXMpIDogc3RyTWludXRlcztcclxuXHRcdFx0XHRcdFx0XHRcdFx0c3RyU2Vjb25kcyA9IChzdHJTZWNvbmRzLmxlbmd0aCA9PSAxKSA/IChcIjBcIitzdHJTZWNvbmRzKSA6IHN0clNlY29uZHM7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHNldFZhcihcIkdEX0EwMV9CVVNfVElNRV9FTkRfSURDSEtcIixzdHJIb3VycytzdHJNaW51dGVzK3N0clNlY29uZHMpO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRzZXRWYXIoXCJHRF9BMDFfQlVTX0lETl9SU1RfUFJPQ1wiLFwiNVwiKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0ZXhpdFNjZW5lKFwiU1RBX0ZBSUxcIik7XHJcblx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0XHRcdH1lbHNlIGlmKGFycnN0clswXSA9PSBcIjAwMVwiKXtcclxuXHRcdFx0XHRcdFx0XHRcdERhdGFUb29scy5nZXQoXCJDX0EwMV9EaWN0XzAwMDAwMDE3XCIsZnVuY3Rpb24oZGF0YSl7XHRcclxuXHRcdFx0XHRcdFx0XHRcdFx0aWYoZGF0YSAhPSBcIlwiKXtcdFx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR2YXIganNFcnJUaXAgPSBKU09OLnBhcnNlKGRhdGEpO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHZhciB0bXBTdHIgPVwiXCI7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBqc0VyclRpcC5sZW5ndGg7IGkrKykge1x0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoYXJyc3RyWzJdID09IGpzRXJyVGlwW2ldLk5VTV9JVEVNX0RJQykge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0bXBTdHIgPSBqc0VyclRpcFtpXS5WTFVfSVRFTV9ESUM7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vJChcIiNSZW1vdGVUaXBcIikuaHRtbCh0bXBTdHIpO1x0XHRcdFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZih0bXBTdHIgIT1cIlwiKXtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHZtLnBsYXlTb3VuZChhcnJzdHJbMl0gKyB0bXBTdHIpO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly9hbGVydChhcnJzdHJbMl0gKyBcIi5naWZcIik7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQkKFwiI2lkY19pbWdcIikuYXR0cihcInNyY1wiLFwiaW1nL2Noay9cIiArIGFycnN0clsyXSArIHRtcFN0ciArIFwiLmdpZlwiKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdCQoXCIjUmVtb3RlVGlwXCIpLmh0bWwoYXJyc3RyWzJdKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0XHRcdFx0XHR2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7XHJcblx0XHRcdFx0XHRcdFx0XHR2YXIgc3RySG91cnMgPSBkYXRlLmdldEhvdXJzKCk7XHJcblx0XHRcdFx0XHRcdFx0XHR2YXIgc3RyTWludXRlcyA9IGRhdGUuZ2V0TWludXRlcygpO1xyXG5cdFx0XHRcdFx0XHRcdFx0dmFyIHN0clNlY29uZHMgPSBkYXRlLmdldFNlY29uZHMoKTtcclxuXHRcdFx0XHRcdFx0XHRcdHN0ckhvdXJzID0gKHN0ckhvdXJzLmxlbmd0aCA9PSAxKSA/IChcIjBcIitzdHJIb3VycykgOiBzdHJIb3VycztcclxuXHRcdFx0XHRcdFx0XHRcdHN0ck1pbnV0ZXMgPSAoc3RyTWludXRlcy5sZW5ndGggPT0gMSkgPyAoXCIwXCIrc3RyTWludXRlcykgOiBzdHJNaW51dGVzO1xyXG5cdFx0XHRcdFx0XHRcdFx0c3RyU2Vjb25kcyA9IChzdHJTZWNvbmRzLmxlbmd0aCA9PSAxKSA/IChcIjBcIitzdHJTZWNvbmRzKSA6IHN0clNlY29uZHM7XHJcblx0XHRcdFx0XHRcdFx0XHRzZXRWYXIoXCJHRF9BMDFfQlVTX1RJTUVfRU5EX0lEQ0hLXCIsc3RySG91cnMrc3RyTWludXRlcytzdHJTZWNvbmRzKTtcclxuXHRcdFx0XHRcdFx0XHRcdHNldFZhcihcIkdEX0EwMV9CVVNfSUROX1JTVF9QUk9DXCIsXCI1XCIpO1xyXG5cdFx0XHRcdFx0XHRcdFx0ZXhpdFNjZW5lKFwiU1RBX0ZBSUxcIik7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHRcdFx0XHQvL3NldFZhcihcIkdEX0VyclJlYXNvblwiLFwiTENTZXJpYWxOb05vdFNhbWVcIik7XHJcblx0XHRcdFx0XHRcdFx0cGFnZUxvZyhcIkxDU2VyaWFsTm9Ob3RTYW1lIGVyciBHRF9BMDFfTENfU2VyaWFsTm86XCIrZGF0YTEgKyBcIiAsUmV0dXJuIE5vOlwiICsgYXJyc3RyWzFdKTtcclxuXHRcdFx0XHRcdFx0XHQvL2V4aXRTY2VuZShcIlNUQV9GQUlMXCIpO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0ICAgICBcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRcclxuXHRcdFx0XHRcclxuXHRcdFx0fSBcclxuXHRcdFx0XHJcblx0XHR9O1xyXG5cdFx0XHJcblx0XHR0aGlzLiRyb290LiRvbignYmVmb3JlUXVpdCcsIG9uQmVmb3JlUXVpdCk7XHJcbiAgICAgICAgZnVuY3Rpb24gb25CZWZvcmVRdWl0KCkge1xyXG5cdFx0XHRzZXRWYXIoXCJHRF9BMDFfQlVTX0lETl9SU1RfSURDSEtcIixcIjRcIik7XHJcblx0XHRcdHZhciBkYXRlID0gbmV3IERhdGUoKTtcclxuXHRcdFx0dmFyIHN0ckhvdXJzID0gZGF0ZS5nZXRIb3VycygpO1xyXG5cdFx0XHR2YXIgc3RyTWludXRlcyA9IGRhdGUuZ2V0TWludXRlcygpO1xyXG5cdFx0XHR2YXIgc3RyU2Vjb25kcyA9IGRhdGUuZ2V0U2Vjb25kcygpO1xyXG5cdFx0XHRzdHJIb3VycyA9IChzdHJIb3Vycy5sZW5ndGggPT0gMSkgPyAoXCIwXCIrc3RySG91cnMpIDogc3RySG91cnM7XHJcblx0XHRcdHN0ck1pbnV0ZXMgPSAoc3RyTWludXRlcy5sZW5ndGggPT0gMSkgPyAoXCIwXCIrc3RyTWludXRlcykgOiBzdHJNaW51dGVzO1xyXG5cdFx0XHRzdHJTZWNvbmRzID0gKHN0clNlY29uZHMubGVuZ3RoID09IDEpID8gKFwiMFwiK3N0clNlY29uZHMpIDogc3RyU2Vjb25kcztcclxuXHRcdFx0c2V0VmFyKFwiR0RfQTAxX0JVU19USU1FX0VORF9JRENIS1wiLHN0ckhvdXJzK3N0ck1pbnV0ZXMrc3RyU2Vjb25kcyk7XHJcbiAgICBcdFx0Ly8kKFwiI1N5bkNhcmRPY3gxXCIpLmF0dHIoJ2hlaWdodCcsIFwiMCVcIikuYXR0cignd2lkdGgnLCBcIjAlXCIpO1xyXG5cdFx0XHRTeW5fSGlkZVdpbmRvdygpO1xyXG5cdFx0fTtcclxuXHRcdFxyXG5cdFx0dGhpcy4kcm9vdC4kb24oJ2NhbmNlbFF1aXQnLCBvbkNhbmNlbFF1aXQpO1xyXG4gICAgICAgIGZ1bmN0aW9uIG9uQ2FuY2VsUXVpdCgpIHtcclxuXHRcdFx0Ly8kKFwiI1N5bkNhcmRPY3gxXCIpLmF0dHIoJ2hlaWdodCcsIFwiNTguMDglXCIpLmF0dHIoJ3dpZHRoJywgXCI0NC4zJVwiKTtcclxuXHRcdFx0U3luX1Nob3dXaW5kb3coKTtcclxuXHRcdH07XHJcblx0fSxcclxuXHRiZWZvcmVEZXN0cm95KCkge1xyXG5cdFx0Ly8kKFwiI1N5bkNhcmRPY3gxXCIpLmF0dHIoJ2hlaWdodCcsIFwiMCVcIikuYXR0cignd2lkdGgnLCBcIjAlXCIpO1xyXG5cdFx0U3luX0hpZGVXaW5kb3coKTtcclxuXHR9LFxyXG5cdGRlc3Ryb3llZCAoKSB7XHJcblx0XHR0aGlzLiRyb290LiRvZmYoJ1N5bkNhcmRPY3hfTXNnUmVjZWl2ZWQnKTtcclxuXHRcdHRoaXMuJHJvb3QuJG9mZignYmVmb3JlUXVpdCcpOyAgICAgXHJcbiAgICBcdHRoaXMuJHJvb3QuJG9mZignY2FuY2VsUXVpdCcpO1xyXG5cdFx0dGhpcy4kcm9vdC4kb2ZmKCdTeW5DYXJkT2N4X1ZpZGVvT3BlbmVkJyk7XHJcblx0XHR0aGlzLiRyb290LiRvZmYoJ1N5bkNhcmRPY3hfVmlkZW9DbG9zZWQnKTtcclxuXHR9LFxyXG5cdG1ldGhvZHM6IHtcclxuXHRcdHBsYXlTb3VuZDogZnVuY3Rpb24gUGxheShzb3VuZCkge1xyXG4gICAgXHRcdCQoXCIjRHluU291bmRfXCIpLnJlbW92ZSgpXHJcbiAgICBcdFx0JCgnYm9keScpLmFwcGVuZCgnPGVtYmVkIGlkPVwiRHluU291bmRfXCIgYXV0b3N0YXJ0PVwidHJ1ZVwiIGhpZGRlbj1cInRydWVcIiBzcmM9XCJ3YXYvJyArIHNvdW5kICsgJy53YXZcIiAvPicpO1xyXG5cdFx0fSxcclxuXHRcdG9uQmFjazogZnVuY3Rpb24gKCkge1xyXG5cdFx0XHR2YXIgdm0gPSB0aGlzO1xyXG5cdFx0XHR2bS5wbGF5U291bmQoXCLkuqTmmJPmraPlnKjov5vooYzvvIzor7fnqI3lkI7vvIFcIik7XHJcblx0XHR9LFxyXG5cdFx0b25TdXJlOiBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdHZhciB2bSA9IHRoaXM7XHJcblx0XHRcdHZtLnBsYXlTb3VuZChcIuato+WcqOi/m+ihjOi6q+S7veWuoeaguO+8jOivt+eojeWQjlwiKTtcclxuXHRcdH1cclxuXHR9LFx0XHJcblx0XHJcblx0bW91bnRlZCAoKSB7XHJcblx0XHQvLyQoXCIjU3luQ2FyZE9jeDFcIikuYXR0cignaGVpZ2h0JywgXCIwJVwiKS5hdHRyKCd3aWR0aCcsIFwiMCVcIik7XHJcblx0XHRTeW5fSGlkZVdpbmRvdygpO1xyXG5cdH1cdFxyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCI8c3R5bGUgc2NvcGVkPlxyXG4gICAgLmJveHtcclxuICAgICAgICAgICAgaGVpZ2h0OiA3NzVweDtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgICAgICB9XHJcbiAgICAudG9wLCAuYm90dG9te1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNDVweDtcclxuICAgIH1cclxuICAgIC5jYXJke1xyXG4gICAgICAgICAgICB3aWR0aDogNTk2cHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMjgwcHg7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICM4YWRkY2U7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggMjBweCBncmV5O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMzBweDtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDNyZW07XHJcbiAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgLkRvY2ltZ3tcclxuICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDIyNCwyNTAsMjQyLDAuNCk7XHJcbiAgICB9XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEzMDBweCkgeyBcclxuICAgIC5jYXJke1xyXG4gICAgICAgICAgICB3aWR0aDogNDgwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMjUwcHg7XHJcbiAgICAgICAgfVxyXG59XHJcbiAgICAuY2FyZGJveHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgLmNhcmRib3ggZGl2e1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0NiU7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICM4YWRkY2U7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggMjBweCBncmV5O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGltZ3tcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogNDBweDtcclxuICAgICAgICB9XHJcbjwvc3R5bGU+XHJcblxyXG48dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICA8cCBjbGFzcz1cInRpdGxlXCI+6YCJ5oup6K+B5Lu257G75Z6LPC9wPlxyXG5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiYm94XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0b3BcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkIERvY2ltZ1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiaW1nL+S6jOS7o+i6q+S7veivgS5wbmdcIiBhbHQ9XCJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8cCB2YWx1ZSA9XCIxMTAwMDFcIj7kuozku6Pouqvku73or4E8L3A+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkIERvY2ltZ1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiaW1nL+a4r+a+s+WxheawkeadpeW+gOWGheWcsOmAmuihjOivgS5wbmdcIiBhbHQ9XCJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8cCB2YWx1ZSA9XCIxMTAwMTlcIj7muK/mvrPlsYXmsJHmnaXlvoDlhoXlnLDpgJrooYzor4E8L3A+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJib3R0b21cIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkIERvY2ltZ1wiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiaW1nL+WPsOa5vuWxheawkeadpeW+gOWkp+mZhumAmuihjOivgS5wbmdcIiBhbHQ9XCJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8cCB2YWx1ZSA9XCIxMTAwMjFcIj7lj7Dmub7lsYXmsJHmnaXlvoDlpKfpmYbpgJrooYzor4E8L3A+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkIGNhcmRib3hcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiRG9jaW1nXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiaW1nL+WkluWbveS6uuawuOS5heWxheeVmeivgS5wbmdcIiBhbHQ9XCJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHAgdmFsdWUgPVwiMTEwMDM3XCI+5aSW5Zu95Lq6PGJyPuawuOS5heWxheeVmeivgTwvcD5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiRG9jaW1nXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiaW1nL+WkluWbveaKpOeFpy5wbmdcIiBhbHQ9XCJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHAgdmFsdWUgPVwiMTEwMDI1XCI+5aSW5Zu95oqk54WnPC9wPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICBcclxuIFxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjwhLS3ngrnlh7vmkJzntKLljLrln5/lvLnlh7rmqKHmgIHmoYYtLT5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5tb3VudGVkICgpIHtcclxuICAgIC8v6K+B5Lu26YCJ5oup5Y2V6YCJ5LqL5Lu25aSE55CGXHJcbiAgICAkKFwiLkRvY2ltZ1wiKS5vbignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xyXG4gICAgICAgIC8v6I635Y+W6K+B5Lu257G75Z6L5qCH5b+XXHJcbiAgICAgICAgdmFyIERvY3VtZW50VHlwZSA9ICQodGhpcykuZmluZCgncCcpLmF0dHIoJ3ZhbHVlJyk7XHJcbiAgICAgICAgJChcIi5Eb2NpbWdcIikuY3NzKFwiYmFja2dyb3VuZFwiLFwicmdiYSgyMjQsMjUwLDI0MiwwLjQpXCIpO1xyXG4gICAgICAgICQodGhpcykuY3NzKFwiYmFja2dyb3VuZFwiLFwicmdiYSgxMzAsIDIxOSwgMjA2LDAuNClcIik7XHJcbiAgICAgICAgc2V0VmFyKFwiR0RfQ29kUGlkXCIsRG9jdW1lbnRUeXBlKTtcclxuICAgICAgICBzd2l0Y2goRG9jdW1lbnRUeXBlKXtcclxuICAgICAgICAgICAgY2FzZSBcIjExMDAwMVwiOlxyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiUF9Db2RDb3VudHJ5XCIsXCIxNTZcIik7XHJcbiAgICAgICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfSURDQVJEXCIpOyAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIjExMDAzN1wiOlxyXG4gICAgICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0ZPUkVJR05FUlwiKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiMTEwMDI1XCI6IGNhc2UgXCIxMTAwMTlcIjogY2FzZSBcIjExMDAyMVwiOlxyXG4gICAgICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX09USEVSXCIpO1xyXG4gICAgICAgICAgICAgICAgLy8kKCcjcGFnZVBvcHVwJykuZmFkZUluKDMwMCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9GQUlMXCIpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfSk7XHJcbn1cclxufVxyXG48L3NjcmlwdD5cclxuIiwiPHN0eWxlIHNjb3BlZD5cclxuICAgIC5ib3h7XHJcbiAgICAgICAgICAgIGhlaWdodDogNzc1cHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgLnRvcCwgLmJvdHRvbXtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDQ1cHg7XHJcbiAgICB9XHJcbiAgICAuY2FyZHtcclxuICAgICAgICAgICAgd2lkdGg6IDU5NnB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDI4MHB4O1xyXG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjOGFkZGNlO1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiAxcHggMXB4IDIwcHggZ3JleTtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzcmVtO1xyXG5cclxuICAgIH1cclxuICAgIC5Eb2NpbWd7XHJcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyMjQsMjUwLDI0MiwwLjQpO1xyXG4gICAgfVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMzAwcHgpIHsgXHJcbiAgICAuY2FyZHtcclxuICAgICAgICAgICAgd2lkdGg6IDQ4MHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDI1MHB4O1xyXG4gICAgICAgIH1cclxufVxyXG4gICAgLmNhcmRib3h7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgIC5jYXJkYm94IGRpdntcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB3aWR0aDogNDYlO1xyXG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjOGFkZGNlO1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiAxcHggMXB4IDIwcHggZ3JleTtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpbWd7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDQwcHg7XHJcbiAgICAgICAgfVxyXG48L3N0eWxlPlxyXG5cclxuPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcbiAgPHAgY2xhc3M9XCJ0aXRsZVwiPumAieaLqeivgeS7tuexu+WeizwvcD5cclxuXHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImJveFwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwidG9wXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZCBEb2NpbWdcIj5cclxuICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz1cImltZy/kuozku6Pouqvku73or4EucG5nXCIgYWx0PVwiXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHAgdmFsdWUgPVwiMTEwMDAxXCI+5LqM5Luj6Lqr5Lu96K+BPC9wPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PiBcclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICA8L3gtbGF5b3V0LW1haW4+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48IS0t54K55Ye75pCc57Si5Yy65Z+f5by55Ye65qih5oCB5qGGLS0+XHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxubW91bnRlZCAoKSB7XHJcbiAgICAvL+ivgeS7tumAieaLqeWNlemAieS6i+S7tuWkhOeQhlxyXG4gICAgJChcIi5Eb2NpbWdcIikub24oJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgICAvL+iOt+WPluivgeS7tuexu+Wei+agh+W/l1xyXG4gICAgICAgIHZhciBEb2N1bWVudFR5cGUgPSAkKHRoaXMpLmZpbmQoJ3AnKS5hdHRyKCd2YWx1ZScpO1xyXG4gICAgICAgICQoXCIuRG9jaW1nXCIpLmNzcyhcImJhY2tncm91bmRcIixcInJnYmEoMjI0LDI1MCwyNDIsMC40KVwiKTtcclxuICAgICAgICAkKHRoaXMpLmNzcyhcImJhY2tncm91bmRcIixcInJnYmEoMTMwLCAyMTksIDIwNiwwLjQpXCIpO1xyXG4gICAgICAgIHNldFZhcihcIkdEX0NvZFBpZFwiLERvY3VtZW50VHlwZSk7XHJcbiAgICAgICAgc2V0VmFyKFwiR0RfQTAxX0lEQ2FyZElzSUNcIixcIjBcIik7XHJcbiAgICAgICAgc3dpdGNoKERvY3VtZW50VHlwZSl7XHJcbiAgICAgICAgICAgIGNhc2UgXCIxMTAwMDFcIjpcclxuICAgICAgICAgICAgICAgIHNldFZhcihcIkdEX0EwMV9JRENhcmRJc0lDXCIsXCIxXCIpO1xyXG4gICAgICAgICAgICAgICAgc2V0VmFyKFwiUF9Db2RDb3VudHJ5XCIsXCIxNTZcIik7XHJcbiAgICAgICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfSURDQVJEXCIpOyBcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiMTEwMDM3XCI6XHJcbiAgICAgICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfRk9SRUlHTkVSXCIpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCIxMTAwMjVcIjogY2FzZSBcIjExMDAxOVwiOiBjYXNlIFwiMTEwMDIxXCI6XHJcbiAgICAgICAgICAgICAgICBleGl0U2NlbmUoXCJTVEFfT1RIRVJcIik7XHJcbiAgICAgICAgICAgICAgICAkKCcjcGFnZVBvcHVwJykuZmFkZUluKDMwMCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGV4aXRTY2VuZShcIlNUQV9GQUlMXCIpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfSk7XHJcbn1cclxufVxyXG48L3NjcmlwdD5cclxuIiwiPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRpdGxlXCI+6K+35qC45a+555Sz6K+35LmmPC9wPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cIndpZHRoOjEwMCU7IGhlaWdodDogNjByZW1cIj48L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ0bmJveFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG5cIiBpZD1cImJ0bl9iYWNrXCI+5LiNJm5ic3A75ZCMJm5ic3A75oSPPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIGlkPVwiYnRuX1pvb21PdXRcIj7nvKnlsI/vvIgt77yJPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0blwiIGlkPVwiYnRuX1pvb21JblwiPuaUvuWkp++8iCvvvIk8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuXCIgaWQ9XCJidG5fc3VyZVwiPuWQjCZuYnNwOyZuYnNwOyZuYnNwO+aEjzwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICA8L3gtbGF5b3V0LW1haW4+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5jcmVhdGVkICgpIHtcclxuXHR0aGlzLiRyb290LiRvbignYmVmb3JlUXVpdCcsIG9uQmVmb3JlUXVpdCk7XHJcbiAgICBmdW5jdGlvbiBvbkJlZm9yZVF1aXQoKSB7XHJcbiAgICAgICAgJChcIiNQREZWaWV3ZXJcIikuYXR0cignaGVpZ2h0JywgXCIwXCIpLmF0dHIoJ3dpZHRoJywgXCIwXCIpO1xyXG4gICAgfTtcclxuXHRcclxuXHR0aGlzLiRyb290LiRvbignY2FuY2VsUXVpdCcsIG9uQ2FuY2VsUXVpdCk7XHJcbiAgICBmdW5jdGlvbiBvbkNhbmNlbFF1aXQoKSB7XHJcbiAgICAgICAgc2V0VGltZW91dCggZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgJChcIiNQREZWaWV3ZXJcIikuYXR0cignaGVpZ2h0JywgXCI2MCVcIikuYXR0cignd2lkdGgnLCBcIjYwJVwiKTtcclxuICAgICAgICB9LCA1MDAgKTtcclxuICAgIH07XHJcbn0sXHJcbmJlZm9yZURlc3Ryb3koKXtcclxuICAgICQoXCIjUERGVmlld2VyXCIpLmF0dHIoJ2hlaWdodCcsIFwiMFwiKS5hdHRyKCd3aWR0aCcsIFwiMFwiKTtcclxufSxcclxuZGVzdHJveWVkICgpIHsgIFxyXG4gICAgdGhpcy4kcm9vdC4kb2ZmKCdiZWZvcmVRdWl0Jyk7ICAgICBcclxuICAgIHRoaXMuJHJvb3QuJG9mZignY2FuY2VsUXVpdCcpOyAgICAgICAgXHJcbn0sXHJcbm1vdW50ZWQgKCkge1xyXG5cdFx0c2V0VGltZW91dCggZnVuY3Rpb24oKXtcclxuXHRcdFx0dmFyIG5SZXQgPSBQREZWaWV3ZXIuT3BlbkZpbGUoXCJDOlxcXFxjc2FwXFxcXE5pc3BcXFxcY29uZlxcXFxQREZzXFxcXE9wZW5DYXJkLnBkZlwiKTtcclxuXHRcdFx0UERGVmlld2VyLlNldFZpZXdGaXQoXCIwXCIpO1xyXG4gICAgICAgIH0sIDEwMCApO1xyXG5cdFx0XHJcbiAgICAgICAgc2V0VGltZW91dCggZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgJChcIiNQREZWaWV3ZXJcIikuYXR0cignaGVpZ2h0JywgXCI2MCVcIikuYXR0cignd2lkdGgnLCBcIjYwJVwiKTtcclxuICAgICAgICB9LCA1MDAgKTtcclxuXHJcbiAgICAgICAgLy/noa7lrprmjInpkq7kuovku7blpITnkIZcdFx0XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fc3VyZVwiKS5vbmNsaWNrPW9uU3VyZTtcclxuICAgICAgICBmdW5jdGlvbiBvblN1cmUoKXtcclxuXHRcdFx0JChcIiNQREZWaWV3ZXJcIikuYXR0cignaGVpZ2h0JywgXCIwXCIpLmF0dHIoJ3dpZHRoJywgXCIwXCIpO1xyXG4gICAgICAgICAgICBvbkNvbnRpbnVlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8v6L+U5Zue5oyJ6ZKu5LqL5Lu25aSE55CGXHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fYmFja1wiKS5vbmNsaWNrPW9uQmFjaztcclxuICAgICAgICBmdW5jdGlvbiBvbkJhY2soKXtcclxuXHRcdFx0JChcIiNQREZWaWV3ZXJcIikuYXR0cignaGVpZ2h0JywgXCIwXCIpLmF0dHIoJ3dpZHRoJywgXCIwXCIpO1xyXG4gICAgICAgICAgICBvbkNhbmNlbCgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy/nvKnlsI9cclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bl9ab29tT3V0XCIpLm9uY2xpY2s9b25ab29tT3V0O1xyXG4gICAgICAgIGZ1bmN0aW9uIG9uWm9vbU91dCgpe1xyXG5cdFx0XHRQREZWaWV3ZXIuWm9vbU91dCgpOyAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICAvL+aUvuWkp1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX1pvb21JblwiKS5vbmNsaWNrPW9uWm9vbUluO1xyXG4gICAgICAgIGZ1bmN0aW9uIG9uWm9vbUluKCl7XHJcblx0XHRcdFBERlZpZXdlci5ab29tSW4oKTsgICAgICAgICAgICBcclxuICAgICAgICB9XHJcbn1cclxuXHJcbn1cclxuPC9zY3JpcHQ+XHJcbiIsIjx0ZW1wbGF0ZT5cclxuICAgIDx4LWxheW91dC1tYWluPlxyXG4gICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJ0aXRsZVwiPuS/oeaBr+aPkOekujwvcD5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwiY2VudGVyX3RpdGxlXCIgaWQ9XCJTaG93UmVhc29uXCI+PC9wPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ0bmJveFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYmFja2J0biBkaXNwX25vbmVcIiBpZD1cImJ0bl9iYWNrXCI+5Y+WJm5ic3A7Jm5ic3A7Jm5ic3A75Y2hPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBzdXJlYnRuIGRpc3Bfbm9uZVwiIGlkPVwiYnRuX3N1cmVcIj7nu6cmbmJzcDsmbmJzcDsmbmJzcDvnu608L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxFTUJFRCBuYW1lPVwiVmlld1NvdW5kXCIgU1JDPVwid2F2L+S6pOaYk+Wksei0pe+8jOivt+afpeeci+ivpuaDhe+8gS53YXZcIiBMb29wPWZhbHNlIEFVVE9TVEFSVD10cnVlIEhpZGRlbj10cnVlIE1BU1RFUlNPVU5EPjwvRU1CRUQ+ICAgICAgICBcclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxubW91bnRlZCAoKSB7XHJcbiAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0bl9iYWNrXCIpLm9uY2xpY2s9b25CYWNrO1xyXG5cdCAgICBmdW5jdGlvbiBvbkJhY2soKXtcclxuXHRcdFx0b25DYW5jZWwoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fc3VyZVwiKS5vbmNsaWNrPW9uU3VyZTtcclxuXHRcdGZ1bmN0aW9uIG9uU3VyZSgpe1xyXG5cdFx0XHRvbkNvbnRpbnVlKCk7XHJcblx0XHR9XHJcbn1cclxufVxyXG48L3NjcmlwdD5cclxuIiwiPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRpdGxlXCI+6K+35qC45a+555Sz6K+35Lmm5Y+K562+5ZCNPC9wPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cIndpZHRoOjEwMCU7IGhlaWdodDogNjByZW1cIj48L2Rpdj4gIFxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ0bmJveFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYmFja2J0blwiIGlkPVwiYnRuX2JhY2tcIj7kuI0mbmJzcDvlkIwmbmJzcDvmhI88L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG5cIiBpZD1cImJ0bl9SZVNpZ25cIj7ph43mlrDnrb7lkI08L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG5cIiBpZD1cImJ0bl9zdXJlXCI+5ZCMJm5ic3A7Jm5ic3A7Jm5ic3A75oSPPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuY3JlYXRlZCAoKSB7XHRcclxuXHJcblx0dGhpcy4kcm9vdC4kb24oJ2JlZm9yZVF1aXQnLCBvbkJlZm9yZVF1aXQpO1xyXG4gICAgZnVuY3Rpb24gb25CZWZvcmVRdWl0KCkge1xyXG4gICAgICAgJChcIiNQREZWaWV3ZXJcIikuYXR0cignaGVpZ2h0JywgXCIwXCIpLmF0dHIoJ3dpZHRoJywgXCIwXCIpO1xyXG4gICAgfTtcclxuXHRcclxuICAgIHRoaXMuJHJvb3QuJG9uKCdjYW5jZWxRdWl0Jywgb25DYW5jZWxRdWl0KTtcclxuICAgIGZ1bmN0aW9uIG9uQ2FuY2VsUXVpdCgpIHtcclxuICAgICAgICBzZXRUaW1lb3V0KCBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAkKFwiI1BERlZpZXdlclwiKS5hdHRyKCdoZWlnaHQnLCBcIjYwJVwiKS5hdHRyKCd3aWR0aCcsIFwiNjAlXCIpO1xyXG4gICAgICAgIH0sIDUwMCApO1xyXG4gICAgfTtcclxuXHJcbn0sXHJcbmJlZm9yZURlc3Ryb3koKXtcclxuICAgICQoXCIjUERGVmlld2VyXCIpLmF0dHIoJ2hlaWdodCcsIFwiMFwiKS5hdHRyKCd3aWR0aCcsIFwiMFwiKTtcclxufSxcclxuZGVzdHJveWVkICgpIHsgIFxyXG4gICAgdGhpcy4kcm9vdC4kb2ZmKCdiZWZvcmVRdWl0Jyk7ICAgICBcclxuICAgIHRoaXMuJHJvb3QuJG9mZignY2FuY2VsUXVpdCcpOyAgICAgICAgXHJcbn0sICAgIFxyXG5tb3VudGVkICgpIHtcclxuICAgICAgICB2YXIgblJldCA9IFBERlZpZXdlci5PcGVuRmlsZShcIkM6XFxcXGNzYXBcXFxcTmlzcFxcXFxjb25mXFxcXFBERnNcXFxcT3BlbkNhcmQucGRmXCIpO1xyXG4gICAgICAgIFBERlZpZXdlci5TZXRWaWV3Rml0KFwiMFwiKTtcclxuICAgICAgICBzZXRUaW1lb3V0KCBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAkKFwiI1BERlZpZXdlclwiKS5hdHRyKCdoZWlnaHQnLCBcIjYwJVwiKS5hdHRyKCd3aWR0aCcsIFwiNjAlXCIpO1xyXG4gICAgICAgIH0sIDUwMCApO1xyXG4gICAgICAgIC8v56Gu5a6a5oyJ6ZKu5LqL5Lu25aSE55CGXHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fc3VyZVwiKS5vbmNsaWNrPW9uU3VyZTtcclxuICAgICAgICBmdW5jdGlvbiBvblN1cmUoKXtcclxuXHRcdFx0JChcIiNQREZWaWV3ZXJcIikuYXR0cignaGVpZ2h0JywgXCIwXCIpLmF0dHIoJ3dpZHRoJywgXCIwXCIpO1xyXG4gICAgICAgICAgICBvbkNvbnRpbnVlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuX1JlU2lnblwiKS5vbmNsaWNrPW9uUmVTaWduO1xyXG4gICAgICAgIGZ1bmN0aW9uIG9uUmVTaWduKCl7XHJcblx0XHRcdCQoXCIjUERGVmlld2VyXCIpLmF0dHIoJ2hlaWdodCcsIFwiMFwiKS5hdHRyKCd3aWR0aCcsIFwiMFwiKTtcclxuICAgICAgICAgICAgZXhpdFNjZW5lKFwiU1RBX0JBQ0tcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8v6L+U5Zue5oyJ6ZKu5LqL5Lu25aSE55CGXHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fYmFja1wiKS5vbmNsaWNrPW9uQmFjaztcclxuICAgICAgICBmdW5jdGlvbiBvbkJhY2soKXtcclxuXHRcdFx0JChcIiNQREZWaWV3ZXJcIikuYXR0cignaGVpZ2h0JywgXCIwXCIpLmF0dHIoJ3dpZHRoJywgXCIwXCIpO1xyXG4gICAgICAgICAgICBvbkNhbmNlbCgpO1xyXG4gICAgICAgIH1cclxuXHJcbn1cclxufVxyXG48L3NjcmlwdD5cclxuIiwiPCEtLSBUaGUgcmVmIGF0dHIgdXNlZCB0byBmaW5kIHRoZSBzd2lwZXIgaW5zdGFuY2UgLS0+XHJcbjx0ZW1wbGF0ZT5cclxuICA8eC1sYXlvdXQtbWFpbj5cclxuXHRcdCA8ZGl2IGNsYXNzPVwiZ2NvdmVyXCI+PC9kaXY+XHJcblx0ICAgIDxkaXYgY2xhc3M9XCJjaXR5U2VsZWN0b3JcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNlbGVjdFNsaWRlXCI+PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwcm92aW5jZVwiPlxyXG4gICAgICAgICAgICAgICAgPHN3aXBlciA6b3B0aW9ucz1cInByb3ZpbmNlT3B0aW9uXCIgOm5vdC1uZXh0LXRpY2s9XCJub3ROZXh0VGlja1wiIHJlZj1cInByb3ZpbmNlU3dpcGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgIDxzd2lwZXItc2xpZGU+U2xpZGUgMTwvc3dpcGVyLXNsaWRlPlxyXG4gICAgICAgICAgICAgICAgICA8c3dpcGVyLXNsaWRlPlNsaWRlIDI8L3N3aXBlci1zbGlkZT5cclxuICAgICAgICAgICAgICAgICAgPHN3aXBlci1zbGlkZT5TbGlkZSAzPC9zd2lwZXItc2xpZGU+XHJcbiAgICAgICAgICAgICAgICAgIDxzd2lwZXItc2xpZGU+U2xpZGUgNDwvc3dpcGVyLXNsaWRlPlxyXG4gICAgICAgICAgICAgICAgICA8c3dpcGVyLXNsaWRlPlNsaWRlIDU8L3N3aXBlci1zbGlkZT5cclxuICAgICAgICAgICAgICAgICAgPHN3aXBlci1zbGlkZT5TbGlkZSA2PC9zd2lwZXItc2xpZGU+XHJcbiAgICAgICAgICAgICAgICAgIDxzd2lwZXItc2xpZGU+U2xpZGUgNzwvc3dpcGVyLXNsaWRlPlxyXG4gICAgICAgICAgICAgICAgICA8c3dpcGVyLXNsaWRlPlNsaWRlIDg8L3N3aXBlci1zbGlkZT5cclxuICAgICAgICAgICAgICAgICAgPHN3aXBlci1zbGlkZT5TbGlkZSA5PC9zd2lwZXItc2xpZGU+XHJcbiAgICAgICAgICAgICAgICAgIDxzd2lwZXItc2xpZGU+U2xpZGUgMTA8L3N3aXBlci1zbGlkZT5cclxuICAgICAgICAgICAgICAgICA8L3N3aXBlcj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjaXR5XCI+XHJcbiAgICAgICAgICAgICAgICA8c3dpcGVyIDpvcHRpb25zPVwiY2l0eU9wdGlvblwiIDpub3QtbmV4dC10aWNrPVwibm90TmV4dFRpY2tcIiByZWY9XCJjaXR5U3dpcGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgIDxzd2lwZXItc2xpZGU+U2xpZGUgMTwvc3dpcGVyLXNsaWRlPlxyXG4gICAgICAgICAgICAgICAgICA8c3dpcGVyLXNsaWRlPlNsaWRlIDI8L3N3aXBlci1zbGlkZT5cclxuICAgICAgICAgICAgICAgICAgPHN3aXBlci1zbGlkZT5TbGlkZSAzPC9zd2lwZXItc2xpZGU+XHJcbiAgICAgICAgICAgICAgICAgIDxzd2lwZXItc2xpZGU+U2xpZGUgNDwvc3dpcGVyLXNsaWRlPlxyXG4gICAgICAgICAgICAgICAgICA8c3dpcGVyLXNsaWRlPlNsaWRlIDU8L3N3aXBlci1zbGlkZT5cclxuICAgICAgICAgICAgICAgICAgPHN3aXBlci1zbGlkZT5TbGlkZSA2PC9zd2lwZXItc2xpZGU+XHJcbiAgICAgICAgICAgICAgICAgIDxzd2lwZXItc2xpZGU+U2xpZGUgNzwvc3dpcGVyLXNsaWRlPlxyXG4gICAgICAgICAgICAgICAgICA8c3dpcGVyLXNsaWRlPlNsaWRlIDg8L3N3aXBlci1zbGlkZT5cclxuICAgICAgICAgICAgICAgICAgPHN3aXBlci1zbGlkZT5TbGlkZSA5PC9zd2lwZXItc2xpZGU+XHJcbiAgICAgICAgICAgICAgICAgIDxzd2lwZXItc2xpZGU+U2xpZGUgMTA8L3N3aXBlci1zbGlkZT5cclxuICAgICAgICAgICAgICAgIDwvc3dpcGVyPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICA8L3gtbGF5b3V0LW1haW4+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG4gIC8vIHN3aXBlciBvcHRpb25zIGV4YW1wbGU6XHJcbiAgZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgbmFtZTogJ2NhcnJvdXNlbCcsXHJcbiAgICBkYXRhKCkge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIC8vIE5vdE5leHRUaWNrIGlzIGEgY29tcG9uZW50J3Mgb3duIHByb3BlcnR5LCBhbmQgaWYgbm90TmV4dFRpY2sgaXMgc2V0IHRvIHRydWUsIHRoZSBjb21wb25lbnQgd2lsbCBub3QgaW5zdGFudGlhdGUgdGhlIHN3aXBlciB0aHJvdWdoIE5leHRUaWNrLCB3aGljaCBtZWFucyB5b3UgY2FuIGdldCB0aGUgc3dpcGVyIG9iamVjdCB0aGUgZmlyc3QgdGltZSAoaWYgeW91IG5lZWQgdG8gdXNlIHRoZSBnZXQgc3dpcGVyIG9iamVjdCB0byBkbyB3aGF0IFRoaW5ncywgdGhlbiB0aGlzIHByb3BlcnR5IG11c3QgYmUgdHJ1ZSlcclxuICAgICAgICAvLyBub3ROZXh0VGlja+aYr+S4gOS4que7hOS7tuiHquacieWxnuaAp++8jOWmguaenG5vdE5leHRUaWNr6K6+572u5Li6dHJ1Ze+8jOe7hOS7tuWImeS4jeS8mumAmui/h05leHRUaWNr5p2l5a6e5L6L5YyWc3dpcGVy77yM5Lmf5bCx5oSP5ZGz552A5L2g5Y+v5Lul5Zyo56ys5LiA5pe26Ze06I635Y+W5Yiwc3dpcGVy5a+56LGh77yM5YGH5aaC5L2g6ZyA6KaB5Yia5Yqg6L296YGN5L2/55So6I635Y+Wc3dpcGVy5a+56LGh5p2l5YGa5LuA5LmI5LqL77yM6YKj5LmI6L+Z5Liq5bGe5oCn5LiA5a6a6KaB5pivdHJ1ZVxyXG4gICAgICAgIG5vdE5leHRUaWNrOiB0cnVlLFxyXG4gICAgICAgIHByb3ZpbmNlT3B0aW9uOiB7XHJcbiAgICAgICAgICBkaXJlY3Rpb246ICd2ZXJ0aWNhbCcsXHJcbiAgICAgICAgICBzbGlkZXNQZXJWaWV3OiAzLFxyXG4gICAgICAgICAgc3BhY2VCZXR3ZWVuOjEsXHJcbiAgICAgICAgICBjZW50ZXJlZFNsaWRlczogdHJ1ZSxcclxuICAgICAgICAgIHNsaWRlQWN0aXZlQ2xhc3MgOiAnYWN0aXZlU2xpZGUnLCAgLy/mtLvliqjlnZfnmoTnsbvlkI1cclxuICAgICAgICAgIG1vdXNld2hlZWxDb250cm9sOiB0cnVlLFxyXG4gICAgICAgICAgc2xpZGVUb0NsaWNrZWRTbGlkZTogdHJ1ZSxcclxuICAgICAgICAgIG9uVHJhbnNpdGlvbkVuZDogZnVuY3Rpb24oc3dpcGVyUHJvKXtcclxuICAgICAgICAgICAgdmFyIGluZGV4UHJvID1zd2lwZXJQcm8uYWN0aXZlSW5kZXg7IC8v5YiH5o2i57uT5p2f5pe277yM6L+U5Zuec2xpZGXkuIvmoIdcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ3Byb3ZpbmNlIGNoYW5nZWQhJylcclxuICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGNpdHlPcHRpb246IHtcclxuICAgICAgICAgIGRpcmVjdGlvbjogJ3ZlcnRpY2FsJyxcclxuICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDMsXHJcbiAgICAgICAgICBzcGFjZUJldHdlZW46MCxcclxuICAgICAgICAgIHNsaWRlQWN0aXZlQ2xhc3MgOiAnYWN0aXZlU2xpZGUnLCAgLy/mtLvliqjlnZfnmoTnsbvlkI1cclxuICAgICAgICAgIG1vdXNld2hlZWxDb250cm9sOiB0cnVlLFxyXG4gICAgICAgICAgc2xpZGVUb0NsaWNrZWRTbGlkZTogdHJ1ZSxcclxuICAgICAgICAgIGNlbnRlcmVkU2xpZGVzOiB0cnVlLFxyXG4gICAgICAgICAgb25UcmFuc2l0aW9uRW5kOiBmdW5jdGlvbihzd2lwZXJQcm8pe1xyXG4gICAgICAgICAgICB2YXIgaW5kZXhQcm8gPXN3aXBlclByby5hY3RpdmVJbmRleDsgLy/liIfmjaLnu5PmnZ/ml7bvvIzov5Tlm55zbGlkZeS4i+agh1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnY2l0eSBjaGFuZ2VkJylcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICAvLyB5b3UgY2FuIGZpbmQgY3VycmVudCBzd2lwZXIgaW5zdGFuY2Ugb2JqZWN0IGxpa2UgdGhpcywgd2hpbGUgdGhlIG5vdE5leHRUaWNrIHByb3BlcnR5IHZhbHVlIG11c3QgYmUgdHJ1ZVxyXG4gICAgLy8g5aaC5p6c5L2g6ZyA6KaB5b6X5Yiw5b2T5YmN55qEc3dpcGVy5a+56LGh5p2l5YGa5LiA5Lqb5LqL5oOF77yM5L2g5Y+v5Lul5YOP5LiL6Z2i6L+Z5qC35a6a5LmJ5LiA5Liq5pa55rOV5bGe5oCn5p2l6I635Y+W5b2T5YmN55qEc3dpcGVy5a+56LGh77yM5ZCM5pe2bm90TmV4dFRpY2vlv4XpobvkuLp0cnVlXHJcbiAgICBjb21wdXRlZDoge1xyXG4gICAgICBzd2lwZXIxKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLiRyZWZzLnByb3ZpbmNlU3dpcGVyLnN3aXBlclxyXG4gICAgICB9LFxyXG4gICAgICBzd2lwZXIyKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLiRyZWZzLmNpdHlTd2lwZXIuc3dpcGVyXHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBtb3VudGVkKCkge1xyXG4gICAgICAvLyB5b3UgY2FuIHVzZSBjdXJyZW50IHN3aXBlciBpbnN0YW5jZSBvYmplY3QgdG8gZG8gc29tZXRoaW5nKHN3aXBlciBtZXRob2RzKVxyXG4gICAgICAvLyDnhLblkI7kvaDlsLHlj6/ku6Xkvb/nlKjlvZPliY3kuIrkuIvmloflhoXnmoRzd2lwZXLlr7nosaHljrvlgZrkvaDmg7PlgZrnmoTkuovkuoZcclxuICAgICAgLy9jb25zb2xlLmxvZygndGhpcyBpcyBjdXJyZW50IHN3aXBlciBpbnN0YW5jZSBvYmplY3QnLCB0aGlzLnN3aXBlcjEpXHJcbiAgICAgIHRoaXMuc3dpcGVyMS5zbGlkZVRvKDEsIDEwMDAsIGZhbHNlKVxyXG4gICAgICB0aGlzLnN3aXBlcjIuc2xpZGVUbyg0LCAxMDAwLCBmYWxzZSlcclxuICAgIH1cclxuICB9XHJcbjwvc2NyaXB0PlxyXG5cclxuICAgICA8c3R5bGUgc2NvcGVkPlxyXG4gICAgICAgIC5wcm92aW5jZSwgLmNpdHkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcclxuICAgICAgICB9XHJcbiAgICAgICAgLnByb3ZpbmNlIC5zd2lwZXItY29udGFpbmVyLC5jaXR5IC5zd2lwZXItY29udGFpbmVyIHtcclxuICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDQwMHB4O1xyXG4gICAgICAgICAgICBtYXJnaW46NTBweCAyMHB4IDIwcHggMTBweDtcclxuICAgICAgICB9XHJcblx0XHQgLnN3aXBlci1zbGlkZSB7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyLjVyZW07XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgICAgICAvKiBDZW50ZXIgc2xpZGUgdGV4dCB2ZXJ0aWNhbGx5ICovXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gICAgICAgICAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcclxuICAgICAgICAgICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcclxuICAgICAgICAgICAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRcdFx0IHBvc2l0aW9uOnJlbGF0aXZlOyAgXHJcbiAgICAgICAgfVxyXG5cdFx0LmFjdGl2ZVNsaWRle1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmNpdHlTZWxlY3RvcntcclxuICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7ICAgICBcclxuICAgICAgICAgICAgd2lkdGg6MTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OjY1JTtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICAgICAgICAgIGNvbG9yOiMwMDhCNkU7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDk5OTk7XHRcclxuICAgICAgICAgICAgLypib3R0b206IDBweDsgXHJcbiAgICAgICAgICAgICBtYXJnaW46MTBweCBhdXRvOyovXHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmY2M7XHJcbiAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgICAgICBcclxuICAgICAgICAuc2VsZWN0U2xpZGV7XHJcbiAgICAgICAgICAgIHdpZHRoOjEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDo3N3B4O1xyXG4gICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgdG9wOjM4JTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2JmYmZiZjtcclxuICAgICAgICAgICAgb3BhY2l0eTogMC40O1xyXG4gICAgICAgIH1cclxuICAgXHRcdC5nY292ZXJ7XHJcblx0XHRcdGRpc3BsYXk6IG5vbmU7XHJcblx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdFx0d2lkdGg6IDEwMCU7XHJcblx0XHRcdGhlaWdodDogMTAwJTtcclxuXHRcdFx0Ym90dG9tOiAwJTtcclxuXHRcdFx0bGVmdDogMCU7XHJcblx0XHRcdHotaW5kZXg6IDIwMDA7XHJcblx0XHR9XHJcbiAgICA8L3N0eWxlPlxyXG4iLCI8IS0tXHJcbiAgICDnlYzpnaLkuLvpopjliIfmjaJcclxuICAgIOWIneWniyDpopzmtpsgMjAxNy85LzE2XHJcbi0tPlxyXG48c3R5bGUgc2NvcGVkPlxyXG4udGhlbWUtaXRlbSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogNDAlO1xyXG5cdGJhY2tncm91bmQtY29sb3I6IGdyYXk7XHJcblx0Zm9udC1zaXplOiAycmVtO1xyXG4gICAgcGFkZGluZzogNnB4O1xyXG4gICAgbWFyZ2luOiA2cHg7XHJcbn1cclxuLmN1cnJlbnQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XHJcbn1cclxuXHJcbjwvc3R5bGU+XHJcblxyXG48dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICA8cCBjbGFzcz1cInRpdGxlXCI+55WM6Z2i5Li76aKY5YiH5o2iPC9wPlxyXG4gICAgICAgIDxvbD5cclxuICAgICAgICAgICAgPGxpIHYtZm9yPVwiKGl0ZW0sIGlkeCkgaW4gJHJvb3QudGhlbWVzXCIgOmtleT1cIml0ZW1bMF1cIiBjbGFzcz1cInRoZW1lLWl0ZW1cIiA6Y2xhc3M9XCJ7Y3VycmVudDogaXNDdXJyZW50KGl0ZW1bMF0pfVwiPlxyXG4gICAgICAgICAgICAgICAgPGEgQGNsaWNrPVwib25Td2l0Y2hUaGVtZShpdGVtWzBdKVwiPnt7aXRlbVsxXX19IHt7aXRlbVswXX19PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgIDwvb2w+XHJcbiAgICA8L3gtbGF5b3V0LW1haW4+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgICAgaXNDdXJyZW50ICh0aGVtZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhlbWUgPT09IHRoaXMuJHJvb3QudGhlbWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uU3dpdGNoVGhlbWUgKHRoZW1lKSB7XHJcblx0XHRcdHRoaXMuJHJvb3QudGhlbWUgPSB0aGVtZVxyXG5cdFx0XHQvL1NldFZhciguLi4pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG48L3NjcmlwdD4iLCI8dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj7kv6Hmga/mj5DnpLo8L3A+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cImNlbnRlcl90aXRsZVwiPuivt+WPlui1sOeUs+ivt+S5puW5tuetvuWQjeWMuuWfn+WGheetvuWtlzwvcD5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidG5ib3hcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG5cIiBpZD1cImJ0bl9zdXJlXCI+56Gu5a6aPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgIDxkaXYgaWQ9XCJnb29kY292ZXJcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWxcIj5cclxuICAgICAgICAgICAgPHAgY2xhc3M9XCJtb2RhbF90aXRsZVwiPuS/oeaBr+aPkOekujwvcD5cclxuICAgICAgICAgICAgPHAgY2xhc3M9XCJtZF9jZW50ZXJfdGl0bGVcIj7mmK/lkKbnoa7orqTlt7LlnKjnlLPor7fkuabnrb7lrZfvvJ88L3A+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbF9idG5ib3hcIj5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYmFja2J0blwiIGlkPVwibW9kYWxfYnRuX2JhY2tcIj7ov5QmbmJzcDsmbmJzcDsmbmJzcDvlm548L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gc3VyZWJ0blwiIGlkPVwibW9kYWxfYnRuX3N1cmVcIj7noa4mbmJzcDsmbmJzcDsmbmJzcDvlrpo8L2J1dHRvbj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxubW91bnRlZCAoKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidG5fc3VyZVwiKS5vbmNsaWNrPW9uU3VyZTtcclxuICAgICAgICBmdW5jdGlvbiBvblN1cmUoKXtcclxuICAgICAgICAgICAgJChcIiNnb29kY292ZXJcIikuZmFkZUluKDMwMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ29vZGNvdmVyXCIpLm9uY2xpY2s9b25Db3ZlcjtcclxuICAgICAgICBmdW5jdGlvbiBvbkNvdmVyKCkge1xyXG4gICAgICAgICAgICAkKHRoaXMpLmZhZGVPdXQoMzAwKTtcclxuICAgICAgICB9XHJcbn1cclxufVxyXG48L3NjcmlwdD5cclxuIiwidmFyIF9fdnVlX19vcHRpb25zX18gPSAodHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcImZ1bmN0aW9uXCI/IG1vZHVsZS5leHBvcnRzLm9wdGlvbnM6IG1vZHVsZS5leHBvcnRzKVxuaWYgKF9fdnVlX19vcHRpb25zX18uZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlaWZ5XSBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgYW5kIHNob3VsZCBiZSBkZWZpbmVkIGluIHBsYWluIGpzIGZpbGVzIHVzaW5nIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuX192dWVfX29wdGlvbnNfXy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygneC1sYXlvdXQtbWFpbicsW19jKCdwJyx7c3RhdGljQ2xhc3M6XCJ0aXRsZVwifSxbX3ZtLl92KFwi6K+35pS25aW95oKo55qE6ZO26KGM5Y2hXCIpXSksX3ZtLl92KFwiIFwiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJoc2dpZlwifSxbX2MoJ2ltZycse2F0dHJzOntcInNyY1wiOl92bS4kcm9vdC5pbWdQYXRoKCdpbWcvJytfdm0uJHJvb3QuZ2V0SW1nUGF0aCgpKydUYWtlQ2FyZC5naWYnKX19KV0pLF92bS5fdihcIiBcIiksX2MoJ0VNQkVEJyx7YXR0cnM6e1wibmFtZVwiOlwiVmlld1NvdW5kXCIsXCJTUkNcIjpcIndhdi/or7fmlLblpb3mgqjnmoTpk7booYzljaEud2F2XCIsXCJMb29wXCI6XCJmYWxzZVwiLFwiQVVUT1NUQVJUXCI6XCJ0cnVlXCIsXCJIaWRkZW5cIjpcInRydWVcIixcIk1BU1RFUlNPVU5EXCI6XCJcIn19KV0sMSl9XG5fX3Z1ZV9fb3B0aW9uc19fLnN0YXRpY1JlbmRlckZucyA9IFtdXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7ICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCB0cnVlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtOGRhYTJkMmFcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LThkYWEyZDJhXCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH1cbn0pKCl9IiwidmFyIF9fdnVlX19vcHRpb25zX18gPSAodHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcImZ1bmN0aW9uXCI/IG1vZHVsZS5leHBvcnRzLm9wdGlvbnM6IG1vZHVsZS5leHBvcnRzKVxuaWYgKF9fdnVlX19vcHRpb25zX18uZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlaWZ5XSBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgYW5kIHNob3VsZCBiZSBkZWZpbmVkIGluIHBsYWluIGpzIGZpbGVzIHVzaW5nIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuX192dWVfX29wdGlvbnNfXy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygneC1sYXlvdXQtbWFpbicsW19jKCdwJyx7c3RhdGljQ2xhc3M6XCJ0aXRsZVwifSxbX3ZtLl92KFwi6K+35Y+W6LWw5Yet5p2hXCIpXSksX3ZtLl92KFwiIFwiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJoc2dpZlwifSxbX2MoJ2ltZycse2F0dHJzOntcInNyY1wiOl92bS4kcm9vdC5pbWdQYXRoKCdpbWcvJytfdm0uJHJvb3QuZ2V0SW1nUGF0aCgpKydQcmludFJlY2VpcHQuZ2lmJyl9fSldKV0pfVxuX192dWVfX29wdGlvbnNfXy5zdGF0aWNSZW5kZXJGbnMgPSBbXVxuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkgeyAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgdHJ1ZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LWRjNmQ2YmE2XCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi1kYzZkNmJhNlwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9XG59KSgpfSIsInZhciBfX3Z1ZV9fb3B0aW9uc19fID0gKHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJmdW5jdGlvblwiPyBtb2R1bGUuZXhwb3J0cy5vcHRpb25zOiBtb2R1bGUuZXhwb3J0cylcbmlmIChfX3Z1ZV9fb3B0aW9uc19fLmZ1bmN0aW9uYWwpIHtjb25zb2xlLmVycm9yKFwiW3Z1ZWlmeV0gZnVuY3Rpb25hbCBjb21wb25lbnRzIGFyZSBub3Qgc3VwcG9ydGVkIGFuZCBzaG91bGQgYmUgZGVmaW5lZCBpbiBwbGFpbiBqcyBmaWxlcyB1c2luZyByZW5kZXIgZnVuY3Rpb25zLlwiKX1cbl9fdnVlX19vcHRpb25zX18ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3gtbGF5b3V0LW1haW4nLFtfYygncCcse3N0YXRpY0NsYXNzOlwiY2VudGVyX3RpdGxlXCJ9LFtfdm0uX3YoXCLlr7nkuI3otbfvvIzkuqTmmJPlpLHotKVcIildKV0pfVxuX192dWVfX29wdGlvbnNfXy5zdGF0aWNSZW5kZXJGbnMgPSBbXVxuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkgeyAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgdHJ1ZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LTlhNWZjZDg2XCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi05YTVmY2Q4NlwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9XG59KSgpfSIsIjwhLS1cclxuQWRkIFpIRU5HWElBT0pVTiAyMDE3LjYuMjdcclxuLS0+XHJcbjx0ZW1wbGF0ZT5cclxuPGRpdiBjbGFzcz1cIngtbW9kYWxcIj5cclxuICAgIDxwIGNsYXNzPVwibW9kYWxfdGlwXCI+e3sgJHQoJ3RpcC4wMDAwMScpIH19PC9wPlxyXG4gICAgPGRpdiBpZD1cIm1vZGFsX0NvdW50RG93blwiIGNsYXNzPVwibW9kYWxfdGltZVwiPjEwPC9kaXY+XHJcbiAgICA8ZGl2IGNsYXNzPVwibW9kYWxfYnRuYm94XCI+XHJcbiAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBiYWNrYnRuXCIgaWQ9XCJtb2RhbF9idG5fYmFja1wiPuWPliZuYnNwOyZuYnNwOyZuYnNwO+a2iDwvYnV0dG9uPlxyXG4gICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gc3VyZWJ0blwiIGlkPVwibW9kYWxfYnRuX3N1cmVcIj7noa4mbmJzcDsmbmJzcDsmbmJzcDvlrpo8L2J1dHRvbj5cclxuICAgIDwvZGl2PlxyXG48L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHRiZWZvcmVNb3VudCAoKSB7XHJcblx0XHRjb25zb2xlLmxvZygnYmVmb3JlIFF1aXQnKVxyXG5cdFx0dGhpcy4kcm9vdC4kZW1pdCgnYmVmb3JlUXVpdCcpXHJcblx0fSxcclxubW91bnRlZCAoKSB7XHJcblx0dmFyIHZtID0gdGhpcztcclxuXHQvL+aooeaAgeahhuWAkuiuoeaXtlxyXG5cdHZhciBpbnRUaW1lID0gJChcIiNtb2RhbF9Db3VudERvd25cIikuaHRtbCgpO1xyXG5cdGlmKGludFRpbWUgPD0gMCl7XHJcblx0XHRpbnRUaW1lID0gMTA7XHJcblx0fVxyXG5cdGZ1bmN0aW9uIHNldFRpbWVIdG1sKCkge1xyXG5cdFx0aW50VGltZSAtPSAxO1xyXG5cdFx0aWYoaW50VGltZSA8PSAwKVxyXG5cdFx0e1xyXG5cdFx0XHRjbGVhckludGVydmFsKGludGVydmFsKTtcclxuXHJcblx0XHRcdHNldFZhcihcIkdEX0EwMV9Jc0xvZ2luXCIsXCIwXCIpO1xyXG5cdFx0XHRzZXRWYXIoXCJHRF9BMDFfQlVTX0lETl9SU1RfUFJPQ1wiLFwiMVwiKTtcclxuXHRcdFx0ZXhpdFNjZW5lKFwiU1RBX0NBTkNFTFwiKTtcclxuXHRcdH1cclxuXHRcdCQoXCIjbW9kYWxfQ291bnREb3duXCIpLmh0bWwoaW50VGltZSk7XHJcblx0fVxyXG5cdHZhciBpbnRlcnZhbCA9IHNldEludGVydmFsKHNldFRpbWVIdG1sLDEwMDApO1xyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW9kYWxfYnRuX3N1cmVcIikub25jbGljaz1vblN1cmU7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1vZGFsX2J0bl9iYWNrXCIpLm9uY2xpY2s9b25CYWNrO1xyXG5cdGZ1bmN0aW9uIG9uU3VyZSgpIHtcdFx0XHJcblx0XHRjbGVhckludGVydmFsKGludGVydmFsKTtcclxuXHJcblx0XHRzZXRWYXIoXCJHRF9BMDFfSXNMb2dpblwiLFwiMFwiKTtcclxuXHRcdHNldFZhcihcIkdEX0EwMV9CVVNfSUROX1JTVF9QUk9DXCIsXCIxXCIpO1xyXG5cclxuXHRcdGV4aXRTY2VuZShcIlNUQV9DQU5DRUxcIik7XHJcblx0fVxyXG5cdGZ1bmN0aW9uIG9uQmFjaygpIHtcclxuXHRcdGNvbnNvbGUubG9nKCdlbWl0IGNhbmNlbFF1aXQnKTtcclxuXHRcdHZtLiRyb290LiRlbWl0KCdjYW5jZWxRdWl0Jyk7XHJcblx0XHRjbGVhckludGVydmFsKGludGVydmFsKTtcclxuXHRcdCQoXCIjcGFnZVBvcHVwXCIpLmZhZGVPdXQoNTAwKTtcdFx0XHJcblx0fVx0XHJcbn1cclxufVxyXG48L3NjcmlwdD4iLCJ2YXIgX192dWVfX29wdGlvbnNfXyA9ICh0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09IFwiZnVuY3Rpb25cIj8gbW9kdWxlLmV4cG9ydHMub3B0aW9uczogbW9kdWxlLmV4cG9ydHMpXG5pZiAoX192dWVfX29wdGlvbnNfXy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWVpZnldIGZ1bmN0aW9uYWwgY29tcG9uZW50cyBhcmUgbm90IHN1cHBvcnRlZCBhbmQgc2hvdWxkIGJlIGRlZmluZWQgaW4gcGxhaW4ganMgZmlsZXMgdXNpbmcgcmVuZGVyIGZ1bmN0aW9ucy5cIil9XG5fX3Z1ZV9fb3B0aW9uc19fLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCd4LWxheW91dC1tYWluJyxbX2MoJ3AnLHtzdGF0aWNDbGFzczpcInRpdGxlXCJ9LFtfdm0uX3YoXCLkuqTmmJPmiJDlip9cIildKV0pfVxuX192dWVfX29wdGlvbnNfXy5zdGF0aWNSZW5kZXJGbnMgPSBbXVxuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkgeyAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgdHJ1ZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LTQ5NGMxZDMzXCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi00OTRjMWQzM1wiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9XG59KSgpfSIsIjxzdHlsZSBzY29wZWQ+XHJcbmltZ3tcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgd2lkdGg6IDIwJTtcclxufVxyXG48L3N0eWxlPlxyXG48dGVtcGxhdGU+XHJcbiAgICA8ZGl2IGNsYXNzPVwieC1tb2RhbFwiPlxyXG4gICAgICAgIDxkaXYgaWQ9XCJtb2RhbF90cmFkaW5nQm94XCIgY2xhc3M9XCJtb2RhbF90cmFkaW5nQm94XCI+XHJcbiAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgIDxpbWcgOnNyYz1cIiRyb290LmltZ1BhdGgoJ2ltZy9sb2FkaW5nLmdpZicpXCI+XHJcbiAgICAgICAgICAgICAgIDxkaXYgaWQ9XCJUcmFkaW5nVGlwXCI+5Lqk5piT5q2j5Zyo6L+b6KGM77yM6K+356iN5YCZLi4uPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgbW91bnRlZCAoKSB7XHJcbiAgICAgICAgdmFyIHN0clRyYW5zVGlwID0gZ2V0VHJhbnNUaXAoKTtcclxuICAgICAgICBpZihzdHJUcmFuc1RpcCAhPW51bGwgJiYgc3RyVHJhbnNUaXAgIT1cIlwiKXtcclxuICAgICAgICAgICAgJChcIiNUcmFkaW5nVGlwXCIpLmh0bWwoc3RyVHJhbnNUaXApO1xyXG4gICAgICAgIH0gICBcclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAkKFwiI1RyYWRpbmdUaXBcIikuaHRtbChcIuS6pOaYk+ato+WcqOi/m+ihjO+8jOivt+eojeWAmS4uLlwiKTsgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG48L3NjcmlwdD5cclxuIiwidmFyIF9fdnVlX19vcHRpb25zX18gPSAodHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcImZ1bmN0aW9uXCI/IG1vZHVsZS5leHBvcnRzLm9wdGlvbnM6IG1vZHVsZS5leHBvcnRzKVxuaWYgKF9fdnVlX19vcHRpb25zX18uZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlaWZ5XSBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgYW5kIHNob3VsZCBiZSBkZWZpbmVkIGluIHBsYWluIGpzIGZpbGVzIHVzaW5nIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuX192dWVfX29wdGlvbnNfXy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygneC1sYXlvdXQtbWFpbicsW19jKCdwJyx7c3RhdGljQ2xhc3M6XCJ0aXRsZVwifSxbX3ZtLl92KFwi5a6h5qC45ZGY5a6h5qC4XCIpXSldKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW11cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHsgIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIHRydWUpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi02NzgzYmVlYVwiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtNjc4M2JlZWFcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfVxufSkoKX0iLCJ2YXIgX192dWVfX29wdGlvbnNfXyA9ICh0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09IFwiZnVuY3Rpb25cIj8gbW9kdWxlLmV4cG9ydHMub3B0aW9uczogbW9kdWxlLmV4cG9ydHMpXG5pZiAoX192dWVfX29wdGlvbnNfXy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWVpZnldIGZ1bmN0aW9uYWwgY29tcG9uZW50cyBhcmUgbm90IHN1cHBvcnRlZCBhbmQgc2hvdWxkIGJlIGRlZmluZWQgaW4gcGxhaW4ganMgZmlsZXMgdXNpbmcgcmVuZGVyIGZ1bmN0aW9ucy5cIil9XG5fX3Z1ZV9fb3B0aW9uc19fLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlciAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCd4LWRpYWxvZycse2F0dHJzOntcInRpdGxlXCI6XCLlkI7lj7DnuYHlv5nvvIzmmK/lkKbnu6fnu63nrYnlvoU/XCJ9fSl9XG5fX3Z1ZV9fb3B0aW9uc19fLnN0YXRpY1JlbmRlckZucyA9IFtdXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7ICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCB0cnVlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtMGNhNmY1NmJcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LTBjYTZmNTZiXCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH1cbn0pKCl9IiwiPHRlbXBsYXRlPlxyXG48ZGl2IGNsYXNzPVwieC1tb2RhbCBncmFkaWVudFwiPlxyXG5cdDxkaXYgY2xhc3M9XCJSZXN1bHRfdG9wXCIgdi1zaG93PVwiSXNTaG93XCIgPlxyXG4gICAgICAgIDxwIHN0eWxlPVwiZm9udC1zaXplOiAzLjJyZW07XCI+5oKo5piv5ZCm57un57ut5Yqe55CG5Lia5Yqh77yfPC9wPlxyXG4gICAgICAgIDxidXR0b24gIGNsYXNzPVwiYnRuIHN1cmVidG5cIiBAY2xpY2s9XCJvblN1cmVcIj7nu6fnu63lip7nkIY8L2J1dHRvbj5cclxuICAgICAgICA8YnV0dG9uICBjbGFzcz1cImJ0biBzdXJlYnRuXCIgQGNsaWNrPVwib25CYWNrXCI+57uT5p2f5Yqe55CGPC9idXR0b24+XHJcblx0PC9kaXY+XHJcbiAgICA8ZGl2IHYtc2hvdz1cIiFJc1Nob3dcIiBAY2xpY2s9XCJvbkNsb3NlXCIgY2xhc3M9XCJjbHNGb3JrXCI+XHJcbiAgICAgICAgPGltZyA6c3JjID1cIidpbWcv5Yig6ZmkLnBuZydcIi8+XHJcbiAgICA8L2Rpdj5cclxuICAgIDwhLS0gPGRpdiBjbGFzcz1cInN3aXBlci1idXR0b24tcHJldiByZWd1bGFybHlfbGVmdFwiPlxyXG4gICAgICAgIDxpbWcgOnNyYz1cIidpbWcv566t5aS0LeW3pi5wbmcnXCIvPlxyXG4gICAgPC9kaXY+XHJcbiAgICA8ZGl2IGNsYXNzPVwic3dpcGVyLWJ1dHRvbi1uZXh0IHJlZ3VsYXJseV9yaWdodFwiPlxyXG4gICAgICAgIDxpbWcgOnNyYz1cIidpbWcv566t5aS0LeWPsy5wbmcnXCIvPlxyXG4gICAgPC9kaXY+IC0tPlxyXG4gICAgPCEtLSA8ZGl2IGNsYXNzPVwiTWVkaWFLaW5kXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInN3aXBlci1jb250YWluZXJcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN3aXBlci13cmFwcGVyXCI+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+IC0tPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJNZWRpYVBpY1wiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiQ2FyZE1lZGlhXCIgQGNsaWNrPVwiT25TZWxlY3RQcm9kdWN0XCIgdi1zaG93PVwiUGFnZTFcIj5cclxuICAgICAgICAgICAgICAgIDxpbWcgaGVpZ2h0PVwiMzUlXCIgOnNyYz1cIlBpY19VUkxcIi8+XHJcbiAgICAgICAgICAgICAgICA8cD57e3JlY29tcHJjfX08L3A+XHJcbiAgICAgICAgICAgICAgICA8cD48c3Bhbj57e3ByY2ZlYXR1cmV9feOAgnt7bWt0ZXZlbnR9feOAgjwvc3Bhbj48L3A+XHJcbiAgICAgICAgICAgICAgICA8cD7pooTmjojkv6HlnYflgLzvvJo8Zm9udCBzdHlsZT1cImNvbG9yOnJlZDtcIj57e0NyZWRpdGhpZ2h9feWFgzwvZm9udD48L3A+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuXCI+56uL5Y2z55Sz6K+3PC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIkNhcmRNZWRpYVwiIEBjbGljaz1cIm9uU2lnbkVCYW5rXCIgdi1zaG93PVwiUGFnZTJcIj5cclxuICAgICAgICAgICAgICAgIDxpbWcgOnNyYz1cIicuL2ltZy/kuoznu7TnoIEt5Liq5Lq65o6M6ZO2LnBuZydcIi8+XHJcbiAgICAgICAgICAgICAgICA8cCB2LWh0bWw9J21hcmtldGluZ1RleHQnID48L3A+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuXCI+56uL5Y2z5Yqe55CGPC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbjwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG48c2NyaXB0PiBcclxuaW1wb3J0IHsgbWFwU3RhdGUgLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCdcclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgZGF0YSAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgLy9HRF9BMDFfSXNMb2dpbiAxIOeZu+mZhiAgMOmdnueZu+mZhlxyXG5cdFx0XHRnZXRLZXlzOltcIkdEX0EwMV9Db2RQZGJyZWVkXCIsXCJHRF9NYXJrZXRpbmdBbGxOdW1iZXJcIixcIkdEX1JlYWRFbWFpbFwiLFwiR0RfQTAxX0lzTG9naW5cIixcIkdEX0EwMV9UcmFuc19UYWdmbGdcIixcIkdEX0EwMV9UcmFuc19DcmVkaXRoaWdoXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgIFwiR0RfQTAxX1RyYW5zX1JlY29tcHJjXCIsXCJHRF9BMDFfVHJhbnNfUmVjb21wcm9jY29yZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICBcIkdEX0EwMV9UcmFuc19QcmNmZWF0dXJlXCIsXCJHRF9BMDFfVHJhbnNfTWt0ZXZlbnRcIixcclxuICAgICAgICAgICAgICAgICAgICAgXCJHRF9BMDFfVGNwQ2FyZF9EYXRhXCJdLFxyXG5cdFx0XHRzZXRLZXlzOltcIkdEX0EwMV9NZW51SURcIixcIkdEX0EwMV9UcmFuc19TYWxlRmxhZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgICBcIkdEX0IwOV9zbHRDYXJkSW5mb1wiLFwiR0RfQjA5X3NsdENhcmROYW1lXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgIFwiR0RfQjA5X3NsdENhcmRJbWdcIixcIlBfQjA5X1Bkbm9cIixcclxuICAgICAgICAgICAgICAgICAgICAgXCJQX0IwOV9BcHBpbmZvdHlwZVwiXSxcclxuICAgICAgICAgICAgcHJvZHVjdExpc3Q6XCJbe1xcXCJOQU1fRElDXFxcIjpcXFwi57K+5YeG6JCl6ZSA5Lqn5ZOB5YiX6KGoXFxcIixcXFwiTlVNX0RJQ1xcXCI6XFxcIjAwMDAwMDAxXFxcIixcXFwiTlVNX0lURU1fRElDXFxcIjpcXFwiUDAwMDAxXFxcIixcXFwiVkxVX0lURU1fRElDXFxcIjpcXFwi5Y+M5Yip5LiwOuWFqOmDqOWPjOWIqeS4sOS6p+WTge+8iOS9meminT4w77yJXFxcIn0se1xcXCJOQU1fRElDXFxcIjpcXFwi57K+5YeG6JCl6ZSA5Lqn5ZOB5YiX6KGoXFxcIixcXFwiTlVNX0RJQ1xcXCI6XFxcIjAwMDAwMDAxXFxcIixcXFwiTlVNX0lURU1fRElDXFxcIjpcXFwiUDAwMDAyXFxcIixcXFwiVkxVX0lURU1fRElDXFxcIjpcXFwi6LS36K6w5Y2hOuWFqOmDqOi0t+iusOWNoeexu+S6p+WTge+8iOWNoeeJh+aVsOmHj++8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAwM1xcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIui0t+asvjrlhajpg6jotLfmrL7nsbvkuqflk4HvvIjkvZnpop0+MO+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAwNFxcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIuWfuumHkTrlhajpg6jln7rph5Hnsbvkuqflk4HvvIjkvZnpop0+MO+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAwNVxcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIueQhui0ouS6p+WTgTrlhajpg6jnkIbotKLnsbvkuqflk4HvvIjkvZnpop0+MO+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAwNlxcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIuWbveWAujrlhajpg6jlm73lgLrnsbvkuqflk4HvvIjkvZnpop0+MO+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAwN1xcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIuS/nemZqTrlhajpg6jkv53pmannsbvkuqflk4HvvIjkv53otLk+MO+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAwOFxcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIue9keS4iumTtuihjO+8iOetvue6puagh+ivhu+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAwOVxcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIuaJi+acuumTtuihjO+8iOetvue6puagh+ivhu+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAxMFxcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIueUteivnemTtuihjO+8iOetvue6puagh+ivhu+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAxMVxcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIuWfuumHkeWumuaKle+8iOetvue6puagh+ivhu+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAxMlxcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIuS7o+WPkeW3pei1hO+8iOetvue6puagh+ivhu+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAxM1xcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIua2iOaBr+acjeWKoe+8iOetvue6puagh+ivhu+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAxNFxcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIui9rOi0pueUteivne+8iOetvue6puagh+ivhu+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAxNVxcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIuWVhuaDoOmAmu+8iOetvue6puagh+ivhu+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAxNlxcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIumTtuacn+i9rOi0pu+8iOetvue6puagh+ivhu+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAxN1xcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIumHkeW4gumAmu+8iOetvue6puagh+ivhu+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAxOFxcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIuWkluaxh+Wune+8iOetvue6puagh+ivhu+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAxOVxcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIuS4quS6uui1hOmHkeW9kumbhu+8iOetvue6puagh+ivhu+8iVxcXCJ9LHtcXFwiTkFNX0RJQ1xcXCI6XFxcIueyvuWHhuiQpemUgOS6p+WTgeWIl+ihqFxcXCIsXFxcIk5VTV9ESUNcXFwiOlxcXCIwMDAwMDAwMVxcXCIsXFxcIk5VTV9JVEVNX0RJQ1xcXCI6XFxcIlAwMDAyMFxcXCIsXFxcIlZMVV9JVEVNX0RJQ1xcXCI6XFxcIuWtmOmHkemAmu+8iOm7hOmHkeWtmOaKmO+8ie+8iOS9meminT4w77yJXFxcIn0se1xcXCJOQU1fRElDXFxcIjpcXFwi57K+5YeG6JCl6ZSA5Lqn5ZOB5YiX6KGoXFxcIixcXFwiTlVNX0RJQ1xcXCI6XFxcIjAwMDAwMDAxXFxcIixcXFwiTlVNX0lURU1fRElDXFxcIjpcXFwiUDAwMDIxXFxcIixcXFwiVkxVX0lURU1fRElDXFxcIjpcXFwi56ys5LiJ5pa55a2Y566h77yI562+57qm5qCH6K+G77yJXFxcIn0se1xcXCJOQU1fRElDXFxcIjpcXFwi57K+5YeG6JCl6ZSA5Lqn5ZOB5YiX6KGoXFxcIixcXFwiTlVNX0RJQ1xcXCI6XFxcIjAwMDAwMDAxXFxcIixcXFwiTlVNX0lURU1fRElDXFxcIjpcXFwiUDAwMDIyXFxcIixcXFwiVkxVX0lURU1fRElDXFxcIjpcXFwi5aSW5biB5a2Y5qy+6LSm5oi377yI5L2Z6aKdPjDvvIlcXFwifSx7XFxcIk5BTV9ESUNcXFwiOlxcXCLnsr7lh4bokKXplIDkuqflk4HliJfooahcXFwiLFxcXCJOVU1fRElDXFxcIjpcXFwiMDAwMDAwMDFcXFwiLFxcXCJOVU1fSVRFTV9ESUNcXFwiOlxcXCJQMDAwMjNcXFwiLFxcXCJWTFVfSVRFTV9ESUNcXFwiOlxcXCLlrZjotLfpgJrvvIjnrb7nuqbmoIfor4bvvIlcXFwifSx7XFxcIk5BTV9ESUNcXFwiOlxcXCLnsr7lh4bokKXplIDkuqflk4HliJfooahcXFwiLFxcXCJOVU1fRElDXFxcIjpcXFwiMDAwMDAwMDFcXFwiLFxcXCJOVU1fSVRFTV9ESUNcXFwiOlxcXCJQMDAwMjRcXFwiLFxcXCJWTFVfSVRFTV9ESUNcXFwiOlxcXCLnu5PllK7msYfvvIjkuqTmmJPmoIfor4bvvIlcXFwifSx7XFxcIk5BTV9ESUNcXFwiOlxcXCLnsr7lh4bokKXplIDkuqflk4HliJfooahcXFwiLFxcXCJOVU1fRElDXFxcIjpcXFwiMDAwMDAwMDFcXFwiLFxcXCJOVU1fSVRFTV9ESUNcXFwiOlxcXCJQMDAwMjVcXFwiLFxcXCJWTFVfSVRFTV9ESUNcXFwiOlxcXCLpmo/olqrotLfnrb7nuqbmoIfor4ZcXFwifSx7XFxcIk5BTV9ESUNcXFwiOlxcXCLnsr7lh4bokKXplIDkuqflk4HliJfooahcXFwiLFxcXCJOVU1fRElDXFxcIjpcXFwiMDAwMDAwMDFcXFwiLFxcXCJOVU1fSVRFTV9ESUNcXFwiOlxcXCJQMDAwMjZcXFwiLFxcXCJWTFVfSVRFTV9ESUNcXFwiOlxcXCLnlZnlrabotLfmrL7moIfor4ZcXFwifSx7XFxcIk5BTV9ESUNcXFwiOlxcXCLnsr7lh4bokKXplIDkuqflk4HliJfooahcXFwiLFxcXCJOVU1fRElDXFxcIjpcXFwiMDAwMDAwMDFcXFwiLFxcXCJOVU1fSVRFTV9ESUNcXFwiOlxcXCJQMDAwMjdcXFwiLFxcXCJWTFVfSVRFTV9ESUNcXFwiOlxcXCLnvZHmjbfotLfnrb7nuqbmoIfor4ZcXFwifSx7XFxcIk5BTV9ESUNcXFwiOlxcXCLnsr7lh4bokKXplIDkuqflk4HliJfooahcXFwiLFxcXCJOVU1fRElDXFxcIjpcXFwiMDAwMDAwMDFcXFwiLFxcXCJOVU1fSVRFTV9ESUNcXFwiOlxcXCJQMDAwMjhcXFwiLFxcXCJWTFVfSVRFTV9ESUNcXFwiOlxcXCLlvqrnjq/otLfmrL7nrb7nuqbmoIfor4ZcXFwifSx7XFxcIk5BTV9ESUNcXFwiOlxcXCLnsr7lh4bokKXplIDkuqflk4HliJfooahcXFwiLFxcXCJOVU1fRElDXFxcIjpcXFwiMDAwMDAwMDFcXFwiLFxcXCJOVU1fSVRFTV9ESUNcXFwiOlxcXCJQMDAwMjlcXFwiLFxcXCJWTFVfSVRFTV9ESUNcXFwiOlxcXCLlpKfpop3lrZjljZVcXFwifSx7XFxcIk5BTV9ESUNcXFwiOlxcXCLnsr7lh4bokKXplIDkuqflk4HliJfooahcXFwiLFxcXCJOVU1fRElDXFxcIjpcXFwiMDAwMDAwMDFcXFwiLFxcXCJOVU1fSVRFTV9ESUNcXFwiOlxcXCJQMDAwMzBcXFwiLFxcXCJWTFVfSVRFTV9ESUNcXFwiOlxcXCLlrZjph5HpgJoy5Y+3XFxcIn0se1xcXCJOQU1fRElDXFxcIjpcXFwi57K+5YeG6JCl6ZSA5Lqn5ZOB5YiX6KGoXFxcIixcXFwiTlVNX0RJQ1xcXCI6XFxcIjAwMDAwMDAxXFxcIixcXFwiTlVNX0lURU1fRElDXFxcIjpcXFwiUDAwMDMxXFxcIixcXFwiVkxVX0lURU1fRElDXFxcIjpcXFwi56eB6KGM5LiT5bGe5Lqn5ZOBXFxcIn0sXVwiLFxyXG4gICAgICAgICAgICBnb29kc0xpc3Q6W10sXHJcbiAgICAgICAgICAgIENyZWRpdGhpZ2g6XCJcIiwgIC8v6aKE5o6I5L+h5Z2H5YC8XHJcbiAgICAgICAgICAgIHJlY29tcHJjOlwiXCIsICAgIC8v5o6o6I2Q5Y2h56eNXHJcbiAgICAgICAgICAgIHByY2ZlYXR1cmU6XCJcIiwgIC8v5Y2h56eN54m56ImyXHJcbiAgICAgICAgICAgIG1rdGV2ZW50OlwiXCIsICAgIC8v6JCl6ZSA5rS75YqoXHJcbiAgICAgICAgICAgIFBpY19VUkw6XCJcIixcclxuICAgICAgICAgICAgdGhlUGF0aDpcIlwiLFxyXG4gICAgICAgICAgICBMb2NhbFBpY19VUkw6XCIuL2ltZy/kuoznu7TnoIEt5Liq5Lq65o6M6ZO2LnBuZ1wiLFxyXG4gICAgICAgICAgICBJc1Nob3c6ZmFsc2UsXHJcbiAgICAgICAgICAgIG51bToyLFxyXG4gICAgICAgICAgICBzd2lwZXI6bnVsbCxcclxuICAgICAgICAgICAgUGFnZTE6ZmFsc2UsXHJcbiAgICAgICAgICAgIFBhZ2UyOmZhbHNlLFxyXG4gICAgICAgICAgICB1cmxMaXN0OltdLFxyXG4gICAgICAgICAgICBjbGlja0xpc3Q6W10sXHJcbiAgICAgICAgICAgIEJ0bkxpc3Q6W10sXHJcbiAgICAgICAgICAgIENvZFBkYnJlZWQ6W10sXHJcbiAgICAgICAgICAgIEJveFBhZ2U6MCxcclxuICAgICAgICAgICAgQm94V3JhcDpcIlwiLFxyXG4gICAgICAgICAgICBhZGRDb250ZW50OlwiXCIsXHJcbiAgICAgICAgICAgIG1hcmtldGluZ1RleHQ6XCJcIixcclxuICAgICAgICAgICAgbWFya2V0aW5nVGV4dDE6XCLlvIDpgJrnlLXlrZDpk7booYzlj6/lnKjnur/kuIrkuqvlj5fnkIbotKLjgIHovazotKbjgIHmn6Xor6LjgIHkv6HnlKjljaHov5jmrL7jgIHnlJ/mtLvnvLTotLnjgIHlpJbmsYfnrYnmnI3liqHvvIw8Zm9udCBzdHlsZSA9J2NvbG9yOnJlZCc+5omL57ut6LS55YWo5YWNPC9mb250Pu+8jOWFqOaWuemdoua7oei2s+aCqOeahOeUn+a0u+aJgOmcgO+8jOW/q+adpeW8gOmAmuWQp++8gVwiLFxyXG4gICAgICAgICAgICBtYXJrZXRpbmdUZXh0MjpcIuW8gOmAmua2iOaBr+acjeWKoeWPr+WPiuaXtuS6q+WPl+aCqOeahOi0puaIt+WKqOi0pumAmuefpe+8jOWFqOWkqeWAmeacjeWKoe+8jOWPiuaXtuWTjeW6lO+8jOS4uuaCqOaPkOS+mzfDlzI05bCP5pe255qE5pyN5Yqh44CCXCIsXHJcbiAgICAgICAgICAgIGN1cnJlbnRQYWdlOjAsICAvL+W9k+WJjemhteaVsFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBjb21wdXRlZCA6IHtcclxuICAgICAgICAuLi5tYXBTdGF0ZShbJ3Bvb2wnXSlcclxuICAgIH0sXHJcbiAgICBtZXRob2RzIDoge1xyXG4gICAgICAgIGluaXRQYWdlKCl7XHJcbiAgICAgICAgICAgIHRoaXMuaW5pdFBvb2wodGhpcy4kZGF0YSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbkNsb3NlKCl7XHJcbiAgICAgICAgICAgIHNldFZhcihcIkdEX1JlYWRFbWFpbFwiLFwiMFwiKTtcclxuICAgICAgICAgICB0aGlzLm9uQ29udGludWUoKTsgXHJcbiAgICAgICAgfSxcclxuXHRcdG9uQmFjaygpe1xyXG4gICAgICAgICAgICBzZXRWYXIoXCJHRF9BMDFfSW5pdGlhdGl2ZU1hcmtldGluZ1wiLFwiMFwiKTtcclxuICAgICAgICAgICAgdGhpcy5vbkNhbmNlbCgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25TdXJlKCl7XHJcbiAgICAgICAgICAgIHNldFZhcihcIkdEX0EwMV9Jbml0aWF0aXZlTWFya2V0aW5nXCIsXCIwXCIpO1xyXG5cdFx0XHR0aGlzLm9uQ29udGludWUoKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uU2lnbkVCYW5rKCl7XHJcbiAgICAgICAgICAgIHRoaXMucG9vbC5HRF9BMDFfTWVudUlEID0gXCIwMjAwMDFcIjtcclxuICAgICAgICAgICAgdGhpcy5zdWJtaXQoW1wiR0RfQTAxX01lbnVJRFwiXSk7XHJcbiAgICAgICAgICAgIHRoaXMuZXhpdFNjZW5lKFwiU1RBX1NFTEVDVFBST0RVQ1RcIik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBPblNlbGVjdFByb2R1Y3QoKXtcclxuICAgICAgICAgICAgLy/kuqflk4Hku6PnoIHkuLrnqbrkuI3ot7PovaxcclxuICAgICAgICAgICAgaWYgKFwiXCIgPT0gdGhpcy5wb29sLkdEX0EwMV9UcmFuc19SZWNvbXByb2Njb3JkIHx8IHVuZGVmaW5lZCA9PSB0aGlzLnBvb2wuR0RfQTAxX1RyYW5zX1JlY29tcHJvY2NvcmQpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvL+i3s+i9rOWIsOS/oeeUqOWNoeeUs+ivt1xyXG4gICAgICAgICAgICB0aGlzLnBvb2wuR0RfQTAxX01lbnVJRCA9IFwiMDkwMDAxXCI7XHJcbiAgICAgICAgICAgIHRoaXMucG9vbC5HRF9BMDFfVHJhbnNfU2FsZUZsYWcgPSBcIjFcIjtcclxuICAgICAgICAgICAgdGhpcy5wb29sLkdEX0IwOV9zbHRDYXJkSW1nID0gdGhpcy5QaWNfVVJMLnNwbGl0KFwiXFxcXFwiKS5qb2luKFwiXFxcXFxcXFxcIik7XHJcblxyXG4gICAgICAgICAgICB2YXIgcGRubyA9IHRoaXMucG9vbC5HRF9BMDFfVHJhbnNfUmVjb21wcm9jY29yZDtcclxuICAgICAgICAgICAgaWYgKHBkbm8gPT0gXCJDQ0dZOElcIiB8fCBwZG5vID09IFwiQ0NQWThJXCJcclxuICAgICAgICAgICAgICAgfHwgcGRubyA9PSBcIkNDR1k2SVwiIHx8IHBkbm8gPT0gXCJDQ0dZNUlcIlxyXG4gICAgICAgICAgICAgICB8fCBwZG5vID09IFwiQ0NQWTVJXCIgfHwgcGRubyA9PSBcIkNDR1k5SVwiXHJcbiAgICAgICAgICAgICAgIHx8IHBkbm8gPT0gXCJDQ0dZMklcIiB8fCBwZG5vID09IFwiQ0NQWTJJXCJcclxuICAgICAgICAgICAgICAgfHwgcGRubyA9PSBcIkNDR1o5SVwiIHx8IHBkbm8gPT0gXCJDQ1BaOUlcIlxyXG4gICAgICAgICAgICAgICB8fCBwZG5vID09IFwiQ0NHWDJJXCIgfHwgcGRubyA9PSBcIkNDUFgySVwiXHJcbiAgICAgICAgICAgICAgIHx8IHBkbm8gPT0gXCJDQ0dKM0lcIilcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wb29sLlBfQjA5X0FwcGluZm90eXBlID0gXCIwMVwiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wb29sLlBfQjA5X0FwcGluZm90eXBlID0gXCIwM1wiXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8v5L+d5a2Y5Y2h56eN5Luj56CBXHJcbiAgICAgICAgICAgIHRoaXMucG9vbC5QX0IwOV9QZG5vID0gdGhpcy5wb29sLkdEX0EwMV9UcmFuc19SZWNvbXByb2Njb3JkO1xyXG4gICAgICAgICAgICB0aGlzLnN1Ym1pdCh0aGlzLnNldEtleXMpO1xyXG4gICAgICAgICAgICB0aGlzLmV4aXRTY2VuZShcIlNUQV9TRUxFQ1RQUk9EVUNUXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgR2V0Vmx1UGljU3JjKHN0clByb2R1Y3RDb3JkLHN0ckpzb25EYXRhKXtcclxuXHRcdFx0Ly/moLnmja7kuqflk4Hku6PnoIHmn6Xor6Lkuqflk4Hlm77niYfot6/lvoRcclxuXHRcdFx0aWYgKFwiXCIgIT0gc3RySnNvbkRhdGEgJiYgdW5kZWZpbmVkICE9IHN0ckpzb25EYXRhKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0Ly/ovaxKU09O5a+56LGhXHJcblx0XHRcdFx0dmFyIGpzb25EYXRhID0gSlNPTi5wYXJzZShzdHJKc29uRGF0YSk7XHJcbiAgICAgICAgICAgICAgICAvL+mBjeWOhuaVsOaNruWtl+WFuOS4reeahOaJgOacieWfuumHkeexu+Wei1xyXG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwganNvbkRhdGEubGVuZ3RoOyBpKyspXHJcblx0XHRcdFx0e1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChzdHJQcm9kdWN0Q29yZCA9PSBqc29uRGF0YVtpXS5DT0RfUEQpXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBvb2wuR0RfQjA5X3NsdENhcmRJbmZvID0gSlNPTi5zdHJpbmdpZnkoanNvbkRhdGFbaV0pLnNwbGl0KFwiXFxcXFwiKS5qb2luKFwiXFxcXFxcXFxcIik7OyAgICAgLy/kv53lrZjpgInkuK3nmoTkv6HnlKjljaHljaHniYfkv6Hmga9cclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wb29sLkdEX0IwOV9zbHRDYXJkTmFtZSA9IGpzb25EYXRhW2ldLk5BTV9QRDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGpzb25EYXRhW2ldLlZMVV9QSUNfMTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xyXG5cdFx0fSxcclxuXHRcdGluaXREYXRhKCl7XHJcbiAgICAgICAgICAgIC8vIHZhciBzdHJqc29uID0gSlNPTi5wYXJzZSh0aGlzLnByb2R1Y3RMaXN0KVxyXG4gICAgICAgICAgICAvLyBhbGVydChzdHJGcm9tSnNvbih0aGlzLnByb2R1Y3RMaXN0LFwiTlVNX0lURU1fRElDXCIscGZsYWcsXCJWTFVfSVRFTV9ESUNcIikpO1xyXG5cdFx0XHR0aGlzLnJlY29tcHJjICAgPSB0aGlzLnBvb2wuR0RfQTAxX1RyYW5zX1JlY29tcHJjOyAgICAgLy/mjqjojZDljaHnp41cclxuICAgICAgICAgICAgdGhpcy5wcmNmZWF0dXJlID0gdGhpcy5wb29sLkdEX0EwMV9UcmFuc19QcmNmZWF0dXJlOyAgIC8v5Y2h56eN54m56ImyXHJcbiAgICAgICAgICAgIHRoaXMubWt0ZXZlbnQgICA9IHRoaXMucG9vbC5HRF9BMDFfVHJhbnNfTWt0ZXZlbnQ7ICAgICAvL+iQpemUgOa0u+WKqFxyXG4gICAgICAgICAgICB0aGlzLkNyZWRpdGhpZ2ggPSB0aGlzLnBvb2wuR0RfQTAxX1RyYW5zX0NyZWRpdGhpZ2g7ICAgLy/pooTmjojkv6HlnYflgLxcclxuXHJcbiAgICAgICAgICAgIC8vIHRoaXMucmVjb21wcmMgICA9IFwiUVHkv6HnlKjljaFcIjsgICAgIC8v5o6o6I2Q5Y2h56eNXHJcbiAgICAgICAgICAgIC8vIHRoaXMucHJjZmVhdHVyZSA9IFwi57uI6Lqr5YWN5bm06LS544CB5Y2h6Z2i5Ye45Y2w5LiT5bGeUVHlj7dcIjsgICAvL+WNoeenjeeJueiJslxyXG4gICAgICAgICAgICAvLyB0aGlzLm1rdGV2ZW50ICAgPSBcIuaKpeWQjeKAnOaCpuWIt+i2iuacieekvOKAnea0u+WKqO+8jOavj+WRqOa2iOi0uea7oTXnrJTjgIHmr4/nrJTmu6ExOTnlhYPvvIzntK/orqHmtojotLnlkajmlbAy5ZGo5Y+K5Lul5LiK77yM5Y2z5Y+v6I635b6X5aW956S85aWW5YqxXCI7ICAgICAvL+iQpemUgOa0u+WKqFxyXG4gICAgICAgICAgICAvLyB0aGlzLkNyZWRpdGhpZ2ggPSBcIjUwMDAwXCI7XHJcbiAgICAgICAgICAgIC8vIHRoaXMucG9vbC5HRF9BMDFfVHJhbnNfUmVjb21wcm9jY29yZCA9IFwiQ0NHSDJJXCJcclxuICAgICAgICAgICAgLy8gdGhpcy5wb29sLkdEX0EwMV9UY3BDYXJkX0RhdGEgPSAnW3tcIkNPRF9QRFwiOlwiQ0NHSDJJXCIsXCJWTFVfUElDXzFcIjpcIkM6L0NTQVAvTmlzcC9odG1sL2ltZy9cIixcIk5VTV9JVEVNX0RJQ1wiOlwiMVwiLFwiVkxVX0lURU1fRElDXCI6XCLnlLdcIn0se1wiQ09EX1BEXCI6XCJSTkdcIixcIk5VTV9ESUNcIjpcIjAwMDAwMDA1XCIsXCJOVU1fSVRFTV9ESUNcIjpcIjJcIixcIlZMVV9JVEVNX0RJQ1wiOlwi5aWzXCJ9XSc7XHJcblxyXG4gICAgICAgICAgIFxyXG4gICAgICAgICAgICAvL+S/oeeUqOWNoeebruWJjeS4gOS4qiAg5qC55o2u5o6o6I2Q5Y2h56eN5Li656m6IOWImeaYr+aYvuekuuWFtuS7luaOqOmAgeS/oeaBr++8jOWQjOeQhuWFtuS7luaOqOmAgeS/oeaBr+S5n+agueaNrkdEX0EwMV9Db2RQZGJyZWVkIOWtl+autei/lOWbnueahEZD5p2l5Yik5patXHJcbiAgICAgICAgICAgIGlmKHRoaXMucG9vbC5HRF9BMDFfVGNwQ2FyZF9EYXRhICE9XCJcIiAmJnRoaXMucG9vbC5HRF9BMDFfVGNwQ2FyZF9EYXRhICE9IHVuZGVmaW5lZFxyXG4gICAgICAgICAgICAgICAgICYmIHRoaXMucG9vbC5HRF9BMDFfVHJhbnNfUmVjb21wcm9jY29yZCAhPSBcIlwiICYmIHRoaXMucG9vbC5HRF9BMDFfVHJhbnNfUmVjb21wcm9jY29yZCAhPSB1bmRlZmluZWQgKXtcclxuICAgICAgICAgICAgICAgICAvL+WbvueJh+i3r+W+hFxyXG4gICAgICAgICAgICAgICAgdGhpcy5QaWNfVVJMID0gdGhpcy5HZXRWbHVQaWNTcmModGhpcy5wb29sLkdEX0EwMV9UcmFuc19SZWNvbXByb2Njb3JkLHRoaXMucG9vbC5HRF9BMDFfVGNwQ2FyZF9EYXRhKSArIHRoaXMucG9vbC5HRF9BMDFfVHJhbnNfUmVjb21wcm9jY29yZCArIFwiLmpwZ1wiO1xyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5wb29sLkdEX0EwMV9UcmFuc19UYWdmbGcgPT0gXCJOXCIpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUGFnZTEgPSB0cnVlOyBcclxuICAgICAgICAgICAgICAgIH0gICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHRoaXMuUGFnZTEgPSBmYWxzZTsgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYodGhpcy5wb29sLkdEX0EwMV9Db2RQZGJyZWVkLnRyaW0oKS5sZW5ndGggPiAwICl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlBhZ2UyID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMucG9vbC5HRF9BMDFfQ29kUGRicmVlZC5pbmRleE9mKFwiUDAwMDA4XCIpID09IC0xIFxyXG4gICAgICAgICAgICAgICAgICAgJiYgdGhpcy5wb29sLkdEX0EwMV9Db2RQZGJyZWVkLmluZGV4T2YoXCJQMDAwMDlcIikgPT0gLTFcclxuICAgICAgICAgICAgICAgICAgICYmIHRoaXMucG9vbC5HRF9BMDFfQ29kUGRicmVlZC5pbmRleE9mKFwiUDAwMDEzXCIpICE9IC0xKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm1hcmtldGluZ1RleHQgPSB0aGlzLm1hcmtldGluZ1RleHQyO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm1hcmtldGluZ1RleHQgPSB0aGlzLm1hcmtldGluZ1RleHQxO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlBhZ2UyID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy/okKXplIDnlYzpnaIg5pi+56S6XHJcbiAgICAgICAgICAgIGlmKHRoaXMucG9vbC5HRF9BMDFfSXNMb2dpbiA9PSBcIjFcIiAmJiB0aGlzLnBvb2wuR0RfUmVhZEVtYWlsICE9IFwiMVwiKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuSXNTaG93ID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Jc1Nob3cgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvL3RoaXMuaW5pdFN3aXBlcigpOyBcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8vIGluaXRTd2lwZXIgKCkge1xyXG4gICAgICAgIC8vICAgICB0aGlzLkJveFdyYXAgPVwiXCI7XHJcbiAgICAgICAgLy8gICAgLy8gdGhpcy5jdXJyZW50UGFnZSA9IDA7ICAgLy/lvZPliY3pobXmlbBcclxuICAgICAgICAvLyAgICAgdGhpcy5hZGRDb250ZW50PSBcIlwiO1xyXG4gICAgICAgIC8vICAgICB0aGlzLkJveFBhZ2UgPSBNYXRoLmNlaWwodGhpcy51cmxMaXN0Lmxlbmd0aC90aGlzLm51bSk7IC8v5oC75YWx6aG15pWwXHJcbiAgICAgICAgLy8gICAgIGFsZXJ0KFwidGhpcy5Cb3hQYWdlXCIgK3RoaXMuQm94UGFnZSApXHJcbiAgICAgICAgLy8gICAgIHBhZ2VMb2dfY29scyhcIuaAu+mhteaVsO+8mlwiKyB0aGlzLkJveFBhZ2UpOyBcclxuICAgICAgICAvLyAgICAgZm9yKHZhciBpPTA7aTx0aGlzLkJveFBhZ2U7aSsrKXtcclxuICAgICAgICAvLyAgICAgICAgdGhpcy5Cb3hXcmFwID0gXCI8ZGl2IGNsYXNzID0nc3dpcGVyLXNsaWRlIHN3aXBlci1zbGlkZU5OJyBpZD0ncGFnZVwiK2krXCInPjwvZGl2PlwiXHJcbiAgICAgICAgLy8gICAgICAgICQoXCIuc3dpcGVyLXdyYXBwZXJcIikuYXBwZW5kKHRoaXMuQm94V3JhcCk7XHJcbiAgICAgICAgLy8gICAgICAgICBmb3IodmFyIGo9aSp0aGlzLm51bSAsIGs9MCA7IGo8TWF0aC5taW4oKGkrMSkqdGhpcy5udW0sIHRoaXMudXJsTGlzdC5sZW5ndGggKTsgaisrKXtcclxuICAgICAgICAvLyAgICAgICAgICAgICAvL+aYr+WQpuaPkuWFpUlEXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgdGhpcy5hZGRDb250ZW50ID1cIlwiO1xyXG4gICAgICAgIC8vICAgICAgICAgICAgIGlmKFwiXCIgIT0gdGhpcy5jbGlja0xpc3Rbal0pe1xyXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICB0aGlzLmFkZENvbnRlbnQ9ICB0aGlzLmFkZENvbnRlbnQgKyBcIjxkaXYgY2xhc3M9XFxcIkNhcmRNZWRpYSBEaXZcIisgaiArIFwiXFxcIiBzdHlsZSA9IFxcXCJ3aWR0aDozNSU7aGVpZ2h0OjgwJTttYXJnaW46NiUgYXV0bzttYXJnaW4tbGVmdDo5JTtcXFwiIGlkID0gXFxcIlwiKyB0aGlzLmNsaWNrTGlzdFtqXSArIFwiXFxcIj4gPGltZyBzdHlsZT1cXFwibWFyZ2luOiAyMHB4IGF1dG87aGVpZ2h0OjM1JTsgZGlzcGxheTogZmxleDtqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgYWxpZ24taXRlbXM6IGNlbnRlcjtcXFwiIHNyYz1cXFwiXCIrdGhpcy51cmxMaXN0W2pdICtcIlxcXCIvPlwiO1xyXG4gICAgICAgIC8vICAgICAgICAgICAgIH1cclxuICAgICAgICAvLyAgICAgICAgICAgICBlbHNle1xyXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICB0aGlzLmFkZENvbnRlbnQ9IHRoaXMuYWRkQ29udGVudCArIFwiPGRpdiBjbGFzcz1cXFwiQ2FyZE1lZGlhIERpdlwiKyBqICsgXCJcXFwiIHN0eWxlID0gXFxcIndpZHRoOjM1JTtoZWlnaHQ6ODAlO21hcmdpbjo2JSBhdXRvO21hcmdpbi1sZWZ0OjklO1xcXCI+IDxpbWcgc3R5bGU9XFxcIm1hcmdpbjogMjBweCBhdXRvO2hlaWdodDo2NSU7IGRpc3BsYXk6IGZsZXg7anVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxcIiBzcmM9XFxcIlwiK3RoaXMudXJsTGlzdFtqXSArXCJcXFwiLz5cIjtcclxuICAgICAgICAvLyAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vICAgICAgICAgICAgIGlmKFwiT25TZWxlY3RQcm9kdWN0XCIgPT0gdGhpcy5jbGlja0xpc3Rbal0pe1xyXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICB0aGlzLmFkZENvbnRlbnQgPSB0aGlzLmFkZENvbnRlbnQgKyBcIjxwPlwiICsgdGhpcy5yZWNvbXByYyArXCI8L3A+IDxwIHN0eWxlPVxcXCJ0ZXh0LWFsaWduOmxlZnRcXFwiPjxzcGFuIHN0eWxlPVxcXCJmb250LXNpemU6MS43cmVtO1xcXCI+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7XCIgKyB0aGlzLnByY2ZlYXR1cmUgKyBcIuOAglwiICsgdGhpcy5ta3RldmVudCArIFwi44CCPC9zcGFuPjwvcD4gPHA+6aKE5o6I5L+h5Z2H5YC877yaPHNwYW4gc3R5bGU9XFxcImZvbnQtc2l6ZToyLjVyZW07Y29sb3I6cmVkO1xcXCI+XCIgKyB0aGlzLkNyZWRpdGhpZ2ggKyBcIuWFgzwvc3Bhbj48L3A+XCI7IFxyXG4gICAgICAgIC8vICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAvL+e9keS4iumTtuihjOOAgeaOjOS4iumTtuihjOOAgVxyXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICBpZiggdGhpcy5Db2RQZGJyZWVkW2pdID09XCJQMDAwMDhcIiB8fCB0aGlzLkNvZFBkYnJlZWRbal0gPT1cIlAwMDAwOVwiKXtcclxuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQ29udGVudCA9IHRoaXMuYWRkQ29udGVudCArIFwiPHAgc3R5bGU9XFxcInRleHQtYWxpZ246bGVmdFxcXCI+PHNwYW4gc3R5bGU9XFxcImZvbnQtc2l6ZToyLjVyZW07XFxcIj4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDtcIiArIHRoaXMubWFya2V0aW5nVGV4dDEgKyBcIjwvc3Bhbj48L3A+XCI7ICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAvLyAgICAgICAgICAgICAgICAgZWxzZSBpZih0aGlzLkNvZFBkYnJlZWRbal0gPT1cIlAwMDAxM1wiKXtcclxuICAgICAgICAvLyAgICAgICAgICAgICAgICAgLy/mtojmga/mnI3liqFcclxuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQ29udGVudCA9IHRoaXMuYWRkQ29udGVudCArIFwiPHAgc3R5bGU9XFxcInRleHQtYWxpZ246bGVmdFxcXCI+PHNwYW4gc3R5bGU9XFxcImZvbnQtc2l6ZToyLjVyZW07XFxcIj4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDtcIiArIHRoaXMubWFya2V0aW5nVGV4dDIgKyBcIjwvc3Bhbj48L3A+XCI7IFxyXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgIC8vICAgICAgICAgICAgIH1cclxuICAgICAgICAvLyAgICAgICAgICAgICAvL+aYr+WQpuWtmOWcqOaMiemSrlxyXG4gICAgICAgIC8vICAgICAgICAgICAgIGlmKHRoaXMuQnRuTGlzdFtqXSE9XCJcIil7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgIHRoaXMuYWRkQ29udGVudCA9IHRoaXMuYWRkQ29udGVudCArICBcIjxidXR0b24gY2xhc3M9XFxcImJ0blxcXCIgc3R5bGUgPVxcXCJtYXJnaW4tbGVmdDoyNSU7bWFyZ2luLXJpZ2h0OjI1JTtcXFwiPlwiICsgdGhpcy5CdG5MaXN0W2pdICtcIjwvYnV0dG9uPlwiXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgfSAgXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgdGhpcy5hZGRDb250ZW50ICs9IFwiPC9kaXY+XCI7IFxyXG4gICAgICAgIC8vICAgICAgICAgICAgIGFsZXJ0KFwi57K+5YeG6JCl6ZSAIENvbnRlbnQgPT5cIisgdGhpcy5hZGRDb250ZW50KTtcclxuICAgICAgICAvLyAgICAgICAgICAgICBwYWdlTG9nX2NvbHMoXCLnsr7lh4bokKXplIAgQ29udGVudCA9PlwiKyB0aGlzLmFkZENvbnRlbnQpO1xyXG4gICAgICAgIC8vICAgICAgICAgICAgICQoXCIjcGFnZVwiK2kpLmFwcGVuZCggdGhpcy5hZGRDb250ZW50KTsgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgIC8vICAgICAgICAgfVxyXG4gICAgICAgIC8vICAgICB9XHJcbiAgICAgICAgLy8gICAgIC8vc3dpcGVy5Yid5aeL5YyWXHJcbiAgICAgICAgLy8gICAgIHRoaXMuc3dpcGVyID0gbmV3IFN3aXBlcignLk1lZGlhUGljIC5zd2lwZXItY29udGFpbmVyJywge1xyXG4gICAgICAgIC8vICAgICAgICAgcGFnaW5hdGlvbjogJy5zd2lwZXItcGFnaW5hdGlvbicsXHJcbiAgICAgICAgLy8gICAgICAgICBwYWdpbmF0aW9uQ2xpY2thYmxlOiB0cnVlLFxyXG4gICAgICAgIC8vICAgICAgICAgcHJldkJ1dHRvbjonLnN3aXBlci1idXR0b24tcHJldicsXHJcbiAgICAgICAgLy8gICAgICAgICBuZXh0QnV0dG9uOicuc3dpcGVyLWJ1dHRvbi1uZXh0JyxcclxuICAgICAgICAvLyAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vIH0sXHJcbiAgICAgICAgLi4ubWFwQWN0aW9ucyhbJ2luaXRQb29sJywgJ2ZldGNoJywgJ3N1Ym1pdCcsICdvbkNhbmNlbCcsICdvbkNvbnRpbnVlJywnZXhpdFNjZW5lJ10pXHJcbiAgICB9LFxyXG4gICAgbW91bnRlZCAoKSB7XHJcbiAgICAgICAgdGhpcy5pbml0UGFnZSgpO1xyXG4gICAgICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICAgICAgLy8gJChcIi5NZWRpYVBpY1wiKS5vbihcImNsaWNrXCIsXCIuQ2FyZE1lZGlhXCIsZnVuY3Rpb24oKXtcclxuICAgICAgICAvLyAgICAgLy/kuqflk4Hku6PnoIHkuLrnqbrkuI3ot7PovaxcclxuICAgICAgICAvLyAgICAgaWYgKFwiXCIgPT0gdm0ucG9vbC5HRF9BMDFfVHJhbnNfUmVjb21wcm9jY29yZCB8fCB1bmRlZmluZWQgPT0gdm0ucG9vbC5HRF9BMDFfVHJhbnNfUmVjb21wcm9jY29yZClcclxuICAgICAgICAvLyAgICAge1xyXG4gICAgICAgIC8vICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIC8vICAgICB9XHJcbiAgICAgICAgLy8gICAgIHZhciBpbmRleCA9IE51bWJlcigkKHRoaXMpLmluZGV4KCkpICsgTnVtYmVyKHZtLnN3aXBlci5hY3RpdmVJbmRleCkgKiBOdW1iZXIodm0ubnVtKTtcclxuICAgICAgICAvLyAgICAgdmFyIERpdklkID0gJChcIi5EaXZcIitpbmRleCkuYXR0cihcImlkXCIpO1xyXG4gICAgICAgIC8vICAgICBpZiggRGl2SWQgPT0gXCJPblNlbGVjdFByb2R1Y3RcIil7XHJcbiAgICAgICAgLy8gICAgICAgICAvL+i3s+i9rOWIsOS/oeeUqOWNoeeUs+ivt1xyXG4gICAgICAgIC8vICAgICB2bS5wb29sLkdEX0EwMV9NZW51SUQgPSBcIjA5MDAwMVwiO1xyXG4gICAgICAgIC8vICAgICB2bS5wb29sLkdEX0EwMV9UcmFuc19TYWxlRmxhZyA9IFwiMVwiO1xyXG4gICAgICAgIC8vICAgICB2bS5wb29sLkdEX0IwOV9zbHRDYXJkSW1nID0gdm0uUGljX1VSTC5zcGxpdChcIlxcXFxcIikuam9pbihcIlxcXFxcXFxcXCIpO1xyXG5cclxuICAgICAgICAvLyAgICAgdmFyIHBkbm8gPSB2bS5wb29sLkdEX0EwMV9UcmFuc19SZWNvbXByb2Njb3JkO1xyXG4gICAgICAgIC8vICAgICBpZiAocGRubyA9PSBcIkNDR1k4SVwiIHx8IHBkbm8gPT0gXCJDQ1BZOElcIlxyXG4gICAgICAgIC8vICAgICAgICB8fCBwZG5vID09IFwiQ0NHWTZJXCIgfHwgcGRubyA9PSBcIkNDR1k1SVwiXHJcbiAgICAgICAgLy8gICAgICAgIHx8IHBkbm8gPT0gXCJDQ1BZNUlcIiB8fCBwZG5vID09IFwiQ0NHWTlJXCJcclxuICAgICAgICAvLyAgICAgICAgfHwgcGRubyA9PSBcIkNDR1kySVwiIHx8IHBkbm8gPT0gXCJDQ1BZMklcIlxyXG4gICAgICAgIC8vICAgICAgICB8fCBwZG5vID09IFwiQ0NHWjlJXCIgfHwgcGRubyA9PSBcIkNDUFo5SVwiXHJcbiAgICAgICAgLy8gICAgICAgIHx8IHBkbm8gPT0gXCJDQ0dYMklcIiB8fCBwZG5vID09IFwiQ0NQWDJJXCJcclxuICAgICAgICAvLyAgICAgICAgfHwgcGRubyA9PSBcIkNDR0ozSVwiKVxyXG4gICAgICAgIC8vICAgICB7XHJcbiAgICAgICAgLy8gICAgICAgICB2bS5wb29sLlBfQjA5X0FwcGluZm90eXBlID0gXCIwMVwiO1xyXG4gICAgICAgIC8vICAgICB9XHJcbiAgICAgICAgLy8gICAgIGVsc2VcclxuICAgICAgICAvLyAgICAge1xyXG4gICAgICAgIC8vICAgICAgICAgdm0ucG9vbC5QX0IwOV9BcHBpbmZvdHlwZSA9IFwiMDNcIlxyXG4gICAgICAgIC8vICAgICB9XHJcblxyXG4gICAgICAgIC8vICAgICAvL+S/neWtmOWNoeenjeS7o+eggVxyXG4gICAgICAgIC8vICAgICB2bS5wb29sLlBfQjA5X1Bkbm8gPSB2bS5wb29sLkdEX0EwMV9UcmFuc19SZWNvbXByb2Njb3JkO1xyXG4gICAgICAgIC8vICAgICB2bS5zdWJtaXQodm0uc2V0S2V5cyk7XHJcbiAgICAgICAgLy8gICAgIGV4aXRTY2VuZShcIlNUQV9TRUxFQ1RQUk9EVUNUXCIpO1xyXG4gICAgICAgIC8vIH0gICAgXHJcbiAgICAgICAgLy8gfSk7XHJcbiAgICAgICAgXHJcbiAgICB9LFxyXG5cdHdhdGNoOntcclxuICAgICAgICBwb29sKHZhbHVlKXtcclxuICAgICAgICAgICAgLy/nm5HlkKzmlbDmja7msaDlj5jph4/mmK/lkKblt7Lov5Tlm57vvIzkv53or4HmlbDmja7msaDojrflj5bmiJDlip/lkI7lho3muLLmn5PpobXpnaJcclxuICAgICAgICAgICAgaWYodmFsdWUuaGFzT3duUHJvcGVydHkoXCJHRF9BMDFfVGNwQ2FyZF9EYXRhXCIpKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW5pdERhdGEoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbn1cclxuPC9zY3JpcHQ+IFxyXG48c3R5bGUgc2NvcGVkPlxyXG4uUmVzdWx0X3RvcHtcclxuICAgIGhlaWdodDogMTAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0b3A6IDQwcHg7XHJcbn1cclxuLlJlc3VsdF90b3AgcHtcclxuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0Zm9udC1zaXplOiAxLjhyZW07XHJcbn1cclxuLnN3aXBlci1zbGlkZU5OMXtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGhlaWdodDo1NTBweDtcclxufVxyXG4uTWVkaWFQaWN7XHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgaGVpZ2h0OiA4MiU7XHJcbiAgICBtYXJnaW46IDIlIGF1dG87XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufSAgXHJcbi5DYXJkTWVkaWF7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogNDAlO1xyXG4gICAgaGVpZ2h0OiA4OCU7XHJcbiAgICBtYXJnaW46IDIlIGF1dG87XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDhiNmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDE2cHggNjVweCAtMTBweCAjOTk5O1xyXG4gIH1cclxuXHJcbi5DYXJkTWVkaWEub257XHJcbiAgYmFja2dyb3VuZDogcmdiYSgxMzAsIDIxOSwgMjA2LDAuNCk7XHJcbiB9XHJcbi5DYXJkTWVkaWEgaW1ne1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDpjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbi5DYXJkTWVkaWEgcHtcclxuICAgZm9udC1zaXplOiAyLjRyZW07XHJcbiAgIG1hcmdpbi10b3A6LTEwcHg7XHJcbiAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgfVxyXG4gLkNhcmRNZWRpYSBwIHNwYW57XHJcbiAgICAgIGZvbnQtc2l6ZToxLjdyZW07XHJcbiAgICAgIHRleHQtYWxpZ246bGVmdDtcclxuICB9XHJcbi54LW1vZGFse1xyXG5cdHdpZHRoOjc1JTtcclxuXHRoZWlnaHQ6NzUlO1xyXG5cdG1hcmdpbjogNiUgYXV0bztcclxufVxyXG4uYnRue1xyXG5cdG1hcmdpbi1sZWZ0OjYlOyBcclxuXHRtYXJnaW4tcmlnaHQ6NiU7XHJcbn1cclxuLmdyYWRpZW50eyBcclxuICAgIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwgcmdiKDE4NiwyMzksMjQ2KSwgcmdiKDE0MiwyMDMsMjExKSk7XHJcbiAgICBiYWNrZ3JvdW5kOiAtbW96LWxpbmVhci1ncmFkaWVudCh0b3AsIHJnYigxODYsMjM5LDI0NiksIHJnYigxNDIsMjAzLDIxMSkpO1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSxyZ2IoMTg2LDIzOSwyNDYpLCByZ2IoMTQyLDIwMywyMTEpKTsgIFxyXG4gICAgLyogYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCNENEY3RkQsICM5NUQ1REYpOyDmoIflh4bnmoTor63ms5UgICovXHJcbn0gXHJcbi5jbHNGb3Jre1xyXG4gICAgbWFyZ2luLWxlZnQ6IDkyJTtcclxuICAgIHdpZHRoOiAxMDBweDtcclxuICAgIGhlaWdodDogOSU7XHJcbn1cclxuLmNsc0ZvcmsgaW1ne1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICB6LWluZGV4OiAxMDA7XHJcbiAgICBtYXJnaW4tbGVmdDogMzZweDtcclxufVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIGFuZCAgKG1heC13aWR0aDoxMzgwcHgpIHtcclxuICAgIC5DYXJkTWVkaWF7XHJcbiAgICAgICAgaGVpZ2h0OiA4NCU7XHJcbiAgICAgICAgd2lkdGg6IDQ1JTtcclxuICAgICAgICBtYXJnaW46IDQlIGF1dG87XHJcbiAgICB9XHJcbiAgICAuY2xzRm9yayBpbWd7XHJcbiAgICAgICAgei1pbmRleDogMTAwO1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgICBtYXJnaW4tbGVmdDogNXB4OyAgXHJcbiAgICB9XHJcbn1cclxuPC9zdHlsZT5cclxuIiwidmFyIF9fdnVlaWZ5X3N0eWxlX2Rpc3Bvc2VfXyA9IHJlcXVpcmUoXCJ2dWVpZnkvbGliL2luc2VydC1jc3NcIikuaW5zZXJ0KFwiLmJiW2RhdGEtdi02NDc2ODdmM117XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB0b3A6IDUwJTsgXFxuICBsZWZ0OiA1MCU7XFxuICAtd2Via2l0LWFuaW1hdGlvbjogY2xvY2t3aXNlIDVzIDtcXG4gIGFuaW1hdGlvbjogY2xvY2t3aXNlIDVzIDtcXG4gIHRyYW5zZm9ybS1vcmlnaW46IDMwMHB4IDUwMHB4O1xcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XFxufVxcbi5iYiBpbWdbZGF0YS12LTY0NzY4N2YzXSB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHBvc2l0aW9uOnJlbGF0aXZlO1xcbiAgd2lkdGg6IDMwMHB4O1xcbiAgaGVpZ2h0OiAzMDBweDtcXG4gIG9wYWNpdHk6IDE7XFxuICBhbmltYXRpb246IGNoYW5nZSA1cywgbXlsb2dvIDAuNnMgIDUuMXMgNCBhbHRlcm5hdGU7XFxuICAtbW96LWFuaW1hdGlvbjogY2hhbmdlIDVzLCBteWxvZ28gMC42cyAgNS4xcyA0IGFsdGVybmF0ZTtcXG4gIC13ZWJraXQtYW5pbWF0aW9uOiBjaGFuZ2UgNXMsIG15bG9nbyAwLjZzICA1LjFzIDQgYWx0ZXJuYXRlO1xcbiAgLW8tYW5pbWF0aW9uOiBjaGFuZ2UgNXMsIG15bG9nbyAwLjZzICA1LjFzIDQgYWx0ZXJuYXRlO1xcblxcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcXG4gIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xcbiAgLW8tdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcXG4gIC1tb3otdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcXG5cXG59XFxuQC13ZWJraXQta2V5ZnJhbWVzIGNsb2Nrd2lzZXtcXG4gIDAlICB7IC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZykgOyAgfVxcbiAgMTAwJXsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7IH1cXG59XFxuQGtleWZyYW1lcyBjbG9ja3dpc2Uge1xcbiAgMCUgIHsgdHJhbnNmb3JtOiByb3RhdGUoMGRlZykgOyB9XFxuICAxMDAleyB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7IH1cXG59XFxuQGtleWZyYW1lcyBjaGFuZ2V7XFxuICAgIGZyb20ge1xcbiAgICAgIHdpZHRoOiAwcHg7XFxuICAgICAgaGVpZ2h0OiAwcHg7XFxuICAgICAgb3BhY2l0eTogMDtcXG4gICAgfVxcbiAgICB0byB7XFxuICAgICAgd2lkdGg6IDMwMHB4O1xcbiAgICAgIGhlaWdodDogMzAwcHg7XFxuICAgICAgb3BhY2l0eTogMTtcXG4gICAgfVxcbn1cXG5Aa2V5ZnJhbWVzIG15bG9nb3tcXG4gICAgZnJvbSB7XFxuICAgICAgbGVmdCA6IDIwcHg7XFxuICAgIH1cXG4gICAgdG8ge1xcbiAgICAgIGxlZnQ6IC0yMHB4O1xcbiAgICB9XFxufVwiKVxudmFyIF9fdnVlX19vcHRpb25zX18gPSAodHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcImZ1bmN0aW9uXCI/IG1vZHVsZS5leHBvcnRzLm9wdGlvbnM6IG1vZHVsZS5leHBvcnRzKVxuaWYgKF9fdnVlX19vcHRpb25zX18uZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlaWZ5XSBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgYW5kIHNob3VsZCBiZSBkZWZpbmVkIGluIHBsYWluIGpzIGZpbGVzIHVzaW5nIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuX192dWVfX29wdGlvbnNfXy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygneC1sYXlvdXQtbWFpbicsW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImJiXCJ9LFtfYygnaW1nJyx7YXR0cnM6e1wic3JjXCI6X3ZtLiRyb290LmltZ1BhdGgoJ2ltZy/nlJ/ml6Xlv6vkuZAucG5nJyksXCJhbHRcIjpcIlwifX0pXSldKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW11cbl9fdnVlX19vcHRpb25zX18uX3Njb3BlSWQgPSBcImRhdGEtdi02NDc2ODdmM1wiXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7ICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCB0cnVlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBtb2R1bGUuaG90LmRpc3Bvc2UoX192dWVpZnlfc3R5bGVfZGlzcG9zZV9fKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtNjQ3Njg3ZjNcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LTY0NzY4N2YzXCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH1cbn0pKCl9IiwiXHJcbjx0ZW1wbGF0ZT5cclxuICAgIDx4LWxheW91dC1tYWluPlxyXG4gICAgICAgICAgICA8cCBjbGFzcz1cInRpdGxlXCI+e3t0aXRsZX19PC9wPlxyXG4gICAgICAgICAgICA8dWwgY2xhc3M9J3Byb2R1Y3RhbGxpbmZvJz5cclxuICAgICAgICAgICAgICAgIDxsaT5cclxuICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0nbWFpbmxlZnQnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7lp5PlkI3vvJo8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdwcm9kdWN0aW5mb3JpZ2h0JyBpZD0nJz5YWFhYWDwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgPHA+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPuivgeS7tuexu+Wei++8mjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J3Byb2R1Y3RpbmZvcmlnaHQnIGlkPScnPlhYWFhYPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgICAgICA8bGk+XHJcbiAgICAgICAgICAgICAgICAgICAgPHAgIGNsYXNzPSdtYWlubGVmdCc+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPuS6p+WTgeS7o+egge+8mjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J3Byb2R1Y3RpbmZvcmlnaHQnIGlkPScnPlhYWFhYPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgICAgICAgICA8cD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+6K+B5Lu25Y+356CB77yaPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ncHJvZHVjdGluZm9yaWdodCcgaWQ9Jyc+WFhYWFg8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgICAgIDxsaT5cclxuICAgICAgICAgICAgICAgICAgICA8cCAgY2xhc3M9J21haW5sZWZ0Jz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+5Lqn5ZOB5ZCN56ew77yaPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ncHJvZHVjdGluZm9yaWdodCcgaWQ9Jyc+WFhYWFg8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgICAgICAgICAgIDxwPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7luIHnp43vvJo8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdwcm9kdWN0aW5mb3JpZ2h0JyBpZD0nJz5YWFhYWDwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICAgICAgPGxpPlxyXG4gICAgICAgICAgICAgICAgICAgIDxwICBjbGFzcz0nbWFpbmxlZnQnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7kuqflk4Hpo47pmannsbvlnovvvJo8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdwcm9kdWN0aW5mb3JpZ2h0JyBpZD0nJz5YWFhYWDwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgPHA+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPuS6p+WTgeexu+Wei++8mjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J3Byb2R1Y3RpbmZvcmlnaHQnIGlkPScnPlhYWFhYPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgICAgICA8bGk+XHJcbiAgICAgICAgICAgICAgICAgICAgPHAgIGNsYXNzPSdtYWlubGVmdCc+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPuWPkeWUrui1t+Wni+aXpe+8mjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J3Byb2R1Y3RpbmZvcmlnaHQnIGlkPScnPlhYWFhYPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgICAgICAgICA8cD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+5Y+R5ZSu57uI5q2i5pel77yaPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ncHJvZHVjdGluZm9yaWdodCcgaWQ9Jyc+WFhYWFg8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgICAgIDxsaT5cclxuICAgICAgICAgICAgICAgICAgICA8cCAgY2xhc3M9J21haW5sZWZ0Jz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+6LW35oGv5pel77yaPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ncHJvZHVjdGluZm9yaWdodCcgaWQ9Jyc+WFhYWFg8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgICAgICAgICAgIDxwPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7liLDmnJ/ml6XvvJo8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdwcm9kdWN0aW5mb3JpZ2h0JyBpZD0nJz5YWFhYWDwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICAgICAgPGxpPlxyXG4gICAgICAgICAgICAgICAgICAgIDxwICBjbGFzcz0nbWFpbmxlZnQnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7otbfngrnph5Hpop3vvJo8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSdwcm9kdWN0aW5mb3JpZ2h0JyBpZD0nJz5YWFhYWDwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgPHA+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPumAkuWinumHkemine+8mjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J3Byb2R1Y3RpbmZvcmlnaHQnIGlkPScnPlhYWFhYPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgICAgICA8bGk+XHJcbiAgICAgICAgICAgICAgICAgICAgPHAgIGNsYXNzPSdtYWlubGVmdCc+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPuacn+mZkO+8mjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9J3Byb2R1Y3RpbmZvcmlnaHQnIGlkPScnPlhYWFhYPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgICAgICAgICA8cD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+6aKE5pyf5pS255uK546H77yaPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ncHJvZHVjdGluZm9yaWdodCcgaWQ9Jyc+WFhYWFg8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgPC91bD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ0bmJveFwiPlxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBiYWNrYnRuXCIgaWQ9XCJtb2RhbF9idG5fYmFja1wiPuS4iuS4gOatpTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBzdXJlYnRuXCIgaWQ9XCJtb2RhbF9idG5fc3VyZVwiPuS4i+S4gOatpTwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCB7IG1hcFN0YXRlLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGRhdGEgKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHRpdGxlOiBcIueQhui0ouS6p+WTgeiupOi0rS/nlLPotK3kv6Hmga/loavlhplcIixcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgXHJcbn1cclxuPC9zY3JpcHQ+IiwiPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcbiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz1cImRldGFpbF90YWJcIj5cclxuXHRcdFx0XHRcdDx0aGVhZD5cclxuXHRcdFx0XHRcdFx0PHRyPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD7ln7rph5Hku6PnoIE8L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD7ln7rph5HlkI3np7A8L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD7mipXotYTnrqHnkIbkuro8L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD7ln7rph5HljZXkvY3lh4DlgLw8L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD7lrprmipXnsbvlnos8L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD7lrprmipXlkajmnJ88L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD7lrprmipXph5Hpop08L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD7lkIjnuqblj7c8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+XHJcblx0XHRcdFx0XHRcdDwvdHI+XHJcblx0XHRcdFx0XHQ8L3RoZWFkPlxyXG5cdFx0XHRcdFx0PHRib2R5ICBpZD1cIlRib2R5UXVlcnlcIj5cclxuXHRcdFx0XHRcdFx0PHRyPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD42MDAwMDE8L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD7nlJ/lkb3kuIDlj7c8L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD4xMDAwLjAwPC90ZD5cclxuXHRcdFx0XHRcdFx0XHQ8dGQ+MzDlpKk8L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD4zJTwvdGQ+XHJcblx0XHRcdFx0XHRcdFx0PHRkPjIwMTcvOC8xPC90ZD5cclxuXHRcdFx0XHRcdFx0XHQ8dGQ+MjAxNy84LzMwPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4xMTExMTE8L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD48YnV0dG9uIGNsYXNzPSdkZXRhaWxidG4nIEBjbGljaz0nb25EZXRhaWwnPuivpuaDhTwvYnV0dG9uPjwvdGQ+XHJcblx0XHRcdFx0XHRcdDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuXHRcdFx0XHRcdFx0XHQ8dGQ+NjAwMDAxPC90ZD5cclxuXHRcdFx0XHRcdFx0XHQ8dGQ+55Sf5ZG95LiA5Y+3PC90ZD5cclxuXHRcdFx0XHRcdFx0XHQ8dGQ+MTAwMC4wMDwvdGQ+XHJcblx0XHRcdFx0XHRcdFx0PHRkPjMw5aSpPC90ZD5cclxuXHRcdFx0XHRcdFx0XHQ8dGQ+MyU8L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD4yMDE3LzgvMTwvdGQ+XHJcblx0XHRcdFx0XHRcdFx0PHRkPjIwMTcvOC8zMDwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+MTExMTExPC90ZD5cclxuXHRcdFx0XHRcdFx0XHQ8dGQ+PGJ1dHRvbiBjbGFzcz0nZGV0YWlsYnRuJyBAY2xpY2s9J29uRGV0YWlsJz7or6bmg4U8L2J1dHRvbj48L3RkPlxyXG5cdFx0XHRcdFx0XHQ8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcblx0XHRcdFx0XHRcdFx0PHRkPjYwMDAwMTwvdGQ+XHJcblx0XHRcdFx0XHRcdFx0PHRkPueUn+WRveS4gOWPtzwvdGQ+XHJcblx0XHRcdFx0XHRcdFx0PHRkPjEwMDAuMDA8L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD4zMOWkqTwvdGQ+XHJcblx0XHRcdFx0XHRcdFx0PHRkPjMlPC90ZD5cclxuXHRcdFx0XHRcdFx0XHQ8dGQ+MjAxNy84LzE8L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD4yMDE3LzgvMzA8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjExMTExMTwvdGQ+XHJcblx0XHRcdFx0XHRcdFx0PHRkPjxidXR0b24gY2xhc3M9J2RldGFpbGJ0bicgQGNsaWNrPSdvbkRldGFpbCc+6K+m5oOFPC9idXR0b24+PC90ZD5cclxuXHRcdFx0XHRcdFx0PC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD42MDAwMDE8L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD7nlJ/lkb3kuIDlj7c8L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD4xMDAwLjAwPC90ZD5cclxuXHRcdFx0XHRcdFx0XHQ8dGQ+MzDlpKk8L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD4zJTwvdGQ+XHJcblx0XHRcdFx0XHRcdFx0PHRkPjIwMTcvOC8xPC90ZD5cclxuXHRcdFx0XHRcdFx0XHQ8dGQ+MjAxNy84LzMwPC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4xMTExMTE8L3RkPlxyXG5cdFx0XHRcdFx0XHRcdDx0ZD48YnV0dG9uIGNsYXNzPSdkZXRhaWxidG4nIEBjbGljaz0nb25EZXRhaWwnPuivpuaDhTwvYnV0dG9uPjwvdGQ+XHJcblx0XHRcdFx0XHRcdDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG5cdFx0XHRcdFx0PC90Ym9keT5cclxuXHRcdFx0XHQ8L3RhYmxlPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nY2hhbmdlX3BhZ2UnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPScnPuS4iuS4gOmhtTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPScnPuS4i+S4gOmhtTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnRuYm94XCI+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJhY2tidG5cIiBpZD1cIm1vZGFsX2J0bl9iYWNrXCI+5pmu6YCa5a6a5oqVPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIHN1cmVidG5cIiBpZD1cIm1vZGFsX2J0bl9zdXJlXCI+5pm66IO95a6a5oqVPC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgPC94LWxheW91dC1tYWluPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuaW1wb3J0IHsgbWFwU3RhdGUsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4J1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgZGF0YSAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgSW5wdXRJREluZm86IFwi5Z+66YeR5a6a5oqV5oyB5pyJ5YiX6KGoXCIsXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIG1vdW50ZWQgKCkgeyAgXHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICBcclxufVxyXG48L3NjcmlwdD4iLCI8c3R5bGUgc2NvcGVkPlxyXG4gICAgLnRpdGxlIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDIlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogNC4zcmVtO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBjb2xvcjogIzAwOEI2RTtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogM3B4O1xyXG4gICAgfVxyXG4gICAgLnRpdGxlOmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCAjMDA4QjZFO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgICAgIHRvcDogLTE2cHg7XHJcbiAgICAgICAgcmlnaHQ6IC0yOHB4O1xyXG4gICAgfVxyXG4gICAgLnRpdGxlOmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBib3JkZXItdG9wOiAycHggc29saWQgIzAwOEI2RTtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHdpZHRoOiAzMDBweDtcclxuICAgICAgICB0b3A6IC0xNnB4O1xyXG4gICAgICAgIGxlZnQ6IC0yOHB4O1xyXG4gICAgfVxyXG4gICAgLmlucHV0SURpbmZveyAgIFxyXG4gICAgICAgIGZvbnQtc2l6ZTozLjZyZW07XHJcbiAgICAgICAgbWFyZ2luOjAgYXV0bztcclxuICAgICAgICBtYXJnaW4tdG9wOjIlO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OjEwMHB4O1xyXG4gICAgfVxyXG4gICAgLklEaW5mb2xlZnR7ICAgIFxyXG4gICAgICAgIHRleHQtYWxpZ246cmlnaHQ7IFxyXG4gICAgfVxyXG4gICAgLklEaW5mb3JpZ2h0eyBcclxuICAgICAgICB0ZXh0LWFsaWduOmxlZnQ7XHJcbiAgICAgICAgY29sb3I6IzY2MDBmZjtcclxuICAgIH1cclxuICAgIC5idG57ICAgXHJcbiAgICAgICAgcGFkZGluZzoxMHB4IDIycHg7XHJcbiAgICAgICAgZm9udC1zaXplOjNyZW07XHJcbiAgICAgICAgY29sb3I6I2ZmZjtcclxuICAgIH1cclxuICAgIC5idG5ib3gge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBib3R0b206IDI5JTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICAuaW5wdXRfaW5mb3sgICAgXHJcbiAgICAgICAgaGVpZ2h0OiA2MHB4O1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDhCNkU7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgICBib3gtc2hhZG93OiBpbnNldCAycHggNXB4IDE2cHggMHB4ICNDRENEQ0Q7XHJcbiAgICAgICAgZm9udC1zaXplOiAzLjZyZW07XHJcbiAgICAgICAgcGFkZGluZzogMHB4IDEwcHg7XHJcbiAgICAgICAgY29sb3I6IzY2MDBmZjtcclxuICAgIH1cclxuPC9zdHlsZT5cclxuPHRlbXBsYXRlPlxyXG4gICAgPHgtbGF5b3V0LW1haW4+XHJcbiAgICAgICAgICAgIDxwIGNsYXNzPVwidGl0bGVcIj57e0lucHV0SURJbmZvfX08L3A+XHJcbiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0naW5wdXRJRGluZm8nPlxyXG4gICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0nSURpbmZvbGVmdCc+e3tJRFR5cGV9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSdJRGluZm9yaWdodCc+5riv5r6z5bGF5rCR5p2l5b6A5YaF5Zyw6YCaPC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0nSURpbmZvbGVmdCc+e3tDdXN0b21lck5hbWV9fTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSdJRGluZm9yaWdodCc+PGlucHV0IGNsYXNzPVwiaW5wdXRfaW5mb1wiIHR5cGU9XCJ0ZXh0XCIgaWQ9XCJOYW1lXCI+PC90ZD5cclxuICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0nSURpbmZvbGVmdCc+e3tJRE51bWJlcn19PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9J0lEaW5mb3JpZ2h0Jz48aW5wdXQgY2xhc3M9XCJpbnB1dF9pbmZvXCIgdHlwZT1cInRleHRcIiBpZD1cIklETm9cIj48L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgPC90YWJsZT5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ0bmJveFwiPlxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBiYWNrYnRuXCIgaWQ9XCJtb2RhbF9idG5fYmFja1wiPuS4iuS4gOatpTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBzdXJlYnRuXCIgaWQ9XCJtb2RhbF9idG5fc3VyZVwiPuS4i+S4gOatpTwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCB7IG1hcFN0YXRlLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGRhdGEgKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIElucHV0SURJbmZvOiBcIui+k+WFpeivgeS7tuS/oeaBr1wiLFxyXG4gICAgICAgICAgICBJRFR5cGU6IFwi6K+B5Lu257G75Z6L77yaXCIsXHJcbiAgICAgICAgICAgIEN1c3RvbWVyTmFtZTpcIuWuouaIt+Wnk+WQje+8mlwiLFxyXG4gICAgICAgICAgICBJRE51bWJlcjpcIuivgeS7tuWPt+egge+8mlwiXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gIFxyXG59XHJcbjwvc2NyaXB0PiIsInZhciBfX3Z1ZWlmeV9zdHlsZV9kaXNwb3NlX18gPSByZXF1aXJlKFwidnVlaWZ5L2xpYi9pbnNlcnQtY3NzXCIpLmluc2VydChcIi5zdXBwb3J0X3RyYW5bZGF0YS12LTNhOTEwNmE0XXsgICAgXFxuICAgICBjb2xvcjogIzMzMztcXG4gICAgIGZvbnQtc2l6ZTogMi44cmVtO1xcbiAgICAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gICAgIG1hcmdpbi10b3A6MyU7XFxufVxcbi5jaGVja19ib3hbZGF0YS12LTNhOTEwNmE0XXsgIFxcbiAgICB3aWR0aDoyOCU7XFxuICAgIHRleHQtYWxpZ246IGxlZnQ7XFxufVxcbnVsW2RhdGEtdi0zYTkxMDZhNF17ICBcXG4gICAgIGZvbnQtc2l6ZTogMS44cmVtO1xcbiAgICAgbWFyZ2luOjAgYXV0bztcXG4gICAgIG1hcmdpbi10b3A6MyU7XFxuICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xcbiAgICAgd2lkdGg6ODglO1xcbn1cXG5saVtkYXRhLXYtM2E5MTA2YTRdeyAgXFxuICAgIG1hcmdpbi1ib3R0b206OHB4O1xcbn1cXG4uaW5wdXRfYW1vdW50W2RhdGEtdi0zYTkxMDZhNF0ge1xcbiAgICAgd2lkdGg6IDE1OHB4O1xcbiAgICAgaGVpZ2h0OiAzMHB4O1xcbiAgICAgYm9yZGVyLXJhZGl1czogMnB4O1xcbiAgICAgZm9udC1zaXplOjEuOHJlbTtcXG4gICAgIG1hcmdpbi1sZWZ0OjEwcHg7XFxuICAgICBtYXJnaW4tcmlnaHQ6MDtcXG4gICAgIGZvbnQtc2l6ZToxLjhyZW07XFxuIH1cXG4gLmlucHV0X2luZm9bZGF0YS12LTNhOTEwNmE0XXtcXG4gICAgIGhlaWdodDogMzBweDtcXG4gICAgIHdpZHRoOjE5OHB4O1xcbiAgICAgYm9yZGVyLXJhZGl1czogMnB4O1xcbiAgICAgbWFyZ2luLWxlZnQ6MTBweDtcXG4gICAgIG1hcmdpbi1yaWdodDowO1xcbiAgICAgZm9udC1zaXplOjEuOHJlbTtcXG4gfVxcbiAuaW5wdXRfbG9uZ1tkYXRhLXYtM2E5MTA2YTRdeyAgICBcXG4gICAgIGhlaWdodDogMzBweDtcXG4gICAgIHdpZHRoOjYxNnB4O1xcbiAgICAgYm9yZGVyLXJhZGl1czogMnB4O1xcbiAgICAgbWFyZ2luLWxlZnQ6MTBweDtcXG4gICAgIG1hcmdpbi1yaWdodDowO1xcbiAgICAgZm9udC1zaXplOjEuOHJlbTtcXG4gfVxcbiAuY2hlY2tfYm94IGlbZGF0YS12LTNhOTEwNmE0XSwucmFkaW9fYm94IGlbZGF0YS12LTNhOTEwNmE0XXtcXG4gICAgIHdpZHRoOiAzMHB4O1xcbiAgICAgaGVpZ2h0OiAzMHB4O1xcbiB9XFxuIC5idG5ib3hbZGF0YS12LTNhOTEwNmE0XSB7XFxuICAgICBib3R0b206IDIlO1xcbiB9XFxuIC5yYWRpb19ib3hbZGF0YS12LTNhOTEwNmE0XSwuY2hlY2tfYm94W2RhdGEtdi0zYTkxMDZhNF17ICBcXG4gICAgIGZvbnQtc2l6ZToxLjhyZW07XFxuIH1cXG4gLmVuZ0FkZFtkYXRhLXYtM2E5MTA2YTRdeyAgICBcXG4gICAgIHdpZHRoOjM4MHB4O1xcbiB9XFxuIC5jaEFkZFtkYXRhLXYtM2E5MTA2YTRdeyBcXG4gICAgIHdpZHRoOjExOHB4O1xcbiB9XFxuIC5zZWxlY3RUeXBlX2xvbmdbZGF0YS12LTNhOTEwNmE0XSB7XFxuICAgICB3aWR0aDogMTk4cHg7XFxuICAgICBoZWlnaHQ6IDMwcHg7XFxuICAgICBhcHBlYXJhbmNlOiBub25lO1xcbiAgICAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xcbiAgICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xcbiAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgICAgYmFja2dyb3VuZDogdXJsKGltZy9jdXN0b21lci9zZWxlY3QucG5nKSBuby1yZXBlYXQgc2Nyb2xsIHJpZ2h0IGNlbnRlciB0cmFuc3BhcmVudDtcXG4gICAgIGZvbnQtc2l6ZTogMS42cmVtO1xcbiAgICAgY29sb3I6ICM2RTBGRkY7XFxuICAgICBiYWNrZ3JvdW5kLXNpemU6IDMwcHg7XFxuICAgICBsaW5lLWhlaWdodDogMjhweDtcXG4gfVxcbiAuaW5wdXRsYXN0W2RhdGEtdi0zYTkxMDZhNF17IFxcbiAgICAgd2lkdGg6ODAwcHg7XFxuIH1cXG4gQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDoxMzAwcHgpeyAgIFxcbiAgICAgLmlucHV0X2xvbmdbZGF0YS12LTNhOTEwNmE0XXsgICAgXFxuICAgICAgICAgd2lkdGg6MzY4cHg7XFxuICAgICB9XFxuICAgICAuY2hBZGRbZGF0YS12LTNhOTEwNmE0XXsgXFxuICAgICAgICAgd2lkdGg6MTEwcHg7XFxuICAgICB9XFxuICAgICAuaW5wdXRfYW1vdW50W2RhdGEtdi0zYTkxMDZhNF17ICBcXG4gICAgICAgICB3aWR0aDoxMjBweDtcXG4gICAgIH1cXG4gICAgIC5lbmdBZGRbZGF0YS12LTNhOTEwNmE0XXsgICAgXFxuICAgICAgICAgd2lkdGg6Mjc4cHg7XFxuICAgICB9XFxuICAgICAuaW5wdXRsYXN0W2RhdGEtdi0zYTkxMDZhNF17IFxcbiAgICAgICAgIHdpZHRoOjg2MHB4O1xcbiAgICAgfVxcbiB9XFxuICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMzAwcHgpIGFuZCAgKG1heC13aWR0aDoxMzgwcHgpeyAgIFxcbiAgICAgdWxbZGF0YS12LTNhOTEwNmE0XXsgIFxcbiAgICAgICAgIG1hcmdpbi10b3A6LTElO1xcbiAgICAgfVxcblxcbiAgICAgLmlucHV0X2xvbmdbZGF0YS12LTNhOTEwNmE0XXsgICAgXFxuICAgICAgICAgd2lkdGg6MzY4cHg7XFxuICAgICB9XFxuICAgICAuY2hBZGRbZGF0YS12LTNhOTEwNmE0XXsgXFxuICAgICAgICAgd2lkdGg6MTEwcHg7XFxuICAgICB9XFxuICAgICAuaW5wdXRfYW1vdW50W2RhdGEtdi0zYTkxMDZhNF17ICBcXG4gICAgICAgICB3aWR0aDoxMjBweDtcXG4gICAgIH1cXG4gICAgIC5lbmdBZGRbZGF0YS12LTNhOTEwNmE0XXsgICAgXFxuICAgICAgICAgd2lkdGg6Mjc4cHg7XFxuICAgICB9XFxuICAgICAuaW5wdXRsYXN0W2RhdGEtdi0zYTkxMDZhNF17IFxcbiAgICAgICAgIHdpZHRoOjg2MHB4O1xcbiAgICAgfVxcbiAgICAgXFxuIH1cIilcbnZhciBfX3Z1ZV9fb3B0aW9uc19fID0gKHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJmdW5jdGlvblwiPyBtb2R1bGUuZXhwb3J0cy5vcHRpb25zOiBtb2R1bGUuZXhwb3J0cylcbmlmIChfX3Z1ZV9fb3B0aW9uc19fLmZ1bmN0aW9uYWwpIHtjb25zb2xlLmVycm9yKFwiW3Z1ZWlmeV0gZnVuY3Rpb25hbCBjb21wb25lbnRzIGFyZSBub3Qgc3VwcG9ydGVkIGFuZCBzaG91bGQgYmUgZGVmaW5lZCBpbiBwbGFpbiBqcyBmaWxlcyB1c2luZyByZW5kZXIgZnVuY3Rpb25zLlwiKX1cbl9fdnVlX19vcHRpb25zX18ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3gtbGF5b3V0LW1haW4nLFtfYygncCcse3N0YXRpY0NsYXNzOlwidGl0bGVcIn0sW192bS5fdihcIuS4quS6uueojuaUtuWxheawkei6q+S7veWjsOaYjlwiKV0pLF92bS5fdihcIiBcIiksX2MoJ3VsJyxbX2MoJ2xpJyxbX3ZtLl92KFwiIOeojuaUtuWxheawkeagh+W/l++8muS7heS4uumdnuWxheawkVwiKV0pLF92bS5fdihcIiBcIiksX2MoJ2xpJyxbX2MoJ3NwYW4nLFtfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgICAgIOWnk++8iOiLseaWh+aIluaLvOmfs++8iVxcbiAgICAgICAgICAgICAgICAgICAgXCIpLF9jKCdpbnB1dCcse3N0YXRpY0NsYXNzOlwiaW5wdXRfYW1vdW50XCIsYXR0cnM6e1widHlwZVwiOlwidGV4dFwifX0pXSksX3ZtLl92KFwiIFwiKSxfYygnc3BhbicsW192bS5fdihcIlxcbiAgICAgICAgICAgICAgICAgICAg5ZCN77yI6Iux5paH5oiW5ou86Z+z77yJXFxuICAgICAgICAgICAgICAgICAgICBcIiksX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6XCJpbnB1dF9hbW91bnRcIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCJ9fSldKV0pLF92bS5fdihcIiBcIiksX2MoJ2xpJyxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAgIOaCqOaYr+WQpuacieeojuaUtuWxheawkeWbve+8iOWcsOWMuu+8ieWPiue6s+eojuS6uuivhuWIq+WPt++8n1xcbiAgICAgICAgICAgICAgICBcIiksX2MoJ2xhYmVsJyx7c3RhdGljQ2xhc3M6XCJyYWRpb19ib3hcIn0sW192bS5fdihcIlxcbiAgICAgICAgICAgICAgICAgICAg5pyJXFxuICAgICAgICAgICAgICAgICAgICBcIiksX2MoJ2lucHV0Jyx7YXR0cnM6e1widHlwZVwiOlwicmFkaW9cIixcIm5hbWVcIjpcImFjY291bnRcIixcImlkXCI6XCJcIn19KSxfYygnaScpXSksX3ZtLl92KFwiIFwiKSxfYygnbGFiZWwnLHtzdGF0aWNDbGFzczpcInJhZGlvX2JveFwifSxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAgICAgICDml6AgXFxuICAgICAgICAgICAgICAgICAgICBcIiksX2MoJ2lucHV0Jyx7YXR0cnM6e1widHlwZVwiOlwicmFkaW9cIixcIm5hbWVcIjpcImFjY291bnRcIixcImlkXCI6XCJcIn19KSxfYygnaScpXSldKSxfdm0uX3YoXCIgXCIpLF9jKCdsaScsW192bS5fdihcIlxcbiAgICAgICAgICAgICAgICDnqI7mlLblsYXmsJHlm73vvIjlnLDljLrvvInlj4rnurPnqI7kurror4bliKvlj7fvvJpcXG4gICAgICAgICAgICAgICAgXCIpLF9jKCdzZWxlY3QnLHtzdGF0aWNDbGFzczpcInNlbGVjdFR5cGVfbG9uZ1wiLGF0dHJzOntcIm5hbWVcIjpcInNlbGVjdFwiLFwiaWRcIjpcIklzc3VlSWRcIn19KSxfdm0uX3YoXCIgXCIpLF9jKCdpbnB1dCcse3N0YXRpY0NsYXNzOlwiaW5wdXRfaW5mb1wiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KV0pLF92bS5fdihcIiBcIiksX2MoJ2xpJyxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAg56iO5pS25bGF5rCR5Zu977yI5Zyw5Yy677yJ5Y+K57qz56iO5Lq66K+G5Yir5Y+377yaXFxuICAgICAgICAgICAgICAgXCIpLF9jKCdzZWxlY3QnLHtzdGF0aWNDbGFzczpcInNlbGVjdFR5cGVfbG9uZ1wiLGF0dHJzOntcIm5hbWVcIjpcInNlbGVjdFwiLFwiaWRcIjpcIklzc3VlSWRcIn19KSxfdm0uX3YoXCIgXCIpLF9jKCdpbnB1dCcse3N0YXRpY0NsYXNzOlwiaW5wdXRfaW5mb1wiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KV0pLF92bS5fdihcIiBcIiksX2MoJ2xpJyxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAg56iO5pS25bGF5rCR5Zu977yI5Zyw5Yy677yJ5Y+K57qz56iO5Lq66K+G5Yir5Y+377yaXFxuICAgICAgICAgICAgICAgXCIpLF9jKCdzZWxlY3QnLHtzdGF0aWNDbGFzczpcInNlbGVjdFR5cGVfbG9uZ1wiLGF0dHJzOntcIm5hbWVcIjpcInNlbGVjdFwiLFwiaWRcIjpcIklzc3VlSWRcIn19KSxfdm0uX3YoXCIgXCIpLF9jKCdpbnB1dCcse3N0YXRpY0NsYXNzOlwiaW5wdXRfaW5mb1wiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KV0pLF92bS5fdihcIiBcIiksX2MoJ2xpJyxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAg56iO5pS25bGF5rCR5Zu977yI5Zyw5Yy677yJ5Y+K57qz56iO5Lq66K+G5Yir5Y+377yaXFxuICAgICAgICAgICAgICAgXCIpLF9jKCdzZWxlY3QnLHtzdGF0aWNDbGFzczpcInNlbGVjdFR5cGVfbG9uZ1wiLGF0dHJzOntcIm5hbWVcIjpcInNlbGVjdFwiLFwiaWRcIjpcIklzc3VlSWRcIn19KSxfdm0uX3YoXCIgXCIpLF9jKCdpbnB1dCcse3N0YXRpY0NsYXNzOlwiaW5wdXRfaW5mb1wiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KV0pLF92bS5fdihcIiBcIiksX2MoJ2xpJyx7c3RhdGljU3R5bGU6e1wibWFyZ2luLWJvdHRvbVwiOlwiMTJweFwifX0sW192bS5fdihcIlxcbiAgICAgICAgICAgICAgIOeojuaUtuWxheawkeWbve+8iOWcsOWMuu+8ieWPiue6s+eojuS6uuivhuWIq+WPt++8mlxcbiAgICAgICAgICAgICAgIFwiKSxfYygnc2VsZWN0Jyx7c3RhdGljQ2xhc3M6XCJzZWxlY3RUeXBlX2xvbmdcIixhdHRyczp7XCJuYW1lXCI6XCJzZWxlY3RcIixcImlkXCI6XCJJc3N1ZUlkXCJ9fSksX3ZtLl92KFwiIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2luZm9cIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCJ9fSldKSxfdm0uX3YoXCIgXCIpLF9jKCdsaScsW192bS5fdihcIlxcbiAgICAgICAgICAgICAgIOeOsOWxheS9j+WcsOS/oeaBr++8muWbveWutlxcbiAgICAgICAgICAgICAgIFwiKSxfYygnc2VsZWN0Jyx7c3RhdGljQ2xhc3M6XCJzZWxlY3RUeXBlX2xvbmdcIixhdHRyczp7XCJuYW1lXCI6XCJzZWxlY3RcIixcImlkXCI6XCJJc3N1ZUlkXCJ9fSldKSxfdm0uX3YoXCIgXCIpLF9jKCdsaScsW192bS5fdihcIlxcbiAgICAgICAgICAgICAgIOS4reaWh+WcsOWdgO+8muihjOaUv+inhOWIklxcbiAgICAgICAgICAgICAgIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2Ftb3VudCBjaEFkZFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KSxfdm0uX3YoXCIgXCIpLF9jKCdpbnB1dCcse3N0YXRpY0NsYXNzOlwiaW5wdXRfYW1vdW50IGNoQWRkXCIsYXR0cnM6e1widHlwZVwiOlwidGV4dFwifX0pLF92bS5fdihcIiBcIiksX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6XCJpbnB1dF9hbW91bnQgY2hBZGRcIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCJ9fSksX3ZtLl92KFwiIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2xvbmdcIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCJ9fSldKSxfdm0uX3YoXCIgXCIpLF9jKCdsaScse3N0YXRpY1N0eWxlOntcIm1hcmdpbi1ib3R0b21cIjpcIjEycHhcIn19LFtfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICDoi7HmlofmiJbmi7zpn7PlnLDlnYDvvJpcXG4gICAgICAgICAgICAgICDnnIHvvIjlt57vvIlcIiksX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6XCJpbnB1dF9hbW91bnRcIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCJ9fSksX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAg5biCXCIpLF9jKCdpbnB1dCcse3N0YXRpY0NsYXNzOlwiaW5wdXRfYW1vdW50XCIsYXR0cnM6e1widHlwZVwiOlwidGV4dFwifX0pLF92bS5fdihcIlxcbiAgICAgICAgICAgICAgIOWMulwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2Ftb3VudFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KSxfdm0uX3YoXCIgXCIpLF9jKCdpbnB1dCcse3N0YXRpY0NsYXNzOlwiaW5wdXRfbG9uZyBlbmdBZGRcIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCJ9fSldKSxfdm0uX3YoXCIgXCIpLF9jKCdsaScsW192bS5fdihcIlxcbiAgICAgICAgICAgICAgICDlh7rnlJ/lnLDkv6Hmga/vvJrlm73lrrZcXG4gICAgICAgICAgICAgICAgXCIpLF9jKCdzZWxlY3QnLHtzdGF0aWNDbGFzczpcInNlbGVjdFR5cGVfbG9uZ1wiLGF0dHJzOntcIm5hbWVcIjpcInNlbGVjdFwiLFwiaWRcIjpcIklzc3VlSWRcIn19KSxfdm0uX3YoXCIgXCIpLF9jKCdsYWJlbCcse3N0YXRpY0NsYXNzOlwiY2hlY2tfYm94XCJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImNoZWNrYm94XCIsYXR0cnM6e1widHlwZVwiOlwiY2hlY2tib3hcIixcImlkXCI6XCIgXCJ9fSksX2MoJ2knKSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgICAgIOS4jueOsOWxheS9j+WcsOS4gOiHtFxcbiAgICAgICAgICAgICAgICBcIildKV0pLF92bS5fdihcIiBcIiksX2MoJ2xpJyxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAg5Lit5paH5Zyw5Z2A77ya6KGM5pS/6KeE5YiSXFxuICAgICAgICAgICAgICAgXCIpLF9jKCdpbnB1dCcse3N0YXRpY0NsYXNzOlwiaW5wdXRfYW1vdW50IGNoQWRkXCIsYXR0cnM6e1widHlwZVwiOlwidGV4dFwifX0pLF92bS5fdihcIiBcIiksX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6XCJpbnB1dF9hbW91bnQgY2hBZGRcIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCJ9fSksX3ZtLl92KFwiIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2Ftb3VudCBjaEFkZFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KSxfdm0uX3YoXCIgXCIpLF9jKCdpbnB1dCcse3N0YXRpY0NsYXNzOlwiaW5wdXRfbG9uZ1wiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KV0pLF92bS5fdihcIiBcIiksX2MoJ2xpJyxbX3ZtLl92KFwiXFxuICAgICAgICAgICAgICAg6Iux5paH5oiW5ou86Z+z5Zyw5Z2A77yaXFxuICAgICAgICAgICAgICAg55yB77yI5bee77yJXCIpLF9jKCdpbnB1dCcse3N0YXRpY0NsYXNzOlwiaW5wdXRfYW1vdW50XCIsYXR0cnM6e1widHlwZVwiOlwidGV4dFwifX0pLF92bS5fdihcIlxcbiAgICAgICAgICAgICAgIOW4glwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2Ftb3VudFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICDljLpcIiksX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6XCJpbnB1dF9hbW91bnRcIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCJ9fSksX3ZtLl92KFwiIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2xvbmcgZW5nQWRkXCIsYXR0cnM6e1widHlwZVwiOlwidGV4dFwifX0pXSksX3ZtLl92KFwiIFwiKSxfYygnbGknLFtfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAg6Kej6YeK6K+05piOOlxcbiAgICAgICAgICAgICAgICBcIiksX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6XCJpbnB1dF9sb25nIGlucHV0bGFzdFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KV0pLF92bS5fdihcIiBcIiksX2MoJ2xpJyx7c3RhdGljU3R5bGU6e1wiY29sb3JcIjpcInJlZFwifX0sW192bS5fdihcIlxcbiAgICAgICAgICAgICAgIO+8iOa4qemmqOaPkOekuu+8muW9k+WbveexjeOAgeivgeS7tuexu+Wei+OAgeeOsOWxheWcsOWdgOetieaJgOWxnuWbveWutuS4juWjsOaYjueahOeojuaUtuWxheawkeWbve+8iOWcsOWMuu+8ieS4jeS4gOiHtOaXtu+8jOmcgOimgeWhq+WGmeatpOino+mHiuivtOaYju+8iVxcbiAgICAgICAgICAgIFwiKV0pXSksX3ZtLl92KFwiIFwiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJidG5ib3hcIn0sW19jKCdidXR0b24nLHtzdGF0aWNDbGFzczpcImJ0biBiYWNrYnRuXCIsYXR0cnM6e1wiaWRcIjpcIm1vZGFsX2J0bl9iYWNrXCJ9fSxbX3ZtLl92KFwi5LiK5LiA5q2lXCIpXSksX3ZtLl92KFwiIFwiKSxfYygnYnV0dG9uJyx7c3RhdGljQ2xhc3M6XCJidG4gc3VyZWJ0blwiLGF0dHJzOntcImlkXCI6XCJtb2RhbF9idG5fc3VyZVwifX0sW192bS5fdihcIuehruWumlwiKV0pXSldKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW11cbl9fdnVlX19vcHRpb25zX18uX3Njb3BlSWQgPSBcImRhdGEtdi0zYTkxMDZhNFwiXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7ICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCB0cnVlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBtb2R1bGUuaG90LmRpc3Bvc2UoX192dWVpZnlfc3R5bGVfZGlzcG9zZV9fKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtM2E5MTA2YTRcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LTNhOTEwNmE0XCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH1cbn0pKCl9IiwiPHN0eWxlIHNjb3BlZD5cclxuLnNjcm9sbEJhcnsgXHJcbiAgICBoZWlnaHQ6NjAwcHg7XHJcbiAgICB3aWR0aDo4MDBweDtcclxuICAgIGZvbnQtc2l6ZToyMHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206NTBweDsgICBcclxufVxyXG48L3N0eWxlPlxyXG48dGVtcGxhdGU+XHJcbiAgICA8eC1sYXlvdXQtbWFpbj5cclxuICAgIDx1bCBjbGFzcz1cInNjcm9sbEJhclwiPlxyXG4gICAgICAgIDxsaT4xMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTE8L2xpPlxyXG4gICAgICAgIDxsaT4xMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTE8L2xpPlxyXG4gICAgICAgIDxsaT4xMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTE8L2xpPlxyXG4gICAgICAgIDxsaT4xMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTE8L2xpPlxyXG4gICAgICAgIDxsaT4xMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTE8L2xpPlxyXG4gICAgICAgIDxsaT4xMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTE8L2xpPlxyXG4gICAgICAgIDxsaT4xMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTE8L2xpPlxyXG4gICAgICAgIDxsaT4xMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTE8L2xpPlxyXG4gICAgICAgIDxsaT4xMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTE8L2xpPiBcclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0PC9saT5cclxuICAgICAgICA8bGk+MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExPC9saT5cclxuICAgICAgICA8bGk+MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzPC9saT5cclxuICAgICAgICA8bGk+MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyPC9saT5cclxuICAgICAgICA8bGk+MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyPC9saT5cclxuICAgICAgICA8bGk+MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzPC9saT5cclxuICAgIDwvdWw+XHJcbiAgICBcclxuICAgIDwveC1sYXlvdXQtbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuPHNjcmlwdD5cclxuaW1wb3J0IHsgbWFwU3RhdGUsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4J1xyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBkYXRhICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgfSxcclxuICAgIG1vdW50ZWQgKCkge1xyXG4gICAgICAgICQoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICBzY3JvbGxCYXIoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG48L3NjcmlwdD5cclxuIiwidmFyIF9fdnVlaWZ5X3N0eWxlX2Rpc3Bvc2VfXyA9IHJlcXVpcmUoXCJ2dWVpZnkvbGliL2luc2VydC1jc3NcIikuaW5zZXJ0KFwiLnN1cHBvcnRfdHJhbltkYXRhLXYtMjU2MTFkODBdeyAgICBcXG4gICAgIGNvbG9yOiAjMzMzO1xcbiAgICAgZm9udC1zaXplOiAyLjhyZW07XFxuICAgICBmb250LXdlaWdodDogNjAwO1xcbiAgICAgbWFyZ2luLXRvcDozJTtcXG59XFxuLmNoZWNrX2JveFtkYXRhLXYtMjU2MTFkODBdeyAgXFxuICAgIHdpZHRoOjI4JTtcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXG59XFxudWxbZGF0YS12LTI1NjExZDgwXXsgIFxcbiAgICBmb250LXNpemU6IDIuNXJlbTtcXG4gICAgbWFyZ2luLXRvcDozJTtcXG59XFxubGlbZGF0YS12LTI1NjExZDgwXXsgICBcXG4gICAgIG1hcmdpbi1ib3R0b206MiU7XFxufVxcbi5pbnB1dF9hbW91bnRbZGF0YS12LTI1NjExZDgwXSB7XFxuICAgICB3aWR0aDogMTQ4cHg7XFxuICAgICBoZWlnaHQ6IDM4cHg7XFxuICAgICBib3JkZXItcmFkaXVzOiA2cHg7XFxuICAgICBtYXJnaW4tcmlnaHQ6MDtcXG4gICAgIGZvbnQtc2l6ZToycmVtO1xcbiB9XFxuIC5jaGVja19ib3ggaVtkYXRhLXYtMjU2MTFkODBdIHtcXG4gICAgIHdpZHRoOiA0NHB4O1xcbiAgICAgaGVpZ2h0OiA0NHB4O1xcbiB9XFxuIC5idG5ib3hbZGF0YS12LTI1NjExZDgwXSB7XFxuICAgICBib3R0b206IDEzJTtcXG4gfVxcbiBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjEzMDBweCl7ICAgXFxuICAgICB1bFtkYXRhLXYtMjU2MTFkODBdeyBcXG4gICAgICAgICBmb250LXNpemU6Mi4ycmVtO1xcbiAgICAgfVxcbiAgICAgLmNoZWNrX2JveFtkYXRhLXYtMjU2MTFkODBdeyBcXG4gICAgICAgICBmb250LXNpemU6Mi40cmVtO1xcbiAgICAgICAgIG1hcmdpbi1yaWdodDowO1xcbiAgICAgfVxcbiAgICAgLmNoZWNrX2JveCBpW2RhdGEtdi0yNTYxMWQ4MF17ICAgXFxuICAgICAgICAgd2lkdGg6NDBweDtcXG4gICAgICAgICBoZWlnaHQ6NDBweDtcXG4gICAgIH1cXG4gICAgIC5pbnB1dF9hbW91bnRbZGF0YS12LTI1NjExZDgwXXsgIFxcbiAgICAgICAgIHdpZHRoOjE0MHB4O1xcbiAgICAgfVxcbiB9XFxuIFxcbiBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMzAwcHgpIGFuZCAgKG1heC13aWR0aDoxMzgwcHgpeyBcXG4gICAgIC5idG5ib3hbZGF0YS12LTI1NjExZDgwXSB7XFxuICAgICBib3R0b206IDEwJTtcXG4gICB9XFxuIH1cIilcbnZhciBfX3Z1ZV9fb3B0aW9uc19fID0gKHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJmdW5jdGlvblwiPyBtb2R1bGUuZXhwb3J0cy5vcHRpb25zOiBtb2R1bGUuZXhwb3J0cylcbmlmIChfX3Z1ZV9fb3B0aW9uc19fLmZ1bmN0aW9uYWwpIHtjb25zb2xlLmVycm9yKFwiW3Z1ZWlmeV0gZnVuY3Rpb25hbCBjb21wb25lbnRzIGFyZSBub3Qgc3VwcG9ydGVkIGFuZCBzaG91bGQgYmUgZGVmaW5lZCBpbiBwbGFpbiBqcyBmaWxlcyB1c2luZyByZW5kZXIgZnVuY3Rpb25zLlwiKX1cbl9fdnVlX19vcHRpb25zX18ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3gtbGF5b3V0LW1haW4nLFtfYygncCcse3N0YXRpY0NsYXNzOlwidGl0bGVcIn0sW192bS5fdihcIuWAn+iusOWNoeS6pOaYk+WuieWFqOmUgVwiKV0pLF92bS5fdihcIiBcIiksX2MoJ3AnLHtzdGF0aWNDbGFzczpcInN1cHBvcnRfdHJhblwifSxbX3ZtLl92KFwiXFxuICAgICAgICAgICAg5oKo5b2T5YmN55qE5Y2h5Y+35pivXCIpLF9jKCdzcGFuJyksX3ZtLl92KFwi77yM5Li6XCIpLF9jKCdzcGFuJyksX3ZtLl92KFwi57G76LSm5oi377yM5pSv5oyB5Lul5LiL5Lqk5piT57G75Z6L77yaXFxuICAgICAgICBcIildKSxfdm0uX3YoXCIgXCIpLF9jKCd1bCcsW19jKCdsaScsW19jKCdsYWJlbCcse3N0YXRpY0NsYXNzOlwiY2hlY2tfYm94XCJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImNoZWNrYm94XCIsYXR0cnM6e1widHlwZVwiOlwiY2hlY2tib3hcIixcImlkXCI6XCIgXCJ9fSksX2MoJ2knKSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgICAgIOaXoOWNoeaUr+S7mOW8gOmAmlxcbiAgICAgICAgICAgICAgICBcIildKSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAg5Y2V5pel57Sv6K6h6ZmQ6aKdXFxuICAgICAgICAgICAgICAgIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2Ftb3VudFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAg5YWD77yM55Sf5pWI5pel5pyfXFxuICAgICAgICAgICAgICAgIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2Ftb3VudFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgLVxcbiAgICAgICAgICAgICAgICBcIiksX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6XCJpbnB1dF9hbW91bnRcIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCJ9fSldKSxfdm0uX3YoXCIgXCIpLF9jKCdsaScsW19jKCdsYWJlbCcse3N0YXRpY0NsYXNzOlwiY2hlY2tfYm94XCJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImNoZWNrYm94XCIsYXR0cnM6e1widHlwZVwiOlwiY2hlY2tib3hcIixcImlkXCI6XCIgXCJ9fSksX2MoJ2knKSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgICAgIOi9rOi0puWKn+iDveW8gOmAmlxcbiAgICAgICAgICAgICAgICBcIildKSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAg5Y2V5pel57Sv6K6h6ZmQ6aKdXFxuICAgICAgICAgICAgICAgIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2Ftb3VudFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAg5YWD77yM55Sf5pWI5pel5pyfXFxuICAgICAgICAgICAgICAgIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2Ftb3VudFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgLVxcbiAgICAgICAgICAgICAgICBcIiksX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6XCJpbnB1dF9hbW91bnRcIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCJ9fSldKSxfdm0uX3YoXCIgXCIpLF9jKCdsaScsW19jKCdsYWJlbCcse3N0YXRpY0NsYXNzOlwiY2hlY2tfYm94XCJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImNoZWNrYm94XCIsYXR0cnM6e1widHlwZVwiOlwiY2hlY2tib3hcIixcImlkXCI6XCIgXCJ9fSksX2MoJ2knKSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgICAgIOWig+WGhea2iOi0ueWFs+mXrVxcbiAgICAgICAgICAgICAgICBcIildKSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAg5Y2V5pel57Sv6K6h6ZmQ6aKdXFxuICAgICAgICAgICAgICAgIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2Ftb3VudFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAg5YWD77yM55Sf5pWI5pel5pyfXFxuICAgICAgICAgICAgICAgIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2Ftb3VudFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgLVxcbiAgICAgICAgICAgICAgICBcIiksX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6XCJpbnB1dF9hbW91bnRcIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCJ9fSldKSxfdm0uX3YoXCIgXCIpLF9jKCdsaScsW19jKCdsYWJlbCcse3N0YXRpY0NsYXNzOlwiY2hlY2tfYm94XCJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImNoZWNrYm94XCIsYXR0cnM6e1widHlwZVwiOlwiY2hlY2tib3hcIixcImlkXCI6XCIgXCJ9fSksX2MoJ2knKSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgICAgIOWig+Wklua2iOi0ueW8gOmAmlxcbiAgICAgICAgICAgICAgICBcIildKSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAg5Y2V5pel57Sv6K6h6ZmQ6aKdXFxuICAgICAgICAgICAgICAgIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2Ftb3VudFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAg5YWD77yM55Sf5pWI5pel5pyfXFxuICAgICAgICAgICAgICAgIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2Ftb3VudFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgLVxcbiAgICAgICAgICAgICAgICBcIiksX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6XCJpbnB1dF9hbW91bnRcIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCJ9fSldKSxfdm0uX3YoXCIgXCIpLF9jKCdsaScsW19jKCdsYWJlbCcse3N0YXRpY0NsYXNzOlwiY2hlY2tfYm94XCJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImNoZWNrYm94XCIsYXR0cnM6e1widHlwZVwiOlwiY2hlY2tib3hcIixcImlkXCI6XCIgXCJ9fSksX2MoJ2knKSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgICAgIOWig+WGheiHquWKqeiuvuWkh+WPlueOsOWFs+mXrVxcbiAgICAgICAgICAgICAgICBcIildKSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAg5Y2V5pel57Sv6K6h6ZmQ6aKdXFxuICAgICAgICAgICAgICAgIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2Ftb3VudFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAg5YWD77yM55Sf5pWI5pel5pyfXFxuICAgICAgICAgICAgICAgIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2Ftb3VudFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgLVxcbiAgICAgICAgICAgICAgICBcIiksX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6XCJpbnB1dF9hbW91bnRcIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCJ9fSldKSxfdm0uX3YoXCIgXCIpLF9jKCdsaScsW19jKCdsYWJlbCcse3N0YXRpY0NsYXNzOlwiY2hlY2tfYm94XCJ9LFtfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImNoZWNrYm94XCIsYXR0cnM6e1widHlwZVwiOlwiY2hlY2tib3hcIixcImlkXCI6XCIgXCJ9fSksX2MoJ2knKSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgICAgIOWig+WkluiHquWKqeiuvuWkh+WPlueOsOW8gOmAmlxcbiAgICAgICAgICAgICAgICBcIildKSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAg5Y2V5pel57Sv6K6h6ZmQ6aKdXFxuICAgICAgICAgICAgICAgIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2Ftb3VudFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAg5YWD77yM55Sf5pWI5pel5pyfXFxuICAgICAgICAgICAgICAgIFwiKSxfYygnaW5wdXQnLHtzdGF0aWNDbGFzczpcImlucHV0X2Ftb3VudFwiLGF0dHJzOntcInR5cGVcIjpcInRleHRcIn19KSxfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgLVxcbiAgICAgICAgICAgICAgICBcIiksX2MoJ2lucHV0Jyx7c3RhdGljQ2xhc3M6XCJpbnB1dF9hbW91bnRcIixhdHRyczp7XCJ0eXBlXCI6XCJ0ZXh0XCJ9fSldKV0pLF92bS5fdihcIiBcIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYnRuYm94XCJ9LFtfYygnYnV0dG9uJyx7c3RhdGljQ2xhc3M6XCJidG4gc3VyZWJ0blwiLGF0dHJzOntcImlkXCI6XCJtb2RhbF9idG5fc3VyZVwifX0sW192bS5fdihcIuS4i+S4gOatpVwiKV0pXSldKX1cbl9fdnVlX19vcHRpb25zX18uc3RhdGljUmVuZGVyRm5zID0gW11cbl9fdnVlX19vcHRpb25zX18uX3Njb3BlSWQgPSBcImRhdGEtdi0yNTYxMWQ4MFwiXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7ICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCB0cnVlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBtb2R1bGUuaG90LmRpc3Bvc2UoX192dWVpZnlfc3R5bGVfZGlzcG9zZV9fKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtMjU2MTFkODBcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LTI1NjExZDgwXCIsIF9fdnVlX19vcHRpb25zX18pXG4gIH1cbn0pKCl9IiwidmFyIF9fdnVlaWZ5X3N0eWxlX2Rpc3Bvc2VfXyA9IHJlcXVpcmUoXCJ2dWVpZnkvbGliL2luc2VydC1jc3NcIikuaW5zZXJ0KFwiLmJveCBpbWdbZGF0YS12LTYxYzAyZmRjXXtcXG4gICAgd2lkdGg6IDExMHB4O1xcbiAgICBoZWlnaHQ6IDQwMHB4O1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIG9wYWNpdHk6IDE7XFxuICAgIGxlZnQ6IDc1JTsgIFxcbiAgICB0b3A6IDIwJTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoNTAlLCA1MCUpOyBcXG4gICAgYW5pbWF0aW9uOiBjaGFuZ2UgOHM7XFxuICAgIC1tb3otYW5pbWF0aW9uOiBjaGFuZ2UgOHM7XFxuICAgIC13ZWJraXQtYW5pbWF0aW9uOiBjaGFuZ2UgOHM7XFxuICAgIC1vLWFuaW1hdGlvbjogY2hhbmdlIDhzO1xcbn1cXG5Aa2V5ZnJhbWVzIGNoYW5nZXtcXG4gICAgZnJvbSB7XFxuICAgICAgICB3aWR0aDogMHB4O1xcbiAgICAgICAgaGVpZ2h0OiAwcHg7XFxuICAgICAgICBvcGFjaXR5OiAwO1xcbiAgICAgICAgbGVmdDogMTAwJTtcXG4gICAgICAgIHRvcDogMTAwJTtcXG4gICAgfVxcbiAgICB0byB7XFxuICAgICAgICB3aWR0aDogMTEwcHg7XFxuICAgICAgICBoZWlnaHQ6IDQwMHB4O1xcbiAgICAgICAgb3BhY2l0eTogMTtcXG4gICAgICAgIGxlZnQ6IDc1JTtcXG4gICAgICAgIHRvcDogMjAlO1xcbiAgICB9XFxufVwiKVxudmFyIF9fdnVlX19vcHRpb25zX18gPSAodHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcImZ1bmN0aW9uXCI/IG1vZHVsZS5leHBvcnRzLm9wdGlvbnM6IG1vZHVsZS5leHBvcnRzKVxuaWYgKF9fdnVlX19vcHRpb25zX18uZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlaWZ5XSBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgYW5kIHNob3VsZCBiZSBkZWZpbmVkIGluIHBsYWluIGpzIGZpbGVzIHVzaW5nIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuX192dWVfX29wdGlvbnNfXy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIgKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygneC1sYXlvdXQtbWFpbicsW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImJveFwifSxbX2MoJ2ltZycse2F0dHJzOntcInNyY1wiOlwiaW1nL+Wwj+S6ui5wbmdcIixcImFsdFwiOlwiXCJ9fSldKV0pfVxuX192dWVfX29wdGlvbnNfXy5zdGF0aWNSZW5kZXJGbnMgPSBbXVxuX192dWVfX29wdGlvbnNfXy5fc2NvcGVJZCA9IFwiZGF0YS12LTYxYzAyZmRjXCJcbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHsgIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIHRydWUpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShfX3Z1ZWlmeV9zdHlsZV9kaXNwb3NlX18pXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi02MWMwMmZkY1wiLCBfX3Z1ZV9fb3B0aW9uc19fKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtNjFjMDJmZGNcIiwgX192dWVfX29wdGlvbnNfXylcbiAgfVxufSkoKX0iLCJtb2R1bGUuZXhwb3J0cz17XHJcbiAgICBcImh0bWxcIjogeyAgICAgICAvLyDpobXpnaLmlofmnKzoi7HmlofotYTmupDlrprkuYlcclxuICAgICAgICBcIkRlc2NyaXB0aW9uXCI6IFwiZGVmaW5lIHBhZ2UgZW5nbGlzaCByZXNvdXJjZXNcIlxyXG4gICAgfSxcclxuICAgIFwidGlwXCI6IHtcclxuICAgICAgICBcIjAwMDAxXCI6IFwi5Lqk5piT5q2j5Zyo6L+b6KGM5Lit77yM5piv5ZCm57uT5p2f5Yqe55CG77yfXCIsXHJcbiAgICAgICAgXCIwMDAwMlwiOiBcIuivt+mAieaLqemcgOimgeWKnueQhueahOS4muWKoVwiLFxyXG4gICAgICAgIFwiMDAwMDNcIjogXCLor7fliLfmgqjnmoTpk7booYzljaFcIixcclxuICAgICAgICBcIjAwMDA0XCI6IFwi6K+35o+S5YWl5oKo55qE6ZO26KGM5Y2hXCIsXHJcbiAgICAgICAgXCIwMDAwNVwiOiBcIuivt+aPkuWFpeaCqOeahOmTtuihjOWNoVwiLFxyXG4gICAgICAgIFwiMDAwMDZcIjogXCLor7flsIbmgqjnmoTpk7booYzljaHmlL7nva7kuo7or4bliKvljLpcIixcclxuICAgICAgICBcIjAwMDA3XCI6IFwi6K+75Y+W5Y2h5Y+35L+h5oGv5aSx6LSl77yM6K+35qOA5p+l6ZO26KGM5Y2h5piv5ZCm5pSv5oyB5q2k5Yqf6IO95oiW5o2f5Z2PXCIsXHJcbiAgICAgICAgXCIwMDAwOFwiOiBcIuivt+aUtuWlveaCqOeahOmTtuihjOWNoVwiLFxyXG4gICAgICAgIFwiMDAwMDlcIjogXCLor7fmlLblpb3mgqjnmoTpk7booYzljaFcIixcclxuICAgICAgICBcIjAwMDEwXCI6IFwi6K+35pS25aW95oKo55qE6ZO26KGM5Y2hXCIsXHJcbiAgICAgICAgXCIwMDAxMVwiOiBcIuivt+WwhuWtmOaKmOe/u+iHs+mcgOaJk+WNsOeahOmhtemdouaPkuWFpeihpeeZu+WPo1wiLFxyXG4gICAgICAgIFwiMDAwMTJcIjogXCLor7fliLfmgqjnmoTlrZjmiphcIixcclxuICAgICAgICBcIjAwMDEzXCI6IFwi5peg6KGl55m75piO57uGXCIsXHJcbiAgICAgICAgXCIwMDAxNFwiOiBcIuacieihpeaJk+aYjue7hu+8jOivt+WwhuWtmOaKmOe/u+iHs+esrHjpobXmj5LlhaXmiZPljbDmnLpcIixcclxuICAgICAgICBcIjAwMDE1XCI6IFwi5pyJ6KGl5omT5piO57uG77yM5q2j5Zyo5Li65oKo5omT5Y2wXCIsXHJcbiAgICAgICAgXCIwMDAxNlwiOiBcIuWtmOaKmOW3suaJk+a7oe+8jOivt+iHs+afnOmdouWKnueQhuaNouaKmOS4muWKoVwiLFxyXG4gICAgICAgIFwiMDAwMTdcIjogXCLor7fnv7vpobVcIixcclxuICAgICAgICBcIjAwMDE4XCI6IFwi6K+35pS25aW95oKo55qE5a2Y5oqYXCIsXHJcbiAgICAgICAgXCIwMDAxOVwiOiBcIuivpei0puaIt+W3suaMguWkse+8jOivt+WuouaIt+acrOS6uuaQuuW4pui6q+S7veivgeS7tuiHs+afnOWPsOWKnueQhlwiLFxyXG4gICAgICAgIFwiMDAwMjBcIjogXCLor6XotKbmiLflr4bnoIHlt7LmjILlpLHvvIzor7flrqLmiLfmnKzkurrmkLrluKbouqvku73or4Hku7bov5vooYzlr4bnoIHph43nva5cIixcclxuICAgICAgICBcIjAwMDIxXCI6IFwi6K+75Y+W5Y2h5Y+35L+h5oGv5aSx6LSl77yM6K+35qOA5p+l5Y2h5piv5ZCm5ou/5Y+N5oiW5o2f5Z2PXCIsXHJcbiAgICAgICAgXCIwMDAyMlwiOiBcIuS4jeaUr+aMgeWPl+eQhuatpOexu+i0puaIt++8jOivt+iHs+afnOmdouWKnueQhlwiLFxyXG4gICAgICAgIFwiMDAwMjNcIjogXCLor7vlj5bljaHlj7fkv6Hmga/lpLHotKXvvIzor7fmo4Dmn6XljaHmmK/lkKbmi7/lj43miJbmjZ/lnY9cIixcclxuICAgICAgICBcIjAwMDI0XCI6IFwi6K+36K6+572u5oKo55qE5paw5a+G56CBL+ivt+WGjeasoei+k+WFpeS9oOeahOWvhueggeWIoOmZpO+8iOWboOWKoOWFpeWtmOaKmOS4muWKoe+8jOaJgOS7peiAg+iZkeWwhuWNoeaUueS4uui0puaIt++8iVwiLFxyXG4gICAgICAgIFwiMDAwMjVcIjogXCLmuKnppqjmj5DnpLrvvJrlr4bnoIHpnIDkuLrlha3kvY3mlbDlrZfvvIzkuI3lhYHorrjkvb/nlKjnlJ/ml6Uu55S16K+dLui6q+S7veivgeWPt+eggS7ph43lpI3mlbDlrZcu6L+e57ut5pWw5a2X562J566A5Y2V5a+G56CB77yM6K+354mi6K6w5bm25aal5ZaE5L+d566h5Y+K5L2/55So5oKo55qE5a+G56CB44CC5Yig6Zmk77yI5qC55o2u5pyA5paw55qE5a+G56CB6K6+572u6KeE5YiZ5L+u5pS577yJXCIsXHJcbiAgICAgICAgXCIwMDAyNlwiOiBcIuivt+i+k+WFpeaCqOeahOWvhueggVwiLFxyXG4gICAgICAgIFwiMDAwMjdcIjogXCLlr4bnoIHovpPlhaXplJnor6/vvIzor7fph43mlrDovpPlhaXvvIFcIixcclxuICAgICAgICBcIjAwMDI4XCI6IFwi5oKo55qE5a+G56CB6ZSZ6K+v5qyh5pWw6LaF6ZmQ77yM6K+36IGU57O75aSn5aCC5Lq65ZGY44CCXCIsXHJcbiAgICAgICAgXCIwMDAyOVwiOiBcIuivt+WwhuaCqOeahOi6q+S7veivgeS7tuaUvuWFpeivhuWIq+WMuuWIoOmZpO+8iOS+m+aWsOeJiOWkluWbveS6uuawuOS5heWxheeVmeivgSvml6fniYjorr7lpIfkvb/nlKjvvIlcIixcclxuICAgICAgICBcIjAwMDMwXCI6IFwi6K+35pS25aW95oKo55qE6Lqr5Lu96K+B5Lu2XCIsXHJcbiAgICAgICAgXCIwMDAzMVwiOiBcIuaCqOeahOi6q+S7veivgeS/oeaBr+ivu+WPluWksei0pe+8jOivt+iBlOezu+Wkp+WgguS6uuWRmFwiLFxyXG4gICAgICAgIFwiMDAwMzJcIjogXCLor7fmj5LlhaXmgqjnmoTouqvku73or4FcIixcclxuICAgICAgICBcIjAwMDMzXCI6IFwi6K+35pS25aW95oKo55qE6Lqr5Lu96K+B5Lu2XCIsXHJcbiAgICAgICAgXCIwMDAzOFwiOiBcIuWwiuaVrOeahOeUqOaIt++8jOaCqOaJgOaMgeacieeahOivgeS7tuaaguaXtuS4jeiDveWKnueQhuatpOmhueS4muWKoe+8jOivt+aCqOiBlOezu+Wkp+Wggue7j+eQhui/m+ihjOWSqOivou+8jOaIkeS7rOWwhue7p+e7reS4uuaCqOaPkOS+m+acjeWKoeOAglwiLFxyXG4gICAgICAgIFwiMDAwMzlcIjogXCLliKDpmaTvvIjlrqHmoLjkurrlkZg6eHh4eHh477yJ5oKo5aW977yM6K+35oqs5aS055yL5q2j5YmN5pa544CCXCIsXHJcbiAgICAgICAgXCIwMDA0MFwiOiBcIuato+WcqOi/m+ihjOi6q+S7veWuoeaguO+8jOivt+eojeWQju+8gVwiLFxyXG4gICAgICAgIFwiMDAwNDFcIjogXCLmgqjnmoTouqvku73lt7Lnoa7orqTvvIzor7fnu6fnu63lip7nkIbkuJrliqHjgIJcIixcclxuICAgICAgICBcIjAwMDQyXCI6IFwi5oKo55qE6Lqr5Lu95a6h5qC45pyq6YCa6L+H77yM6K+36IGU57O75aSn5aCC5Lq65ZGY44CCXCIsXHJcbiAgICAgICAgXCIwMDA0NFwiOiBcIua4qemmqOaPkOekuu+8muato+WcqOaJk+WNsOeUs+ivt+S5pu+8jOivt+eojeWQjlwiLFxyXG4gICAgICAgIFwiMDAwNDVcIjogXCLnlYzpnaLmmL7npLoxMuenkuWAkuiuoeaXtlwiLFxyXG4gICAgICAgIFwiMDAwNDZcIjogXCLmuKnppqjmj5DnpLrvvJror7fmi7/lh7rnlLPor7fkuablubblnKjlrqLmiLfmoI/nrb7lrZfjgIJcIixcclxuICAgICAgICBcIjAwMDQ3XCI6IFwi5rip6aao5o+Q56S677ya6K+35bCG5Lia5Yqh55Sz6K+35Lmm5q2j6Z2i5pyd5LiL5pS+5YWl5Zue5pS25Y+jXCIsXHJcbiAgICAgICAgXCIwMDA0OFwiOiBcIuivt+aguOWvueS4muWKoeeUs+ivt+S5puS/oeaBr++8jOaXoOivr+WQjuivt+eCueWHu+ehruiupOmUrlwiLFxyXG4gICAgICAgIFwiMDAwNDlcIjogXCLmioTlvZXlkI7or7fngrnlh7vigJzkv53lrZjigJ1cIixcclxuICAgICAgICBcIjAwMDUwXCI6IFwi6K+3562+5a2X77yM562+5a2X5ZCO54K55Ye756Gu6K6k6ZSu44CCXCIsXHJcbiAgICAgICAgXCIwMDA1MVwiOiBcIuivt+iBlOezu+WuoeaguOWRmOi+k+WFpeaMh+e6uee8luWPt1wiLFxyXG4gICAgICAgIFwiMDAwNTJcIjogXCLor7fliLfmgqjnmoTmjIfnurnvvIHliKDpmaTvvIjmjIfnurnnvJblj7fvvJo5MDAw77yJXCIsXHJcbiAgICAgICAgXCIwMDA1M1wiOiBcIjEu6K+35qC45a6e6K+l56yU5Lia5Yqh5piv5ZCm5Li65a6i5oi35pys5Lq65Yqe55CGMi7or7fnoa7orqTlrqLmiLfnrb7lkI3mmK/lkKblh4bnoa5cIixcclxuICAgICAgICBcIjAwMDU0XCI6IFwiMS7or7fmoLjlrp7lrqLmiLfor4Hku7bnmoTnnJ/lrp7mgKcyLuivt+ehruiupOWuouaIt+aLjeaRhOivgeS7tuS/oeaBr+a4heaZsC7lrozmlbRcIixcclxuICAgICAgICBcIjAwMDU1XCI6IFwiLuivt+aguOWunuWuouaIt+ivgeS7tueahOecn+WunuaApzIu6K+35qC45a6e6K+l56yU5Lia5Yqh5piv5ZCm5Li65a6i5oi35pys5Lq65Yqe55CGMy7or7fnoa7orqTlrqLmiLfnrb7lkI3mmK/lkKblh4bnoa5cIixcclxuICAgICAgICBcIjAwMDU2XCI6IFwi6K+356Gu6K6k5a6i5oi35bey6L6+55u45bqU6LS15a6+562J57qnXCIsXHJcbiAgICAgICAgXCIwMDA1N1wiOiBcIjEu6K+35qC45a6e6K+l56yU5Lia5Yqh5piv5ZCm5Li65a6i5oi35pys5Lq65Yqe55CGMi7or7fnoa7orqTlrqLmiLfnrb7lkI3mmK/lkKblh4bnoa4zLuivt+ehruiupOWuouaIt+W3sui+vuebuOW6lOi0teWuvuetiee6p1wiLFxyXG4gICAgICAgIFwiMDAwNThcIjogXCLor7fnoa7orqTlrqLmiLflt7Lovr7nm7jlupTotLXlrr7nrYnnuqdcIixcclxuICAgICAgICBcIjAwMDU5XCI6IFwiMS7or7fmoLjlrp7or6XnrJTkuJrliqHmmK/lkKbkuLrlrqLmiLfmnKzkurrlip7nkIYyLuivt+ehruiupOWuouaIt+etvuWQjeaYr+WQpuWHhuehrjMu6K+356Gu6K6k5a6i5oi35bey6L6+55u45bqU6LS15a6+562J57qnXCIsXHJcbiAgICAgICAgXCIwMDA2MFwiOiBcIuivt+ehruiupOWuouaIt+aPkOS+m+acieaViOivgeaYjuadkOaWmSzlubbnlZnlrZjjgIJcIixcclxuICAgICAgICBcIjAwMDYxXCI6IFwiMS7or7fmoLjlrp7or6XnrJTkuJrliqHmmK/lkKbkuLrlrqLmiLfmnKzkurrlip7nkIYyLuivt+ehruiupOWuouaIt+etvuWQjeaYr+WQpuWHhuehrjMu6K+356Gu6K6k5a6i5oi35o+Q5L6b5pyJ5pWI6K+B5piO5p2Q5paZ77yM5bm255WZ5a2Y44CCXCIsXHJcbiAgICAgICAgXCIwMDA2MlwiOiBcIjEu6K+35a6i5oi35YaN5qyh56Gu6K6k5pS25qy+5pa55L+h5oGv77yM6LCo6Ziy55S15L+h6K+I6aqX77yBMi7lpoLlrqLmiLfpgInmi6nlrp7ml7bliLDotKbvvIzmj5DphpLlrqLmiLfor6XnrJTovazotKbkuI3lj6/mkqTplIBcIixcclxuICAgICAgICBcIjAwMDYzXCI6IFwiMS7or7fmoLjlrp7or6XnrJTkuJrliqHmmK/lkKbkuLrlrqLmiLfmnKzkurrlip7nkIYyLuivt+ehruiupOWuouaIt+etvuWQjeaYr+WQpuWHhuehrjMu6K+35a6i5oi35YaN5qyh56Gu6K6k5pS25qy+5pa55L+h5oGv77yM6LCo6Ziy55S15L+h6K+I6aqX77yBNC7lpoLlrqLmiLfpgInmi6nlrp7ml7bliLDotKbvvIzmj5DphpLlrqLmiLfor6XnrJTovazotKbkuI3lj6/mkqTplIBcIixcclxuICAgICAgICBcIjAwMDY0XCI6IFwi6K+35o+Q56S65a6i5oi355S15a2Q6ZO26KGM5rOo6ZSA5ZCO77yM5Y6f5bi455So6IGU57O75Lq65L+h5oGv5LiN5YaN5L+d5a2Y77yBXCIsXHJcbiAgICAgICAgXCIwMDA2NVwiOiBcIjHjgIHor7fmoLjlrp7or6XnrJTkuJrliqHmmK/lkKbkuLrlrqLmiLfmnKzkurrlip7nkIYy44CB6K+356Gu6K6k5a6i5oi3562+5ZCN5piv5ZCm5YeG56GuM+OAgeivt+aPkOekuuWuouaIt+eUteWtkOmTtuihjOazqOmUgOWQju+8jOWOn+W4uOeUqOiBlOezu+S6uuS/oeaBr+S4jeWGjeS/neWtmO+8gVwiLFxyXG4gICAgICAgIFwiMDEwMDFcIjogXCLkuK3lm73nqI7mlLblsYXmsJHmmK/mjIflnKjkuK3lm73looPlhoXmnInkvY/miYDvvIzmiJbogIXml6DkvY/miYDogIzlnKjlooPlhoXlsYXkvY/mu6HkuIDlubTnmoTkuKrkurrjgILpnZ7lsYXmsJHmmK/mjIfkuK3lm73nqI7mlLblsYXmsJHku6XlpJbnmoTkuKrkurrjgIJcIixcclxuICAgICAgICBcIjAxMDAyXCI6IFwi5oKo55qE5omL5py65Y+356CB5bey6KKr5Y2g55So77yM5aaC6ZyA5L+u5pS55omL5py65Y+356CB77yM5Y+v54K55Ye75L+u5pS5XCIsXHJcbiAgICAgICAgXCIwMTAwM1wiOiBcIuiwqOaFjuaTjeS9nO+8jOWIoOmZpOWwhuacieWPr+iDveaXoOazleaBouWkjeWHj+WFjVwiLFxyXG4gICAgICAgIFwiMDIwMDFcIjogXCLvvIjlj6Pku6TljaHljYfnuqfkuLpL5Luk77yJXCIsXHJcbiAgICAgICAgXCIwMjAwMlwiOiBcIkvlrp3vvJrljZXnrJTovazotKbmlK/ku5jpmZDpop3vvIjkurrmsJHluIHvvInvvJoxMDDkuIflhYPvvJvljZXml6XntK/orqHovazotKbmlK/ku5jpmZDpop3vvIjkurrmsJHluIHvvInvvJo1MDDkuIflhYNL5Luk77ya5Y2V56yU6L2s6LSm6ZmQ6aKd77yI5Lq65rCR5biB77yJ77yaNTDkuIfvvIzljZXml6XntK/orqHpmZDpop3vvIjkurrmsJHluIHvvInvvJo1MOS4h++8m+WNleeslOaUr+S7mOmZkOmine+8iOS6uuawkeW4ge+8ie+8mjEw5LiH77yM5Y2V5pel57Sv6K6h6ZmQ6aKd77yI5Lq65rCR5biB77yJ77yaNTDkuIdL5a6d77yaNTDlhYMv5Liq77ybS+S7pO+8mjI15YWDL+S4qlwiLFxyXG4gICAgICAgIFwiMDIwMDNcIjogXCLlj6Pku6TljaHljYfnuqfkuLpL5LukXCIsXHJcbiAgICAgICAgXCIwMjAwNFwiOiBcIuW8gOmAmuaOjOmTtuS7heaUr+aMgemfs+mikeWPiuiTneeJmUvlrp1cIixcclxuICAgICAgICBcIjAyMDA1XCI6IFwi5oKo55qE5omL5py65Y+356CB5bey6KKr5Y2g55So77yM5aaC6ZyA5L+u5pS55omL5py65Y+356CB77yM5Y+v54K55Ye75L+u5pS5XCIsXHJcbiAgICAgICAgXCIwMjAwNlwiOiBcIu+8iOWQq+e9keS4iumTtuihjC7mjozkuIrpk7booYzlkoznn63kv6Hpk7booYzvvIlcIixcclxuICAgICAgICBcIjAyMDA3XCI6IFwi77yIMuWFgy/mnIjvvInvvIzor7fnoa7kv53nlLXor53lj7fnoIHml6Dor6/kuJTkuLrmnKzkurrkvb/nlKhcIixcclxuICAgICAgICBcIjAyMDA4XCI6IFwi5YW25Lit4oWh57G75Y2h5oyJ6KeE5a6a6aKd5bqm6ZmQ5Yi277yM5Lul5LiK6ZmQ6aKd5Z2H5LiN6LaF6L+HMTAwMDDlhYNcIixcclxuICAgICAgICBcIjAyMDA5XCI6IFwi6K+35pS25aW95oKo55qE5Yqo5oCB5a+G56CB6K6+5aSH77yM5YiH5Yu/5Lqk5LqI5LuW5Lq65L2/55SoXCIsXHJcbiAgICAgICAgXCIwMjAxMFwiOiBcIuWvhueggemcgOiuvue9ruS4ujjkvY3mlbDlrZfkuI7lrZfmr43nu4TlkIjvvIzkuJTkuI3og73kuLrov57nu63nmoTmlbDlrZflkozlrZfmr43jgIJcIixcclxuICAgICAgICBcIjAyMDExXCI6IFwi5oKo55qE5r+A5rS756CB5bey5omT5Y2w5Zyo5a6i5oi35Yet5p2h5LiK77yM6K+35rOo5oSP5L+d566h44CCXCIsXHJcbiAgICAgICAgXCIwMjAxMlwiOiBcIkvku6TvvJoyNeWFgy/kuKpcIixcclxuICAgICAgICBcIjAyMDEzXCI6IFwi5rip6aao5o+Q56S677ya5pys5pON5L2c5bCG5a+86Ie05oKo5Zyo5Yac6KGM55qE5omA5pyJ6LSm5oi35bey57uR5a6a55qE55S15a2Q5rig6YGT5rOo6ZSA44CC5bm25LiU5omA5pyJ55S15a2Q5rig6YGT5L+d5a2Y5L+h5oGv5Lya6KKr5riF6Zmk5LiU5LiN5Y+v5oGi5aSN44CC5byC5Zyw5a2Y5oqY55qE55S15a2Q6ZO26KGM5LiA5pem6KKr5rOo6ZSA77yM5aaC5p6c6ZyA6KaB6YeN5paw57uR5a6a77yM5b+F6aG76L+U5Zue5byA5oi36KGM5omA5Zyo55yB6YeN5paw57uR5a6a44CCXCIsXHJcbiAgICAgICAgXCIwMjAxNFwiOiBcIua4qemmqOaPkOekuu+8muWPquazqOmUgOacrOWNoeeahOeUteWtkOmTtuihjOa4oOmBk++8jOS4jeW9seWTjeWFtuS7luWNoee7keWumueahOeUteWtkOmTtuihjOOAglwiLFxyXG4gICAgICAgIFwiMDIwMTVcIjogXCLmuKnppqjmj5DnpLrvvJrpgInmi6nmj5LlhaXnlLXlrZDnjrDph5Hku4votKjvvIzliJnlj6rog73lip7nkIbmjIflrprotKbmiLflnIjlrZjvvJvpgInmi6nmlL7nva7nlLXlrZDnjrDph5Hku4votKjvvIzliJnlj6/ku6Xlip7nkIbmjIflrprotKbmiLflnIjlrZjmiJbpnZ7mjIflrprotKbmiLflnIjlrZhcIixcclxuICAgICAgICBcIjAyMDE2XCI6IFwi6K+35L+d5oyB55S15a2Q546w6YeR5LuL6LSo5o+S5YWl54q25oCB5oiW5pS+572u5Zyo5oSf5bqU5Yy65YaF77yBXCIsXHJcbiAgICAgICAgXCIwMjAxN1wiOiBcIuaMh+Wumui0puaIt+WciOWtmO+8muaMgeWNoeS6uuS9v+eUqOe7keWumumTtuihjOWNoei0puaIt+S4reeahOi1hOmHkeWQkeeUteWtkOeOsOmHkeWFheWAvO+8m+mdnuaMh+Wumui0puaIt+WciOWtmO+8muaMgeWNoeS6uuS9v+eUqOWFtuS7lumTtuihjOWNoei0puaIt+S4reeahOi1hOmHkeWQkeeUteWtkOeOsOmHkeWFheWAvFwiLFxyXG4gICAgICAgIFwiMDIwMThcIjogXCLor7fkv53mjIHnlLXlrZDnjrDph5Hku4votKjmj5LlhaXnirbmgIHmiJbmlL7nva7lnKjmhJ/lupTljLrlhoXvvIFcIixcclxuICAgICAgICBcIjAzMDAxXCI6IFwi6YeN6KaB5o+Q56S677ya6LCo6Ziy55S15L+h6K+I6aqX77yM6K+35Yu/6L275L+h6ZmM55Sf5Lq655qE5rGH5qy+6L2s6LSm5L+h5oGv77yB77yB77yBICAgIOitpuaWueaPkOekuu+8muaKteWItumrmOaBr+ivseaDke+8jOi/nOemu+mdnuazlembhui1hO+8jOivt+WLv+i9u+S/oemZjOeUn+S6uueahOaxh+asvui9rOi0puS/oeaBr++8jOiwqOmYsuS4iuW9k+WPl+mql++8gSAgICDmuKnppqjmj5DnpLrvvJrlnKjmnKzorr7lpIfov5vooYzmk43kvZzml7bvvIzor7fms6jmhI/lkajovrnnjq/looPvvIzlubbms6jmhI/lr4bnoIHpga7mjKHvvIzlnKjkuqTmmJPov4fnqIvkuK3noa7orqTmlLbmrL7mlrnmiLflkI3lkI7lho3ov5vooYzovazotKbjgILlpoLmnInpl67popjvvIzor7flj4rml7bogZTns7vpk7booYzlt6XkvZzkurrlkZjvvIzmiJHooYzlrqLmnI3ng63nur/vvJo5NTU5OeOAglwiLFxyXG4gICAgICAgIFwiMDMwMDJcIjogXCLigJzotKblj7fmnInor6/vvIzor7fph43mlrDovpPlhaXigJ1cIixcclxuICAgICAgICBcIjAzMDAzXCI6IFwi4oCc6K+36L6T5YWl5pS25qy+5pa56LSm5Y+34oCdXCIsXHJcbiAgICAgICAgXCIwMzAwNFwiOiBcIuKAnOi9rOWFpei0puaIt+S4jui9rOWHuui0puaIt+S4jeiDveebuOWQjO+8geKAnVwiLFxyXG4gICAgICAgIFwiMDMwMDVcIjogXCLigJzljZXnrJTovazotKbph5Hpop3otoXpmZDvvIzor7fph43mlrDovpPlhaXigJ1cIixcclxuICAgICAgICBcIjAzMDA2XCI6IFwi4oCc6LSm5oi35Y+v55So5L2Z6aKd5LiN6Laz77yM6K+36YeN5paw6L6T5YWl4oCdXCIsXHJcbiAgICAgICAgXCIwMzAwN1wiOiBcIuKAnOKFoeexu+aIt+i9rOi0pumHkeminei2hemZkO+8jOivt+mHjeaWsOi+k+WFpeKAnVwiLFxyXG4gICAgICAgIFwiMDMwMDhcIjogXCLigJzmgqjnmoTlj6/nlKjkvZnpop3kuLoq5YWD4oCd4oCc5oKo55qE4oWh57G75oi35b2T5YmN6L2s6LSm6ZmQ6aKd5Li6KuWFg+KAnVwiLFxyXG4gICAgICAgIFwiMDMwMDlcIjogXCLigJzmmK/lkKbliKDpmaTmlLbmrL7kurrkv6Hmga/vvJ/igJ3mmK/jgIHlkKZcIixcclxuICAgICAgICBcIjAzMDEwXCI6IFwi5a6e5pe26L2s6LSm77ya6LWE6YeR5Zyo5Lqk5piT5a6M5oiQ5ZCO56uL5Y2z6L2s5Ye65pmu6YCa6L2s6LSm77ya6LWE6YeR5Zyo5Lqk5piT5a6M5oiQMuWwj+aXtuWQjui9rOWHuuasoeaXpei9rOi0pu+8mui1hOmHkeWcqOS6pOaYk+WujOaIkDI05bCP5pe25ZCO6L2s5Ye6XCIsXHJcbiAgICAgICAgXCIwMzAxMVwiOiBcIuS4reWbveWGnOS4mumTtuihjOiCoeS7veaciemZkOWFrOWPuO+8miAgICDmnKzkurrnoa7orqTlt7LlkJHotLXooYznlLPor7fnmoTotYTph5HliJLovazkuqTmmJPmmK/mnKzkurrln7rkuo7oh6rkuLvlhrPnrZbogIzkvZzlh7rnmoToh6rmhL/ooYzkuLrvvIzkuI3lrZjlnKjkuK3lm73lhpzkuJrpk7booYzlkZjlt6Xku4vnu40u5o6o6I2QLuimgeaxguacrOS6uuS6pOaYk+etieaDheWGteOAguWGnOS4mumTtuihjOW3suS+neazleWQkeacrOS6uuaPkOekuu+8muW6lOiupOecn+aguOWunumHkemineWSjOaUtuasvui0puWPt+eahOWHhuehruaAp++8jOehruS/nei1hOmHkeWIkui9rOS6pOaYk+eUqOmAlOeahOecn+Wuni7lkIjms5Uu5pyJ5pWI77yM6Ziy5q2i6K+I6aqXLumdnuazlembhui1hOetiemjjumZqeaIluS4jeWIqeaDheW9oueahOWPkeeUn+OAguacrOS6uuW3suefpeaCieW5tuehruiupOS4iui/sOi1hOmHkeWIkui9rOS6pOaYk+S4jeaYr+eUqOS6jui0reS5sOS4reWbveWGnOS4mumTtuihjOiHquS4u+WPkeihjOeahOeQhui0ouS6p+WTgeaIluS4reWbveWGnOS4mumTtuihjOS7o+mUgOeahOS6p+WTgeOAguacrOS6uuW3sua4healmuiupOivhuWIsOS4iui/sOi1hOmHkeWIkui9rOS6pOaYk+eahOazleW+i+WQjuaenO+8jOeUseatpOS6p+eUn+eahOS4gOWIh+mjjumZqeWSjOaNn+WkseeUseacrOS6uuaJv+aLhe+8jOS4juS4reWbveWGnOS4mumTtuihjOaXoOWFs+OAguehruWumuOAgeWPlua2iFwiLFxyXG4gICAgICAgIFwiMDMwMTJcIjogXCLigJzotKbmiLflj6/nlKjkvZnpop3kuI3otrPvvIzor7fph43mlrDovpPlhaXigJ1cIixcclxuICAgICAgICBcIjAzMDEzXCI6IFwi4oCc4oWh57G75oi36L2s6LSm6YeR6aKd6LaF6ZmQ77yM6K+36YeN5paw6L6T5YWl4oCdXCIsXHJcbiAgICAgICAgXCIwMzAxNFwiOiBcIuKAnOWkp+minea4oOmBk+WFs+mXre+8jOivt+iBlOezu+Wkp+WgguS6uuWRmOKAnVwiLFxyXG4gICAgICAgIFwiMDMwMTVcIjogXCLigJzlvZPml6XkuLroioLlgYfml6XkuJTmrKHml6XkuLrlt6XkvZzml6XvvIzkuI3mlK/mjIE15LiH77yI5ZCr77yJ5Lul5LiK6YCJ5oup5qyh5pel5Yiw6LSm44CC4oCdIOehruWumlwiLFxyXG4gICAgICAgIFwiMDMwMTZcIjogXCLigJzmrKHml6XkuLroioLlgYfml6XvvIzlrp7pmYXliLDotKbml7bpl7TkuLrkuIvkuIDlt6XkvZzml6XvvIzmmK/lkKbnu6fnu63vvJ/igJ3mmK/jgIHlkKZcIixcclxuICAgICAgICBcIjAzMDE3XCI6IFwi5rip6aao5o+Q56S677ya4oCc5Li65LqG56Gu5L+d5oKo55qE6LWE6YeR5a6J5YWo77yM6K+36K6k55yf5qC45a+55LiK6L+w5Lqk5piT5L+h5oGv44CC4oCdXCIsXHJcbiAgICAgICAgXCIwMzAxOFwiOiBcIuKAnOivt+WwhuWtmOaKmOe/u+iHs+esrHjpobXmj5LlhaXmiZPljbDmnLrigJ1cIixcclxuICAgICAgICBcIjAzMDE5XCI6IFwi4oCc6K+357+76aG14oCdXCIsXHJcbiAgICAgICAgXCIwMzAyMFwiOiBcIuKAnOivt+aUtuWlveaCqOeahOWtmOaKmOKAnVwiLFxyXG4gICAgICAgIFwiMDMwMjFcIjogXCLigJzmmK/lkKblip7nkIbkuIvkuIDnrJTlu7bml7bovazotKbmkqTplIDkuqTmmJPvvJ/igJ3mmK/jgIHlkKZcIixcclxuICAgICAgICBcIjA0MDAxXCI6IFwi5Y2h566x5peg5Y2h77yM5piv5ZCm5Yqe55CG5Lmm6Z2i5oyC5aSx5Lia5Yqh77yfXCIsXHJcbiAgICAgICAgXCIwNDAwMlwiOiBcIuWNoeeuseaXoOWNoe+8jOaYr+WQpuWKnueQhuS5pumdouaMguWkseS4muWKoeWPiuWQjue7reS4muWKoe+8n1wiLFxyXG4gICAgICAgIFwiMDQwMDNcIjogXCLmuKnppqjmj5DnpLrvvJrotKbmiLfkvZnpop3moKHpqozoh7PkuIfkvY1cIixcclxuICAgICAgICBcIjA0MDA0XCI6IFwi5piv5ZCm5ZCM5Y+36KGl5Y2h77yfXCIsXHJcbiAgICAgICAgXCIwNDAwNVwiOiBcIua4qemmqOaPkOekuu+8muWQjOWPt+ihpeWNoemdnuWunuaXtuWPluWNoe+8jOWFt+S9k+WKnueQhuadoeS7tuWPiuWPluWNoeaXtumXtOivt+WSqOivoue9keeCueW3peS9nOS6uuWRmOOAglwiLFxyXG4gICAgICAgIFwiMDQwMDZcIjogXCLkuK3lm73lhpzkuJrpk7booYzogqHku73mnInpmZDlhazlj7jvvJrmnKzkurrnoa7orqTmiYDmj5DkvpvnmoTkuKrkurrotYTmlpnnnJ/lrp4u5pyJ5pWI77yM5bm25bey6K+m57uG5LqG6Kej5oyC5aSx5Lia5Yqh56ug56iLLuS4muWKoeWNj+iuri7lip/og73or7TmmI7lj4rotKPku7vmnaHmrL4u5Lia5Yqh5pS26LS55qCH5YeG77yM5Y+X55u45YWz5Lia5Yqh56ug56iL5ZKM5Y2P6K6u55qE57qm5p2f44CC6ZO26KGM5Y+X55CG5oyC5aSx5Lia5Yqh5YmN5ZKM5oyC5aSx5Lia5Yqh5ZCO77yM6YCg5oiQ55qE5o2f5aSx55Sx5pys5Lq66LSf6LSj77yM6ZO26KGM5LiN5om/5ouF6LSj5Lu744CCXCIsXHJcbiAgICAgICAgXCIwNDAwN1wiOiBcIuazqOaEj++8muaMguWkseaNouWNoeaXtu+8jOWOn+WAn+iusOWNoeS4i+W3suetvuWQiOe6puWPmOabtOWIsOaWsOWNoeS4i+WJje+8jOWwhuaXoOazleato+W4uOi/m+ihjOebuOWFs+i1hOmHkee7k+eul+OAglwiLFxyXG4gICAgICAgIFwiMDQwMDhcIjogXCLooaXljaHlsIbogZTliqjnlLXlrZDnjrDph5Hop6PnuqbvvIznlLXlrZDnjrDph5HkvZnpop3lsIbkuKLlpLHvvIzmmK/lkKbnu6fnu63lip7nkIbvvJ9cIixcclxuICAgICAgICBcIjA0MDA5XCI6IFwi6Z2e5pys572R54K55oyC5aSx77yM6K+35Yiw5Y6f5oyC5aSx572R54K55Yqe55CGXCIsXHJcbiAgICAgICAgXCIwNDAxMFwiOiBcIua4qemmqOaPkOekuu+8mui0puaIt+S9memineagoemqjOiHs+S4h+S9jVwiLFxyXG4gICAgICAgIFwiMDQwMTFcIjogXCLmlrDotKbmiLfnsbvlnovkuLpJ57G76LSm5oi377yM5Lqk5piT6ZmQ6aKd5L+u5pS55Li65pel57Sv6K6h5LiN5Y+X6ZmQ77yb5bm057Sv6K6h5LiN5Y+X6ZmQXCIsXHJcbiAgICAgICAgXCIwNDAxMlwiOiBcIuaWsOi0puaIt+exu+Wei+S4uklJ57G76LSm5oi377yM5Lqk5piT6ZmQ6aKd5L+u5pS55Li65pel57Sv6K6hMeS4h+WFg++8m+W5tOe0r+iuoTIw5LiH5YWD44CCXCIsXHJcbiAgICAgICAgXCIwNDAxM1wiOiBcIuiwqOaFjuaTjeS9nO+8jEnnsbvmiLfpmY3nuqfkuLpJSeexu+aIt+WQju+8jOWwhuWPl0lJ57G75oi35YCf6K6w5Y2h5pelLuW5tOe0r+iuoemZkOmineaOp+WItu+8jOmZjee6p+WQjuWPr+iDveaXoOazlemHjeaWsOWNh+e6p+S4uknnsbvmiLfjgIJcIixcclxuICAgICAgICBcIjA0MDE0XCI6IFwi4oCc6LSm5oi35L2Z6aKd6LaF6ZmQ77yM6K+36IGU57O75aSn5aCC5Lq65ZGY4oCdXCIsXHJcbiAgICAgICAgXCIwNDAxNVwiOiBcIuKAnOi0puaIt+S9memineWkp+S6jui9rOi0pumZkOmine+8jOmUgOaIt+WQjui1hOmHkeaXoOazleaIkOWKn+i9rOWHuuKAnVwiLFxyXG4gICAgICAgIFwiMDQwMTZcIjogXCLigJzlrZjlnKgqLiouKuetieWQiOe6pu+8jOivt+WFiOazqOmUgOWGjei/m+ihjOmUgOaIt+KAnVwiLFxyXG4gICAgICAgIFwiMDQwMTdcIjogXCLigJzlt7Lnrb7nuqbnlLXlrZDnjrDph5Eu55S15a2Q6ZO26KGMLua2iOaBr+acjeWKoS7kuKrkurrotYTph5HlvZLpm4bvvIzplIDmiLflsIbogZTliqjop6PnuqbvvIzmmK/lkKbnu6fnu63vvJ/igJ3muKnppqjmj5DnpLrvvJrnlLXlrZDpkrHljIXlhoXotYTph5HlsIbovazlm57kuLvotKbmiLfjgIJcIixcclxuICAgICAgICBcIjA0MDE4XCI6IFwi4oCc6LSm5Y+35pyJ6K+v77yM6K+36YeN5paw6L6T5YWl4oCdXCIsXHJcbiAgICAgICAgXCIwNDAxOVwiOiBcIua4qemmqOaPkOekuu+8mumUgOaIt+S4muWKoeS7heaUr+aMgeWunuaXtuWIsOi0pu+8jOS4lOaUtuasvuaWuemcgOS4uuaIkeihjOWAn+iusOWNoei0puaIt++8jOmUgOaIt+WQjui1hOmHkeeri+WNs+i9rOWHuu+8jOaXoOazlei9rOWbnu+8jOivt+WLv+WQkemZjOeUn+S6uuaxh+asvu+8gVwiLFxyXG4gICAgICAgIFwiMDQwMjBcIjogXCLmuKnppqjmj5DnpLrvvJrplIDmiLfmk43kvZzkuI3lj6/mkqTplIDvvIzor7fnoa7lrprov5vooYzplIDljaFcIixcclxuICAgICAgICBcIjA0MDIxXCI6IFwi4oCc6LSm5oi35L2Z6aKd6LaF6ZmQ77yM6K+36IGU57O75aSn5aCC5Lq65ZGY4oCdXCIsXHJcbiAgICAgICAgXCIwNDAyMlwiOiBcIumdnuacrOe9keeCueaMguWkse+8jOivt+WIsOWOn+aMguWksee9keeCueWKnueQhlwiLFxyXG4gICAgICAgIFwiMDQwMjNcIjogXCLigJzotKbmiLfkvZnpop3lpKfkuo7ovazotKbpmZDpop3vvIzplIDmiLflkI7otYTph5Hml6Dms5XmiJDlip/ovazlh7rigJ1cIixcclxuICAgICAgICBcIjA0MDI0XCI6IFwi4oCc5a2Y5ZyoKi4qLirnrYnlkIjnuqbvvIzor7flhYjms6jplIDlho3ov5vooYzplIDmiLfigJ1cIixcclxuICAgICAgICBcIjA0MDI1XCI6IFwi4oCc5bey562+57qm55S15a2Q546w6YeRLueUteWtkOmTtuihjC7mtojmga/mnI3liqEu5Liq5Lq66LWE6YeR5b2S6ZuG77yM6ZSA5oi35bCG6IGU5Yqo6Kej57qm77yM5piv5ZCm57un57ut77yf4oCd5rip6aao5o+Q56S677ya55S15a2Q6ZKx5YyF5YaF6LWE6YeR5bCG5Lii5aSx77yM5peg5rOV6L2s5Zue44CCXCIsXHJcbiAgICAgICAgXCIwNDAyNlwiOiBcIua4qemmqOaPkOekuu+8mui0puaIt+S9memineagoemqjOiHs+S4h+S9jVwiLFxyXG4gICAgICAgIFwiMDQwMjdcIjogXCLigJzotKblj7fmnInor6/vvIzor7fph43mlrDovpPlhaXigJ1cIixcclxuICAgICAgICBcIjA0MDI4XCI6IFwi5rip6aao5o+Q56S677ya6ZSA5oi35Lia5Yqh5LuF5pSv5oyB5a6e5pe25Yiw6LSm77yM5LiU5pS25qy+5pa56ZyA5Li65oiR6KGM5YCf6K6w5Y2h6LSm5oi377yM6ZSA5oi35ZCO6LWE6YeR56uL5Y2z6L2s5Ye677yM5peg5rOV6L2s5Zue77yM6K+35Yu/5ZCR6ZmM55Sf5Lq65rGH5qy+77yBXCIsXHJcbiAgICAgICAgXCIwNDAyOVwiOiBcIua4qemmqOaPkOekuu+8mumUgOaIt+aTjeS9nOS4jeWPr+aSpOmUgO+8jOivt+ehruWumui/m+ihjOmUgOWNoVwiLFxyXG4gICAgICAgIFwiMDUwMDFcIjogXCLmmK/lkKbnu6fnu63lip7nkIbkuIvkuIDnrJTmtLvmnJ/ovazlrprmnJ/kuJrliqFcIixcclxuICAgICAgICBcIjA1MDAyXCI6IFwi6K+l56yU5a2Q6LSm5oi35pyq5Yiw5pyf77yM5o+Q5YmN5pSv5Y+W5bCG5oyJ5rS75pyf5Yip5oGv6K6h5oGv77yBXCIsXHJcbiAgICAgICAgXCIwNTAwM1wiOiBcIuivt+mAieaLqeS4gOS4quWumuacn+i0puaIt1wiLFxyXG4gICAgICAgIFwiMDUwMDRcIjogXCLljZXkuKrlrZDotKbmiLflvZPml6Xlj6rlhYHorrjlip7nkIbkuIDmrKHpg6jliIbmj5Dlj5ZcIixcclxuICAgICAgICBcIjA1MDA1XCI6IFwi5piv5ZCm57un57ut5Yqe55CG5LiL5LiA56yU5rS75pyf6L2s5a6a5pyf5Lia5YqhXCIsXHJcbiAgICAgICAgXCIwNTAwNlwiOiBcIueQhui0oumdnuWtmOasvu+8jOS6p+WTgeaciemjjumZqe+8jOaKlei1hOmhu+iwqOaFjuOAglwiLFxyXG4gICAgICAgIFwiMDUwMDdcIjogXCLmgqjnmoTpo47pmanor4TkvLDlt7Lov4fmnJ/vvIzmmK/lkKbph43mlrDov5vooYzpo47pmanor4TkvLDvvJ9cIixcclxuICAgICAgICBcIjA1MDA4XCI6IFwi5pys5qyh6aOO6Zmp6K+E5Lyw57uT5p6c6YCC55So5LqO5Z+66YeRLueQhui0ouS4muWKoeOAglwiLFxyXG4gICAgICAgIFwiMDUwMDlcIjogXCLnkIbotKLpnZ7lrZjmrL7vvIzkuqflk4HmnInpo47pmanvvIzmipXotYTpobvosKjmhY7jgIJcIixcclxuICAgICAgICBcIjA1MDEwXCI6IFwi5oKo5bey57uP55CG6LSi5Lqn5ZOB562+57qm77yM5piv5ZCm5L+u5pS55Liq5Lq6562+57qm5L+h5oGv77yfXCIsXHJcbiAgICAgICAgXCIwNTAxMVwiOiBcIuivpeiBlOezu+aWueW8j+W3sue7j+e7keWumuWIsOetvue6puS/oeaBr++8jOS4jeiDvei/m+ihjOS/ruaUuVwiLFxyXG4gICAgICAgIFwiMDUwMTJcIjogXCLnkIbotKLpnZ7lrZjmrL7vvIzkuqflk4HmnInpo47pmanvvIzmipXotYTpobvosKjmhY7jgIJcIixcclxuICAgICAgICBcIjA1MDEzXCI6IFwi5q2k6YeR6aKd5Li66K+V566X6YeR6aKd77yM5LiN5Li65a6e6ZmF5pS255uK6YeR6aKdXCIsXHJcbiAgICAgICAgXCIwNTAxNFwiOiBcIuaCqOi/mOacqumjjumZqeivhOS8sO+8jOivt+WFiOi/m+ihjOWuouaIt+mjjumZqeivhOS8sOS6pOaYk++8jOacrOS6pOaYk+e7k+adn+OAglwiLFxyXG4gICAgICAgIFwiMDUwMTVcIjogXCLmgqjov5jmnKrnrb7nuqbnkIbotKLvvIzor7flhYjov5vooYznkIbotKLkuqflk4Hnrb7nuqbkuqTmmJPvvIzmnKzkuqTmmJPnu5PmnZ/jgIJcIixcclxuICAgICAgICBcIjA1MDE2XCI6IFwi5rip6aao5o+Q56S677ya55CG6LSi5Lqn5ZOB6L+95Yqg55Sz6LSt6LW354K56YeR6aKd5LiN5pS255Sz6LSt6LW354K56YeR6aKd6ZmQ5Yi244CCXCIsXHJcbiAgICAgICAgXCIwNTAxN1wiOiBcIueQhui0oumdnuWtmOasvu+8jOS6p+WTgeaciemjjumZqe+8jOaKlei1hOmhu+iwqOaFjuOAglwiLFxyXG4gICAgICAgIFwiMDUwMThcIjogXCLnkIbotKLpnZ7lrZjmrL7vvIzkuqflk4HmnInpo47pmanvvIzmipXotYTpobvosKjmhY7jgIJcIixcclxuICAgICAgICBcIjA1MDE5XCI6IFwi5piv5ZCm56Gu5a6a5pKk6ZSA6YCJ5Lit55qE5aeU5omY6K6w5b2V77yfXCIsXHJcbiAgICAgICAgXCIwNTAyMFwiOiBcIuaYr+WQpuehruWumuaSpOmUgOatpOadoeWnlOaJmOiusOW9le+8n1wiLFxyXG4gICAgICAgIFwiMDUwMjFcIjogXCLnkIbotKLpnZ7lrZjmrL7vvIzkuqflk4HmnInpo47pmanvvIzmipXotYTpobvosKjmhY7jgIJcIixcclxuICAgICAgICBcIjA1MDIyXCI6IFwi5oKo55qE6aOO6Zmp6K+E5Lyw5bey6L+H5pyf77yM5piv5ZCm6YeN5paw6L+b6KGM6aOO6Zmp6K+E5Lyw77yfXCIsXHJcbiAgICAgICAgXCIwNTAyM1wiOiBcIuaCqOi/mOacquetvue6pueQhui0ou+8jOivt+WFiOi/m+ihjOeQhui0ouS6p+WTgeetvue6puS6pOaYk++8jOacrOS6pOaYk+e7k+adn+OAglwiLFxyXG4gICAgICAgIFwiMDUwMjRcIjogXCLmgqjlt7Lnrb7nuqblpKnlpKnnkIbotKJcIixcclxuICAgICAgICBcIjA1MDI1XCI6IFwi4oCc5aSn5LyX54mI4oCd5LiN5b6X5L2O5LqO5Lq65rCR5biBNeS4h+WFg+aIluWkluW4geetieWAvDEwMDDnvo7lhYPvvIzigJzmipXotYTniYjigJ3kuI3lvpfkvY7kuo7kurrmsJHluIExMOS4h+WFg+OAglwiLFxyXG4gICAgICAgIFwiMDUwMjZcIjogXCLor7fpgInmi6nkuIDkuKrlj4zliKnkuLDlrZDotKbmiLdcIixcclxuICAgICAgICBcIjA1MDI3XCI6IFwi55WZ5a2Y6YeR6aKd5L2O5LqO5pyA5L2O6L2s5a2Y6YeR6aKd77yM6K+356Gu6K6k5piv5ZCm5YWo6YOo6L2s5Ye677yfXCIsXHJcbiAgICAgICAgXCIwNTAyOFwiOiBcIuagueaNruaCqOeahOeUs+ivt++8jOaMieeFp+aCqOiuvuWumueahOadoeS7tu+8jOWwhuaCqOetvue6puWNoei0puaIt+S4rei2hei/h+eVmeWtmOmHkemineS4lOi+vuWIsOacgOWwj+e6pui9rOmHkemineeahOasvumhueaIluaYr+i2hei/h+eVmeWtmOmHkemineeahOWumuminee6pui9rOmHkemine+8jOaMieeFp+S6i+WFiOe6puWumueahOe6pui9rOaWueW8jy7nuqbovazlkajmnJ8u5a2Y5pyf562J6KaB57Sg5Zyo5pel57uI6Ieq5Yqo6L2s5a2Y5Li65a6a5pyf5pW05a2Y5pW05Y+W5a2Y5qy+44CC6K+l56yU5a2Y5qy+5Yiw5pyf5ZCO77yM57O757uf5qC55o2u562+57qm5pe257qm5a6a55qE6L2s5a2Y5qCH5b+X5ZKM5a2Y5pyf6L+b6KGM6L2s5a2Y44CCXCIsXHJcbiAgICAgICAgXCIwNTAyOVwiOiBcIuaCqOS9v+eUqOetvue6puWAn+iusOWNoemAmui/h1BPU+acuuWIt+WNoea2iOi0ueaXtu+8jOWcqOa2iOi0uemHkemineWkp+S6juetvue6puWAn+iusOWNoeS4i+a0u+acn+S4u+i0puaIt+mHkemineS9huWwj+S6juetvue6puWAn+iusOWNoeS4i+a0u+acn+S4u+i0puaIt+S4juWQhOWumuacn+WtmOasvuWtkOi0puaIt+i1hOmHkeaAu+mineeahOaDheWGteS4i++8jOaMieeFp+KAnOWQjuWtmOWFiOWGu+KAneWOn+WImeS+neasoeWGu+e7k+WuouaIt+etvue6puWAn+iusOWNoeS4i+Wumuacn+WtmOasvuWtkOi0puaIt++8jOW5tuS4uuaCqOetvue6puWAn+iusOWNoeS4i+a0u+acn+S4u+i0puaIt+aPkOS+m+S4juWGu+e7k+mHkemineebuOetieeahOa2iOi0uemineW6pu+8jOWQjOaXtuaJo+WHj+a2iOi0uemHkemineOAguaXpee7iOWJjeaCqOWQkeetvue6puWAn+iusOWNoeihpei2s+WGu+e7k+mHkemine+8m+WvueS6juacquaMieaXtuS4jei2s+eahOWGu+e7k+mHkemine+8jOaIkeihjOaMieWumuacn+WtmOasvuWtkOi0puaIt+eahOWGu+e7k+asoeW6j+S+neasoeaPkOWJjemDqOWIhuaUr+WPluaIluiAhemUgOaIt+W3suWGu+e7k+eahOWumuacn+WtmOasvu+8jOWwhuacrOmHkeWSjOeojuWQjuWIqeaBr+i9rOWFpeetvue6puWAn+iusOWNoeS4i+a0u+acn+S4u+i0puaIt+OAglwiLFxyXG4gICAgICAgIFwiMDUwMzBcIjogXCLlgJ/orrDljaHkuIvmtLvmnJ/kuLvotKbmiLfpnIDkv53nlZnnmoTmnIDkvY7kvZnpop3vvIzku6Xmu6HotrPml6XluLjnmoTkuqTmmJPpnIDopoHjgILns7vnu5/lsIbotoXov4fnlZnlrZjph5Hpop3kuJTmu6HotrPnuqbovazmnaHku7bnmoTpg6jliIbovazkuLrnuqblrprmnJ/pmZDnmoTlrprmnJ/lrZjmrL7jgIJcIixcclxuICAgICAgICBcIjA1MDMxXCI6IFwi57O757uf6K6+5a6a55qE5YCf6K6w5Y2h5rS75pyf5Li76LSm5oi35L2Z6aKd6LaF6L+H55WZ5a2Y6YeR6aKd55qE6YOo5YiG77yM57qm6L2s5Li65a6a5pyf5a2Y5qy+55qE5pyA5bCP6YeR6aKd44CC6Iul5rS75pyf5Li76LSm5oi35L2Z6aKd6LaF6L+H55WZ5a2Y6YeR6aKd55qE6YOo5YiG5aSn5LqO562J5LqO6K+l6YeR6aKd77yM57O757uf5oyJ57qm5a6a6L+b6KGM6L2s5a2Y77yM5Y+N5LmL77yM57O757uf5LiN6L+b6KGM6L2s5a2Y44CCXCIsXHJcbiAgICAgICAgXCIwNTAzMlwiOiBcIuezu+e7n+iuvuWumueahOWAn+iusOWNoea0u+acn+S4u+i0puaIt+S9meminei2hei/h+eVmeWtmOmHkemineeahOmDqOWIhu+8jOavj+asoee6pui9rOS4uuWumuacn+WtmOasvueahOWbuuWumumHkemineOAguiLpea0u+acn+S4u+i0puaIt+S9meminei2hei/h+eVmeWtmOmHkemineeahOmDqOWIhuWkp+S6juetieS6juivpemHkemine+8jOezu+e7n+aMiee6puWumui/m+ihjOi9rOWtmO+8jOWPjeS5i++8jOezu+e7n+S4jei/m+ihjOi9rOWtmOOAglwiLFxyXG4gICAgICAgIFwiMDUwMzNcIjogXCLmuKnppqjmj5DnpLrvvJrmiYvmnLrlj7fkuLrpgInloavpoblcIixcclxuICAgICAgICBcIjA1MDM0XCI6IFwi5oKo5bey562+57qm5Y+M5Yip5Liw5Lqn5ZOB44CCXCIsXHJcbiAgICAgICAgXCIwNjAwMVwiOiBcIueQhui0oumdnuWtmOasvu+8jOS6p+WTgeaciemjjumZqe+8jOaKlei1hOmhu+iwqOaFjuOAglwiLFxyXG4gICAgICAgIFwiMDYwMDJcIjogXCLmgqjlt7Lnu4/ln7rph5Hnrb7nuqbvvIzmmK/lkKbkv67mlLnkuKrkurrnrb7nuqbkv6Hmga/vvJ9cIixcclxuICAgICAgICBcIjA2MDAzXCI6IFwi55CG6LSi6Z2e5a2Y5qy+77yM5Lqn5ZOB5pyJ6aOO6Zmp77yM5oqV6LWE6aG76LCo5oWO44CCXCIsXHJcbiAgICAgICAgXCIwNjAwNFwiOiBcIuaYr+WQpuetvue6plhYWOWFrOWPuFRB5Lqn5ZOB77yfXCIsXHJcbiAgICAgICAgXCIwNjAwNVwiOiBcIuivt+i+k+WFpVRB6LSm5Y+3XCIsXHJcbiAgICAgICAgXCIwNjAwNlwiOiBcIuivt+i+k+WFpTEy5L2NVEHotKblj7dcIixcclxuICAgICAgICBcIjA2MDA3XCI6IFwi6K+36YCJ5oup6ZyA6KaB562+57qm55qEVEHkuqflk4FcIixcclxuICAgICAgICBcIjA2MDA4XCI6IFwi55CG6LSi6Z2e5a2Y5qy+77yM5Lqn5ZOB5pyJ6aOO6Zmp77yM5oqV6LWE6aG76LCo5oWO44CCXCIsXHJcbiAgICAgICAgXCIwNjAwOVwiOiBcIua4qemmqOaPkOekuu+8muW9k+WJjeaXtuWIu+S4uumdnuWfuumHkeS6pOaYk+aXtumXtO+8jOaYr+WQpumihOe6puiupOi0rS/nlLPotK3jgJBYWFhYWOOAke+8n1wiLFxyXG4gICAgICAgIFwiMDYwMTBcIjogXCLmgqjov5jmnKrpo47pmanor4TkvLDvvIzor7flhYjov5vooYzlrqLmiLfpo47pmanor4TkvLDkuqTmmJPvvIzmnKzkuqTmmJPnu5PmnZ/jgIJcIixcclxuICAgICAgICBcIjA2MDExXCI6IFwi5oKo6L+Y5pyq562+57qm5Z+66YeR77yM6K+35YWI6L+b6KGM5Z+66YeR562+57qm5Lqk5piT77yM5pys5Lqk5piT57uT5p2f44CCXCIsXHJcbiAgICAgICAgXCIwNjAxMlwiOiBcIuaCqOi/mOacquW8gOmAmlRB6LSm5oi377yM6K+35YWI6L+b6KGM5Z+66YeRVEHnrb7nuqbkuqTmmJPvvIzmnKzkuqTmmJPnu5PmnZ/jgIJcIixcclxuICAgICAgICBcIjA2MDEzXCI6IFwi55CG6LSi6Z2e5a2Y5qy+77yM5Lqn5ZOB5pyJ6aOO6Zmp77yM5oqV6LWE6aG76LCo5oWO44CCXCIsXHJcbiAgICAgICAgXCIwNjAxNFwiOiBcIuaCqOacquW8gOmAmuWumuaKleacjeWKoe+8jOivt+S/ruaUueWfuumHkeetvue6puS/oeaBr+W8gOmAmuWumuaKlVwiLFxyXG4gICAgICAgIFwiMDYwMTVcIjogXCLmgqjmnKrlvIDpgJrmmbrog73lrprmipXmnI3liqHvvIzor7fkv67mlLnln7rph5Hnrb7nuqbkv6Hmga/lvIDpgJrmmbrog73lrprmipVcIixcclxuICAgICAgICBcIjA2MDE2XCI6IFwi5rip6aao5o+Q56S677ya5Z+66YeR6LSt5Lmw5YmN6ZyA5Zyo6K+l5Z+66YeR5YWs5Y+45byA56uL5Z+66YeR6LSm5oi35omN6IO96LSt5Lmw6K+l5Z+66YeR5YWs5Y+455qE5Z+66YeR5Lqn5ZOB44CC54K55Ye744CQ562+57qm44CR5oyJ6ZKu77yM5bCG5Li65oKo5byA56uLVEHotKbmiLfjgILngrnlh7vjgJDkuIrkuIDmraXjgJHmjInpkq7vvIzlsIblj5bmtojotK3kubDln7rph5Hkuqflk4FcIixcclxuICAgICAgICBcIjA2MDE3XCI6IFwi55CG6LSi6Z2e5a2Y5qy+77yM5Lqn5ZOB5pyJ6aOO6Zmp77yM5oqV6LWE6aG76LCo5oWO44CCXCIsXHJcbiAgICAgICAgXCIwNjAxOFwiOiBcIueQhui0oumdnuWtmOasvu+8jOS6p+WTgeaciemjjumZqe+8jOaKlei1hOmhu+iwqOaFjuOAglwiLFxyXG4gICAgICAgIFwiMDYwMTlcIjogXCLnkIbotKLpnZ7lrZjmrL7vvIzkuqflk4HmnInpo47pmanvvIzmipXotYTpobvosKjmhY7jgIJcIixcclxuICAgICAgICBcIjA2MDIwXCI6IFwi5rip6aao5o+Q56S677ya5b2T5YmN5pe25Yi75Li66Z2e5Z+66YeR5Lqk5piT5pe26Ze077yM5piv5ZCm6aKE57qm6LWO5Zue44CQWFhYWFjjgJHvvJ9cIixcclxuICAgICAgICBcIjA2MDIxXCI6IFwi55CG6LSi6Z2e5a2Y5qy+77yM5Lqn5ZOB5pyJ6aOO6Zmp77yM5oqV6LWE6aG76LCo5oWO44CCXCIsXHJcbiAgICAgICAgXCIwNjAyMlwiOiBcIuaYr+WQpuehruWumuaSpOmUgOmAieS4reeahOWnlOaJmOiusOW9le+8n1wiLFxyXG4gICAgICAgIFwiMDYwMjNcIjogXCLmmK/lkKbnoa7lrprmkqTplIDmraTmnaHlp5TmiZjorrDlvZXvvJ9cIixcclxuICAgICAgICBcIjA2MDI0XCI6IFwi5piv5ZCm57un57ut6L+b6KGM5Z+66YeR5aeU5omY5pKk6ZSA77yfXCIsXHJcbiAgICAgICAgXCIwNzAwMVwiOiBcIuaJk+WNsOWksei0pe+8jOivt+iBlOezu+Wkp+WgguS6uuWRmFwiLFxyXG4gICAgICAgIFwiMDcwMDJcIjogXCLmuKnppqjmj5DnpLrvvJrnkIbotKLkuqflk4Hov73liqDnlLPotK3otbfngrnph5Hpop3kuI3mlLbnlLPotK3otbfngrnph5Hpop3pmZDliLbjgIJcIixcclxuICAgICAgICBcIjA3MDAzXCI6IFwi5rip6aao5o+Q56S677ya5Lqn5ZOB5pS255uK546H5Lul6LW35oGv5pel5b2T5aSp5pS255uK546H5Li65YeG44CCXCIsXHJcbiAgICAgICAgXCIwNzAwNFwiOiBcIueQhui0oumdnuWtmOasvu+8jOS6p+WTgeaciemjjumZqe+8jOaKlei1hOmhu+iwqOaFjuOAglwiLFxyXG4gICAgICAgIFwiMDcwMDVcIjogXCLnkIbotKLpnZ7lrZjmrL7vvIzkuqflk4HmnInpo47pmanvvIzmipXotYTpobvosKjmhY7jgIJcIixcclxuICAgICAgICBcIjA3MDA2XCI6IFwi55CG6LSi6Z2e5a2Y5qy+77yM5Lqn5ZOB5pyJ6aOO6Zmp77yM5oqV6LWE6aG76LCo5oWO44CCXCIsXHJcbiAgICAgICAgXCIwNzAwN1wiOiBcIuaCqOeahOWuouaIt+etiee6p+S4jeWMuemFje+8jOivt+mAieaLqeWFtuS7luS6p+WTgeOAglwiLFxyXG4gICAgICAgIFwiMDcwMDhcIjogXCLmgqjnmoTpo47pmannrYnnuqfkuI3ljLnphY3vvIzmmK/lkKbph43mlrDpo47pmanor4TkvLDvvJ9cIixcclxuICAgICAgICBcIjA3MDA5XCI6IFwi55CG6LSi6Z2e5a2Y5qy+77yM5Lqn5ZOB5pyJ6aOO6Zmp77yM5oqV6LWE6aG76LCo5oWO44CCXCIsXHJcbiAgICAgICAgXCIwODAwMVwiOiBcIua4qemmqOaPkOekuu+8muivt+WmguWunuWhq+WGmeavj+S4gOmhue+8jOWhq+WGmeS4jeinhOiMg+WwhuW9seWTjeaCqOS4i+asoei0reaxh++8jOWmgueUqOmAlOmAiemhueaXoOazlea7oei2s+aCqOeahOmcgOaxgu+8jOivt+WIsOafnOWPsOWKnueQhuOAglwiLFxyXG4gICAgICAgIFwiMDgwMDJcIjogXCLlpJbmsYfniYzku7fmj5DnpLrvvJrlpJbmsYfniYzku7flrp7ml7blj5jmm7TvvIzkuI7luILlnLrku7fmoLzmjqXovajvvIzns7vnu5/miYDmmL7npLrnmoTmsYfnjofkuLrlj4LogIPniYzku7fvvIzku6XmnIDnu4jmiJDkuqTmsYfnjofkuLrlh4bjgIJcIixcclxuICAgICAgICBcIjA4MDAzXCI6IFwi5aSW5rGH54mM5Lu35o+Q56S677ya5aSW5rGH54mM5Lu35a6e5pe25Y+Y5pu077yM5LiO5biC5Zy65Lu35qC85o6l6L2o77yM57O757uf5omA5pi+56S655qE5rGH546H5Li65Y+C6ICD54mM5Lu377yM5Lul5pyA57uI5oiQ5Lqk5rGH546H5Li65YeG44CCXCIsXHJcbiAgICAgICAgXCIwODAwNFwiOiBcIuaxh+asvumHkemineS4jeiDvei2hei/h+etieWAvDXkuIfnvo7lhYPph5Hpop3jgIJcIixcclxuICAgICAgICBcIjA4MDA1XCI6IFwi5omL57ut6LS55ZKM55S15oql6LS55rGH5qy+5Lq65pSv5LuY77yM5omL57ut6LS55Y+K55S15oql6LS55LiO5rGH5qy+5pys6YeR5Zyo5ZCM5LiA6LSm5oi35omj5pS244CCXCIsXHJcbiAgICAgICAgXCIwODAwNlwiOiBcIuaJi+e7rei0ueWSjOeUteaKpei0ueeUseaUtuasvuS6uuaUr+S7mO+8jOS7peaxh+asvuW4geenjeiuoeeul++8jOWcqOaxh+asvumHkemineS4reaJo+aUtuOAglwiLFxyXG4gICAgICAgIFwiMDgwMDdcIjogXCLlpoLku5jmsYfotYTph5HmnaXmupDkuo7otK3msYfvvIzku5jmsYfnlKjpgJTkuI7ljp/jgIrkuKrkurrotK3msYfnlLPor7fkuabjgIvloavmiqXnmoTotK3msYfnlKjpgJTmmK/lkKbkuIDoh7TjgIJcIixcclxuICAgICAgICBcIjA4MDA4XCI6IFwi546w6ZKe6aG76L2s5Li6546w5rGH5omN5Y+v5Lul55So5LqO5rGH5Ye65rGH5qy+XCIsXHJcbiAgICAgICAgXCIwODAwOVwiOiBcIuaCqOS5n+WPr+S7peeCueWHu+S4i+S4gOatpeiBlOWKqOi0reaxh+S6pOaYk1wiLFxyXG4gICAgICAgIFwiMDgwMTBcIjogXCLpkp7ovazmsYflsIbkvJrkuqfnlJ/msYflhZHmjZ/nm4rvvIzlubbkuJTkuLrmoLnmja7lrp7ml7bmsYfnjofov5vooYzlrp7ml7bkuqTmmJPvvIzor7fov5vooYzlip7nkIbjgIJcIixcclxuICAgICAgICBcIjA5MDAxXCI6IFwi6K+35Yqh5b+F5q2j56Gu5aGr5YaZXCIsXHJcbiAgICAgICAgXCIwOTAwMlwiOiBcIuWhq+WGmeS/oeaBr+acieivr++8jOivt+i/lOWbnuS/ruaUue+8jOi+ueahhuW3suagh+e6olwiLFxyXG4gICAgICAgIFwiMDkwMDNcIjogXCLor7fph43mlrDpgInmi6nkuIDlvKDmnKrlip7nkIbov4fnrKzkuInmlrnlrZjnrqHnmoTlgJ/orrDljaHljaHlj7dcIixcclxuICAgICAgICBcIjA5MDA0XCI6IFwi5peg56ym5ZCI5p2h5Lu255qE5YCf6K6w5Y2hXCIsXHJcbiAgICAgICAgXCIwOTAwNVwiOiBcIuWIhuacn+mHkemineS4jeW+l+S9juS6jjIwMDDlhYPkurrmsJHluIEu5LiN5b6X6auY5LqONTAwMDDlhYPkurrmsJHluIHjgILliIbmnJ/kuIDnu4/nlLPor7fmiJDlip/vvIzkuI3lj6/mkqTplIDjgIJcIixcclxuICAgICAgICBcIjEwMDAxXCI6IFwi5oKo55qE6aOO6Zmp562J57qn5LiN5aSf6LSt5Lmw5q2k5Lqn5ZOB77yM5piv5ZCm6YeN5paw6L+b6KGM6aOO6Zmp6K+E5Lyw77yfXCIsXHJcbiAgICAgICAgXCIxMDAwMlwiOiBcIuaCqOeahOmjjumZqeivhOS8sOW3sui/h+acn++8jOaYr+WQpumHjeaWsOi/m+ihjOmjjumZqeivhOS8sO+8n1wiLFxyXG4gICAgICAgIFwiMTAwMDNcIjogXCLlgaXlurflkYrnn6XmgqjmmK/lkKbmgqPmnIkuLi5cIixcclxuICAgICAgICBcIjEwMDA0XCI6IFwi6K+35oKo56Gu6K6k5piv5ZCm5a2Y5Zyo5Lul5LiK5YGl5bq35o+Q56S65omA6L+w5YaF5a6577yfXCIsXHJcbiAgICAgICAgXCIxMDAwNVwiOiBcIua4qemmqOaPkOekuu+8muWtmOWcqOebuOWFs+WBpeW6t+mXrumimO+8jOaXoOazlei0reS5sOivpeS6p+WTge+8gVwiLFxyXG4gICAgICAgIFwiMTAwMDZcIjogXCLmmK/lkKbnoa7orqTotK3kubDmraTmrL7kv53pmankuqflk4HvvJ9cIixcclxuICAgICAgICBcIjEwMDA3XCI6IFwi6ZW/5pyf6K+36L6T5YWlOTk5OTk5OTlcIixcclxuICAgICAgICBcIjEwMDA4XCI6IFwi5oKo6L+Y5pyq6aOO6Zmp6K+E5Lyw77yM5piv5ZCm5YWI6L+b6KGM6aOO6Zmp6K+E5Lyw77yfXCIsXHJcbiAgICAgICAgXCIxMDAwOVwiOiBcIua4qemmqOaPkOekuu+8mjEu54q56LGr5pyf5pKk5Y2V6ZKI5a+554q56LGr5pyf5YaF77yI5YW35L2T5pe26Ze05Lul5YWs5Y+46KeE5a6a5Li65YeG77yJ55qE5L+d5Y2V6L+b6KGM5pKk5L+d5pON5L2c77ybMi7otYTph5HliLDotKbml7bpl7Tor7flj4Lnhafkv53pmanlhazlj7jmj5DnpLrvvIzkuI3lkIzkv53pmanlhazlj7jkuqflk4HmnInmiYDkuI3lkIzvvJszLuS/nemZqeWFrOWPuOWwhuagueaNruS/nemZqeadoeasvuehruWumuaYr+WQpuaUtuWPluW3peacrOi0ue+8mzQu5oqV5L+d5ZCO5Y+Y5pu06ZO26KGM6LSm5Y+35bCG5a+56K+l5Yqf6IO95Lqn55Sf5b2x5ZON77yM5aaC5LiN5oiQ5Yqf77yM6K+35Yiw5L+d6Zmp5YWs5Y+45p+c5Y+w5Yqe55CGXCIsXHJcbiAgICAgICAgXCIxMDAxMFwiOiBcIua4qemmqOaPkOekuu+8mjEu6aKG5Y+WL+mAgOS/nemSiOWvueeKueixq+acn+Wklu+8iOWFt+S9k+aXtumXtOS7peWFrOWPuOinhOWumuS4uuWHhu+8ieeahOS/neWNlei/m+ihjOmAgOS/neaTjeS9nO+8mzIu6LWE6YeR5Yiw6LSm5pe26Ze06K+35Y+C54Wn5L+d6Zmp5YWs5Y+45o+Q56S677yM5LiN5ZCM5L+d6Zmp5YWs5Y+45Lqn5ZOB5pyJ5omA5LiN5ZCM77ybMy7kv53pmanlhazlj7jlsIbmoLnmja7kv53pmanmnaHmrL7mlLblj5bpgIDkv53miYvnu63otLnvvIzmlLbotLnmoIflh4bor7flj4Lop4Hkuqflk4HnmoTigJzotLnnlKjnu5PmnoTigJ3vvJs0LuaKleS/neWQjuWPmOabtOmTtuihjOi0puWPt+WwhuWvueivpeWKn+iDveS6p+eUn+W9seWTje+8jOWmguS4jeaIkOWKn++8jOivt+WIsOS/nemZqeWFrOWPuOafnOWPsOWKnueQhlwiLFxyXG4gICAgICAgIFwiMTAwMTFcIjogXCLmuKnppqjmj5DnpLrvvJoxLuW9k+aXpeaSpOWNleS4uuaSpOmUgOW9k+WkqeaKleS/neaIkOWKn+eahOS/neWNle+8jOW9k+aXpeaSpOWNleWwhuS4jeaJo+mZpOaJi+e7rei0ue+8mzIu5b2T5pel5pKk5Y2V5Yiw6LSm5pe26Ze06ZyA5qC55o2u5Yac6KGM5pKk5Y2V5pON5L2c6YCA5qy+5pe26Ze06L+b6KGM56Gu6K6k77ybMy7mipXkv53lkI7lj5jmm7TkuobotKbmiLfkv6Hmga/kvJrpgKDmiJDor6XkuqTmmJPlpLHotKXvvIzor7fliLDkv53pmanlhazlj7jmn5zlj7Dmn6Xor6Llj4rlip7nkIbnm7jlhbPkuJrliqHjgIJcIixcclxuICAgICAgICBcIjEwMDEyXCI6IFwi5piv5ZCm56Gu6K6k5o+Q5Lqk77yfXCIsXHJcbiAgICAgICAgXCIxMDAxM1wiOiBcIua4qemmqOaPkOekuu+8mui1hOmHkeWwhuWunuaXtuWIsOi0puOAglwiLFxyXG4gICAgICAgIFwiMTAwMTRcIjogXCLmuKnppqjmj5DnpLrvvJrotYTph5HliLDotKbml7bpl7TnlLHkv53pmanlhazlj7jnoa7lrprjgIJcIixcclxuICAgICAgICBcIjExMDAxXCI6IFwi5q+P5Lq65Y+v6aKE57qmMS0z5p6a77yM6aKE57qm5ZCO5LiN5Y+v5L+u5pS5XCIsXHJcbiAgICAgICAgXCIxMTAwMlwiOiBcIuacrOe9keeCueWJqeS9memineW6pjUwMOaemlwiLFxyXG4gICAgICAgIFwiMTEwMDNcIjogXCLmnKznvZHngrnlj6/pooTnuqbpop3luqblt7LnlKjlroxcIixcclxuICAgICAgICBcIjExMDA0XCI6IFwi6K+36YCJ5oup6aKE57qm5pWw6YePXCIsXHJcbiAgICAgICAgXCIxMTAwNVwiOiBcIui0uuWygeW4geWFkeaNoua0u+WKqOW3sue7k+adn++8jOaXoOazleafpeivolwiLFxyXG4gICAgICAgIFwiMTEwMDZcIjogXCLor7flnKjlhZHmjaLml6XmnJ/lh63pooTnuqbor4Hku7blkozlhZHmjaLnoIHliLDnvZHngrnlhZHmjaLjgIJcIixcclxuICAgICAgICBcIjExMDA3XCI6IFwi5rip6aao5o+Q56S677ya5Lqk5piT5oiQ5Yqf5bCG5riF6Zmk5oKo55qE6aKE57qm6K6w5b2V77yBXCIsXHJcbiAgICAgICAgXCI5OTAwMVwiOiBcIjQxSDk5OeaMh+WumueQhui0oumHkemineS4jeiDveWwj+S6jjjkuIflhYPkurrmsJHluIHvvIFcIlxyXG4gICAgfSxcclxuICAgIFwiZXJyb3JzXCI6IHtcclxuXHJcbiAgICB9XHJcbn0iLCJtb2R1bGUuZXhwb3J0cz17XHJcbiAgICBcImh0bWxcIjoge1xyXG4gICAgICAgIFwiRGVzY3JpcHRpb25cIjogXCLpobXpnaLmlofmnKzkuK3mlofotYTmupDlrprkuYlcIlxyXG4gICAgfSxcclxuICAgIFwidGlwXCI6IHtcclxuICAgICAgICBcIjAwMDAxXCI6IFwi5Lqk5piT5q2j5Zyo6L+b6KGM5Lit77yM5piv5ZCm57uT5p2f5Yqe55CG77yfXCIsXHJcbiAgICAgICAgXCIwMDAwMlwiOiBcIuivt+mAieaLqemcgOimgeWKnueQhueahOS4muWKoVwiLFxyXG4gICAgICAgIFwiMDAwMDNcIjogXCLor7fliLfmgqjnmoTpk7booYzljaFcIixcclxuICAgICAgICBcIjAwMDA0XCI6IFwi6K+35o+S5YWl5oKo55qE6ZO26KGM5Y2hXCIsXHJcbiAgICAgICAgXCIwMDAwNVwiOiBcIuivt+aPkuWFpeaCqOeahOmTtuihjOWNoVwiLFxyXG4gICAgICAgIFwiMDAwMDZcIjogXCLor7flsIbmgqjnmoTpk7booYzljaHmlL7nva7kuo7or4bliKvljLpcIixcclxuICAgICAgICBcIjAwMDA3XCI6IFwi6K+75Y+W5Y2h5Y+35L+h5oGv5aSx6LSl77yM6K+35qOA5p+l6ZO26KGM5Y2h5piv5ZCm5pSv5oyB5q2k5Yqf6IO95oiW5o2f5Z2PXCIsXHJcbiAgICAgICAgXCIwMDAwOFwiOiBcIuivt+aUtuWlveaCqOeahOmTtuihjOWNoVwiLFxyXG4gICAgICAgIFwiMDAwMDlcIjogXCLor7fmlLblpb3mgqjnmoTpk7booYzljaFcIixcclxuICAgICAgICBcIjAwMDEwXCI6IFwi6K+35pS25aW95oKo55qE6ZO26KGM5Y2hXCIsXHJcbiAgICAgICAgXCIwMDAxMVwiOiBcIuivt+WwhuWtmOaKmOe/u+iHs+mcgOaJk+WNsOeahOmhtemdouaPkuWFpeihpeeZu+WPo1wiLFxyXG4gICAgICAgIFwiMDAwMTJcIjogXCLor7fliLfmgqjnmoTlrZjmiphcIixcclxuICAgICAgICBcIjAwMDEzXCI6IFwi5peg6KGl55m75piO57uGXCIsXHJcbiAgICAgICAgXCIwMDAxNFwiOiBcIuacieihpeaJk+aYjue7hu+8jOivt+WwhuWtmOaKmOe/u+iHs+esrHjpobXmj5LlhaXmiZPljbDmnLpcIixcclxuICAgICAgICBcIjAwMDE1XCI6IFwi5pyJ6KGl5omT5piO57uG77yM5q2j5Zyo5Li65oKo5omT5Y2wXCIsXHJcbiAgICAgICAgXCIwMDAxNlwiOiBcIuWtmOaKmOW3suaJk+a7oe+8jOivt+iHs+afnOmdouWKnueQhuaNouaKmOS4muWKoVwiLFxyXG4gICAgICAgIFwiMDAwMTdcIjogXCLor7fnv7vpobVcIixcclxuICAgICAgICBcIjAwMDE4XCI6IFwi6K+35pS25aW95oKo55qE5a2Y5oqYXCIsXHJcbiAgICAgICAgXCIwMDAxOVwiOiBcIuivpei0puaIt+W3suaMguWkse+8jOivt+WuouaIt+acrOS6uuaQuuW4pui6q+S7veivgeS7tuiHs+afnOWPsOWKnueQhlwiLFxyXG4gICAgICAgIFwiMDAwMjBcIjogXCLor6XotKbmiLflr4bnoIHlt7LmjILlpLHvvIzor7flrqLmiLfmnKzkurrmkLrluKbouqvku73or4Hku7bov5vooYzlr4bnoIHph43nva5cIixcclxuICAgICAgICBcIjAwMDIxXCI6IFwi6K+75Y+W5Y2h5Y+35L+h5oGv5aSx6LSl77yM6K+35qOA5p+l5Y2h5piv5ZCm5ou/5Y+N5oiW5o2f5Z2PXCIsXHJcbiAgICAgICAgXCIwMDAyMlwiOiBcIuS4jeaUr+aMgeWPl+eQhuatpOexu+i0puaIt++8jOivt+iHs+afnOmdouWKnueQhlwiLFxyXG4gICAgICAgIFwiMDAwMjNcIjogXCLor7vlj5bljaHlj7fkv6Hmga/lpLHotKXvvIzor7fmo4Dmn6XljaHmmK/lkKbmi7/lj43miJbmjZ/lnY9cIixcclxuICAgICAgICBcIjAwMDI0XCI6IFwi6K+36K6+572u5oKo55qE5paw5a+G56CBL+ivt+WGjeasoei+k+WFpeS9oOeahOWvhueggeWIoOmZpO+8iOWboOWKoOWFpeWtmOaKmOS4muWKoe+8jOaJgOS7peiAg+iZkeWwhuWNoeaUueS4uui0puaIt++8iVwiLFxyXG4gICAgICAgIFwiMDAwMjVcIjogXCLmuKnppqjmj5DnpLrvvJrlr4bnoIHpnIDkuLrlha3kvY3mlbDlrZfvvIzkuI3lhYHorrjkvb/nlKjnlJ/ml6Uu55S16K+dLui6q+S7veivgeWPt+eggS7ph43lpI3mlbDlrZcu6L+e57ut5pWw5a2X562J566A5Y2V5a+G56CB77yM6K+354mi6K6w5bm25aal5ZaE5L+d566h5Y+K5L2/55So5oKo55qE5a+G56CB44CC5Yig6Zmk77yI5qC55o2u5pyA5paw55qE5a+G56CB6K6+572u6KeE5YiZ5L+u5pS577yJXCIsXHJcbiAgICAgICAgXCIwMDAyNlwiOiBcIuivt+i+k+WFpeaCqOeahOWvhueggVwiLFxyXG4gICAgICAgIFwiMDAwMjdcIjogXCLlr4bnoIHovpPlhaXplJnor6/vvIzor7fph43mlrDovpPlhaXvvIFcIixcclxuICAgICAgICBcIjAwMDI4XCI6IFwi5oKo55qE5a+G56CB6ZSZ6K+v5qyh5pWw6LaF6ZmQ77yM6K+36IGU57O75aSn5aCC5Lq65ZGY44CCXCIsXHJcbiAgICAgICAgXCIwMDAyOVwiOiBcIuivt+WwhuaCqOeahOi6q+S7veivgeS7tuaUvuWFpeivhuWIq+WMuuWIoOmZpO+8iOS+m+aWsOeJiOWkluWbveS6uuawuOS5heWxheeVmeivgSvml6fniYjorr7lpIfkvb/nlKjvvIlcIixcclxuICAgICAgICBcIjAwMDMwXCI6IFwi6K+35pS25aW95oKo55qE6Lqr5Lu96K+B5Lu2XCIsXHJcbiAgICAgICAgXCIwMDAzMVwiOiBcIuaCqOeahOi6q+S7veivgeS/oeaBr+ivu+WPluWksei0pe+8jOivt+iBlOezu+Wkp+WgguS6uuWRmFwiLFxyXG4gICAgICAgIFwiMDAwMzJcIjogXCLor7fmj5LlhaXmgqjnmoTouqvku73or4FcIixcclxuICAgICAgICBcIjAwMDMzXCI6IFwi6K+35pS25aW95oKo55qE6Lqr5Lu96K+B5Lu2XCIsXHJcbiAgICAgICAgXCIwMDAzOFwiOiBcIuWwiuaVrOeahOeUqOaIt++8jOaCqOaJgOaMgeacieeahOivgeS7tuaaguaXtuS4jeiDveWKnueQhuatpOmhueS4muWKoe+8jOivt+aCqOiBlOezu+Wkp+Wggue7j+eQhui/m+ihjOWSqOivou+8jOaIkeS7rOWwhue7p+e7reS4uuaCqOaPkOS+m+acjeWKoeOAglwiLFxyXG4gICAgICAgIFwiMDAwMzlcIjogXCLliKDpmaTvvIjlrqHmoLjkurrlkZg6eHh4eHh477yJ5oKo5aW977yM6K+35oqs5aS055yL5q2j5YmN5pa544CCXCIsXHJcbiAgICAgICAgXCIwMDA0MFwiOiBcIuato+WcqOi/m+ihjOi6q+S7veWuoeaguO+8jOivt+eojeWQju+8gVwiLFxyXG4gICAgICAgIFwiMDAwNDFcIjogXCLmgqjnmoTouqvku73lt7Lnoa7orqTvvIzor7fnu6fnu63lip7nkIbkuJrliqHjgIJcIixcclxuICAgICAgICBcIjAwMDQyXCI6IFwi5oKo55qE6Lqr5Lu95a6h5qC45pyq6YCa6L+H77yM6K+36IGU57O75aSn5aCC5Lq65ZGY44CCXCIsXHJcbiAgICAgICAgXCIwMDA0NFwiOiBcIua4qemmqOaPkOekuu+8muato+WcqOaJk+WNsOeUs+ivt+S5pu+8jOivt+eojeWQjlwiLFxyXG4gICAgICAgIFwiMDAwNDVcIjogXCLnlYzpnaLmmL7npLoxMuenkuWAkuiuoeaXtlwiLFxyXG4gICAgICAgIFwiMDAwNDZcIjogXCLmuKnppqjmj5DnpLrvvJror7fmi7/lh7rnlLPor7fkuablubblnKjlrqLmiLfmoI/nrb7lrZfjgIJcIixcclxuICAgICAgICBcIjAwMDQ3XCI6IFwi5rip6aao5o+Q56S677ya6K+35bCG5Lia5Yqh55Sz6K+35Lmm5q2j6Z2i5pyd5LiL5pS+5YWl5Zue5pS25Y+jXCIsXHJcbiAgICAgICAgXCIwMDA0OFwiOiBcIuivt+aguOWvueS4muWKoeeUs+ivt+S5puS/oeaBr++8jOaXoOivr+WQjuivt+eCueWHu+ehruiupOmUrlwiLFxyXG4gICAgICAgIFwiMDAwNDlcIjogXCLmioTlvZXlkI7or7fngrnlh7vigJzkv53lrZjigJ1cIixcclxuICAgICAgICBcIjAwMDUwXCI6IFwi6K+3562+5a2X77yM562+5a2X5ZCO54K55Ye756Gu6K6k6ZSu44CCXCIsXHJcbiAgICAgICAgXCIwMDA1MVwiOiBcIuivt+iBlOezu+WuoeaguOWRmOi+k+WFpeaMh+e6uee8luWPt1wiLFxyXG4gICAgICAgIFwiMDAwNTJcIjogXCLor7fliLfmgqjnmoTmjIfnurnvvIHliKDpmaTvvIjmjIfnurnnvJblj7fvvJo5MDAw77yJXCIsXHJcbiAgICAgICAgXCIwMDA1M1wiOiBcIjEu6K+35qC45a6e6K+l56yU5Lia5Yqh5piv5ZCm5Li65a6i5oi35pys5Lq65Yqe55CGMi7or7fnoa7orqTlrqLmiLfnrb7lkI3mmK/lkKblh4bnoa5cIixcclxuICAgICAgICBcIjAwMDU0XCI6IFwiMS7or7fmoLjlrp7lrqLmiLfor4Hku7bnmoTnnJ/lrp7mgKcyLuivt+ehruiupOWuouaIt+aLjeaRhOivgeS7tuS/oeaBr+a4heaZsC7lrozmlbRcIixcclxuICAgICAgICBcIjAwMDU1XCI6IFwiLuivt+aguOWunuWuouaIt+ivgeS7tueahOecn+WunuaApzIu6K+35qC45a6e6K+l56yU5Lia5Yqh5piv5ZCm5Li65a6i5oi35pys5Lq65Yqe55CGMy7or7fnoa7orqTlrqLmiLfnrb7lkI3mmK/lkKblh4bnoa5cIixcclxuICAgICAgICBcIjAwMDU2XCI6IFwi6K+356Gu6K6k5a6i5oi35bey6L6+55u45bqU6LS15a6+562J57qnXCIsXHJcbiAgICAgICAgXCIwMDA1N1wiOiBcIjEu6K+35qC45a6e6K+l56yU5Lia5Yqh5piv5ZCm5Li65a6i5oi35pys5Lq65Yqe55CGMi7or7fnoa7orqTlrqLmiLfnrb7lkI3mmK/lkKblh4bnoa4zLuivt+ehruiupOWuouaIt+W3sui+vuebuOW6lOi0teWuvuetiee6p1wiLFxyXG4gICAgICAgIFwiMDAwNThcIjogXCLor7fnoa7orqTlrqLmiLflt7Lovr7nm7jlupTotLXlrr7nrYnnuqdcIixcclxuICAgICAgICBcIjAwMDU5XCI6IFwiMS7or7fmoLjlrp7or6XnrJTkuJrliqHmmK/lkKbkuLrlrqLmiLfmnKzkurrlip7nkIYyLuivt+ehruiupOWuouaIt+etvuWQjeaYr+WQpuWHhuehrjMu6K+356Gu6K6k5a6i5oi35bey6L6+55u45bqU6LS15a6+562J57qnXCIsXHJcbiAgICAgICAgXCIwMDA2MFwiOiBcIuivt+ehruiupOWuouaIt+aPkOS+m+acieaViOivgeaYjuadkOaWmSzlubbnlZnlrZjjgIJcIixcclxuICAgICAgICBcIjAwMDYxXCI6IFwiMS7or7fmoLjlrp7or6XnrJTkuJrliqHmmK/lkKbkuLrlrqLmiLfmnKzkurrlip7nkIYyLuivt+ehruiupOWuouaIt+etvuWQjeaYr+WQpuWHhuehrjMu6K+356Gu6K6k5a6i5oi35o+Q5L6b5pyJ5pWI6K+B5piO5p2Q5paZ77yM5bm255WZ5a2Y44CCXCIsXHJcbiAgICAgICAgXCIwMDA2MlwiOiBcIjEu6K+35a6i5oi35YaN5qyh56Gu6K6k5pS25qy+5pa55L+h5oGv77yM6LCo6Ziy55S15L+h6K+I6aqX77yBMi7lpoLlrqLmiLfpgInmi6nlrp7ml7bliLDotKbvvIzmj5DphpLlrqLmiLfor6XnrJTovazotKbkuI3lj6/mkqTplIBcIixcclxuICAgICAgICBcIjAwMDYzXCI6IFwiMS7or7fmoLjlrp7or6XnrJTkuJrliqHmmK/lkKbkuLrlrqLmiLfmnKzkurrlip7nkIYyLuivt+ehruiupOWuouaIt+etvuWQjeaYr+WQpuWHhuehrjMu6K+35a6i5oi35YaN5qyh56Gu6K6k5pS25qy+5pa55L+h5oGv77yM6LCo6Ziy55S15L+h6K+I6aqX77yBNC7lpoLlrqLmiLfpgInmi6nlrp7ml7bliLDotKbvvIzmj5DphpLlrqLmiLfor6XnrJTovazotKbkuI3lj6/mkqTplIBcIixcclxuICAgICAgICBcIjAwMDY0XCI6IFwi6K+35o+Q56S65a6i5oi355S15a2Q6ZO26KGM5rOo6ZSA5ZCO77yM5Y6f5bi455So6IGU57O75Lq65L+h5oGv5LiN5YaN5L+d5a2Y77yBXCIsXHJcbiAgICAgICAgXCIwMDA2NVwiOiBcIjHjgIHor7fmoLjlrp7or6XnrJTkuJrliqHmmK/lkKbkuLrlrqLmiLfmnKzkurrlip7nkIYy44CB6K+356Gu6K6k5a6i5oi3562+5ZCN5piv5ZCm5YeG56GuM+OAgeivt+aPkOekuuWuouaIt+eUteWtkOmTtuihjOazqOmUgOWQju+8jOWOn+W4uOeUqOiBlOezu+S6uuS/oeaBr+S4jeWGjeS/neWtmO+8gVwiLFxyXG4gICAgICAgIFwiMDEwMDFcIjogXCLkuK3lm73nqI7mlLblsYXmsJHmmK/mjIflnKjkuK3lm73looPlhoXmnInkvY/miYDvvIzmiJbogIXml6DkvY/miYDogIzlnKjlooPlhoXlsYXkvY/mu6HkuIDlubTnmoTkuKrkurrjgILpnZ7lsYXmsJHmmK/mjIfkuK3lm73nqI7mlLblsYXmsJHku6XlpJbnmoTkuKrkurrjgIJcIixcclxuICAgICAgICBcIjAxMDAyXCI6IFwi5oKo55qE5omL5py65Y+356CB5bey6KKr5Y2g55So77yM5aaC6ZyA5L+u5pS55omL5py65Y+356CB77yM5Y+v54K55Ye75L+u5pS5XCIsXHJcbiAgICAgICAgXCIwMTAwM1wiOiBcIuiwqOaFjuaTjeS9nO+8jOWIoOmZpOWwhuacieWPr+iDveaXoOazleaBouWkjeWHj+WFjVwiLFxyXG4gICAgICAgIFwiMDIwMDFcIjogXCLvvIjlj6Pku6TljaHljYfnuqfkuLpL5Luk77yJXCIsXHJcbiAgICAgICAgXCIwMjAwMlwiOiBcIkvlrp3vvJrljZXnrJTovazotKbmlK/ku5jpmZDpop3vvIjkurrmsJHluIHvvInvvJoxMDDkuIflhYPvvJvljZXml6XntK/orqHovazotKbmlK/ku5jpmZDpop3vvIjkurrmsJHluIHvvInvvJo1MDDkuIflhYNL5Luk77ya5Y2V56yU6L2s6LSm6ZmQ6aKd77yI5Lq65rCR5biB77yJ77yaNTDkuIfvvIzljZXml6XntK/orqHpmZDpop3vvIjkurrmsJHluIHvvInvvJo1MOS4h++8m+WNleeslOaUr+S7mOmZkOmine+8iOS6uuawkeW4ge+8ie+8mjEw5LiH77yM5Y2V5pel57Sv6K6h6ZmQ6aKd77yI5Lq65rCR5biB77yJ77yaNTDkuIdL5a6d77yaNTDlhYMv5Liq77ybS+S7pO+8mjI15YWDL+S4qlwiLFxyXG4gICAgICAgIFwiMDIwMDNcIjogXCLlj6Pku6TljaHljYfnuqfkuLpL5LukXCIsXHJcbiAgICAgICAgXCIwMjAwNFwiOiBcIuW8gOmAmuaOjOmTtuS7heaUr+aMgemfs+mikeWPiuiTneeJmUvlrp1cIixcclxuICAgICAgICBcIjAyMDA1XCI6IFwi5oKo55qE5omL5py65Y+356CB5bey6KKr5Y2g55So77yM5aaC6ZyA5L+u5pS55omL5py65Y+356CB77yM5Y+v54K55Ye75L+u5pS5XCIsXHJcbiAgICAgICAgXCIwMjAwNlwiOiBcIu+8iOWQq+e9keS4iumTtuihjC7mjozkuIrpk7booYzlkoznn63kv6Hpk7booYzvvIlcIixcclxuICAgICAgICBcIjAyMDA3XCI6IFwi77yIMuWFgy/mnIjvvInvvIzor7fnoa7kv53nlLXor53lj7fnoIHml6Dor6/kuJTkuLrmnKzkurrkvb/nlKhcIixcclxuICAgICAgICBcIjAyMDA4XCI6IFwi5YW25Lit4oWh57G75Y2h5oyJ6KeE5a6a6aKd5bqm6ZmQ5Yi277yM5Lul5LiK6ZmQ6aKd5Z2H5LiN6LaF6L+HMTAwMDDlhYNcIixcclxuICAgICAgICBcIjAyMDA5XCI6IFwi6K+35pS25aW95oKo55qE5Yqo5oCB5a+G56CB6K6+5aSH77yM5YiH5Yu/5Lqk5LqI5LuW5Lq65L2/55SoXCIsXHJcbiAgICAgICAgXCIwMjAxMFwiOiBcIuWvhueggemcgOiuvue9ruS4ujjkvY3mlbDlrZfkuI7lrZfmr43nu4TlkIjvvIzkuJTkuI3og73kuLrov57nu63nmoTmlbDlrZflkozlrZfmr43jgIJcIixcclxuICAgICAgICBcIjAyMDExXCI6IFwi5oKo55qE5r+A5rS756CB5bey5omT5Y2w5Zyo5a6i5oi35Yet5p2h5LiK77yM6K+35rOo5oSP5L+d566h44CCXCIsXHJcbiAgICAgICAgXCIwMjAxMlwiOiBcIkvku6TvvJoyNeWFgy/kuKpcIixcclxuICAgICAgICBcIjAyMDEzXCI6IFwi5rip6aao5o+Q56S677ya5pys5pON5L2c5bCG5a+86Ie05oKo5Zyo5Yac6KGM55qE5omA5pyJ6LSm5oi35bey57uR5a6a55qE55S15a2Q5rig6YGT5rOo6ZSA44CC5bm25LiU5omA5pyJ55S15a2Q5rig6YGT5L+d5a2Y5L+h5oGv5Lya6KKr5riF6Zmk5LiU5LiN5Y+v5oGi5aSN44CC5byC5Zyw5a2Y5oqY55qE55S15a2Q6ZO26KGM5LiA5pem6KKr5rOo6ZSA77yM5aaC5p6c6ZyA6KaB6YeN5paw57uR5a6a77yM5b+F6aG76L+U5Zue5byA5oi36KGM5omA5Zyo55yB6YeN5paw57uR5a6a44CCXCIsXHJcbiAgICAgICAgXCIwMjAxNFwiOiBcIua4qemmqOaPkOekuu+8muWPquazqOmUgOacrOWNoeeahOeUteWtkOmTtuihjOa4oOmBk++8jOS4jeW9seWTjeWFtuS7luWNoee7keWumueahOeUteWtkOmTtuihjOOAglwiLFxyXG4gICAgICAgIFwiMDIwMTVcIjogXCLmuKnppqjmj5DnpLrvvJrpgInmi6nmj5LlhaXnlLXlrZDnjrDph5Hku4votKjvvIzliJnlj6rog73lip7nkIbmjIflrprotKbmiLflnIjlrZjvvJvpgInmi6nmlL7nva7nlLXlrZDnjrDph5Hku4votKjvvIzliJnlj6/ku6Xlip7nkIbmjIflrprotKbmiLflnIjlrZjmiJbpnZ7mjIflrprotKbmiLflnIjlrZhcIixcclxuICAgICAgICBcIjAyMDE2XCI6IFwi6K+35L+d5oyB55S15a2Q546w6YeR5LuL6LSo5o+S5YWl54q25oCB5oiW5pS+572u5Zyo5oSf5bqU5Yy65YaF77yBXCIsXHJcbiAgICAgICAgXCIwMjAxN1wiOiBcIuaMh+Wumui0puaIt+WciOWtmO+8muaMgeWNoeS6uuS9v+eUqOe7keWumumTtuihjOWNoei0puaIt+S4reeahOi1hOmHkeWQkeeUteWtkOeOsOmHkeWFheWAvO+8m+mdnuaMh+Wumui0puaIt+WciOWtmO+8muaMgeWNoeS6uuS9v+eUqOWFtuS7lumTtuihjOWNoei0puaIt+S4reeahOi1hOmHkeWQkeeUteWtkOeOsOmHkeWFheWAvFwiLFxyXG4gICAgICAgIFwiMDIwMThcIjogXCLor7fkv53mjIHnlLXlrZDnjrDph5Hku4votKjmj5LlhaXnirbmgIHmiJbmlL7nva7lnKjmhJ/lupTljLrlhoXvvIFcIixcclxuICAgICAgICBcIjAzMDAxXCI6IFwi6YeN6KaB5o+Q56S677ya6LCo6Ziy55S15L+h6K+I6aqX77yM6K+35Yu/6L275L+h6ZmM55Sf5Lq655qE5rGH5qy+6L2s6LSm5L+h5oGv77yB77yB77yBICAgIOitpuaWueaPkOekuu+8muaKteWItumrmOaBr+ivseaDke+8jOi/nOemu+mdnuazlembhui1hO+8jOivt+WLv+i9u+S/oemZjOeUn+S6uueahOaxh+asvui9rOi0puS/oeaBr++8jOiwqOmYsuS4iuW9k+WPl+mql++8gSAgICDmuKnppqjmj5DnpLrvvJrlnKjmnKzorr7lpIfov5vooYzmk43kvZzml7bvvIzor7fms6jmhI/lkajovrnnjq/looPvvIzlubbms6jmhI/lr4bnoIHpga7mjKHvvIzlnKjkuqTmmJPov4fnqIvkuK3noa7orqTmlLbmrL7mlrnmiLflkI3lkI7lho3ov5vooYzovazotKbjgILlpoLmnInpl67popjvvIzor7flj4rml7bogZTns7vpk7booYzlt6XkvZzkurrlkZjvvIzmiJHooYzlrqLmnI3ng63nur/vvJo5NTU5OeOAglwiLFxyXG4gICAgICAgIFwiMDMwMDJcIjogXCLigJzotKblj7fmnInor6/vvIzor7fph43mlrDovpPlhaXigJ1cIixcclxuICAgICAgICBcIjAzMDAzXCI6IFwi4oCc6K+36L6T5YWl5pS25qy+5pa56LSm5Y+34oCdXCIsXHJcbiAgICAgICAgXCIwMzAwNFwiOiBcIuKAnOi9rOWFpei0puaIt+S4jui9rOWHuui0puaIt+S4jeiDveebuOWQjO+8geKAnVwiLFxyXG4gICAgICAgIFwiMDMwMDVcIjogXCLigJzljZXnrJTovazotKbph5Hpop3otoXpmZDvvIzor7fph43mlrDovpPlhaXigJ1cIixcclxuICAgICAgICBcIjAzMDA2XCI6IFwi4oCc6LSm5oi35Y+v55So5L2Z6aKd5LiN6Laz77yM6K+36YeN5paw6L6T5YWl4oCdXCIsXHJcbiAgICAgICAgXCIwMzAwN1wiOiBcIuKAnOKFoeexu+aIt+i9rOi0pumHkeminei2hemZkO+8jOivt+mHjeaWsOi+k+WFpeKAnVwiLFxyXG4gICAgICAgIFwiMDMwMDhcIjogXCLigJzmgqjnmoTlj6/nlKjkvZnpop3kuLoq5YWD4oCd4oCc5oKo55qE4oWh57G75oi35b2T5YmN6L2s6LSm6ZmQ6aKd5Li6KuWFg+KAnVwiLFxyXG4gICAgICAgIFwiMDMwMDlcIjogXCLigJzmmK/lkKbliKDpmaTmlLbmrL7kurrkv6Hmga/vvJ/igJ3mmK/jgIHlkKZcIixcclxuICAgICAgICBcIjAzMDEwXCI6IFwi5a6e5pe26L2s6LSm77ya6LWE6YeR5Zyo5Lqk5piT5a6M5oiQ5ZCO56uL5Y2z6L2s5Ye65pmu6YCa6L2s6LSm77ya6LWE6YeR5Zyo5Lqk5piT5a6M5oiQMuWwj+aXtuWQjui9rOWHuuasoeaXpei9rOi0pu+8mui1hOmHkeWcqOS6pOaYk+WujOaIkDI05bCP5pe25ZCO6L2s5Ye6XCIsXHJcbiAgICAgICAgXCIwMzAxMVwiOiBcIuS4reWbveWGnOS4mumTtuihjOiCoeS7veaciemZkOWFrOWPuO+8miAgICDmnKzkurrnoa7orqTlt7LlkJHotLXooYznlLPor7fnmoTotYTph5HliJLovazkuqTmmJPmmK/mnKzkurrln7rkuo7oh6rkuLvlhrPnrZbogIzkvZzlh7rnmoToh6rmhL/ooYzkuLrvvIzkuI3lrZjlnKjkuK3lm73lhpzkuJrpk7booYzlkZjlt6Xku4vnu40u5o6o6I2QLuimgeaxguacrOS6uuS6pOaYk+etieaDheWGteOAguWGnOS4mumTtuihjOW3suS+neazleWQkeacrOS6uuaPkOekuu+8muW6lOiupOecn+aguOWunumHkemineWSjOaUtuasvui0puWPt+eahOWHhuehruaAp++8jOehruS/nei1hOmHkeWIkui9rOS6pOaYk+eUqOmAlOeahOecn+Wuni7lkIjms5Uu5pyJ5pWI77yM6Ziy5q2i6K+I6aqXLumdnuazlembhui1hOetiemjjumZqeaIluS4jeWIqeaDheW9oueahOWPkeeUn+OAguacrOS6uuW3suefpeaCieW5tuehruiupOS4iui/sOi1hOmHkeWIkui9rOS6pOaYk+S4jeaYr+eUqOS6jui0reS5sOS4reWbveWGnOS4mumTtuihjOiHquS4u+WPkeihjOeahOeQhui0ouS6p+WTgeaIluS4reWbveWGnOS4mumTtuihjOS7o+mUgOeahOS6p+WTgeOAguacrOS6uuW3sua4healmuiupOivhuWIsOS4iui/sOi1hOmHkeWIkui9rOS6pOaYk+eahOazleW+i+WQjuaenO+8jOeUseatpOS6p+eUn+eahOS4gOWIh+mjjumZqeWSjOaNn+WkseeUseacrOS6uuaJv+aLhe+8jOS4juS4reWbveWGnOS4mumTtuihjOaXoOWFs+OAguehruWumuOAgeWPlua2iFwiLFxyXG4gICAgICAgIFwiMDMwMTJcIjogXCLigJzotKbmiLflj6/nlKjkvZnpop3kuI3otrPvvIzor7fph43mlrDovpPlhaXigJ1cIixcclxuICAgICAgICBcIjAzMDEzXCI6IFwi4oCc4oWh57G75oi36L2s6LSm6YeR6aKd6LaF6ZmQ77yM6K+36YeN5paw6L6T5YWl4oCdXCIsXHJcbiAgICAgICAgXCIwMzAxNFwiOiBcIuKAnOWkp+minea4oOmBk+WFs+mXre+8jOivt+iBlOezu+Wkp+WgguS6uuWRmOKAnVwiLFxyXG4gICAgICAgIFwiMDMwMTVcIjogXCLigJzlvZPml6XkuLroioLlgYfml6XkuJTmrKHml6XkuLrlt6XkvZzml6XvvIzkuI3mlK/mjIE15LiH77yI5ZCr77yJ5Lul5LiK6YCJ5oup5qyh5pel5Yiw6LSm44CC4oCdIOehruWumlwiLFxyXG4gICAgICAgIFwiMDMwMTZcIjogXCLigJzmrKHml6XkuLroioLlgYfml6XvvIzlrp7pmYXliLDotKbml7bpl7TkuLrkuIvkuIDlt6XkvZzml6XvvIzmmK/lkKbnu6fnu63vvJ/igJ3mmK/jgIHlkKZcIixcclxuICAgICAgICBcIjAzMDE3XCI6IFwi5rip6aao5o+Q56S677ya4oCc5Li65LqG56Gu5L+d5oKo55qE6LWE6YeR5a6J5YWo77yM6K+36K6k55yf5qC45a+55LiK6L+w5Lqk5piT5L+h5oGv44CC4oCdXCIsXHJcbiAgICAgICAgXCIwMzAxOFwiOiBcIuKAnOivt+WwhuWtmOaKmOe/u+iHs+esrHjpobXmj5LlhaXmiZPljbDmnLrigJ1cIixcclxuICAgICAgICBcIjAzMDE5XCI6IFwi4oCc6K+357+76aG14oCdXCIsXHJcbiAgICAgICAgXCIwMzAyMFwiOiBcIuKAnOivt+aUtuWlveaCqOeahOWtmOaKmOKAnVwiLFxyXG4gICAgICAgIFwiMDMwMjFcIjogXCLigJzmmK/lkKblip7nkIbkuIvkuIDnrJTlu7bml7bovazotKbmkqTplIDkuqTmmJPvvJ/igJ3mmK/jgIHlkKZcIixcclxuICAgICAgICBcIjA0MDAxXCI6IFwi5Y2h566x5peg5Y2h77yM5piv5ZCm5Yqe55CG5Lmm6Z2i5oyC5aSx5Lia5Yqh77yfXCIsXHJcbiAgICAgICAgXCIwNDAwMlwiOiBcIuWNoeeuseaXoOWNoe+8jOaYr+WQpuWKnueQhuS5pumdouaMguWkseS4muWKoeWPiuWQjue7reS4muWKoe+8n1wiLFxyXG4gICAgICAgIFwiMDQwMDNcIjogXCLmuKnppqjmj5DnpLrvvJrotKbmiLfkvZnpop3moKHpqozoh7PkuIfkvY1cIixcclxuICAgICAgICBcIjA0MDA0XCI6IFwi5piv5ZCm5ZCM5Y+36KGl5Y2h77yfXCIsXHJcbiAgICAgICAgXCIwNDAwNVwiOiBcIua4qemmqOaPkOekuu+8muWQjOWPt+ihpeWNoemdnuWunuaXtuWPluWNoe+8jOWFt+S9k+WKnueQhuadoeS7tuWPiuWPluWNoeaXtumXtOivt+WSqOivoue9keeCueW3peS9nOS6uuWRmOOAglwiLFxyXG4gICAgICAgIFwiMDQwMDZcIjogXCLkuK3lm73lhpzkuJrpk7booYzogqHku73mnInpmZDlhazlj7jvvJrmnKzkurrnoa7orqTmiYDmj5DkvpvnmoTkuKrkurrotYTmlpnnnJ/lrp4u5pyJ5pWI77yM5bm25bey6K+m57uG5LqG6Kej5oyC5aSx5Lia5Yqh56ug56iLLuS4muWKoeWNj+iuri7lip/og73or7TmmI7lj4rotKPku7vmnaHmrL4u5Lia5Yqh5pS26LS55qCH5YeG77yM5Y+X55u45YWz5Lia5Yqh56ug56iL5ZKM5Y2P6K6u55qE57qm5p2f44CC6ZO26KGM5Y+X55CG5oyC5aSx5Lia5Yqh5YmN5ZKM5oyC5aSx5Lia5Yqh5ZCO77yM6YCg5oiQ55qE5o2f5aSx55Sx5pys5Lq66LSf6LSj77yM6ZO26KGM5LiN5om/5ouF6LSj5Lu744CCXCIsXHJcbiAgICAgICAgXCIwNDAwN1wiOiBcIuazqOaEj++8muaMguWkseaNouWNoeaXtu+8jOWOn+WAn+iusOWNoeS4i+W3suetvuWQiOe6puWPmOabtOWIsOaWsOWNoeS4i+WJje+8jOWwhuaXoOazleato+W4uOi/m+ihjOebuOWFs+i1hOmHkee7k+eul+OAglwiLFxyXG4gICAgICAgIFwiMDQwMDhcIjogXCLooaXljaHlsIbogZTliqjnlLXlrZDnjrDph5Hop6PnuqbvvIznlLXlrZDnjrDph5HkvZnpop3lsIbkuKLlpLHvvIzmmK/lkKbnu6fnu63lip7nkIbvvJ9cIixcclxuICAgICAgICBcIjA0MDA5XCI6IFwi6Z2e5pys572R54K55oyC5aSx77yM6K+35Yiw5Y6f5oyC5aSx572R54K55Yqe55CGXCIsXHJcbiAgICAgICAgXCIwNDAxMFwiOiBcIua4qemmqOaPkOekuu+8mui0puaIt+S9memineagoemqjOiHs+S4h+S9jVwiLFxyXG4gICAgICAgIFwiMDQwMTFcIjogXCLmlrDotKbmiLfnsbvlnovkuLpJ57G76LSm5oi377yM5Lqk5piT6ZmQ6aKd5L+u5pS55Li65pel57Sv6K6h5LiN5Y+X6ZmQ77yb5bm057Sv6K6h5LiN5Y+X6ZmQXCIsXHJcbiAgICAgICAgXCIwNDAxMlwiOiBcIuaWsOi0puaIt+exu+Wei+S4uklJ57G76LSm5oi377yM5Lqk5piT6ZmQ6aKd5L+u5pS55Li65pel57Sv6K6hMeS4h+WFg++8m+W5tOe0r+iuoTIw5LiH5YWD44CCXCIsXHJcbiAgICAgICAgXCIwNDAxM1wiOiBcIuiwqOaFjuaTjeS9nO+8jEnnsbvmiLfpmY3nuqfkuLpJSeexu+aIt+WQju+8jOWwhuWPl0lJ57G75oi35YCf6K6w5Y2h5pelLuW5tOe0r+iuoemZkOmineaOp+WItu+8jOmZjee6p+WQjuWPr+iDveaXoOazlemHjeaWsOWNh+e6p+S4uknnsbvmiLfjgIJcIixcclxuICAgICAgICBcIjA0MDE0XCI6IFwi4oCc6LSm5oi35L2Z6aKd6LaF6ZmQ77yM6K+36IGU57O75aSn5aCC5Lq65ZGY4oCdXCIsXHJcbiAgICAgICAgXCIwNDAxNVwiOiBcIuKAnOi0puaIt+S9memineWkp+S6jui9rOi0pumZkOmine+8jOmUgOaIt+WQjui1hOmHkeaXoOazleaIkOWKn+i9rOWHuuKAnVwiLFxyXG4gICAgICAgIFwiMDQwMTZcIjogXCLigJzlrZjlnKgqLiouKuetieWQiOe6pu+8jOivt+WFiOazqOmUgOWGjei/m+ihjOmUgOaIt+KAnVwiLFxyXG4gICAgICAgIFwiMDQwMTdcIjogXCLigJzlt7Lnrb7nuqbnlLXlrZDnjrDph5Eu55S15a2Q6ZO26KGMLua2iOaBr+acjeWKoS7kuKrkurrotYTph5HlvZLpm4bvvIzplIDmiLflsIbogZTliqjop6PnuqbvvIzmmK/lkKbnu6fnu63vvJ/igJ3muKnppqjmj5DnpLrvvJrnlLXlrZDpkrHljIXlhoXotYTph5HlsIbovazlm57kuLvotKbmiLfjgIJcIixcclxuICAgICAgICBcIjA0MDE4XCI6IFwi4oCc6LSm5Y+35pyJ6K+v77yM6K+36YeN5paw6L6T5YWl4oCdXCIsXHJcbiAgICAgICAgXCIwNDAxOVwiOiBcIua4qemmqOaPkOekuu+8mumUgOaIt+S4muWKoeS7heaUr+aMgeWunuaXtuWIsOi0pu+8jOS4lOaUtuasvuaWuemcgOS4uuaIkeihjOWAn+iusOWNoei0puaIt++8jOmUgOaIt+WQjui1hOmHkeeri+WNs+i9rOWHuu+8jOaXoOazlei9rOWbnu+8jOivt+WLv+WQkemZjOeUn+S6uuaxh+asvu+8gVwiLFxyXG4gICAgICAgIFwiMDQwMjBcIjogXCLmuKnppqjmj5DnpLrvvJrplIDmiLfmk43kvZzkuI3lj6/mkqTplIDvvIzor7fnoa7lrprov5vooYzplIDljaFcIixcclxuICAgICAgICBcIjA0MDIxXCI6IFwi4oCc6LSm5oi35L2Z6aKd6LaF6ZmQ77yM6K+36IGU57O75aSn5aCC5Lq65ZGY4oCdXCIsXHJcbiAgICAgICAgXCIwNDAyMlwiOiBcIumdnuacrOe9keeCueaMguWkse+8jOivt+WIsOWOn+aMguWksee9keeCueWKnueQhlwiLFxyXG4gICAgICAgIFwiMDQwMjNcIjogXCLigJzotKbmiLfkvZnpop3lpKfkuo7ovazotKbpmZDpop3vvIzplIDmiLflkI7otYTph5Hml6Dms5XmiJDlip/ovazlh7rigJ1cIixcclxuICAgICAgICBcIjA0MDI0XCI6IFwi4oCc5a2Y5ZyoKi4qLirnrYnlkIjnuqbvvIzor7flhYjms6jplIDlho3ov5vooYzplIDmiLfigJ1cIixcclxuICAgICAgICBcIjA0MDI1XCI6IFwi4oCc5bey562+57qm55S15a2Q546w6YeRLueUteWtkOmTtuihjC7mtojmga/mnI3liqEu5Liq5Lq66LWE6YeR5b2S6ZuG77yM6ZSA5oi35bCG6IGU5Yqo6Kej57qm77yM5piv5ZCm57un57ut77yf4oCd5rip6aao5o+Q56S677ya55S15a2Q6ZKx5YyF5YaF6LWE6YeR5bCG5Lii5aSx77yM5peg5rOV6L2s5Zue44CCXCIsXHJcbiAgICAgICAgXCIwNDAyNlwiOiBcIua4qemmqOaPkOekuu+8mui0puaIt+S9memineagoemqjOiHs+S4h+S9jVwiLFxyXG4gICAgICAgIFwiMDQwMjdcIjogXCLigJzotKblj7fmnInor6/vvIzor7fph43mlrDovpPlhaXigJ1cIixcclxuICAgICAgICBcIjA0MDI4XCI6IFwi5rip6aao5o+Q56S677ya6ZSA5oi35Lia5Yqh5LuF5pSv5oyB5a6e5pe25Yiw6LSm77yM5LiU5pS25qy+5pa56ZyA5Li65oiR6KGM5YCf6K6w5Y2h6LSm5oi377yM6ZSA5oi35ZCO6LWE6YeR56uL5Y2z6L2s5Ye677yM5peg5rOV6L2s5Zue77yM6K+35Yu/5ZCR6ZmM55Sf5Lq65rGH5qy+77yBXCIsXHJcbiAgICAgICAgXCIwNDAyOVwiOiBcIua4qemmqOaPkOekuu+8mumUgOaIt+aTjeS9nOS4jeWPr+aSpOmUgO+8jOivt+ehruWumui/m+ihjOmUgOWNoVwiLFxyXG4gICAgICAgIFwiMDUwMDFcIjogXCLmmK/lkKbnu6fnu63lip7nkIbkuIvkuIDnrJTmtLvmnJ/ovazlrprmnJ/kuJrliqFcIixcclxuICAgICAgICBcIjA1MDAyXCI6IFwi6K+l56yU5a2Q6LSm5oi35pyq5Yiw5pyf77yM5o+Q5YmN5pSv5Y+W5bCG5oyJ5rS75pyf5Yip5oGv6K6h5oGv77yBXCIsXHJcbiAgICAgICAgXCIwNTAwM1wiOiBcIuivt+mAieaLqeS4gOS4quWumuacn+i0puaIt1wiLFxyXG4gICAgICAgIFwiMDUwMDRcIjogXCLljZXkuKrlrZDotKbmiLflvZPml6Xlj6rlhYHorrjlip7nkIbkuIDmrKHpg6jliIbmj5Dlj5ZcIixcclxuICAgICAgICBcIjA1MDA1XCI6IFwi5piv5ZCm57un57ut5Yqe55CG5LiL5LiA56yU5rS75pyf6L2s5a6a5pyf5Lia5YqhXCIsXHJcbiAgICAgICAgXCIwNTAwNlwiOiBcIueQhui0oumdnuWtmOasvu+8jOS6p+WTgeaciemjjumZqe+8jOaKlei1hOmhu+iwqOaFjuOAglwiLFxyXG4gICAgICAgIFwiMDUwMDdcIjogXCLmgqjnmoTpo47pmanor4TkvLDlt7Lov4fmnJ/vvIzmmK/lkKbph43mlrDov5vooYzpo47pmanor4TkvLDvvJ9cIixcclxuICAgICAgICBcIjA1MDA4XCI6IFwi5pys5qyh6aOO6Zmp6K+E5Lyw57uT5p6c6YCC55So5LqO5Z+66YeRLueQhui0ouS4muWKoeOAglwiLFxyXG4gICAgICAgIFwiMDUwMDlcIjogXCLnkIbotKLpnZ7lrZjmrL7vvIzkuqflk4HmnInpo47pmanvvIzmipXotYTpobvosKjmhY7jgIJcIixcclxuICAgICAgICBcIjA1MDEwXCI6IFwi5oKo5bey57uP55CG6LSi5Lqn5ZOB562+57qm77yM5piv5ZCm5L+u5pS55Liq5Lq6562+57qm5L+h5oGv77yfXCIsXHJcbiAgICAgICAgXCIwNTAxMVwiOiBcIuivpeiBlOezu+aWueW8j+W3sue7j+e7keWumuWIsOetvue6puS/oeaBr++8jOS4jeiDvei/m+ihjOS/ruaUuVwiLFxyXG4gICAgICAgIFwiMDUwMTJcIjogXCLnkIbotKLpnZ7lrZjmrL7vvIzkuqflk4HmnInpo47pmanvvIzmipXotYTpobvosKjmhY7jgIJcIixcclxuICAgICAgICBcIjA1MDEzXCI6IFwi5q2k6YeR6aKd5Li66K+V566X6YeR6aKd77yM5LiN5Li65a6e6ZmF5pS255uK6YeR6aKdXCIsXHJcbiAgICAgICAgXCIwNTAxNFwiOiBcIuaCqOi/mOacqumjjumZqeivhOS8sO+8jOivt+WFiOi/m+ihjOWuouaIt+mjjumZqeivhOS8sOS6pOaYk++8jOacrOS6pOaYk+e7k+adn+OAglwiLFxyXG4gICAgICAgIFwiMDUwMTVcIjogXCLmgqjov5jmnKrnrb7nuqbnkIbotKLvvIzor7flhYjov5vooYznkIbotKLkuqflk4Hnrb7nuqbkuqTmmJPvvIzmnKzkuqTmmJPnu5PmnZ/jgIJcIixcclxuICAgICAgICBcIjA1MDE2XCI6IFwi5rip6aao5o+Q56S677ya55CG6LSi5Lqn5ZOB6L+95Yqg55Sz6LSt6LW354K56YeR6aKd5LiN5pS255Sz6LSt6LW354K56YeR6aKd6ZmQ5Yi244CCXCIsXHJcbiAgICAgICAgXCIwNTAxN1wiOiBcIueQhui0oumdnuWtmOasvu+8jOS6p+WTgeaciemjjumZqe+8jOaKlei1hOmhu+iwqOaFjuOAglwiLFxyXG4gICAgICAgIFwiMDUwMThcIjogXCLnkIbotKLpnZ7lrZjmrL7vvIzkuqflk4HmnInpo47pmanvvIzmipXotYTpobvosKjmhY7jgIJcIixcclxuICAgICAgICBcIjA1MDE5XCI6IFwi5piv5ZCm56Gu5a6a5pKk6ZSA6YCJ5Lit55qE5aeU5omY6K6w5b2V77yfXCIsXHJcbiAgICAgICAgXCIwNTAyMFwiOiBcIuaYr+WQpuehruWumuaSpOmUgOatpOadoeWnlOaJmOiusOW9le+8n1wiLFxyXG4gICAgICAgIFwiMDUwMjFcIjogXCLnkIbotKLpnZ7lrZjmrL7vvIzkuqflk4HmnInpo47pmanvvIzmipXotYTpobvosKjmhY7jgIJcIixcclxuICAgICAgICBcIjA1MDIyXCI6IFwi5oKo55qE6aOO6Zmp6K+E5Lyw5bey6L+H5pyf77yM5piv5ZCm6YeN5paw6L+b6KGM6aOO6Zmp6K+E5Lyw77yfXCIsXHJcbiAgICAgICAgXCIwNTAyM1wiOiBcIuaCqOi/mOacquetvue6pueQhui0ou+8jOivt+WFiOi/m+ihjOeQhui0ouS6p+WTgeetvue6puS6pOaYk++8jOacrOS6pOaYk+e7k+adn+OAglwiLFxyXG4gICAgICAgIFwiMDUwMjRcIjogXCLmgqjlt7Lnrb7nuqblpKnlpKnnkIbotKJcIixcclxuICAgICAgICBcIjA1MDI1XCI6IFwi4oCc5aSn5LyX54mI4oCd5LiN5b6X5L2O5LqO5Lq65rCR5biBNeS4h+WFg+aIluWkluW4geetieWAvDEwMDDnvo7lhYPvvIzigJzmipXotYTniYjigJ3kuI3lvpfkvY7kuo7kurrmsJHluIExMOS4h+WFg+OAglwiLFxyXG4gICAgICAgIFwiMDUwMjZcIjogXCLor7fpgInmi6nkuIDkuKrlj4zliKnkuLDlrZDotKbmiLdcIixcclxuICAgICAgICBcIjA1MDI3XCI6IFwi55WZ5a2Y6YeR6aKd5L2O5LqO5pyA5L2O6L2s5a2Y6YeR6aKd77yM6K+356Gu6K6k5piv5ZCm5YWo6YOo6L2s5Ye677yfXCIsXHJcbiAgICAgICAgXCIwNTAyOFwiOiBcIuagueaNruaCqOeahOeUs+ivt++8jOaMieeFp+aCqOiuvuWumueahOadoeS7tu+8jOWwhuaCqOetvue6puWNoei0puaIt+S4rei2hei/h+eVmeWtmOmHkemineS4lOi+vuWIsOacgOWwj+e6pui9rOmHkemineeahOasvumhueaIluaYr+i2hei/h+eVmeWtmOmHkemineeahOWumuminee6pui9rOmHkemine+8jOaMieeFp+S6i+WFiOe6puWumueahOe6pui9rOaWueW8jy7nuqbovazlkajmnJ8u5a2Y5pyf562J6KaB57Sg5Zyo5pel57uI6Ieq5Yqo6L2s5a2Y5Li65a6a5pyf5pW05a2Y5pW05Y+W5a2Y5qy+44CC6K+l56yU5a2Y5qy+5Yiw5pyf5ZCO77yM57O757uf5qC55o2u562+57qm5pe257qm5a6a55qE6L2s5a2Y5qCH5b+X5ZKM5a2Y5pyf6L+b6KGM6L2s5a2Y44CCXCIsXHJcbiAgICAgICAgXCIwNTAyOVwiOiBcIuaCqOS9v+eUqOetvue6puWAn+iusOWNoemAmui/h1BPU+acuuWIt+WNoea2iOi0ueaXtu+8jOWcqOa2iOi0uemHkemineWkp+S6juetvue6puWAn+iusOWNoeS4i+a0u+acn+S4u+i0puaIt+mHkemineS9huWwj+S6juetvue6puWAn+iusOWNoeS4i+a0u+acn+S4u+i0puaIt+S4juWQhOWumuacn+WtmOasvuWtkOi0puaIt+i1hOmHkeaAu+mineeahOaDheWGteS4i++8jOaMieeFp+KAnOWQjuWtmOWFiOWGu+KAneWOn+WImeS+neasoeWGu+e7k+WuouaIt+etvue6puWAn+iusOWNoeS4i+Wumuacn+WtmOasvuWtkOi0puaIt++8jOW5tuS4uuaCqOetvue6puWAn+iusOWNoeS4i+a0u+acn+S4u+i0puaIt+aPkOS+m+S4juWGu+e7k+mHkemineebuOetieeahOa2iOi0uemineW6pu+8jOWQjOaXtuaJo+WHj+a2iOi0uemHkemineOAguaXpee7iOWJjeaCqOWQkeetvue6puWAn+iusOWNoeihpei2s+WGu+e7k+mHkemine+8m+WvueS6juacquaMieaXtuS4jei2s+eahOWGu+e7k+mHkemine+8jOaIkeihjOaMieWumuacn+WtmOasvuWtkOi0puaIt+eahOWGu+e7k+asoeW6j+S+neasoeaPkOWJjemDqOWIhuaUr+WPluaIluiAhemUgOaIt+W3suWGu+e7k+eahOWumuacn+WtmOasvu+8jOWwhuacrOmHkeWSjOeojuWQjuWIqeaBr+i9rOWFpeetvue6puWAn+iusOWNoeS4i+a0u+acn+S4u+i0puaIt+OAglwiLFxyXG4gICAgICAgIFwiMDUwMzBcIjogXCLlgJ/orrDljaHkuIvmtLvmnJ/kuLvotKbmiLfpnIDkv53nlZnnmoTmnIDkvY7kvZnpop3vvIzku6Xmu6HotrPml6XluLjnmoTkuqTmmJPpnIDopoHjgILns7vnu5/lsIbotoXov4fnlZnlrZjph5Hpop3kuJTmu6HotrPnuqbovazmnaHku7bnmoTpg6jliIbovazkuLrnuqblrprmnJ/pmZDnmoTlrprmnJ/lrZjmrL7jgIJcIixcclxuICAgICAgICBcIjA1MDMxXCI6IFwi57O757uf6K6+5a6a55qE5YCf6K6w5Y2h5rS75pyf5Li76LSm5oi35L2Z6aKd6LaF6L+H55WZ5a2Y6YeR6aKd55qE6YOo5YiG77yM57qm6L2s5Li65a6a5pyf5a2Y5qy+55qE5pyA5bCP6YeR6aKd44CC6Iul5rS75pyf5Li76LSm5oi35L2Z6aKd6LaF6L+H55WZ5a2Y6YeR6aKd55qE6YOo5YiG5aSn5LqO562J5LqO6K+l6YeR6aKd77yM57O757uf5oyJ57qm5a6a6L+b6KGM6L2s5a2Y77yM5Y+N5LmL77yM57O757uf5LiN6L+b6KGM6L2s5a2Y44CCXCIsXHJcbiAgICAgICAgXCIwNTAzMlwiOiBcIuezu+e7n+iuvuWumueahOWAn+iusOWNoea0u+acn+S4u+i0puaIt+S9meminei2hei/h+eVmeWtmOmHkemineeahOmDqOWIhu+8jOavj+asoee6pui9rOS4uuWumuacn+WtmOasvueahOWbuuWumumHkemineOAguiLpea0u+acn+S4u+i0puaIt+S9meminei2hei/h+eVmeWtmOmHkemineeahOmDqOWIhuWkp+S6juetieS6juivpemHkemine+8jOezu+e7n+aMiee6puWumui/m+ihjOi9rOWtmO+8jOWPjeS5i++8jOezu+e7n+S4jei/m+ihjOi9rOWtmOOAglwiLFxyXG4gICAgICAgIFwiMDUwMzNcIjogXCLmuKnppqjmj5DnpLrvvJrmiYvmnLrlj7fkuLrpgInloavpoblcIixcclxuICAgICAgICBcIjA1MDM0XCI6IFwi5oKo5bey562+57qm5Y+M5Yip5Liw5Lqn5ZOB44CCXCIsXHJcbiAgICAgICAgXCIwNjAwMVwiOiBcIueQhui0oumdnuWtmOasvu+8jOS6p+WTgeaciemjjumZqe+8jOaKlei1hOmhu+iwqOaFjuOAglwiLFxyXG4gICAgICAgIFwiMDYwMDJcIjogXCLmgqjlt7Lnu4/ln7rph5Hnrb7nuqbvvIzmmK/lkKbkv67mlLnkuKrkurrnrb7nuqbkv6Hmga/vvJ9cIixcclxuICAgICAgICBcIjA2MDAzXCI6IFwi55CG6LSi6Z2e5a2Y5qy+77yM5Lqn5ZOB5pyJ6aOO6Zmp77yM5oqV6LWE6aG76LCo5oWO44CCXCIsXHJcbiAgICAgICAgXCIwNjAwNFwiOiBcIuaYr+WQpuetvue6plhYWOWFrOWPuFRB5Lqn5ZOB77yfXCIsXHJcbiAgICAgICAgXCIwNjAwNVwiOiBcIuivt+i+k+WFpVRB6LSm5Y+3XCIsXHJcbiAgICAgICAgXCIwNjAwNlwiOiBcIuivt+i+k+WFpTEy5L2NVEHotKblj7dcIixcclxuICAgICAgICBcIjA2MDA3XCI6IFwi6K+36YCJ5oup6ZyA6KaB562+57qm55qEVEHkuqflk4FcIixcclxuICAgICAgICBcIjA2MDA4XCI6IFwi55CG6LSi6Z2e5a2Y5qy+77yM5Lqn5ZOB5pyJ6aOO6Zmp77yM5oqV6LWE6aG76LCo5oWO44CCXCIsXHJcbiAgICAgICAgXCIwNjAwOVwiOiBcIua4qemmqOaPkOekuu+8muW9k+WJjeaXtuWIu+S4uumdnuWfuumHkeS6pOaYk+aXtumXtO+8jOaYr+WQpumihOe6puiupOi0rS/nlLPotK3jgJBYWFhYWOOAke+8n1wiLFxyXG4gICAgICAgIFwiMDYwMTBcIjogXCLmgqjov5jmnKrpo47pmanor4TkvLDvvIzor7flhYjov5vooYzlrqLmiLfpo47pmanor4TkvLDkuqTmmJPvvIzmnKzkuqTmmJPnu5PmnZ/jgIJcIixcclxuICAgICAgICBcIjA2MDExXCI6IFwi5oKo6L+Y5pyq562+57qm5Z+66YeR77yM6K+35YWI6L+b6KGM5Z+66YeR562+57qm5Lqk5piT77yM5pys5Lqk5piT57uT5p2f44CCXCIsXHJcbiAgICAgICAgXCIwNjAxMlwiOiBcIuaCqOi/mOacquW8gOmAmlRB6LSm5oi377yM6K+35YWI6L+b6KGM5Z+66YeRVEHnrb7nuqbkuqTmmJPvvIzmnKzkuqTmmJPnu5PmnZ/jgIJcIixcclxuICAgICAgICBcIjA2MDEzXCI6IFwi55CG6LSi6Z2e5a2Y5qy+77yM5Lqn5ZOB5pyJ6aOO6Zmp77yM5oqV6LWE6aG76LCo5oWO44CCXCIsXHJcbiAgICAgICAgXCIwNjAxNFwiOiBcIuaCqOacquW8gOmAmuWumuaKleacjeWKoe+8jOivt+S/ruaUueWfuumHkeetvue6puS/oeaBr+W8gOmAmuWumuaKlVwiLFxyXG4gICAgICAgIFwiMDYwMTVcIjogXCLmgqjmnKrlvIDpgJrmmbrog73lrprmipXmnI3liqHvvIzor7fkv67mlLnln7rph5Hnrb7nuqbkv6Hmga/lvIDpgJrmmbrog73lrprmipVcIixcclxuICAgICAgICBcIjA2MDE2XCI6IFwi5rip6aao5o+Q56S677ya5Z+66YeR6LSt5Lmw5YmN6ZyA5Zyo6K+l5Z+66YeR5YWs5Y+45byA56uL5Z+66YeR6LSm5oi35omN6IO96LSt5Lmw6K+l5Z+66YeR5YWs5Y+455qE5Z+66YeR5Lqn5ZOB44CC54K55Ye744CQ562+57qm44CR5oyJ6ZKu77yM5bCG5Li65oKo5byA56uLVEHotKbmiLfjgILngrnlh7vjgJDkuIrkuIDmraXjgJHmjInpkq7vvIzlsIblj5bmtojotK3kubDln7rph5Hkuqflk4FcIixcclxuICAgICAgICBcIjA2MDE3XCI6IFwi55CG6LSi6Z2e5a2Y5qy+77yM5Lqn5ZOB5pyJ6aOO6Zmp77yM5oqV6LWE6aG76LCo5oWO44CCXCIsXHJcbiAgICAgICAgXCIwNjAxOFwiOiBcIueQhui0oumdnuWtmOasvu+8jOS6p+WTgeaciemjjumZqe+8jOaKlei1hOmhu+iwqOaFjuOAglwiLFxyXG4gICAgICAgIFwiMDYwMTlcIjogXCLnkIbotKLpnZ7lrZjmrL7vvIzkuqflk4HmnInpo47pmanvvIzmipXotYTpobvosKjmhY7jgIJcIixcclxuICAgICAgICBcIjA2MDIwXCI6IFwi5rip6aao5o+Q56S677ya5b2T5YmN5pe25Yi75Li66Z2e5Z+66YeR5Lqk5piT5pe26Ze077yM5piv5ZCm6aKE57qm6LWO5Zue44CQWFhYWFjjgJHvvJ9cIixcclxuICAgICAgICBcIjA2MDIxXCI6IFwi55CG6LSi6Z2e5a2Y5qy+77yM5Lqn5ZOB5pyJ6aOO6Zmp77yM5oqV6LWE6aG76LCo5oWO44CCXCIsXHJcbiAgICAgICAgXCIwNjAyMlwiOiBcIuaYr+WQpuehruWumuaSpOmUgOmAieS4reeahOWnlOaJmOiusOW9le+8n1wiLFxyXG4gICAgICAgIFwiMDYwMjNcIjogXCLmmK/lkKbnoa7lrprmkqTplIDmraTmnaHlp5TmiZjorrDlvZXvvJ9cIixcclxuICAgICAgICBcIjA2MDI0XCI6IFwi5piv5ZCm57un57ut6L+b6KGM5Z+66YeR5aeU5omY5pKk6ZSA77yfXCIsXHJcbiAgICAgICAgXCIwNzAwMVwiOiBcIuaJk+WNsOWksei0pe+8jOivt+iBlOezu+Wkp+WgguS6uuWRmFwiLFxyXG4gICAgICAgIFwiMDcwMDJcIjogXCLmuKnppqjmj5DnpLrvvJrnkIbotKLkuqflk4Hov73liqDnlLPotK3otbfngrnph5Hpop3kuI3mlLbnlLPotK3otbfngrnph5Hpop3pmZDliLbjgIJcIixcclxuICAgICAgICBcIjA3MDAzXCI6IFwi5rip6aao5o+Q56S677ya5Lqn5ZOB5pS255uK546H5Lul6LW35oGv5pel5b2T5aSp5pS255uK546H5Li65YeG44CCXCIsXHJcbiAgICAgICAgXCIwNzAwNFwiOiBcIueQhui0oumdnuWtmOasvu+8jOS6p+WTgeaciemjjumZqe+8jOaKlei1hOmhu+iwqOaFjuOAglwiLFxyXG4gICAgICAgIFwiMDcwMDVcIjogXCLnkIbotKLpnZ7lrZjmrL7vvIzkuqflk4HmnInpo47pmanvvIzmipXotYTpobvosKjmhY7jgIJcIixcclxuICAgICAgICBcIjA3MDA2XCI6IFwi55CG6LSi6Z2e5a2Y5qy+77yM5Lqn5ZOB5pyJ6aOO6Zmp77yM5oqV6LWE6aG76LCo5oWO44CCXCIsXHJcbiAgICAgICAgXCIwNzAwN1wiOiBcIuaCqOeahOWuouaIt+etiee6p+S4jeWMuemFje+8jOivt+mAieaLqeWFtuS7luS6p+WTgeOAglwiLFxyXG4gICAgICAgIFwiMDcwMDhcIjogXCLmgqjnmoTpo47pmannrYnnuqfkuI3ljLnphY3vvIzmmK/lkKbph43mlrDpo47pmanor4TkvLDvvJ9cIixcclxuICAgICAgICBcIjA3MDA5XCI6IFwi55CG6LSi6Z2e5a2Y5qy+77yM5Lqn5ZOB5pyJ6aOO6Zmp77yM5oqV6LWE6aG76LCo5oWO44CCXCIsXHJcbiAgICAgICAgXCIwODAwMVwiOiBcIua4qemmqOaPkOekuu+8muivt+WmguWunuWhq+WGmeavj+S4gOmhue+8jOWhq+WGmeS4jeinhOiMg+WwhuW9seWTjeaCqOS4i+asoei0reaxh++8jOWmgueUqOmAlOmAiemhueaXoOazlea7oei2s+aCqOeahOmcgOaxgu+8jOivt+WIsOafnOWPsOWKnueQhuOAglwiLFxyXG4gICAgICAgIFwiMDgwMDJcIjogXCLlpJbmsYfniYzku7fmj5DnpLrvvJrlpJbmsYfniYzku7flrp7ml7blj5jmm7TvvIzkuI7luILlnLrku7fmoLzmjqXovajvvIzns7vnu5/miYDmmL7npLrnmoTmsYfnjofkuLrlj4LogIPniYzku7fvvIzku6XmnIDnu4jmiJDkuqTmsYfnjofkuLrlh4bjgIJcIixcclxuICAgICAgICBcIjA4MDAzXCI6IFwi5aSW5rGH54mM5Lu35o+Q56S677ya5aSW5rGH54mM5Lu35a6e5pe25Y+Y5pu077yM5LiO5biC5Zy65Lu35qC85o6l6L2o77yM57O757uf5omA5pi+56S655qE5rGH546H5Li65Y+C6ICD54mM5Lu377yM5Lul5pyA57uI5oiQ5Lqk5rGH546H5Li65YeG44CCXCIsXHJcbiAgICAgICAgXCIwODAwNFwiOiBcIuaxh+asvumHkemineS4jeiDvei2hei/h+etieWAvDXkuIfnvo7lhYPph5Hpop3jgIJcIixcclxuICAgICAgICBcIjA4MDA1XCI6IFwi5omL57ut6LS55ZKM55S15oql6LS55rGH5qy+5Lq65pSv5LuY77yM5omL57ut6LS55Y+K55S15oql6LS55LiO5rGH5qy+5pys6YeR5Zyo5ZCM5LiA6LSm5oi35omj5pS244CCXCIsXHJcbiAgICAgICAgXCIwODAwNlwiOiBcIuaJi+e7rei0ueWSjOeUteaKpei0ueeUseaUtuasvuS6uuaUr+S7mO+8jOS7peaxh+asvuW4geenjeiuoeeul++8jOWcqOaxh+asvumHkemineS4reaJo+aUtuOAglwiLFxyXG4gICAgICAgIFwiMDgwMDdcIjogXCLlpoLku5jmsYfotYTph5HmnaXmupDkuo7otK3msYfvvIzku5jmsYfnlKjpgJTkuI7ljp/jgIrkuKrkurrotK3msYfnlLPor7fkuabjgIvloavmiqXnmoTotK3msYfnlKjpgJTmmK/lkKbkuIDoh7TjgIJcIixcclxuICAgICAgICBcIjA4MDA4XCI6IFwi546w6ZKe6aG76L2s5Li6546w5rGH5omN5Y+v5Lul55So5LqO5rGH5Ye65rGH5qy+XCIsXHJcbiAgICAgICAgXCIwODAwOVwiOiBcIuaCqOS5n+WPr+S7peeCueWHu+S4i+S4gOatpeiBlOWKqOi0reaxh+S6pOaYk1wiLFxyXG4gICAgICAgIFwiMDgwMTBcIjogXCLpkp7ovazmsYflsIbkvJrkuqfnlJ/msYflhZHmjZ/nm4rvvIzlubbkuJTkuLrmoLnmja7lrp7ml7bmsYfnjofov5vooYzlrp7ml7bkuqTmmJPvvIzor7fov5vooYzlip7nkIbjgIJcIixcclxuICAgICAgICBcIjA5MDAxXCI6IFwi6K+35Yqh5b+F5q2j56Gu5aGr5YaZXCIsXHJcbiAgICAgICAgXCIwOTAwMlwiOiBcIuWhq+WGmeS/oeaBr+acieivr++8jOivt+i/lOWbnuS/ruaUue+8jOi+ueahhuW3suagh+e6olwiLFxyXG4gICAgICAgIFwiMDkwMDNcIjogXCLor7fph43mlrDpgInmi6nkuIDlvKDmnKrlip7nkIbov4fnrKzkuInmlrnlrZjnrqHnmoTlgJ/orrDljaHljaHlj7dcIixcclxuICAgICAgICBcIjA5MDA0XCI6IFwi5peg56ym5ZCI5p2h5Lu255qE5YCf6K6w5Y2hXCIsXHJcbiAgICAgICAgXCIwOTAwNVwiOiBcIuWIhuacn+mHkemineS4jeW+l+S9juS6jjIwMDDlhYPkurrmsJHluIEu5LiN5b6X6auY5LqONTAwMDDlhYPkurrmsJHluIHjgILliIbmnJ/kuIDnu4/nlLPor7fmiJDlip/vvIzkuI3lj6/mkqTplIDjgIJcIixcclxuICAgICAgICBcIjEwMDAxXCI6IFwi5oKo55qE6aOO6Zmp562J57qn5LiN5aSf6LSt5Lmw5q2k5Lqn5ZOB77yM5piv5ZCm6YeN5paw6L+b6KGM6aOO6Zmp6K+E5Lyw77yfXCIsXHJcbiAgICAgICAgXCIxMDAwMlwiOiBcIuaCqOeahOmjjumZqeivhOS8sOW3sui/h+acn++8jOaYr+WQpumHjeaWsOi/m+ihjOmjjumZqeivhOS8sO+8n1wiLFxyXG4gICAgICAgIFwiMTAwMDNcIjogXCLlgaXlurflkYrnn6XmgqjmmK/lkKbmgqPmnIkuLi5cIixcclxuICAgICAgICBcIjEwMDA0XCI6IFwi6K+35oKo56Gu6K6k5piv5ZCm5a2Y5Zyo5Lul5LiK5YGl5bq35o+Q56S65omA6L+w5YaF5a6577yfXCIsXHJcbiAgICAgICAgXCIxMDAwNVwiOiBcIua4qemmqOaPkOekuu+8muWtmOWcqOebuOWFs+WBpeW6t+mXrumimO+8jOaXoOazlei0reS5sOivpeS6p+WTge+8gVwiLFxyXG4gICAgICAgIFwiMTAwMDZcIjogXCLmmK/lkKbnoa7orqTotK3kubDmraTmrL7kv53pmankuqflk4HvvJ9cIixcclxuICAgICAgICBcIjEwMDA3XCI6IFwi6ZW/5pyf6K+36L6T5YWlOTk5OTk5OTlcIixcclxuICAgICAgICBcIjEwMDA4XCI6IFwi5oKo6L+Y5pyq6aOO6Zmp6K+E5Lyw77yM5piv5ZCm5YWI6L+b6KGM6aOO6Zmp6K+E5Lyw77yfXCIsXHJcbiAgICAgICAgXCIxMDAwOVwiOiBcIua4qemmqOaPkOekuu+8mjEu54q56LGr5pyf5pKk5Y2V6ZKI5a+554q56LGr5pyf5YaF77yI5YW35L2T5pe26Ze05Lul5YWs5Y+46KeE5a6a5Li65YeG77yJ55qE5L+d5Y2V6L+b6KGM5pKk5L+d5pON5L2c77ybMi7otYTph5HliLDotKbml7bpl7Tor7flj4Lnhafkv53pmanlhazlj7jmj5DnpLrvvIzkuI3lkIzkv53pmanlhazlj7jkuqflk4HmnInmiYDkuI3lkIzvvJszLuS/nemZqeWFrOWPuOWwhuagueaNruS/nemZqeadoeasvuehruWumuaYr+WQpuaUtuWPluW3peacrOi0ue+8mzQu5oqV5L+d5ZCO5Y+Y5pu06ZO26KGM6LSm5Y+35bCG5a+56K+l5Yqf6IO95Lqn55Sf5b2x5ZON77yM5aaC5LiN5oiQ5Yqf77yM6K+35Yiw5L+d6Zmp5YWs5Y+45p+c5Y+w5Yqe55CGXCIsXHJcbiAgICAgICAgXCIxMDAxMFwiOiBcIua4qemmqOaPkOekuu+8mjEu6aKG5Y+WL+mAgOS/nemSiOWvueeKueixq+acn+Wklu+8iOWFt+S9k+aXtumXtOS7peWFrOWPuOinhOWumuS4uuWHhu+8ieeahOS/neWNlei/m+ihjOmAgOS/neaTjeS9nO+8mzIu6LWE6YeR5Yiw6LSm5pe26Ze06K+35Y+C54Wn5L+d6Zmp5YWs5Y+45o+Q56S677yM5LiN5ZCM5L+d6Zmp5YWs5Y+45Lqn5ZOB5pyJ5omA5LiN5ZCM77ybMy7kv53pmanlhazlj7jlsIbmoLnmja7kv53pmanmnaHmrL7mlLblj5bpgIDkv53miYvnu63otLnvvIzmlLbotLnmoIflh4bor7flj4Lop4Hkuqflk4HnmoTigJzotLnnlKjnu5PmnoTigJ3vvJs0LuaKleS/neWQjuWPmOabtOmTtuihjOi0puWPt+WwhuWvueivpeWKn+iDveS6p+eUn+W9seWTje+8jOWmguS4jeaIkOWKn++8jOivt+WIsOS/nemZqeWFrOWPuOafnOWPsOWKnueQhlwiLFxyXG4gICAgICAgIFwiMTAwMTFcIjogXCLmuKnppqjmj5DnpLrvvJoxLuW9k+aXpeaSpOWNleS4uuaSpOmUgOW9k+WkqeaKleS/neaIkOWKn+eahOS/neWNle+8jOW9k+aXpeaSpOWNleWwhuS4jeaJo+mZpOaJi+e7rei0ue+8mzIu5b2T5pel5pKk5Y2V5Yiw6LSm5pe26Ze06ZyA5qC55o2u5Yac6KGM5pKk5Y2V5pON5L2c6YCA5qy+5pe26Ze06L+b6KGM56Gu6K6k77ybMy7mipXkv53lkI7lj5jmm7TkuobotKbmiLfkv6Hmga/kvJrpgKDmiJDor6XkuqTmmJPlpLHotKXvvIzor7fliLDkv53pmanlhazlj7jmn5zlj7Dmn6Xor6Llj4rlip7nkIbnm7jlhbPkuJrliqHjgIJcIixcclxuICAgICAgICBcIjEwMDEyXCI6IFwi5piv5ZCm56Gu6K6k5o+Q5Lqk77yfXCIsXHJcbiAgICAgICAgXCIxMDAxM1wiOiBcIua4qemmqOaPkOekuu+8mui1hOmHkeWwhuWunuaXtuWIsOi0puOAglwiLFxyXG4gICAgICAgIFwiMTAwMTRcIjogXCLmuKnppqjmj5DnpLrvvJrotYTph5HliLDotKbml7bpl7TnlLHkv53pmanlhazlj7jnoa7lrprjgIJcIixcclxuICAgICAgICBcIjExMDAxXCI6IFwi5q+P5Lq65Y+v6aKE57qmMS0z5p6a77yM6aKE57qm5ZCO5LiN5Y+v5L+u5pS5XCIsXHJcbiAgICAgICAgXCIxMTAwMlwiOiBcIuacrOe9keeCueWJqeS9memineW6pjUwMOaemlwiLFxyXG4gICAgICAgIFwiMTEwMDNcIjogXCLmnKznvZHngrnlj6/pooTnuqbpop3luqblt7LnlKjlroxcIixcclxuICAgICAgICBcIjExMDA0XCI6IFwi6K+36YCJ5oup6aKE57qm5pWw6YePXCIsXHJcbiAgICAgICAgXCIxMTAwNVwiOiBcIui0uuWygeW4geWFkeaNoua0u+WKqOW3sue7k+adn++8jOaXoOazleafpeivolwiLFxyXG4gICAgICAgIFwiMTEwMDZcIjogXCLor7flnKjlhZHmjaLml6XmnJ/lh63pooTnuqbor4Hku7blkozlhZHmjaLnoIHliLDnvZHngrnlhZHmjaLjgIJcIixcclxuICAgICAgICBcIjExMDA3XCI6IFwi5rip6aao5o+Q56S677ya5Lqk5piT5oiQ5Yqf5bCG5riF6Zmk5oKo55qE6aKE57qm6K6w5b2V77yBXCIsXHJcbiAgICAgICAgXCI5OTAwMVwiOiBcIjQxSDk5OeaMh+WumueQhui0oumHkemineS4jeiDveWwj+S6jjjkuIflhYPkurrmsJHluIHvvIFcIlxyXG4gICAgfSxcclxuICAgIFwiZXJyb3JzXCI6IHtcclxuXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgXCJiYWJlbC1wb2x5ZmlsbFwiXHJcbnZhciBWdWUgPSByZXF1aXJlKCd2dWUnKVxyXG5cclxudmFyIFZ1ZUkxOG4gPSByZXF1aXJlKCcuL2NvbXBvbmVudHMvdnVlLWkxOG4nKVxyXG5WdWUudXNlKFZ1ZUkxOG4pXHJcbmNvbnN0IGkxOG4gPSBuZXcgVnVlSTE4bih7XHJcbiAgICBsb2NhbGU6ICd6aF9jbicsXHJcbiAgICBtZXNzYWdlczoge1xyXG4gICAgICAgIHpoX2NuOiByZXF1aXJlKCcuL2kxOG4vemhfY24uanNvbicpLFxyXG4gICAgICAgIGVuX3VzOiByZXF1aXJlKCcuL2kxOG4vZW5fdXMuanNvbicpXHJcbiAgICB9XHJcbn0pXHJcblxyXG52YXIgVnVlQXdlc29tZVN3aXBlciA9IHJlcXVpcmUoJy4vY29tcG9uZW50cy92dWUtYXdlc29tZS1zd2lwZXInKVxyXG5WdWUudXNlKFZ1ZUF3ZXNvbWVTd2lwZXIpXHJcblxyXG52YXIgY29tcG9uZW50cyA9IFtcclxuICAgIFsn6aG15aS0JywgJ3gtaGVhZGVyJywgJ1BhcnQnLCByZXF1aXJlKCcuL2NvbXBvbmVudHMveC1oZWFkZXIudnVlJyldLFxyXG4gICAgWyflr7zoiKonLCAneC1uYXYnLCAnUGFydCcsIHJlcXVpcmUoJy4vY29tcG9uZW50cy94LW5hdi52dWUnKV0sXHJcbiAgICBbJ+W4g+WxgCcsICd4LWxheW91dC1tYWluJywgJ1BhcnQnLCByZXF1aXJlKCcuL2NvbXBvbmVudHMveC1sYXlvdXQtbWFpbi52dWUnKV0sXHJcbiAgICBbJ+mhteiEmicsICd4LWZvb3RlcicsICdQYXJ0JywgcmVxdWlyZSgnLi9jb21wb25lbnRzL3gtZm9vdGVyLnZ1ZScpXSxcclxuICAgIFsn6LCD6K+VJywgJ3gtZGVidWctcGFnZScsICdQYXJ0JywgcmVxdWlyZSgnLi9jb21wb25lbnRzL3gtZGVidWctcGFnZS52dWUnKV0sXHJcbiAgICBbJ+ecgeW4guWMuuS4iee6p+iBlOWKqCcsICd4LXByb3ZpbmNlJywgJ1BhcnQnLCByZXF1aXJlKCcuL2NvbXBvbmVudHMveC1wcm92aW5jZS52dWUnKV0sXHJcbiAgICBbJ0RpYWxvZycsICd4LWRpYWxvZycsICdQYXJ0JywgcmVxdWlyZSgnLi9jb21wb25lbnRzL3gtZGlhbG9nLnZ1ZScpXSxcclxuICAgIFsn5Li76I+c5Y2V5aS0JywgJ3gtbWFpbi1oZWFkZXInLCAnUGFydCcsIHJlcXVpcmUoJy4vY29tcG9uZW50cy94LW1haW4taGVhZGVyLnZ1ZScpXSxcclxuICAgIFsnTWFueScsICd4LW1hbnktY2hvb3NlJywgJ1BhcnQnLCByZXF1aXJlKCcuL2NvbXBvbmVudHMveC1tYW55LWNob29zZS52dWUnKV0sXHJcbiAgICBbJ+W8ueWHuueql+WPoycsICd4LWRpYWxvZy1zZWxlY3QnLCAnUGFydCcsIHJlcXVpcmUoJy4vY29tcG9uZW50cy94LWRpYWxvZy1zZWxlY3QudnVlJyldLFxyXG4gICAgWyflvLnlh7rnqpflj6MyJywgJ3gtZGlhbG9nLXNlbGVjdEZvckQwMicsICdQYXJ0JywgcmVxdWlyZSgnLi9jb21wb25lbnRzL3gtZGlhbG9nLXNlbGVjdEZvckQwMi52dWUnKV0sXHJcbiAgICBbJ0xldmVsJywgJ3gtbXVsdGktbGV2ZWwnLCAnUGFydCcsIHJlcXVpcmUoJy4vY29tcG9uZW50cy94LW11bHRpLWxldmVsLnZ1ZScpXSxcclxuICAgIFsn5YiG6aG1JywgJ3gtcGFnaW5hdGlvbicsICdQYXJ0JywgcmVxdWlyZSgnLi9jb21wb25lbnRzL3gtcGFnaW5hdGlvbi52dWUnKV0sXHJcblxyXG4gICAgWyfnrqHnkIbpobXlpLQnLCAnYWRtLWhlYWRlcicsICdQYXJ0JywgcmVxdWlyZSgnLi9jb21wb25lbnRzL2FkbS1oZWFkZXIudnVlJyldLFxyXG4gICAgWyfnrqHnkIblip/og73pobXlpLQnLCAnaW4tYWRtLWhlYWRlcicsICdQYXJ0JywgcmVxdWlyZSgnLi9jb21wb25lbnRzL2luLWFkbS1oZWFkZXIudnVlJyldLFxyXG4gICAgWyfmmK/lkKbnu6fnu63kuqTmmJMnLCAneC1wb3AtaWZjb250aW51ZScsICdQYXJ0JywgcmVxdWlyZSgnLi9jb21wb25lbnRzL3gtaWZjb250aW51ZS52dWUnKV0sXHJcbiAgICBbJ+mAmueUqOihqOagvOaYvuekuue7hOS7ticsICd4LWNvbXRhYicsICdQYXJ0JywgcmVxdWlyZSgnLi9jb21wb25lbnRzL3gtY29tdGFiLnZ1ZScpXSxcclxuICAgIFsn6YCa55So6KGo5qC85pi+56S657uE5Lu2MicsICd4LWNvbXRhYjInLCAnUGFydCcsIHJlcXVpcmUoJy4vY29tcG9uZW50cy94LWNvbXRhYjIudnVlJyldLFxyXG4gICAgWyfpgJrnlKjooajmoLzmnInor6bmg4XmjInpkq4nLCAneC1jb210YWItZGV0JywgJ1BhcnQnLCByZXF1aXJlKCcuL2NvbXBvbmVudHMveC1jb210YWItZGV0LnZ1ZScpXVxyXG5dXHJcbmNvbXBvbmVudHMuZm9yRWFjaChpdGVtID0+IHtcclxuICAgIFZ1ZS5jb21wb25lbnQoaXRlbVsxXSwgaXRlbVszXSlcclxufSlcclxuXHJcbiAgICB2YXIgY29sbGVjdGlvbnMgPSBbXTtcclxuICAgIGNvbGxlY3Rpb25zID0gQXBwQ29sbGVjdGlvbnMgOyAgICAgXHJcbiAgICBjb2xsZWN0aW9ucy5wdXNoKFsnQTAxX1BVQkxJQycsICAgICAgICAgIHJlcXVpcmUoJy4vQTAxX2NvbW1vbi5qcycpXSk7XHJcbiAgICBjb2xsZWN0aW9ucy5wdXNoKFsnQjAxX0NBUkQnLCAgICAgICAgICAgIHsgZGVmYXVsdDogQjAxX3BhZ2VzIH1dKTtcclxuICAgIGNvbGxlY3Rpb25zLnB1c2goWydCMDJfRUJBTksnLCAgICAgICAgICAgeyBkZWZhdWx0OiBCMDJfcGFnZXMgfV0pO1xyXG4gICAgY29sbGVjdGlvbnMucHVzaChbJ0IwM19UUkFOU0ZFUicsICAgICAgICB7IGRlZmF1bHQ6IEIwM19wYWdlcyB9XSk7XHJcbiAgICBjb2xsZWN0aW9ucy5wdXNoKFsnQjA0X0FDQ09VTlQnLCAgICAgICAgIHsgZGVmYXVsdDogQjA0X3BhZ2VzIH1dKTtcclxuICAgIGNvbGxlY3Rpb25zLnB1c2goWydCMDVfRklOQU5DRScsICAgICAgICAgeyBkZWZhdWx0OiBCMDVfcGFnZXMgfV0pO1xyXG4gICAgY29sbGVjdGlvbnMucHVzaChbJ0IwNl9GVU5EJywgICAgICAgICAgICB7IGRlZmF1bHQ6IEIwNl9wYWdlcyB9XSk7XHJcbiAgICBjb2xsZWN0aW9ucy5wdXNoKFsnQjA3X1FVRVJZJywgICAgICAgICAgIHsgZGVmYXVsdDogQjA3X3BhZ2VzIH1dKTtcclxuICAgIGNvbGxlY3Rpb25zLnB1c2goWydCMDhfRk9SRVhDJywgICAgICAgICAgeyBkZWZhdWx0OiBCMDhfcGFnZXMgfV0pO1xyXG4gICAgY29sbGVjdGlvbnMucHVzaChbJ0IwOV9DUkVESVRDQVJEJywgICAgICB7IGRlZmF1bHQ6IEIwOV9wYWdlcyB9XSk7XHJcbiAgICBjb2xsZWN0aW9ucy5wdXNoKFsnQjEwX0lOU1VSQU5DRScsICAgICAgIHsgZGVmYXVsdDogQjEwX3BhZ2VzIH1dKTtcclxuICAgIGNvbGxlY3Rpb25zLnB1c2goWydCMTFfQ09NQ09JTicsICAgICAgICAgeyBkZWZhdWx0OiBCMTFfcGFnZXMgfV0pO1xyXG4gICAgY29sbGVjdGlvbnMucHVzaChbJ0IxMl9CUkNIRkVBVFVSRScsICAgICB7IGRlZmF1bHQ6IEIxMl9wYWdlcyB9XSk7XHJcbiAgICBjb2xsZWN0aW9ucy5wdXNoKFsnQjE0X0JJTEwnLCAgICAgICAgICAgIHsgZGVmYXVsdDogQjE0X3BhZ2VzIH1dKTtcclxuICAgIGNvbGxlY3Rpb25zLnB1c2goWydCMTVfTE9BTicsICAgICAgICAgICAgeyBkZWZhdWx0OiBCMTVfcGFnZXMgfV0pO1xyXG5cclxuICAgIGNvbGxlY3Rpb25zLnB1c2goWydEMDFfQURNSU4nLCAgICAgICAgICAgeyBkZWZhdWx0OiBEMDFfcGFnZXN9XSk7XHJcblxyXG4gICAgY29sbGVjdGlvbnMucHVzaChbJ0MwMF9CUkNIRkVBVFVSRScsICAgICB7IGRlZmF1bHQ6IHdpbmRvdy5DMDBfcGFnZXMgPyB3aW5kb3cuQzAwX3BhZ2VzIDogW10gfV0pO1xyXG5cdGNvbGxlY3Rpb25zLnB1c2goWydDMTBfMDBHRycsICAgICAgICAgICAgeyBkZWZhdWx0OiB3aW5kb3cuQzEwXzAwR0dfcGFnZXMgPyB3aW5kb3cuQzEwXzAwR0dfcGFnZXMgOiBbXSAgfV0pO1xyXG4gICAgY29sbGVjdGlvbnMucHVzaChbJ0MxMF8wMVhKJywgICAgICAgICAgICB7IGRlZmF1bHQ6IHdpbmRvdy5DMTBfMDFYSl9wYWdlcyA/IHdpbmRvdy5DMTBfMDFYSl9wYWdlcyA6IFtdICB9XSk7XHJcbiAgICBjb2xsZWN0aW9ucy5wdXNoKFsnQzEwXzAyQ0QnLCAgICAgICAgICAgIHsgZGVmYXVsdDogd2luZG93LkMxMF8wMkNEX3BhZ2VzID8gd2luZG93LkMxMF8wMkNEX3BhZ2VzIDogW10gIH1dKTtcclxuICAgIGNvbGxlY3Rpb25zLnB1c2goWydDMTBfMDNUUycsICAgICAgICAgICAgeyBkZWZhdWx0OiB3aW5kb3cuQzEwXzAzVFNfcGFnZXMgPyB3aW5kb3cuQzEwXzAzVFNfcGFnZXMgOiBbXSAgfV0pO1xyXG4gICAgY29sbGVjdGlvbnMucHVzaChbJ0MxMF8wNFpaJywgICAgICAgICAgICB7IGRlZmF1bHQ6IHdpbmRvdy5DMTBfMDRaWl9wYWdlcyA/IHdpbmRvdy5DMTBfMDRaWl9wYWdlcyA6IFtdICB9XSk7XHJcbiAgICBjb2xsZWN0aW9ucy5wdXNoKFsnQzEwXzA1RFknLCAgICAgICAgICAgIHsgZGVmYXVsdDogd2luZG93LkMxMF8wNURZX3BhZ2VzID8gd2luZG93LkMxMF8wNURZX3BhZ2VzIDogW10gIH1dKTtcclxuICAgIGNvbGxlY3Rpb25zLnB1c2goWydDMTBfMDZMQycsICAgICAgICAgICAgeyBkZWZhdWx0OiB3aW5kb3cuQzEwXzA2TENfcGFnZXMgPyB3aW5kb3cuQzEwXzA2TENfcGFnZXMgOiBbXSAgfV0pO1xyXG4gICAgY29sbGVjdGlvbnMucHVzaChbJ0MxMF8wN0pKJywgICAgICAgICAgICB7IGRlZmF1bHQ6IHdpbmRvdy5DMTBfMDdKSl9wYWdlcyA/IHdpbmRvdy5DMTBfMDdKSl9wYWdlcyA6IFtdICB9XSk7XHJcbiAgICBjb2xsZWN0aW9ucy5wdXNoKFsnQzEwXzA4WFknLCAgICAgICAgICAgIHsgZGVmYXVsdDogd2luZG93LkMxMF8wOFhZX3BhZ2VzID8gd2luZG93LkMxMF8wOFhZX3BhZ2VzIDogW10gIH1dKTtcclxuICAgIGNvbGxlY3Rpb25zLnB1c2goWydDMTBfMDlKRicsICAgICAgICAgICAgeyBkZWZhdWx0OiB3aW5kb3cuQzEwXzA5SkZfcGFnZXMgPyB3aW5kb3cuQzEwXzA5SkZfcGFnZXMgOiBbXSAgfV0pO1xyXG4gICAgY29sbGVjdGlvbnMucHVzaChbJ0MxMF8xMEtLJywgICAgICAgICAgICB7IGRlZmF1bHQ6IHdpbmRvdy5DMTBfMTBLS19wYWdlcyA/IHdpbmRvdy5DMTBfMTBLS19wYWdlcyA6IFtdICB9XSk7XHJcbiAgICBjb2xsZWN0aW9ucy5wdXNoKFsnQzEwXzk5R0wnLCAgICAgICAgICAgIHsgZGVmYXVsdDogd2luZG93LkMxMF85OUdMX3BhZ2VzID8gd2luZG93LkMxMF85OUdMX3BhZ2VzIDogW10gIH1dKTtcclxuXHJcbnZhciBwYWdlcyA9IFtdO1xyXG5jb2xsZWN0aW9ucy5mb3JFYWNoKGNvbGxlY3Rpb24gPT4ge1xyXG4gICAgY29sbGVjdGlvblsxXS5kZWZhdWx0LmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgICAgVnVlLmNvbXBvbmVudChpdGVtWzFdLCBpdGVtWzNdKVxyXG4gICAgICAgIHBhZ2VzLnB1c2goaXRlbSlcclxuICAgIH0pXHJcbn0pXHJcblxyXG5cclxudmFyIG1lbnUgPSByZXF1aXJlKCcuLi9qc29uL21lbnUuanNvbicpXHJcbnZhciBkZW1vUG9vbCA9IFtdXHJcblxyXG52YXIgQXBwID0gcmVxdWlyZSgnLi9hcHAudnVlJylcclxuaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUuanMnXHJcbnZhciB2bSA9IG5ldyBWdWUoe1xyXG4gICAgaTE4bixcclxuICAgIHN0b3JlLFxyXG4gICAgZGF0YToge1xyXG4gICAgICAgIGN1cnJlbnRWaWV3OiAnLi9jdXN0X21haW5fT3V0U2VydmljZS5odG1sJyxcclxuICAgICAgICBjdXJyZW50UG9wdXA6ICcuL2N1c3RvbWVyL2NvbW1vbi9jdXN0X2NvbV9Qb3B1cERlbW8uaHRtbCcsXHJcbiAgICAgICAgdGhlbWU6ICdkZWZhdWx0JyxcclxuICAgICAgICB0aGVtZUltZ1BhdGg6ICd0aGVtZXMvZGVmYXVsdCcsXHJcbiAgICAgICAgdGhlbWVzOiB3aW5kb3cuZ190aGVtZXMgPyB3aW5kb3cuZ190aGVtZXMgOiBbXSxcclxuICAgICAgICBjb2xsZWN0aW9uczogY29sbGVjdGlvbnMsXHJcbiAgICAgICAgcGFnZXM6IHBhZ2VzLFxyXG4gICAgICAgIG1lbnU6IG1lbnUsXHJcbiAgICAgICAgbG9naW5TdGF0dXM6IGZhbHNlLCAvLyDnmbvlvZXnirbmgIFcclxuICAgICAgICBleGl0U3RhdHVzOiB0cnVlLCAvLyDpgIDlh7rnirbmgIFcclxuICAgICAgICB0aW1lU3RhdHVzOiB0cnVlLCAvLyDlgJLorqHml7bmmL7npLpcclxuICAgICAgICBWSVBTdGF0dXM6IFwiMFwiLCAvLyDlrqLmiLfnrYnnuqdcclxuICAgICAgICBjb3VudERvd246IDAsXHJcbiAgICAgICAgY2FyZFN0YXR1czogZmFsc2UsXHJcbiAgICAgICAgc2FsZVNob3c6IGZhbHNlLCAvLyDokKXplIDlsI/kv6HlsIHmmL7npLpcclxuICAgICAgICBiYXJyYWdlOiAnJywgLy8g5by55bmV77ya55Sf5pel56Wd6LS6XHJcbiAgICAgICAgU2FsZVByb2RTdW1TaG93OiBmYWxzZSxcclxuICAgICAgICBkZWJ1ZzogZmFsc2UsXHJcbiAgICAgICAgZGVtb1Bvb2w6IHdpbmRvdy5nX3Bvb2wgPyB3aW5kb3cuZ19wb29sIDogZGVtb1Bvb2wsXHJcbiAgICAgICAgbWVzc2FnZTogJ0hlbGxvLCB3b3JsZCcsXHJcbiAgICAgICAgU2FsZVByb2RTdW06IFwiXCIsXHJcbiAgICAgICAgTWFjaGluZVR5cGU6IFwiM1wiLFxyXG4gICAgICAgIEFkbWluTmFtZTogXCJcIlxyXG4gICAgfSxcclxuICAgIHJlbmRlcjogZnVuY3Rpb24oY3JlYXRlRWxlbWVudCkge1xyXG4gICAgICAgIHJldHVybiBjcmVhdGVFbGVtZW50KEFwcClcclxuICAgIH0sXHJcbiAgICBtb3VudGVkKCkge1xyXG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgICAgICBEYXRhVG9vbHMuZ2V0KFwiR0RfQTAxX1RoZW1lfEdEX0EwMV9CdXNUaXB8Q19BMDFfRGV2X01hY2hpbmVUeXBlXCIsIGZ1bmN0aW9uKGRhdGEpIHtcclxuICAgICAgICAgICAgc2VsZi50aGVtZSA9IGRhdGFbMF07IC8vIOeVjOmdouS4u+mimFxyXG4gICAgICAgICAgICBzZWxmLk1hY2hpbmVUeXBlID0gZGF0YVsyXTtcclxuICAgICAgICAgICAgdmFyIHRpcHMgPSBKU09OLnBhcnNlKGRhdGFbMV0pOyAvLyDnlYzpnaLmj5DnpLror61cclxuICAgICAgICAgICAgdmFyIGkxOG5fdGlwcyA9IHNlbGYuJGkxOG4uX3ZtLiRkYXRhLm1lc3NhZ2VzLnpoX2NuLnRpcDsgLy8g5YG355yLaTE4buW6leWxguaVsOaNrue7k+aehFxyXG4gICAgICAgICAgICBmb3IgKHZhciB0aXAgaW4gdGlwcykge1xyXG4gICAgICAgICAgICAgICAgaTE4bl90aXBzW3RpcF0gPSB0aXBzW3RpcF07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIHdhdGNoOiB7XHJcbiAgICAgICAgdGhlbWUobmV3VmFsdWUpIHtcclxuICAgICAgICAgICAgdmFyIGNvbmYgPSBDaGFuZ2VUaGVtZShuZXdWYWx1ZSk7XHJcbiAgICAgICAgICAgIHRoaXMudGhlbWVJbWdQYXRoID0gY29uZlszXTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICAgIGltZ1BhdGgoZmlsZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gYCR7dGhpcy50aGVtZUltZ1BhdGh9LyR7ZmlsZX1gXHJcbiAgICAgICAgfSxcclxuICAgICAgICBnZXRJbWdQYXRoKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gXCJNYWNoaW5lL1wiICsgdGhpcy5NYWNoaW5lVHlwZS50b1N0cmluZygpICsgXCIvXCI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufSlcclxuXHJcbi8vIOa1j+iniOWZqOiwg+ivleiuv+mXrlxyXG53aW5kb3cudm0gPSB2bVxyXG52bS4kbW91bnQoXCIjdnVlQXBwXCIpIiwiaW1wb3J0IFZ1ZSBmcm9tICd2dWUnXHJcbmltcG9ydCBWdWV4IGZyb20gJ3Z1ZXgnXHJcblxyXG5WdWUudXNlKFZ1ZXgpXHJcblxyXG5jb25zdCBzdG9yZSA9IG5ldyBWdWV4LlN0b3JlKHtcclxuICAgIHN0YXRlOiB7XHJcbiAgICAgICAgcG9vbDoge30sXHJcbiAgICAgICAgaG90bGluZTogJzk1NTk5JyxcclxuICAgICAgICBkb2N1bWVudFR5cGVPcHRpb25zOiB7XHJcbiAgICAgICAgICAgIFwiMTEwMDI1XCI6IFwi5aSW5Zu95oqk54WnXCIsXHJcbiAgICAgICAgICAgIFwiMTEwMDIxXCI6IFwi5Y+w5rm+5bGF5rCR5p2l5b6A5aSn6ZmG6YCa6KGM6K+BXCIsXHJcbiAgICAgICAgICAgIFwiMTEwMDE5XCI6IFwi5riv5r6z5bGF5rCR5p2l5b6A5YaF5Zyw6YCa6KGM6K+BXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIGFjY291bnRUeXBlT3B0aW9uczoge30sLy9BLUnnsbvotKbmiLfvvIxCLUlJ57G76LSm5oi3XHJcbiAgICAgICAgQ29kQWNjb3VudDp7fSwvL+i0puaIt+aAp+i0qDrmtLvmnJ8v5pW05pW0L+WPjOWIqeS4sFxyXG4gICAgICAgIENvZEN1cnJlbmN5Ont9LC8v5biB56eNXHJcbiAgICAgICAgQ29kSW5kRHJhZjp7fSwvL+mSnuaxh+aAp+i0qFxyXG4gICAgICAgIGFjY291bnRTdGF0dXM6e30sLy/otKbmiLfnirbmgIFcclxuICAgICAgICBlbmRTdGF0ZTogMFxyXG4gICAgfSxcclxuICAgIG11dGF0aW9uczoge1xyXG4gICAgICAgIHJlc2V0UG9vbCAoc3RhdGUsIGRhdGEpIHtcclxuICAgICAgICAgICAgc3RhdGUucG9vbCA9IGRhdGFcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNldFBvb2wgKHN0YXRlLCBwYXlsb2FkKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwic2V0UG9vbCBcIiArIHBheWxvYWQua2V5ICsgXCIgIFwiICsgcGF5bG9hZC52YWwpXHJcbiAgICAgICAgICAgIHN0YXRlLnBvb2xbcGF5bG9hZC5rZXldID0gcGF5bG9hZC52YWxcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgYWN0aW9uczoge1xyXG4gICAgICAgIGluaXRQb29sICh7IGNvbW1pdCwgc3RhdGV9LCBkYXRhKSB7XHJcbiAgICAgICAgICAgIGNvbW1pdCgncmVzZXRQb29sJywge30pXHJcbiAgICAgICAgICAgIGlmIChkYXRhLmhhc093blByb3BlcnR5KCdzZXRLZXlzJykpIHtcclxuICAgICAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBkYXRhLnNldEtleXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBjb21taXQoe3R5cGU6XCJzZXRQb29sXCIsIGtleTpkYXRhLnNldEtleXNbaV0sIHZhbDpcIlwifSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoZGF0YS5oYXNPd25Qcm9wZXJ0eSgnZ2V0S2V5cycpKSB7XHJcbiAgICAgICAgICAgICAgICBQbGF0Zm9ybUFkYXB0ZXIuZ2V0RGF0YShkYXRhLmdldEtleXMsIGZ1bmN0aW9uIChkYXRhMikge1xyXG5cdFx0XHRcdFx0dmFyIG9qYiA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBkYXRhLmdldEtleXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy9jb21taXQoe3R5cGU6XCJzZXRQb29sXCIsIGtleTpkYXRhLmdldEtleXNbaV0sIHZhbDpkYXRhMlsgZGF0YS5nZXRLZXlzW2ldIF19KVxyXG5cdFx0XHRcdFx0XHRvamJbZGF0YS5nZXRLZXlzW2ldXSA9IGRhdGEyWyBkYXRhLmdldEtleXNbaV0gXTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblx0XHRcdFx0XHRjb21taXQoJ3Jlc2V0UG9vbCcsIG9qYik7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBpbml0UG9vbDIgKHsgY29tbWl0LCBzdGF0ZX0sIGRhdGEpIHtcclxuICAgICAgICAgICAgLy9jb21taXQoJ3Jlc2V0UG9vbCcsIHt9KVxyXG4gICAgICAgICAgICBWdWUuc2V0KGRhdGEsICdwb29sJywge30pXHJcbiAgICAgICAgICAgIGlmIChkYXRhLmhhc093blByb3BlcnR5KCdzZXRLZXlzJykpIHtcclxuICAgICAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBkYXRhLnNldEtleXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBWdWUuc2V0KGRhdGEucG9vbCwgZGF0YS5zZXRLZXlzW2ldLCBcIlwiKVxyXG4gICAgICAgICAgICAgICAgICAgIC8vY29tbWl0KHt0eXBlOlwic2V0UG9vbFwiLCBrZXk6ZGF0YS5zZXRLZXlzW2ldLCB2YWw6XCJcIn0pXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGRhdGEuaGFzT3duUHJvcGVydHkoJ2dldEtleXMnKSkge1xyXG4gICAgICAgICAgICAgICAgUGxhdGZvcm1BZGFwdGVyLmdldERhdGEoZGF0YS5nZXRLZXlzLCBmdW5jdGlvbiAoZGF0YTIpIHtcclxuXHRcdFx0XHRcdC8vdmFyIG9qYiA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBkYXRhLmdldEtleXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy9jb21taXQoe3R5cGU6XCJzZXRQb29sXCIsIGtleTpkYXRhLmdldEtleXNbaV0sIHZhbDpkYXRhMlsgZGF0YS5nZXRLZXlzW2ldIF19KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvL29qYltkYXRhLmdldEtleXNbaV1dID0gZGF0YTJbIGRhdGEuZ2V0S2V5c1tpXSBdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBWdWUuc2V0KGRhdGEucG9vbCwgZGF0YS5nZXRLZXlzW2ldLCBkYXRhMlsgZGF0YS5nZXRLZXlzW2ldIF0pXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cdFx0XHRcdFx0Ly9jb21taXQoJ3Jlc2V0UG9vbCcsIG9qYik7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBmZXRjaCAoeyBjb21taXQgfSwgbmFtZXMpIHtcclxuICAgICAgICAgICAgUGxhdGZvcm1BZGFwdGVyLmdldERhdGEobmFtZXMsIGZ1bmN0aW9uIChkYXRhKXtcclxuICAgICAgICAgICAgICAgIGNvbW1pdCgncmVzZXRQb29sJywgZGF0YSlcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9LFxyXG4gICAgICAgIHN1Ym1pdCAoeyBjb21taXQsIHN0YXRlIH0sIG5hbWVzKSB7XHJcbiAgICAgICAgICAgIHZhciBwYWlycyA9IHt9XHJcbiAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBuYW1lcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgcGFpcnNbbmFtZXNbaV1dID0gc3RhdGUucG9vbFtuYW1lc1tpXV1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBQbGF0Zm9ybUFkYXB0ZXIuc2V0RGF0YShwYWlycylcclxuICAgICAgICB9LFxyXG4gICAgICAgIHN1Ym1pdDIgKHsgY29tbWl0LCBzdGF0ZSB9LCBwYXlsb2FkKSB7XHJcbiAgICAgICAgICAgIHZhciBwYWlycyA9IHt9XHJcbiAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBwYXlsb2FkLm5hbWVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBwYWlyc1twYXlsb2FkLm5hbWVzW2ldXSA9IHBheWxvYWQucG9vbFtwYXlsb2FkLm5hbWVzW2ldXVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFBsYXRmb3JtQWRhcHRlci5zZXREYXRhKHBhaXJzKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZXhpdFNjZW5lIChzdGF0ZSwgZXhpdCkge1xyXG4gICAgICAgICAgICB2YXIgZXZlbnQgPSBleGl0LnNwbGl0KFwiX1wiKVsxXVxyXG4gICAgICAgICAgICBQbGF0Zm9ybUFkYXB0ZXIuc2VuZEV2ZW50KGV2ZW50KVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25DYW5jZWwgKHN0YXRlKSB7XHJcbiAgICAgICAgICAgIFBsYXRmb3JtQWRhcHRlci5zZW5kRXZlbnQoXCJDQU5DRUxcIilcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uQ29udGludWUgKHN0YXRlKSB7XHJcbiAgICAgICAgICAgIFBsYXRmb3JtQWRhcHRlci5zZW5kRXZlbnQoXCJDT05USU5VRVwiKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25GYWlsIChzdGF0ZSkge1xyXG4gICAgICAgICAgICBQbGF0Zm9ybUFkYXB0ZXIuc2VuZEV2ZW50KFwiRkFJTFwiKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25UaW1lb3V0IChzdGF0ZSkge1xyXG4gICAgICAgICAgICBQbGF0Zm9ybUFkYXB0ZXIuc2VuZEV2ZW50KFwiVElNRU9VVFwiKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25Ib21lIChzdGF0ZSkge1xyXG4gICAgICAgICAgICBQbGF0Zm9ybUFkYXB0ZXIuc2VuZEV2ZW50KFwiSE9NRVwiKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25FeGl0IChzdGF0ZSkge1xyXG4gICAgICAgICAgICBQbGF0Zm9ybUFkYXB0ZXIuc2VuZEV2ZW50KFwiRVhJVEFETUlOXCIpXHJcbiAgICAgICAgfSxcclxuXHRcdG9uQmFjayhzdGF0ZSl7XHJcblx0XHRcdFBsYXRmb3JtQWRhcHRlci5zZW5kRXZlbnQoXCJCQUNLXCIpXHJcblx0XHR9XHJcbiAgICB9XHJcbn0pXHJcblxyXG5leHBvcnQgZGVmYXVsdCBzdG9yZVxyXG4iXX0=
